unsigned char *sub_119DAC4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unsigned char *v4;
  int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t vars8;

  v4 = (unsigned char *)__dst;
  v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    v7 = *(void *)(a1 + 24);
    *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    v10 = *(void *)(a1 + 32);
    *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    v16 = *(void **)(v15 + 8);
    v17 = *(void *)(v15 + 16);
  }
  else
  {
    v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_119DC68(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_119DD08()
{
  return 1;
}

void *sub_119DD10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.ItemId");
}

uint64_t sub_119DD20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2497E80;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_119DD9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_2497F00;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(_OWORD *)(v2 + 152) = 0u;
  *(_OWORD *)(v2 + 168) = 0u;
  *(_OWORD *)(v2 + 180) = 0u;
  return result;
}

uint64_t sub_119DE70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2497F80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 60) = 0u;
  return result;
}

double sub_119DF10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_2498000;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  return result;
}

uint64_t sub_119DFA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2498080;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_119E048(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2498100;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_119E0C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2498180;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_119E140(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119E1E0(uint64_t a1)
{
  sub_119E140(a1);

  operator delete();
}

uint64_t sub_119E218(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_119E260(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v7 = (void *)(a1 + 8);
  while (1)
  {
    v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      v19 = v8 + 2;
LABEL_29:
      *(void *)v24 = v19;
      *(_DWORD *)(a1 + 32) = v20;
      goto LABEL_30;
    }
    uint64_t v22 = sub_188C0D0((uint64_t)v8, v20);
    *(void *)v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_37;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      v17 = (uint64_t *)*v17;
    }
    v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
    v15 = (void *)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)v24 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      v8 = *(char **)v24;
    }
    v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_24;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  *(void *)v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_119E43C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_119E584(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_119E644(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_119E6FC()
{
  return 1;
}

void *sub_119E704@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.SubPremiseParameters");
}

uint64_t sub_119E714(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 120);
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_11DB030((void *)(a1 + 96));
  sub_1889DE8((void *)(a1 + 72));
  sub_1889DE8((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119E7F0(uint64_t a1)
{
  sub_119E714(a1);

  operator delete();
}

uint64_t sub_119E828(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v49 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    return *(void *)v49;
  }
  v48 = (uint64_t *)(a1 + 8);
  uint64_t v6 = (uint64_t **)(a1 + 72);
  unsigned int v7 = (uint64_t **)(a1 + 48);
  unint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v49 + 1);
    unsigned int v10 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v49, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v49 + 2);
      }
    }
    *(void *)v49 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_64;
        }
        BOOL v13 = v9 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)v49 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v19 = v18;
            v19[1] = sub_3A6EDC;
            void *v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            v17 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v18);
            uint64_t v14 = *(char **)v49;
          }
          BOOL v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)v49 = v13;
          if (!v13) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_72;
          }
        }
      case 2u:
        if (v10 != 18) {
          goto LABEL_64;
        }
        int v20 = v9 - 1;
        while (1)
        {
          int v21 = (char *)(v20 + 1);
          *(void *)v49 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            v24 = *(std::string **)&v22[2 * v23 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v26 = v25;
            v26[1] = sub_3A6EDC;
            void *v25 = 0;
            v25[1] = 0;
            v25[2] = 0;
            v24 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v25);
            int v21 = *(char **)v49;
          }
          int v20 = sub_188C244(v24, v21, (uint64_t)a3);
          *(void *)v49 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 18) {
            goto LABEL_72;
          }
        }
      case 3u:
        if (v10 != 26) {
          goto LABEL_64;
        }
        v27 = v9 - 1;
        while (1)
        {
          v28 = (char *)(v27 + 1);
          *(void *)v49 = v27 + 1;
          v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            v31 = *(std::string **)&v29[2 * v30 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v33 = v32;
            v33[1] = sub_3A6EDC;
            void *v32 = 0;
            v32[1] = 0;
            v32[2] = 0;
            v31 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v32);
            v28 = *(char **)v49;
          }
          v27 = sub_188C244(v31, v28, (uint64_t)a3);
          *(void *)v49 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 26) {
            goto LABEL_72;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_64;
        }
        v34 = v9 - 1;
        while (1)
        {
          v35 = (unsigned __int8 *)(v34 + 1);
          *(void *)v49 = v34 + 1;
          v36 = *(_DWORD **)(a1 + 112);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 104), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 104) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_119F3AC(*(void *)(a1 + 96));
            uint64_t v38 = sub_188CDC8(a1 + 96, v39);
            v35 = *(unsigned __int8 **)v49;
          }
          v34 = (char *)sub_119ED34(a3, v38, v35);
          *(void *)v49 = v34;
          if (!v34) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 34) {
            goto LABEL_72;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v40 = *(void *)(a1 + 8);
        v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          v41 = (uint64_t *)*v41;
        }
        v42 = (void *)(a1 + 120);
        goto LABEL_63;
      case 6u:
        if (v10 != 50) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v43 = *(void *)(a1 + 8);
        v41 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          v41 = (uint64_t *)*v41;
        }
        v42 = (void *)(a1 + 128);
LABEL_63:
        v44 = (std::string *)sub_1880F84(v42, v41);
        v45 = (void *)sub_188C244(v44, *(char **)v49, (uint64_t)a3);
        goto LABEL_71;
      default:
LABEL_64:
        if (v10) {
          BOOL v46 = (v10 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v48)
          {
            v47 = (std::string *)((*v48 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v47 = (std::string *)sub_188DBD8(v48);
            uint64_t v9 = *(char **)v49;
          }
          v45 = sub_1885AC0(v10, v47, v9, a3);
LABEL_71:
          *(void *)v49 = v45;
          if (!v45) {
            return 0;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            return *(void *)v49;
          }
          continue;
        }
        if (!v9) {
          return 0;
        }
        a3[10].i32[0] = v10 - 1;
        return *(void *)v49;
    }
  }
}

uint64_t sub_119ED34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119E260(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_119EDC4(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          uint64_t v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      uint64_t v15 = *(void **)(*(void *)(a1 + 64) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          uint64_t v15 = (void *)*v15;
        }
        v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(unsigned int *)(a1 + 80);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      int v21 = *(void **)(*(void *)(a1 + 88) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_36;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v22)
      {
        *__dst = 26;
        __dst[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          int v21 = (void *)*v21;
        }
        uint64_t v23 = __dst + 2;
        memcpy(v23, v21, v22);
        __dst = &v23[v22];
        goto LABEL_34;
      }
LABEL_36:
      __dst = (char *)sub_188A868(a3, 3, (uint64_t)v21, __dst);
LABEL_34:
      v19 += 8;
    }
    while (v20 != v19);
  }
  int v24 = *(_DWORD *)(a1 + 104);
  if (v24)
  {
    for (int i = 0; i != v24; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 112) + 8 * i + 8);
      *__dst = 34;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      __dst[1] = v27;
      if (v27 > 0x7F) {
        v28 = sub_188A9CC(v27, __dst + 1);
      }
      else {
        v28 = __dst + 2;
      }
      __dst = sub_119E43C(v26, (unint64_t)v28, a3);
    }
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if (v29) {
    __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v29 & 2) != 0) {
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return __dst;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(__dst, v33, (int)v34);
    __dst += v35;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, __dst);
}

uint64_t sub_119F144(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    int64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(unsigned int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  if ((int)v14 >= 1)
  {
    int64_t v16 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v15 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      --v14;
    }
    while (v14);
  }
  uint64_t v20 = *(int *)(a1 + 104);
  uint64_t v21 = v15 + v20;
  uint64_t v22 = *(void *)(a1 + 112);
  if (v22) {
    uint64_t v23 = (uint64_t *)(v22 + 8);
  }
  else {
    uint64_t v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = sub_119E584(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  int v27 = *(_DWORD *)(a1 + 16);
  if ((v27 & 3) != 0)
  {
    if (v27)
    {
      unint64_t v28 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
      uint64_t v30 = *(void *)(v28 + 8);
      if ((v29 & 0x80u) == 0) {
        uint64_t v30 = v29;
      }
      v21 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v27 & 2) != 0)
    {
      unint64_t v31 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
      uint64_t v33 = *(void *)(v31 + 8);
      if ((v32 & 0x80u) == 0) {
        uint64_t v33 = v32;
      }
      v21 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if (v34)
  {
    unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v36 + 31) < 0) {
      uint64_t v37 = *(void *)(v36 + 16);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 31);
    }
    v21 += v37;
  }
  *(_DWORD *)(a1 + 20) = v21;
  return v21;
}

uint64_t sub_119F394()
{
  return 1;
}

void *sub_119F39C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "revgeo.OverrideParameters");
}

uint64_t sub_119F3AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498200;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_119F434(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_2498280;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = a1;
  result[13] = 0;
  result[14] = 0;
  result[15] = &qword_2550250;
  result[16] = &qword_2550250;
  return result;
}

uint64_t sub_119F4F4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252C5F0 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119F5AC(uint64_t a1)
{
  sub_119F4F4(a1);

  operator delete();
}

unsigned char *sub_119F5E4(unsigned char *result)
{
  int v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_119F640(uint64_t a1, char *a2, int32x2_t *a3)
{
  int64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    int64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_15C1918((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = sub_1198F14(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    int64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_119F798(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_119F8A8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_119F930(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      uint64_t v5 = sub_15C1918((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_253F1A0;
    }
    sub_15B0E24(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_119F9D8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_119FA04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TransitReverseGeocodeParameters");
}

uint64_t sub_119FA14(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252C610 && *(void *)(a1 + 40))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_119FAD4(uint64_t a1)
{
  sub_119FA14(a1);

  operator delete();
}

unsigned char *sub_119FB0C(unsigned char *result)
{
  int v1 = result;
  *((_DWORD *)result + 6) = 0;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 5));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_119FB6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_15C1918((uint64_t)v22);
      *(void *)(a1 + 40) = v21;
      unsigned int v7 = v23;
    }
    uint64_t v14 = sub_1198F14(a3, v21, (unsigned __int8 *)v7);
LABEL_39:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v23 = v15 + 1;
      uint64_t v16 = v15[1];
      if (v15[1] < 0)
      {
        int v17 = v16 + (v15[2] << 7);
        uint64_t v16 = (v17 - 128);
        if (v15[2] < 0)
        {
          uint64_t v15 = (char *)sub_188C138((uint64_t)(v15 + 1), (v17 - 128));
          uint64_t v16 = v18;
        }
        else
        {
          v15 += 3;
        }
      }
      else
      {
        v15 += 2;
      }
      uint64_t v23 = v15;
      uint64_t v19 = *(unsigned int *)(a1 + 24);
      if (v19 == *(_DWORD *)(a1 + 28))
      {
        int v20 = v19 + 1;
        sub_188CA54((unsigned int *)(a1 + 24), v19 + 1);
        *(void *)(*(void *)(a1 + 32) + 8 * v19) = v16;
        uint64_t v15 = v23;
      }
      else
      {
        *(void *)(*(void *)(a1 + 32) + 8 * v19) = v16;
        int v20 = v19 + 1;
      }
      *(_DWORD *)(a1 + 24) = v20;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
        goto LABEL_40;
      }
    }
  }
  if (v8 == 18)
  {
    uint64_t v14 = (char *)sub_188C2DC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
    goto LABEL_39;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_39;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_119FDC8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 40);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v6, v8, a3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unint64_t v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_119FF80(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_15B0D90(*(void *)(a1 + 40));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11A0018(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    unsigned int v8 = *(uint64_t (****)())(a2 + 40);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v9 = *(void *)(a1 + 40);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (void *)*v11;
      }
      uint64_t v9 = sub_15C1918((uint64_t)v11);
      *(void *)(a1 + 40) = v9;
      unsigned int v8 = *(uint64_t (****)())(a2 + 40);
    }
    if (v8) {
      unint64_t v12 = v8;
    }
    else {
      unint64_t v12 = &off_253F1A0;
    }
    sub_15B0E24(v9, (uint64_t)v12);
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11A0110(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11A013C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TransitReverseGeocodeResult");
}

void *sub_11A014C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB1BC(a1 + 5);
  sub_11DB13C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A01D8(void *a1)
{
  sub_11A014C(a1);

  operator delete();
}

uint64_t sub_11A0210(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*(void *)(result + 32) + 8);
    do
    {
      int v4 = *v3++;
      uint64_t result = (uint64_t)sub_119F5E4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15BAAF0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  unsigned int v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_11A02B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 100)
      {
        if (v8 == 34)
        {
          uint64_t v14 = v7 - 2;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 2);
            uint64_t v26 = v14 + 2;
            unint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_15C2114(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_11A058C(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *(_WORD *)v14 != 1698) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        int v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_11A1348(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          int v20 = sub_11A04FC(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_11A04FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119F640(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11A058C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15BAB38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A061C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_119F798(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *(_WORD *)__dst = 1698;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[2] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 2);
      }
      else {
        uint64_t v15 = __dst + 3;
      }
      __dst = sub_15BAD4C(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_11A07E4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_119F8A8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + 2 * v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15BAE94(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_11A08E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_11DB2BC((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_11DB348((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11A0A18(uint64_t a1)
{
  if (!sub_11A0A80(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15BAF9C(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

uint64_t sub_11A0A80(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_15B0F18(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_11A0AF0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TransitReverseGeocodeRequest");
}

void *sub_11A0B00(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB23C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A0B80(void *a1)
{
  sub_11A0B00(a1);

  operator delete();
}

unsigned char *sub_11A0BB8(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_119FB0C(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = v1 + 8;
  *((_DWORD *)v5 + 10) = 0;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11A0C3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_11A13C0(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, (uint64_t)v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = sub_11A0E98(a3, v18, v15);
          uint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      uint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        uint64_t v20 = v7 + 2;
LABEL_34:
        uint64_t v26 = v20;
      }
      if (sub_13E78E4(v21))
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      else
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_11A0E98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_119FB6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11A0F28(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_119FDC8(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11A10EC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_119FF80(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11A11D4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DB3C4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(_DWORD *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11A12C0(uint64_t a1)
{
  return sub_11A12C8(a1 + 24);
}

uint64_t sub_11A12C8(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_15B0F18(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_11A1338@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.transit.TransitReverseGeocodeResponse");
}

void *sub_11A1348(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2498300;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_11A13C0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_2498380;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  return result;
}

uint64_t sub_11A1458(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2498400;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_11A14FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2498480;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

BOOL sub_11A1598(unsigned int a1)
{
  return a1 < 3;
}

void *sub_11A15A4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A1628(void *a1)
{
  sub_11A15A4(a1);

  operator delete();
}

uint64_t sub_11A1660(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0x3FF0000000000000;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A1694(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v39 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1]) & 1) == 0)
  {
    int v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = v39 + 1;
      unsigned int v9 = *v39;
      if (*v39 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          int v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          int v8 = v39 + 2;
        }
      }
      uint64_t v39 = v8;
      switch(v9 >> 3)
      {
        case 0x13u:
          if (v9 != 152) {
            goto LABEL_62;
          }
          v5 |= 2u;
          unint64_t v12 = v8 + 1;
          uint64_t v13 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            unint64_t v12 = v8 + 2;
LABEL_13:
            uint64_t v39 = v12;
            *(unsigned char *)(a1 + 57) = v13 != 0;
            goto LABEL_70;
          }
          unint64_t v31 = (char *)sub_188C138((uint64_t)v8, v13);
          uint64_t v39 = v31;
          *(unsigned char *)(a1 + 57) = v32 != 0;
          if (v31) {
            goto LABEL_70;
          }
          goto LABEL_75;
        case 0x14u:
          if (v9 == 160)
          {
            uint64_t v18 = v8 - 2;
            while (1)
            {
              uint64_t v39 = v18 + 2;
              unint64_t v19 = v18[2];
              if (v18[2] < 0)
              {
                unint64_t v19 = v19 + (v18[3] << 7) - 128;
                if (v18[3] < 0) {
                  uint64_t v18 = (char *)sub_188C138((uint64_t)(v18 + 2), v19);
                }
                else {
                  v18 += 4;
                }
              }
              else
              {
                v18 += 3;
              }
              uint64_t v39 = v18;
              unint64_t v20 = -(uint64_t)(v19 & 1) ^ (v19 >> 1);
              uint64_t v21 = *(unsigned int *)(a1 + 24);
              if (v21 == *(_DWORD *)(a1 + 28))
              {
                int v22 = v21 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v21 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v21) = v20;
                uint64_t v18 = v39;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v21) = v20;
                int v22 = v21 + 1;
              }
              *(_DWORD *)(a1 + 24) = v22;
              if (!v18) {
                goto LABEL_75;
              }
              if (*(void *)a3 <= (unint64_t)v18 || *(_WORD *)v18 != 416) {
                goto LABEL_70;
              }
            }
          }
          if (v9 == 162)
          {
            uint64_t v35 = (unsigned int *)(a1 + 24);
LABEL_61:
            unint64_t v36 = sub_188C30C(v35, (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_62:
            if (v9) {
              BOOL v37 = (v9 & 7) == 4;
            }
            else {
              BOOL v37 = 1;
            }
            if (v37)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_75:
              uint64_t v39 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = v39;
            }
            unint64_t v36 = sub_1885AC0(v9, v38, v8, a3);
          }
          uint64_t v39 = (char *)v36;
          if (!v36) {
            goto LABEL_75;
          }
LABEL_70:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 0x15u:
          if (v9 == 168)
          {
            int v23 = v8 - 2;
            while (1)
            {
              uint64_t v39 = v23 + 2;
              unint64_t v24 = v23[2];
              if (v23[2] < 0)
              {
                unint64_t v24 = v24 + (v23[3] << 7) - 128;
                if (v23[3] < 0) {
                  int v23 = (char *)sub_188C138((uint64_t)(v23 + 2), v24);
                }
                else {
                  v23 += 4;
                }
              }
              else
              {
                v23 += 3;
              }
              uint64_t v39 = v23;
              unint64_t v25 = -(uint64_t)(v24 & 1) ^ (v24 >> 1);
              uint64_t v26 = *(unsigned int *)(a1 + 40);
              if (v26 == *(_DWORD *)(a1 + 44))
              {
                int v27 = v26 + 1;
                sub_188CA54((unsigned int *)(a1 + 40), v26 + 1);
                *(void *)(*(void *)(a1 + 48) + 8 * v26) = v25;
                int v23 = v39;
              }
              else
              {
                *(void *)(*(void *)(a1 + 48) + 8 * v26) = v25;
                int v27 = v26 + 1;
              }
              *(_DWORD *)(a1 + 40) = v27;
              if (!v23) {
                goto LABEL_75;
              }
              if (*(void *)a3 <= (unint64_t)v23 || *(_WORD *)v23 != 424) {
                goto LABEL_70;
              }
            }
          }
          if (v9 != 170) {
            goto LABEL_62;
          }
          uint64_t v35 = (unsigned int *)(a1 + 40);
          goto LABEL_61;
        case 0x16u:
          if (v9 != 177) {
            goto LABEL_62;
          }
          uint64_t v29 = *(void *)v8;
          unint64_t v28 = v8 + 8;
          v5 |= 4u;
          *(void *)(a1 + 64) = v29;
          goto LABEL_52;
        case 0x17u:
          if (v9 != 185) {
            goto LABEL_62;
          }
          uint64_t v30 = *(void *)v8;
          unint64_t v28 = v8 + 8;
          v5 |= 8u;
          *(void *)(a1 + 72) = v30;
LABEL_52:
          uint64_t v39 = v28;
          goto LABEL_70;
        default:
          if (v9 >> 3 != 5 || v9 != 40) {
            goto LABEL_62;
          }
          v5 |= 1u;
          uint64_t v15 = v8 + 1;
          uint64_t v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          uint64_t v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v16);
            uint64_t v39 = v33;
            *(unsigned char *)(a1 + 56) = v34 != 0;
            if (!v33) {
              goto LABEL_75;
            }
          }
          else
          {
            uint64_t v15 = v8 + 2;
LABEL_19:
            uint64_t v39 = v15;
            *(unsigned char *)(a1 + 56) = v16 != 0;
          }
          goto LABEL_70;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v39;
}

unsigned char *sub_11A1AE0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 56);
    unsigned char *v4 = 40;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 57);
    *(_WORD *)int v4 = 408;
    v4[2] = v8;
    v4 += 3;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *(_WORD *)int v4 = 416;
      unint64_t v12 = (2 * v11) ^ (v11 >> 63);
      v4[2] = v12;
      if (v12 > 0x7F)
      {
        v4[2] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[3] = v12 >> 7;
        v4 += 4;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v15 = *(unsigned int *)(a1 + 40);
  if ((int)v15 >= 1)
  {
    for (uint64_t j = 0; j != v15; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8 * j);
      *(_WORD *)int v4 = 424;
      unint64_t v18 = (2 * v17) ^ (v17 >> 63);
      v4[2] = v18;
      if (v18 > 0x7F)
      {
        v4[2] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[3] = v18 >> 7;
        v4 += 4;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 64);
    *(_WORD *)int v4 = 433;
    *(void *)(v4 + 2) = v21;
    v4 += 10;
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 72);
    *(_WORD *)int v4 = 441;
    *(void *)(v4 + 2) = v22;
    v4 += 10;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_11A1DCC(uint64_t a1)
{
  uint64_t v2 = sub_188D5F8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  uint64_t result = sub_188D5F8((unsigned int *)(a1 + 40)) + v2 + 2 * (*(unsigned int *)(a1 + 40) + v3);
  int v5 = *(_DWORD *)(a1 + 16);
  if ((v5 & 0xF) != 0)
  {
    uint64_t v6 = result + 2;
    if ((v5 & 1) == 0) {
      uint64_t v6 = result;
    }
    if ((v5 & 2) != 0) {
      v6 += 3;
    }
    if ((v5 & 4) != 0) {
      v6 += 10;
    }
    if ((v5 & 8) != 0) {
      uint64_t result = v6 + 10;
    }
    else {
      uint64_t result = v6;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11A1E88(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[8 * v9], *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 16);
  if ((v11 & 0xF) != 0)
  {
    if (v11)
    {
      v3[2].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 56);
      if ((v11 & 2) == 0)
      {
LABEL_8:
        if ((v11 & 4) == 0) {
          goto LABEL_9;
        }
        goto LABEL_18;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_8;
    }
    v3[2].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 57);
    if ((v11 & 4) == 0)
    {
LABEL_9:
      if ((v11 & 8) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v11;
        goto LABEL_12;
      }
LABEL_10:
      v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_18:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v11 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A1FC8()
{
  return 1;
}

void *sub_11A1FD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DirReq_DebugParameters");
}

void *sub_11A1FE0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 4));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A206C(void *a1)
{
  sub_11A1FE0(a1);

  operator delete();
}

uint64_t sub_11A20A4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A20C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    return v32;
  }
  uint64_t v6 = (unsigned int *)(a1 + 48);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 29)
      {
        unint64_t v19 = v8 - 1;
        unsigned int v20 = *v6;
        do
        {
          uint64_t v21 = v19 + 1;
          uint64_t v32 = v19 + 1;
          int v22 = *(_DWORD *)(v19 + 1);
          if (v20 == *(_DWORD *)(a1 + 52))
          {
            sub_188C80C((unsigned int *)(a1 + 48), v20 + 1);
            *(_DWORD *)(*(void *)(a1 + 56) + 4 * v20) = v22;
            uint64_t v21 = v32;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 56) + 4 * v20) = v22;
          }
          *uint64_t v6 = ++v20;
          unint64_t v19 = v21 + 4;
          uint64_t v32 = v21 + 4;
        }
        while (*(void *)a3 > (unint64_t)(v21 + 4) && *v19 == 29);
        goto LABEL_61;
      }
      if (v9 == 26)
      {
        uint64_t v29 = (unsigned __int8 *)sub_188C33C(a1 + 48, v8, a3);
        goto LABEL_60;
      }
    }
    else if (v12 == 2)
    {
      if (v9 == 16)
      {
        uint64_t v23 = v8 - 1;
        while (1)
        {
          uint64_t v32 = v23 + 1;
          int v24 = v23[1];
          if (v23[1] < 0)
          {
            int v25 = v24 + (v23[2] << 7);
            int v24 = v25 - 128;
            if (v23[2] < 0)
            {
              uint64_t v23 = (char *)sub_188C0D0((uint64_t)(v23 + 1), v25 - 128);
              int v24 = v26;
            }
            else
            {
              v23 += 3;
            }
          }
          else
          {
            v23 += 2;
          }
          uint64_t v32 = v23;
          uint64_t v27 = *(unsigned int *)(a1 + 32);
          if (v27 == *(_DWORD *)(a1 + 36))
          {
            int v28 = v27 + 1;
            sub_188C80C((unsigned int *)(a1 + 32), v27 + 1);
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v27) = v24;
            uint64_t v23 = v32;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v27) = v24;
            int v28 = v27 + 1;
          }
          *(_DWORD *)(a1 + 32) = v28;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 16) {
            goto LABEL_61;
          }
        }
      }
      if (v9 == 18)
      {
        uint64_t v29 = sub_188C2CC((unsigned int *)(a1 + 32), (unsigned __int8 *)v8, (uint64_t)a3);
        goto LABEL_60;
      }
    }
    else if (v12 == 1)
    {
      if (v9 == 8)
      {
        unint64_t v13 = v8 - 1;
        while (1)
        {
          uint64_t v32 = v13 + 1;
          uint64_t v14 = v13[1];
          if (v13[1] < 0)
          {
            int v15 = v14 + (v13[2] << 7);
            uint64_t v14 = (v15 - 128);
            if (v13[2] < 0)
            {
              unint64_t v13 = (char *)sub_188C138((uint64_t)(v13 + 1), (v15 - 128));
              uint64_t v14 = v16;
            }
            else
            {
              v13 += 3;
            }
          }
          else
          {
            v13 += 2;
          }
          uint64_t v32 = v13;
          uint64_t v17 = *(unsigned int *)(a1 + 16);
          if (v17 == *(_DWORD *)(a1 + 20))
          {
            int v18 = v17 + 1;
            sub_188CA54((unsigned int *)(a1 + 16), v17 + 1);
            *(void *)(*(void *)(a1 + 24) + 8 * v17) = v14;
            unint64_t v13 = v32;
          }
          else
          {
            *(void *)(*(void *)(a1 + 24) + 8 * v17) = v14;
            int v18 = v17 + 1;
          }
          *(_DWORD *)(a1 + 16) = v18;
          if (!v13) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 8) {
            goto LABEL_61;
          }
        }
      }
      if (v9 == 10)
      {
        uint64_t v29 = sub_188C2DC((unsigned int *)(a1 + 16), (unsigned __int8 *)v8, (uint64_t)a3);
        goto LABEL_60;
      }
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v7)
    {
      unint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v32;
    }
    uint64_t v29 = sub_1885AC0(v9, v31, v8, a3);
LABEL_60:
    uint64_t v32 = (char *)v29;
    if (!v29) {
      return 0;
    }
LABEL_61:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      return v32;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return v32;
  }
  return 0;
}

char *sub_11A2468(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 24) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v13 = *(_DWORD *)(*(void *)(a1 + 40) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 48);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 4 * v16;
    do
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      int v19 = *(_DWORD *)(*(void *)(a1 + 56) + v17);
      *__dst = 29;
      *(_DWORD *)(__dst + 1) = v19;
      __dst += 5;
      v17 += 4;
    }
    while (v18 != v17);
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return __dst;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(__dst, v23, (int)v24);
    __dst += v25;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v23, v24, __dst);
}

unint64_t sub_11A26B0(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  unint64_t result = v2
         + sub_188D4F0((unsigned int *)(a1 + 32))
         + v3
         + *(unsigned int *)(a1 + 32)
         + (unint64_t)*(unsigned int *)(a1 + 48)
         + 4 * *(unsigned int *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 64) = result;
  return result;
}

std::string *sub_11A273C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    unint64_t result = (std::string *)memcpy(&data[8 * v6], *(const void **)(a2 + 24), 8 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 32);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[1]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[1], v9 + v8);
    std::string::size_type v10 = v3[1].__r_.__value_.__r.__words[2];
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 32);
    unint64_t result = (std::string *)memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 32));
  }
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t data_low = SLODWORD(v3[2].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&v3[2], data_low + v11);
    std::string::size_type size = v3[2].__r_.__value_.__l.__size_;
    LODWORD(v3[2].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 48);
    unint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A2868()
{
  return 1;
}

void *sub_11A2870@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteGeoIdsList");
}

void *sub_11A2880(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB654(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A2900(void *a1)
{
  sub_11A2880(a1);

  operator delete();
}

uint64_t sub_11A2938(uint64_t a1)
{
  uint64_t result = sub_11DB588(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

char *sub_11A2988(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11BDF08(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unsigned int v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_11A2B28(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_11A2B28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A20C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A2BB8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 64);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        std::string::size_type v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        std::string::size_type v10 = __dst + 2;
      }
      __dst = sub_11A2468(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_11A2CFC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      unint64_t v7 = sub_11A26B0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_11A2DAC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_11DC0D4((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A2E7C()
{
  return 1;
}

void *sub_11A2E84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ExtendedDirResp");
}

void *sub_11A2E94(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11A2F24((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_11DB6D4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_11A2F24(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 56);
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252C740)
  {
    if (*(void *)(a1 + 64))
    {
      sub_1550380();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 72);
    if (v5)
    {
      sub_11B1714(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 80);
    if (result)
    {
      sub_11A451C(result);
      operator delete();
    }
  }
  return result;
}

void sub_11A2FFC(void *a1)
{
  sub_11A2E94(a1);

  operator delete();
}

uint64_t sub_11A3034(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11B95B0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0x1F) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_16:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_20;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_20;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    uint64_t result = sub_15503BC(*(void *)(v1 + 64));
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t result = sub_11A3168(*(void *)(v1 + 72));
    if ((v5 & 0x10) == 0) {
      goto LABEL_24;
    }
LABEL_22:
    uint64_t v8 = *(void *)(v1 + 80);
    char v9 = *(unsigned char *)(v8 + 8);
    uint64_t result = v8 + 8;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v9) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_24:
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_11A3168(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 72);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_11AAA9C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 96);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_11AFB50(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 96) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 120);
  if ((int)v8 >= 1)
  {
    char v9 = (unsigned char **)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_11B0D9C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 144);
  if ((int)v11 >= 1)
  {
    unsigned int v12 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_11CE6A4(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 144) = 0;
  }
  uint64_t result = sub_11DB5F0(a1 + 160);
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) == 0) {
    goto LABEL_23;
  }
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_20;
    }
LABEL_33:
    uint64_t result = sub_11B15AC(*(void *)(a1 + 192));
    if ((v15 & 4) == 0)
    {
LABEL_21:
      if ((v15 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    **(unsigned char **)unint64_t v18 = 0;
    *(void *)(v18 + 8) = 0;
    if ((v15 & 2) != 0) {
      goto LABEL_33;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
    if ((v15 & 2) != 0) {
      goto LABEL_33;
    }
  }
LABEL_20:
  if ((v15 & 4) == 0) {
    goto LABEL_21;
  }
LABEL_34:
  uint64_t result = sub_11B07B4(*(void *)(a1 + 200));
  if ((v15 & 8) != 0) {
LABEL_22:
  }
    uint64_t result = sub_11B1618(*(void *)(a1 + 208));
LABEL_23:
  if ((v15 & 0x70) != 0)
  {
    *(_WORD *)(a1 + 224) = 0;
    *(void *)(a1 + 216) = 0;
  }
  char v17 = *(unsigned char *)(a1 + 8);
  uint64_t v16 = a1 + 8;
  *(_DWORD *)(v16 + 8) = 0;
  if (v17)
  {
    return sub_188B4AC((uint64_t *)v16);
  }
  return result;
}

uint64_t sub_11A32F4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11A330C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    return *(void *)v32;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v8 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)uint64_t v32 = v7;
    switch(v8 >> 3)
    {
      case 4u:
        if (v8 != 34) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unsigned int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unsigned int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_30;
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
        goto LABEL_47;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void *)(a1 + 64);
        if (!v17)
        {
          unint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_15509C8((uint64_t)v18);
          *(void *)(a1 + 64) = v17;
          uint64_t v7 = *(unsigned __int8 **)v32;
        }
        uint64_t v16 = (uint64_t)sub_11A368C(a3, v17, v7);
        goto LABEL_54;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        unsigned int v12 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unsigned int v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
LABEL_30:
        uint64_t v20 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v20, *(char **)v32, (uint64_t)a3);
        goto LABEL_54;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v21 = *(void *)(a1 + 72);
        if (!v21)
        {
          unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v22 = (void *)*v22;
          }
          sub_11BEE5C((uint64_t)v22);
          uint64_t v21 = v23;
          *(void *)(a1 + 72) = v23;
          uint64_t v7 = *(unsigned __int8 **)v32;
        }
        uint64_t v16 = sub_11A371C(a3, v21, v7);
        goto LABEL_54;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_47;
        }
        uint64_t v24 = v7 - 1;
        while (1)
        {
          uint64_t v25 = v24 + 1;
          *(void *)uint64_t v32 = v24 + 1;
          int v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            sub_11BF414(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, v29);
            uint64_t v25 = *(unsigned __int8 **)v32;
          }
          uint64_t v24 = (unsigned __int8 *)sub_11A37AC(a3, v28, v25);
          *(void *)uint64_t v32 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 106) {
            goto LABEL_55;
          }
        }
      default:
        if (v8 >> 3 == 100 && v8 == 34)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          uint64_t v14 = *(void **)(a1 + 80);
          if (!v14)
          {
            int v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              int v15 = (void *)*v15;
            }
            uint64_t v14 = sub_11BE108((uint64_t)v15);
            *(void *)(a1 + 80) = v14;
            uint64_t v7 = *(unsigned __int8 **)v32;
          }
          uint64_t v16 = (uint64_t)sub_11A383C(a3, (uint64_t)v14, v7);
          goto LABEL_54;
        }
LABEL_47:
        if (v8) {
          BOOL v30 = (v8 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v6)
          {
            unint64_t v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v32;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v8, v31, (char *)v7, a3);
LABEL_54:
          *(void *)uint64_t v32 = v16;
          if (!v16) {
            return 0;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            return *(void *)v32;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v32;
    }
  }
}

char *sub_11A368C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1550438(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11A371C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B18A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11A37AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B9640(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A383C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A45C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11A38CC(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  unsigned char *v4 = 82;
  unsigned int v8 = *(_DWORD *)(v7 + 40);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_1550668(v7, v9, a3);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 72);
  unsigned char *v4 = 98;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  uint64_t v4 = sub_11B2658(v10, (unint64_t)v12, a3);
LABEL_20:
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 106;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_11B9930(v15, (unint64_t)v17, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 80);
    *(_WORD *)uint64_t v4 = 1698;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[2] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 2);
    }
    else {
      uint64_t v20 = v4 + 3;
    }
    uint64_t v4 = sub_11A4748(v18, (unint64_t)v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_11A3B90(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11B9B14(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
LABEL_24:
      uint64_t v18 = sub_15507AC(*(void *)(a1 + 64));
      v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 8) == 0)
      {
LABEL_14:
        if ((v8 & 0x10) == 0) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v15 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_24;
  }
LABEL_13:
  if ((v8 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_25:
  uint64_t v19 = sub_11B2D2C(*(void *)(a1 + 72));
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0)
  {
LABEL_15:
    unint64_t v9 = sub_11A4870(*(void *)(a1 + 80));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v20 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11A3D78(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DC160((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) == 0) {
    goto LABEL_41;
  }
  if (v9)
  {
    uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v11 = *(void *)(a1 + 8);
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
LABEL_17:
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(std::string **)(a1 + 64);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = (std::string *)sub_15509C8((uint64_t)v18);
        *(void *)(a1 + 64) = v16;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v19 = &off_253D720;
      }
      sub_155085C(v16, (uint64_t)v19);
      if ((v9 & 8) == 0)
      {
LABEL_9:
        if ((v9 & 0x10) == 0) {
          goto LABEL_41;
        }
        goto LABEL_33;
      }
      goto LABEL_25;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v14 = *(void *)(a1 + 8);
  unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
  if (v14) {
    unint64_t v15 = (uint64_t *)*v15;
  }
  sub_1881DF4((std::string **)(a1 + 56), v13, v15);
  if ((v9 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_8:
  if ((v9 & 8) == 0) {
    goto LABEL_9;
  }
LABEL_25:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v20 = *(void *)(a1 + 72);
  if (!v20)
  {
    uint64_t v21 = *(void *)(a1 + 8);
    unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unint64_t v22 = (void *)*v22;
    }
    sub_11BEE5C((uint64_t)v22);
    *(void *)(a1 + 72) = v20;
  }
  if (*(void *)(a2 + 72)) {
    unint64_t v23 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    unint64_t v23 = &off_252CB80;
  }
  sub_11A3FB4(v20, (uint64_t)v23);
  if ((v9 & 0x10) != 0)
  {
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v24 = *(std::string **)(a1 + 80);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = (std::string *)sub_11BE108((uint64_t)v26);
      *(void *)(a1 + 80) = v24;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v27 = *(void *(****)(void *))(a2 + 80);
    }
    else {
      uint64_t v27 = &off_252C798;
    }
    sub_11A442C(v24, (uint64_t)v27);
  }
LABEL_41:
  uint64_t v28 = *(void *)(a2 + 8);
  if (v28)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11A3FB4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_11DC5C0((uint64_t *)(a1 + 64), v14, v13, v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    uint64_t v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_11DC64C((uint64_t *)(a1 + 88), v19, v18, v17, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v20 = *(_DWORD *)(a1 + 96) + v17;
    *(_DWORD *)(a1 + 96) = v20;
    uint64_t v21 = *(int **)(a1 + 104);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  int v22 = *(_DWORD *)(a2 + 120);
  if (v22)
  {
    unint64_t v23 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    uint64_t v24 = (uint64_t *)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_11DC6D8((uint64_t *)(a1 + 112), v24, v23, v22, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v25 = *(_DWORD *)(a1 + 120) + v22;
    *(_DWORD *)(a1 + 120) = v25;
    uint64_t v26 = *(int **)(a1 + 128);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 144);
  if (v27)
  {
    uint64_t v28 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v29 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_11DC764((std::string *)(a1 + 136), v29, v28, v27, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v30 = *(_DWORD *)(a1 + 144) + v27;
    *(_DWORD *)(a1 + 144) = v30;
    unint64_t v31 = *(int **)(a1 + 152);
    if (*v31 < v30) {
      int *v31 = v30;
    }
  }
  int v32 = *(_DWORD *)(a2 + 168);
  if (v32)
  {
    uint64_t v33 = (uint64_t *)(*(void *)(a2 + 176) + 8);
    uint64_t v34 = (std::string **)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_11DC7F0((uint64_t *)(a1 + 160), v34, v33, v32, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v35 = *(_DWORD *)(a1 + 168) + v32;
    *(_DWORD *)(a1 + 168) = v35;
    unint64_t v36 = *(int **)(a1 + 176);
    if (*v36 < v35) {
      int *v36 = v35;
    }
  }
  int v37 = *(_DWORD *)(a2 + 16);
  if ((v37 & 0x7F) != 0)
  {
    if (v37)
    {
      uint64_t v39 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v40 = *(void *)(a1 + 8);
      v41 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
      if (v40) {
        v41 = (uint64_t *)*v41;
      }
      sub_1881DF4((std::string **)(a1 + 184), v39, v41);
      if ((v37 & 2) == 0)
      {
LABEL_24:
        if ((v37 & 4) == 0) {
          goto LABEL_25;
        }
        goto LABEL_46;
      }
    }
    else if ((v37 & 2) == 0)
    {
      goto LABEL_24;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    v42 = *(void **)(a1 + 192);
    if (!v42)
    {
      uint64_t v43 = *(void *)(a1 + 8);
      v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
      if (v43) {
        v44 = (void *)*v44;
      }
      v42 = sub_11CFEF0((uint64_t)v44);
      *(void *)(a1 + 192) = v42;
    }
    if (*(void *)(a2 + 192)) {
      v45 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      v45 = &off_252CF28;
    }
    sub_11B3104((uint64_t)v42, (uint64_t)v45);
    if ((v37 & 4) == 0)
    {
LABEL_25:
      if ((v37 & 8) == 0) {
        goto LABEL_26;
      }
      goto LABEL_54;
    }
LABEL_46:
    *(_DWORD *)(a1 + 16) |= 4u;
    BOOL v46 = *(std::string **)(a1 + 200);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        v48 = (void *)*v48;
      }
      BOOL v46 = (std::string *)sub_11BED5C((uint64_t)v48);
      *(void *)(a1 + 200) = v46;
    }
    if (*(void *)(a2 + 200)) {
      v49 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      v49 = &off_252CB28;
    }
    sub_11B0BDC(v46, (uint64_t)v49);
    if ((v37 & 8) == 0)
    {
LABEL_26:
      if ((v37 & 0x10) == 0) {
        goto LABEL_27;
      }
      goto LABEL_62;
    }
LABEL_54:
    *(_DWORD *)(a1 + 16) |= 8u;
    v50 = *(std::string **)(a1 + 208);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        v52 = (void *)*v52;
      }
      v50 = (std::string *)sub_11D6ED0((uint64_t)v52);
      *(void *)(a1 + 208) = v50;
    }
    if (*(void *)(a2 + 208)) {
      v53 = *(uint64_t (****)())(a2 + 208);
    }
    else {
      v53 = &off_252D608;
    }
    sub_11B320C(v50, (uint64_t)v53);
    if ((v37 & 0x10) == 0)
    {
LABEL_27:
      if ((v37 & 0x20) == 0) {
        goto LABEL_28;
      }
      goto LABEL_63;
    }
LABEL_62:
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    if ((v37 & 0x20) == 0)
    {
LABEL_28:
      if ((v37 & 0x40) == 0)
      {
LABEL_30:
        *(_DWORD *)(a1 + 16) |= v37;
        goto LABEL_31;
      }
LABEL_29:
      *(unsigned char *)(a1 + 225) = *(unsigned char *)(a2 + 225);
      goto LABEL_30;
    }
LABEL_63:
    *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
    if ((v37 & 0x40) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
LABEL_31:
  uint64_t v38 = *(void *)(a2 + 8);
  if (v38)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v38 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_11A442C(std::string *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v2 = *(void *)(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    result[1].__r_.__value_.__r.__words[0] = v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A4464(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_11A4490(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_11A4490(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 72);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_11ACD8C(*(void *)(*(void *)(a1 + 80) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_11A0A80(a1 + 112);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      return 1;
    }
    uint64_t v6 = *(void *)(a1 + 192);
    if ((*(unsigned char *)(v6 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_11C0238(*(void *)(v6 + 24));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_11A450C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.CommonRoutingResponseExtn");
}

void *sub_11A451C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A4590(void *a1)
{
  sub_11A451C(a1);

  operator delete();
}

char *sub_11A45C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11A4748(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_11A4870(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11A48D8()
{
  return 1;
}

void *sub_11A48E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PerformanceData");
}

void *sub_11A48F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A4964(void *a1)
{
  sub_11A48F0(a1);

  operator delete();
}

uint64_t sub_11A499C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A49C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_33;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v20 + 2;
      }
    }
    int v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_12;
    }
    v5 |= 2u;
    uint64_t v14 = v7 + 1;
    int v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v16 = *v14;
    int v15 = v15 + (v16 << 7) - 128;
    if ((v16 & 0x80000000) == 0)
    {
      uint64_t v14 = v7 + 2;
LABEL_24:
      int v20 = v14;
      *(_DWORD *)(a1 + 32) = v15;
      goto LABEL_26;
    }
    uint64_t v17 = (char *)sub_188C0D0((uint64_t)v7, v15);
    int v20 = v17;
    *(_DWORD *)(a1 + 32) = v18;
    if (!v17) {
      goto LABEL_34;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_33;
    }
  }
  if (v8 >> 3 == 1 && v8 == 9)
  {
    v5 |= 1u;
    *(void *)(a1 + 24) = *(void *)v7;
    int v20 = v7 + 8;
    goto LABEL_26;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v20;
    }
    int v20 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v20) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_33;
  }
LABEL_34:
  int v20 = 0;
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

_OWORD *sub_11A4B74(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)unint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    unint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 32);
    *(unsigned char *)unint64_t v4 = 16;
    *((unsigned char *)v4 + 1) = v8;
    if (v8 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      *((unsigned char *)v4 + 2) = v8 >> 7;
      unint64_t v4 = (_OWORD *)((char *)v4 + 3);
      if (v8 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *(unsigned char *)unint64_t v4 = v9;
          unint64_t v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v10);
      }
    }
    else
    {
      unint64_t v4 = (_OWORD *)((char *)v4 + 2);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_11A4CD4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11A4D54()
{
  return 1;
}

void *sub_11A4D5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TraversalTimePrediction");
}

void *sub_11A4D6C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB754(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A4DEC(void *a1)
{
  sub_11A4D6C(a1);

  operator delete();
}

uint64_t sub_11A4E24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11A499C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_11A4EA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        BOOL v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11BE180(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          BOOL v12 = sub_11A5040(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_11A5040(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A49C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A50D0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = (char *)sub_11A4B74(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_11A5214(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11A4CD4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_11A52C4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_11DC1EC((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A5394()
{
  return 1;
}

void *sub_11A539C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PredictedTraversalTimes");
}

void *sub_11A53AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A5420(void *a1)
{
  sub_11A53AC(a1);

  operator delete();
}

uint64_t sub_11A5458(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0x1F00) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A5494(uint64_t a1, char *a2, int32x2_t *a3)
{
  v79 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v79, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v79 + 1;
    unsigned int v9 = *v79;
    if (*v79 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v79, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v79 + 2;
      }
    }
    v79 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_74;
        }
        v5 |= 1u;
        BOOL v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          BOOL v12 = v8 + 2;
LABEL_13:
          v79 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_81;
        }
        v53 = (char *)sub_188C0D0((uint64_t)v8, v13);
        v79 = v53;
        *(_DWORD *)(a1 + 24) = v54;
        if (v53) {
          goto LABEL_81;
        }
        goto LABEL_112;
      case 2u:
        if (v9 != 16) {
          goto LABEL_74;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v55 = (char *)sub_188C0D0((uint64_t)v8, v16);
          v79 = v55;
          *(_DWORD *)(a1 + 28) = v56;
          if (!v55) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          v79 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_81;
      case 3u:
        if (v9 != 24) {
          goto LABEL_74;
        }
        v5 |= 4u;
        int v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v57 = (char *)sub_188C0D0((uint64_t)v8, v19);
          v79 = v57;
          *(_DWORD *)(a1 + 32) = v58;
          if (!v57) {
            goto LABEL_112;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_23:
          v79 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_81;
      case 4u:
        if (v9 != 32) {
          goto LABEL_74;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          v59 = (char *)sub_188C0D0((uint64_t)v8, v22);
          v79 = v59;
          *(_DWORD *)(a1 + 36) = v60;
          if (!v59) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          v79 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_81;
      case 5u:
        if (v9 != 40) {
          goto LABEL_74;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          v61 = (char *)sub_188C0D0((uint64_t)v8, v25);
          v79 = v61;
          *(_DWORD *)(a1 + 40) = v62;
          if (!v61) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          v79 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_81;
      case 6u:
        if (v9 != 48) {
          goto LABEL_74;
        }
        v5 |= 0x20u;
        int v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          v63 = (char *)sub_188C0D0((uint64_t)v8, v28);
          v79 = v63;
          *(_DWORD *)(a1 + 44) = v64;
          if (!v63) {
            goto LABEL_112;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          v79 = v27;
          *(_DWORD *)(a1 + 44) = v28;
        }
        goto LABEL_81;
      case 7u:
        if (v9 != 56) {
          goto LABEL_74;
        }
        v5 |= 0x40u;
        int v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          v65 = (char *)sub_188C0D0((uint64_t)v8, v31);
          v79 = v65;
          *(_DWORD *)(a1 + 48) = v66;
          if (!v65) {
            goto LABEL_112;
          }
        }
        else
        {
          int v30 = v8 + 2;
LABEL_43:
          v79 = v30;
          *(_DWORD *)(a1 + 48) = v31;
        }
        goto LABEL_81;
      case 8u:
        if (v9 != 64) {
          goto LABEL_74;
        }
        v5 |= 0x80u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          v67 = (char *)sub_188C0D0((uint64_t)v8, v34);
          v79 = v67;
          *(_DWORD *)(a1 + 52) = v68;
          if (!v67) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_48:
          v79 = v33;
          *(_DWORD *)(a1 + 52) = v34;
        }
        goto LABEL_81;
      case 9u:
        if (v9 != 72) {
          goto LABEL_74;
        }
        v5 |= 0x100u;
        unint64_t v36 = v8 + 1;
        int v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_53;
        }
        int v38 = *v36;
        int v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          v69 = (char *)sub_188C0D0((uint64_t)v8, v37);
          v79 = v69;
          *(_DWORD *)(a1 + 56) = v70;
          if (!v69) {
            goto LABEL_112;
          }
        }
        else
        {
          unint64_t v36 = v8 + 2;
LABEL_53:
          v79 = v36;
          *(_DWORD *)(a1 + 56) = v37;
        }
        goto LABEL_81;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_74;
        }
        v5 |= 0x200u;
        uint64_t v39 = v8 + 1;
        int v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          v71 = (char *)sub_188C0D0((uint64_t)v8, v40);
          v79 = v71;
          *(_DWORD *)(a1 + 60) = v72;
          if (!v71) {
            goto LABEL_112;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_58:
          v79 = v39;
          *(_DWORD *)(a1 + 60) = v40;
        }
        goto LABEL_81;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_74;
        }
        v5 |= 0x400u;
        v42 = v8 + 1;
        int v43 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v44 = *v42;
        int v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          v73 = (char *)sub_188C0D0((uint64_t)v8, v43);
          v79 = v73;
          *(_DWORD *)(a1 + 64) = v74;
          if (!v73) {
            goto LABEL_112;
          }
        }
        else
        {
          v42 = v8 + 2;
LABEL_63:
          v79 = v42;
          *(_DWORD *)(a1 + 64) = v43;
        }
        goto LABEL_81;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_74;
        }
        v5 |= 0x800u;
        v45 = v8 + 1;
        int v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          v75 = (char *)sub_188C0D0((uint64_t)v8, v46);
          v79 = v75;
          *(_DWORD *)(a1 + 68) = v76;
          if (!v75) {
            goto LABEL_112;
          }
        }
        else
        {
          v45 = v8 + 2;
LABEL_68:
          v79 = v45;
          *(_DWORD *)(a1 + 68) = v46;
        }
        goto LABEL_81;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_74;
        }
        v5 |= 0x1000u;
        v48 = v8 + 1;
        int v49 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v50 = *v48;
        int v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          v77 = (char *)sub_188C0D0((uint64_t)v8, v49);
          v79 = v77;
          *(_DWORD *)(a1 + 72) = v78;
          if (!v77) {
            goto LABEL_112;
          }
        }
        else
        {
          v48 = v8 + 2;
LABEL_73:
          v79 = v48;
          *(_DWORD *)(a1 + 72) = v49;
        }
        goto LABEL_81;
      default:
LABEL_74:
        if (v9) {
          BOOL v51 = (v9 & 7) == 4;
        }
        else {
          BOOL v51 = 1;
        }
        if (!v51)
        {
          if (*v7)
          {
            v52 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v52 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v79;
          }
          v79 = (char *)sub_1885AC0(v9, v52, v8, a3);
          if (!v79) {
            goto LABEL_112;
          }
LABEL_81:
          if (sub_11947B8((uint64_t)a3, &v79, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_112:
        }
          v79 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v79;
    }
  }
}

unsigned char *sub_11A5ACC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 60);
    unsigned char *v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v37 = *(_DWORD *)(a1 + 64);
    unsigned char *v4 = 88;
    v4[1] = v37;
    if (v37 > 0x7F)
    {
      v4[1] = v37 | 0x80;
      unsigned int v38 = v37 >> 7;
      v4[2] = v37 >> 7;
      v4 += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v40 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 96;
    v4[1] = v40;
    if (v40 > 0x7F)
    {
      v4[1] = v40 | 0x80;
      unsigned int v41 = v40 >> 7;
      v4[2] = v40 >> 7;
      v4 += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v43 = *(_DWORD *)(a1 + 72);
    unsigned char *v4 = 104;
    v4[1] = v43;
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unsigned int v44 = v43 >> 7;
      v4[2] = v43 >> 7;
      v4 += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v46 = *(void *)(a1 + 8);
  if ((v46 & 1) == 0) {
    return v4;
  }
  unint64_t v48 = v46 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v48 + 31) < 0)
  {
    int v49 = *(void **)(v48 + 8);
    uint64_t v50 = *(void *)(v48 + 16);
  }
  else
  {
    int v49 = (void *)(v48 + 8);
    LODWORD(v50) = *(unsigned __int8 *)(v48 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v50)
  {
    uint64_t v51 = (int)v50;
    memcpy(v4, v49, (int)v50);
    v4 += v51;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v49, v50, v4);
}

uint64_t sub_11A61C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_12:
    if ((v1 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) == 0)
  {
LABEL_13:
    if ((v1 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_28:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x80) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  if ((v1 & 0x1F00) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 0x100) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x200) == 0)
    {
LABEL_18:
      if ((v1 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_32;
    }
  }
  else if ((v1 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x400) == 0)
  {
LABEL_19:
    if ((v1 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_33;
  }
LABEL_32:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x800) == 0)
  {
LABEL_20:
    if ((v1 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_33:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x1000) != 0) {
LABEL_21:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_22:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11A6454(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_25:
    HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_11;
    }
LABEL_28:
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x1F00) == 0) {
    goto LABEL_20;
  }
  if ((v2 & 0x100) != 0)
  {
    LODWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v2 & 0x200) == 0)
    {
LABEL_15:
      if ((v2 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_32;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  HIDWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
LABEL_33:
    HIDWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v2 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_32:
  LODWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
  if ((v2 & 0x800) != 0) {
    goto LABEL_33;
  }
LABEL_17:
  if ((v2 & 0x1000) != 0) {
LABEL_18:
  }
    LODWORD(result[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
LABEL_19:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_20:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A656C()
{
  return 1;
}

void *sub_11A6574@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.DetourAnalysis");
}

void *sub_11A6584(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB7D4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A6604(void *a1)
{
  sub_11A6584(a1);

  operator delete();
}

unsigned char *sub_11A663C(unsigned char *result)
{
  int v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  if ((v1[16] & 3) != 0) {
    *((void *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  unint64_t v5 = v1 + 8;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11A66CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v32 + 2;
      }
    }
    unsigned int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      unsigned int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        unsigned int v32 = v16;
        *(_DWORD *)(a1 + 52) = v17;
        goto LABEL_44;
      }
      unsigned int v28 = (char *)sub_188C0D0((uint64_t)v8, v17);
      unsigned int v32 = v28;
      *(_DWORD *)(a1 + 52) = v29;
      if (!v28) {
        goto LABEL_49;
      }
      goto LABEL_44;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 1u;
    unsigned int v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unsigned int v19 = v8 + 2;
LABEL_31:
      unsigned int v32 = v19;
      *(_DWORD *)(a1 + 48) = v20;
      goto LABEL_44;
    }
    unsigned int v30 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unsigned int v32 = v30;
    *(_DWORD *)(a1 + 48) = v31;
    if (!v30) {
      goto LABEL_49;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    unsigned int v22 = v8 - 1;
    while (1)
    {
      unsigned int v23 = (unsigned __int8 *)(v22 + 1);
      unsigned int v32 = v22 + 1;
      unsigned int v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        uint64_t v27 = sub_15C1918(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, v27);
        unsigned int v23 = (unsigned __int8 *)v32;
      }
      unsigned int v22 = sub_1198F14(a3, v26, v23);
      unsigned int v32 = v22;
      if (!v22) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v32;
    }
    unsigned int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  unsigned int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_11A6954(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B0C0C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 52);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_11A6B94(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11A6CA0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_10E4FFC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11A6DA0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_11A6DF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Path");
}

void *sub_11A6E08(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A6E7C(void *a1)
{
  sub_11A6E08(a1);

  operator delete();
}

uint64_t sub_11A6EB4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A6ED8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v34 + 2;
      }
    }
    unsigned int v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unsigned int v34 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_36;
        }
        uint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unsigned int v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        unsigned int v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unsigned int v28 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unsigned int v34 = v28;
          *(_DWORD *)(a1 + 28) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          unsigned int v34 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v30 = (char *)sub_188C0D0((uint64_t)v8, v19);
          unsigned int v34 = v30;
          *(_DWORD *)(a1 + 32) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          unsigned int v34 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unsigned int v32 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unsigned int v34 = v32;
          *(_DWORD *)(a1 + 36) = v33;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          unsigned int v34 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v34;
          }
          unsigned int v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          unsigned int v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_11A71B0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_11A744C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_10:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11A7548()
{
  return 1;
}

void *sub_11A7550@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.OutlierAnalysis");
}

void *sub_11A7560(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A75D4(void *a1)
{
  sub_11A7560(a1);

  operator delete();
}

uint64_t sub_11A760C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A7624(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    unsigned int v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      unsigned int v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unsigned int v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11A77A4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11A78CC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_11A7934(std::string *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    int v2 = *(_DWORD *)(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(result[1].__r_.__value_.__l.__data_) = v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A796C()
{
  return 1;
}

void *sub_11A7974@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Model.Poisson");
}

void *sub_11A7984(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A79F8(void *a1)
{
  sub_11A7984(a1);

  operator delete();
}

uint64_t sub_11A7A30(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A7A48(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unsigned int v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unsigned int v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11A7BC8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11A7CF0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11A7D58()
{
  return 1;
}

void *sub_11A7D60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Model.Historical");
}

void *sub_11A7D70(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A7DE4(void *a1)
{
  sub_11A7D70(a1);

  operator delete();
}

uint64_t sub_11A7E1C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A7E34(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unsigned int v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unsigned int v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11A7FB4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11A80DC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11A8144()
{
  return 1;
}

void *sub_11A814C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Model.Pretagging");
}

void *sub_11A815C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A81D0(void *a1)
{
  sub_11A815C(a1);

  operator delete();
}

uint64_t sub_11A8208(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A8220(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unsigned int v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unsigned int v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11A83A0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11A84C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11A8530()
{
  return 1;
}

void *sub_11A8538@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Model.DeepLookback");
}

void *sub_11A8548(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A85BC(void *a1)
{
  sub_11A8548(a1);

  operator delete();
}

uint64_t sub_11A85F4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A860C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unsigned int v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unsigned int v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11A878C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11A88B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11A891C()
{
  return 1;
}

void *sub_11A8924@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Model.Oney");
}

void *sub_11A8934(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A89A8(void *a1)
{
  sub_11A8934(a1);

  operator delete();
}

uint64_t sub_11A89E0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11A89F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unsigned int v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unsigned int v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unsigned int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11A8B78(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11A8CA0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11A8D08()
{
  return 1;
}

void *sub_11A8D10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Model.Tony");
}

uint64_t sub_11A8D20(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11A8DA4((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_11A8DA4(uint64_t (***result)()))()
{
  if (result != &off_252C920)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_11A7560(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_11A7984(v3);
      operator delete();
    }
    unint64_t v4 = v1[5];
    if (v4)
    {
      sub_11A7D70(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_11A815C(v5);
      operator delete();
    }
    unsigned int v6 = v1[7];
    if (v6)
    {
      sub_11A8548(v6);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[8];
    if (result)
    {
      sub_11A8934(result);
      operator delete();
    }
  }
  return result;
}

void sub_11A8EB0(uint64_t a1)
{
  sub_11A8D20(a1);

  operator delete();
}

uint64_t sub_11A8EE8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      char v6 = *(unsigned char *)(v5 + 8);
      uint64_t result = v5 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v6) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 40);
      char v8 = *(unsigned char *)(v7 + 8);
      uint64_t result = v7 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v8) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v9 = *(void *)(v1 + 48);
      char v10 = *(unsigned char *)(v9 + 8);
      uint64_t result = v9 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v10) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v11 = *(void *)(v1 + 56);
      char v12 = *(unsigned char *)(v11 + 8);
      uint64_t result = v11 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v12) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 64);
      char v14 = *(unsigned char *)(v13 + 8);
      uint64_t result = v13 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v14) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  char v16 = *(unsigned char *)(v1 + 8);
  uint64_t v15 = v1 + 8;
  *(_DWORD *)(v15 + 8) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

char *sub_11A8FE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          char v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            char v12 = (void *)*v12;
          }
          uint64_t v11 = sub_11BE438((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v26;
        }
        uint64_t v13 = sub_11A9320(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_52;
      case 2u:
        if (v8 != 18) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_11BE4B4((uint64_t)v15);
          *(void *)(a1 + 32) = v14;
          uint64_t v7 = v26;
        }
        uint64_t v13 = sub_11A93B0(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_52;
      case 3u:
        if (v8 != 26) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v17 = (void *)*v17;
          }
          uint64_t v16 = sub_11BE530((uint64_t)v17);
          *(void *)(a1 + 40) = v16;
          uint64_t v7 = v26;
        }
        uint64_t v13 = sub_11A9440(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_52;
      case 4u:
        if (v8 != 34) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_11BE5AC((uint64_t)v19);
          *(void *)(a1 + 48) = v18;
          uint64_t v7 = v26;
        }
        uint64_t v13 = sub_11A94D0(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_52;
      case 5u:
        if (v8 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v20 = *(void *)(a1 + 56);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_11BE628((uint64_t)v21);
          *(void *)(a1 + 56) = v20;
          uint64_t v7 = v26;
        }
        uint64_t v13 = sub_11A9560(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_52;
      case 6u:
        if (v8 != 50) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v22 = *(void *)(a1 + 64);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_11BE6A4((uint64_t)v23);
          *(void *)(a1 + 64) = v22;
          uint64_t v7 = v26;
        }
        uint64_t v13 = sub_11A95F0(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_52;
      default:
LABEL_45:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v26;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v25, v7, a3);
LABEL_52:
          uint64_t v26 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

char *sub_11A9320(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A7624(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A93B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A7A48(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A9440(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A7E34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A94D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A8220(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A9560(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A860C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11A95F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A89F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11A9680(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_11A77A4(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    char v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    char v12 = v4 + 2;
  }
  char v4 = sub_11A7BC8(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_11A7FB4(v13, (unint64_t)v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_11A83A0(v16, (unint64_t)v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    unint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    unint64_t v21 = v4 + 2;
  }
  char v4 = sub_11A878C(v19, (unint64_t)v21, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_38:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 64);
    unsigned char *v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      BOOL v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      BOOL v24 = v4 + 2;
    }
    char v4 = sub_11A8B78(v22, (unint64_t)v24, a3);
  }
LABEL_44:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    unsigned int v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    unsigned int v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_11A99A8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_11A78CC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_11A7CF0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_11A80DC(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = sub_11A84C8(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v11 = sub_11A88B4(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0)
  {
LABEL_12:
    uint64_t v6 = sub_11A8CA0(*(void *)(a1 + 64));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_11A9B50(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_57;
  }
  if (v4)
  {
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_11BE438((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_252C860;
    }
    uint64_t result = sub_11A7934(data, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
  if (!v9)
  {
    std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_11BE4B4((uint64_t)v11);
    v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
  }
  if (*(void *)(a2 + 32)) {
    unint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    unint64_t v12 = &off_252C880;
  }
  uint64_t result = sub_11A7934(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_25:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  uint64_t v13 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
  if (!v13)
  {
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_11BE530((uint64_t)v15);
    v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_252C8A0;
  }
  uint64_t result = sub_11A7934(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
LABEL_33:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  unsigned int v17 = (std::string *)v3[2].__r_.__value_.__l.__data_;
  if (!v17)
  {
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    unsigned int v17 = (std::string *)sub_11BE5AC((uint64_t)v19);
    v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)v17;
  }
  if (*(void *)(a2 + 48)) {
    unsigned int v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    unsigned int v20 = &off_252C8C0;
  }
  uint64_t result = sub_11A7934(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_57;
    }
    goto LABEL_49;
  }
LABEL_41:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  unint64_t v21 = (std::string *)v3[2].__r_.__value_.__l.__size_;
  if (!v21)
  {
    std::string::size_type v22 = v3->__r_.__value_.__l.__size_;
    unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      unsigned int v23 = (void *)*v23;
    }
    unint64_t v21 = (std::string *)sub_11BE628((uint64_t)v23);
    v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v21;
  }
  if (*(void *)(a2 + 56)) {
    BOOL v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    BOOL v24 = &off_252C8E0;
  }
  uint64_t result = sub_11A7934(v21, (uint64_t)v24);
  if ((v4 & 0x20) != 0)
  {
LABEL_49:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    uint64_t v25 = (std::string *)v3[2].__r_.__value_.__r.__words[2];
    if (!v25)
    {
      std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
      unint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        unint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = (std::string *)sub_11BE6A4((uint64_t)v27);
      v3[2].__r_.__value_.__r.__words[2] = (std::string::size_type)v25;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v28 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v28 = &off_252C900;
    }
    uint64_t result = sub_11A7934(v25, (uint64_t)v28);
  }
LABEL_57:
  uint64_t v29 = *(void *)(a2 + 8);
  if (v29)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v29 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11A9D9C()
{
  return 1;
}

void *sub_11A9DA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.Model");
}

uint64_t sub_11A9DB4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252C968)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      sub_11A8D20(v5);
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_154ECDC();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11A9E8C(uint64_t a1)
{
  sub_11A9DB4(a1);

  operator delete();
}

uint64_t sub_11A9EC4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_11A8EE8(*(void *)(result + 40));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_154EB10(*(void *)(v1 + 48));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(void *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11A9F3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v30, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        unsigned int v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_45;
        }
        v5 |= 4u;
        *(void *)(a1 + 56) = *(void *)v8;
        uint64_t v30 = v8 + 8;
        goto LABEL_53;
      case 2u:
        if (v9 != 18) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 40);
        if (!v13)
        {
          std::string::size_type v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v14 = (void *)*v14;
          }
          sub_11BE720((uint64_t)v14);
          uint64_t v13 = v15;
          *(void *)(a1 + 40) = v15;
          unsigned int v8 = v30;
        }
        uint64_t v16 = sub_11AA2AC(a3, v13, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 3u:
        if (v9 != 26) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unsigned int v17 = *(void **)(a1 + 48);
        if (!v17)
        {
          std::string::size_type v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            std::string::size_type v18 = (void *)*v18;
          }
          unsigned int v17 = sub_154F260((uint64_t)v18);
          *(void *)(a1 + 48) = v17;
          unsigned int v8 = v30;
        }
        uint64_t v16 = (char *)sub_11AA33C(a3, (uint64_t)v17, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 4u:
        if (v9 == 32)
        {
          uint64_t v19 = v8 - 1;
          while (1)
          {
            uint64_t v30 = v19 + 1;
            unint64_t v20 = v19[1];
            unint64_t v21 = v19 + 2;
            if (v19[1] < 0)
            {
              int v22 = *v21;
              int v23 = v20 + (v22 << 7);
              unint64_t v20 = (v23 - 128);
              if (v22 < 0)
              {
                uint64_t v30 = (char *)sub_188C138((uint64_t)(v19 + 1), (v23 - 128));
                if (!v30) {
                  goto LABEL_58;
                }
                unint64_t v20 = v26;
                goto LABEL_29;
              }
              unint64_t v21 = v19 + 3;
            }
            uint64_t v30 = v21;
LABEL_29:
            if (sub_166ED34(v20))
            {
              uint64_t v24 = *(unsigned int *)(a1 + 24);
              if (v24 == *(_DWORD *)(a1 + 28))
              {
                int v25 = v24 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v24 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v20;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v20;
                int v25 = v24 + 1;
              }
              *(_DWORD *)(a1 + 24) = v25;
            }
            else
            {
              if (*v7) {
                unint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v20, v27);
            }
            uint64_t v19 = v30;
            if (*(void *)a3 <= (unint64_t)v30 || *v30 != 32) {
              goto LABEL_53;
            }
          }
        }
        if (v9 == 34)
        {
          *(void *)&long long v31 = a1 + 24;
          *((void *)&v31 + 1) = sub_166ED34;
          uint64_t v32 = a1 + 8;
          int v33 = 4;
          uint64_t v16 = sub_1112E88((uint64_t)a3, v8, &v31);
LABEL_52:
          uint64_t v30 = v16;
          if (!v16) {
            goto LABEL_58;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_45:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v30;
          }
          uint64_t v16 = (char *)sub_1885AC0(v9, v29, v8, a3);
          goto LABEL_52;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v30;
      default:
        goto LABEL_45;
    }
  }
}

char *sub_11AA2AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A8FE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11AA33C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_154ED18(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11AA3CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 40);
  unsigned char *v4 = 18;
  unsigned int v9 = *(_DWORD *)(v8 + 20);
  v4[1] = v9;
  if (v9 > 0x7F) {
    int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    int v10 = v4 + 2;
  }
  char v4 = sub_11A9680(v8, (unint64_t)v10, a3);
  if ((v6 & 2) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 48);
    unsigned char *v4 = 26;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    char v4 = sub_154EFA4(v11, v13, a3);
  }
LABEL_20:
  uint64_t v14 = *(unsigned int *)(a1 + 24);
  if ((int)v14 >= 1)
  {
    for (uint64_t i = 0; i != v14; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v16 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 32;
      v4[1] = v16;
      if (v16 > 0x7F)
      {
        v4[1] = v16 | 0x80;
        unint64_t v17 = v16 >> 7;
        v4[2] = v16 >> 7;
        v4 += 3;
        if (v16 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v18 = v17 >> 14;
            v17 >>= 7;
            *v4++ = v17;
          }
          while (v18);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_11AA62C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_11A99A8(*(void *)(a1 + 40));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_154F168(*(void *)(a1 + 48));
      v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 4) != 0) {
      v7 += 9;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v7 += v14;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

std::string *sub_11AA758(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v10 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v10)
      {
        std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
        unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unsigned int v12 = (void *)*v12;
        }
        sub_11BE720((uint64_t)v12);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v10;
      }
      if (*(void *)(a2 + 40)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        unint64_t v13 = &off_252C920;
      }
      uint64_t result = sub_11A9B50(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::pointer data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      std::string::pointer data = (std::string *)sub_154F260((uint64_t)v16);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v17 = &off_253D6F0;
    }
    uint64_t result = sub_154EB60(data, (uint64_t)v17);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11AA8C4()
{
  return 1;
}

void *sub_11AA8CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation.PathletInfo");
}

void *sub_11AA8DC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11AA998((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 15);
  sub_1889DA8((uint64_t)(a1 + 13));
  sub_11DB8D4(a1 + 10);
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_11DB854(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_11AA998(uint64_t result)
{
  if ((uint64_t (***)())result != &off_252C9A8)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 144))
    {
      sub_13B95DC();
      operator delete();
    }
    uint64_t v2 = *(void **)(result + 152);
    if (v2)
    {
      sub_11A6E08(v2);
      operator delete();
    }
    int v3 = *(void **)(v1 + 160);
    if (v3)
    {
      sub_11A53AC(v3);
      operator delete();
    }
    uint64_t result = *(void *)(v1 + 168);
    if (result)
    {
      sub_11A8D20(result);
      operator delete();
    }
  }
  return result;
}

void sub_11AAA64(void *a1)
{
  sub_11AA8DC(a1);

  operator delete();
}

uint64_t sub_11AAA9C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  if ((int)v2 >= 1)
  {
    int v3 = (unsigned char **)(*(void *)(a1 + 56) + 8);
    do
    {
      int v4 = *v3++;
      sub_11A663C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 48) = 0;
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v5 = *(unsigned int *)(a1 + 88);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_11A9EC4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 88) = 0;
  }
  *(_DWORD *)(a1 + 104) = 0;
  uint64_t result = sub_188CC00(a1 + 120);
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    uint64_t result = sub_11A6EB4(*(void *)(a1 + 152));
    if ((v9 & 4) == 0)
    {
LABEL_13:
      if ((v9 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_25;
  }
  uint64_t result = sub_13B9618(*(void *)(a1 + 144));
  if ((v9 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v9 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_25:
  uint64_t result = sub_11A5458(*(void *)(a1 + 160));
  if ((v9 & 8) != 0) {
LABEL_14:
  }
    uint64_t result = sub_11A8EE8(*(void *)(a1 + 168));
LABEL_15:
  if ((v9 & 0xF0) != 0) {
    *(_DWORD *)(a1 + 176) = 0;
  }
  if ((v9 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 212) = 0;
    *(_OWORD *)(a1 + 196) = 0u;
    *(_OWORD *)(a1 + 180) = 0u;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 208) = 0;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_11AABCC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v125 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v125, a3[11].i32[1]) & 1) == 0)
  {
    v123 = (uint64_t *)(a1 + 80);
    v124 = (uint64_t **)(a1 + 120);
    v122 = (uint64_t *)(a1 + 8);
    uint64_t v7 = (unsigned int *)(a1 + 24);
    while (2)
    {
      int v8 = (unsigned __int8 *)(*(void *)v125 + 1);
      unsigned int v9 = **(unsigned char **)v125;
      if ((char)**(unsigned char **)v125 < 0)
      {
        int v10 = (char)*v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v125, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          int v8 = (unsigned __int8 *)(*(void *)v125 + 2);
        }
      }
      *(void *)v125 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_195;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v13 = *(void *)(a1 + 144);
          if (!v13)
          {
            uint64_t v14 = (void *)(*v122 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v122) {
              uint64_t v14 = (void *)*v14;
            }
            uint64_t v13 = sub_13D9608((uint64_t)v14);
            *(void *)(a1 + 144) = v13;
            int v8 = *(unsigned __int8 **)v125;
          }
          uint64_t v15 = sub_11AB844(a3, v13, v8);
          goto LABEL_202;
        case 2u:
          if (v9 != 16) {
            goto LABEL_195;
          }
          v5 |= 0x10u;
          unint64_t v16 = (char *)(v8 + 1);
          uint64_t v17 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v18 = *v16;
          uint64_t v17 = v17 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            uint64_t v98 = sub_188C138((uint64_t)v8, v17);
            *(void *)v125 = v98;
            *(unsigned char *)(a1 + 176) = v99 != 0;
            if (!v98) {
              goto LABEL_208;
            }
          }
          else
          {
            unint64_t v16 = (char *)(v8 + 2);
LABEL_19:
            *(void *)v125 = v16;
            *(unsigned char *)(a1 + 176) = v17 != 0;
          }
          goto LABEL_203;
        case 3u:
          if (v9 != 24) {
            goto LABEL_195;
          }
          v5 |= 0x20u;
          uint64_t v19 = (char *)(v8 + 1);
          uint64_t v20 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v21 = *v19;
          uint64_t v20 = v20 + (v21 << 7) - 128;
          if (v21 < 0)
          {
            uint64_t v100 = sub_188C138((uint64_t)v8, v20);
            *(void *)v125 = v100;
            *(unsigned char *)(a1 + 177) = v101 != 0;
            if (!v100) {
              goto LABEL_208;
            }
          }
          else
          {
            uint64_t v19 = (char *)(v8 + 2);
LABEL_24:
            *(void *)v125 = v19;
            *(unsigned char *)(a1 + 177) = v20 != 0;
          }
          goto LABEL_203;
        case 4u:
          if (v9 != 32) {
            goto LABEL_195;
          }
          v5 |= 0x40u;
          int v22 = (char *)(v8 + 1);
          uint64_t v23 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_29;
          }
          int v24 = *v22;
          uint64_t v23 = v23 + (v24 << 7) - 128;
          if (v24 < 0)
          {
            uint64_t v102 = sub_188C138((uint64_t)v8, v23);
            *(void *)v125 = v102;
            *(unsigned char *)(a1 + 178) = v103 != 0;
            if (!v102) {
              goto LABEL_208;
            }
          }
          else
          {
            int v22 = (char *)(v8 + 2);
LABEL_29:
            *(void *)v125 = v22;
            *(unsigned char *)(a1 + 178) = v23 != 0;
          }
          goto LABEL_203;
        case 5u:
          if (v9 != 40) {
            goto LABEL_195;
          }
          v5 |= 0x80u;
          int v25 = (char *)(v8 + 1);
          uint64_t v26 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_34;
          }
          int v27 = *v25;
          uint64_t v26 = v26 + (v27 << 7) - 128;
          if (v27 < 0)
          {
            uint64_t v104 = sub_188C138((uint64_t)v8, v26);
            *(void *)v125 = v104;
            *(unsigned char *)(a1 + 179) = v105 != 0;
            if (!v104) {
              goto LABEL_208;
            }
          }
          else
          {
            int v25 = (char *)(v8 + 2);
LABEL_34:
            *(void *)v125 = v25;
            *(unsigned char *)(a1 + 179) = v26 != 0;
          }
          goto LABEL_203;
        case 6u:
          if (v9 != 49)
          {
            if (v9 == 50)
            {
              uint64_t v15 = sub_188C3D4(a1 + 24, v8, a3);
              goto LABEL_202;
            }
            goto LABEL_195;
          }
          BOOL v28 = v8 - 1;
          unsigned int v29 = *v7;
          do
          {
            uint64_t v30 = (uint64_t)(v28 + 1);
            *(void *)v125 = v28 + 1;
            uint64_t v31 = *(void *)(v28 + 1);
            if (v29 == *(_DWORD *)(a1 + 28))
            {
              sub_188CA54((unsigned int *)(a1 + 24), v29 + 1);
              *(void *)(*(void *)(a1 + 32) + 8 * v29) = v31;
              uint64_t v30 = *(void *)v125;
            }
            else
            {
              *(void *)(*(void *)(a1 + 32) + 8 * v29) = v31;
            }
            unsigned int *v7 = ++v29;
            BOOL v28 = (unsigned __int8 *)(v30 + 8);
            *(void *)v125 = v30 + 8;
          }
          while (*(void *)a3 > (unint64_t)(v30 + 8) && *v28 == 49);
LABEL_203:
          if (sub_11947B8((uint64_t)a3, (char **)v125, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        case 7u:
          if (v9 != 56) {
            goto LABEL_195;
          }
          v5 |= 0x100u;
          uint64_t v32 = (char *)(v8 + 1);
          int v33 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_47;
          }
          int v34 = *v32;
          int v33 = v33 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            uint64_t v106 = sub_188C0D0((uint64_t)v8, v33);
            *(void *)v125 = v106;
            *(_DWORD *)(a1 + 180) = v107;
            if (!v106) {
              goto LABEL_208;
            }
          }
          else
          {
            uint64_t v32 = (char *)(v8 + 2);
LABEL_47:
            *(void *)v125 = v32;
            *(_DWORD *)(a1 + 180) = v33;
          }
          goto LABEL_203;
        case 8u:
          if (v9 != 64) {
            goto LABEL_195;
          }
          v5 |= 0x400u;
          unsigned int v35 = (char *)(v8 + 1);
          int v36 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_52;
          }
          int v37 = *v35;
          int v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            uint64_t v108 = sub_188C0D0((uint64_t)v8, v36);
            *(void *)v125 = v108;
            *(_DWORD *)(a1 + 192) = v109;
            if (!v108) {
              goto LABEL_208;
            }
          }
          else
          {
            unsigned int v35 = (char *)(v8 + 2);
LABEL_52:
            *(void *)v125 = v35;
            *(_DWORD *)(a1 + 192) = v36;
          }
          goto LABEL_203;
        case 9u:
          if (v9 != 73) {
            goto LABEL_195;
          }
          uint64_t v39 = *(void *)v8;
          unsigned int v38 = v8 + 8;
          v5 |= 0x200u;
          *(void *)(a1 + 184) = v39;
          goto LABEL_108;
        case 0xAu:
          if (v9 != 80) {
            goto LABEL_195;
          }
          v5 |= 0x800u;
          unsigned int v40 = (char *)(v8 + 1);
          int v41 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_59;
          }
          int v42 = *v40;
          int v41 = v41 + (v42 << 7) - 128;
          if (v42 < 0)
          {
            uint64_t v110 = sub_188C0D0((uint64_t)v8, v41);
            *(void *)v125 = v110;
            *(_DWORD *)(a1 + 196) = v111;
            if (!v110) {
              goto LABEL_208;
            }
          }
          else
          {
            unsigned int v40 = (char *)(v8 + 2);
LABEL_59:
            *(void *)v125 = v40;
            *(_DWORD *)(a1 + 196) = v41;
          }
          goto LABEL_203;
        case 0xBu:
          if (v9 != 88) {
            goto LABEL_195;
          }
          v5 |= 0x1000u;
          unsigned int v43 = (char *)(v8 + 1);
          int v44 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_64;
          }
          int v45 = *v43;
          int v44 = v44 + (v45 << 7) - 128;
          if (v45 < 0)
          {
            uint64_t v112 = sub_188C0D0((uint64_t)v8, v44);
            *(void *)v125 = v112;
            *(_DWORD *)(a1 + 200) = v113;
            if (!v112) {
              goto LABEL_208;
            }
          }
          else
          {
            unsigned int v43 = (char *)(v8 + 2);
LABEL_64:
            *(void *)v125 = v43;
            *(_DWORD *)(a1 + 200) = v44;
          }
          goto LABEL_203;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_195;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v46 = *(void **)(a1 + 152);
          if (!v46)
          {
            int v47 = (void *)(*v122 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v122) {
              int v47 = (void *)*v47;
            }
            uint64_t v46 = sub_11BE3BC((uint64_t)v47);
            *(void *)(a1 + 152) = v46;
            int v8 = *(unsigned __int8 **)v125;
          }
          uint64_t v15 = (uint64_t)sub_11AB8D4(a3, (uint64_t)v46, v8);
          goto LABEL_202;
        case 0xDu:
          if (v9 != 104) {
            goto LABEL_195;
          }
          v5 |= 0x2000u;
          unint64_t v48 = (char *)(v8 + 1);
          uint64_t v49 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_75;
          }
          int v50 = *v48;
          uint64_t v49 = v49 + (v50 << 7) - 128;
          if (v50 < 0)
          {
            uint64_t v114 = sub_188C138((uint64_t)v8, v49);
            *(void *)v125 = v114;
            *(unsigned char *)(a1 + 204) = v115 != 0;
            if (!v114) {
              goto LABEL_208;
            }
          }
          else
          {
            unint64_t v48 = (char *)(v8 + 2);
LABEL_75:
            *(void *)v125 = v48;
            *(unsigned char *)(a1 + 204) = v49 != 0;
          }
          goto LABEL_203;
        case 0xEu:
          if (v9 != 114) {
            goto LABEL_195;
          }
          uint64_t v51 = (char *)(v8 - 1);
          while (1)
          {
            v52 = (unsigned __int8 *)(v51 + 1);
            *(void *)v125 = v51 + 1;
            v53 = *(_DWORD **)(a1 + 56);
            if (v53 && (uint64_t v54 = *(int *)(a1 + 48), (int)v54 < *v53))
            {
              *(_DWORD *)(a1 + 48) = v54 + 1;
              uint64_t v55 = *(void *)&v53[2 * v54 + 2];
            }
            else
            {
              int v56 = sub_11BE320(*(void *)(a1 + 40));
              uint64_t v55 = sub_188CDC8(a1 + 40, (uint64_t)v56);
              v52 = *(unsigned __int8 **)v125;
            }
            uint64_t v51 = sub_11AB964(a3, v55, v52);
            *(void *)v125 = v51;
            if (!v51) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v51 || *v51 != 114) {
              goto LABEL_203;
            }
          }
        case 0xFu:
          if (v9 != 120)
          {
            if (v9 == 122)
            {
              *(void *)&long long v126 = a1 + 64;
              *((void *)&v126 + 1) = sub_166ED34;
              uint64_t v127 = a1 + 8;
              int v128 = 15;
              uint64_t v15 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v8, &v126);
LABEL_202:
              *(void *)v125 = v15;
              if (!v15) {
                goto LABEL_208;
              }
              goto LABEL_203;
            }
LABEL_195:
            if (v9) {
              BOOL v120 = (v9 & 7) == 4;
            }
            else {
              BOOL v120 = 1;
            }
            if (v120)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_208:
              *(void *)v125 = 0;
              goto LABEL_2;
            }
            if (*v122)
            {
              v121 = (std::string *)((*v122 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v121 = (std::string *)sub_188DBD8(v122);
              int v8 = *(unsigned __int8 **)v125;
            }
            uint64_t v15 = (uint64_t)sub_1885AC0(v9, v121, (char *)v8, a3);
            goto LABEL_202;
          }
          uint64_t v57 = (uint64_t)(v8 - 1);
          break;
        case 0x10u:
          if (v9 != 129) {
            goto LABEL_195;
          }
          uint64_t v66 = *(void *)v8;
          unsigned int v38 = v8 + 8;
          v5 |= 0x8000u;
          *(void *)(a1 + 208) = v66;
LABEL_108:
          *(void *)v125 = v38;
          goto LABEL_203;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_195;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v67 = *(void *)(a1 + 160);
          if (!v67)
          {
            int v68 = (void *)(*v122 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v122) {
              int v68 = (void *)*v68;
            }
            sub_11BE29C((uint64_t)v68);
            uint64_t v67 = v69;
            *(void *)(a1 + 160) = v69;
            int v8 = *(unsigned __int8 **)v125;
          }
          uint64_t v15 = (uint64_t)sub_11AB9F4(a3, v67, v8);
          goto LABEL_202;
        case 0x12u:
          if (v9 != 144) {
            goto LABEL_195;
          }
          v5 |= 0x4000u;
          int v70 = (char *)(v8 + 1);
          uint64_t v71 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_119;
          }
          int v72 = *v70;
          uint64_t v71 = v71 + (v72 << 7) - 128;
          if (v72 < 0)
          {
            uint64_t v116 = sub_188C138((uint64_t)v8, v71);
            *(void *)v125 = v116;
            *(unsigned char *)(a1 + 205) = v117 != 0;
            if (!v116) {
              goto LABEL_208;
            }
          }
          else
          {
            int v70 = (char *)(v8 + 2);
LABEL_119:
            *(void *)v125 = v70;
            *(unsigned char *)(a1 + 205) = v71 != 0;
          }
          goto LABEL_203;
        case 0x13u:
          if (v9 != 154) {
            goto LABEL_195;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v73 = *(void *)(a1 + 168);
          if (!v73)
          {
            int v74 = (void *)(*v122 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v122) {
              int v74 = (void *)*v74;
            }
            sub_11BE720((uint64_t)v74);
            uint64_t v73 = v75;
            *(void *)(a1 + 168) = v75;
            int v8 = *(unsigned __int8 **)v125;
          }
          uint64_t v15 = (uint64_t)sub_11AA2AC(a3, v73, v8);
          goto LABEL_202;
        case 0x14u:
          if (v9 != 160) {
            goto LABEL_195;
          }
          v5 |= 0x10000u;
          int v76 = (char *)(v8 + 1);
          int v77 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_130;
          }
          int v78 = *v76;
          int v77 = v77 + (v78 << 7) - 128;
          if (v78 < 0)
          {
            uint64_t v118 = sub_188C0D0((uint64_t)v8, v77);
            *(void *)v125 = v118;
            *(_DWORD *)(a1 + 216) = v119;
            if (!v118) {
              goto LABEL_208;
            }
          }
          else
          {
            int v76 = (char *)(v8 + 2);
LABEL_130:
            *(void *)v125 = v76;
            *(_DWORD *)(a1 + 216) = v77;
          }
          goto LABEL_203;
        case 0x15u:
          if (v9 != 170) {
            goto LABEL_195;
          }
          v79 = (char *)(v8 - 2);
          while (1)
          {
            v80 = (unsigned __int8 *)(v79 + 2);
            *(void *)v125 = v79 + 2;
            v81 = *(_DWORD **)(a1 + 96);
            if (v81 && (uint64_t v82 = *(int *)(a1 + 88), (int)v82 < *v81))
            {
              *(_DWORD *)(a1 + 88) = v82 + 1;
              uint64_t v83 = *(void *)&v81[2 * v82 + 2];
            }
            else
            {
              v84 = sub_11BE7A4(*v123);
              uint64_t v83 = sub_188CDC8((uint64_t)v123, (uint64_t)v84);
              v80 = *(unsigned __int8 **)v125;
            }
            v79 = sub_11ABA84(a3, v83, v80);
            *(void *)v125 = v79;
            if (!v79) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v79 || *(_WORD *)v79 != 426) {
              goto LABEL_203;
            }
          }
        case 0x16u:
          if (v9 == 176)
          {
            unint64_t v85 = (unint64_t)(v8 - 2);
            while (1)
            {
              *(void *)v125 = v85 + 2;
              int v86 = *(unsigned __int8 *)(v85 + 2);
              if (*(char *)(v85 + 2) < 0)
              {
                int v87 = v86 + (*(unsigned __int8 *)(v85 + 3) << 7);
                int v86 = v87 - 128;
                if (*(char *)(v85 + 3) < 0)
                {
                  unint64_t v85 = sub_188C0D0(v85 + 2, v87 - 128);
                  int v86 = v88;
                }
                else
                {
                  v85 += 4;
                }
              }
              else
              {
                v85 += 3;
              }
              *(void *)v125 = v85;
              uint64_t v89 = *(unsigned int *)(a1 + 104);
              if (v89 == *(_DWORD *)(a1 + 108))
              {
                int v90 = v89 + 1;
                sub_188C80C((unsigned int *)(a1 + 104), v89 + 1);
                *(_DWORD *)(*(void *)(a1 + 112) + 4 * v89) = v86;
                unint64_t v85 = *(void *)v125;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 112) + 4 * v89) = v86;
                int v90 = v89 + 1;
              }
              *(_DWORD *)(a1 + 104) = v90;
              if (!v85) {
                goto LABEL_208;
              }
              if (*(void *)a3 <= v85 || *(_WORD *)v85 != 432) {
                goto LABEL_203;
              }
            }
          }
          if (v9 != 178) {
            goto LABEL_195;
          }
          uint64_t v15 = (uint64_t)sub_188C2CC((unsigned int *)(a1 + 104), v8, (uint64_t)a3);
          goto LABEL_202;
        case 0x17u:
          if (v9 != 186) {
            goto LABEL_195;
          }
          v91 = (const std::string::value_type *)(v8 - 2);
          while (1)
          {
            v92 = (char *)(v91 + 2);
            *(void *)v125 = v91 + 2;
            v93 = *(_DWORD **)(a1 + 136);
            if (v93 && (uint64_t v94 = *(int *)(a1 + 128), (int)v94 < *v93))
            {
              *(_DWORD *)(a1 + 128) = v94 + 1;
              v95 = *(std::string **)&v93[2 * v94 + 2];
            }
            else
            {
              if (!*v124) {
                operator new();
              }
              void *v97 = v96;
              v97[1] = sub_3A6EDC;
              void *v96 = 0;
              v96[1] = 0;
              v96[2] = 0;
              v95 = (std::string *)sub_188CDC8((uint64_t)v124, (uint64_t)v96);
              v92 = *(char **)v125;
            }
            v91 = sub_188C244(v95, v92, (uint64_t)a3);
            *(void *)v125 = v91;
            if (!v91) {
              goto LABEL_208;
            }
            if (*(void *)a3 <= (unint64_t)v91 || *(_WORD *)v91 != 442) {
              goto LABEL_203;
            }
          }
        default:
          goto LABEL_195;
      }
      break;
    }
    while (1)
    {
      *(void *)v125 = v57 + 1;
      unint64_t v58 = *(unsigned __int8 *)(v57 + 1);
      v59 = (char *)(v57 + 2);
      if (*(char *)(v57 + 1) < 0)
      {
        int v60 = *v59;
        int v61 = v58 + (v60 << 7);
        unint64_t v58 = (v61 - 128);
        if (v60 < 0)
        {
          *(void *)v125 = sub_188C138(v57 + 1, (v61 - 128));
          if (!*(void *)v125) {
            goto LABEL_208;
          }
          unint64_t v58 = v64;
          goto LABEL_92;
        }
        v59 = (char *)(v57 + 3);
      }
      *(void *)v125 = v59;
LABEL_92:
      if (sub_166ED34(v58))
      {
        uint64_t v62 = *(unsigned int *)(a1 + 64);
        if (v62 == *(_DWORD *)(a1 + 68))
        {
          int v63 = v62 + 1;
          sub_188C80C((unsigned int *)(a1 + 64), v62 + 1);
          *(_DWORD *)(*(void *)(a1 + 72) + 4 * v62) = v58;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 72) + 4 * v62) = v58;
          int v63 = v62 + 1;
        }
        *(_DWORD *)(a1 + 64) = v63;
      }
      else
      {
        if (*v122) {
          v65 = (std::string *)((*v122 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v65 = (std::string *)sub_188DBD8(v122);
        }
        sub_188C020(15, v58, v65);
      }
      uint64_t v57 = *(void *)v125;
      if (*(void *)a3 <= *(void *)v125 || **(unsigned char **)v125 != 120) {
        goto LABEL_203;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v125;
}

uint64_t sub_11AB844(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B97B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AB8D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A6ED8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AB964(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A66CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AB9F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A5494(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11ABA84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11A9F3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11ABB14(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 144);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_13BA104(v7, v9, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 176);
  char *v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_4:
    if ((v6 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 177);
  char *v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x40) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 178);
  char *v4 = 32;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_22:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 179);
    char *v4 = 40;
    v4[1] = v13;
    v4 += 2;
  }
LABEL_25:
  uint64_t v14 = *(unsigned int *)(a1 + 24);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8 * v14;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 32) + v15);
      char *v4 = 49;
      *(void *)(v4 + 1) = v17;
      v4 += 9;
      v15 += 8;
    }
    while (v16 != v15);
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 180);
    char *v4 = 56;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 192);
    char *v4 = 64;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 184);
    char *v4 = 73;
    *(void *)(v4 + 1) = v24;
    v4 += 9;
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 196);
    char *v4 = 80;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 200);
    char *v4 = 88;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 152);
    char *v4 = 98;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    v4[1] = v32;
    if (v32 > 0x7F) {
      int v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      int v33 = v4 + 2;
    }
    int v4 = sub_11A71B0(v31, (unint64_t)v33, a3);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v34 = *(unsigned char *)(a1 + 204);
    char *v4 = 104;
    v4[1] = v34;
    v4 += 2;
  }
  int v35 = *(_DWORD *)(a1 + 48);
  if (v35)
  {
    for (int i = 0; i != v35; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      char *v4 = 114;
      unsigned int v38 = *(_DWORD *)(v37 + 20);
      v4[1] = v38;
      if (v38 > 0x7F) {
        uint64_t v39 = sub_188A9CC(v38, v4 + 1);
      }
      else {
        uint64_t v39 = v4 + 2;
      }
      int v4 = sub_11A6954(v37, v39, a3);
    }
  }
  uint64_t v40 = *(unsigned int *)(a1 + 64);
  if ((int)v40 >= 1)
  {
    for (uint64_t j = 0; j != v40; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v42 = *(int *)(*(void *)(a1 + 72) + 4 * j);
      char *v4 = 120;
      v4[1] = v42;
      if (v42 > 0x7F)
      {
        v4[1] = v42 | 0x80;
        unint64_t v43 = v42 >> 7;
        v4[2] = v42 >> 7;
        v4 += 3;
        if (v42 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v44 = v43 >> 14;
            v43 >>= 7;
            *v4++ = v43;
          }
          while (v44);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v45 = *(void *)(a1 + 208);
    *(_WORD *)int v4 = 385;
    *(void *)(v4 + 2) = v45;
    v4 += 10;
    if ((v6 & 4) == 0)
    {
LABEL_92:
      if ((v6 & 0x4000) == 0) {
        goto LABEL_93;
      }
      goto LABEL_105;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_92;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v46 = *(void *)(a1 + 160);
  *(_WORD *)int v4 = 394;
  unsigned int v47 = *(_DWORD *)(v46 + 20);
  v4[2] = v47;
  if (v47 > 0x7F) {
    unint64_t v48 = sub_188A9CC(v47, v4 + 2);
  }
  else {
    unint64_t v48 = v4 + 3;
  }
  int v4 = sub_11A5ACC(v46, (unint64_t)v48, a3);
  if ((v6 & 0x4000) == 0)
  {
LABEL_93:
    if ((v6 & 8) == 0) {
      goto LABEL_94;
    }
    goto LABEL_108;
  }
LABEL_105:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v49 = *(unsigned char *)(a1 + 205);
  *(_WORD *)int v4 = 400;
  v4[2] = v49;
  v4 += 3;
  if ((v6 & 8) == 0)
  {
LABEL_94:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_114;
  }
LABEL_108:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v50 = *(void *)(a1 + 168);
  *(_WORD *)int v4 = 410;
  unsigned int v51 = *(_DWORD *)(v50 + 20);
  v4[2] = v51;
  if (v51 > 0x7F) {
    v52 = sub_188A9CC(v51, v4 + 2);
  }
  else {
    v52 = v4 + 3;
  }
  int v4 = sub_11A9680(v50, (unint64_t)v52, a3);
  if ((v6 & 0x10000) != 0)
  {
LABEL_114:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v53 = *(_DWORD *)(a1 + 216);
    *(_WORD *)int v4 = 416;
    v4[2] = v53;
    if (v53 > 0x7F)
    {
      v4[2] = v53 | 0x80;
      unsigned int v54 = v53 >> 7;
      v4[3] = v53 >> 7;
      v4 += 4;
      if (v53 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v55 = v54 >> 14;
          v54 >>= 7;
          *v4++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_120:
  int v56 = *(_DWORD *)(a1 + 88);
  if (v56)
  {
    for (int k = 0; k != v56; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v58 = *(void *)(*(void *)(a1 + 96) + 8 * k + 8);
      *(_WORD *)int v4 = 426;
      unsigned int v59 = *(_DWORD *)(v58 + 20);
      v4[2] = v59;
      if (v59 > 0x7F) {
        int v60 = sub_188A9CC(v59, v4 + 2);
      }
      else {
        int v60 = v4 + 3;
      }
      int v4 = sub_11AA3CC(v58, (unint64_t)v60, a3);
    }
  }
  uint64_t v61 = *(unsigned int *)(a1 + 104);
  if ((int)v61 >= 1)
  {
    for (uint64_t m = 0; m != v61; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v63 = *(_DWORD *)(*(void *)(a1 + 112) + 4 * m);
      *(_WORD *)int v4 = 432;
      v4[2] = v63;
      if (v63 > 0x7F)
      {
        v4[2] = v63 | 0x80;
        unsigned int v64 = v63 >> 7;
        v4[3] = v63 >> 7;
        v4 += 4;
        if (v63 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v65 = v64 >> 14;
            v64 >>= 7;
            *v4++ = v64;
          }
          while (v65);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v66 = *(unsigned int *)(a1 + 128);
  if ((int)v66 >= 1)
  {
    uint64_t v67 = 0;
    uint64_t v68 = 8 * v66;
    do
    {
      uint64_t v69 = *(void **)(*(void *)(a1 + 136) + v67 + 8);
      if (*((char *)v69 + 23) < 0)
      {
        int64_t v70 = v69[1];
        if (v70 > 127) {
          goto LABEL_148;
        }
      }
      else
      {
        int64_t v70 = *((unsigned __int8 *)v69 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v70)
      {
        *(_WORD *)int v4 = 442;
        v4[2] = v70;
        if (*((char *)v69 + 23) < 0) {
          uint64_t v69 = (void *)*v69;
        }
        uint64_t v71 = v4 + 3;
        memcpy(v71, v69, v70);
        int v4 = &v71[v70];
        goto LABEL_146;
      }
LABEL_148:
      int v4 = (char *)sub_188A868(a3, 23, (uint64_t)v69, v4);
LABEL_146:
      v67 += 8;
    }
    while (v68 != v67);
  }
  uint64_t v72 = *(void *)(a1 + 8);
  if ((v72 & 1) == 0) {
    return v4;
  }
  unint64_t v74 = v72 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v74 + 31) < 0)
  {
    uint64_t v75 = *(void **)(v74 + 8);
    uint64_t v76 = *(void *)(v74 + 16);
  }
  else
  {
    uint64_t v75 = (void *)(v74 + 8);
    LODWORD(v76) = *(unsigned __int8 *)(v74 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v76)
  {
    uint64_t v77 = (int)v76;
    memcpy(v4, v75, (int)v76);
    v4 += v77;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v75, v76, v4);
}

uint64_t sub_11AC500(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 48);
  uint64_t v3 = 9 * *(unsigned int *)(a1 + 24) + v2;
  uint64_t v4 = *(void *)(a1 + 56);
  if (v4) {
    int v5 = (uint64_t *)(v4 + 8);
  }
  else {
    int v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_11A6B94(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 64);
  if (v9)
  {
    uint64_t v10 = 0;
    int v11 = 0;
    do
    {
      int v12 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * v11);
      if (v12 < 0) {
        uint64_t v13 = 10;
      }
      else {
        uint64_t v13 = (9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v13;
      ++v11;
    }
    while (v9 != v11);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v14 = *(int *)(a1 + 88);
  uint64_t v15 = v3 + v9 + v10 + 2 * v14;
  uint64_t v16 = *(void *)(a1 + 96);
  if (v16) {
    uint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    uint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_11AA62C(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = sub_188D4F0((unsigned int *)(a1 + 104));
  uint64_t v22 = *(unsigned int *)(a1 + 128);
  uint64_t v23 = v21 + v15 + 2 * (v22 + *(unsigned int *)(a1 + 104));
  if ((int)v22 >= 1)
  {
    uint64_t v24 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v25 = *v24++;
      uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
      uint64_t v27 = *(void *)(v25 + 8);
      if ((v26 & 0x80u) == 0) {
        uint64_t v27 = v26;
      }
      v23 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      --v22;
    }
    while (v22);
  }
  int v28 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v28)
  {
    if (v28)
    {
      uint64_t v34 = sub_13BA868(*(void *)(a1 + 144));
      v23 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v28 & 2) == 0)
      {
LABEL_29:
        if ((v28 & 4) == 0) {
          goto LABEL_30;
        }
        goto LABEL_63;
      }
    }
    else if ((v28 & 2) == 0)
    {
      goto LABEL_29;
    }
    uint64_t v35 = sub_11A744C(*(void *)(a1 + 152));
    v23 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 4) == 0)
    {
LABEL_30:
      if ((v28 & 8) == 0)
      {
LABEL_32:
        uint64_t v30 = v23 + 2;
        if ((v28 & 0x10) == 0) {
          uint64_t v30 = v23;
        }
        if ((v28 & 0x20) != 0) {
          v30 += 2;
        }
        if ((v28 & 0x40) != 0) {
          v30 += 2;
        }
        if ((v28 & 0x80) != 0) {
          uint64_t v23 = v30 + 2;
        }
        else {
          uint64_t v23 = v30;
        }
        goto LABEL_41;
      }
LABEL_31:
      uint64_t v29 = sub_11A99A8(*(void *)(a1 + 168));
      v23 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
      goto LABEL_32;
    }
LABEL_63:
    uint64_t v36 = sub_11A61C4(*(void *)(a1 + 160));
    v23 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v28 & 8) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
LABEL_41:
  if ((v28 & 0xFF00) == 0) {
    goto LABEL_57;
  }
  if ((v28 & 0x100) != 0) {
    v23 += ((9 * (__clz(*(_DWORD *)(a1 + 180) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v31 = v23 + 9;
  if ((v28 & 0x200) == 0) {
    uint64_t v31 = v23;
  }
  if ((v28 & 0x400) == 0)
  {
    if ((v28 & 0x800) == 0) {
      goto LABEL_48;
    }
LABEL_66:
    v31 += ((9 * (__clz(*(_DWORD *)(a1 + 196) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v28 & 0x1000) == 0) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  v31 += ((9 * (__clz(*(_DWORD *)(a1 + 192) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v28 & 0x800) != 0) {
    goto LABEL_66;
  }
LABEL_48:
  if ((v28 & 0x1000) != 0) {
LABEL_49:
  }
    v31 += ((9 * (__clz(*(_DWORD *)(a1 + 200) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_50:
  if ((v28 & 0x2000) != 0) {
    v31 += 2;
  }
  if ((v28 & 0x4000) != 0) {
    v31 += 3;
  }
  if ((v28 & 0x8000) != 0) {
    uint64_t v23 = v31 + 10;
  }
  else {
    uint64_t v23 = v31;
  }
LABEL_57:
  if ((v28 & 0x10000) != 0) {
    v23 += ((9 * (__clz(*(_DWORD *)(a1 + 216) | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if (v32)
  {
    unint64_t v37 = v32 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    v23 += v38;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_11AC8E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_11DC278((uint64_t *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    int v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *int v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 64);
  if (v13)
  {
    uint64_t v14 = *(int *)(a1 + 64);
    sub_188C80C((unsigned int *)(a1 + 64), v14 + v13);
    uint64_t v15 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v15 + 4 * v14), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v16 = *(_DWORD *)(a2 + 88);
  if (v16)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v18 = (std::string **)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_11DC304((std::string *)(a1 + 80), v18, v17, v16, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v19 = *(_DWORD *)(a1 + 88) + v16;
    *(_DWORD *)(a1 + 88) = v19;
    uint64_t v20 = *(int **)(a1 + 96);
    if (*v20 < v19) {
      *uint64_t v20 = v19;
    }
  }
  int v21 = *(_DWORD *)(a2 + 104);
  if (v21)
  {
    uint64_t v22 = *(int *)(a1 + 104);
    sub_188C80C((unsigned int *)(a1 + 104), v22 + v21);
    uint64_t v23 = *(void *)(a1 + 112);
    *(_DWORD *)(a1 + 104) += *(_DWORD *)(a2 + 104);
    memcpy((void *)(v23 + 4 * v22), *(const void **)(a2 + 112), 4 * *(int *)(a2 + 104));
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_188FB98(a1 + 120, v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    int v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v29)
  {
    if (v29)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v32 = *(void *)(a1 + 144);
      if (!v32)
      {
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          uint64_t v34 = (void *)*v34;
        }
        uint64_t v32 = sub_13D9608((uint64_t)v34);
        *(void *)(a1 + 144) = v32;
      }
      if (*(void *)(a2 + 144)) {
        uint64_t v35 = *(uint64_t (****)())(a2 + 144);
      }
      else {
        uint64_t v35 = &off_2535FC8;
      }
      sub_13BAC58(v32, (uint64_t)v35);
      if ((v29 & 2) == 0)
      {
LABEL_19:
        if ((v29 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_60;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_19;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v36 = *(std::string **)(a1 + 152);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = (std::string *)sub_11BE3BC((uint64_t)v38);
      *(void *)(a1 + 152) = v36;
    }
    if (*(void *)(a2 + 152)) {
      uint64_t v39 = *(uint64_t (****)())(a2 + 152);
    }
    else {
      uint64_t v39 = &off_252C838;
    }
    sub_1104DD8(v36, (uint64_t)v39);
    if ((v29 & 4) == 0)
    {
LABEL_20:
      if ((v29 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_68;
    }
LABEL_60:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v40 = *(std::string **)(a1 + 160);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      unint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        unint64_t v42 = (void *)*v42;
      }
      sub_11BE29C((uint64_t)v42);
      *(void *)(a1 + 160) = v40;
    }
    if (*(void *)(a2 + 160)) {
      unint64_t v43 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      unint64_t v43 = &off_252C7E8;
    }
    sub_11A6454(v40, (uint64_t)v43);
    if ((v29 & 8) == 0)
    {
LABEL_21:
      if ((v29 & 0x10) == 0) {
        goto LABEL_22;
      }
      goto LABEL_76;
    }
LABEL_68:
    *(_DWORD *)(a1 + 16) |= 8u;
    unint64_t v44 = *(std::string **)(a1 + 168);
    if (!v44)
    {
      uint64_t v45 = *(void *)(a1 + 8);
      uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        uint64_t v46 = (void *)*v46;
      }
      sub_11BE720((uint64_t)v46);
      *(void *)(a1 + 168) = v44;
    }
    if (*(void *)(a2 + 168)) {
      unsigned int v47 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      unsigned int v47 = &off_252C920;
    }
    sub_11A9B50(v44, (uint64_t)v47);
    if ((v29 & 0x10) == 0)
    {
LABEL_22:
      if ((v29 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_77;
    }
LABEL_76:
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    if ((v29 & 0x20) == 0)
    {
LABEL_23:
      if ((v29 & 0x40) == 0) {
        goto LABEL_24;
      }
      goto LABEL_78;
    }
LABEL_77:
    *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
    if ((v29 & 0x40) == 0)
    {
LABEL_24:
      if ((v29 & 0x80) == 0)
      {
LABEL_26:
        *(_DWORD *)(a1 + 16) |= v29;
        goto LABEL_27;
      }
LABEL_25:
      *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
      goto LABEL_26;
    }
LABEL_78:
    *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
    if ((v29 & 0x80) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_27:
  if ((v29 & 0xFF00) == 0) {
    goto LABEL_38;
  }
  if ((v29 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 180) = *(_DWORD *)(a2 + 180);
    if ((v29 & 0x200) == 0)
    {
LABEL_30:
      if ((v29 & 0x400) == 0) {
        goto LABEL_31;
      }
      goto LABEL_82;
    }
  }
  else if ((v29 & 0x200) == 0)
  {
    goto LABEL_30;
  }
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  if ((v29 & 0x400) == 0)
  {
LABEL_31:
    if ((v29 & 0x800) == 0) {
      goto LABEL_32;
    }
    goto LABEL_83;
  }
LABEL_82:
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  if ((v29 & 0x800) == 0)
  {
LABEL_32:
    if ((v29 & 0x1000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_84;
  }
LABEL_83:
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  if ((v29 & 0x1000) == 0)
  {
LABEL_33:
    if ((v29 & 0x2000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_85;
  }
LABEL_84:
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  if ((v29 & 0x2000) == 0)
  {
LABEL_34:
    if ((v29 & 0x4000) == 0) {
      goto LABEL_35;
    }
LABEL_86:
    *(unsigned char *)(a1 + 205) = *(unsigned char *)(a2 + 205);
    if ((v29 & 0x8000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_85:
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  if ((v29 & 0x4000) != 0) {
    goto LABEL_86;
  }
LABEL_35:
  if ((v29 & 0x8000) != 0) {
LABEL_36:
  }
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
LABEL_37:
  *(_DWORD *)(a1 + 16) |= v29;
LABEL_38:
  if ((v29 & 0x10000) != 0)
  {
    int v30 = *(_DWORD *)(a2 + 216);
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    *(_DWORD *)(a1 + 216) = v30;
  }
  uint64_t v31 = *(void *)(a2 + 8);
  if (v31)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v31 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11ACD8C(uint64_t a1)
{
  uint64_t result = sub_11ACDD0(a1 + 40);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_13BB038(*(void *)(a1 + 144));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_11ACDD0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_15B0F18(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_11ACE5C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClosureInformation");
}

void *sub_11ACE6C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11ACEE0(void *a1)
{
  sub_11ACE6C(a1);

  operator delete();
}

uint64_t sub_11ACF18(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(unsigned char *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11ACF40(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(unsigned char *)(a1 + 28) = v16 != 0;
      goto LABEL_30;
    }
    int v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(unsigned char *)(a1 + 28) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_11AD140(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_11AD2A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1) {
      uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_11AD324(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      result[1].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 28);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11AD370()
{
  return 1;
}

void *sub_11AD378@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.LegStepAnalyticsData.GuidanceEventInfo");
}

void *sub_11AD388(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB954(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11AD408(void *a1)
{
  sub_11AD388(a1);

  operator delete();
}

uint64_t sub_11AD440(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11ACF18(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0x1F) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11AD4D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v46 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v46, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v46 + 1;
    unsigned int v9 = *v46;
    if (*v46 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v46, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v46 + 2;
      }
    }
    uint64_t v46 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_46;
        }
        v5 |= 1u;
        int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v46 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_53;
        }
        uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v46 = v36;
        *(_DWORD *)(a1 + 48) = v37;
        if (v36) {
          goto LABEL_53;
        }
        goto LABEL_72;
      case 2u:
        if (v9 != 16) {
          goto LABEL_46;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v38 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v46 = v38;
          *(_DWORD *)(a1 + 52) = v39;
          if (!v38) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v46 = v15;
          *(_DWORD *)(a1 + 52) = v16;
        }
        goto LABEL_53;
      case 3u:
        if (v9 != 24) {
          goto LABEL_46;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v40 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v46 = v40;
          *(_DWORD *)(a1 + 56) = v41;
          if (!v40) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v46 = v18;
          *(_DWORD *)(a1 + 56) = v19;
        }
        goto LABEL_53;
      case 4u:
        if (v9 != 34) {
          goto LABEL_46;
        }
        int v21 = v8 - 1;
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v46 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_11BE910(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            uint64_t v22 = (unsigned __int8 *)v46;
          }
          int v21 = sub_11AD8F4(a3, v25, v22);
          uint64_t v46 = v21;
          if (!v21) {
            goto LABEL_72;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_53;
          }
        }
      case 5u:
        if (v9 != 40) {
          goto LABEL_46;
        }
        v5 |= 8u;
        int v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          unint64_t v42 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v46 = v42;
          *(unsigned char *)(a1 + 60) = v43 != 0;
          if (!v42) {
            goto LABEL_72;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          uint64_t v46 = v27;
          *(unsigned char *)(a1 + 60) = v28 != 0;
        }
        goto LABEL_53;
      case 6u:
        if (v9 != 48) {
          goto LABEL_46;
        }
        int v30 = v8 + 1;
        unint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v33 = v31 + (v32 << 7);
        unint64_t v31 = (v33 - 128);
        if (v32 < 0)
        {
          uint64_t v46 = (char *)sub_188C138((uint64_t)v8, (v33 - 128));
          if (!v46) {
            goto LABEL_72;
          }
          unint64_t v31 = v44;
        }
        else
        {
          int v30 = v8 + 2;
LABEL_43:
          uint64_t v46 = v30;
        }
        if (v31 > 4)
        {
          if (*v7) {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v31, v45);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 64) = v31;
        }
        goto LABEL_53;
      default:
LABEL_46:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v46;
          }
          uint64_t v46 = (char *)sub_1885AC0(v9, v35, v8, a3);
          if (!v46) {
            goto LABEL_72;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v46, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          uint64_t v46 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v46;
    }
  }
}

char *sub_11AD8F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11ACF40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11AD984(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_11AD140(v18, (unint64_t)v20, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v21 = *(unsigned char *)(a1 + 60);
    unsigned char *v4 = 40;
    v4[1] = v21;
    v4 += 2;
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 64);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_11ADCF4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11AD2A0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_24;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 4) != 0) {
LABEL_13:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if ((v8 & 8) != 0) {
    v2 += 2;
  }
  if ((v8 & 0x10) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 64);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_24:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11ADE74(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_11DC390(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_18;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
LABEL_18:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_19:
    v3[2].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 60);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11ADFAC()
{
  return 1;
}

void *sub_11ADFB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.LegStepAnalyticsData");
}

void *sub_11ADFC4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11AE038(void *a1)
{
  sub_11ADFC4(a1);

  operator delete();
}

uint64_t sub_11AE070(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11AE094(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unsigned int v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unsigned int v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    char v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_11AE284(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11AE428(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11AE4CC()
{
  return 1;
}

void *sub_11AE4D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLegAnalyticsData.ValueFromOffset");
}

void *sub_11AE4E4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11AE558(void *a1)
{
  sub_11AE4E4(a1);

  operator delete();
}

uint64_t *sub_11AE590(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_11AE5A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_11AE6A0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_11AE738(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_11AE76C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11AE788()
{
  return 1;
}

void *sub_11AE790@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLegAnalyticsData.EVChargingStopInfo.PreferredNetwork");
}

uint64_t sub_11AE7A0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252CAA0)
  {
    unint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_11AE4E4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11AE858(uint64_t a1)
{
  sub_11AE7A0(a1);

  operator delete();
}

uint64_t sub_11AE890(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v2 = *(void *)(result + 24);
    char v3 = *(unsigned char *)(v2 + 8);
    uint64_t result = v2 + 8;
    if (v3) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_11AE8F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  char v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = v16 + 2;
      }
    }
    int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_11BEAA4((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      unint64_t v6 = v16;
    }
    unsigned int v12 = sub_11AEA4C(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    int v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = v16;
    }
    unsigned int v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_11AEA4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11AE5A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AEADC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 16);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_11AE6A0(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11AEBEC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v2 = *(void *)(a1 + 24);
    uint64_t v3 = *(void *)(v2 + 8);
    if (v3)
    {
      unint64_t v9 = v3 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v9 + 31) < 0) {
        uint64_t v4 = *(void *)(v9 + 16);
      }
      else {
        uint64_t v4 = *(unsigned __int8 *)(v9 + 31);
      }
    }
    else
    {
      uint64_t v4 = 0;
    }
    *(_DWORD *)(v2 + 16) = v4;
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_11AEC84(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t result = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!result)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v6 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v6 = (void *)*v6;
      }
      uint64_t result = (std::string *)sub_11BEAA4((uint64_t)v6);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)result;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (!v4) {
      uint64_t v4 = &off_252CA88;
    }
    unint64_t v7 = (unint64_t)v4[1];
    if (v7) {
      uint64_t result = sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11AED40()
{
  return 1;
}

void *sub_11AED48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLegAnalyticsData.EVChargingStopInfo");
}

uint64_t sub_11AED58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252CAC0)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_11AE7A0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_11DBA54((void *)(a1 + 72));
  sub_11DB9D4((void *)(a1 + 48));
  sub_11DB9D4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11AEE34(uint64_t a1)
{
  sub_11AED58(a1);

  operator delete();
}

uint64_t sub_11AEE6C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11AE070(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11AE070(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_11AD440(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_11AE890(*(void *)(v1 + 96));
  }
  char v12 = *(unsigned char *)(v1 + 8);
  uint64_t v11 = v1 + 8;
  *(_DWORD *)(v11 + 8) = 0;
  if (v12)
  {
    return sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

char *sub_11AEF4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    BOOL v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_45;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          char v12 = (unsigned __int8 *)(v11 + 1);
          BOOL v34 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            int v16 = sub_11BEA2C(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, (uint64_t)v16);
            char v12 = (unsigned __int8 *)v34;
          }
          uint64_t v11 = sub_11AF2AC(a3, v15, v12);
          BOOL v34 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_53;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_45;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          BOOL v34 = v17 + 1;
          int v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            int v22 = sub_11BEA2C(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, (uint64_t)v22);
            uint64_t v18 = (unsigned __int8 *)v34;
          }
          uint64_t v17 = sub_11AF2AC(a3, v21, v18);
          BOOL v34 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_53;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_45;
        }
        unint64_t v23 = v7 - 1;
        while (1)
        {
          int v24 = (unsigned __int8 *)(v23 + 1);
          BOOL v34 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 88);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 80), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 80) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_11BE98C(*(void *)(a1 + 72));
            uint64_t v27 = sub_188CDC8(a1 + 72, v28);
            int v24 = (unsigned __int8 *)v34;
          }
          unint64_t v23 = sub_11AF33C(a3, v27, v24);
          BOOL v34 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 26) {
            goto LABEL_53;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v29 = *(void **)(a1 + 96);
        if (!v29)
        {
          uint64_t v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v30 = (void *)*v30;
          }
          uint64_t v29 = sub_11BEB1C((uint64_t)v30);
          *(void *)(a1 + 96) = v29;
          uint64_t v7 = v34;
        }
        unint64_t v31 = sub_11AF3CC(a3, (uint64_t)v29, (unsigned __int8 *)v7);
        goto LABEL_52;
      default:
LABEL_45:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v6)
          {
            int v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v34;
          }
          unint64_t v31 = (char *)sub_1885AC0(v8, v33, v7, a3);
LABEL_52:
          BOOL v34 = v31;
          if (!v31) {
            return 0;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            return v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v34;
    }
  }
}

char *sub_11AF2AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11AE094(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AF33C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11AD4D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AF3CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11AE8F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AF45C(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11AE284(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_11AE284(v13, (unint64_t)v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_11AD984(v18, (unint64_t)v20, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v21 = *(void *)(a1 + 96);
    *__dst = 34;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    __dst[1] = v22;
    if (v22 > 0x7F) {
      unint64_t v23 = sub_188A9CC(v22, __dst + 1);
    }
    else {
      unint64_t v23 = __dst + 2;
    }
    __dst = sub_11AEADC(v21, (unint64_t)v23, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return __dst;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(__dst, v27, (int)v28);
    __dst += v29;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, __dst);
}

uint64_t sub_11AF710(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11AE428(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11AE428(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_11ADCF4(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v22 = sub_11AEBEC(*(void *)(a1 + 96));
    v16 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v16 += v26;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

std::string *sub_11AF894(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_11DC41C(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_11DC41C(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_11DC4A8((uint64_t *)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v19 = *(uint64_t (****)())(a2 + 96);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)v3[4].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v22 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v22 = (void *)*v22;
      }
      std::string::pointer data = (std::string *)sub_11BEB1C((uint64_t)v22);
      v3[4].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v19 = *(uint64_t (****)())(a2 + 96);
    }
    if (v19) {
      uint64_t v23 = v19;
    }
    else {
      uint64_t v23 = &off_252CAA0;
    }
    uint64_t result = sub_11AEC84(data, (uint64_t)v23);
  }
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11AFA80()
{
  return 1;
}

void *sub_11AFA88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLegAnalyticsData");
}

void *sub_11AFA98(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DBAD4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11AFB18(void *a1)
{
  sub_11AFA98(a1);

  operator delete();
}

uint64_t sub_11AFB50(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11AEE6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11AFBD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v21 = v8 + 1;
    int v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v21;
    int v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_34:
      uint64_t v26 = v21;
      *(_DWORD *)(a1 + 48) = v22;
      int v5 = 1;
      goto LABEL_35;
    }
    uint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v22);
    uint64_t v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_42;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    uint64_t v15 = v8 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v26 = v15 + 1;
      int v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_11BEB94(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = (unsigned __int8 *)v26;
      }
      uint64_t v15 = sub_11AFDFC(a3, v19, v16);
      uint64_t v26 = v15;
      if (!v15) {
        goto LABEL_42;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_35;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_42:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_11AFDFC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11AEF4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11AFE8C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_11AF45C(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11B0050(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11AF710(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11B012C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_11DC534(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11B0218()
{
  return 1;
}

void *sub_11B0220@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointRouteAnalyticsData");
}

void *sub_11B0230(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B02A4(void *a1)
{
  sub_11B0230(a1);

  operator delete();
}

uint64_t sub_11B02DC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11B02F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    int v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v25 = v15;
      *(unsigned char *)(a1 + 25) = v16 != 0;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    int v25 = v21;
    *(unsigned char *)(a1 + 25) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v25 = v18;
      *(unsigned char *)(a1 + 24) = v19 != 0;
      goto LABEL_30;
    }
    int v23 = (char *)sub_188C138((uint64_t)v8, v19);
    int v25 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    int v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  int v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_11B0504(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 25);
    unsigned char *v4 = 16;
    v4[1] = v8;
    v4 += 2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11B0620(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_11B0678(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      result[1].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 25);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11B06C4()
{
  return 1;
}

void *sub_11B06CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TransitJourneyAnalyticsData");
}

uint64_t sub_11B06DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B077C(uint64_t a1)
{
  sub_11B06DC(a1);

  operator delete();
}

uint64_t sub_11B07B4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11B07FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v19;
      *(void *)(a1 + 32) = v20;
      goto LABEL_30;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v20);
    *(void *)uint64_t v24 = v22;
    *(void *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_37;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      int v17 = (uint64_t *)*v17;
    }
    uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
    uint64_t v15 = (void *)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = *(char **)v24;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_24;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  *(void *)uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_11B09D8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_11B0B20(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11B0BDC(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0) {
      v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11B0C94()
{
  return 1;
}

void *sub_11B0C9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AnalyticsData.RoutingDataVersions");
}

uint64_t sub_11B0CAC(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252CB50 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B0D64(uint64_t a1)
{
  sub_11B0CAC(a1);

  operator delete();
}

unsigned char *sub_11B0D9C(unsigned char *result)
{
  int v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  if ((v2 & 0xE) != 0)
  {
    *((void *)v1 + 4) = 0;
    *((void *)v1 + 5) = 0;
  }
  char v4 = v1[8];
  unint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11B0E04(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v32 + 2;
      }
    }
    BOOL v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          BOOL v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C1918((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          unint64_t v8 = v32;
        }
        uint64_t v14 = sub_1198F14(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_37;
      case 2u:
        if (v9 != 16) {
          goto LABEL_30;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v16);
          BOOL v32 = v26;
          *(_DWORD *)(a1 + 40) = v27;
          if (!v26) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_19:
          BOOL v32 = v15;
          *(_DWORD *)(a1 + 40) = v16;
        }
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_30;
        }
        v5 |= 2u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v19);
          BOOL v32 = v28;
          *(void *)(a1 + 32) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_24:
          BOOL v32 = v18;
          *(void *)(a1 + 32) = v19;
        }
        goto LABEL_38;
      case 4u:
        if (v9 != 32) {
          goto LABEL_30;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v22);
          BOOL v32 = v30;
          *(_DWORD *)(a1 + 44) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_29:
          BOOL v32 = v21;
          *(_DWORD *)(a1 + 44) = v22;
        }
        goto LABEL_38;
      default:
LABEL_30:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v32;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v25, v8, a3);
LABEL_37:
          BOOL v32 = v14;
          if (!v14) {
            goto LABEL_49;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          BOOL v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v32;
    }
  }
}

char *sub_11B10D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 32);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 44);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_11B1360(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_11B1478(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unsigned int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unsigned int v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_21:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11B1570(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11B159C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AnalyticsData.ExperimentalAccessPointInfo");
}

uint64_t sub_11B15AC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_11BF8B8(*(void *)(result + 24));
  }
  if ((v2 & 0x1E) != 0)
  {
    *(void *)(v1 + 37) = 0;
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_11B1618(uint64_t a1)
{
  sub_11DB524(a1 + 16);
  uint64_t result = sub_188CC00(a1 + 40);
  uint64_t v3 = *(unsigned int *)(a1 + 72);
  if ((int)v3 >= 1)
  {
    char v4 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_11D5350(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

double sub_11B16A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_2499380;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a2;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_WORD *)(a1 + 224) = 0;
  return result;
}

uint64_t sub_11B1714(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 184);
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252CB80)
  {
    uint64_t v6 = *(void *)(a1 + 192);
    if (v6)
    {
      sub_11BF7C8(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 200);
    if (v7)
    {
      sub_11B06DC(v7);
      operator delete();
    }
    unsigned int v8 = *(void **)(a1 + 208);
    if (v8)
    {
      sub_11D650C(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_11DBD54((void *)(a1 + 160));
  sub_11DBCD4((void *)(a1 + 136));
  sub_11DBC54((void *)(a1 + 112));
  sub_11DBBD4((void *)(a1 + 88));
  sub_11DBB54((void *)(a1 + 64));
  sub_1889DA8(a1 + 48);
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B186C(uint64_t a1)
{
  sub_11B1714(a1);

  operator delete();
}

uint64_t sub_11B18A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v89 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v89, a3[11].i32[1]))
  {
    int v86 = 0;
    goto LABEL_3;
  }
  int v86 = 0;
  unint64_t v85 = (uint64_t *)(a1 + 8);
  int v87 = (uint64_t *)(a1 + 136);
  int v88 = (uint64_t *)(a1 + 160);
  uint64_t v6 = (uint64_t **)(a1 + 24);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v89 + 1);
    unsigned int v8 = **(unsigned char **)v89;
    if ((char)**(unsigned char **)v89 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v89, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v89 + 2);
      }
    }
    *(void *)uint64_t v89 = v7;
    switch(v8 >> 3)
    {
      case 2u:
        if (v8 != 16) {
          goto LABEL_137;
        }
        v86 |= 0x20u;
        unsigned int v12 = (char *)(v7 + 1);
        uint64_t v13 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = (char *)(v7 + 2);
LABEL_14:
          *(void *)uint64_t v89 = v12;
          *(unsigned char *)(a1 + 224) = v13 != 0;
          goto LABEL_145;
        }
        uint64_t v77 = sub_188C138((uint64_t)v7, v13);
        *(void *)uint64_t v89 = v77;
        *(unsigned char *)(a1 + 224) = v78 != 0;
        if (!v77) {
          goto LABEL_150;
        }
        goto LABEL_145;
      case 3u:
        if (v8 != 26) {
          goto LABEL_137;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v15 = *(void **)(a1 + 192);
        if (!v15)
        {
          unsigned int v16 = (void *)(*v85 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v85) {
            unsigned int v16 = (void *)*v16;
          }
          unint64_t v15 = sub_11CFEF0((uint64_t)v16);
          *(void *)(a1 + 192) = v15;
          uint64_t v7 = *(unsigned __int8 **)v89;
        }
        uint64_t v17 = (uint64_t)sub_11B21D8(a3, (uint64_t)v15, v7);
        goto LABEL_144;
      case 4u:
        if (v8 != 34) {
          goto LABEL_137;
        }
        unsigned int v18 = (const std::string::value_type *)(v7 - 1);
        while (1)
        {
          uint64_t v19 = (char *)(v18 + 1);
          *(void *)uint64_t v89 = v18 + 1;
          int v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            int v22 = *(std::string **)&v20[2 * v21 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v24 = v23;
            v24[1] = sub_3A6EDC;
            *uint64_t v23 = 0;
            v23[1] = 0;
            v23[2] = 0;
            int v22 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v23);
            uint64_t v19 = *(char **)v89;
          }
          unsigned int v18 = sub_188C244(v22, v19, (uint64_t)a3);
          *(void *)uint64_t v89 = v18;
          if (!v18) {
            goto LABEL_150;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 34) {
            goto LABEL_145;
          }
        }
      case 5u:
        if (v8 == 40)
        {
          uint64_t v25 = (uint64_t)(v7 - 1);
          while (1)
          {
            *(void *)uint64_t v89 = v25 + 1;
            unint64_t v26 = *(unsigned __int8 *)(v25 + 1);
            int v27 = (char *)(v25 + 2);
            if (*(char *)(v25 + 1) < 0)
            {
              int v28 = *v27;
              int v29 = v26 + (v28 << 7);
              unint64_t v26 = (v29 - 128);
              if (v28 < 0)
              {
                *(void *)uint64_t v89 = sub_188C138(v25 + 1, (v29 - 128));
                if (!*(void *)v89) {
                  goto LABEL_150;
                }
                unint64_t v26 = v32;
                goto LABEL_39;
              }
              int v27 = (char *)(v25 + 3);
            }
            *(void *)uint64_t v89 = v27;
LABEL_39:
            if (v26 > 2)
            {
              if (*v85) {
                int v33 = (std::string *)((*v85 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v33 = (std::string *)sub_188DBD8(v85);
              }
              sub_188C020(5, v26, v33);
            }
            else
            {
              uint64_t v30 = *(unsigned int *)(a1 + 48);
              if (v30 == *(_DWORD *)(a1 + 52))
              {
                int v31 = v30 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v30 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v26;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v26;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 48) = v31;
            }
            uint64_t v25 = *(void *)v89;
            if (*(void *)a3 <= *(void *)v89 || **(unsigned char **)v89 != 40) {
              goto LABEL_145;
            }
          }
        }
        if (v8 == 42)
        {
          *(void *)&long long v90 = a1 + 48;
          *((void *)&v90 + 1) = sub_11A1598;
          uint64_t v91 = a1 + 8;
          int v92 = 5;
          uint64_t v17 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v7, &v90);
LABEL_144:
          *(void *)uint64_t v89 = v17;
          if (!v17) {
            goto LABEL_150;
          }
LABEL_145:
          if (sub_11947B8((uint64_t)a3, (char **)v89, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_137:
        if (v8) {
          BOOL v83 = (v8 & 7) == 4;
        }
        else {
          BOOL v83 = 1;
        }
        if (!v83)
        {
          if (*v85)
          {
            v84 = (std::string *)((*v85 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v84 = (std::string *)sub_188DBD8(v85);
            uint64_t v7 = *(unsigned __int8 **)v89;
          }
          uint64_t v17 = (uint64_t)sub_1885AC0(v8, v84, (char *)v7, a3);
          goto LABEL_144;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_150:
        }
          *(void *)uint64_t v89 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 16) |= v86;
        return *(void *)v89;
      case 6u:
        if (v8 != 50) {
          goto LABEL_137;
        }
        BOOL v34 = v7 - 1;
        while (1)
        {
          uint64_t v35 = v34 + 1;
          *(void *)uint64_t v89 = v34 + 1;
          uint64_t v36 = *(_DWORD **)(a1 + 80);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 72), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 72) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_11BE844(*(void *)(a1 + 64));
            uint64_t v38 = sub_188CDC8(a1 + 64, v39);
            uint64_t v35 = *(unsigned __int8 **)v89;
          }
          BOOL v34 = (unsigned __int8 *)sub_11B2268(a3, v38, v35);
          *(void *)uint64_t v89 = v34;
          if (!v34) {
            goto LABEL_150;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 50) {
            goto LABEL_145;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_137;
        }
        uint64_t v40 = (char *)(v7 - 1);
        while (1)
        {
          int v41 = (unsigned __int8 *)(v40 + 1);
          *(void *)uint64_t v89 = v40 + 1;
          unint64_t v42 = *(_DWORD **)(a1 + 104);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 96), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 96) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            uint64_t v45 = sub_11BEC44(*(void *)(a1 + 88));
            uint64_t v44 = sub_188CDC8(a1 + 88, v45);
            int v41 = *(unsigned __int8 **)v89;
          }
          uint64_t v40 = sub_11B22F8(a3, v44, v41);
          *(void *)uint64_t v89 = v40;
          if (!v40) {
            goto LABEL_150;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 58) {
            goto LABEL_145;
          }
        }
      case 8u:
        if (v8 != 64) {
          goto LABEL_137;
        }
        v86 |= 0x40u;
        uint64_t v46 = (char *)(v7 + 1);
        uint64_t v47 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_77;
        }
        int v48 = *v46;
        uint64_t v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          uint64_t v79 = sub_188C138((uint64_t)v7, v47);
          *(void *)uint64_t v89 = v79;
          *(unsigned char *)(a1 + 225) = v80 != 0;
          if (!v79) {
            goto LABEL_150;
          }
        }
        else
        {
          uint64_t v46 = (char *)(v7 + 2);
LABEL_77:
          *(void *)uint64_t v89 = v46;
          *(unsigned char *)(a1 + 225) = v47 != 0;
        }
        goto LABEL_145;
      case 9u:
        if (v8 != 74) {
          goto LABEL_137;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        char v49 = *(void **)(a1 + 200);
        if (!v49)
        {
          uint64_t v50 = (void *)(*v85 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v85) {
            uint64_t v50 = (void *)*v50;
          }
          char v49 = sub_11BED5C((uint64_t)v50);
          *(void *)(a1 + 200) = v49;
          uint64_t v7 = *(unsigned __int8 **)v89;
        }
        uint64_t v17 = sub_11B2388(a3, (uint64_t)v49, v7);
        goto LABEL_144;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_137;
        }
        unsigned int v51 = (char *)(v7 - 1);
        while (1)
        {
          v52 = (unsigned __int8 *)(v51 + 1);
          *(void *)uint64_t v89 = v51 + 1;
          unsigned int v53 = *(_DWORD **)(a1 + 128);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 120), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 120) = v54 + 1;
            uint64_t v55 = *(void *)&v53[2 * v54 + 2];
          }
          else
          {
            sub_11BEDE0(*(void *)(a1 + 112));
            uint64_t v55 = sub_188CDC8(a1 + 112, v56);
            v52 = *(unsigned __int8 **)v89;
          }
          unsigned int v51 = sub_11B2418(a3, v55, v52);
          *(void *)uint64_t v89 = v51;
          if (!v51) {
            goto LABEL_150;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *v51 != 82) {
            goto LABEL_145;
          }
        }
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_137;
        }
        uint64_t v57 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v58 = (unsigned __int8 *)(v57 + 1);
          *(void *)uint64_t v89 = v57 + 1;
          unsigned int v59 = *(_DWORD **)(a1 + 152);
          if (v59 && (uint64_t v60 = *(int *)(a1 + 144), (int)v60 < *v59))
          {
            *(_DWORD *)(a1 + 144) = v60 + 1;
            uint64_t v61 = *(void *)&v59[2 * v60 + 2];
          }
          else
          {
            uint64_t v62 = sub_11D0B84(*v87);
            uint64_t v61 = sub_188CDC8((uint64_t)v87, (uint64_t)v62);
            uint64_t v58 = *(unsigned __int8 **)v89;
          }
          uint64_t v57 = sub_11B24A8(a3, v61, v58);
          *(void *)uint64_t v89 = v57;
          if (!v57) {
            goto LABEL_150;
          }
          if (*(void *)a3 <= (unint64_t)v57 || *v57 != 90) {
            goto LABEL_145;
          }
        }
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_137;
        }
        v86 |= 0x10u;
        unsigned int v63 = (char *)(v7 + 1);
        uint64_t v64 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_108;
        }
        int v65 = *v63;
        uint64_t v64 = v64 + (v65 << 7) - 128;
        if (v65 < 0)
        {
          uint64_t v81 = sub_188C138((uint64_t)v7, v64);
          *(void *)uint64_t v89 = v81;
          *(void *)(a1 + 216) = v82;
          if (!v81) {
            goto LABEL_150;
          }
        }
        else
        {
          unsigned int v63 = (char *)(v7 + 2);
LABEL_108:
          *(void *)uint64_t v89 = v63;
          *(void *)(a1 + 216) = v64;
        }
        goto LABEL_145;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_137;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v66 = *(void *)(a1 + 8);
        uint64_t v67 = (uint64_t *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
        if (v66) {
          uint64_t v67 = (uint64_t *)*v67;
        }
        uint64_t v68 = (std::string *)sub_1880F84((void *)(a1 + 184), v67);
        uint64_t v17 = (uint64_t)sub_188C244(v68, *(char **)v89, (uint64_t)a3);
        goto LABEL_144;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_137;
        }
        uint64_t v69 = (char *)(v7 - 1);
        while (1)
        {
          int64_t v70 = (unsigned __int8 *)(v69 + 1);
          *(void *)uint64_t v89 = v69 + 1;
          uint64_t v71 = *(_DWORD **)(a1 + 176);
          if (v71 && (uint64_t v72 = *(int *)(a1 + 168), (int)v72 < *v71))
          {
            *(_DWORD *)(a1 + 168) = v72 + 1;
            uint64_t v73 = *(void *)&v71[2 * v72 + 2];
          }
          else
          {
            uint64_t v74 = sub_11BECE0(*v88);
            uint64_t v73 = sub_188CDC8((uint64_t)v88, v74);
            int64_t v70 = *(unsigned __int8 **)v89;
          }
          uint64_t v69 = sub_11B2538(a3, v73, v70);
          *(void *)uint64_t v89 = v69;
          if (!v69) {
            goto LABEL_150;
          }
          if (*(void *)a3 <= (unint64_t)v69 || *v69 != 114) {
            goto LABEL_145;
          }
        }
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_137;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v75 = *(void *)(a1 + 208);
        if (!v75)
        {
          uint64_t v76 = (void *)(*v85 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v85) {
            uint64_t v76 = (void *)*v76;
          }
          uint64_t v75 = sub_11D6ED0((uint64_t)v76);
          *(void *)(a1 + 208) = v75;
          uint64_t v7 = *(unsigned __int8 **)v89;
        }
        uint64_t v17 = sub_11B25C8(a3, v75, v7);
        goto LABEL_144;
      default:
        goto LABEL_137;
    }
  }
}

char *sub_11B21D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_11BF928(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11B2268(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11AABCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B22F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11AFBD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11B2388(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B07FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B2418(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B0E04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B24A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11CE6F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B2538(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B02F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11B25C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D65D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B2658(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 224);
    char *v4 = 16;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 192);
    char *v4 = 26;
    unsigned int v9 = *(_DWORD *)(v8 + 20);
    v4[1] = v9;
    if (v9 > 0x7F) {
      unsigned int v10 = sub_188A9CC(v9, v4 + 1);
    }
    else {
      unsigned int v10 = v4 + 2;
    }
    char v4 = sub_11BFD38(v8, (unint64_t)v10, a3);
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      int v14 = *(void **)(*(void *)(a1 + 40) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_23;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v15)
      {
        char *v4 = 34;
        v4[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          int v14 = (void *)*v14;
        }
        unsigned int v16 = v4 + 2;
        memcpy(v16, v14, v15);
        char v4 = &v16[v15];
        goto LABEL_21;
      }
LABEL_23:
      char v4 = (char *)sub_188A868(a3, 4, (uint64_t)v14, v4);
LABEL_21:
      v12 += 8;
    }
    while (v13 != v12);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 48);
  if ((int)v17 >= 1)
  {
    for (uint64_t i = 0; i != v17; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v19 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      char *v4 = 40;
      v4[1] = v19;
      if (v19 > 0x7F)
      {
        v4[1] = v19 | 0x80;
        unint64_t v20 = v19 >> 7;
        v4[2] = v19 >> 7;
        v4 += 3;
        if (v19 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v22 = *(_DWORD *)(a1 + 72);
  if (v22)
  {
    for (int j = 0; j != v22; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      char *v4 = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 20);
      v4[1] = v25;
      if (v25 > 0x7F) {
        unint64_t v26 = sub_188A9CC(v25, v4 + 1);
      }
      else {
        unint64_t v26 = v4 + 2;
      }
      char v4 = sub_11ABB14(v24, (unint64_t)v26, a3);
    }
  }
  int v27 = *(_DWORD *)(a1 + 96);
  if (v27)
  {
    for (int k = 0; k != v27; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      char *v4 = 58;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        int v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        int v31 = v4 + 2;
      }
      char v4 = sub_11AFE8C(v29, (unint64_t)v31, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v32 = *(unsigned char *)(a1 + 225);
    char *v4 = 64;
    v4[1] = v32;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 200);
    char *v4 = 74;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    char v4 = sub_11B09D8(v33, (unint64_t)v35, a3);
  }
  int v36 = *(_DWORD *)(a1 + 120);
  if (v36)
  {
    for (int m = 0; m != v36; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 128) + 8 * m + 8);
      char *v4 = 82;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        uint64_t v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        uint64_t v40 = v4 + 2;
      }
      char v4 = sub_11B10D0(v38, (unint64_t)v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 144);
  if (v41)
  {
    for (int n = 0; n != v41; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 152) + 8 * n + 8);
      char *v4 = 90;
      unsigned int v44 = *(_DWORD *)(v43 + 60);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      char v4 = sub_11CE98C(v43, v45, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(void *)(a1 + 216);
    char *v4 = 96;
    v4[1] = v46;
    if (v46 > 0x7F)
    {
      v4[1] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[2] = v46 >> 7;
      v4 += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v49 = *(_DWORD *)(a1 + 168);
  if (v49)
  {
    for (iuint64_t i = 0; ii != v49; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v51 = *(void *)(*(void *)(a1 + 176) + 8 * ii + 8);
      char *v4 = 114;
      unsigned int v52 = *(_DWORD *)(v51 + 20);
      v4[1] = v52;
      if (v52 > 0x7F) {
        unsigned int v53 = sub_188A9CC(v52, v4 + 1);
      }
      else {
        unsigned int v53 = v4 + 2;
      }
      char v4 = sub_11B0504(v51, (unint64_t)v53, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v54 = *(void *)(a1 + 208);
    char *v4 = 122;
    unsigned int v55 = *(_DWORD *)(v54 + 88);
    v4[1] = v55;
    if (v55 > 0x7F) {
      uint64_t v56 = sub_188A9CC(v55, v4 + 1);
    }
    else {
      uint64_t v56 = v4 + 2;
    }
    char v4 = sub_11D699C(v54, v56, a3);
  }
  uint64_t v57 = *(void *)(a1 + 8);
  if ((v57 & 1) == 0) {
    return v4;
  }
  unint64_t v59 = v57 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v59 + 31) < 0)
  {
    uint64_t v60 = *(void **)(v59 + 8);
    uint64_t v61 = *(void *)(v59 + 16);
  }
  else
  {
    uint64_t v60 = (void *)(v59 + 8);
    LODWORD(v61) = *(unsigned __int8 *)(v59 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v61)
  {
    uint64_t v62 = (int)v61;
    memcpy(v4, v60, (int)v61);
    v4 += v62;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v60, v61, v4);
}

uint64_t sub_11B2D2C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  if (v8)
  {
    uint64_t v9 = 0;
    int v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v10);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v12;
      ++v10;
    }
    while (v8 != v10);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v13 = *(int *)(a1 + 72);
  uint64_t v14 = v4 + v8 + v9 + v13;
  uint64_t v15 = *(void *)(a1 + 80);
  if (v15) {
    unsigned int v16 = (uint64_t *)(v15 + 8);
  }
  else {
    unsigned int v16 = 0;
  }
  if (v13)
  {
    uint64_t v17 = 8 * v13;
    do
    {
      uint64_t v18 = *v16++;
      uint64_t v19 = sub_11AC500(v18);
      v14 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      v17 -= 8;
    }
    while (v17);
  }
  uint64_t v20 = *(int *)(a1 + 96);
  uint64_t v21 = v14 + v20;
  uint64_t v22 = *(void *)(a1 + 104);
  if (v22) {
    uint64_t v23 = (uint64_t *)(v22 + 8);
  }
  else {
    uint64_t v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = sub_11B0050(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  uint64_t v27 = *(int *)(a1 + 120);
  uint64_t v28 = v21 + v27;
  uint64_t v29 = *(void *)(a1 + 128);
  if (v29) {
    unsigned int v30 = (uint64_t *)(v29 + 8);
  }
  else {
    unsigned int v30 = 0;
  }
  if (v27)
  {
    uint64_t v31 = 8 * v27;
    do
    {
      uint64_t v32 = *v30++;
      uint64_t v33 = sub_11B1360(v32);
      v28 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6);
      v31 -= 8;
    }
    while (v31);
  }
  uint64_t v34 = *(int *)(a1 + 144);
  uint64_t v35 = v28 + v34;
  uint64_t v36 = *(void *)(a1 + 152);
  if (v36) {
    uint64_t v37 = (uint64_t *)(v36 + 8);
  }
  else {
    uint64_t v37 = 0;
  }
  if (v34)
  {
    uint64_t v38 = 8 * v34;
    do
    {
      uint64_t v39 = *v37++;
      uint64_t v40 = sub_11CEBBC(v39);
      v35 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6);
      v38 -= 8;
    }
    while (v38);
  }
  uint64_t v41 = *(int *)(a1 + 168);
  uint64_t v42 = v35 + v41;
  uint64_t v43 = *(void *)(a1 + 176);
  if (v43) {
    unsigned int v44 = (uint64_t *)(v43 + 8);
  }
  else {
    unsigned int v44 = 0;
  }
  if (v41)
  {
    uint64_t v45 = 8 * v41;
    do
    {
      uint64_t v46 = *v44++;
      uint64_t v47 = sub_11B0620(v46);
      v42 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6);
      v45 -= 8;
    }
    while (v45);
  }
  int v48 = *(_DWORD *)(a1 + 16);
  if ((v48 & 0x7F) != 0)
  {
    if (v48)
    {
      unint64_t v52 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v53 = *(unsigned __int8 *)(v52 + 23);
      uint64_t v54 = *(void *)(v52 + 8);
      if ((v53 & 0x80u) == 0) {
        uint64_t v54 = v53;
      }
      v42 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v48 & 2) == 0)
      {
LABEL_49:
        if ((v48 & 4) == 0) {
          goto LABEL_50;
        }
        goto LABEL_64;
      }
    }
    else if ((v48 & 2) == 0)
    {
      goto LABEL_49;
    }
    uint64_t v55 = sub_11C0000(*(void *)(a1 + 192));
    v42 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v48 & 4) == 0)
    {
LABEL_50:
      if ((v48 & 8) == 0) {
        goto LABEL_51;
      }
      goto LABEL_65;
    }
LABEL_64:
    uint64_t v56 = sub_11B0B20(*(void *)(a1 + 200));
    v42 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v48 & 8) == 0)
    {
LABEL_51:
      if ((v48 & 0x10) == 0)
      {
LABEL_53:
        uint64_t v49 = v42 + 2;
        if ((v48 & 0x20) == 0) {
          uint64_t v49 = v42;
        }
        if ((v48 & 0x40) != 0) {
          uint64_t v42 = v49 + 2;
        }
        else {
          uint64_t v42 = v49;
        }
        goto LABEL_58;
      }
LABEL_52:
      v42 += ((9 * (__clz(*(void *)(a1 + 216) | 1) ^ 0x3F) + 73) >> 6) + 1;
      goto LABEL_53;
    }
LABEL_65:
    uint64_t v57 = sub_11D6C0C(*(void *)(a1 + 208));
    v42 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v48 & 0x10) == 0) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
LABEL_58:
  uint64_t v50 = *(void *)(a1 + 8);
  if (v50)
  {
    unint64_t v58 = v50 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v58 + 31) < 0) {
      uint64_t v59 = *(void *)(v58 + 16);
    }
    else {
      uint64_t v59 = *(unsigned __int8 *)(v58 + 31);
    }
    v42 += v59;
  }
  *(_DWORD *)(a1 + 20) = v42;
  return v42;
}

void sub_11B3104(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_11CFF70((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_252CF58;
      }
      sub_11C0134((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
      goto LABEL_8;
    }
LABEL_23:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_11B320C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_11DDC54((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int v10 = (const std::string **)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    unsigned int v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = (std::string *)sub_11DDBC8((uint64_t *)&v3[2].__r_.__value_.__r.__words[2], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_11B33A4(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_11A3168(a1);
    sub_11A3FB4(a1, a2);
  }
}

uint64_t sub_11B33F0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_11C0238(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

__n128 sub_11B341C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v9;
  uint64_t v10 = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a2 + 80) = v10;
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a2 + 88) = v11;
  *(void *)(a2 + 96) = v12;
  uint64_t v13 = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a2 + 104) = v13;
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a2 + 112) = v14;
  *(void *)(a2 + 120) = v15;
  uint64_t v16 = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a2 + 128) = v16;
  uint64_t v17 = *(void *)(a1 + 136);
  uint64_t v18 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a2 + 136) = v17;
  *(void *)(a2 + 144) = v18;
  uint64_t v19 = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a2 + 152) = v19;
  uint64_t v20 = *(void *)(a1 + 160);
  uint64_t v21 = *(void *)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a2 + 160) = v20;
  *(void *)(a2 + 168) = v21;
  uint64_t v22 = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a2 + 176) = v22;
  uint64_t v23 = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = v23;
  uint64_t v24 = *(void *)(a1 + 192);
  uint64_t v25 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a2 + 192) = v24;
  *(void *)(a2 + 200) = v25;
  uint64_t v26 = *(void *)(a1 + 208);
  uint64_t v27 = *(void *)(a1 + 216);
  __n128 result = *(__n128 *)(a2 + 208);
  *(__n128 *)(a1 + 208) = result;
  *(void *)(a2 + 208) = v26;
  *(void *)(a2 + 216) = v27;
  LOWORD(v26) = *(_WORD *)(a1 + 224);
  *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
  *(_WORD *)(a2 + 224) = v26;
  return result;
}

void *sub_11B3550@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AnalyticsData");
}

uint64_t sub_11B3560(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252CC68)
  {
    uint64_t v5 = *(void *)(a1 + 88);
    if (v5)
    {
      sub_15B3DFC(v5);
      operator delete();
    }
    if (*(void *)(a1 + 96))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 72);
  sub_1889DA8(a1 + 56);
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B3650(uint64_t a1)
{
  sub_11B3560(a1);

  operator delete();
}

uint64_t sub_11B3688(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 72) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2) {
      __n128 result = sub_15B043C(*(void *)(result + 88));
    }
    if ((v2 & 2) != 0) {
      __n128 result = (uint64_t)sub_15B09D0(*(void *)(v1 + 96));
    }
    *(_DWORD *)(v1 + 104) = 2;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11B3710(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v62 = a2;
  if (sub_11947B8((uint64_t)a3, &v62, a3[11].i32[1])) {
    return v62;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v62 + 1;
    unsigned int v8 = *v62;
    if (*v62 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v62, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v62 + 2;
      }
    }
    uint64_t v62 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_119;
        }
        uint64_t v12 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v62 = (char *)sub_188C138((uint64_t)v7, (v15 - 128));
          if (!v62) {
            return 0;
          }
          unint64_t v13 = v57;
        }
        else
        {
          uint64_t v12 = v7 + 2;
LABEL_13:
          uint64_t v62 = v12;
        }
        if (sub_144CF30(v13))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 104) = v13;
        }
        else
        {
          if (*v6) {
            uint64_t v61 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v61 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v61);
        }
        goto LABEL_127;
      case 2u:
        if (v8 != 18) {
          goto LABEL_119;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 88);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_15C1CB4((uint64_t)v17);
          *(void *)(a1 + 88) = v16;
          uint64_t v7 = v62;
        }
        uint64_t v18 = sub_11B3E48(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_126;
      case 3u:
        if (v8 == 24)
        {
          uint64_t v19 = v7 - 1;
          while (1)
          {
            uint64_t v62 = v19 + 1;
            unint64_t v20 = v19[1];
            uint64_t v21 = v19 + 2;
            if (v19[1] < 0)
            {
              int v22 = *v21;
              int v23 = v20 + (v22 << 7);
              unint64_t v20 = (v23 - 128);
              if (v22 < 0)
              {
                uint64_t v62 = (char *)sub_188C138((uint64_t)(v19 + 1), (v23 - 128));
                if (!v62) {
                  return 0;
                }
                unint64_t v20 = v26;
                goto LABEL_28;
              }
              uint64_t v21 = v19 + 3;
            }
            uint64_t v62 = v21;
LABEL_28:
            if (sub_15B074C(v20))
            {
              uint64_t v24 = *(unsigned int *)(a1 + 24);
              if (v24 == *(_DWORD *)(a1 + 28))
              {
                int v25 = v24 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v24 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v20;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v24) = v20;
                int v25 = v24 + 1;
              }
              *(_DWORD *)(a1 + 24) = v25;
            }
            else
            {
              if (*v6) {
                uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(3, v20, v27);
            }
            uint64_t v19 = v62;
            if (*(void *)a3 <= (unint64_t)v62 || *v62 != 24) {
              goto LABEL_127;
            }
          }
        }
        if (v8 != 26) {
          goto LABEL_119;
        }
        *(void *)&long long v63 = a1 + 24;
        *((void *)&v63 + 1) = sub_15B074C;
        uint64_t v64 = a1 + 8;
        int v58 = 3;
        goto LABEL_118;
      case 4u:
        if (v8 == 32)
        {
          uint64_t v28 = v7 - 1;
          while (1)
          {
            uint64_t v62 = v28 + 1;
            unint64_t v29 = v28[1];
            unsigned int v30 = v28 + 2;
            if (v28[1] < 0)
            {
              int v31 = *v30;
              int v32 = v29 + (v31 << 7);
              unint64_t v29 = (v32 - 128);
              if (v31 < 0)
              {
                uint64_t v62 = (char *)sub_188C138((uint64_t)(v28 + 1), (v32 - 128));
                if (!v62) {
                  return 0;
                }
                unint64_t v29 = v35;
                goto LABEL_48;
              }
              unsigned int v30 = v28 + 3;
            }
            uint64_t v62 = v30;
LABEL_48:
            if (sub_15B074C(v29))
            {
              uint64_t v33 = *(unsigned int *)(a1 + 40);
              if (v33 == *(_DWORD *)(a1 + 44))
              {
                int v34 = v33 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v33 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v33) = v29;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v33) = v29;
                int v34 = v33 + 1;
              }
              *(_DWORD *)(a1 + 40) = v34;
            }
            else
            {
              if (*v6) {
                uint64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v29, v36);
            }
            uint64_t v28 = v62;
            if (*(void *)a3 <= (unint64_t)v62 || *v62 != 32) {
              goto LABEL_127;
            }
          }
        }
        if (v8 != 34) {
          goto LABEL_119;
        }
        *(void *)&long long v63 = a1 + 40;
        *((void *)&v63 + 1) = sub_15B074C;
        uint64_t v64 = a1 + 8;
        int v58 = 4;
        goto LABEL_118;
      case 5u:
        if (v8 == 40)
        {
          uint64_t v37 = v7 - 1;
          while (1)
          {
            uint64_t v62 = v37 + 1;
            unint64_t v38 = v37[1];
            uint64_t v39 = v37 + 2;
            if (v37[1] < 0)
            {
              int v40 = *v39;
              int v41 = v38 + (v40 << 7);
              unint64_t v38 = (v41 - 128);
              if (v40 < 0)
              {
                uint64_t v62 = (char *)sub_188C138((uint64_t)(v37 + 1), (v41 - 128));
                if (!v62) {
                  return 0;
                }
                unint64_t v38 = v44;
                goto LABEL_68;
              }
              uint64_t v39 = v37 + 3;
            }
            uint64_t v62 = v39;
LABEL_68:
            if (sub_15B074C(v38))
            {
              uint64_t v42 = *(unsigned int *)(a1 + 56);
              if (v42 == *(_DWORD *)(a1 + 60))
              {
                int v43 = v42 + 1;
                sub_188C80C((unsigned int *)(a1 + 56), v42 + 1);
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v42) = v38;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v42) = v38;
                int v43 = v42 + 1;
              }
              *(_DWORD *)(a1 + 56) = v43;
            }
            else
            {
              if (*v6) {
                uint64_t v45 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(5, v38, v45);
            }
            uint64_t v37 = v62;
            if (*(void *)a3 <= (unint64_t)v62 || *v62 != 40) {
              goto LABEL_127;
            }
          }
        }
        if (v8 != 42) {
          goto LABEL_119;
        }
        *(void *)&long long v63 = a1 + 56;
        *((void *)&v63 + 1) = sub_15B074C;
        uint64_t v64 = a1 + 8;
        int v58 = 5;
        goto LABEL_118;
      case 6u:
        if (v8 == 48)
        {
          uint64_t v46 = v7 - 1;
          while (1)
          {
            uint64_t v62 = v46 + 1;
            unint64_t v47 = v46[1];
            int v48 = v46 + 2;
            if (v46[1] < 0)
            {
              int v49 = *v48;
              int v50 = v47 + (v49 << 7);
              unint64_t v47 = (v50 - 128);
              if (v49 < 0)
              {
                uint64_t v62 = (char *)sub_188C138((uint64_t)(v46 + 1), (v50 - 128));
                if (!v62) {
                  return 0;
                }
                unint64_t v47 = v53;
                goto LABEL_88;
              }
              int v48 = v46 + 3;
            }
            uint64_t v62 = v48;
LABEL_88:
            if (sub_15B074C(v47))
            {
              uint64_t v51 = *(unsigned int *)(a1 + 72);
              if (v51 == *(_DWORD *)(a1 + 76))
              {
                int v52 = v51 + 1;
                sub_188C80C((unsigned int *)(a1 + 72), v51 + 1);
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v51) = v47;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 80) + 4 * v51) = v47;
                int v52 = v51 + 1;
              }
              *(_DWORD *)(a1 + 72) = v52;
            }
            else
            {
              if (*v6) {
                uint64_t v54 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v54 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(6, v47, v54);
            }
            uint64_t v46 = v62;
            if (*(void *)a3 <= (unint64_t)v62 || *v62 != 48) {
              goto LABEL_127;
            }
          }
        }
        if (v8 == 50)
        {
          *(void *)&long long v63 = a1 + 72;
          *((void *)&v63 + 1) = sub_15B074C;
          uint64_t v64 = a1 + 8;
          int v58 = 6;
LABEL_118:
          int v65 = v58;
          uint64_t v18 = sub_1112E88((uint64_t)a3, v7, &v63);
LABEL_126:
          uint64_t v62 = v18;
          if (!v18) {
            return 0;
          }
LABEL_127:
          if (sub_11947B8((uint64_t)a3, &v62, a3[11].i32[1])) {
            return v62;
          }
          continue;
        }
LABEL_119:
        if (v8) {
          BOOL v59 = (v8 & 7) == 4;
        }
        else {
          BOOL v59 = 1;
        }
        if (!v59)
        {
          if (*v6)
          {
            uint64_t v60 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v60 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v62;
          }
          uint64_t v18 = (char *)sub_1885AC0(v8, v60, v7, a3);
          goto LABEL_126;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v62;
      case 7u:
        if (v8 != 58) {
          goto LABEL_119;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v55 = *(void *)(a1 + 96);
        if (!v55)
        {
          uint64_t v56 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v56 = (void *)*v56;
          }
          uint64_t v55 = sub_15C1918((uint64_t)v56);
          *(void *)(a1 + 96) = v55;
          uint64_t v7 = v62;
        }
        uint64_t v18 = sub_1198F14(a3, v55, (unsigned __int8 *)v7);
        goto LABEL_126;
      default:
        goto LABEL_119;
    }
  }
}

char *sub_11B3E48(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  __n128 result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    __n128 result = sub_15B3E38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B3ED8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 104);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 88);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15B43E4(v10, v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(unsigned int *)(a1 + 40);
  if ((int)v18 >= 1)
  {
    for (uint64_t j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v20 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      char *v4 = 32;
      v4[1] = v20;
      if (v20 > 0x7F)
      {
        v4[1] = v20 | 0x80;
        unint64_t v21 = v20 >> 7;
        v4[2] = v20 >> 7;
        v4 += 3;
        if (v20 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v22 = v21 >> 14;
            v21 >>= 7;
            *v4++ = v21;
          }
          while (v22);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v23 = *(unsigned int *)(a1 + 56);
  if ((int)v23 >= 1)
  {
    for (uint64_t k = 0; k != v23; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v25 = *(int *)(*(void *)(a1 + 64) + 4 * k);
      char *v4 = 40;
      v4[1] = v25;
      if (v25 > 0x7F)
      {
        v4[1] = v25 | 0x80;
        unint64_t v26 = v25 >> 7;
        v4[2] = v25 >> 7;
        v4 += 3;
        if (v25 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v27 = v26 >> 14;
            v26 >>= 7;
            *v4++ = v26;
          }
          while (v27);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v28 = *(unsigned int *)(a1 + 72);
  if ((int)v28 >= 1)
  {
    for (uint64_t m = 0; m != v28; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v30 = *(int *)(*(void *)(a1 + 80) + 4 * m);
      char *v4 = 48;
      v4[1] = v30;
      if (v30 > 0x7F)
      {
        v4[1] = v30 | 0x80;
        unint64_t v31 = v30 >> 7;
        v4[2] = v30 >> 7;
        v4 += 3;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v32 = v31 >> 14;
            v31 >>= 7;
            *v4++ = v31;
          }
          while (v32);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 96);
    char *v4 = 58;
    unsigned int v34 = *(_DWORD *)(v33 + 44);
    v4[1] = v34;
    if (v34 > 0x7F) {
      unint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      unint64_t v35 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v33, v35, a3);
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    uint64_t v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    uint64_t v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_11B4350(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7)
  {
    int v8 = 0;
    uint64_t v9 = 0;
    do
    {
      int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v8);
      if (v10 < 0) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v11;
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if (v12)
  {
    int v13 = 0;
    uint64_t v14 = 0;
    do
    {
      int v15 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v13);
      if (v15 < 0) {
        uint64_t v16 = 10;
      }
      else {
        uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
      }
      v14 += v16;
      ++v13;
    }
    while (v12 != v13);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 72);
  if (v17)
  {
    int v18 = 0;
    uint64_t v19 = 0;
    do
    {
      int v20 = *(_DWORD *)(*(void *)(a1 + 80) + 4 * v18);
      if (v20 < 0) {
        uint64_t v21 = 10;
      }
      else {
        uint64_t v21 = (9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6;
      }
      v19 += v21;
      ++v18;
    }
    while (v17 != v18);
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v22 = v4 + v2 + v7 + v9 + v12 + v14 + v17 + v19;
  int v23 = *(_DWORD *)(a1 + 16);
  if ((v23 & 7) != 0)
  {
    if (v23)
    {
      uint64_t v24 = sub_15B4924(*(void *)(a1 + 88));
      v22 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v23 & 2) == 0)
      {
LABEL_36:
        if ((v23 & 4) == 0) {
          goto LABEL_44;
        }
        goto LABEL_40;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_36;
    }
    uint64_t v25 = sub_15B0D90(*(void *)(a1 + 96));
    v22 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 4) == 0) {
      goto LABEL_44;
    }
LABEL_40:
    int v26 = *(_DWORD *)(a1 + 104);
    if (v26 < 0) {
      uint64_t v27 = 11;
    }
    else {
      uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v22 += v27;
  }
LABEL_44:
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v22 += v31;
  }
  *(_DWORD *)(a1 + 20) = v22;
  return v22;
}

void sub_11B45C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = *(int *)(a1 + 72);
    sub_188C80C((unsigned int *)(a1 + 72), v15 + v14);
    uint64_t v16 = *(void *)(a1 + 80);
    *(_DWORD *)(a1 + 72) += *(_DWORD *)(a2 + 72);
    memcpy((void *)(v16 + 4 * v15), *(const void **)(a2 + 80), 4 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 16);
  if ((v17 & 7) != 0)
  {
    if (v17)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v19 = *(void *)(a1 + 88);
      if (!v19)
      {
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v19 = sub_15C1CB4((uint64_t)v21);
        *(void *)(a1 + 88) = v19;
      }
      if (*(void *)(a2 + 88)) {
        uint64_t v22 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        uint64_t v22 = &off_253F2E8;
      }
      sub_15B04F0(v19, (uint64_t)v22);
      if ((v17 & 2) == 0)
      {
LABEL_12:
        if ((v17 & 4) == 0)
        {
LABEL_14:
          *(_DWORD *)(a1 + 16) |= v17;
          goto LABEL_15;
        }
LABEL_13:
        *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
        goto LABEL_14;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v23 = *(void *)(a1 + 96);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = sub_15C1918((uint64_t)v25);
      *(void *)(a1 + 96) = v23;
    }
    if (*(void *)(a2 + 96)) {
      int v26 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      int v26 = &off_253F1A0;
    }
    sub_15B0E24(v23, (uint64_t)v26);
    if ((v17 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11B47FC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B06D8(*(void *)(a1 + 88));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 96));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11B4848@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutingRequestAnalyticData.WaypointTypedData");
}

void *sub_11B4858(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B48CC(void *a1)
{
  sub_11B4858(a1);

  operator delete();
}

uint64_t sub_11B4904(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11B4928(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(unsigned char *)(a1 + 24) = v19 != 0;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_11B4B28(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_11B4C88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    LODWORD(v2) = 2 * (*(_DWORD *)(a1 + 16) & 1);
    if ((v1 & 2) != 0) {
      LODWORD(v2) = (v2 | 1) + ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6);
    }
  }
  else
  {
    LODWORD(v2) = 0;
  }
  uint64_t v2 = v2;
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    uint64_t v2 = v6 + v2;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11B4D00(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11B4D4C()
{
  return 1;
}

void *sub_11B4D54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutingRequestAnalyticData.WaypointTypedTilesData");
}

uint64_t sub_11B4D64(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  unint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_11DBE54((void *)(a1 + 48));
  sub_11DBDD4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B4E48(uint64_t a1)
{
  sub_11B4D64(a1);

  operator delete();
}

uint64_t sub_11B4E80(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11B3688(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11B4904(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 7) != 0)
  {
    if ((v8 & 1) == 0)
    {
      if ((v8 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_18:
      unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v8 & 4) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v8 & 4) == 0) {
          goto LABEL_25;
        }
      }
      goto LABEL_22;
    }
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v8 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_12:
    if ((v8 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v11 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
    }
  }
LABEL_25:
  if ((v8 & 0x78) != 0)
  {
    *(void *)(v1 + 96) = 0;
    *(void *)(v1 + 104) = 0x100000000;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_11B4FDC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
    return *(void *)v51;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v51 + 1);
    unsigned int v8 = **(unsigned char **)v51;
    if ((char)**(unsigned char **)v51 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v51, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v51 + 2);
      }
    }
    *(void *)uint64_t v51 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_70;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v51) {
            return 0;
          }
          unint64_t v12 = v45;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)uint64_t v51 = v11;
        }
        if (sub_1369B38(v12))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 96) = v12;
          goto LABEL_78;
        }
        if (*v6) {
          int v49 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v50 = 1;
        goto LABEL_100;
      case 2u:
        if (v8 != 16) {
          goto LABEL_70;
        }
        uint64_t v15 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v16 = *v15;
        int v17 = v12 + (v16 << 7);
        unint64_t v12 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v51) {
            return 0;
          }
          unint64_t v12 = v46;
        }
        else
        {
          uint64_t v15 = v7 + 2;
LABEL_20:
          *(void *)uint64_t v51 = v15;
        }
        if (sub_129EB9C(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 100) = v12;
          goto LABEL_78;
        }
        if (*v6) {
          int v49 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v50 = 2;
        goto LABEL_100;
      case 3u:
        if (v8 != 26) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 72);
        goto LABEL_49;
      case 4u:
        if (v8 != 34) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 80);
        goto LABEL_49;
      case 5u:
        if (v8 != 40) {
          goto LABEL_70;
        }
        int v22 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v23 = *v22;
        int v24 = v12 + (v23 << 7);
        unint64_t v12 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v7, (v24 - 128));
          if (!*(void *)v51) {
            return 0;
          }
          unint64_t v12 = v47;
        }
        else
        {
          int v22 = v7 + 2;
LABEL_35:
          *(void *)uint64_t v51 = v22;
        }
        if (sub_138DE04(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 104) = v12;
          goto LABEL_78;
        }
        if (*v6) {
          int v49 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v50 = 5;
        goto LABEL_100;
      case 6u:
        if (v8 != 48) {
          goto LABEL_70;
        }
        uint64_t v25 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v26 = *v25;
        int v27 = v12 + (v26 << 7);
        unint64_t v12 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)uint64_t v51 = sub_188C138((uint64_t)v7, (v27 - 128));
          if (!*(void *)v51) {
            return 0;
          }
          unint64_t v12 = v48;
        }
        else
        {
          uint64_t v25 = v7 + 2;
LABEL_42:
          *(void *)uint64_t v51 = v25;
        }
        if (sub_1369B04(v12))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 108) = v12;
        }
        else
        {
          if (*v6) {
            int v49 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v50 = 6;
LABEL_100:
          sub_188C020(v50, v12, v49);
        }
        goto LABEL_78;
      case 7u:
        if (v8 != 58) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v28 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 88);
LABEL_49:
        unint64_t v29 = (std::string *)sub_1880F84(v20, v19);
        unint64_t v30 = (void *)sub_188C244(v29, *(char **)v51, (uint64_t)a3);
        goto LABEL_77;
      case 8u:
        if (v8 != 66) {
          goto LABEL_70;
        }
        uint64_t v31 = v7 - 1;
        while (1)
        {
          unint64_t v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)uint64_t v51 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 40);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 32), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 32) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_11BEF40(*(void *)(a1 + 24));
            uint64_t v35 = sub_188CDC8(a1 + 24, v36);
            unint64_t v32 = *(unsigned __int8 **)v51;
          }
          uint64_t v31 = sub_11B55A8(a3, v35, v32);
          *(void *)uint64_t v51 = v31;
          if (!v31) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 66) {
            goto LABEL_78;
          }
        }
      case 9u:
        if (v8 != 74) {
          goto LABEL_70;
        }
        uint64_t v37 = v7 - 1;
        while (1)
        {
          unint64_t v38 = (unsigned __int8 *)(v37 + 1);
          *(void *)uint64_t v51 = v37 + 1;
          uint64_t v39 = *(_DWORD **)(a1 + 64);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 56), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 56) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            uint64_t v42 = sub_11BF00C(*(void *)(a1 + 48));
            uint64_t v41 = sub_188CDC8(a1 + 48, (uint64_t)v42);
            unint64_t v38 = *(unsigned __int8 **)v51;
          }
          uint64_t v37 = sub_11B5638(a3, v41, v38);
          *(void *)uint64_t v51 = v37;
          if (!v37) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 74) {
            goto LABEL_78;
          }
        }
      default:
LABEL_70:
        if (v8) {
          BOOL v43 = (v8 & 7) == 4;
        }
        else {
          BOOL v43 = 1;
        }
        if (!v43)
        {
          if (*v6)
          {
            unint64_t v44 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v44 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(char **)v51;
          }
          unint64_t v30 = sub_1885AC0(v8, v44, v7, a3);
LABEL_77:
          *(void *)uint64_t v51 = v30;
          if (!v30) {
            return 0;
          }
LABEL_78:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            return *(void *)v51;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v51;
    }
  }
}

char *sub_11B55A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B3710(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B5638(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B4928(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11B56C8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 100);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_17:
      if ((v6 & 0x20) == 0) {
        goto LABEL_27;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_17;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v13 = *(int *)(a1 + 104);
  unsigned char *v4 = 40;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_27:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 108);
    unsigned char *v4 = 48;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v19 = *(_DWORD *)(a1 + 32);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 66;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        int v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        int v23 = v4 + 2;
      }
      uint64_t v4 = sub_11B3ED8(v21, (unint64_t)v23, a3);
    }
  }
  int v24 = *(_DWORD *)(a1 + 56);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 74;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        uint64_t v28 = v4 + 2;
      }
      uint64_t v4 = sub_11B4B28(v26, (unint64_t)v28, a3);
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    unint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_11B5AF0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11B4350(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11B4C88(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0x7F) == 0) {
    goto LABEL_27;
  }
  if (v15)
  {
    unint64_t v21 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
    uint64_t v23 = *(void *)(v21 + 8);
    if ((v22 & 0x80u) == 0) {
      uint64_t v23 = v22;
    }
    v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 2) == 0)
    {
LABEL_18:
      if ((v15 & 4) == 0) {
        goto LABEL_19;
      }
      goto LABEL_35;
    }
  }
  else if ((v15 & 2) == 0)
  {
    goto LABEL_18;
  }
  unint64_t v24 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
  uint64_t v26 = *(void *)(v24 + 8);
  if ((v25 & 0x80u) == 0) {
    uint64_t v26 = v25;
  }
  v9 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 4) == 0)
  {
LABEL_19:
    if ((v15 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_38;
  }
LABEL_35:
  unint64_t v27 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v28 = *(unsigned __int8 *)(v27 + 23);
  uint64_t v29 = *(void *)(v27 + 8);
  if ((v28 & 0x80u) == 0) {
    uint64_t v29 = v28;
  }
  v9 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 8) == 0)
  {
LABEL_20:
    if ((v15 & 0x10) == 0) {
      goto LABEL_21;
    }
LABEL_42:
    int v33 = *(_DWORD *)(a1 + 100);
    uint64_t v34 = ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v33 >= 0) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 11;
    }
    v9 += v35;
    if ((v15 & 0x20) == 0)
    {
LABEL_22:
      if ((v15 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_23;
    }
    goto LABEL_46;
  }
LABEL_38:
  int v30 = *(_DWORD *)(a1 + 96);
  uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v30 >= 0) {
    uint64_t v32 = v31;
  }
  else {
    uint64_t v32 = 11;
  }
  v9 += v32;
  if ((v15 & 0x10) != 0) {
    goto LABEL_42;
  }
LABEL_21:
  if ((v15 & 0x20) == 0) {
    goto LABEL_22;
  }
LABEL_46:
  int v36 = *(_DWORD *)(a1 + 104);
  uint64_t v37 = ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v36 >= 0) {
    uint64_t v38 = v37;
  }
  else {
    uint64_t v38 = 11;
  }
  v9 += v38;
  if ((v15 & 0x40) != 0)
  {
LABEL_23:
    int v16 = *(_DWORD *)(a1 + 108);
    uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v16 >= 0) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 11;
    }
    v9 += v18;
  }
LABEL_27:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v39 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v39 + 31) < 0) {
      uint64_t v40 = *(void *)(v39 + 16);
    }
    else {
      uint64_t v40 = *(unsigned __int8 *)(v39 + 31);
    }
    v9 += v40;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_11B5DB4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DC87C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_11DC908((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x7F) != 0)
  {
    if (v14)
    {
      int v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_27;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 80), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_30;
    }
LABEL_27:
    uint64_t v22 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v23 = *(void *)(a1 + 8);
    unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      unint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 88), v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_31;
    }
LABEL_30:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_17;
      }
LABEL_15:
      *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
      goto LABEL_16;
    }
LABEL_32:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v14 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11B5FE8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_11B47FC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_11B6040@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutingRequestAnalyticData");
}

uint64_t sub_11B6050(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B60F0(uint64_t a1)
{
  sub_11B6050(a1);

  operator delete();
}

uint64_t sub_11B6128(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xE) != 0)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11B617C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v33, (uint64_t)a3);
        goto LABEL_35;
      case 2u:
        if (v9 != 16) {
          goto LABEL_28;
        }
        v5 |= 2u;
        int v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v27 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)int v33 = v27;
          *(_DWORD *)(a1 + 32) = v28;
          if (!v27) {
            goto LABEL_47;
          }
        }
        else
        {
          int v16 = v8 + 2;
LABEL_17:
          *(void *)int v33 = v16;
          *(_DWORD *)(a1 + 32) = v17;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_28;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v29 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)int v33 = v29;
          *(_DWORD *)(a1 + 36) = v30;
          if (!v29) {
            goto LABEL_47;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_22:
          *(void *)int v33 = v19;
          *(_DWORD *)(a1 + 36) = v20;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        v5 |= 8u;
        uint64_t v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v31 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)int v33 = v31;
          *(_DWORD *)(a1 + 40) = v32;
          if (!v31) {
            goto LABEL_47;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_27:
          *(void *)int v33 = v22;
          *(_DWORD *)(a1 + 40) = v23;
        }
        goto LABEL_36;
      default:
LABEL_28:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v33;
          }
          uint64_t v15 = sub_1885AC0(v9, v26, v8, a3);
LABEL_35:
          *(void *)int v33 = v15;
          if (!v15) {
            goto LABEL_47;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          *(void *)int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

unsigned char *sub_11B6440(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_11B6680(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_12:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11B6798(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unsigned int v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_16;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_16:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11B6878()
{
  return 1;
}

void *sub_11B6880@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutingResponseAnalyticData.RouteData");
}

void *sub_11B6890(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DBED4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B6910(void *a1)
{
  sub_11B6890(a1);

  operator delete();
}

uint64_t sub_11B6948(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11B6128(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0xF) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11B69D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v41 + 1;
    unsigned int v9 = *v41;
    if (*v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v41 + 2;
      }
    }
    uint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_41;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          uint64_t v41 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_48;
        }
        int v33 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v41 = v33;
        *(_DWORD *)(a1 + 48) = v34;
        if (v33) {
          goto LABEL_48;
        }
        goto LABEL_65;
      case 2u:
        if (v9 != 16) {
          goto LABEL_41;
        }
        unsigned int v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v41) {
            goto LABEL_65;
          }
          unint64_t v16 = v35;
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          uint64_t v41 = v15;
        }
        if (sub_129EB9C(v16))
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 52) = v16;
        }
        else
        {
          if (*v7) {
            uint64_t v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v40);
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 24) {
          goto LABEL_41;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          int v36 = (char *)sub_188C0D0((uint64_t)v8, v20);
          uint64_t v41 = v36;
          *(_DWORD *)(a1 + 56) = v37;
          if (!v36) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v41 = v19;
          *(_DWORD *)(a1 + 56) = v20;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 32) {
          goto LABEL_41;
        }
        v5 |= 8u;
        uint64_t v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v38 = (char *)sub_188C0D0((uint64_t)v8, v23);
          uint64_t v41 = v38;
          *(_DWORD *)(a1 + 60) = v39;
          if (!v38) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_30:
          uint64_t v41 = v22;
          *(_DWORD *)(a1 + 60) = v23;
        }
        goto LABEL_48;
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        BOOL v25 = v8 - 1;
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(v25 + 1);
          uint64_t v41 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 40);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 32) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_11BF140(*(void *)(a1 + 24));
            uint64_t v29 = sub_188CDC8(a1 + 24, v30);
            uint64_t v26 = (unsigned __int8 *)v41;
          }
          BOOL v25 = (char *)sub_11B6D8C(a3, v29, v26);
          uint64_t v41 = v25;
          if (!v25) {
            goto LABEL_65;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 42) {
            goto LABEL_48;
          }
        }
      default:
LABEL_41:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v41;
          }
          uint64_t v41 = (char *)sub_1885AC0(v9, v32, v8, a3);
          if (!v41) {
            goto LABEL_65;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_65:
        }
          uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v41;
    }
  }
}

uint64_t sub_11B6D8C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B617C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11B6E1C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 60);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v19 = *(_DWORD *)(a1 + 32);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 42;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        int v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        int v23 = v4 + 2;
      }
      uint64_t v4 = sub_11B6440(v21, v23, a3);
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_11B7154(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11B6680(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_18:
    int v11 = *(_DWORD *)(a1 + 52);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_22;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_18;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_22:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v13 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11B72CC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_11DC994((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_17:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11B73F4()
{
  return 1;
}

void *sub_11B73FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutingResponseAnalyticData.WaypointRouteData");
}

void *sub_11B740C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B7480(void *a1)
{
  sub_11B740C(a1);

  operator delete();
}

uint64_t sub_11B74B8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x7F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11B74E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v49 + 2;
      }
    }
    int v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_44;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v49 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_51;
        }
        unint64_t v35 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v49 = v35;
        *(_DWORD *)(a1 + 24) = v36;
        if (v35) {
          goto LABEL_51;
        }
        goto LABEL_70;
      case 2u:
        if (v9 != 16) {
          goto LABEL_44;
        }
        v5 |= 2u;
        unsigned int v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v37 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v49 = v37;
          *(_DWORD *)(a1 + 28) = v38;
          if (!v37) {
            goto LABEL_70;
          }
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          int v49 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_51;
      case 3u:
        if (v9 != 24) {
          goto LABEL_44;
        }
        v5 |= 4u;
        unsigned int v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v39 = (char *)sub_188C0D0((uint64_t)v8, v19);
          int v49 = v39;
          *(_DWORD *)(a1 + 32) = v40;
          if (!v39) {
            goto LABEL_70;
          }
        }
        else
        {
          unsigned int v18 = v8 + 2;
LABEL_23:
          int v49 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_44;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v41 = (char *)sub_188C0D0((uint64_t)v8, v22);
          int v49 = v41;
          *(_DWORD *)(a1 + 36) = v42;
          if (!v41) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          int v49 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_51;
      case 5u:
        if (v9 != 40) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          BOOL v43 = (char *)sub_188C0D0((uint64_t)v8, v25);
          int v49 = v43;
          *(_DWORD *)(a1 + 40) = v44;
          if (!v43) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          int v49 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_51;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x20u;
        uint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          unint64_t v45 = (char *)sub_188C0D0((uint64_t)v8, v28);
          int v49 = v45;
          *(_DWORD *)(a1 + 44) = v46;
          if (!v45) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          int v49 = v27;
          *(_DWORD *)(a1 + 44) = v28;
        }
        goto LABEL_51;
      case 7u:
        if (v9 != 56) {
          goto LABEL_44;
        }
        v5 |= 0x40u;
        uint64_t v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          unint64_t v47 = (char *)sub_188C0D0((uint64_t)v8, v31);
          int v49 = v47;
          *(_DWORD *)(a1 + 48) = v48;
          if (!v47) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_43:
          int v49 = v30;
          *(_DWORD *)(a1 + 48) = v31;
        }
        goto LABEL_51;
      default:
LABEL_44:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v49;
          }
          int v49 = (char *)sub_1885AC0(v9, v34, v8, a3);
          if (!v49) {
            goto LABEL_70;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          int v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v49;
    }
  }
}

unsigned char *sub_11B78DC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    int v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    int v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_11B7CEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_18;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_19;
  }
LABEL_18:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_12:
    if ((v1 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_19:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) != 0) {
LABEL_13:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11B7E6C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_11;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_17:
  LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
  if ((v2 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
LABEL_10:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_11:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11B7F10()
{
  return 1;
}

void *sub_11B7F18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutingResponseAnalyticData.TransitJourneyData");
}

uint64_t sub_11B7F28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_11DBFD4((void *)(a1 + 48));
  sub_11DBF54((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B7FE0(uint64_t a1)
{
  sub_11B7F28(a1);

  operator delete();
}

uint64_t sub_11B8018(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11B6948(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11B74B8(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8)
  {
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
  if ((v8 & 6) != 0)
  {
    *(_DWORD *)(v1 + 88) = 0;
    *(void *)(v1 + 80) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_11B8100(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v41 + 2);
      }
    }
    *(void *)uint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        unsigned int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v41 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v41) {
            goto LABEL_66;
          }
          unint64_t v13 = v37;
        }
        else
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v41 = v12;
        }
        if (sub_13E78E4(v13))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 88) = v13;
        }
        else
        {
          if (*v7) {
            int v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v40);
        }
        goto LABEL_53;
      case 2u:
        if (v9 != 16) {
          goto LABEL_45;
        }
        v5 |= 2u;
        unsigned int v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v41 = v38;
          *(void *)(a1 + 80) = v39;
          if (!v38) {
            goto LABEL_66;
          }
        }
        else
        {
          unsigned int v16 = v8 + 2;
LABEL_20:
          *(void *)uint64_t v41 = v16;
          *(void *)(a1 + 80) = v17;
        }
        goto LABEL_53;
      case 3u:
        if (v9 != 26) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        unsigned int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unsigned int v20 = (uint64_t *)*v20;
        }
        unsigned int v21 = (std::string *)sub_1880F84((void *)(a1 + 72), v20);
        unsigned int v22 = (void *)sub_188C244(v21, *(char **)v41, (uint64_t)a3);
        goto LABEL_52;
      case 4u:
        if (v9 != 34) {
          goto LABEL_45;
        }
        unsigned int v23 = v8 - 1;
        while (1)
        {
          unsigned int v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)uint64_t v41 = v23 + 1;
          unsigned int v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_11BF1C8(*(void *)(a1 + 24));
            uint64_t v27 = sub_188CDC8(a1 + 24, v28);
            unsigned int v24 = *(unsigned __int8 **)v41;
          }
          unsigned int v23 = sub_11B84DC(a3, v27, v24);
          *(void *)uint64_t v41 = v23;
          if (!v23) {
            goto LABEL_66;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_53;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_45;
        }
        int v29 = v8 - 1;
        while (1)
        {
          unint64_t v30 = (unsigned __int8 *)(v29 + 1);
          *(void *)uint64_t v41 = v29 + 1;
          int v31 = *(_DWORD **)(a1 + 64);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 56), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 56) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            sub_11BF264(*(void *)(a1 + 48));
            uint64_t v33 = sub_188CDC8(a1 + 48, v34);
            unint64_t v30 = *(unsigned __int8 **)v41;
          }
          int v29 = sub_11B856C(a3, v33, v30);
          *(void *)uint64_t v41 = v29;
          if (!v29) {
            goto LABEL_66;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
            goto LABEL_53;
          }
        }
      default:
LABEL_45:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            int v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v41;
          }
          unsigned int v22 = sub_1885AC0(v9, v36, v8, a3);
LABEL_52:
          *(void *)uint64_t v41 = v22;
          if (!v22) {
            goto LABEL_66;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_66:
        }
          *(void *)uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_11B84DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B69D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11B856C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B74E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11B85FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 88);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 80);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_11B6E1C(v15, (unint64_t)v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 42;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        unsigned int v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        unsigned int v22 = v4 + 2;
      }
      uint64_t v4 = sub_11B78DC(v20, (unint64_t)v22, a3);
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_11B88E0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11B7154(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11B7CEC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      unint64_t v21 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v22 = *(unsigned __int8 *)(v21 + 23);
      uint64_t v23 = *(void *)(v21 + 8);
      if ((v22 & 0x80u) == 0) {
        uint64_t v23 = v22;
      }
      v9 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v15 & 2) == 0)
      {
LABEL_18:
        if ((v15 & 4) == 0) {
          goto LABEL_23;
        }
LABEL_19:
        int v16 = *(_DWORD *)(a1 + 88);
        uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
        if (v16 >= 0) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = 11;
        }
        v9 += v18;
        goto LABEL_23;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_18;
    }
    v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_23:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v24 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v9 += v25;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_11B8A94(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DCA20((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_11DCAAC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      int v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          *(_DWORD *)(a1 + 16) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11B8C38()
{
  return 1;
}

void *sub_11B8C40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutingResponseAnalyticData");
}

uint64_t sub_11B8C50(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252CDA8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_11B4D64(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_11B7F28(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B8D20(uint64_t a1)
{
  sub_11B8C50(a1);

  operator delete();
}

uint64_t sub_11B8D58(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_11B4E80(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_11B8018(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11B8DC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v16 = (void *)*v16;
      }
      uint64_t v15 = sub_11BF2E4((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = v19;
    }
    int v14 = (char *)sub_11B9018(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void **)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_11BF084((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      int v7 = v19;
    }
    int v14 = (char *)sub_11B8F88(a3, (uint64_t)v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

uint64_t sub_11B8F88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B4FDC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11B9018(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11B8100(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11B90A8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_11B56C8(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_11B85FC(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11B9228(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_11B5AF0(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_11B88E0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_11B9300(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void **)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_11BF084((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)(uint64_t))(a2 + 24);
      }
      else {
        unint64_t v8 = &off_252CCD8;
      }
      sub_11B5DB4((uint64_t)v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = sub_11BF2E4((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)(uint64_t))(a2 + 32);
      }
      else {
        BOOL v12 = &off_252CD48;
      }
      sub_11B8A94(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11B9404(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v4 = v3 - 1;
    char v5 = sub_11B47FC(*(void *)(*(void *)(v2 + 40) + 8 * v3));
    uint64_t v3 = v4;
  }
  while ((v5 & 1) != 0);
  return v1;
}

void *sub_11B9468@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DirectionsRequestResponseAnalyticsDataExtn");
}

double sub_11B9478(void *a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *a1 = off_2499800;
  a1[1] = v3;
  a1[2] = 0;
  a1[3] = &qword_2550250;
  a1[4] = &qword_2550250;
  *(void *)&double result = 0x100000000;
  a1[5] = 0x100000000;
  return result;
}

uint64_t sub_11B94C0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B9578(uint64_t a1)
{
  sub_11B94C0(a1);

  operator delete();
}

uint64_t sub_11B95B0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0) {
    *(void *)(a1 + 40) = 0x100000000;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11B9640(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)int v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_30;
        }
        BOOL v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)int v31 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v31) {
            goto LABEL_51;
          }
          unint64_t v13 = v27;
        }
        else
        {
          BOOL v12 = v8 + 2;
LABEL_13:
          *(void *)int v31 = v12;
        }
        if ((v13 - 1) > 3)
        {
          if (*v7) {
            unint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v13;
        }
        goto LABEL_38;
      case 2u:
        if (v9 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 24);
        goto LABEL_29;
      case 3u:
        if (v9 != 24) {
          goto LABEL_30;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v28 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)int v31 = v28;
          *(_DWORD *)(a1 + 40) = v29;
          if (!v28) {
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          *(void *)int v31 = v19;
          *(_DWORD *)(a1 + 40) = v20;
        }
        goto LABEL_38;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
LABEL_29:
        uint64_t v23 = (std::string *)sub_1880F84(v18, v17);
        unint64_t v24 = (void *)sub_188C244(v23, *(char **)v31, (uint64_t)a3);
        goto LABEL_37;
      default:
LABEL_30:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v31;
          }
          unint64_t v24 = sub_1885AC0(v9, v26, v8, a3);
LABEL_37:
          *(void *)int v31 = v24;
          if (!v24) {
            goto LABEL_51;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          *(void *)int v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

unsigned char *sub_11B9930(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 44);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11B9B14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_20;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_20;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v9 = *(_DWORD *)(a1 + 44);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11B9C54(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unsigned int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unsigned int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_18:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_11B9D5C(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_11B95B0((uint64_t)result);
    return sub_11B9C54(v4, a2);
  }
  return result;
}

uint64_t sub_11B9DA8()
{
  return 1;
}

uint64_t sub_11B9DB0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = *(void *)(result + 24);
  *(void *)(result + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = *(void *)(result + 32);
  *(void *)(result + 32) = v4;
  LODWORD(v4) = *(_DWORD *)(result + 40);
  *(_DWORD *)(result + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  LODWORD(v4) = *(_DWORD *)(result + 44);
  *(_DWORD *)(result + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a2 + 44) = v4;
  return result;
}

void *sub_11B9E14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DebugGeometryInfo");
}

double sub_11B9E24(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_2499880;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = &qword_2550250;
  *(void *)(a1 + 32) = &qword_2550250;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(void *)&double result = 0x100000001;
  *(void *)(a1 + 60) = 0x100000001;
  return result;
}

uint64_t sub_11B9E70(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11B9F28(uint64_t a1)
{
  sub_11B9E70(a1);

  operator delete();
}

uint64_t sub_11B9F60(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xFC) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 60) = 0x100000001;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11B9FF4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v45 + 1);
    unsigned int v9 = **(unsigned char **)v45;
    if ((char)**(unsigned char **)v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v45 + 2);
      }
    }
    *(void *)unint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_51;
        }
        unsigned int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v45 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v45) {
            goto LABEL_87;
          }
          unint64_t v13 = v36;
        }
        else
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v45 = v12;
        }
        if ((v13 - 1) <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 60) = v13;
          goto LABEL_59;
        }
        if (*v7) {
          BOOL v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v44 = 1;
        goto LABEL_80;
      case 2u:
        if (v9 != 18) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 24);
        goto LABEL_29;
      case 3u:
        if (v9 != 24) {
          goto LABEL_51;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v37 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)unint64_t v45 = v37;
          *(_DWORD *)(a1 + 40) = v38;
          if (!v37) {
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          *(void *)unint64_t v45 = v19;
          *(_DWORD *)(a1 + 40) = v20;
        }
        goto LABEL_59;
      case 4u:
        if (v9 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
LABEL_29:
        uint64_t v23 = (std::string *)sub_1880F84(v18, v17);
        unint64_t v24 = (void *)sub_188C244(v23, *(char **)v45, (uint64_t)a3);
        goto LABEL_58;
      case 5u:
        if (v9 != 40) {
          goto LABEL_51;
        }
        BOOL v25 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v26 = *v25;
        int v27 = v13 + (v26 << 7);
        unint64_t v13 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)unint64_t v45 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v45) {
            goto LABEL_87;
          }
          unint64_t v13 = v39;
        }
        else
        {
          BOOL v25 = v8 + 2;
LABEL_34:
          *(void *)unint64_t v45 = v25;
        }
        if ((v13 - 1) <= 0xB)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_59;
        }
        if (*v7) {
          BOOL v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          BOOL v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v44 = 5;
        goto LABEL_80;
      case 6u:
        if (v9 != 49) {
          goto LABEL_51;
        }
        v5 |= 0x10u;
        *(void *)(a1 + 48) = *(void *)v8;
        *(void *)unint64_t v45 = v8 + 8;
        goto LABEL_59;
      case 7u:
        if (v9 != 56) {
          goto LABEL_51;
        }
        v5 |= 8u;
        uint64_t v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v40 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)unint64_t v45 = v40;
          *(_DWORD *)(a1 + 44) = v41;
          if (!v40) {
            goto LABEL_87;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_43:
          *(void *)unint64_t v45 = v28;
          *(_DWORD *)(a1 + 44) = v29;
        }
        goto LABEL_59;
      case 8u:
        if (v9 != 64) {
          goto LABEL_51;
        }
        int v31 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v32 = *v31;
        int v33 = v13 + (v32 << 7);
        unint64_t v13 = (v33 - 128);
        if (v32 < 0)
        {
          *(void *)unint64_t v45 = sub_188C138((uint64_t)v8, (v33 - 128));
          if (!*(void *)v45) {
            goto LABEL_87;
          }
          unint64_t v13 = v42;
        }
        else
        {
          int v31 = v8 + 2;
LABEL_48:
          *(void *)unint64_t v45 = v31;
        }
        if (v13 > 4)
        {
          if (*v7) {
            BOOL v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            BOOL v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v44 = 8;
LABEL_80:
          sub_188C020(v44, v13, v43);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 56) = v13;
        }
        goto LABEL_59;
      default:
LABEL_51:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            BOOL v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v45;
          }
          unint64_t v24 = sub_1885AC0(v9, v35, v8, a3);
LABEL_58:
          *(void *)unint64_t v45 = v24;
          if (!v24) {
            goto LABEL_87;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, (char **)v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_87:
        }
          *(void *)unint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v45;
    }
  }
}

unsigned char *sub_11BA4A4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 60);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 64);
    unsigned char *v4 = 40;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 49;
    *(void *)(v4 + 1) = v16;
    v4 += 9;
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v17 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 56;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unsigned int v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v20 = *(int *)(a1 + 56);
    unsigned char *v4 = 64;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unint64_t v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_11BA834(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 16))
  {
    uint64_t v1 = 0;
    goto LABEL_35;
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v1 = 0;
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
  uint64_t v4 = *(void *)(v2 + 8);
  if ((v3 & 0x80u) == 0) {
    uint64_t v4 = v3;
  }
  uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
LABEL_9:
    unint64_t v5 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    v1 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((*(unsigned char *)(a1 + 16) & 4) == 0)
  {
    if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  v1 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 16) & 8) != 0) {
LABEL_14:
  }
    v1 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  if ((*(unsigned char *)(a1 + 16) & 0x10) != 0) {
    v1 += 9;
  }
  if ((*(unsigned char *)(a1 + 16) & 0x20) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 56);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v1 += v9;
    if ((*(unsigned char *)(a1 + 16) & 0x40) == 0)
    {
LABEL_19:
      if ((*(unsigned char *)(a1 + 16) & 0x80) == 0) {
        goto LABEL_35;
      }
      goto LABEL_31;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 0x40) == 0)
  {
    goto LABEL_19;
  }
  int v10 = *(_DWORD *)(a1 + 60);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v1 += v11;
  if ((*(unsigned char *)(a1 + 16) & 0x80) != 0)
  {
LABEL_31:
    int v12 = *(_DWORD *)(a1 + 64);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v1 += v13;
  }
LABEL_35:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v1 += v17;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_11BAA18(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    int v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_24:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_25:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_26:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_11BAB60(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_11B9F60((uint64_t)result);
    return sub_11BAA18(v4, a2);
  }
  return result;
}

uint64_t sub_11BABAC()
{
  return 1;
}

__n128 sub_11BABB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 40) = result;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  LODWORD(v5) = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a2 + 56) = v5;
  LODWORD(v5) = *(_DWORD *)(a1 + 60);
  *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
  *(_DWORD *)(a2 + 60) = v5;
  LODWORD(v5) = *(_DWORD *)(a1 + 64);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a2 + 64) = v5;
  return result;
}

void *sub_11BAC38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLineAnomalyInfo");
}

uint64_t sub_11BAC48(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_11DB7D4((void *)(a1 + 48));
  sub_11DB7D4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11BAD00(uint64_t a1)
{
  sub_11BAC48(a1);

  operator delete();
}

unsigned char *sub_11BAD38(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  uint64_t v5 = *((unsigned int *)v1 + 14);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*((void *)v1 + 8) + 8);
    do
    {
      uint64_t v7 = *v6++;
      __n128 result = sub_15B09D0(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)v1 + 14) = 0;
  }
  if (v1[16])
  {
    unint64_t v8 = *((void *)v1 + 9) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = v1[8];
  uint64_t v9 = v1 + 8;
  *((_DWORD *)v9 + 2) = 0;
  if (v10)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_11BAE10(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)int v31 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    unsigned int v18 = (std::string *)sub_1880F84((void *)(a1 + 72), v17);
    unint64_t v15 = (void *)sub_188C244(v18, *(char **)v31, (uint64_t)a3);
LABEL_25:
    *(void *)int v31 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      unsigned int v19 = v7 - 1;
      while (1)
      {
        unint64_t v20 = (unsigned __int8 *)(v19 + 1);
        *(void *)int v31 = v19 + 1;
        unint64_t v21 = *(_DWORD **)(a1 + 64);
        if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
        {
          *(_DWORD *)(a1 + 56) = v22 + 1;
          uint64_t v23 = *(void *)&v21[2 * v22 + 2];
        }
        else
        {
          uint64_t v24 = sub_15C1918(*(void *)(a1 + 48));
          uint64_t v23 = sub_188CDC8(a1 + 48, v24);
          unint64_t v20 = *(unsigned __int8 **)v31;
        }
        unsigned int v19 = sub_1198F14(a3, v23, v20);
        *(void *)int v31 = v19;
        if (!v19) {
          goto LABEL_50;
        }
        if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
          goto LABEL_26;
        }
      }
    }
  }
  else if (v11 == 1 && v8 == 10)
  {
    unint64_t v25 = v7 - 1;
    while (1)
    {
      int v26 = (unsigned __int8 *)(v25 + 1);
      *(void *)int v31 = v25 + 1;
      uint64_t v27 = *(_DWORD **)(a1 + 40);
      if (v27 && (uint64_t v28 = *(int *)(a1 + 32), (int)v28 < *v27))
      {
        *(_DWORD *)(a1 + 32) = v28 + 1;
        uint64_t v29 = *(void *)&v27[2 * v28 + 2];
      }
      else
      {
        uint64_t v30 = sub_15C1918(*(void *)(a1 + 24));
        uint64_t v29 = sub_188CDC8(a1 + 24, v30);
        int v26 = *(unsigned __int8 **)v31;
      }
      unint64_t v25 = sub_1198F14(a3, v29, v26);
      *(void *)int v31 = v25;
      if (!v25) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v25 || *v25 != 10) {
        goto LABEL_26;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v31;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_25;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v31;
  }
LABEL_50:
  *(void *)int v31 = 0;
  return *(void *)v31;
}

char *sub_11BB0B0(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_15B0C0C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        unint64_t v15 = __dst + 2;
      }
      __dst = sub_15B0C0C(v13, v15, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unsigned int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unsigned int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_11BB29C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B0D90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_11BB3E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_10E4FFC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11BB550(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15B0F18(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_15B0F18(*(void *)(*(void *)(a1 + 64) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

void *sub_11BB5D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLineGeometryInfo.Segment");
}

void *sub_11BB5E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DC054(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11BB660(void *a1)
{
  sub_11BB5E0(a1);

  operator delete();
}

unsigned char *sub_11BB698(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      char v4 = *v3++;
      __n128 result = sub_11BAD38(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  BOOL v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_11BB714(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    BOOL v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unsigned int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unsigned int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11BF538(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = (char *)sub_11BB8B4(a3, v16, v13);
          unsigned int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_11BB8B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11BAE10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11BB944(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_11BB0B0(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_11BBA88(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11BB29C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_11BBB38(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_11DCB38((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11BBC08(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_11BB550(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_11BBC60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLineGeometryInfo");
}

void *sub_11BBC70(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11BBCFC(void *a1)
{
  sub_11BBC70(a1);

  operator delete();
}

uint64_t sub_11BBD34(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  sub_188CC00(a1 + 48);
  uint64_t result = sub_188CC00(a1 + 72);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_WORD *)(v3 + 88) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_11BBD9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (uint64_t **)(a1 + 72);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  uint64_t v9 = (uint64_t **)(a1 + 24);
  unint64_t v10 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v11 = (char *)(*(void *)v48 + 1);
    unsigned int v12 = **(unsigned char **)v48;
    if ((char)**(unsigned char **)v48 < 0)
    {
      unsigned int v13 = v12 + (*v11 << 7);
      unsigned int v12 = v13 - 128;
      if (*v11 < 0)
      {
        uint64_t v11 = (char *)sub_188C180(*(uint64_t *)v48, v13 - 128);
        unsigned int v12 = v14;
      }
      else
      {
        uint64_t v11 = (char *)(*(void *)v48 + 2);
      }
    }
    *(void *)int v48 = v11;
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_55;
        }
        uint64_t v15 = v11 - 1;
        while (1)
        {
          uint64_t v16 = (char *)(v15 + 1);
          *(void *)int v48 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            unsigned int v19 = *(std::string **)&v17[2 * v18 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            *uint64_t v21 = v20;
            v21[1] = sub_3A6EDC;
            *unint64_t v20 = 0;
            v20[1] = 0;
            v20[2] = 0;
            unsigned int v19 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(char **)v48;
          }
          uint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
          *(void *)int v48 = v15;
          if (!v15) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 10) {
            goto LABEL_62;
          }
        }
      case 2u:
        if (v12 != 18) {
          goto LABEL_55;
        }
        uint64_t v22 = v11 - 1;
        while (1)
        {
          uint64_t v23 = (char *)(v22 + 1);
          *(void *)int v48 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            int v26 = *(std::string **)&v24[2 * v25 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v28 = v27;
            v28[1] = sub_3A6EDC;
            void *v27 = 0;
            v27[1] = 0;
            v27[2] = 0;
            int v26 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v27);
            uint64_t v23 = *(char **)v48;
          }
          uint64_t v22 = sub_188C244(v26, v23, (uint64_t)a3);
          *(void *)int v48 = v22;
          if (!v22) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
            goto LABEL_62;
          }
        }
      case 3u:
        if (v12 != 26) {
          goto LABEL_55;
        }
        uint64_t v29 = v11 - 1;
        while (1)
        {
          uint64_t v30 = (char *)(v29 + 1);
          *(void *)int v48 = v29 + 1;
          int v31 = *(_DWORD **)(a1 + 88);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 80), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 80) = v32 + 1;
            int v33 = *(std::string **)&v31[2 * v32 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v35 = v34;
            v35[1] = sub_3A6EDC;
            void *v34 = 0;
            v34[1] = 0;
            v34[2] = 0;
            int v33 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v34);
            uint64_t v30 = *(char **)v48;
          }
          uint64_t v29 = sub_188C244(v33, v30, (uint64_t)a3);
          *(void *)int v48 = v29;
          if (!v29) {
            goto LABEL_71;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 26) {
            goto LABEL_62;
          }
        }
      case 4u:
        if (v12 != 32) {
          goto LABEL_55;
        }
        v5 |= 1u;
        unint64_t v36 = v11 + 1;
        uint64_t v37 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v11, v37);
          *(void *)int v48 = v44;
          *(unsigned char *)(a1 + 96) = v45 != 0;
          if (!v44) {
            goto LABEL_71;
          }
        }
        else
        {
          unint64_t v36 = v11 + 2;
LABEL_49:
          *(void *)int v48 = v36;
          *(unsigned char *)(a1 + 96) = v37 != 0;
        }
        goto LABEL_62;
      case 5u:
        if (v12 != 40) {
          goto LABEL_55;
        }
        v5 |= 2u;
        unint64_t v39 = v11 + 1;
        uint64_t v40 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v11, v40);
          *(void *)int v48 = v46;
          *(unsigned char *)(a1 + 97) = v47 != 0;
          if (!v46) {
            goto LABEL_71;
          }
        }
        else
        {
          unint64_t v39 = v11 + 2;
LABEL_54:
          *(void *)int v48 = v39;
          *(unsigned char *)(a1 + 97) = v40 != 0;
        }
        goto LABEL_62;
      default:
LABEL_55:
        if (v12) {
          BOOL v42 = (v12 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v10)
          {
            BOOL v43 = (std::string *)((*v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v11 = *(char **)v48;
          }
          *(void *)int v48 = sub_1885AC0(v12, v43, v11, a3);
          if (!*(void *)v48) {
            goto LABEL_71;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, (char **)v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v11) {
          a3[10].i32[0] = v12 - 1;
        }
        else {
LABEL_71:
        }
          *(void *)int v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v48;
    }
  }
}

char *sub_11BC274(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          uint64_t v9 = (void *)*v9;
        }
        uint64_t v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      uint64_t v15 = *(void **)(*(void *)(a1 + 64) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(unsigned int *)(a1 + 80);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      uint64_t v21 = *(void **)(*(void *)(a1 + 88) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_36;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v22)
      {
        *__dst = 26;
        __dst[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v23 = __dst + 2;
        memcpy(v23, v21, v22);
        __dst = &v23[v22];
        goto LABEL_34;
      }
LABEL_36:
      __dst = (char *)sub_188A868(a3, 3, (uint64_t)v21, __dst);
LABEL_34:
      v19 += 8;
    }
    while (v20 != v19);
  }
  int v24 = *(_DWORD *)(a1 + 16);
  if (v24)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v25 = *(unsigned char *)(a1 + 96);
    *__dst = 32;
    __dst[1] = v25;
    __dst += 2;
  }
  if ((v24 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v26 = *(unsigned char *)(a1 + 97);
    *__dst = 40;
    __dst[1] = v26;
    __dst += 2;
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return __dst;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(__dst, v30, (int)v31);
    __dst += v32;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, __dst);
}

uint64_t sub_11BC5A0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 56);
  uint64_t v8 = v3 + v7;
  if ((int)v7 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 80);
  uint64_t v14 = v8 + v13;
  if ((int)v13 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v14 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6);
      --v13;
    }
    while (v13);
  }
  int v19 = *(_DWORD *)(a1 + 16);
  uint64_t v20 = v14 + 2;
  if ((v19 & 1) == 0) {
    uint64_t v20 = v14;
  }
  if ((v19 & 2) != 0) {
    v20 += 2;
  }
  if ((v19 & 3) != 0) {
    uint64_t v14 = v20;
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v14 += v24;
  }
  *(_DWORD *)(a1 + 20) = v14;
  return v14;
}

std::string *sub_11BC70C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 3) != 0)
  {
    if (v19) {
      v3[4].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 96);
    }
    if ((v19 & 2) != 0) {
      v3[4].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 97);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v19;
  }
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11BC8D4()
{
  return 1;
}

void *sub_11BC8DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.StepDbgExtn");
}

uint64_t sub_11BC8EC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15284D4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v5 = *(void *)(v1 + 48);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_11BC98C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_152B6EC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

void *sub_11BCA10(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11BCA94((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_11BCA94(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252CEE0)
  {
    if (*(void *)(a1 + 32))
    {
      sub_14953B4();
      operator delete();
    }
    uint64_t v4 = *(void *)(a1 + 40);
    if (v4)
    {
      sub_11D7C58(v4);
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_11D70A4(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_122FE20(result);
      operator delete();
    }
  }
  return result;
}

void sub_11BCB78(void *a1)
{
  sub_11BCA10(a1);

  operator delete();
}

uint64_t sub_11BCBB0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_17:
    uint64_t result = sub_11BC8EC(*(void *)(v1 + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_18;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = sub_14953F0(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_18:
  uint64_t result = sub_11BC98C(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_122FE5C(*(void *)(v1 + 56));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  *(_DWORD *)(v3 + 56) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_11BCC80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v46 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v46 + 1);
    unsigned int v9 = **(unsigned char **)v46;
    if ((char)**(unsigned char **)v46 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v46, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v46 + 2);
      }
    }
    *(void *)uint64_t v46 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v12 = *(void **)(a1 + 32);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          int v12 = sub_1495CF0((uint64_t)v13);
          *(void *)(a1 + 32) = v12;
          char v8 = *(unsigned __int8 **)v46;
        }
        int v14 = sub_11BD160(a3, (uint64_t)v12, v8);
        goto LABEL_65;
      case 2u:
        if (v9 != 16) {
          goto LABEL_58;
        }
        v5 |= 0x20u;
        uint64_t v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v46 = v40;
          *(unsigned char *)(a1 + 64) = v41 != 0;
          if (!v40) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_25:
          *(void *)uint64_t v46 = v18;
          *(unsigned char *)(a1 + 64) = v19 != 0;
        }
        goto LABEL_66;
      case 3u:
        if (v9 != 26) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          int64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_11D8398((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          char v8 = *(unsigned __int8 **)v46;
        }
        int v14 = sub_11BD1F0(a3, (uint64_t)v21, v8);
        goto LABEL_65;
      case 4u:
        if (v9 != 34) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 48);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_11D7590((uint64_t)v24);
          *(void *)(a1 + 48) = v23;
          char v8 = *(unsigned __int8 **)v46;
        }
        int v14 = sub_11BD280(a3, v23, v8);
        goto LABEL_65;
      case 5u:
        if (v9 == 42)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          char v25 = *(void **)(a1 + 56);
          if (!v25)
          {
            char v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              char v26 = (void *)*v26;
            }
            char v25 = sub_12306BC((uint64_t)v26);
            *(void *)(a1 + 56) = v25;
            char v8 = *(unsigned __int8 **)v46;
          }
          int v14 = sub_11BD310(a3, (uint64_t)v25, v8);
LABEL_65:
          *(void *)uint64_t v46 = v14;
          if (!v14) {
            goto LABEL_79;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_58:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v46;
          }
          int v14 = sub_1885AC0(v9, v37, (char *)v8, a3);
          goto LABEL_65;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_79:
        }
          *(void *)uint64_t v46 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v46;
      default:
        switch(v9 >> 3)
        {
          case 'd':
            if (v9 != 32) {
              goto LABEL_58;
            }
            v5 |= 0x40u;
            uint64_t v15 = (char *)(v8 + 1);
            uint64_t v16 = *v8;
            if (((char)*v8 & 0x80000000) == 0) {
              goto LABEL_20;
            }
            int v17 = *v15;
            uint64_t v16 = v16 + (v17 << 7) - 128;
            if (v17 < 0)
            {
              uint64_t v38 = sub_188C138((uint64_t)v8, v16);
              *(void *)uint64_t v46 = v38;
              *(unsigned char *)(a1 + 65) = v39 != 0;
              if (!v38) {
                goto LABEL_79;
              }
            }
            else
            {
              uint64_t v15 = (char *)(v8 + 2);
LABEL_20:
              *(void *)uint64_t v46 = v15;
              *(unsigned char *)(a1 + 65) = v16 != 0;
            }
            goto LABEL_66;
          case 'e':
            if (v9 != 40) {
              goto LABEL_58;
            }
            v5 |= 0x80u;
            uint64_t v27 = (char *)(v8 + 1);
            uint64_t v28 = *v8;
            if (((char)*v8 & 0x80000000) == 0) {
              goto LABEL_48;
            }
            int v29 = *v27;
            uint64_t v28 = v28 + (v29 << 7) - 128;
            if (v29 < 0)
            {
              uint64_t v42 = sub_188C138((uint64_t)v8, v28);
              *(void *)uint64_t v46 = v42;
              *(unsigned char *)(a1 + 66) = v43 != 0;
              if (!v42) {
                goto LABEL_79;
              }
            }
            else
            {
              uint64_t v27 = (char *)(v8 + 2);
LABEL_48:
              *(void *)uint64_t v46 = v27;
              *(unsigned char *)(a1 + 66) = v28 != 0;
            }
            goto LABEL_66;
          case 'f':
            if (v9 != 50) {
              goto LABEL_58;
            }
            *(_DWORD *)(a1 + 16) |= 1u;
            uint64_t v30 = *(void *)(a1 + 8);
            uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
            if (v30) {
              uint64_t v31 = (uint64_t *)*v31;
            }
            uint64_t v32 = (std::string *)sub_1880F84((void *)(a1 + 24), v31);
            int v14 = (void *)sub_188C244(v32, *(char **)v46, (uint64_t)a3);
            goto LABEL_65;
          case 'g':
            if (v9 != 56) {
              goto LABEL_58;
            }
            v5 |= 0x100u;
            int v33 = (char *)(v8 + 1);
            uint64_t v34 = *v8;
            if (((char)*v8 & 0x80000000) == 0) {
              goto LABEL_57;
            }
            int v35 = *v33;
            uint64_t v34 = v34 + (v35 << 7) - 128;
            if (v35 < 0)
            {
              uint64_t v44 = sub_188C138((uint64_t)v8, v34);
              *(void *)uint64_t v46 = v44;
              *(unsigned char *)(a1 + 67) = v45 != 0;
              if (!v44) {
                goto LABEL_79;
              }
            }
            else
            {
              int v33 = (char *)(v8 + 2);
LABEL_57:
              *(void *)uint64_t v46 = v33;
              *(unsigned char *)(a1 + 67) = v34 != 0;
            }
            break;
          default:
            goto LABEL_58;
        }
        goto LABEL_66;
    }
  }
}

char *sub_11BD160(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1495480(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11BD1F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D7D54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11BD280(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D715C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11BD310(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_122FEFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11BD3A0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1495688(v7, (unint64_t)v9, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 64);
  unsigned char *v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v12 = *(_DWORD *)(v11 + 20);
  v4[1] = v12;
  if (v12 > 0x7F) {
    uint64_t v13 = sub_188A9CC(v12, v4 + 1);
  }
  else {
    uint64_t v13 = v4 + 2;
  }
  char v4 = sub_11D807C(v11, (unint64_t)v13, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v15 = *(_DWORD *)(v14 + 40);
  v4[1] = v15;
  if (v15 > 0x7F) {
    uint64_t v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    uint64_t v16 = v4 + 2;
  }
  char v4 = sub_11D738C(v14, v16, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 56);
  unsigned char *v4 = 42;
  unsigned int v18 = *(_DWORD *)(v17 + 20);
  v4[1] = v18;
  if (v18 > 0x7F) {
    uint64_t v19 = sub_188A9CC(v18, v4 + 1);
  }
  else {
    uint64_t v19 = v4 + 2;
  }
  char v4 = sub_1230224(v17, (unint64_t)v19, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_7:
    if ((v6 & 0x80) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 65);
  *(_WORD *)char v4 = 1696;
  v4[2] = v20;
  v4 += 3;
  if ((v6 & 0x80) == 0)
  {
LABEL_8:
    if ((v6 & 1) == 0) {
      goto LABEL_9;
    }
    goto LABEL_44;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v21 = *(unsigned char *)(a1 + 66);
  *(_WORD *)char v4 = 1704;
  v4[2] = v21;
  v4 += 3;
  if ((v6 & 1) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_45;
  }
LABEL_44:
  char v4 = sub_117A0AC(a3, 102, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_48;
  }
LABEL_45:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v22 = *(unsigned char *)(a1 + 67);
  *(_WORD *)char v4 = 1720;
  v4[2] = v22;
  v4 += 3;
LABEL_48:
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    char v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    char v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_11BD70C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_20;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_1495834(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_12;
    }
LABEL_26:
    uint64_t v13 = sub_11D74D0(*(void *)(a1 + 48));
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x10) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v12 = sub_11D8228(*(void *)(a1 + 40));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_12:
  if ((v2 & 0x10) != 0)
  {
LABEL_13:
    uint64_t v9 = sub_12303D0(*(void *)(a1 + 56));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v4 = v3 + 2;
  if ((v2 & 0x20) == 0) {
    uint64_t v4 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v4 += 3;
  }
  if ((v2 & 0x80) != 0) {
    v4 += 3;
  }
LABEL_20:
  if ((v2 & 0x100) != 0) {
    uint64_t result = v4 + 3;
  }
  else {
    uint64_t result = v4;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v14 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_11BD8C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v7 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v8 = (std::string **)(a1 + 24);
      uint64_t v9 = *(void *)(a1 + 8);
      char v10 = (uint64_t *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
      if (v9) {
        char v10 = (uint64_t *)*v10;
      }
      sub_1881DF4(v8, v7, v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(std::string **)(a1 + 32);
    if (!v11)
    {
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (void *)*v13;
      }
      uint64_t v11 = (std::string *)sub_1495CF0((uint64_t)v13);
      *(void *)(a1 + 32) = v11;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v14 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v14 = &off_253A038;
    }
    sub_1495918(v11, (uint64_t)v14);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v15 = *(void **)(a1 + 40);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_11D8398((uint64_t)v17);
      *(void *)(a1 + 40) = v15;
    }
    if (*(void *)(a2 + 40)) {
      unsigned int v18 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unsigned int v18 = &off_252D6B8;
    }
    sub_11BDAF8((uint64_t)v15, (uint64_t)v18);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v19 = *(void *)(a1 + 48);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      char v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        char v21 = (void *)*v21;
      }
      uint64_t v19 = sub_11D7590((uint64_t)v21);
      *(void *)(a1 + 48) = v19;
    }
    if (*(void *)(a2 + 48)) {
      char v22 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      char v22 = &off_252D668;
    }
    sub_11BDC1C(v19, (uint64_t)v22);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v23 = *(void **)(a1 + 56);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      unint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        unint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = sub_12306BC((uint64_t)v25);
      *(void *)(a1 + 56) = v23;
    }
    if (*(void *)(a2 + 56)) {
      char v26 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      char v26 = &off_252E628;
    }
    sub_12304B4((uint64_t)v23, (uint64_t)v26);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_54;
    }
LABEL_53:
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
      goto LABEL_11;
    }
LABEL_54:
    *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    char v5 = *(unsigned char *)(a2 + 67);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(unsigned char *)(a1 + 67) = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11BDAF8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    char v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DDE6C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(void *(****)(void *))(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    char v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      char v10 = (std::string *)sub_11D831C((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(void *(****)(void *))(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_252D698;
    }
    sub_11A7934(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11BDC1C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    char v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_11DDD60((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11BDCEC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(unsigned int *)(v3 + 32);
    do
    {
      if ((int)v4 < 1)
      {
        int v2 = *(_DWORD *)(a1 + 16);
        goto LABEL_7;
      }
      uint64_t v5 = v4 - 1;
      char v6 = sub_15294E8(*(void *)(*(void *)(v3 + 40) + 8 * v4));
      uint64_t v4 = v5;
    }
    while ((v6 & 1) != 0);
    return 0;
  }
  else
  {
LABEL_7:
    if ((v2 & 8) != 0)
    {
      uint64_t v7 = *(void *)(a1 + 48);
      uint64_t v8 = *(unsigned int *)(v7 + 24);
      while ((int)v8 >= 1)
      {
        uint64_t v9 = v8 - 1;
        BOOL v10 = sub_152D0E0(*(void *)(*(void *)(v7 + 32) + 8 * v8));
        uint64_t v8 = v9;
        if (!v10) {
          return 0;
        }
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
    if ((v2 & 0x10) == 0) {
      return 1;
    }
    BOOL result = sub_12305D8(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

BOOL sub_11BDD98(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15294E8(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

BOOL sub_11BDDF0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_152D0E0(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_11BDE48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.CommonRoutingRequestExtn");
}

void *sub_11BDE58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *BOOL result = &off_2498500;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  result[7] = 0;
  result[8] = 0;
  result[6] = a1;
  result[9] = 0x3FF0000000000000;
  return result;
}

uint64_t sub_11BDF08(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2498580;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = a1;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_11BDFBC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2498600;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_11BE05C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_2498680;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[9] = 0;
  result[10] = 0;
  result[8] = 0;
  return result;
}

void *sub_11BE108(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_2498700;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_11BE180(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498780;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_11BE1FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2498800;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_11BE29C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_2498880;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 60) = 0u;
  return result;
}

void *sub_11BE320(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_2498900;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_11BE3BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_2498980;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_11BE438(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498A00;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_11BE4B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498A80;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_11BE530(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498B00;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_11BE5AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498B80;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_11BE628(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498C00;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_11BE6A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2498C80;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

double sub_11BE720(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_2498D00;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(void *)(v2 + 64) = 0;
  return result;
}

void *sub_11BE7A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_2498D80;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  result[6] = 0;
  result[7] = 0;
  return result;
}

uint64_t sub_11BE844(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2498E00;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = a1;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = a1;
  *(void *)(result + 120) = a1;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  *(_OWORD *)(result + 160) = 0u;
  *(_OWORD *)(result + 176) = 0u;
  *(_OWORD *)(result + 192) = 0u;
  *(_OWORD *)(result + 204) = 0u;
  return result;
}

void *sub_11BE910(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2498E80;
  result[2] = 0;
  *(void *)((char *)result + 21) = 0;
  return result;
}

uint64_t sub_11BE98C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2498F00;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_11BEA2C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2498F80;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_11BEAA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2499000;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_11BEB1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2499080;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_11BEB94(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_2499100;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = 0;
  return result;
}

uint64_t sub_11BEC44(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499180;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_11BECE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2499200;
  *(void *)(result + 16) = 0;
  *(_WORD *)(result + 24) = 0;
  return result;
}

void *sub_11BED5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2499280;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

double sub_11BEDE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_2499300;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

double sub_11BEE5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_2499380;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = 0;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = a1;
  *(void *)(v2 + 120) = 0;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = 0;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = a1;
  *(void *)(v2 + 168) = 0;
  *(void *)(v2 + 176) = 0;
  *(void *)(v2 + 184) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_WORD *)(v2 + 224) = 0;
  return result;
}

uint64_t sub_11BEF40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499400;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = 0;
  *(void *)(result + 80) = a1;
  *(_DWORD *)(result + 104) = 2;
  return result;
}

void *sub_11BF00C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2499480;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_11BF084(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_2499500;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  result[10] = &qword_2550250;
  result[11] = &qword_2550250;
  result[12] = 0;
  result[13] = 0x100000000;
  return result;
}

uint64_t sub_11BF140(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2499580;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_11BF1C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499600;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

double sub_11BF264(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_2499680;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_11BF2E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499700;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = 0;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void *sub_11BF398(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_2499780;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

double sub_11BF414(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  v2[1] = a1;
  *uint64_t v2 = off_2499800;
  v2[2] = 0;
  v2[3] = &qword_2550250;
  v2[4] = &qword_2550250;
  *(void *)&double result = 0x100000000;
  v2[5] = 0x100000000;
  return result;
}

double sub_11BF4A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_2499880;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = 0;
  *(_DWORD *)(v2 + 56) = 0;
  *(void *)&double result = 0x100000001;
  *(void *)(v2 + 60) = 0x100000001;
  return result;
}

void *sub_11BF538(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_2499900;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_11BF5E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2499980;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_11BF688(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_2499A00;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(_WORD *)(result + 96) = 0;
  return result;
}

double sub_11BF738(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_2499A80;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_DWORD *)(v2 + 64) = 0;
  return result;
}

uint64_t sub_11BF7C8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252CF28)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_11C0294(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11BF880(uint64_t a1)
{
  sub_11BF7C8(a1);

  operator delete();
}

uint64_t sub_11BF8B8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      double result = sub_11C039C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      double result = sub_11C0508(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11BF928(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v38 + 1;
    unsigned int v9 = *v38;
    if (*v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v38 + 2;
      }
    }
    uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_37;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v38) {
            goto LABEL_62;
          }
          unint64_t v13 = v30;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v38 = v12;
        }
        if (v13 > 2)
        {
          if (*v7) {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 32) = v13;
        }
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void **)(a1 + 24);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_11CFF70((uint64_t)v17);
          *(void *)(a1 + 24) = v16;
          uint64_t v8 = v38;
        }
        unsigned int v18 = sub_11BFCA8(a3, (uint64_t)v16, (unsigned __int8 *)v8);
        goto LABEL_44;
      case 3u:
        if (v9 != 24) {
          goto LABEL_37;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v31 = (char *)sub_188C0D0((uint64_t)v8, v20);
          uint64_t v38 = v31;
          *(_DWORD *)(a1 + 36) = v32;
          if (!v31) {
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_26:
          uint64_t v38 = v19;
          *(_DWORD *)(a1 + 36) = v20;
        }
        goto LABEL_45;
      case 4u:
        if (v9 != 32) {
          goto LABEL_37;
        }
        v5 |= 8u;
        char v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          int v33 = (char *)sub_188C0D0((uint64_t)v8, v23);
          uint64_t v38 = v33;
          *(_DWORD *)(a1 + 40) = v34;
          if (!v33) {
            goto LABEL_62;
          }
        }
        else
        {
          char v22 = v8 + 2;
LABEL_31:
          uint64_t v38 = v22;
          *(_DWORD *)(a1 + 40) = v23;
        }
        goto LABEL_45;
      case 5u:
        if (v9 != 40) {
          goto LABEL_37;
        }
        v5 |= 0x10u;
        unint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          int v35 = (char *)sub_188C138((uint64_t)v8, v26);
          uint64_t v38 = v35;
          *(unsigned char *)(a1 + 44) = v36 != 0;
          if (!v35) {
            goto LABEL_62;
          }
        }
        else
        {
          unint64_t v25 = v8 + 2;
LABEL_36:
          uint64_t v38 = v25;
          *(unsigned char *)(a1 + 44) = v26 != 0;
        }
        goto LABEL_45;
      default:
LABEL_37:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            int v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v38;
          }
          unsigned int v18 = (char *)sub_1885AC0(v9, v29, v8, a3);
LABEL_44:
          uint64_t v38 = v18;
          if (!v18) {
            goto LABEL_62;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v38;
    }
  }
}

char *sub_11BFCA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_11C0638(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11BFD38(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_11C0918(v10, (unint64_t)v12, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 44);
    unsigned char *v4 = 40;
    v4[1] = v19;
    v4 += 2;
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    int v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    int v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_11C0000(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    uint64_t v5 = sub_11C0A98(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v7;
LABEL_11:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_13:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_11C0134(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_11CFFEC((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_252CF80;
      }
      sub_11C0B70(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        sub_11D0164((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_252D098;
      }
      sub_11C0EBC(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11C0238(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_11C1180(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_11C11FC(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11C0284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.NavigationFeedbackRoutingEvent");
}

uint64_t sub_11C0294(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252CF58)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_11C1260(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_11C3A08(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C0364(uint64_t a1)
{
  sub_11C0294(a1);

  operator delete();
}

uint64_t sub_11C039C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11C4858(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11C4D1C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_11C57C4(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_11C9D70(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  int v14 = *(_DWORD *)(v1 + 16);
  if ((v14 & 0xF) == 0) {
    goto LABEL_23;
  }
  if ((v14 & 1) == 0)
  {
    if ((v14 & 2) == 0) {
      goto LABEL_20;
    }
LABEL_31:
    uint64_t result = sub_15B043C(*(void *)(v1 + 128));
    if ((v14 & 4) == 0)
    {
LABEL_21:
      if ((v14 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_22;
    }
    goto LABEL_32;
  }
  unint64_t v17 = *(void *)(v1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v17 + 23) < 0)
  {
    **(unsigned char **)unint64_t v17 = 0;
    *(void *)(v17 + 8) = 0;
    if ((v14 & 2) != 0) {
      goto LABEL_31;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v14 & 2) != 0) {
      goto LABEL_31;
    }
  }
LABEL_20:
  if ((v14 & 4) == 0) {
    goto LABEL_21;
  }
LABEL_32:
  uint64_t result = (uint64_t)sub_11C13D4(*(unsigned char **)(v1 + 136));
  if ((v14 & 8) != 0) {
LABEL_22:
  }
    uint64_t result = sub_11C14B8(*(void *)(v1 + 144));
LABEL_23:
  char v16 = *(unsigned char *)(v1 + 8);
  uint64_t v15 = v1 + 8;
  *(unsigned char *)(v15 + 144) = 0;
  *(_DWORD *)(v15 + 8) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

uint64_t sub_11C0508(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11C4858(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11C4D1C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_11C57C4(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_11C9D70(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  int v14 = *(_DWORD *)(v1 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      uint64_t result = sub_11C14B8(*(void *)(v1 + 120));
    }
    if ((v14 & 2) != 0)
    {
      uint64_t v15 = *(void *)(v1 + 128);
      char v16 = *(unsigned char *)(v15 + 8);
      uint64_t result = v15 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v16) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  char v18 = *(unsigned char *)(v1 + 8);
  uint64_t v17 = v1 + 8;
  *(_DWORD *)(v17 + 128) = 0;
  *(_DWORD *)(v17 + 8) = 0;
  if (v18)
  {
    return sub_188B4AC((uint64_t *)v17);
  }
  return result;
}

char *sub_11C0638(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      char v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        char v16 = (void *)*v16;
      }
      sub_11D0164((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 32) = v17;
      uint64_t v7 = v20;
    }
    int v14 = sub_11C0888(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      char v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        char v19 = (void *)*v19;
      }
      uint64_t v18 = sub_11CFFEC((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      uint64_t v7 = v20;
    }
    int v14 = (char *)sub_11C07F8(a3, v18, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

uint64_t sub_11C07F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C159C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C0888(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C3B58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11C0918(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_11C1E6C(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_11C40A8(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    char v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    char v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11C0A98(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_11C22D4(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_11C44C0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_11C0B70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD144((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_11DD1C0((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    char v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_11DD24C((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    int v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_11DD2D8((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    int v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *int v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 0x1F) != 0)
  {
    if (v24)
    {
      uint64_t v26 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v27 = *(void *)(a1 + 8);
      BOOL v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        BOOL v28 = (uint64_t *)*v28;
      }
      sub_1881DF4((std::string **)(a1 + 120), v26, v28);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_36;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v29 = *(void *)(a1 + 128);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_15C1CB4((uint64_t)v31);
      *(void *)(a1 + 128) = v29;
    }
    if (*(void *)(a2 + 128)) {
      int v32 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      int v32 = &off_253F2E8;
    }
    sub_15B04F0(v29, (uint64_t)v32);
    if ((v24 & 4) == 0)
    {
LABEL_17:
      if ((v24 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_44;
    }
LABEL_36:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v33 = *(void *)(a1 + 136);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      int v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        int v35 = (void *)*v35;
      }
      uint64_t v33 = sub_11D00B4((uint64_t)v35);
      *(void *)(a1 + 136) = v33;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v36 = &off_252D020;
    }
    sub_11C2570(v33, (uint64_t)v36);
    if ((v24 & 8) == 0)
    {
LABEL_18:
      if ((v24 & 0x10) == 0)
      {
LABEL_20:
        *(_DWORD *)(a1 + 16) |= v24;
        goto LABEL_21;
      }
LABEL_19:
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      goto LABEL_20;
    }
LABEL_44:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v37 = *(void *)(a1 + 144);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      uint64_t v37 = sub_11D0C24((uint64_t)v39);
      *(void *)(a1 + 144) = v37;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v40 = &off_252D3C0;
    }
    sub_11C2780(v37, (uint64_t)v40);
    if ((v24 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_21:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11C0EBC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD144((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_11DD1C0((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    char v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_11DD24C((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    int v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_11DD2D8((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    int v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *int v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((v24 & 7) != 0)
  {
    if (v24)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 120);
      if (!v26)
      {
        uint64_t v27 = *(void *)(a1 + 8);
        BOOL v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          BOOL v28 = (void *)*v28;
        }
        uint64_t v26 = sub_11D0C24((uint64_t)v28);
        *(void *)(a1 + 120) = v26;
      }
      if (*(void *)(a2 + 120)) {
        uint64_t v29 = *(uint64_t (****)())(a2 + 120);
      }
      else {
        uint64_t v29 = &off_252D3C0;
      }
      sub_11C2780(v26, (uint64_t)v29);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0)
        {
LABEL_18:
          *(_DWORD *)(a1 + 16) |= v24;
          goto LABEL_19;
        }
LABEL_17:
        *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
        goto LABEL_18;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v30 = *(std::string **)(a1 + 128);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        int v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_11D0CE4((uint64_t)v32);
      *(void *)(a1 + 128) = v30;
    }
    if (*(void *)(a2 + 128)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      uint64_t v33 = &off_252D458;
    }
    sub_11C4738(v30, (uint64_t)v33);
    if ((v24 & 4) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11C1180(uint64_t a1)
{
  uint64_t result = sub_11C29FC(a1 + 72);
  if (result)
  {
    uint64_t result = sub_11C2A6C(a1 + 96);
    if (result)
    {
      int v3 = *(_DWORD *)(a1 + 16);
      if ((v3 & 2) != 0)
      {
        uint64_t result = sub_15B06D8(*(void *)(a1 + 128));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 16);
      }
      if ((v3 & 4) != 0)
      {
        uint64_t result = sub_11C2ADC(*(void *)(a1 + 136));
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 16);
      }
      if ((v3 & 8) == 0) {
        return 1;
      }
      uint64_t result = sub_11CFB40(*(void *)(a1 + 144) + 24);
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_11C11FC(uint64_t a1)
{
  uint64_t result = sub_11C29FC(a1 + 72);
  if (result)
  {
    uint64_t result = sub_11C2A6C(a1 + 96);
    if (result)
    {
      if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
        return 1;
      }
      uint64_t result = sub_11CFB40(*(void *)(a1 + 120) + 24);
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

void *sub_11C1250@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.NavigationFeedbackEventValue");
}

uint64_t sub_11C1260(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 120);
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252CF80)
  {
    uint64_t v6 = *(void *)(a1 + 128);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 136);
    if (v7)
    {
      sub_11C2B9C(v7);
      operator delete();
    }
    unint64_t v8 = *(void **)(a1 + 144);
    if (v8)
    {
      sub_11CEE70(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_11DCD44((void *)(a1 + 96));
  sub_11DCCC4((void *)(a1 + 72));
  sub_11DCC44((void *)(a1 + 48));
  sub_11DCBC4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C139C(uint64_t a1)
{
  sub_11C1260(a1);

  operator delete();
}

unsigned char *sub_11C13D4(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  uint64_t v5 = *((unsigned int *)v1 + 14);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*((void *)v1 + 8) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_15B09D0(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)v1 + 14) = 0;
  }
  uint64_t v8 = *((unsigned int *)v1 + 20);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*((void *)v1 + 11) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_15B09D0(v10);
      --v8;
    }
    while (v8);
    *((_DWORD *)v1 + 20) = 0;
  }
  if ((v1[16] & 0x3F) != 0)
  {
    *((void *)v1 + 12) = 0;
    *((void *)v1 + 13) = 0;
    *((void *)v1 + 14) = 0;
  }
  char v12 = v1[8];
  unsigned int v11 = v1 + 8;
  *((_DWORD *)v11 + 2) = 0;
  if (v12)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v11);
  }
  return result;
}

uint64_t sub_11C14B8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_11CBCB0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_11CA79C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 56) = 0;
  }
  sub_188CC00(a1 + 72);
  uint64_t result = sub_11DB4B8(a1 + 96);
  uint64_t v9 = *(unsigned int *)(a1 + 128);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_11CE6A4(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 128) = 0;
  }
  char v13 = *(unsigned char *)(a1 + 8);
  uint64_t v12 = a1 + 8;
  *(unsigned char *)(v12 + 136) = 0;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_11C159C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 1);
    unsigned int v9 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v53, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 2);
      }
    }
    *(void *)unint64_t v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_76;
        }
        v5 |= 0x10u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unint64_t v53 = v12;
          *(unsigned char *)(a1 + 152) = v13 != 0;
          goto LABEL_84;
        }
        uint64_t v51 = sub_188C138((uint64_t)v8, v13);
        *(void *)unint64_t v53 = v51;
        *(unsigned char *)(a1 + 152) = v52 != 0;
        if (v51) {
          goto LABEL_84;
        }
        goto LABEL_91;
      case 2u:
        if (v9 != 18) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        char v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          char v16 = (uint64_t *)*v16;
        }
        int v17 = (std::string *)sub_1880F84((void *)(a1 + 120), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v53, (uint64_t)a3);
        goto LABEL_83;
      case 3u:
        if (v9 != 26) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 128);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1CB4((uint64_t)v20);
          *(void *)(a1 + 128) = v19;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v18 = (uint64_t)sub_11B3E48(a3, v19, v8);
        goto LABEL_83;
      case 4u:
        if (v9 != 34) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 136);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_11D00B4((uint64_t)v22);
          *(void *)(a1 + 136) = v21;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v18 = (uint64_t)sub_11C1B0C(a3, v21, v8);
        goto LABEL_83;
      case 5u:
        if (v9 != 42) {
          goto LABEL_76;
        }
        int v23 = v8 - 1;
        while (1)
        {
          int v24 = v23 + 1;
          *(void *)unint64_t v53 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_11D022C(*(void *)(a1 + 24));
            uint64_t v27 = sub_188CDC8(a1 + 24, v28);
            int v24 = *(unsigned __int8 **)v53;
          }
          int v23 = (unsigned __int8 *)sub_11C1B9C(a3, v27, v24);
          *(void *)unint64_t v53 = v23;
          if (!v23) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 42) {
            goto LABEL_84;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_76;
        }
        uint64_t v29 = v8 - 1;
        while (1)
        {
          uint64_t v30 = v29 + 1;
          *(void *)unint64_t v53 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 64);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 56), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 56) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_11D02B4(*(void *)(a1 + 48));
            uint64_t v33 = sub_188CDC8(a1 + 48, (uint64_t)v34);
            uint64_t v30 = *(unsigned __int8 **)v53;
          }
          uint64_t v29 = (unsigned __int8 *)sub_11C1C2C(a3, v33, v30);
          *(void *)unint64_t v53 = v29;
          if (!v29) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 50) {
            goto LABEL_84;
          }
        }
      case 7u:
        if (v9 != 58) {
          goto LABEL_76;
        }
        int v35 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v36 = (unsigned __int8 *)(v35 + 1);
          *(void *)unint64_t v53 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 88);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 80), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 80) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            uint64_t v40 = sub_11D033C(*(void *)(a1 + 72));
            uint64_t v39 = sub_188CDC8(a1 + 72, v40);
            uint64_t v36 = *(unsigned __int8 **)v53;
          }
          int v35 = sub_11C1CBC(a3, v39, v36);
          *(void *)unint64_t v53 = v35;
          if (!v35) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 58) {
            goto LABEL_84;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v41 = *(void *)(a1 + 144);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_11D0C24((uint64_t)v42);
          *(void *)(a1 + 144) = v41;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v18 = sub_11C1D4C(a3, v41, v8);
        goto LABEL_83;
      case 9u:
        if (v9 != 74) {
          goto LABEL_76;
        }
        uint64_t v43 = v8 - 1;
        while (1)
        {
          uint64_t v44 = v43 + 1;
          *(void *)unint64_t v53 = v43 + 1;
          uint64_t v45 = *(_DWORD **)(a1 + 112);
          if (v45 && (uint64_t v46 = *(int *)(a1 + 104), (int)v46 < *v45))
          {
            *(_DWORD *)(a1 + 104) = v46 + 1;
            uint64_t v47 = *(void *)&v45[2 * v46 + 2];
          }
          else
          {
            uint64_t v48 = sub_11D078C(*(void *)(a1 + 96));
            uint64_t v47 = sub_188CDC8(a1 + 96, v48);
            uint64_t v44 = *(unsigned __int8 **)v53;
          }
          uint64_t v43 = (unsigned __int8 *)sub_11C1DDC(a3, v47, v44);
          *(void *)unint64_t v53 = v43;
          if (!v43) {
            goto LABEL_91;
          }
          if (*(void *)a3 <= (unint64_t)v43 || *v43 != 74) {
            goto LABEL_84;
          }
        }
      default:
LABEL_76:
        if (v9) {
          BOOL v49 = (v9 & 7) == 4;
        }
        else {
          BOOL v49 = 1;
        }
        if (!v49)
        {
          if (*v7)
          {
            int v50 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v53;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v50, (char *)v8, a3);
LABEL_83:
          *(void *)unint64_t v53 = v18;
          if (!v18) {
            goto LABEL_91;
          }
LABEL_84:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_91:
        }
          *(void *)unint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v53;
    }
  }
}

char *sub_11C1B0C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C2C6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11C1B9C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C48A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11C1C2C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C4E58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C1CBC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C5834(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11C1D4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11CEF54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11C1DDC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C9E20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C1E6C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 152);
    char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_22;
    }
    goto LABEL_16;
  }
LABEL_10:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 128);
  char *v4 = 26;
  unsigned int v9 = *(_DWORD *)(v8 + 44);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  uint64_t v4 = sub_15B43E4(v8, v10, a3);
  if ((v6 & 4) != 0)
  {
LABEL_16:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 136);
    char *v4 = 34;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    uint64_t v4 = sub_11C320C(v11, (unint64_t)v13, a3);
  }
LABEL_22:
  int v14 = *(_DWORD *)(a1 + 32);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 42;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_11C4A3C(v16, v18, a3);
    }
  }
  int v19 = *(_DWORD *)(a1 + 56);
  if (v19)
  {
    for (int j = 0; j != v19; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 50;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        int v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        int v23 = v4 + 2;
      }
      uint64_t v4 = sub_11C5190(v21, v23, a3);
    }
  }
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int k = 0; k != v24; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 58;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        uint64_t v28 = v4 + 2;
      }
      uint64_t v4 = sub_11C5D10(v26, (unint64_t)v28, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v29 = *(void *)(a1 + 144);
    char *v4 = 66;
    unsigned int v30 = *(_DWORD *)(v29 + 20);
    v4[1] = v30;
    if (v30 > 0x7F) {
      uint64_t v31 = sub_188A9CC(v30, v4 + 1);
    }
    else {
      uint64_t v31 = v4 + 2;
    }
    uint64_t v4 = sub_11CF588(v29, v31, a3);
  }
  int v32 = *(_DWORD *)(a1 + 104);
  if (v32)
  {
    for (int m = 0; m != v32; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v34 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      char *v4 = 74;
      unsigned int v35 = *(_DWORD *)(v34 + 20);
      v4[1] = v35;
      if (v35 > 0x7F) {
        uint64_t v36 = sub_188A9CC(v35, v4 + 1);
      }
      else {
        uint64_t v36 = v4 + 2;
      }
      uint64_t v4 = sub_11CA190(v34, (unint64_t)v36, a3);
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_11C22D4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11C4B40(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11C533C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_11C6080(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_11CA3B8(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if ((v29 & 0x1F) != 0)
  {
    if (v29)
    {
      unint64_t v33 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v34 = *(unsigned __int8 *)(v33 + 23);
      uint64_t v35 = *(void *)(v33 + 8);
      if ((v34 & 0x80u) == 0) {
        uint64_t v35 = v34;
      }
      v23 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v29 & 2) == 0)
      {
LABEL_30:
        if ((v29 & 4) == 0) {
          goto LABEL_31;
        }
        goto LABEL_41;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_30;
    }
    uint64_t v36 = sub_15B4924(*(void *)(a1 + 128));
    v23 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 4) == 0)
    {
LABEL_31:
      if ((v29 & 8) == 0) {
        goto LABEL_33;
      }
      goto LABEL_32;
    }
LABEL_41:
    uint64_t v37 = sub_11C3754(*(void *)(a1 + 136));
    v23 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 8) == 0)
    {
LABEL_33:
      if ((v29 & 0x10) != 0) {
        v23 += 2;
      }
      goto LABEL_35;
    }
LABEL_32:
    uint64_t v30 = sub_11CF93C(*(void *)(a1 + 144));
    v23 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_33;
  }
LABEL_35:
  uint64_t v31 = *(void *)(a1 + 8);
  if (v31)
  {
    unint64_t v38 = v31 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v38 + 31) < 0) {
      uint64_t v39 = *(void *)(v38 + 16);
    }
    else {
      uint64_t v39 = *(unsigned __int8 *)(v38 + 31);
    }
    v23 += v39;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_11C2570(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_10E4FFC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_10E4FFC((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_10E4FFC((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x3F) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_25;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
LABEL_25:
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_27;
    }
LABEL_26:
    *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0)
      {
LABEL_18:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_19;
      }
LABEL_17:
      *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
      goto LABEL_18;
    }
LABEL_27:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v19 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11C2780(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD620((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_11DD508((std::string *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_11DD6AC((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_11DC764((std::string *)(a1 + 120), v26, v25, v24, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v27 = *(_DWORD *)(a1 + 128) + v24;
    *(_DWORD *)(a1 + 128) = v27;
    uint64_t v28 = *(int **)(a1 + 136);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    char v29 = *(unsigned char *)(a2 + 144);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(unsigned char *)(a1 + 144) = v29;
  }
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11C29FC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_13BB038(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_11C2A6C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 2) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(v5 + 32));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

BOOL sub_11C2ADC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_15B0F18(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_15B0F18(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v8 = (int)v10 < 1;
    if ((int)v10 < 1) {
      break;
    }
    uint64_t v11 = v10 - 1;
    char v12 = sub_15B0F18(*(void *)(*(void *)(a1 + 88) + 8 * v10));
    uint64_t v10 = v11;
  }
  while ((v12 & 1) != 0);
  return v8;
}

uint64_t sub_11C2B84(uint64_t a1)
{
  return sub_11CFB40(a1 + 24);
}

void *sub_11C2B8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.NavigationFeedbackDirectionsEvent");
}

void *sub_11C2B9C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB7D4(a1 + 9);
  sub_11DB7D4(a1 + 6);
  sub_11DB7D4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C2C34(void *a1)
{
  sub_11C2B9C(a1);

  operator delete();
}

char *sub_11C2C6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v57 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v57, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    BOOL v8 = v57 + 1;
    unsigned int v9 = *v57;
    if (*v57 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        BOOL v8 = (char *)sub_188C180((uint64_t)v57, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        BOOL v8 = v57 + 2;
      }
    }
    unint64_t v57 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_69;
        }
        v5 |= 1u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          unint64_t v57 = v13;
          *(_DWORD *)(a1 + 96) = v12;
          goto LABEL_86;
        }
        BOOL v49 = (char *)sub_188C138((uint64_t)v8, v12);
        unint64_t v57 = v49;
        *(_DWORD *)(a1 + 96) = v50;
        if (v49) {
          goto LABEL_86;
        }
        goto LABEL_99;
      case 2u:
        if (v9 != 16) {
          goto LABEL_69;
        }
        v5 |= 2u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v51 = (char *)sub_188C138((uint64_t)v8, v15);
          unint64_t v57 = v51;
          *(_DWORD *)(a1 + 100) = v52;
          if (!v51) {
            goto LABEL_99;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          unint64_t v57 = v16;
          *(_DWORD *)(a1 + 100) = v15;
        }
        goto LABEL_86;
      case 3u:
        if (v9 != 24) {
          goto LABEL_69;
        }
        uint64_t v18 = v8 + 1;
        LODWORD(v19) = *v8;
        if (*v8 < 0)
        {
          uint64_t v19 = v19 + (*v18 << 7) - 128;
          if (*v18 < 0) {
            uint64_t v18 = (char *)sub_188C138((uint64_t)v8, v19);
          }
          else {
            uint64_t v18 = v8 + 2;
          }
        }
        v5 |= 4u;
        unint64_t v57 = v18;
        *(_DWORD *)(a1 + 104) = -(v19 & 1) ^ (v19 >> 1);
        if (!v18) {
          goto LABEL_99;
        }
        goto LABEL_86;
      case 4u:
        if (v9 != 32) {
          goto LABEL_69;
        }
        uint64_t v20 = v8 + 1;
        LODWORD(v21) = *v8;
        if (*v8 < 0)
        {
          uint64_t v21 = v21 + (*v20 << 7) - 128;
          if (*v20 < 0) {
            uint64_t v20 = (char *)sub_188C138((uint64_t)v8, v21);
          }
          else {
            uint64_t v20 = v8 + 2;
          }
        }
        v5 |= 8u;
        unint64_t v57 = v20;
        *(_DWORD *)(a1 + 108) = -(v21 & 1) ^ (v21 >> 1);
        if (v20) {
          goto LABEL_86;
        }
        goto LABEL_99;
      case 5u:
        if (v9 != 40) {
          goto LABEL_69;
        }
        int v22 = v8 + 1;
        unint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          unint64_t v57 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
          if (!v57) {
            goto LABEL_99;
          }
          unint64_t v23 = v53;
        }
        else
        {
          int v22 = v8 + 2;
LABEL_31:
          unint64_t v57 = v22;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 112) = v23;
        }
        else
        {
          if (*v7) {
            uint64_t v56 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v56 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v23, v56);
        }
        goto LABEL_86;
      case 6u:
        if (v9 != 48) {
          goto LABEL_69;
        }
        v5 |= 0x20u;
        int v27 = v8 + 1;
        LODWORD(v26) = *v8;
        if ((v26 & 0x80) == 0) {
          goto LABEL_38;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v54 = (char *)sub_188C138((uint64_t)v8, v26);
          unint64_t v57 = v54;
          *(_DWORD *)(a1 + 116) = v55;
          if (!v54) {
            goto LABEL_99;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          unint64_t v57 = v27;
          *(_DWORD *)(a1 + 116) = v26;
        }
        goto LABEL_86;
      case 7u:
        if (v9 != 58) {
          goto LABEL_69;
        }
        char v29 = v8 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          unint64_t v57 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 40);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 32), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 32) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_15C1918(*(void *)(a1 + 24));
            uint64_t v33 = sub_188CDC8(a1 + 24, v34);
            uint64_t v30 = (unsigned __int8 *)v57;
          }
          char v29 = sub_1198F14(a3, v33, v30);
          unint64_t v57 = v29;
          if (!v29) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 58) {
            goto LABEL_86;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_69;
        }
        uint64_t v35 = v8 - 1;
        while (1)
        {
          uint64_t v36 = (unsigned __int8 *)(v35 + 1);
          unint64_t v57 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 64);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 56), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 56) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            uint64_t v40 = sub_15C1918(*(void *)(a1 + 48));
            uint64_t v39 = sub_188CDC8(a1 + 48, v40);
            uint64_t v36 = (unsigned __int8 *)v57;
          }
          uint64_t v35 = sub_1198F14(a3, v39, v36);
          unint64_t v57 = v35;
          if (!v35) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 66) {
            goto LABEL_86;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_69;
        }
        uint64_t v41 = v8 - 1;
        while (1)
        {
          uint64_t v42 = (unsigned __int8 *)(v41 + 1);
          unint64_t v57 = v41 + 1;
          uint64_t v43 = *(_DWORD **)(a1 + 88);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 80), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 80) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            uint64_t v46 = sub_15C1918(*(void *)(a1 + 72));
            uint64_t v45 = sub_188CDC8(a1 + 72, v46);
            uint64_t v42 = (unsigned __int8 *)v57;
          }
          uint64_t v41 = sub_1198F14(a3, v45, v42);
          unint64_t v57 = v41;
          if (!v41) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v41 || *v41 != 74) {
            goto LABEL_86;
          }
        }
      default:
LABEL_69:
        if (v9) {
          BOOL v47 = (v9 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (*v7)
          {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            BOOL v8 = v57;
          }
          unint64_t v57 = (char *)sub_1885AC0(v9, v48, v8, a3);
          if (!v57) {
            goto LABEL_99;
          }
LABEL_86:
          if (sub_11947B8((uint64_t)a3, &v57, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_99:
        }
          unint64_t v57 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v57;
    }
  }
}

char *sub_11C320C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 100);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v13 = *(_DWORD *)(a1 + 104);
    char *v4 = 24;
    unsigned int v14 = (2 * v13) ^ (v13 >> 31);
    v4[1] = (2 * v13) ^ (v13 >> 31);
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v17 = *(_DWORD *)(a1 + 108);
    char *v4 = 32;
    unsigned int v18 = (2 * v17) ^ (v17 >> 31);
    v4[1] = (2 * v17) ^ (v17 >> 31);
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 112);
    char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 116);
    char *v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v27 = *(_DWORD *)(a1 + 32);
  if (v27)
  {
    for (int i = 0; i != v27; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 58;
      unsigned int v30 = *(_DWORD *)(v29 + 44);
      v4[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        uint64_t v31 = v4 + 2;
      }
      char v4 = sub_15B0C0C(v29, v31, a3);
    }
  }
  int v32 = *(_DWORD *)(a1 + 56);
  if (v32)
  {
    for (int j = 0; j != v32; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v34 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 66;
      unsigned int v35 = *(_DWORD *)(v34 + 44);
      v4[1] = v35;
      if (v35 > 0x7F) {
        uint64_t v36 = sub_188A9CC(v35, v4 + 1);
      }
      else {
        uint64_t v36 = v4 + 2;
      }
      char v4 = sub_15B0C0C(v34, v36, a3);
    }
  }
  int v37 = *(_DWORD *)(a1 + 80);
  if (v37)
  {
    for (int k = 0; k != v37; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 74;
      unsigned int v40 = *(_DWORD *)(v39 + 44);
      v4[1] = v40;
      if (v40 > 0x7F) {
        uint64_t v41 = sub_188A9CC(v40, v4 + 1);
      }
      else {
        uint64_t v41 = v4 + 2;
      }
      char v4 = sub_15B0C0C(v39, v41, a3);
    }
  }
  uint64_t v42 = *(void *)(a1 + 8);
  if ((v42 & 1) == 0) {
    return v4;
  }
  unint64_t v44 = v42 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v44 + 31) < 0)
  {
    uint64_t v45 = *(void **)(v44 + 8);
    uint64_t v46 = *(void *)(v44 + 16);
  }
  else
  {
    uint64_t v45 = (void *)(v44 + 8);
    LODWORD(v46) = *(unsigned __int8 *)(v44 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v46)
  {
    uint64_t v47 = (int)v46;
    memcpy(v4, v45, (int)v46);
    v4 += v47;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v45, v46, v4);
}

uint64_t sub_11C3754(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_15B0D90(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_15B0D90(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x3F) == 0) {
    goto LABEL_32;
  }
  if (v22)
  {
    int v28 = *(_DWORD *)(a1 + 96);
    uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v28 >= 0) {
      uint64_t v30 = v29;
    }
    else {
      uint64_t v30 = 11;
    }
    v16 += v30;
    if ((v22 & 2) == 0)
    {
LABEL_24:
      if ((v22 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_42;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_24;
  }
  int v31 = *(_DWORD *)(a1 + 100);
  uint64_t v32 = ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v31 >= 0) {
    uint64_t v33 = v32;
  }
  else {
    uint64_t v33 = 11;
  }
  v16 += v33;
  if ((v22 & 4) == 0)
  {
LABEL_25:
    if ((v22 & 8) == 0) {
      goto LABEL_26;
    }
LABEL_43:
    v16 += ((9 * (__clz((2 * *(_DWORD *)(a1 + 108)) ^ (*(int *)(a1 + 108) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 0x10) == 0)
    {
LABEL_27:
      if ((v22 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
    goto LABEL_44;
  }
LABEL_42:
  v16 += ((9 * (__clz((2 * *(_DWORD *)(a1 + 104)) ^ (*(int *)(a1 + 104) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 8) != 0) {
    goto LABEL_43;
  }
LABEL_26:
  if ((v22 & 0x10) == 0) {
    goto LABEL_27;
  }
LABEL_44:
  int v34 = *(_DWORD *)(a1 + 112);
  uint64_t v35 = ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v34 >= 0) {
    uint64_t v36 = v35;
  }
  else {
    uint64_t v36 = 11;
  }
  v16 += v36;
  if ((v22 & 0x20) != 0)
  {
LABEL_28:
    int v23 = *(_DWORD *)(a1 + 116);
    uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v23 >= 0) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 11;
    }
    v16 += v25;
  }
LABEL_32:
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v37 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    v16 += v38;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void *sub_11C39F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.NavigationFeedbackRerouteContext");
}

uint64_t sub_11C3A08(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252D098)
  {
    uint64_t v5 = *(void **)(a1 + 120);
    if (v5)
    {
      sub_11CEE70(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 128);
    if (v6)
    {
      sub_11CFBC0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_11DCD44((void *)(a1 + 96));
  sub_11DCCC4((void *)(a1 + 72));
  sub_11DCC44((void *)(a1 + 48));
  sub_11DCBC4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C3B08(uint64_t a1)
{
  sub_11C3A08(a1);

  operator delete();
}

uint64_t sub_11C3B40(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11C3B58(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v48 + 2;
      }
    }
    uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 2u:
        if (v9 != 18) {
          goto LABEL_66;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v48 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11D022C(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            uint64_t v13 = (unsigned __int8 *)v48;
          }
          uint64_t v12 = (char *)sub_11C1B9C(a3, v16, v13);
          uint64_t v48 = v12;
          if (!v12) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_74;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_66;
        }
        unsigned int v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          uint64_t v48 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            int v23 = sub_11D02B4(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
            uint64_t v19 = (unsigned __int8 *)v48;
          }
          unsigned int v18 = (char *)sub_11C1C2C(a3, v22, v19);
          uint64_t v48 = v18;
          if (!v18) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 26) {
            goto LABEL_74;
          }
        }
      case 4u:
        if (v9 != 32) {
          goto LABEL_66;
        }
        v5 |= 4u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v46 = (char *)sub_188C0D0((uint64_t)v8, v25);
          uint64_t v48 = v46;
          *(_DWORD *)(a1 + 136) = v47;
          if (!v46) {
            goto LABEL_81;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v48 = v24;
          *(_DWORD *)(a1 + 136) = v25;
        }
        goto LABEL_74;
      case 5u:
        if (v9 != 42) {
          goto LABEL_66;
        }
        int v27 = v8 - 1;
        while (1)
        {
          int v28 = (unsigned __int8 *)(v27 + 1);
          uint64_t v48 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_11D033C(*(void *)(a1 + 72));
            uint64_t v31 = sub_188CDC8(a1 + 72, v32);
            int v28 = (unsigned __int8 *)v48;
          }
          int v27 = sub_11C1CBC(a3, v31, v28);
          uint64_t v48 = v27;
          if (!v27) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 42) {
            goto LABEL_74;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v33 = *(void *)(a1 + 120);
        if (!v33)
        {
          int v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v34 = (void *)*v34;
          }
          uint64_t v33 = sub_11D0C24((uint64_t)v34);
          *(void *)(a1 + 120) = v33;
          uint64_t v8 = v48;
        }
        uint64_t v35 = (char *)sub_11C1D4C(a3, v33, (unsigned __int8 *)v8);
        goto LABEL_73;
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        uint64_t v36 = v8 - 1;
        while (1)
        {
          unint64_t v37 = (unsigned __int8 *)(v36 + 1);
          uint64_t v48 = v36 + 1;
          uint64_t v38 = *(_DWORD **)(a1 + 112);
          if (v38 && (uint64_t v39 = *(int *)(a1 + 104), (int)v39 < *v38))
          {
            *(_DWORD *)(a1 + 104) = v39 + 1;
            uint64_t v40 = *(void *)&v38[2 * v39 + 2];
          }
          else
          {
            uint64_t v41 = sub_11D078C(*(void *)(a1 + 96));
            uint64_t v40 = sub_188CDC8(a1 + 96, v41);
            unint64_t v37 = (unsigned __int8 *)v48;
          }
          uint64_t v36 = (char *)sub_11C1DDC(a3, v40, v37);
          uint64_t v48 = v36;
          if (!v36) {
            goto LABEL_81;
          }
          if (*(void *)a3 <= (unint64_t)v36 || *v36 != 58) {
            goto LABEL_74;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v42 = *(void *)(a1 + 128);
        if (!v42)
        {
          uint64_t v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v43 = (void *)*v43;
          }
          uint64_t v42 = sub_11D0CE4((uint64_t)v43);
          *(void *)(a1 + 128) = v42;
          uint64_t v8 = v48;
        }
        uint64_t v35 = sub_11C4018(a3, v42, (unsigned __int8 *)v8);
        goto LABEL_73;
      default:
LABEL_66:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v7)
          {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v48;
          }
          uint64_t v35 = (char *)sub_1885AC0(v9, v45, v8, a3);
LABEL_73:
          uint64_t v48 = v35;
          if (!v35) {
            goto LABEL_81;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_81:
        }
          uint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

char *sub_11C4018(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11CFC6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C40A8(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11C4A3C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_11C5190(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v17 = *(_DWORD *)(a1 + 136);
    *__dst = 32;
    __dst[1] = v17;
    if (v17 > 0x7F)
    {
      __dst[1] = v17 | 0x80;
      unsigned int v18 = v17 >> 7;
      __dst[2] = v17 >> 7;
      __dst += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v19 = v18 >> 14;
          v18 >>= 7;
          *__dst++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 42;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      __dst[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, __dst + 1);
      }
      else {
        uint64_t v24 = __dst + 2;
      }
      __dst = sub_11C5D10(v22, (unint64_t)v24, a3);
    }
  }
  if (v16)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v25 = *(void *)(a1 + 120);
    *__dst = 50;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    __dst[1] = v26;
    if (v26 > 0x7F) {
      int v27 = sub_188A9CC(v26, __dst + 1);
    }
    else {
      int v27 = __dst + 2;
    }
    __dst = sub_11CF588(v25, v27, a3);
  }
  int v28 = *(_DWORD *)(a1 + 104);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *__dst = 58;
      unsigned int v31 = *(_DWORD *)(v30 + 20);
      __dst[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, __dst + 1);
      }
      else {
        uint64_t v32 = __dst + 2;
      }
      __dst = sub_11CA190(v30, (unint64_t)v32, a3);
    }
  }
  if ((v16 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v33 = *(void *)(a1 + 128);
    *__dst = 66;
    unsigned int v34 = *(_DWORD *)(v33 + 20);
    __dst[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, __dst + 1);
    }
    else {
      uint64_t v35 = __dst + 2;
    }
    __dst = (char *)sub_11CFDAC(v33, (unint64_t)v35, a3);
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return __dst;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    uint64_t v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    uint64_t v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(__dst, v39, (int)v40);
    __dst += v41;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v39, v40, __dst);
}

uint64_t sub_11C44C0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11C4B40(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11C533C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_11C6080(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_11CA3B8(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if ((v29 & 7) != 0)
  {
    if (v29)
    {
      uint64_t v32 = sub_11CF93C(*(void *)(a1 + 120));
      v23 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v29 & 2) == 0)
      {
LABEL_30:
        if ((v29 & 4) == 0) {
          goto LABEL_32;
        }
        goto LABEL_31;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_30;
    }
    uint64_t v33 = *(void *)(a1 + 128);
    uint64_t v34 = 5;
    if ((*(unsigned char *)(v33 + 16) & 1) == 0) {
      uint64_t v34 = 0;
    }
    uint64_t v35 = *(void *)(v33 + 8);
    if (v35)
    {
      unint64_t v38 = v35 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v38 + 31) < 0) {
        uint64_t v39 = *(void *)(v38 + 16);
      }
      else {
        uint64_t v39 = *(unsigned __int8 *)(v38 + 31);
      }
      v34 += v39;
    }
    *(_DWORD *)(v33 + 20) = v34;
    v23 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 4) != 0) {
LABEL_31:
    }
      v23 += ((9 * (__clz(*(_DWORD *)(a1 + 136) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_32:
  uint64_t v30 = *(void *)(a1 + 8);
  if (v30)
  {
    unint64_t v36 = v30 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v36 + 31) < 0) {
      uint64_t v37 = *(void *)(v36 + 16);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 31);
    }
    v23 += v37;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

std::string *sub_11C4738(std::string *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    int v2 = *(_DWORD *)(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(result[1].__r_.__value_.__l.__data_) = v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void *sub_11C4770@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.NavigationFeedbackETAUpdateEvent");
}

uint64_t sub_11C4780(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C4820(uint64_t a1)
{
  sub_11C4780(a1);

  operator delete();
}

uint64_t sub_11C4858(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11C48A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 21)
  {
    v5 |= 2u;
    *(_DWORD *)(a1 + 32) = *(_DWORD *)v7;
    *(void *)uint64_t v19 = v7 + 4;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v19;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_11C4A3C(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 21;
    *(_DWORD *)(v4 + 1) = v7;
    v4 += 5;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_11C4B40(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 5;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_11C4BE0()
{
  return 1;
}

void *sub_11C4BE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.TrafficSnapshotId");
}

uint64_t sub_11C4BF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252D128)
  {
    if (*(void *)(a1 + 32))
    {
      sub_1397630();
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 40);
    if (v6)
    {
      sub_11C6D80(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C4CE4(uint64_t a1)
{
  sub_11C4BF8(a1);

  operator delete();
}

uint64_t sub_11C4D1C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_139766C(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_11C4DC8(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_11C4DC8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11C779C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 7) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_11C4E58(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 6)
    {
      if (v8 != 50) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void *)(a1 + 40);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_11D045C((uint64_t)v17);
        *(void *)(a1 + 40) = v16;
        uint64_t v7 = *(unsigned __int8 **)v23;
      }
      uint64_t v15 = sub_11C5100(a3, v16, v7);
      goto LABEL_36;
    }
    if (v11 != 4) {
      break;
    }
    if (v8 != 34) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_13D84A8((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_11C5070(a3, v18, v7);
LABEL_36:
    *(void *)uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_42;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      return *(void *)v23;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 24), v21);
    uint64_t v15 = (void *)sub_188C244(v22, *(char **)v23, (uint64_t)a3);
    goto LABEL_36;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_36;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v23;
  }
LABEL_42:
  *(void *)uint64_t v23 = 0;
  return *(void *)v23;
}

char *sub_11C5070(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1397694(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C5100(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C6E38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11C5190(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 32);
  unsigned char *v4 = 34;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_13979CC(v7, (unint64_t)v9, a3);
  if ((v6 & 4) != 0)
  {
LABEL_12:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 40);
    unsigned char *v4 = 50;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_11C721C(v10, (unint64_t)v12, a3);
  }
LABEL_18:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11C533C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_1397CE4(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_11C74D8(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_11C5458(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_25;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(std::string **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = (std::string *)sub_13D84A8((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2535340;
  }
  sub_118D9C0(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_17:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_11D045C((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_252D1C8;
    }
    sub_11C559C(v13, (uint64_t)v16);
  }
LABEL_25:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11C559C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD364((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11C56B4()
{
  return 1;
}

void *sub_11C56BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.AnalyticsETA");
}

uint64_t sub_11C56CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252D158 && *(void *)(a1 + 40))
  {
    sub_13B95DC();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C578C(uint64_t a1)
{
  sub_11C56CC(a1);

  operator delete();
}

uint64_t sub_11C57C4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_13B9618(*(void *)(result + 40));
  }
  if ((v2 & 0x7E) != 0)
  {
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11C5834(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v52 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v52, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (unsigned int *)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (2)
  {
    int v9 = v52 + 1;
    unsigned int v10 = *v52;
    if (*v52 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180((uint64_t)v52, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = v52 + 2;
      }
    }
    int v52 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_67;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 40);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v13 = sub_13D9608((uint64_t)v14);
          *(void *)(a1 + 40) = v13;
          int v9 = v52;
        }
        unint64_t v15 = (char *)sub_11AB844(a3, v13, (unsigned __int8 *)v9);
        goto LABEL_74;
      case 2u:
        if (v10 != 16) {
          goto LABEL_67;
        }
        v5 |= 2u;
        uint64_t v16 = v9 + 1;
        uint64_t v17 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unint64_t v38 = (char *)sub_188C138((uint64_t)v9, v17);
          int v52 = v38;
          *(unsigned char *)(a1 + 48) = v39 != 0;
          if (!v38) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v16 = v9 + 2;
LABEL_19:
          int v52 = v16;
          *(unsigned char *)(a1 + 48) = v17 != 0;
        }
        goto LABEL_75;
      case 3u:
        if (v10 != 24) {
          goto LABEL_67;
        }
        v5 |= 4u;
        uint64_t v19 = v9 + 1;
        uint64_t v20 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v40 = (char *)sub_188C138((uint64_t)v9, v20);
          int v52 = v40;
          *(unsigned char *)(a1 + 49) = v41 != 0;
          if (!v40) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v19 = v9 + 2;
LABEL_24:
          int v52 = v19;
          *(unsigned char *)(a1 + 49) = v20 != 0;
        }
        goto LABEL_75;
      case 4u:
        if (v10 != 32) {
          goto LABEL_67;
        }
        v5 |= 8u;
        uint64_t v22 = v9 + 1;
        uint64_t v23 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v42 = (char *)sub_188C138((uint64_t)v9, v23);
          int v52 = v42;
          *(unsigned char *)(a1 + 50) = v43 != 0;
          if (!v42) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v22 = v9 + 2;
LABEL_29:
          int v52 = v22;
          *(unsigned char *)(a1 + 50) = v23 != 0;
        }
        goto LABEL_75;
      case 5u:
        if (v10 != 40) {
          goto LABEL_67;
        }
        v5 |= 0x10u;
        uint64_t v25 = v9 + 1;
        uint64_t v26 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          BOOL v44 = (char *)sub_188C138((uint64_t)v9, v26);
          int v52 = v44;
          *(unsigned char *)(a1 + 51) = v45 != 0;
          if (!v44) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v25 = v9 + 2;
LABEL_34:
          int v52 = v25;
          *(unsigned char *)(a1 + 51) = v26 != 0;
        }
        goto LABEL_75;
      case 6u:
        if (v10 == 49)
        {
          uint64_t v28 = v9 - 1;
          unsigned int v29 = *v7;
          do
          {
            uint64_t v30 = v28 + 1;
            int v52 = v28 + 1;
            uint64_t v31 = *(void *)(v28 + 1);
            if (v29 == *(_DWORD *)(a1 + 28))
            {
              sub_188CA54((unsigned int *)(a1 + 24), v29 + 1);
              *(void *)(*(void *)(a1 + 32) + 8 * v29) = v31;
              uint64_t v30 = v52;
            }
            else
            {
              *(void *)(*(void *)(a1 + 32) + 8 * v29) = v31;
            }
            unsigned int *v7 = ++v29;
            uint64_t v28 = v30 + 8;
            int v52 = v30 + 8;
          }
          while (*(void *)a3 > (unint64_t)(v30 + 8) && *v28 == 49);
LABEL_75:
          if (sub_11947B8((uint64_t)a3, &v52, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v10 == 50)
        {
          unint64_t v15 = (char *)sub_188C3D4(a1 + 24, v9, a3);
          goto LABEL_74;
        }
LABEL_67:
        if (v10) {
          BOOL v50 = (v10 & 7) == 4;
        }
        else {
          BOOL v50 = 1;
        }
        if (!v50)
        {
          if (*v8)
          {
            uint64_t v51 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = v52;
          }
          unint64_t v15 = (char *)sub_1885AC0(v10, v51, v9, a3);
LABEL_74:
          int v52 = v15;
          if (!v15) {
            goto LABEL_80;
          }
          goto LABEL_75;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_80:
        }
          int v52 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v52;
      case 7u:
        if (v10 != 56) {
          goto LABEL_67;
        }
        v5 |= 0x20u;
        uint64_t v32 = v9 + 1;
        int v33 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v34 = *v32;
        int v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v46 = (char *)sub_188C0D0((uint64_t)v9, v33);
          int v52 = v46;
          *(_DWORD *)(a1 + 52) = v47;
          if (!v46) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v32 = v9 + 2;
LABEL_47:
          int v52 = v32;
          *(_DWORD *)(a1 + 52) = v33;
        }
        goto LABEL_75;
      case 8u:
        if (v10 != 64) {
          goto LABEL_67;
        }
        v5 |= 0x40u;
        uint64_t v35 = v9 + 1;
        int v36 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v37 = *v35;
        int v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v48 = (char *)sub_188C0D0((uint64_t)v9, v36);
          int v52 = v48;
          *(_DWORD *)(a1 + 56) = v49;
          if (!v48) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v35 = v9 + 2;
LABEL_52:
          int v52 = v35;
          *(_DWORD *)(a1 + 56) = v36;
        }
        goto LABEL_75;
      default:
        goto LABEL_67;
    }
  }
}

unsigned char *sub_11C5D10(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    char v4 = sub_13BA104(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 48);
  unsigned char *v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 49);
  unsigned char *v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 50);
  unsigned char *v4 = 32;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_22:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 51);
    unsigned char *v4 = 40;
    v4[1] = v13;
    v4 += 2;
  }
LABEL_25:
  uint64_t v14 = *(unsigned int *)(a1 + 24);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8 * v14;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 32) + v15);
      unsigned char *v4 = 49;
      *(void *)(v4 + 1) = v17;
      v4 += 9;
      v15 += 8;
    }
    while (v16 != v15);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 56;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 64;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_11C6080(uint64_t a1)
{
  uint64_t v2 = 9 * *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x7F) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_13BA868(*(void *)(a1 + 40));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v5 = v2 + 2;
    if ((v3 & 2) == 0) {
      uint64_t v5 = v2;
    }
    if ((v3 & 4) != 0) {
      v5 += 2;
    }
    if ((v3 & 8) != 0) {
      v5 += 2;
    }
    if ((v3 & 0x10) != 0) {
      uint64_t v2 = v5 + 2;
    }
    else {
      uint64_t v2 = v5;
    }
    if ((v3 & 0x20) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 0x40) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11C61A0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0x7F) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        char v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          char v12 = (void *)*v12;
        }
        uint64_t v10 = sub_13D9608((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        char v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        char v13 = &off_2535FC8;
      }
      sub_13BAC58(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_26;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
      goto LABEL_12;
    }
LABEL_29:
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v8 & 0x40) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11C630C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_13BB038(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11C6338@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.ClosureInformation");
}

void *sub_11C6348(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C63BC(void *a1)
{
  sub_11C6348(a1);

  operator delete();
}

uint64_t sub_11C63F4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11C641C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v44 + 1;
    unsigned int v9 = *v44;
    if (*v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v44 + 2;
      }
    }
    BOOL v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_39;
        }
        v5 |= 1u;
        char v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          char v12 = v8 + 2;
LABEL_13:
          BOOL v44 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_46;
        }
        uint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v13);
        BOOL v44 = v32;
        *(_DWORD *)(a1 + 24) = v33;
        if (v32) {
          goto LABEL_46;
        }
        goto LABEL_63;
      case 2u:
        if (v9 != 16) {
          goto LABEL_39;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v34 = (char *)sub_188C0D0((uint64_t)v8, v16);
          BOOL v44 = v34;
          *(_DWORD *)(a1 + 28) = v35;
          if (!v34) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          BOOL v44 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 4u;
        unsigned int v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v36 = (char *)sub_188C0D0((uint64_t)v8, v19);
          BOOL v44 = v36;
          *(_DWORD *)(a1 + 32) = v37;
          if (!v36) {
            goto LABEL_63;
          }
        }
        else
        {
          unsigned int v18 = v8 + 2;
LABEL_23:
          BOOL v44 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_39;
        }
        v5 |= 8u;
        unsigned int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unint64_t v38 = (char *)sub_188C0D0((uint64_t)v8, v22);
          BOOL v44 = v38;
          *(_DWORD *)(a1 + 36) = v39;
          if (!v38) {
            goto LABEL_63;
          }
        }
        else
        {
          unsigned int v21 = v8 + 2;
LABEL_28:
          BOOL v44 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_46;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v40 = (char *)sub_188C0D0((uint64_t)v8, v25);
          BOOL v44 = v40;
          *(_DWORD *)(a1 + 40) = v41;
          if (!v40) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          BOOL v44 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_46;
      case 6u:
        if (v9 != 48) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        int v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v42 = (char *)sub_188C0D0((uint64_t)v8, v28);
          BOOL v44 = v42;
          *(_DWORD *)(a1 + 44) = v43;
          if (!v42) {
            goto LABEL_63;
          }
        }
        else
        {
          int v27 = v8 + 2;
LABEL_38:
          BOOL v44 = v27;
          *(_DWORD *)(a1 + 44) = v28;
        }
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v44;
          }
          BOOL v44 = (char *)sub_1885AC0(v9, v31, v8, a3);
          if (!v44) {
            goto LABEL_63;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          BOOL v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v44;
    }
  }
}

unsigned char *sub_11C67B4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    int v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    int v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_11C6B48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_17:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) != 0) {
LABEL_12:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11C6C9C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_15:
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
LABEL_9:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_10:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11C6D30()
{
  return 1;
}

void *sub_11C6D38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.DecisecondTraversalTimes");
}

double sub_11C6D48(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_2499F80;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  return result;
}

void *sub_11C6D80(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DCDC4(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C6E00(void *a1)
{
  sub_11C6D80(a1);

  operator delete();
}

char *sub_11C6E38(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v36 + 1;
    unsigned int v9 = *v36;
    if (*v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v36 + 2;
      }
    }
    int v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_36;
        }
        v5 |= 1u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          int v36 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_43;
        }
        uint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v36 = v30;
        *(_DWORD *)(a1 + 48) = v31;
        if (v30) {
          goto LABEL_43;
        }
        goto LABEL_58;
      case 2u:
        if (v9 != 16) {
          goto LABEL_36;
        }
        unsigned int v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          int v36 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v36) {
            goto LABEL_58;
          }
          unint64_t v16 = v32;
        }
        else
        {
          unsigned int v15 = v8 + 2;
LABEL_18:
          int v36 = v15;
        }
        if (sub_129EB9C(v16))
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 52) = v16;
        }
        else
        {
          if (*v7) {
            int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v35);
        }
        goto LABEL_43;
      case 3u:
        if (v9 != 24) {
          goto LABEL_36;
        }
        v5 |= 4u;
        unsigned int v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          int v33 = (char *)sub_188C138((uint64_t)v8, v20);
          int v36 = v33;
          *(void *)(a1 + 56) = v34;
          if (!v33) {
            goto LABEL_58;
          }
        }
        else
        {
          unsigned int v19 = v8 + 2;
LABEL_25:
          int v36 = v19;
          *(void *)(a1 + 56) = v20;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 34) {
          goto LABEL_36;
        }
        unsigned int v22 = v8 - 1;
        while (1)
        {
          unsigned int v23 = (unsigned __int8 *)(v22 + 1);
          int v36 = v22 + 1;
          unsigned int v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_11D04F8(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, v27);
            unsigned int v23 = (unsigned __int8 *)v36;
          }
          unsigned int v22 = sub_11C718C(a3, v26, v23);
          int v36 = v22;
          if (!v22) {
            goto LABEL_58;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_43;
          }
        }
      default:
LABEL_36:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v36;
          }
          int v36 = (char *)sub_1885AC0(v9, v29, v8, a3);
          if (!v36) {
            goto LABEL_58;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          int v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v36;
    }
  }
}

char *sub_11C718C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_11C7840(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C721C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 56);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 64);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      int v4 = sub_11C7BA8(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unsigned int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unsigned int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_11C74D8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11C7D70(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    int v11 = *(_DWORD *)(a1 + 52);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
    if ((v8 & 4) != 0) {
LABEL_13:
    }
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v13 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11C7620(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_11C4DC8(a1);
    sub_11C559C(a1, a2);
  }
}

uint64_t sub_11C766C()
{
  return 1;
}

__n128 sub_11C7674(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  __n128 result = *(__n128 *)(a2 + 48);
  *(__n128 *)(a1 + 48) = result;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  return result;
}

void *sub_11C76C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.WaypointRouteTrajectory");
}

void *sub_11C76D8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DCEC4(a1 + 5);
  sub_11DCE44(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C7764(void *a1)
{
  sub_11C76D8(a1);

  operator delete();
}

uint64_t sub_11C779C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_11C80C4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      __n128 result = sub_11C8CF0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  int v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_11C7840(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            unint64_t v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            int v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              unsigned int v19 = sub_11D061C(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              unint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = sub_11C7B18(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          unsigned int v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            sub_11D059C(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = sub_11C7A88(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_11C7A88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  __n128 result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    __n128 result = sub_11C8144(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C7B18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  __n128 result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    __n128 result = sub_11C8D60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11C7BA8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11C8588(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        unint64_t v15 = __dst + 2;
      }
      __dst = sub_11C8F20(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unsigned int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unsigned int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_11C7D70(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11C88F8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11C90A0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_11C7E70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_11DD3F0((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_11DD47C((std::string *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11C7FA4()
{
  return 1;
}

void *sub_11C7FAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.RouteLegTrajectory");
}

uint64_t sub_11C7FBC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252D208)
  {
    if (*(void *)(a1 + 24))
    {
      sub_1397630();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 32);
    if (v5)
    {
      sub_11C6348(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C808C(uint64_t a1)
{
  sub_11C7FBC(a1);

  operator delete();
}

uint64_t sub_11C80C4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      __n128 result = sub_139766C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      __n128 result = sub_11C63F4(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0x7C) != 0)
  {
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 53) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11C8144(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v40 + 1;
    unsigned int v9 = *v40;
    if (*v40 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v40, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v40 + 2;
      }
    }
    uint64_t v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_43;
        }
        v5 |= 4u;
        *(void *)(a1 + 40) = *(void *)v8;
        uint64_t v40 = v8 + 8;
        goto LABEL_51;
      case 2u:
        if (v9 != 18) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_13D84A8((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          uint64_t v8 = v40;
        }
        uint64_t v14 = sub_11C5070(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_50;
      case 3u:
        if (v9 != 24) {
          goto LABEL_43;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          unint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v40 = v32;
          *(_DWORD *)(a1 + 48) = v33;
          if (!v32) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_21:
          uint64_t v40 = v15;
          *(_DWORD *)(a1 + 48) = v16;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_43;
        }
        v5 |= 0x10u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v34 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v40 = v34;
          *(_DWORD *)(a1 + 52) = v35;
          if (!v34) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_26:
          uint64_t v40 = v18;
          *(_DWORD *)(a1 + 52) = v19;
        }
        goto LABEL_51;
      case 5u:
        if (v9 != 40) {
          goto LABEL_43;
        }
        v5 |= 0x20u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v36 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v40 = v36;
          *(_DWORD *)(a1 + 56) = v37;
          if (!v36) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_31:
          uint64_t v40 = v21;
          *(_DWORD *)(a1 + 56) = v22;
        }
        goto LABEL_51;
      case 6u:
        if (v9 != 48) {
          goto LABEL_43;
        }
        v5 |= 0x40u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          unint64_t v38 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v40 = v38;
          *(unsigned char *)(a1 + 60) = v39 != 0;
          if (!v38) {
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_36:
          uint64_t v40 = v24;
          *(unsigned char *)(a1 + 60) = v25 != 0;
        }
        goto LABEL_51;
      case 7u:
        if (v9 != 58) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void *)(a1 + 32);
        if (!v27)
        {
          BOOL v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v28 = (void *)*v28;
          }
          sub_11D03E0((uint64_t)v28);
          uint64_t v27 = v29;
          *(void *)(a1 + 32) = v29;
          uint64_t v8 = v40;
        }
        uint64_t v14 = sub_11C84F8(a3, v27, (unsigned __int8 *)v8);
        goto LABEL_50;
      default:
LABEL_43:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v40;
          }
          uint64_t v14 = (char *)sub_1885AC0(v9, v31, v8, a3);
LABEL_50:
          uint64_t v40 = v14;
          if (!v14) {
            goto LABEL_64;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_64:
        }
          uint64_t v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v40;
    }
  }
}

char *sub_11C84F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  __n128 result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    __n128 result = sub_11C641C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11C8588(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 24);
  unsigned char *v4 = 18;
  unsigned int v9 = *(_DWORD *)(v8 + 20);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  char v4 = sub_13979CC(v8, (unint64_t)v10, a3);
  if ((v6 & 8) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v17 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 40;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unsigned int v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 60);
    unsigned char *v4 = 48;
    v4[1] = v20;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 32);
    unsigned char *v4 = 58;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      int v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      int v23 = v4 + 2;
    }
    char v4 = sub_11C67B4(v21, (unint64_t)v23, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_11C88F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if (v2)
  {
    uint64_t v5 = sub_1397CE4(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_11C6B48(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = v3 + 9;
  if ((v2 & 4) == 0) {
    uint64_t v7 = v3;
  }
  if ((v2 & 8) != 0)
  {
    v7 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x10) == 0)
    {
LABEL_12:
      if ((v2 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_12;
  }
  v7 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0) {
LABEL_13:
  }
    v7 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if ((v2 & 0x40) != 0) {
    uint64_t result = v7 + 2;
  }
  else {
    uint64_t result = v7;
  }
LABEL_17:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11C8A68(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_13D84A8((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2535340;
      }
      uint64_t result = sub_118D9C0(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      sub_11D03E0((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unsigned int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unsigned int v13 = &off_252D198;
    }
    uint64_t result = sub_11C6C9C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_31:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
LABEL_32:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_34;
    }
LABEL_33:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      v3[2].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_34:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11C8BD0()
{
  return 1;
}

void *sub_11C8BD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.TraversedPathlet");
}

uint64_t sub_11C8BE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252D248)
  {
    if (*(void *)(a1 + 24))
    {
      sub_1397630();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 32);
    if (v5)
    {
      sub_11C6348(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C8CB8(uint64_t a1)
{
  sub_11C8BE8(a1);

  operator delete();
}

uint64_t sub_11C8CF0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_139766C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_11C63F4(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11C8D60(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    char v20 = v7;
    if (v8 >> 3 != 7) {
      break;
    }
    if (v8 != 58) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v16 = (void *)*v16;
      }
      sub_11D03E0((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 32) = v17;
      uint64_t v7 = v20;
    }
    unsigned int v14 = sub_11C84F8(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    char v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v18 = *(void *)(a1 + 24);
    if (!v18)
    {
      unsigned int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v19 = (void *)*v19;
      }
      uint64_t v18 = sub_13D84A8((uint64_t)v19);
      *(void *)(a1 + 24) = v18;
      uint64_t v7 = v20;
    }
    unsigned int v14 = sub_11C5070(a3, v18, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    unsigned int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

unsigned char *sub_11C8F20(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_13979CC(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 58;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_11C67B4(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unsigned int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unsigned int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11C90A0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1397CE4(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_11C6B48(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_11C9178(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        std::string::pointer data = (std::string *)sub_13D84A8((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2535340;
      }
      uint64_t result = sub_118D9C0(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        sub_11D03E0((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_252D198;
      }
      uint64_t result = sub_11C6C9C(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11C927C()
{
  return 1;
}

void *sub_11C9284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.PathletTransition");
}

uint64_t sub_11C9294(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252D270)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_11C9848(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C934C(uint64_t a1)
{
  sub_11C9294(a1);

  operator delete();
}

uint64_t sub_11C9384(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v2 = *(void *)(result + 24);
    char v3 = *(unsigned char *)(v2 + 8);
    uint64_t result = v2 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v3) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_11C93F0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11C9408(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  char v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    unsigned int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      unsigned int v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        unsigned int v14 = (void *)*v14;
      }
      uint64_t v13 = sub_11D0710((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    BOOL v12 = sub_11C9560(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    unsigned int v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    BOOL v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_11C9560(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C98F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11C95F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_11C9A98(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    BOOL v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    BOOL v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11C9700(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_11C9BC0(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11C9788(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      std::string::pointer data = (std::string *)sub_11D0710((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_252D290;
    }
    uint64_t result = sub_11A7934(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11C9830()
{
  return 1;
}

void *sub_11C9838@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.RoutingObservation.Payload");
}

void *sub_11C9848(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C98BC(void *a1)
{
  sub_11C9848(a1);

  operator delete();
}

char *sub_11C98F4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  unint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v19 + 2;
      }
    }
    unsigned int v19 = v6;
    if (v7 == 8)
    {
      BOOL v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unsigned int v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          if (v16)
          {
LABEL_25:
            if (*v5) {
              uint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(1, v13, v17);
            goto LABEL_21;
          }
          goto LABEL_20;
        }
        BOOL v12 = v6 + 2;
      }
      unsigned int v19 = v12;
      if (v13) {
        goto LABEL_25;
      }
LABEL_20:
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = 0;
      goto LABEL_21;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v19;
    }
    unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_21:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_11C9A98(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    BOOL v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    BOOL v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11C9BC0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11C9C34()
{
  return 1;
}

void *sub_11C9C3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.RoutingObservation.DangerousManeuversInfo");
}

uint64_t sub_11C9C4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252D2B0)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_11C9294(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11C9D38(uint64_t a1)
{
  sub_11C9C4C(a1);

  operator delete();
}

uint64_t sub_11C9D70(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_11C9384(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_11C9E20(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            BOOL v12 = (void *)*v12;
          }
          uint64_t v11 = sub_15C1918((uint64_t)v12);
          *(void *)(a1 + 32) = v11;
          unint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v13 = sub_1198F14(a3, v11, v7);
        goto LABEL_39;
      case 2u:
        if (v8 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          int v15 = (uint64_t *)*v15;
        }
        unint64_t v16 = (std::string *)sub_1880F84((void *)(a1 + 24), v15);
        uint64_t v13 = (void *)sub_188C244(v16, *(char **)v27, (uint64_t)a3);
        goto LABEL_39;
      case 3u:
        if (v8 != 24) {
          goto LABEL_32;
        }
        uint64_t v17 = (char *)(v7 + 1);
        unint64_t v18 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v27) {
            return 0;
          }
          unint64_t v18 = v25;
        }
        else
        {
          uint64_t v17 = (char *)(v7 + 2);
LABEL_23:
          *(void *)uint64_t v27 = v17;
        }
        if (v18 > 1)
        {
          if (*v6) {
            unint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v18;
        }
        goto LABEL_40;
      case 4u:
        if (v8 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          unsigned int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_11D0698((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          unint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v13 = sub_11CA100(a3, (uint64_t)v21, v7);
        goto LABEL_39;
      default:
LABEL_32:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v6)
          {
            uint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v27;
          }
          uint64_t v13 = sub_1885AC0(v8, v24, (char *)v7, a3);
LABEL_39:
          *(void *)uint64_t v27 = v13;
          if (!v13) {
            return 0;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

char *sub_11CA100(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11C9408(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11CA190(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 48);
  char *v4 = 24;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_18:
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_11C95F0(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_11CA3B8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_11C9700(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v9 = *(_DWORD *)(a1 + 48);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_11CA510(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(std::string **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_11D0698((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_252D270;
    }
    sub_11C9788(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11CA670(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11CA69C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.RoutingObservation");
}

uint64_t sub_11CA6AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252D2E8 && *(void *)(a1 + 24))
  {
    sub_1397630();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CA764(uint64_t a1)
{
  sub_11CA6AC(a1);

  operator delete();
}

uint64_t sub_11CA79C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_139766C(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11CA804(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4)
    {
      if (v9 != 32) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v17 = v8 + 1;
      int v18 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v19 = *v17;
      int v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        uint64_t v17 = v8 + 2;
LABEL_25:
        uint64_t v29 = v17;
        *(_DWORD *)(a1 + 36) = v18;
        goto LABEL_37;
      }
      unint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v18);
      uint64_t v29 = v25;
      *(_DWORD *)(a1 + 36) = v26;
      if (!v25) {
        goto LABEL_46;
      }
      goto LABEL_37;
    }
    if (v12 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v20 = v8 + 1;
    uint64_t v21 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_30;
    }
    int v22 = *v20;
    uint64_t v21 = v21 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      uint64_t v20 = v8 + 2;
LABEL_30:
      uint64_t v29 = v20;
      *(unsigned char *)(a1 + 32) = v21 != 0;
      goto LABEL_37;
    }
    uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v21);
    uint64_t v29 = v27;
    *(unsigned char *)(a1 + 32) = v28 != 0;
    if (!v27) {
      goto LABEL_46;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2 && v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 24);
    if (!v23)
    {
      uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v23 = sub_13D84A8((uint64_t)v24);
      *(void *)(a1 + 24) = v23;
      uint64_t v8 = v29;
    }
    uint64_t v16 = sub_11C5070(a3, v23, (unsigned __int8 *)v8);
LABEL_36:
    uint64_t v29 = v16;
    if (!v16) {
      goto LABEL_46;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v29;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

unsigned char *sub_11CAA5C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_13979CC(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 32);
  unsigned char *v4 = 24;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_14:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_20:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11CAC38(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_1397CE4(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
    if ((v2 & 4) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11CAD04(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_13D84A8((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_2535340;
      }
      uint64_t result = sub_118D9C0(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11CADEC()
{
  return 1;
}

void *sub_11CADF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.FineGrainedETAAnalytics.ScenarioInstance.StackedExperiment");
}

uint64_t sub_11CAE04(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249A380;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188CA54((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v8 & 2) != 0) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = v9;
  return a1;
}

void sub_11CAF38()
{
}

uint64_t sub_11CAF9C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252D310)
  {
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CB074(uint64_t a1)
{
  sub_11CAF9C(a1);

  operator delete();
}

unsigned char *sub_11CB0AC(unsigned char *result)
{
  uint64_t v1 = result;
  *((_DWORD *)result + 6) = 0;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_15B09D0(*((void *)result + 5));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_15B09D0(*((void *)v1 + 6));
    }
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((void *)v3 + 6) = 0;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11CB124(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (unsigned int *)(a1 + 24);
  int v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = v23 + 1;
    unsigned int v10 = *v23;
    if (*v23 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180((uint64_t)v23, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = v23 + 2;
      }
    }
    uint64_t v23 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 40);
        if (v13) {
          goto LABEL_20;
        }
        uint64_t v14 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v8) {
          uint64_t v14 = (void *)*v14;
        }
        uint64_t v13 = sub_15C1918((uint64_t)v14);
        *(void *)(a1 + 40) = v13;
        goto LABEL_19;
      case 2u:
        if (v10 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v13 = *(void *)(a1 + 48);
        if (!v13)
        {
          uint64_t v15 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v13 = sub_15C1918((uint64_t)v15);
          *(void *)(a1 + 48) = v13;
LABEL_19:
          uint64_t v9 = v23;
        }
LABEL_20:
        unint64_t v16 = sub_1198F14(a3, v13, (unsigned __int8 *)v9);
        goto LABEL_40;
      case 3u:
        if (v10 != 25) {
          goto LABEL_33;
        }
        v5 |= 4u;
        *(void *)(a1 + 56) = *(void *)v9;
        uint64_t v23 = v9 + 8;
        goto LABEL_41;
      case 4u:
        if (v10 == 33)
        {
          uint64_t v17 = v9 - 1;
          unsigned int v18 = *v7;
          do
          {
            uint64_t v19 = v17 + 1;
            uint64_t v23 = v17 + 1;
            uint64_t v20 = *(void *)(v17 + 1);
            if (v18 == *(_DWORD *)(a1 + 28))
            {
              sub_188CA54((unsigned int *)(a1 + 24), v18 + 1);
              *(void *)(*(void *)(a1 + 32) + 8 * v18) = v20;
              uint64_t v19 = v23;
            }
            else
            {
              *(void *)(*(void *)(a1 + 32) + 8 * v18) = v20;
            }
            unsigned int *v7 = ++v18;
            uint64_t v17 = v19 + 8;
            uint64_t v23 = v19 + 8;
          }
          while (*(void *)a3 > (unint64_t)(v19 + 8) && *v17 == 33);
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v10 == 34)
        {
          unint64_t v16 = (char *)sub_188C3D4(a1 + 24, v9, a3);
          goto LABEL_40;
        }
LABEL_33:
        if (v10) {
          BOOL v21 = (v10 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v8)
          {
            int v22 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = v23;
          }
          unint64_t v16 = (char *)sub_1885AC0(v10, v22, v9, a3);
LABEL_40:
          uint64_t v23 = v16;
          if (!v16) {
            goto LABEL_46;
          }
          goto LABEL_41;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_46:
        }
          uint64_t v23 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v23;
      default:
        goto LABEL_33;
    }
  }
}

unsigned char *sub_11CB3EC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    unsigned char *v4 = 25;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
LABEL_20:
  uint64_t v14 = *(unsigned int *)(a1 + 24);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 8 * v14;
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 32) + v15);
      unsigned char *v4 = 33;
      *(void *)(v4 + 1) = v17;
      v4 += 9;
      v15 += 8;
    }
    while (v16 != v15);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    BOOL v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    BOOL v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_11CB60C(uint64_t a1)
{
  uint64_t v2 = 9 * *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_15B0D90(*(void *)(a1 + 40));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0)
    {
      uint64_t v5 = sub_15B0D90(*(void *)(a1 + 48));
      v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 4) != 0) {
      v2 += 9;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11CB6E8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unsigned int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1918((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v13 = &off_253F1A0;
      }
      sub_15B0E24(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          *(_DWORD *)(a1 + 16) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 48);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 48) = v14;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v17 = &off_253F1A0;
    }
    sub_15B0E24(v14, (uint64_t)v17);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11CB84C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11CB898@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.FineGrainedETAAnalytics.ScenarioInstance.Metadata");
}

double sub_11CB8A8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_249A400;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 0;
  return result;
}

uint64_t sub_11CB8FC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249A400;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD508(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v12 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v12 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  long long v14 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 92) = *(_OWORD *)(a2 + 92);
  *(_OWORD *)(a1 + 80) = v14;
  return a1;
}

void sub_11CBAD8()
{
}

uint64_t sub_11CBB60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252D350)
  {
    if (*(void *)(a1 + 56))
    {
      sub_1397630();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_11CAF9C(v6);
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_1397630();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_11DCF44((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CBC78(uint64_t a1)
{
  sub_11CBB60(a1);

  operator delete();
}

uint64_t sub_11CBCB0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_11CA79C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_23:
    double result = sub_139766C(*(void *)(v1 + 56));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_24;
  }
  unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v8 + 23) < 0)
  {
    **(unsigned char **)unint64_t v8 = 0;
    *(void *)(v8 + 8) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_23;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v5 & 2) != 0) {
      goto LABEL_23;
    }
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_24:
  double result = (uint64_t)sub_11CB0AC(*(unsigned char **)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    double result = sub_139766C(*(void *)(v1 + 72));
LABEL_11:
  if ((v5 & 0xF0) != 0)
  {
    *(void *)(v1 + 86) = 0;
    *(void *)(v1 + 80) = 0;
  }
  if ((v5 & 0x700) != 0)
  {
    *(_DWORD *)(v1 + 104) = 0;
    *(void *)(v1 + 96) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_11CBDC0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v64 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v64, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v64 + 1);
    unsigned int v9 = **(unsigned char **)v64;
    if ((char)**(unsigned char **)v64 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v64, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v64 + 2);
      }
    }
    *(void *)uint64_t v64 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        long long v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        uint64_t v15 = (void *)sub_188C244(v14, *(char **)v64, (uint64_t)a3);
        goto LABEL_83;
      case 2u:
        if (v9 != 16) {
          goto LABEL_76;
        }
        v5 |= 0x10u;
        uint64_t v16 = (char *)(v8 + 1);
        uint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v64 = v50;
          *(void *)(a1 + 80) = v51;
          if (!v50) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)uint64_t v64 = v16;
          *(void *)(a1 + 80) = v17;
        }
        goto LABEL_84;
      case 3u:
        if (v9 != 24) {
          goto LABEL_76;
        }
        v5 |= 0x40u;
        uint64_t v19 = (char *)(v8 + 1);
        uint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v20);
          *(void *)uint64_t v64 = v52;
          *(unsigned char *)(a1 + 92) = v53 != 0;
          if (!v52) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_22:
          *(void *)uint64_t v64 = v19;
          *(unsigned char *)(a1 + 92) = v20 != 0;
        }
        goto LABEL_84;
      case 4u:
        if (v9 != 34) {
          goto LABEL_76;
        }
        uint64_t v22 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v64 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_11D0814(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = *(unsigned __int8 **)v64;
          }
          uint64_t v22 = sub_11CC3B0(a3, v26, v23);
          *(void *)uint64_t v64 = v22;
          if (!v22) {
            goto LABEL_103;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_84;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v28 = *(void *)(a1 + 56);
        if (v28) {
          goto LABEL_70;
        }
        uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v29 = (void *)*v29;
        }
        uint64_t v28 = sub_13D84A8((uint64_t)v29);
        *(void *)(a1 + 56) = v28;
        goto LABEL_69;
      case 6u:
        if (v9 != 48) {
          goto LABEL_76;
        }
        v5 |= 0x20u;
        BOOL v30 = (char *)(v8 + 1);
        int v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v54 = sub_188C0D0((uint64_t)v8, v31);
          *(void *)uint64_t v64 = v54;
          *(_DWORD *)(a1 + 88) = v55;
          if (!v54) {
            goto LABEL_103;
          }
        }
        else
        {
          BOOL v30 = (char *)(v8 + 2);
LABEL_42:
          *(void *)uint64_t v64 = v30;
          *(_DWORD *)(a1 + 88) = v31;
        }
        goto LABEL_84;
      case 7u:
        if (v9 != 56) {
          goto LABEL_76;
        }
        v5 |= 0x100u;
        int v33 = (char *)(v8 + 1);
        int v34 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v56 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)uint64_t v64 = v56;
          *(_DWORD *)(a1 + 96) = v57;
          if (!v56) {
            goto LABEL_103;
          }
        }
        else
        {
          int v33 = (char *)(v8 + 2);
LABEL_47:
          *(void *)uint64_t v64 = v33;
          *(_DWORD *)(a1 + 96) = v34;
        }
        goto LABEL_84;
      case 8u:
        if (v9 != 66) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        int v36 = *(void **)(a1 + 64);
        if (!v36)
        {
          int v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v37 = (void *)*v37;
          }
          int v36 = sub_11D0890((uint64_t)v37);
          *(void *)(a1 + 64) = v36;
          unint64_t v8 = *(unsigned __int8 **)v64;
        }
        uint64_t v15 = sub_11CC440(a3, (uint64_t)v36, v8);
        goto LABEL_83;
      case 9u:
        if (v9 != 72) {
          goto LABEL_76;
        }
        v5 |= 0x80u;
        unint64_t v38 = (char *)(v8 + 1);
        uint64_t v39 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v58 = sub_188C138((uint64_t)v8, v39);
          *(void *)uint64_t v64 = v58;
          *(unsigned char *)(a1 + 93) = v59 != 0;
          if (!v58) {
            goto LABEL_103;
          }
        }
        else
        {
          unint64_t v38 = (char *)(v8 + 2);
LABEL_58:
          *(void *)uint64_t v64 = v38;
          *(unsigned char *)(a1 + 93) = v39 != 0;
        }
        goto LABEL_84;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_76;
        }
        v5 |= 0x200u;
        int v41 = (char *)(v8 + 1);
        int v42 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v43 = *v41;
        int v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v60 = sub_188C0D0((uint64_t)v8, v42);
          *(void *)uint64_t v64 = v60;
          *(_DWORD *)(a1 + 100) = v61;
          if (!v60) {
            goto LABEL_103;
          }
        }
        else
        {
          int v41 = (char *)(v8 + 2);
LABEL_63:
          *(void *)uint64_t v64 = v41;
          *(_DWORD *)(a1 + 100) = v42;
        }
        goto LABEL_84;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v28 = *(void *)(a1 + 72);
        if (v28) {
          goto LABEL_70;
        }
        BOOL v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          BOOL v44 = (void *)*v44;
        }
        uint64_t v28 = sub_13D84A8((uint64_t)v44);
        *(void *)(a1 + 72) = v28;
LABEL_69:
        unint64_t v8 = *(unsigned __int8 **)v64;
LABEL_70:
        uint64_t v15 = sub_11C5070(a3, v28, v8);
        goto LABEL_83;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_76;
        }
        v5 |= 0x400u;
        uint64_t v45 = (char *)(v8 + 1);
        int v46 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v62 = sub_188C0D0((uint64_t)v8, v46);
          *(void *)uint64_t v64 = v62;
          *(_DWORD *)(a1 + 104) = v63;
          if (!v62) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v45 = (char *)(v8 + 2);
LABEL_75:
          *(void *)uint64_t v64 = v45;
          *(_DWORD *)(a1 + 104) = v46;
        }
        goto LABEL_84;
      default:
LABEL_76:
        if (v9) {
          BOOL v48 = (v9 & 7) == 4;
        }
        else {
          BOOL v48 = 1;
        }
        if (!v48)
        {
          if (*v7)
          {
            int v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v64;
          }
          uint64_t v15 = sub_1885AC0(v9, v49, (char *)v8, a3);
LABEL_83:
          *(void *)uint64_t v64 = v15;
          if (!v15) {
            goto LABEL_103;
          }
LABEL_84:
          if (sub_11947B8((uint64_t)a3, (char **)v64, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_103:
        }
          *(void *)uint64_t v64 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v64;
    }
  }
}

char *sub_11CC3B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_11CA804(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11CC440(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_11CB124(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11CC4D0(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 80);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 92);
    unsigned char *v4 = 24;
    v4[1] = v10;
    v4 += 2;
  }
  int v11 = *(_DWORD *)(a1 + 32);
  if (v11)
  {
    for (int i = 0; i != v11; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_11CAA5C(v13, (unint64_t)v15, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 56);
    unsigned char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_13979CC(v16, (unint64_t)v18, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 96);
    unsigned char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 64);
    unsigned char *v4 = 66;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    uint64_t v4 = sub_11CB3EC(v25, (unint64_t)v27, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_45:
      if ((v6 & 0x200) == 0) {
        goto LABEL_62;
      }
      goto LABEL_56;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_45;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v28 = *(unsigned char *)(a1 + 93);
  unsigned char *v4 = 72;
  v4[1] = v28;
  v4 += 2;
  if ((v6 & 0x200) != 0)
  {
LABEL_56:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v29 = *(_DWORD *)(a1 + 100);
    unsigned char *v4 = 80;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unsigned int v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_62:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 72);
    unsigned char *v4 = 90;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      int v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      int v34 = v4 + 2;
    }
    uint64_t v4 = sub_13979CC(v32, (unint64_t)v34, a3);
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v35 = *(_DWORD *)(a1 + 104);
    unsigned char *v4 = 96;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unsigned int v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if ((v38 & 1) == 0) {
    return v4;
  }
  unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    int v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    int v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if (*a3 - (void)v4 >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(v4, v41, (int)v42);
    v4 += v43;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v41, v42, v4);
}

uint64_t sub_11CCA4C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11CAC38(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_22;
  }
  if (v8)
  {
    unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_33;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v15 = sub_1397CE4(*(void *)(a1 + 56));
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v16 = sub_11CB60C(*(void *)(a1 + 64));
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
LABEL_35:
    v2 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_34:
  uint64_t v17 = sub_1397CE4(*(void *)(a1 + 72));
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
    goto LABEL_35;
  }
LABEL_15:
  if ((v8 & 0x20) != 0) {
LABEL_16:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v9 = v2 + 2;
  if ((v8 & 0x40) == 0) {
    uint64_t v9 = v2;
  }
  if ((v8 & 0x80) != 0) {
    uint64_t v2 = v9 + 2;
  }
  else {
    uint64_t v2 = v9;
  }
LABEL_22:
  if ((v8 & 0x700) == 0) {
    goto LABEL_27;
  }
  if ((v8 & 0x100) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x200) == 0)
    {
LABEL_25:
      if ((v8 & 0x400) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_25;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 100) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x400) != 0) {
LABEL_26:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 104) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_27:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v18 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v2 += v19;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11CCCE4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD508((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(std::string **)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v14 = (std::string *)sub_13D84A8((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v17 = &off_2535340;
      }
      sub_118D9C0(v14, (uint64_t)v17);
      if ((v9 & 4) == 0)
      {
LABEL_11:
        if ((v9 & 8) == 0) {
          goto LABEL_12;
        }
        goto LABEL_44;
      }
    }
    else if ((v9 & 4) == 0)
    {
      goto LABEL_11;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    unint64_t v18 = *(void **)(a1 + 64);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      unint64_t v18 = sub_11D0890((uint64_t)v20);
      *(void *)(a1 + 64) = v18;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v21 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v21 = &off_252D310;
    }
    sub_11CB6E8((uint64_t)v18, (uint64_t)v21);
    if ((v9 & 8) == 0)
    {
LABEL_12:
      if ((v9 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_52;
    }
LABEL_44:
    *(_DWORD *)(a1 + 16) |= 8u;
    unsigned int v22 = *(std::string **)(a1 + 72);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unsigned int v24 = (void *)*v24;
      }
      unsigned int v22 = (std::string *)sub_13D84A8((uint64_t)v24);
      *(void *)(a1 + 72) = v22;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v25 = &off_2535340;
    }
    sub_118D9C0(v22, (uint64_t)v25);
    if ((v9 & 0x10) == 0)
    {
LABEL_13:
      if ((v9 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_53;
    }
LABEL_52:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_14:
      if ((v9 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_54;
    }
LABEL_53:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v9 & 0x40) == 0)
    {
LABEL_15:
      if ((v9 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_18;
      }
LABEL_16:
      *(unsigned char *)(a1 + 93) = *(unsigned char *)(a2 + 93);
      goto LABEL_17;
    }
LABEL_54:
    *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
    if ((v9 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v9 & 0x700) == 0) {
    goto LABEL_24;
  }
  if ((v9 & 0x100) == 0)
  {
    if ((v9 & 0x200) == 0) {
      goto LABEL_21;
    }
LABEL_57:
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v9 & 0x400) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  if ((v9 & 0x200) != 0) {
    goto LABEL_57;
  }
LABEL_21:
  if ((v9 & 0x400) != 0) {
LABEL_22:
  }
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
LABEL_23:
  *(_DWORD *)(a1 + 16) |= v9;
LABEL_24:
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11CCF6C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_11CBCB0(a1);
    sub_11CCCE4(a1, a2);
  }
}

uint64_t sub_11CCFB8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_11CB84C(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

__n128 sub_11CCFE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = v10;
  uint64_t v11 = *(void *)(a1 + 88);
  uint64_t v12 = *(void *)(a1 + 96);
  __n128 result = *(__n128 *)(a2 + 88);
  *(__n128 *)(a1 + 88) = result;
  *(void *)(a2 + 88) = v11;
  *(void *)(a2 + 96) = v12;
  LODWORD(v11) = *(_DWORD *)(a1 + 104);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(_DWORD *)(a2 + 104) = v11;
  return result;
}

void *sub_11CD078@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.FineGrainedETAAnalytics.ScenarioInstance");
}

void *sub_11CD088(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CD11C(void *a1)
{
  sub_11CD088(a1);

  operator delete();
}

uint64_t sub_11CD154(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 56) = 0;
  *(_DWORD *)(result + 80) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11CD174(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    unint64_t v18 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 == 10)
        {
          uint64_t v11 = (unsigned int *)(a1 + 16);
          goto LABEL_15;
        }
        if (v8 != 8) {
          goto LABEL_28;
        }
        int v13 = sub_110DAD8((uint64_t *)&v18);
        sub_11CD3D8(a1, v13);
        goto LABEL_24;
      case 2u:
        if (v8 == 18)
        {
          uint64_t v11 = (unsigned int *)(a1 + 40);
LABEL_15:
          uint64_t v12 = sub_188C2CC(v11, (unsigned __int8 *)v7, (uint64_t)a3);
          goto LABEL_35;
        }
        if (v8 != 16) {
          goto LABEL_28;
        }
        int v14 = sub_110DAD8((uint64_t *)&v18);
        sub_11CD448(a1, v14);
        goto LABEL_24;
      case 3u:
        if (v8 == 26)
        {
          uint64_t v11 = (unsigned int *)(a1 + 64);
          goto LABEL_15;
        }
        if (v8 != 24) {
          goto LABEL_28;
        }
        int v15 = sub_110DAD8((uint64_t *)&v18);
        sub_11CD4B8(a1, v15);
LABEL_24:
        if (!v18) {
          return 0;
        }
        goto LABEL_36;
      case 4u:
        if (v8 == 34)
        {
          uint64_t v12 = (unsigned __int8 *)sub_188C3D4(a1 + 88, v7, a3);
          goto LABEL_35;
        }
        if (v8 == 33)
        {
          sub_11CD528(a1, *(void *)v7);
          v18 += 8;
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
            return v18;
          }
          continue;
        }
LABEL_28:
        if (v8) {
          BOOL v16 = (v8 & 7) == 4;
        }
        else {
          BOOL v16 = 1;
        }
        if (!v16)
        {
          if (*v6)
          {
            uint64_t v17 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v18;
          }
          uint64_t v12 = sub_1885AC0(v8, v17, v7, a3);
LABEL_35:
          unint64_t v18 = (char *)v12;
          if (!v12) {
            return 0;
          }
          goto LABEL_36;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v18;
      default:
        goto LABEL_28;
    }
  }
}

void sub_11CD3D8(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 16);
  uint64_t v4 = (_DWORD *)(a1 + 16);
  if (v5 == *(_DWORD *)(a1 + 20))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 16), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 24) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 24) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_11CD448(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 40);
  uint64_t v4 = (_DWORD *)(a1 + 40);
  if (v5 == *(_DWORD *)(a1 + 44))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 40), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 48) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 48) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_11CD4B8(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 64);
  uint64_t v4 = (_DWORD *)(a1 + 64);
  if (v5 == *(_DWORD *)(a1 + 68))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 64), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 72) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 72) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_11CD528(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 88);
  uint64_t v4 = (_DWORD *)(a1 + 88);
  if (v5 == *(_DWORD *)(a1 + 92))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 88), v5 + 1);
    *(void *)(*(void *)(a1 + 96) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 96) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

unsigned char *sub_11CD598(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  unsigned int v6 = *(_DWORD *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned char *v4 = 10;
    uint64_t v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v42 = v6 >> 14;
        v6 >>= 7;
      }
      while (v42);
      uint64_t v4 = v7 - 1;
    }
    v4 += 2;
    unsigned char *v7 = v6;
    unsigned int v8 = *(unsigned int **)(a1 + 24);
    unsigned int v9 = &v8[*(int *)(a1 + 16)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *v8++;
      unsigned int v10 = v11;
      unsigned char *v4 = v11;
      if (v11 > 0x7F)
      {
        unsigned char *v4 = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  unsigned int v14 = *(_DWORD *)(a1 + 56);
  if ((int)v14 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned char *v4 = 18;
    int v15 = v4 + 1;
    if (v14 >= 0x80)
    {
      do
      {
        *v15++ = v14 | 0x80;
        unsigned int v43 = v14 >> 14;
        v14 >>= 7;
      }
      while (v43);
      uint64_t v4 = v15 - 1;
    }
    v4 += 2;
    unsigned char *v15 = v14;
    BOOL v16 = *(unsigned int **)(a1 + 48);
    uint64_t v17 = &v16[*(int *)(a1 + 40)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v19 = *v16++;
      unsigned int v18 = v19;
      unsigned char *v4 = v19;
      if (v19 > 0x7F)
      {
        unsigned char *v4 = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        v4[1] = v18 >> 7;
        v4 += 2;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v16 < v17);
  }
  unsigned int v22 = *(_DWORD *)(a1 + 80);
  if ((int)v22 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned char *v4 = 26;
    uint64_t v23 = v4 + 1;
    if (v22 >= 0x80)
    {
      do
      {
        *v23++ = v22 | 0x80;
        unsigned int v44 = v22 >> 14;
        v22 >>= 7;
      }
      while (v44);
      uint64_t v4 = v23 - 1;
    }
    v4 += 2;
    *uint64_t v23 = v22;
    unsigned int v24 = *(unsigned int **)(a1 + 72);
    uint64_t v25 = &v24[*(int *)(a1 + 64)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v27 = *v24++;
      unsigned int v26 = v27;
      unsigned char *v4 = v27;
      if (v27 > 0x7F)
      {
        unsigned char *v4 = v26 | 0x80;
        unsigned int v28 = v26 >> 7;
        v4[1] = v26 >> 7;
        v4 += 2;
        if (v26 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v29 = v28 >> 14;
            v28 >>= 7;
            *v4++ = v28;
          }
          while (v29);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v24 < v25);
  }
  int v30 = *(_DWORD *)(a1 + 88);
  if (v30 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4)
    {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      int v30 = *(_DWORD *)(a1 + 88);
    }
    int v31 = 8 * v30;
    unsigned char *v4 = 34;
    uint64_t v32 = v4 + 1;
    unsigned int v33 = v31;
    if (v31 >= 0x80)
    {
      do
      {
        *v32++ = v33 | 0x80;
        unsigned int v45 = v33 >> 14;
        v33 >>= 7;
      }
      while (v45);
      uint64_t v4 = v32 - 1;
    }
    int v34 = v4 + 2;
    unsigned char *v32 = v33;
    unsigned int v35 = *(char **)(a1 + 96);
    if (*(void *)a3 - (void)v34 < v31)
    {
      uint64_t v4 = (unsigned char *)sub_188A528(a3, v35, v31, v34);
    }
    else
    {
      uint64_t v36 = v31;
      memcpy(v34, v35, v31);
      uint64_t v4 = (char *)v34 + v36;
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    unint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    unint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v41)
  {
    uint64_t v46 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v46;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_11CD9BC(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 16));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 32) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = sub_188D4F0((unsigned int *)(a1 + 40));
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 56) = v7;
  uint64_t v9 = v5 + v6;
  uint64_t v10 = sub_188D4F0((unsigned int *)(a1 + 64));
  if (v10)
  {
    int v11 = v10;
    if ((v10 & 0x80000000) != 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v9 += v12;
  }
  else
  {
    int v11 = 0;
  }
  *(_DWORD *)(a1 + 80) = v11;
  uint64_t v13 = v9 + v10;
  uint64_t v14 = *(unsigned int *)(a1 + 88);
  uint64_t v15 = 8 * v14;
  if (v14)
  {
    if ((v15 & 0x80000000) != 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v13 += v16;
  }
  uint64_t result = v13 + v15;
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v19 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    result += v20;
  }
  *(_DWORD *)(a1 + 104) = result;
  return result;
}

std::string *sub_11CDB2C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer v10 = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&v10[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v12 + v11);
    std::string::pointer v13 = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&v13[4 * v12], *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v14 = *(_DWORD *)(a2 + 88);
  if (v14)
  {
    uint64_t v15 = SLODWORD(v3[3].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[3].__r_.__value_.__r.__words[2], v15 + v14);
    std::string::pointer v16 = v3[4].__r_.__value_.__l.__data_;
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 88);
    uint64_t result = (std::string *)memcpy(&v16[8 * v15], *(const void **)(a2 + 96), 8 * *(int *)(a2 + 88));
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11CDC9C()
{
  return 1;
}

void *sub_11CDCA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.FineGrainedETAAnalytics.PackedTimeSpaceTrajectory");
}

void *sub_11CDCB4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CDD40(void *a1)
{
  sub_11CDCB4(a1);

  operator delete();
}

uint64_t sub_11CDD78(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 56) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11CDD94(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    return v18;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 4)
    {
      if (v8 == 34)
      {
        std::string::pointer v13 = (unsigned __int8 *)sub_188C3D4(a1 + 64, v7, a3);
        goto LABEL_33;
      }
      if (v8 == 33)
      {
        sub_11CDF9C(a1, *(void *)v7);
        v18 += 8;
        goto LABEL_34;
      }
    }
    else if (v11 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v12 = (unsigned int *)(a1 + 40);
        goto LABEL_17;
      }
      if (v8 == 24)
      {
        int v15 = sub_110DAD8((uint64_t *)&v18);
        sub_11CD448(a1, v15);
LABEL_24:
        if (!v18) {
          return 0;
        }
        goto LABEL_34;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v12 = (unsigned int *)(a1 + 16);
LABEL_17:
        std::string::pointer v13 = sub_188C2CC(v12, (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_33;
      }
      if (v8 == 16)
      {
        int v14 = sub_110DAD8((uint64_t *)&v18);
        sub_11CD3D8(a1, v14);
        goto LABEL_24;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v17 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v18;
    }
    std::string::pointer v13 = sub_1885AC0(v8, v17, v7, a3);
LABEL_33:
    uint64_t v18 = (char *)v13;
    if (!v13) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      return v18;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v18;
  }
  return 0;
}

void sub_11CDF9C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 64);
  int v4 = (_DWORD *)(a1 + 64);
  if (v5 == *(_DWORD *)(a1 + 68))
  {
    int v6 = v5 + 1;
    sub_188CA54((unsigned int *)(a1 + 64), v5 + 1);
    *(void *)(*(void *)(a1 + 72) + 8 * v5) = a2;
  }
  else
  {
    *(void *)(*(void *)(a1 + 72) + 8 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

unsigned char *sub_11CE00C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  unsigned int v6 = *(_DWORD *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned char *v4 = 18;
    int v7 = v4 + 1;
    if (v6 >= 0x80)
    {
      do
      {
        *v7++ = v6 | 0x80;
        unsigned int v34 = v6 >> 14;
        v6 >>= 7;
      }
      while (v34);
      int v4 = v7 - 1;
    }
    v4 += 2;
    unsigned char *v7 = v6;
    unsigned int v8 = *(unsigned int **)(a1 + 24);
    unsigned int v9 = &v8[*(int *)(a1 + 16)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *v8++;
      unsigned int v10 = v11;
      unsigned char *v4 = v11;
      if (v11 > 0x7F)
      {
        unsigned char *v4 = v10 | 0x80;
        unsigned int v12 = v10 >> 7;
        v4[1] = v10 >> 7;
        v4 += 2;
        if (v10 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v8 < v9);
  }
  unsigned int v14 = *(_DWORD *)(a1 + 56);
  if ((int)v14 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned char *v4 = 26;
    int v15 = v4 + 1;
    if (v14 >= 0x80)
    {
      do
      {
        *v15++ = v14 | 0x80;
        unsigned int v35 = v14 >> 14;
        v14 >>= 7;
      }
      while (v35);
      int v4 = v15 - 1;
    }
    v4 += 2;
    unsigned char *v15 = v14;
    std::string::pointer v16 = *(unsigned int **)(a1 + 48);
    uint64_t v17 = &v16[*(int *)(a1 + 40)];
    do
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v19 = *v16++;
      unsigned int v18 = v19;
      unsigned char *v4 = v19;
      if (v19 > 0x7F)
      {
        unsigned char *v4 = v18 | 0x80;
        unsigned int v20 = v18 >> 7;
        v4[1] = v18 >> 7;
        v4 += 2;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v21 = v20 >> 14;
            v20 >>= 7;
            *v4++ = v20;
          }
          while (v21);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v16 < v17);
  }
  int v22 = *(_DWORD *)(a1 + 64);
  if (v22 >= 1)
  {
    if (*(void *)a3 <= (unint64_t)v4)
    {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      int v22 = *(_DWORD *)(a1 + 64);
    }
    int v23 = 8 * v22;
    unsigned char *v4 = 34;
    unsigned int v24 = v4 + 1;
    unsigned int v25 = v23;
    if (v23 >= 0x80)
    {
      do
      {
        *v24++ = v25 | 0x80;
        unsigned int v36 = v25 >> 14;
        v25 >>= 7;
      }
      while (v36);
      int v4 = v24 - 1;
    }
    unsigned int v26 = v4 + 2;
    unsigned char *v24 = v25;
    unsigned int v27 = *(char **)(a1 + 72);
    if (*(void *)a3 - (void)v26 < v23)
    {
      int v4 = (unsigned char *)sub_188A528(a3, v27, v23, v26);
    }
    else
    {
      uint64_t v28 = v23;
      memcpy(v26, v27, v23);
      int v4 = (char *)v26 + v28;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v33)
  {
    uint64_t v37 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_11CE344(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 16));
  if (v2)
  {
    int v3 = v2;
    if ((v2 & 0x80000000) != 0) {
      uint64_t v4 = 11;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = 0;
    uint64_t v4 = 0;
  }
  *(_DWORD *)(a1 + 32) = v3;
  uint64_t v5 = v4 + v2;
  uint64_t v6 = sub_188D4F0((unsigned int *)(a1 + 40));
  if (v6)
  {
    int v7 = v6;
    if ((v6 & 0x80000000) != 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v5 += v8;
  }
  else
  {
    int v7 = 0;
  }
  *(_DWORD *)(a1 + 56) = v7;
  uint64_t v9 = v5 + v6;
  uint64_t v10 = *(unsigned int *)(a1 + 64);
  uint64_t v11 = 8 * v10;
  if (v10)
  {
    if ((v11 & 0x80000000) != 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v9 += v12;
  }
  uint64_t result = v9 + v11;
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v15 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    result += v16;
  }
  *(_DWORD *)(a1 + 80) = result;
  return result;
}

std::string *sub_11CE468(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer v10 = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&v10[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = SLODWORD(v3[2].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[2].__r_.__value_.__r.__words[2], v12 + v11);
    std::string::pointer v13 = v3[3].__r_.__value_.__l.__data_;
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 64);
    uint64_t result = (std::string *)memcpy(&v13[8 * v12], *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11CE594()
{
  return 1;
}

void *sub_11CE59C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.FineGrainedETAAnalytics.PackedWaypointTimeSpaceTrajectory.PackedLegTimeSpaceTrajectory");
}

void *sub_11CE5AC(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_249A580;
  result[1] = v3;
  result[2] = a2;
  result[3] = 0;
  result[4] = 0;
  result[5] = 0;
  result[6] = a2;
  result[7] = 0;
  return result;
}

void *sub_11CE5E4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_11DCFC4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CE66C(void *a1)
{
  sub_11CE5E4(a1);

  operator delete();
}

uint64_t sub_11CE6A4(uint64_t a1)
{
  uint64_t result = sub_11DB450(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11CE6F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v22 = a2;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    return v22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v22 + 1;
    unsigned int v8 = *v22;
    if (*v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v22 + 2;
      }
    }
    int v22 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 == 18)
    {
      uint64_t v14 = sub_188C2CC((unsigned int *)(a1 + 40), (unsigned __int8 *)v7, (uint64_t)a3);
      goto LABEL_22;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    int v21 = sub_110DAD8((uint64_t *)&v22);
    sub_11CD448(a1, v21);
    if (!v22) {
      return 0;
    }
LABEL_23:
    if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
      return v22;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      int v22 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 32);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 24), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 24) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_11D0AC0(*(void *)(a1 + 16));
        uint64_t v19 = sub_188CDC8(a1 + 16, v20);
        uint64_t v16 = (unsigned __int8 *)v22;
      }
      unint64_t v15 = sub_11CE8FC(a3, v19, v16);
      int v22 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 10) {
        goto LABEL_23;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      std::string::pointer v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::pointer v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v22;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_22:
    int v22 = (char *)v14;
    if (!v14) {
      return 0;
    }
    goto LABEL_23;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v22;
  }
  return 0;
}

char *sub_11CE8FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11CDD94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11CE98C(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 80);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11CE00C(v8, (unint64_t)v10, a3);
    }
  }
  unsigned int v11 = *(_DWORD *)(a1 + 56);
  if ((int)v11 > 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    *__dst = 18;
    BOOL v12 = __dst + 1;
    if (v11 >= 0x80)
    {
      do
      {
        *v12++ = v11 | 0x80;
        unsigned int v24 = v11 >> 14;
        v11 >>= 7;
      }
      while (v24);
      __dst = v12 - 1;
    }
    __dst += 2;
    *BOOL v12 = v11;
    std::string::pointer v13 = *(unsigned int **)(a1 + 48);
    uint64_t v14 = &v13[*(int *)(a1 + 40)];
    do
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v16 = *v13++;
      unsigned int v15 = v16;
      *__dst = v16;
      if (v16 > 0x7F)
      {
        *__dst = v15 | 0x80;
        unsigned int v17 = v15 >> 7;
        __dst[1] = v15 >> 7;
        __dst += 2;
        if (v15 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v18 = v17 >> 14;
            v17 >>= 7;
            *__dst++ = v17;
          }
          while (v18);
        }
      }
      else
      {
        ++__dst;
      }
    }
    while (v13 < v14);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return __dst;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v23)
  {
    uint64_t v25 = (int)v23;
    memcpy(__dst, v22, (int)v23);
    __dst += v25;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, __dst);
}

uint64_t sub_11CEBBC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11CE344(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = sub_188D4F0((unsigned int *)(a1 + 40));
  if (v8)
  {
    int v9 = v8;
    if ((v8 & 0x80000000) != 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
  else
  {
    int v9 = 0;
  }
  *(_DWORD *)(a1 + 56) = v9;
  uint64_t result = v2 + v8;
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 60) = result;
  return result;
}

std::string *sub_11CECB4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_11DD594((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if (v9)
  {
    uint64_t v10 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v10 + v9);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[4 * v10], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_11CEDC8(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_11CE6A4((uint64_t)result);
    return sub_11CECB4(v4, a2);
  }
  return result;
}

uint64_t sub_11CEE14()
{
  return 1;
}

__n128 sub_11CEE1C(void *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  a1[1] = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  uint64_t v5 = a1[4];
  a1[4] = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = v5;
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 5) = result;
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v7;
  return result;
}

void *sub_11CEE60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.FineGrainedETAAnalytics.PackedWaypointTimeSpaceTrajectory");
}

void *sub_11CEE70(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DBCD4(a1 + 15);
  sub_11DD0C4(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_11DCF44(a1 + 6);
  sub_11DD044(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CEF1C(void *a1)
{
  sub_11CEE70(a1);

  operator delete();
}

uint64_t sub_11CEF54(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v51 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 72);
  uint64_t v50 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v51 + 1);
    unsigned int v9 = **(unsigned char **)v51;
    if ((char)**(unsigned char **)v51 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v51, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v51 + 2);
      }
    }
    *(void *)uint64_t v51 = v8;
    switch(v9 >> 3)
    {
      case 3u:
        if (v9 != 26) {
          goto LABEL_66;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)uint64_t v51 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_11D0930(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            unint64_t v13 = *(unsigned __int8 **)v51;
          }
          uint64_t v12 = (char *)sub_11CF468(a3, v16, v13);
          *(void *)uint64_t v51 = v12;
          if (!v12) {
            goto LABEL_80;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 26) {
            goto LABEL_73;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_66;
        }
        unsigned int v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          *(void *)uint64_t v51 = v18 + 1;
          uint64_t v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_11D0814(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
            uint64_t v19 = *(unsigned __int8 **)v51;
          }
          unsigned int v18 = sub_11CC3B0(a3, v22, v19);
          *(void *)uint64_t v51 = v18;
          if (!v18) {
            goto LABEL_80;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 34) {
            goto LABEL_73;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_66;
        }
        unsigned int v24 = v8 - 1;
        while (1)
        {
          uint64_t v25 = (char *)(v24 + 1);
          *(void *)uint64_t v51 = v24 + 1;
          unsigned int v26 = *(_DWORD **)(a1 + 88);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 80), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 80) = v27 + 1;
            uint64_t v28 = *(std::string **)&v26[2 * v27 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v30 = v29;
            v30[1] = sub_3A6EDC;
            void *v29 = 0;
            v29[1] = 0;
            v29[2] = 0;
            uint64_t v28 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v29);
            uint64_t v25 = *(char **)v51;
          }
          unsigned int v24 = sub_188C244(v28, v25, (uint64_t)a3);
          *(void *)uint64_t v51 = v24;
          if (!v24) {
            goto LABEL_80;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_73;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_66;
        }
        unint64_t v31 = v8 - 1;
        while (1)
        {
          uint64_t v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)uint64_t v51 = v31 + 1;
          uint64_t v33 = *(_DWORD **)(a1 + 112);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 104), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 104) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_11D09E8(*(void *)(a1 + 96));
            uint64_t v35 = sub_188CDC8(a1 + 96, v36);
            uint64_t v32 = *(unsigned __int8 **)v51;
          }
          unint64_t v31 = sub_11CF4F8(a3, v35, v32);
          *(void *)uint64_t v51 = v31;
          if (!v31) {
            goto LABEL_80;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 50) {
            goto LABEL_73;
          }
        }
      case 7u:
        if (v9 != 56) {
          goto LABEL_66;
        }
        uint64_t v37 = v8 + 1;
        uint64_t v38 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v38);
          *(void *)uint64_t v51 = v48;
          *(unsigned char *)(a1 + 144) = v49 != 0;
          int v5 = 1;
          if (!v48) {
            goto LABEL_80;
          }
        }
        else
        {
          uint64_t v37 = v8 + 2;
LABEL_55:
          *(void *)uint64_t v51 = v37;
          *(unsigned char *)(a1 + 144) = v38 != 0;
          int v5 = 1;
        }
        goto LABEL_73;
      case 8u:
        if (v9 != 66) {
          goto LABEL_66;
        }
        unint64_t v40 = v8 - 1;
        while (1)
        {
          uint64_t v41 = (unsigned __int8 *)(v40 + 1);
          *(void *)uint64_t v51 = v40 + 1;
          unsigned int v42 = *(_DWORD **)(a1 + 136);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 128), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 128) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            unsigned int v45 = sub_11D0B84(*(void *)(a1 + 120));
            uint64_t v44 = sub_188CDC8(a1 + 120, (uint64_t)v45);
            uint64_t v41 = *(unsigned __int8 **)v51;
          }
          unint64_t v40 = sub_11B24A8(a3, v44, v41);
          *(void *)uint64_t v51 = v40;
          if (!v40) {
            goto LABEL_80;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 66) {
            goto LABEL_73;
          }
        }
      default:
LABEL_66:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v50)
          {
            int v47 = (std::string *)((*v50 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v47 = (std::string *)sub_188DBD8(v50);
            uint64_t v8 = *(char **)v51;
          }
          *(void *)uint64_t v51 = sub_1885AC0(v9, v47, v8, a3);
          if (!*(void *)v51) {
            goto LABEL_80;
          }
LABEL_73:
          if (sub_11947B8((uint64_t)a3, (char **)v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_80:
        }
          *(void *)uint64_t v51 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v51;
    }
  }
}

uint64_t sub_11CF468(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11CBDC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11CF4F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11CD174(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11CF588(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 26;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11CC4D0(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 34;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_11CAA5C(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 80);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      uint64_t v19 = *(void **)(*(void *)(a1 + 88) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_28;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if (*a3 - (void)__dst + 14 >= v20)
      {
        *__dst = 42;
        __dst[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v21 = __dst + 2;
        memcpy(v21, v19, v20);
        __dst = &v21[v20];
        goto LABEL_26;
      }
LABEL_28:
      __dst = (char *)sub_188A868(a3, 5, (uint64_t)v19, __dst);
LABEL_26:
      v17 += 8;
    }
    while (v18 != v17);
  }
  int v22 = *(_DWORD *)(a1 + 104);
  if (v22)
  {
    for (int k = 0; k != v22; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *__dst = 50;
      unsigned int v25 = *(_DWORD *)(v24 + 104);
      __dst[1] = v25;
      if (v25 > 0x7F) {
        unsigned int v26 = sub_188A9CC(v25, __dst + 1);
      }
      else {
        unsigned int v26 = __dst + 2;
      }
      __dst = sub_11CD598(v24, (unint64_t)v26, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v27 = *(unsigned char *)(a1 + 144);
    *__dst = 56;
    __dst[1] = v27;
    __dst += 2;
  }
  int v28 = *(_DWORD *)(a1 + 128);
  if (v28)
  {
    for (int m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *__dst = 66;
      unsigned int v31 = *(_DWORD *)(v30 + 60);
      __dst[1] = v31;
      if (v31 > 0x7F) {
        uint64_t v32 = sub_188A9CC(v31, __dst + 1);
      }
      else {
        uint64_t v32 = __dst + 2;
      }
      __dst = sub_11CE98C(v30, v32, a3);
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if ((v33 & 1) == 0) {
    return __dst;
  }
  unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v35 + 31) < 0)
  {
    uint64_t v36 = *(void **)(v35 + 8);
    uint64_t v37 = *(void *)(v35 + 16);
  }
  else
  {
    uint64_t v36 = (void *)(v35 + 8);
    LODWORD(v37) = *(unsigned __int8 *)(v35 + 31);
  }
  if (*a3 - (void)__dst >= (int)v37)
  {
    uint64_t v38 = (int)v37;
    memcpy(__dst, v36, (int)v37);
    __dst += v38;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v36, v37, __dst);
}

uint64_t sub_11CF93C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11CCA4C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11CAC38(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  if ((int)v15 >= 1)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  uint64_t v21 = *(int *)(a1 + 104);
  uint64_t v22 = v16 + v21;
  uint64_t v23 = *(void *)(a1 + 112);
  if (v23) {
    uint64_t v24 = (uint64_t *)(v23 + 8);
  }
  else {
    uint64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_11CD9BC(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  uint64_t v28 = *(int *)(a1 + 128);
  uint64_t v29 = v22 + v28;
  uint64_t v30 = *(void *)(a1 + 136);
  if (v30) {
    unsigned int v31 = (uint64_t *)(v30 + 8);
  }
  else {
    unsigned int v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v34 = sub_11CEBBC(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = v29 + 2;
  }
  else {
    uint64_t result = v29;
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if (v36)
  {
    unint64_t v37 = v36 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v37 + 31) < 0) {
      uint64_t v38 = *(void *)(v37 + 16);
    }
    else {
      uint64_t v38 = *(unsigned __int8 *)(v37 + 31);
    }
    result += v38;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_11CFB40(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 4) != 0)
    {
      uint64_t result = sub_11CB84C(*(void *)(v5 + 64));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_11CFBB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.FineGrainedETAAnalytics");
}

void *sub_11CFBC0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11CFC34(void *a1)
{
  sub_11CFBC0(a1);

  operator delete();
}

char *sub_11CFC6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v14 + 2;
      }
    }
    uint64_t v14 = v7;
    if (v8 == 13)
    {
      *(_DWORD *)(a1 + 24) = *(_DWORD *)v7;
      uint64_t v14 = v7 + 4;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v14;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_11CFDAC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v6 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v6;
    uint64_t v4 = (_OWORD *)((char *)v4 + 5);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_11CFE90(uint64_t a1)
{
  uint64_t v1 = 5;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11CFED8()
{
  return 1;
}

void *sub_11CFEE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.navigation_feedback.SpeedAnalysis");
}

void *sub_11CFEF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2499B00;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  *(void *)((char *)result + 37) = 0;
  return result;
}

void *sub_11CFF70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2499B80;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_11CFFEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499C00;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = &qword_2550250;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = 0;
  *(void *)(result + 144) = 0;
  *(unsigned char *)(result + 152) = 0;
  return result;
}

uint64_t sub_11D00B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499C80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(void *)(result + 112) = 0;
  return result;
}

double sub_11D0164(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_2499D00;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  double result = 0.0;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_DWORD *)(v2 + 136) = 0;
  return result;
}

uint64_t sub_11D022C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_2499D80;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_11D02B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_2499E00;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_11D033C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499E80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

double sub_11D03E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_2499F00;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_11D045C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_2499F80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

uint64_t sub_11D04F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249A000;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_11D059C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_249A080;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 45) = 0u;
  return result;
}

void *sub_11D061C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_249A100;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_11D0698(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_249A180;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_11D0710(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249A200;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_11D078C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249A280;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_11D0814(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249A300;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

void *sub_11D0890(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249A380;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  result[6] = 0;
  result[7] = 0;
  return result;
}

double sub_11D0930(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_249A400;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_DWORD *)(v2 + 104) = 0;
  return result;
}

uint64_t sub_11D09E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249A480;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_DWORD *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(_DWORD *)(result + 104) = 0;
  return result;
}

uint64_t sub_11D0AC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249A500;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_DWORD *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

void *sub_11D0B84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249A580;
  result[1] = a1;
  result[2] = a1;
  result[3] = 0;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  return result;
}

uint64_t sub_11D0C24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249A600;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a1;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a1;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = a1;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = 0;
  *(unsigned char *)(result + 144) = 0;
  return result;
}

uint64_t sub_11D0CE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249A680;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

BOOL sub_11D0D60(unsigned int a1)
{
  return a1 < 6 || a1 == 99;
}

void *sub_11D0D78(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D0DEC(void *a1)
{
  sub_11D0D78(a1);

  operator delete();
}

uint64_t sub_11D0E24(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11D0E4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v24 + 2;
      }
    }
    uint64_t v24 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_26:
      uint64_t v24 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v17);
    uint64_t v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 21)
    {
      int v20 = *(_DWORD *)v8;
      uint64_t v19 = v8 + 4;
      v5 |= 2u;
      *(_DWORD *)(a1 + 28) = v20;
LABEL_30:
      uint64_t v24 = v19;
      goto LABEL_31;
    }
  }
  else if (v12 == 1 && v9 == 13)
  {
    int v21 = *(_DWORD *)v8;
    uint64_t v19 = v8 + 4;
    v5 |= 1u;
    *(_DWORD *)(a1 + 24) = v21;
    goto LABEL_30;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v24;
    }
    uint64_t v24 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v24) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

_OWORD *sub_11D1024(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    *(unsigned char *)unint64_t v4 = 13;
    *(_DWORD *)((char *)v4 + 1) = v7;
    unint64_t v4 = (_OWORD *)((char *)v4 + 5);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 28);
  *(unsigned char *)unint64_t v4 = 21;
  *(_DWORD *)((char *)v4 + 1) = v8;
  unint64_t v4 = (_OWORD *)((char *)v4 + 5);
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v9 = *(_DWORD *)(a1 + 32);
    *(unsigned char *)unint64_t v4 = 24;
    *((unsigned char *)v4 + 1) = v9;
    if (v9 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v9 | 0x80;
      unsigned int v10 = v9 >> 7;
      *((unsigned char *)v4 + 2) = v9 >> 7;
      unint64_t v4 = (_OWORD *)((char *)v4 + 3);
      if (v9 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unsigned int v11 = v10 >> 14;
          v10 >>= 7;
          *(unsigned char *)unint64_t v4 = v10;
          unint64_t v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v11);
      }
    }
    else
    {
      unint64_t v4 = (_OWORD *)((char *)v4 + 2);
    }
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    return (_OWORD *)((char *)v4 + v17);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_11D11C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    uint64_t v2 = 5;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11D1254()
{
  return 1;
}

void *sub_11D125C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioLocation");
}

uint64_t sub_11D126C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252D4A0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_11D0D78(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D1324(uint64_t a1)
{
  sub_11D126C(a1);

  operator delete();
}

uint64_t sub_11D135C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_11D0E24(*(void *)(result + 24));
  }
  if ((v2 & 0x1E) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(_WORD *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11D13C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_32;
        }
        v5 |= 2u;
        *(void *)(a1 + 32) = *(void *)v8;
        uint64_t v32 = v8 + 8;
        goto LABEL_40;
      case 2u:
        if (v9 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_11D4E28((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          int v8 = v32;
        }
        unint64_t v14 = sub_11D16D8(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_32;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v32 = v26;
          *(unsigned char *)(a1 + 48) = v27 != 0;
          if (!v26) {
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_21:
          uint64_t v32 = v15;
          *(unsigned char *)(a1 + 48) = v16 != 0;
        }
        goto LABEL_40;
      case 4u:
        if (v9 != 32) {
          goto LABEL_32;
        }
        v5 |= 4u;
        int v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v32 = v28;
          *(void *)(a1 + 40) = v29;
          if (!v28) {
            goto LABEL_51;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_26:
          uint64_t v32 = v18;
          *(void *)(a1 + 40) = v19;
        }
        goto LABEL_40;
      case 5u:
        if (v9 != 40) {
          goto LABEL_32;
        }
        v5 |= 0x10u;
        int v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v32 = v30;
          *(unsigned char *)(a1 + 49) = v31 != 0;
          if (!v30) {
            goto LABEL_51;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_31:
          uint64_t v32 = v21;
          *(unsigned char *)(a1 + 49) = v22 != 0;
        }
        goto LABEL_40;
      default:
LABEL_32:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v32;
          }
          unint64_t v14 = (char *)sub_1885AC0(v9, v25, v8, a3);
LABEL_39:
          uint64_t v32 = v14;
          if (!v14) {
            goto LABEL_51;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v32;
    }
  }
}

char *sub_11D16D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D0E4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11D1768(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 24);
  unsigned char *v4 = 18;
  unsigned int v9 = *(_DWORD *)(v8 + 20);
  v4[1] = v9;
  if (v9 > 0x7F) {
    unsigned int v10 = sub_188A9CC(v9, v4 + 1);
  }
  else {
    unsigned int v10 = v4 + 2;
  }
  char v4 = sub_11D1024(v8, (unint64_t)v10, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_24;
    }
    goto LABEL_18;
  }
LABEL_15:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 48);
  unsigned char *v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_18:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(void *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_24:
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 49);
    unsigned char *v4 = 40;
    v4[1] = v15;
    v4 += 2;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_11D19B8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) != 0)
  {
    if (v2)
    {
      uint64_t v5 = sub_11D11C8(*(void *)(a1 + 24));
      uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v2 & 8) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x10) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11D1A98(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_11D4E28((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        unsigned int v9 = &off_252D478;
      }
      uint64_t result = sub_117EF50(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
      goto LABEL_8;
    }
LABEL_23:
    v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11D1BA0()
{
  return 1;
}

void *sub_11D1BA8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioPathPoint");
}

void *sub_11D1BB8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DD738(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D1C38(void *a1)
{
  sub_11D1BB8(a1);

  operator delete();
}

uint64_t sub_11D1C70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11D135C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11D1CF4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_34:
      uint64_t v26 = v21;
      *(void *)(a1 + 48) = v22;
      int v5 = 1;
      goto LABEL_35;
    }
    BOOL v24 = (char *)sub_188C138((uint64_t)v8, v22);
    uint64_t v26 = v24;
    *(void *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_42;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    char v15 = v8 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v26 = v15 + 1;
      int v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_11D4EA4(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v26;
      }
      char v15 = sub_11D1F1C(a3, v19, v16);
      uint64_t v26 = v15;
      if (!v15) {
        goto LABEL_42;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_35;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_42:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_11D1F1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D13C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11D1FAC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_11D1768(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11D2170(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11D19B8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11D2248(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD8B8((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(void *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11D2334()
{
  return 1;
}

void *sub_11D233C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioRoute");
}

uint64_t sub_11D234C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D2418(uint64_t a1)
{
  sub_11D234C(a1);

  operator delete();
}

uint64_t sub_11D2450(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11D2508(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      int v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      char v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v22;
    }
    char v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_11D26F8(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_11D2810(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11D2930(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_15;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    unint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) != 0)
  {
LABEL_12:
    uint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  }
LABEL_15:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11D2A44()
{
  return 1;
}

void *sub_11D2A4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioRequestMetadata");
}

uint64_t sub_11D2A5C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252D508)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_11D234C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_11DD7B8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D2B20(uint64_t a1)
{
  sub_11D2A5C(a1);

  operator delete();
}

uint64_t sub_11D2B58(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11D1C70(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_11D2450(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11D2BEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void **)(a1 + 48);
      if (!v26)
      {
        uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v26 = sub_11D4FC0((uint64_t)v27);
        *(void *)(a1 + 48) = v26;
        uint64_t v8 = v30;
      }
      uint64_t v16 = (char *)sub_11D2E68(a3, (uint64_t)v26, (unsigned __int8 *)v8);
LABEL_41:
      uint64_t v30 = v16;
      if (!v16) {
        goto LABEL_49;
      }
      goto LABEL_42;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v23 = v8 + 1;
    uint64_t v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v25 = *v23;
    uint64_t v24 = v24 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      int v23 = v8 + 2;
LABEL_35:
      uint64_t v30 = v23;
      *(void *)(a1 + 56) = v24;
      goto LABEL_42;
    }
    uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v24);
    uint64_t v30 = v28;
    *(void *)(a1 + 56) = v29;
    if (!v28) {
      goto LABEL_49;
    }
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    int v17 = v8 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v30 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_11D4F24(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
        uint64_t v18 = (unsigned __int8 *)v30;
      }
      int v17 = sub_11D2EF8(a3, v21, v18);
      uint64_t v30 = v17;
      if (!v17) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
        goto LABEL_42;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

uint64_t sub_11D2E68(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D2508(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11D2EF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D1CF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11D2F88(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_11D26F8(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_11D1FAC(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_11D31B0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11D2170(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_11D2810(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11D32C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD944((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(std::string **)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_11D4FC0((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)(uint64_t))(a2 + 48);
      }
      else {
        uint64_t v13 = &off_252D4D8;
      }
      sub_11D2930(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11D3400()
{
  return 1;
}

void *sub_11D3408@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioETARequest");
}

uint64_t sub_11D3418(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D34E4(uint64_t a1)
{
  sub_11D3418(a1);

  operator delete();
}

uint64_t sub_11D351C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11D35D4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      int v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)uint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_11D37C4(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_11D38DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11D39FC()
{
  return 1;
}

void *sub_11D3A04@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioResponseMetadata");
}

uint64_t sub_11D3A14(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = &off_249AA00;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_11D3A84(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_11D3AB4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D3B30(void *a1)
{
  sub_11D3AB4(a1);

  operator delete();
}

unsigned char *sub_11D3B68(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 0xF) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(_DWORD *)(a1 + 72) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11D3BD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v36 + 1;
    unsigned int v9 = *v36;
    if (*v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v36 + 2;
      }
    }
    uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_31;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v36) {
            goto LABEL_58;
          }
          unint64_t v13 = v28;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v36 = v12;
        }
        if (sub_11D0D60(v13))
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 72) = v13;
        }
        else
        {
          if (*v7) {
            unint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v35);
        }
        goto LABEL_41;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        v5 |= 1u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v17);
          uint64_t v36 = v29;
          *(void *)(a1 + 48) = v30;
          if (!v29) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          uint64_t v36 = v16;
          *(void *)(a1 + 48) = v17;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        v5 |= 2u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v20);
          uint64_t v36 = v31;
          *(void *)(a1 + 56) = v32;
          if (!v31) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v36 = v19;
          *(void *)(a1 + 56) = v20;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        v5 |= 4u;
        uint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v23);
          uint64_t v36 = v33;
          *(void *)(a1 + 64) = v34;
          if (!v33) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_30:
          uint64_t v36 = v22;
          *(void *)(a1 + 64) = v23;
        }
        goto LABEL_41;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (v9 - 720 > 0x57)
          {
            if (*v7)
            {
              uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v36;
            }
            uint64_t v26 = sub_1885AC0(v9, v27, v8, a3);
          }
          else
          {
            uint64_t v26 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_252D578, (uint64_t *)(a1 + 8), a3);
          }
          uint64_t v36 = (char *)v26;
          if (!v26) {
            goto LABEL_58;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v36;
    }
  }
}

char *sub_11D3F30(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 56);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 64);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 90, 101, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_11D41F0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_14;
  }
  if (v3)
  {
    result += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  result += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
LABEL_9:
  result += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  int v4 = *(_DWORD *)(a1 + 72);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_11D4304(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_14;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_14:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11D43BC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_11D43C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioRouteETA");
}

uint64_t sub_11D43D4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252D5C8)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_11D3418(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_11DD838((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D4498(uint64_t a1)
{
  sub_11D43D4(a1);

  operator delete();
}

uint64_t sub_11D44D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_11D3B68(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_11D351C(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11D4564(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        unint64_t v16 = v7 - 1;
        while (1)
        {
          unint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v30 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_11D516C(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            unint64_t v17 = (unsigned __int8 *)v30;
          }
          unint64_t v16 = sub_11D48A4(a3, v20, v17);
          uint64_t v30 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_44;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v26 = *(void **)(a1 + 48);
    if (!v26)
    {
      uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v26 = sub_11D50E4((uint64_t)v27);
      *(void *)(a1 + 48) = v26;
      unint64_t v7 = v30;
    }
    unint64_t v15 = (char *)sub_11D4814(a3, (uint64_t)v26, (unsigned __int8 *)v7);
LABEL_43:
    uint64_t v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 == 16)
  {
    uint64_t v22 = v7 + 1;
    unint64_t v23 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v25 = v23 + (v24 << 7);
    unint64_t v23 = (v25 - 128);
    if (v24 < 0)
    {
      uint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v25 - 128));
      if (!v30) {
        return 0;
      }
      unint64_t v23 = v28;
    }
    else
    {
      uint64_t v22 = v7 + 2;
LABEL_35:
      uint64_t v30 = v22;
    }
    if (v23 > 1)
    {
      if (*v6) {
        uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v23, v29);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 56) = v23;
    }
    goto LABEL_44;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v30;
    }
    unint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_43;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

uint64_t sub_11D4814(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D35D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11D48A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D3BD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11D4934(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_11D37C4(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_11D3F30(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_11D4B5C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11D41F0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_11D38DC(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11D4C7C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DD9D0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v10 = *(std::string **)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        int v10 = (std::string *)sub_11D50E4((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        int v13 = *(uint64_t (****)(uint64_t))(a2 + 48);
      }
      else {
        int v13 = &off_252D548;
      }
      sub_11D2930(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11D4DBC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 40) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_11D4E18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.rio.RioETAResponse");
}

uint64_t sub_11D4E28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249A700;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_11D4EA4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_249A780;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_WORD *)(v2 + 48) = 0;
  return result;
}

void *sub_11D4F24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = &off_249A800;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void *sub_11D4FC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_249A880;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_11D5048(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249A900;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  return result;
}

void *sub_11D50E4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249A980;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_11D516C(uint64_t a1)
{
  if (!a1)
  {
    sub_11DDA5C();
  }

  return sub_11D3A14(v3, a1, 0);
}

uint64_t sub_11D51C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249AA80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_11D526C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_11DDAC8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D5318(uint64_t a1)
{
  sub_11D526C(a1);

  operator delete();
}

uint64_t sub_11D5350(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11D5350(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 0x1E) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
    *(unsigned char *)(v1 + 80) = 0;
    *(void *)(v1 + 72) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_11D5414(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          *(void *)uint64_t v38 = v12 + 1;
          int v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_11D6D7C(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
          }
          uint64_t v12 = (char *)sub_11D57A8(a3, v15);
          *(void *)uint64_t v38 = v12;
          if (!v12) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_48;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        unint64_t v17 = v8 + 1;
        uint64_t v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v38 = v32;
          *(unsigned char *)(a1 + 80) = v33 != 0;
          if (!v32) {
            goto LABEL_59;
          }
        }
        else
        {
          unint64_t v17 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v38 = v17;
          *(unsigned char *)(a1 + 80) = v18 != 0;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        v5 |= 2u;
        unint64_t v20 = v8 + 1;
        uint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v21);
          *(void *)uint64_t v38 = v34;
          *(void *)(a1 + 56) = v35;
          if (!v34) {
            goto LABEL_59;
          }
        }
        else
        {
          unint64_t v20 = v8 + 2;
LABEL_28:
          *(void *)uint64_t v38 = v20;
          *(void *)(a1 + 56) = v21;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 32) {
          goto LABEL_40;
        }
        v5 |= 4u;
        uint64_t v23 = v8 + 1;
        uint64_t v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v24);
          *(void *)uint64_t v38 = v36;
          *(void *)(a1 + 64) = v37;
          if (!v36) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_33:
          *(void *)uint64_t v38 = v23;
          *(void *)(a1 + 64) = v24;
        }
        goto LABEL_48;
      case 5u:
        if (v9 != 41) {
          goto LABEL_40;
        }
        v5 |= 8u;
        *(void *)(a1 + 72) = *(void *)v8;
        *(void *)uint64_t v38 = v8 + 8;
        goto LABEL_48;
      case 6u:
        if (v9 != 50) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v27 = (uint64_t *)*v27;
        }
        unint64_t v28 = (std::string *)sub_1880F84((void *)(a1 + 48), v27);
        uint64_t v29 = (void *)sub_188C244(v28, *(char **)v38, (uint64_t)a3);
        goto LABEL_47;
      default:
LABEL_40:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v38;
          }
          uint64_t v29 = sub_1885AC0(v9, v31, v8, a3);
LABEL_47:
          *(void *)uint64_t v38 = v29;
          if (!v29) {
            goto LABEL_59;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v38;
    }
  }
}

uint64_t sub_11D57A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D5414(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11D5838(uint64_t a1, unsigned char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = (unsigned char *)sub_11D5838(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v12 = *(unsigned char *)(a1 + 80);
    *a2 = 16;
    a2[1] = v12;
    a2 += 2;
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v13 = *(void *)(a1 + 56);
    *a2 = 24;
    a2[1] = v13;
    if (v13 > 0x7F)
    {
      a2[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      a2[2] = v13 >> 7;
      a2 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *a2++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v16 = *(void *)(a1 + 64);
    *a2 = 32;
    a2[1] = v16;
    if (v16 > 0x7F)
    {
      a2[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      a2[2] = v16 >> 7;
      a2 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *a2++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v19 = *(void *)(a1 + 72);
    *a2 = 41;
    *(void *)(a2 + 1) = v19;
    a2 += 9;
  }
  if (v11) {
    a2 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return (uint64_t)a2;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if (*a3 - (void)a2 >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(a2, v23, (int)v24);
    a2 += v25;
    return (uint64_t)a2;
  }

  return sub_188A528(a3, (char *)v23, v24, a2);
}

uint64_t sub_11D5B08(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11D5B08(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_19;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v8 & 4) != 0) {
LABEL_13:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_14:
  uint64_t v9 = v2 + 9;
  if ((v8 & 8) == 0) {
    uint64_t v9 = v2;
  }
  if ((v8 & 0x10) != 0) {
    uint64_t v2 = v9 + 2;
  }
  else {
    uint64_t v2 = v9;
  }
LABEL_19:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v15 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11D5C74(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *(unsigned int *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = *(void *)(a2 + 40) + 8;
    uint64_t v6 = sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_11DDBC8(&v3[1], v6, v5, v4, (*(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1])));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (_DWORD *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      _DWORD *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      int v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_20;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      v3[3].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_21:
    v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11D5DD4()
{
  return 1;
}

void *sub_11D5DDC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.FeatureValue");
}

void *sub_11D5DEC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 4));
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D5E70(void *a1)
{
  sub_11D5DEC(a1);

  operator delete();
}

uint64_t sub_11D5EA8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 24) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11D5EC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v27 + 2;
      }
    }
    uint64_t v27 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 16)
      {
        unint64_t v17 = v7 - 1;
        while (1)
        {
          uint64_t v27 = v17 + 1;
          int v18 = v17[1];
          if (v17[1] < 0)
          {
            int v19 = v18 + (v17[2] << 7);
            int v18 = v19 - 128;
            if (v17[2] < 0)
            {
              unint64_t v17 = (char *)sub_188C0D0((uint64_t)(v17 + 1), v19 - 128);
              int v18 = v20;
            }
            else
            {
              v17 += 3;
            }
          }
          else
          {
            v17 += 2;
          }
          uint64_t v27 = v17;
          uint64_t v21 = *(unsigned int *)(a1 + 32);
          if (v21 == *(_DWORD *)(a1 + 36))
          {
            int v22 = v21 + 1;
            sub_188C80C((unsigned int *)(a1 + 32), v21 + 1);
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v21) = v18;
            unint64_t v17 = v27;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 40) + 4 * v21) = v18;
            int v22 = v21 + 1;
          }
          *(_DWORD *)(a1 + 32) = v22;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 16) {
            goto LABEL_51;
          }
        }
      }
      if (v8 == 18)
      {
        uint64_t v23 = (unsigned int *)(a1 + 32);
        goto LABEL_42;
      }
    }
    else if (v8 >> 3 == 1)
    {
      if (v8 == 8)
      {
        int v11 = v7 - 1;
        while (1)
        {
          uint64_t v27 = v11 + 1;
          int v12 = v11[1];
          if (v11[1] < 0)
          {
            int v13 = v12 + (v11[2] << 7);
            int v12 = v13 - 128;
            if (v11[2] < 0)
            {
              int v11 = (char *)sub_188C0D0((uint64_t)(v11 + 1), v13 - 128);
              int v12 = v14;
            }
            else
            {
              v11 += 3;
            }
          }
          else
          {
            v11 += 2;
          }
          uint64_t v27 = v11;
          uint64_t v15 = *(unsigned int *)(a1 + 16);
          if (v15 == *(_DWORD *)(a1 + 20))
          {
            int v16 = v15 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v15 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            int v11 = v27;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v15) = v12;
            int v16 = v15 + 1;
          }
          *(_DWORD *)(a1 + 16) = v16;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 8) {
            goto LABEL_51;
          }
        }
      }
      if (v8 == 10)
      {
        uint64_t v23 = (unsigned int *)(a1 + 16);
LABEL_42:
        uint64_t v24 = sub_188C2CC(v23, (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_50;
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v27;
    }
    uint64_t v24 = sub_1885AC0(v8, v26, v7, a3);
LABEL_50:
    uint64_t v27 = (char *)v24;
    if (!v24) {
      return 0;
    }
LABEL_51:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      return v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v27;
  }
  return 0;
}

char *sub_11D61A0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 32);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v13 = *(_DWORD *)(*(void *)(a1 + 40) + 4 * j);
      *__dst = 16;
      __dst[1] = v13;
      if (v13 > 0x7F)
      {
        __dst[1] = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        __dst[2] = v13 >> 7;
        __dst += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v15 = v14 >> 14;
            v14 >>= 7;
            *__dst++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_11D638C(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 16);
  uint64_t result = v2 + sub_188D4F0((unsigned int *)(a1 + 32)) + v3 + *(unsigned int *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 48) = result;
  return result;
}

std::string *sub_11D640C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  int v8 = *(_DWORD *)(a2 + 32);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[1]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[1], v9 + v8);
    std::string::size_type v10 = v3[1].__r_.__value_.__r.__words[2];
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 32);
    uint64_t result = (std::string *)memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 40), 4 * *(int *)(a2 + 32));
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11D64F4()
{
  return 1;
}

void *sub_11D64FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.RouteFeatures");
}

void *sub_11D650C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DDAC8(a1 + 8);
  sub_1889DE8(a1 + 5);
  sub_11DDB48(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D65A0(void *a1)
{
  sub_11D650C(a1);

  operator delete();
}

uint64_t sub_11D65D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (uint64_t **)(a1 + 40);
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = (char *)(*(void *)v35 + 1);
      unsigned int v9 = **(unsigned char **)v35;
      if ((char)**(unsigned char **)v35 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          int v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          int v8 = (char *)(*(void *)v35 + 2);
        }
      }
      *(void *)uint64_t v35 = v8;
      unsigned int v12 = v9 >> 3;
      if (v9 >> 3 == 3)
      {
        if (v9 == 26)
        {
          uint64_t v16 = v8 - 1;
          while (1)
          {
            unint64_t v17 = (unsigned __int8 *)(v16 + 1);
            *(void *)uint64_t v35 = v16 + 1;
            unint64_t v18 = *(_DWORD **)(a1 + 80);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 72), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 72) = v19 + 1;
              uint64_t v20 = *(void *)&v18[2 * v19 + 2];
            }
            else
            {
              uint64_t v21 = sub_11D6D7C(*(void *)(a1 + 64));
              uint64_t v20 = sub_188CDC8(a1 + 64, v21);
              unint64_t v17 = *(unsigned __int8 **)v35;
            }
            uint64_t v16 = (char *)sub_11D57A8(a3, v20, v17);
            *(void *)uint64_t v35 = v16;
            if (!v16) {
              goto LABEL_57;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
              goto LABEL_52;
            }
          }
        }
      }
      else if (v12 == 2)
      {
        if (v9 == 18)
        {
          int v22 = v8 - 1;
          while (1)
          {
            uint64_t v23 = (char *)(v22 + 1);
            *(void *)uint64_t v35 = v22 + 1;
            uint64_t v24 = *(_DWORD **)(a1 + 56);
            if (v24 && (uint64_t v25 = *(int *)(a1 + 48), (int)v25 < *v24))
            {
              *(_DWORD *)(a1 + 48) = v25 + 1;
              uint64_t v26 = *(std::string **)&v24[2 * v25 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              void *v28 = v27;
              v28[1] = sub_3A6EDC;
              void *v27 = 0;
              v27[1] = 0;
              int v27[2] = 0;
              uint64_t v26 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v27);
              uint64_t v23 = *(char **)v35;
            }
            int v22 = sub_188C244(v26, v23, (uint64_t)a3);
            *(void *)uint64_t v35 = v22;
            if (!v22) {
              goto LABEL_57;
            }
            if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
              goto LABEL_52;
            }
          }
        }
      }
      else if (v12 == 1 && v9 == 10)
      {
        uint64_t v29 = v8 - 1;
        while (1)
        {
          BOOL v30 = (unsigned __int8 *)(v29 + 1);
          *(void *)uint64_t v35 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 32);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 24), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 24) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_11D6E28(*(void *)(a1 + 16));
            uint64_t v33 = sub_188CDC8(a1 + 16, v34);
            BOOL v30 = *(unsigned __int8 **)v35;
          }
          uint64_t v29 = sub_11D690C(a3, v33, v30);
          *(void *)uint64_t v35 = v29;
          if (!v29) {
            goto LABEL_57;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 10) {
            goto LABEL_52;
          }
        }
      }
      if (!v9 || (v9 & 7) == 4) {
        break;
      }
      if (*v7)
      {
        unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v8 = *(char **)v35;
      }
      *(void *)uint64_t v35 = sub_1885AC0(v9, v15, v8, a3);
      if (!*(void *)v35) {
        goto LABEL_57;
      }
LABEL_52:
      if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
        return *(void *)v35;
      }
    }
    if (v8)
    {
      a3[10].i32[0] = v9 - 1;
      return *(void *)v35;
    }
LABEL_57:
    *(void *)uint64_t v35 = 0;
  }
  return *(void *)v35;
}

char *sub_11D690C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D5EC0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11D699C(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 48);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11D61A0(v8, v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 48);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 8 * v11;
    do
    {
      unsigned int v14 = *(void **)(*(void *)(a1 + 56) + v12 + 8);
      if (*((char *)v14 + 23) < 0)
      {
        int64_t v15 = v14[1];
        if (v15 > 127) {
          goto LABEL_20;
        }
      }
      else
      {
        int64_t v15 = *((unsigned __int8 *)v14 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v15)
      {
        *__dst = 18;
        __dst[1] = v15;
        if (*((char *)v14 + 23) < 0) {
          unsigned int v14 = (void *)*v14;
        }
        uint64_t v16 = __dst + 2;
        memcpy(v16, v14, v15);
        __dst = &v16[v15];
        goto LABEL_18;
      }
LABEL_20:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v14, __dst);
LABEL_18:
      v12 += 8;
    }
    while (v13 != v12);
  }
  int v17 = *(_DWORD *)(a1 + 72);
  if (v17)
  {
    for (int j = 0; j != v17; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *__dst = 26;
      unsigned int v20 = *(_DWORD *)(v19 + 20);
      __dst[1] = v20;
      if (v20 > 0x7F) {
        uint64_t v21 = sub_188A9CC(v20, __dst + 1);
      }
      else {
        uint64_t v21 = __dst + 2;
      }
      __dst = (char *)sub_11D5838(v19, v21, a3);
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return __dst;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(__dst, v25, (int)v26);
    __dst += v27;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, __dst);
}

uint64_t sub_11D6C0C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11D638C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  if ((int)v8 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 72);
  uint64_t v15 = v9 + v14;
  uint64_t v16 = *(void *)(a1 + 80);
  if (v16) {
    int v17 = (uint64_t *)(v16 + 8);
  }
  else {
    int v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_11D5B08(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v15 += v24;
  }
  *(_DWORD *)(a1 + 88) = v15;
  return v15;
}

uint64_t sub_11D6D64()
{
  return 1;
}

void *sub_11D6D6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.ResponseFeatures");
}

uint64_t sub_11D6D7C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249AB00;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = 0;
  *(unsigned char *)(result + 80) = 0;
  return result;
}

uint64_t sub_11D6E28(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249AB80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_11D6ED0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249AC00;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a1;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

uint64_t sub_11D6F80(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = &off_249AC80;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_11DDD60(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unsigned int v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_11D7060(_Unwind_Exception *a1)
{
  sub_11DDCE0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_11D70A4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DDCE0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D7124(void *a1)
{
  sub_11D70A4(a1);

  operator delete();
}

char *sub_11D715C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_152D8F0(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_11D72FC(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_11D72FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_152B810(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11D738C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_152C100(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_11D74D0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_152C99C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void *sub_11D7580@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.transit.IncidentSnapshot");
}

uint64_t sub_11D7590(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249AC80;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_11D7630(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = &off_249AD00;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_11D76AC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_11D76DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D7750(void *a1)
{
  sub_11D76DC(a1);

  operator delete();
}

uint64_t sub_11D7788(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11D77A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v14 = v7 + 1;
    LODWORD(v13) = *v7;
    if ((v13 & 0x80) == 0) {
      goto LABEL_19;
    }
    int v15 = *v14;
    uint64_t v13 = v13 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v14 = v7 + 2;
LABEL_19:
      uint64_t v19 = v14;
      *(_DWORD *)(a1 + 24) = v13;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v13);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11D791C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_11D7A44(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11D7AB8()
{
  return 1;
}

void *sub_11D7AC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.transit.RealtimeSnapshotMetaData");
}

uint64_t sub_11D7AD0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = &off_249AD80;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DDE6C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_11D7BF4()
{
}

uint64_t sub_11D7C58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252D6B8)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_11D76DC(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_11DDDEC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11D7D1C(uint64_t a1)
{
  sub_11D7C58(a1);

  operator delete();
}

char *sub_11D7D54(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    unint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_11D831C((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_11D7F5C(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    unint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    int v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      unint64_t v23 = v15 + 1;
      int v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_152D700(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      int v15 = (char *)sub_11D7FEC(a3, v19, v16);
      unint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_11D7F5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11D77A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11D7FEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1528580(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11D807C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_11D791C(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1528BCC(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11D8228(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15290C4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_11D7A44(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_11D830C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.transit.RealtimeSnapshot");
}

uint64_t sub_11D831C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249AD00;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_11D8398(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249AD80;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

void sub_11D8434()
{
}

uint64_t sub_11D8488(uint64_t a1, uint64_t a2)
{
  return sub_11979C8(a2);
}

uint64_t sub_11D8490(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8498()
{
}

void *sub_11D84F4(uint64_t a1, uint64_t a2)
{
  return sub_1197A48(a2);
}

uint64_t sub_11D84FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8504()
{
}

uint64_t sub_11D8560(uint64_t a1, uint64_t a2)
{
  return sub_1197AEC(a2);
}

uint64_t sub_11D8568(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8570()
{
}

uint64_t sub_11D85CC(uint64_t a1, uint64_t a2)
{
  return sub_119F3AC(a2);
}

uint64_t sub_11D85D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D85DC()
{
}

void *sub_11D8644(uint64_t a1, uint64_t a2)
{
  return sub_119F434(a2);
}

uint64_t sub_11D864C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8654()
{
}

uint64_t sub_11D86A4(uint64_t a1, uint64_t a2)
{
  return sub_119DD20(a2);
}

uint64_t sub_11D86AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D86B4()
{
}

double sub_11D872C(uint64_t a1, uint64_t a2)
{
  return sub_119DD9C(a2);
}

uint64_t sub_11D8734(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D873C()
{
}

uint64_t sub_11D8794(uint64_t a1, uint64_t a2)
{
  return sub_119DE70(a2);
}

uint64_t sub_11D879C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D87A4()
{
}

double sub_11D880C(uint64_t a1, uint64_t a2)
{
  return sub_119DF10(a2);
}

uint64_t sub_11D8814(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D881C()
{
}

uint64_t sub_11D8870(uint64_t a1, uint64_t a2)
{
  return sub_119DFA4(a2);
}

uint64_t sub_11D8878(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8880()
{
}

void *sub_11D88D0(uint64_t a1, uint64_t a2)
{
  return sub_119E048(a2);
}

uint64_t sub_11D88D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D88E0()
{
}

void *sub_11D8930(uint64_t a1, uint64_t a2)
{
  return sub_119E0C4(a2);
}

uint64_t sub_11D8938(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8940()
{
}

void *sub_11D898C(uint64_t a1, uint64_t a2)
{
  return sub_11A1348(a2);
}

uint64_t sub_11D8994(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D899C()
{
}

void *sub_11D89EC(uint64_t a1, uint64_t a2)
{
  return sub_11A13C0(a2);
}

uint64_t sub_11D89F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D89FC()
{
}

uint64_t sub_11D8A54(uint64_t a1, uint64_t a2)
{
  return sub_11A1458(a2);
}

uint64_t sub_11D8A5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_11D8A64()
{
}

uint64_t sub_11D8AB8(uint64_t a1, uint64_t a2)
{
  return sub_11A14FC(a2);
}

uint64_t sub_11D8AC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8AC8()
{
}

void *sub_11D8B1C(uint64_t a1, uint64_t a2)
{
  return sub_11CFEF0(a2);
}

uint64_t sub_11D8B24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8B2C()
{
}

void *sub_11D8B7C(uint64_t a1, uint64_t a2)
{
  return sub_11CFF70(a2);
}

uint64_t sub_11D8B84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8B8C()
{
}

uint64_t sub_11D8BFC(uint64_t a1, uint64_t a2)
{
  return sub_11CFFEC(a2);
}

uint64_t sub_11D8C04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8C0C()
{
}

uint64_t sub_11D8C68(uint64_t a1, uint64_t a2)
{
  return sub_11D00B4(a2);
}

uint64_t sub_11D8C70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8C78()
{
}

double sub_11D8CD8(uint64_t a1, uint64_t a2)
{
  return sub_11D0164(a2);
}

uint64_t sub_11D8CE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8CE8()
{
}

uint64_t sub_11D8D44(uint64_t a1, uint64_t a2)
{
  return sub_11D022C(a2);
}

uint64_t sub_11D8D4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8D54()
{
}

void *sub_11D8DB0(uint64_t a1, uint64_t a2)
{
  return sub_11D02B4(a2);
}

uint64_t sub_11D8DB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8DC0()
{
}

uint64_t sub_11D8E14(uint64_t a1, uint64_t a2)
{
  return sub_11D033C(a2);
}

uint64_t sub_11D8E1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8E24()
{
}

double sub_11D8E74(uint64_t a1, uint64_t a2)
{
  return sub_11D03E0(a2);
}

uint64_t sub_11D8E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8E84()
{
}

uint64_t sub_11D8ED8(uint64_t a1, uint64_t a2)
{
  return sub_11D045C(a2);
}

uint64_t sub_11D8EE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8EE8()
{
}

uint64_t sub_11D8F40(uint64_t a1, uint64_t a2)
{
  return sub_11D04F8(a2);
}

uint64_t sub_11D8F48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_11D8F50()
{
}

double sub_11D8FA4(uint64_t a1, uint64_t a2)
{
  return sub_11D059C(a2);
}

uint64_t sub_11D8FAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D8FB4()
{
}

void *sub_11D9004(uint64_t a1, uint64_t a2)
{
  return sub_11D061C(a2);
}

uint64_t sub_11D900C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9014()
{
}

void *sub_11D9060(uint64_t a1, uint64_t a2)
{
  return sub_11D0698(a2);
}

uint64_t sub_11D9068(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9070()
{
}

uint64_t sub_11D90C0(uint64_t a1, uint64_t a2)
{
  return sub_11D0710(a2);
}

uint64_t sub_11D90C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D90D0()
{
}

uint64_t sub_11D912C(uint64_t a1, uint64_t a2)
{
  return sub_11D078C(a2);
}

uint64_t sub_11D9134(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D913C()
{
}

void *sub_11D918C(uint64_t a1, uint64_t a2)
{
  return sub_11D0814(a2);
}

uint64_t sub_11D9194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D919C()
{
}

void *sub_11D91F0(uint64_t a1, uint64_t a2)
{
  return sub_11D0890(a2);
}

uint64_t sub_11D91F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9200()
{
}

double sub_11D926C(uint64_t a1, uint64_t a2)
{
  return sub_11D0930(a2);
}

uint64_t sub_11D9274(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D927C()
{
}

uint64_t sub_11D92E4(uint64_t a1, uint64_t a2)
{
  return sub_11D09E8(a2);
}

uint64_t sub_11D92EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

void sub_11D92F4()
{
}

uint64_t sub_11D9354(uint64_t a1, uint64_t a2)
{
  return sub_11D0AC0(a2);
}

uint64_t sub_11D935C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

void sub_11D9364()
{
}

void *sub_11D93B8(uint64_t a1, uint64_t a2)
{
  return sub_11D0B84(a2);
}

uint64_t sub_11D93C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

void sub_11D93C8()
{
}

uint64_t sub_11D9428(uint64_t a1, uint64_t a2)
{
  return sub_11D0C24(a2);
}

uint64_t sub_11D9430(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9438()
{
}

uint64_t sub_11D9488(uint64_t a1, uint64_t a2)
{
  return sub_11D0CE4(a2);
}

uint64_t sub_11D9490(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9498()
{
}

uint64_t sub_11D94FC(uint64_t a1, uint64_t a2)
{
  return sub_11D6D7C(a2);
}

uint64_t sub_11D9504(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D950C()
{
}

uint64_t sub_11D9560(uint64_t a1, uint64_t a2)
{
  return sub_11D6E28(a2);
}

uint64_t sub_11D9568(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_11D9570()
{
}

uint64_t sub_11D95C8(uint64_t a1, uint64_t a2)
{
  return sub_11D6ED0(a2);
}

uint64_t sub_11D95D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_11D95D8()
{
}

uint64_t sub_11D962C(uint64_t a1, uint64_t a2)
{
  return sub_11D7590(a2);
}

uint64_t sub_11D9634(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_11D963C()
{
}

uint64_t sub_11D968C(uint64_t a1, uint64_t a2)
{
  return sub_11D831C(a2);
}

uint64_t sub_11D9694(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D969C()
{
}

void *sub_11D96F0(uint64_t a1, uint64_t a2)
{
  return sub_11D8398(a2);
}

uint64_t sub_11D96F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9700()
{
}

void *sub_11D975C(uint64_t a1, uint64_t a2)
{
  return sub_11BDE58(a2);
}

uint64_t sub_11D9764(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D976C()
{
}

uint64_t sub_11D97C4(uint64_t a1, uint64_t a2)
{
  return sub_11BDF08(a2);
}

uint64_t sub_11D97CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_11D97D4()
{
}

uint64_t sub_11D9828(uint64_t a1, uint64_t a2)
{
  return sub_11BDFBC(a2);
}

uint64_t sub_11D9830(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_11D9838()
{
}

void *sub_11D989C(uint64_t a1, uint64_t a2)
{
  return sub_11BE05C(a2);
}

uint64_t sub_11D98A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D98AC()
{
}

void *sub_11D98F8(uint64_t a1, uint64_t a2)
{
  return sub_11BE108(a2);
}

uint64_t sub_11D9900(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9908()
{
}

uint64_t sub_11D9958(uint64_t a1, uint64_t a2)
{
  return sub_11BE180(a2);
}

uint64_t sub_11D9960(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9968()
{
}

uint64_t sub_11D99BC(uint64_t a1, uint64_t a2)
{
  return sub_11BE1FC(a2);
}

uint64_t sub_11D99C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_11D99CC()
{
}

double sub_11D9A24(uint64_t a1, uint64_t a2)
{
  return sub_11BE29C(a2);
}

uint64_t sub_11D9A2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9A34()
{
}

void *sub_11D9A88(uint64_t a1, uint64_t a2)
{
  return sub_11BE320(a2);
}

uint64_t sub_11D9A90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9A98()
{
}

void *sub_11D9AE8(uint64_t a1, uint64_t a2)
{
  return sub_11BE3BC(a2);
}

uint64_t sub_11D9AF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9AF8()
{
}

uint64_t sub_11D9B48(uint64_t a1, uint64_t a2)
{
  return sub_11BE438(a2);
}

uint64_t sub_11D9B50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9B58()
{
}

uint64_t sub_11D9BA8(uint64_t a1, uint64_t a2)
{
  return sub_11BE4B4(a2);
}

uint64_t sub_11D9BB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9BB8()
{
}

uint64_t sub_11D9C08(uint64_t a1, uint64_t a2)
{
  return sub_11BE530(a2);
}

uint64_t sub_11D9C10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9C18()
{
}

uint64_t sub_11D9C68(uint64_t a1, uint64_t a2)
{
  return sub_11BE5AC(a2);
}

uint64_t sub_11D9C70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9C78()
{
}

uint64_t sub_11D9CC8(uint64_t a1, uint64_t a2)
{
  return sub_11BE628(a2);
}

uint64_t sub_11D9CD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9CD8()
{
}

uint64_t sub_11D9D28(uint64_t a1, uint64_t a2)
{
  return sub_11BE6A4(a2);
}

uint64_t sub_11D9D30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9D38()
{
}

double sub_11D9D90(uint64_t a1, uint64_t a2)
{
  return sub_11BE720(a2);
}

uint64_t sub_11D9D98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9DA0()
{
}

void *sub_11D9DF4(uint64_t a1, uint64_t a2)
{
  return sub_11BE7A4(a2);
}

uint64_t sub_11D9DFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9E04()
{
}

uint64_t sub_11D9E6C(uint64_t a1, uint64_t a2)
{
  return sub_11BE844(a2);
}

uint64_t sub_11D9E74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9E7C()
{
}

void *sub_11D9ECC(uint64_t a1, uint64_t a2)
{
  return sub_11BE910(a2);
}

uint64_t sub_11D9ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9EDC()
{
}

uint64_t sub_11D9F34(uint64_t a1, uint64_t a2)
{
  return sub_11BE98C(a2);
}

uint64_t sub_11D9F3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9F44()
{
}

void *sub_11D9F90(uint64_t a1, uint64_t a2)
{
  return sub_11BEA2C(a2);
}

uint64_t sub_11D9F98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11D9FA0()
{
}

uint64_t sub_11D9FEC(uint64_t a1, uint64_t a2)
{
  return sub_11BEAA4(a2);
}

uint64_t sub_11D9FF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_11D9FFC()
{
}

void *sub_11DA048(uint64_t a1, uint64_t a2)
{
  return sub_11BEB1C(a2);
}

uint64_t sub_11DA050(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA058()
{
}

void *sub_11DA0B4(uint64_t a1, uint64_t a2)
{
  return sub_11BEB94(a2);
}

uint64_t sub_11DA0BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA0C4()
{
}

uint64_t sub_11DA118(uint64_t a1, uint64_t a2)
{
  return sub_11BEC44(a2);
}

uint64_t sub_11DA120(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA128()
{
}

uint64_t sub_11DA178(uint64_t a1, uint64_t a2)
{
  return sub_11BECE0(a2);
}

uint64_t sub_11DA180(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA188()
{
}

void *sub_11DA1E0(uint64_t a1, uint64_t a2)
{
  return sub_11BED5C(a2);
}

uint64_t sub_11DA1E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA1F0()
{
}

double sub_11DA240(uint64_t a1, uint64_t a2)
{
  return sub_11BEDE0(a2);
}

uint64_t sub_11DA248(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA250()
{
}

double sub_11DA2C4(uint64_t a1, uint64_t a2)
{
  return sub_11BEE5C(a2);
}

uint64_t sub_11DA2CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA2D4()
{
}

uint64_t sub_11DA338(uint64_t a1, uint64_t a2)
{
  return sub_11BEF40(a2);
}

uint64_t sub_11DA340(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA348()
{
}

void *sub_11DA394(uint64_t a1, uint64_t a2)
{
  return sub_11BF00C(a2);
}

uint64_t sub_11DA39C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA3A4()
{
}

void *sub_11DA410(uint64_t a1, uint64_t a2)
{
  return sub_11BF084(a2);
}

uint64_t sub_11DA418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA420()
{
}

uint64_t sub_11DA47C(uint64_t a1, uint64_t a2)
{
  return sub_11BF140(a2);
}

uint64_t sub_11DA484(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA48C()
{
}

uint64_t sub_11DA4E0(uint64_t a1, uint64_t a2)
{
  return sub_11BF1C8(a2);
}

uint64_t sub_11DA4E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA4F0()
{
}

double sub_11DA544(uint64_t a1, uint64_t a2)
{
  return sub_11BF264(a2);
}

uint64_t sub_11DA54C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA554()
{
}

uint64_t sub_11DA5BC(uint64_t a1, uint64_t a2)
{
  return sub_11BF2E4(a2);
}

uint64_t sub_11DA5C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA5CC()
{
}

void *sub_11DA61C(uint64_t a1, uint64_t a2)
{
  return sub_11BF398(a2);
}

uint64_t sub_11DA624(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA62C()
{
}

double sub_11DA690(uint64_t a1, uint64_t a2)
{
  return sub_11BF414(a2);
}

uint64_t sub_11DA698(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA6A0()
{
}

double sub_11DA708(uint64_t a1, uint64_t a2)
{
  return sub_11BF4A4(a2);
}

uint64_t sub_11DA710(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA718()
{
}

void *sub_11DA778(uint64_t a1, uint64_t a2)
{
  return sub_11BF538(a2);
}

uint64_t sub_11DA780(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA788()
{
}

uint64_t sub_11DA7DC(uint64_t a1, uint64_t a2)
{
  return sub_11BF5E8(a2);
}

uint64_t sub_11DA7E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_11DA7EC()
{
}

uint64_t sub_11DA848(uint64_t a1, uint64_t a2)
{
  return sub_11BF688(a2);
}

uint64_t sub_11DA850(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA858()
{
}

double sub_11DA8BC(uint64_t a1, uint64_t a2)
{
  return sub_11BF738(a2);
}

uint64_t sub_11DA8C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA8CC()
{
}

uint64_t sub_11DA91C(uint64_t a1, uint64_t a2)
{
  return sub_11D4E28(a2);
}

uint64_t sub_11DA924(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA92C()
{
}

double sub_11DA980(uint64_t a1, uint64_t a2)
{
  return sub_11D4EA4(a2);
}

uint64_t sub_11DA988(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA990()
{
}

void *sub_11DA9E4(uint64_t a1, uint64_t a2)
{
  return sub_11D4F24(a2);
}

uint64_t sub_11DA9EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DA9F4()
{
}

void *sub_11DAA50(uint64_t a1, uint64_t a2)
{
  return sub_11D4FC0(a2);
}

uint64_t sub_11DAA58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DAA60()
{
}

uint64_t sub_11DAAB4(uint64_t a1, uint64_t a2)
{
  return sub_11D5048(a2);
}

uint64_t sub_11DAABC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DAAC4()
{
}

void *sub_11DAB20(uint64_t a1, uint64_t a2)
{
  return sub_11D50E4(a2);
}

uint64_t sub_11DAB28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DAB30()
{
}

void sub_11DAB78()
{
}

uint64_t sub_11DAB9C(uint64_t a1, uint64_t a2)
{
  return sub_11D516C(a2);
}

uint64_t sub_11DABA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_11DABAC()
{
}

uint64_t sub_11DAC00(uint64_t a1, uint64_t a2)
{
  return sub_11D51C8(a2);
}

uint64_t sub_11DAC08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_11DAC10(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_119D224(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DAC90(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_119D828(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DAD10(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_119813C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DAD90(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_119B2C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_11DAE10(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_119E048(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DAE8C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DAE8C(uint64_t a1, std::string *a2)
{
  return sub_119A204(a2, a1);
}

std::string *sub_11DAE9C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_119E0C4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11131F8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_11DAF18(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_119DD9C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DAF94(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_11DAF94(uint64_t a1, uint64_t a2)
{
}

void sub_11DAFA4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_119DF10(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DB020(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_11DB020(uint64_t a1, uint64_t a2)
{
}

void sub_11DB030(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_119E140(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_11DB0B0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_119F3AC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DB12C(uint64_t a1, std::string *a2)
{
  return sub_119E644(a2, a1);
}

void sub_11DB13C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_119F4F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB1BC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15BAAB4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB23C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_119FA14(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB2BC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_11A1348(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DB338(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DB338(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_11DB348(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_15C2114(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_11DB3C4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_11A13C0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DB440(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DB440(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_11DB450(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 32) = 0;
      *(_DWORD *)(result + 56) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

uint64_t sub_11DB4B8(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 32) = 0;
      *(_DWORD *)(result + 56) = 0;
      *(_DWORD *)(result + 80) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

uint64_t sub_11DB524(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 24) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

uint64_t sub_11DB588(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(result + 8) = 0;
      *(_DWORD *)(result + 24) = 0;
      *(_DWORD *)(result + 40) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

uint64_t sub_11DB5F0(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      uint64_t result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_WORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void sub_11DB654(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11A1FE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB6D4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B94C0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB754(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11A48F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB7D4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B0994();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB854(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11A6584(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB8D4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11A9DB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB954(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11ACE6C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DB9D4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11ADFC4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBA54(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11AD388(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBAD4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11AED58(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBB54(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11AA8DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBBD4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11AFA98(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBC54(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B0CAC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBCD4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11CE5E4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBD54(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B0230(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBDD4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B3560(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBE54(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B4858(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBED4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B6050(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBF54(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B6890(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DBFD4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11B740C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DC054(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11BAC48(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_11DC0D4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11BDF08(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DC150(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC150(uint64_t a1, std::string *a2)
{
  return sub_11A273C(a2, a1);
}

void sub_11DC160(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_11BF414(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DC1DC(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_11DC1DC(uint64_t a1, std::string *a2)
{
  return sub_11B9C54(a2, a1);
}

uint64_t *sub_11DC1EC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11BE180(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DC268(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC268(uint64_t a1, std::string *a2)
{
  return sub_1197FD8(a2, a1);
}

void sub_11DC278(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_11BE320(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DC2F4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DC2F4(uint64_t a1, uint64_t a2)
{
}

std::string *sub_11DC304(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11BE7A4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC380(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC380(uint64_t a1, std::string *a2)
{
  return sub_11AA758(a2, a1);
}

std::string *sub_11DC390(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11BE910(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC40C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC40C(uint64_t a1, std::string *a2)
{
  return sub_11AD324(a2, a1);
}

std::string *sub_11DC41C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11BEA2C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC498(uint64_t a1, std::string *a2)
{
  return sub_117EF04(a2, a1);
}

uint64_t *sub_11DC4A8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11BE98C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DC524(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC524(uint64_t a1, std::string *a2)
{
  return sub_11ADE74(a2, a1);
}

std::string *sub_11DC534(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11BEB94(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC5B0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC5B0(uint64_t a1, std::string *a2)
{
  return sub_11AF894(a2, a1);
}

void sub_11DC5C0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_11BE844(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DC63C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DC63C(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_11DC64C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11BEC44(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DC6C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC6C8(uint64_t a1, std::string *a2)
{
  return sub_11B012C(a2, a1);
}

void sub_11DC6D8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_11BEDE0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DC754(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_11DC754(uint64_t a1, uint64_t a2)
{
}

std::string *sub_11DC764(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11D0B84(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC7E0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC7E0(uint64_t a1, std::string *a2)
{
  return sub_11CECB4(a2, a1);
}

uint64_t *sub_11DC7F0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11BECE0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DC86C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC86C(uint64_t a1, std::string *a2)
{
  return sub_11B0678(a2, a1);
}

void sub_11DC87C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_11BEF40(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DC8F8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DC8F8(uint64_t a1, uint64_t a2)
{
}

std::string *sub_11DC908(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11BF00C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC984(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DC984(uint64_t a1, std::string *a2)
{
  return sub_11B4D00(a2, a1);
}

uint64_t *sub_11DC994(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11BF140(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DCA10(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DCA10(uint64_t a1, std::string *a2)
{
  return sub_11B6798(a2, a1);
}

uint64_t *sub_11DCA20(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11BF1C8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DCA9C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DCA9C(uint64_t a1, std::string *a2)
{
  return sub_11B72CC(a2, a1);
}

void sub_11DCAAC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_11BF264(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DCB28(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_11DCB28(uint64_t a1, std::string *a2)
{
  return sub_11B7E6C(a2, a1);
}

void sub_11DCB38(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_11BF538(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DCBB4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DCBB4(uint64_t a1, uint64_t a2)
{
}

void sub_11DCBC4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11C4780(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCC44(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11C4BF8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCCC4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11C56CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCD44(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11C9C4C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCDC4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11C76D8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCE44(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11C7FBC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCEC4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11C8BE8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCF44(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11CA6AC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DCFC4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11CDCB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DD044(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11CBB60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DD0C4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11CD088(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_11DD144(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11D022C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_11DD1C0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_11D02B4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DD23C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DD23C(uint64_t a1, uint64_t a2)
{
}

void sub_11DD24C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_11D033C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DD2C8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DD2C8(uint64_t a1, uint64_t a2)
{
}

void sub_11DD2D8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_11D078C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DD354(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DD354(uint64_t a1, uint64_t a2)
{
}

void sub_11DD364(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_11D04F8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DD3E0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DD3E0(uint64_t a1, uint64_t a2)
{
}

void sub_11DD3F0(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_11D059C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DD46C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_11DD46C(uint64_t a1, std::string *a2)
{
  return sub_11C8A68(a2, a1);
}

std::string *sub_11DD47C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11D061C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DD4F8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DD4F8(uint64_t a1, std::string *a2)
{
  return sub_11C9178(a2, a1);
}

std::string *sub_11DD508(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unsigned int v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_11D0814(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DD584(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DD584(uint64_t a1, std::string *a2)
{
  return sub_11CAD04(a2, a1);
}

uint64_t *sub_11DD594(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11D0AC0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DD610(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DD610(uint64_t a1, std::string *a2)
{
  return sub_11CE468(a2, a1);
}

void sub_11DD620(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_11D0930(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DD69C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_11DD69C(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_11DD6AC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11D09E8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DD728(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DD728(uint64_t a1, std::string *a2)
{
  return sub_11CDB2C(a2, a1);
}

void sub_11DD738(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11D126C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DD7B8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11D1BB8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DD838(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11D3AB4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DD8B8(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_11D4EA4(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DD934(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_11DD934(uint64_t a1, std::string *a2)
{
  return sub_11D1A98(a2, a1);
}

void sub_11DD944(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_11D4F24(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DD9C0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DD9C0(uint64_t a1, uint64_t a2)
{
}

void sub_11DD9D0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_11D516C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DDA4C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DDA4C(uint64_t a1, uint64_t a2)
{
}

void sub_11DDA5C()
{
}

void sub_11DDAA4()
{
}

void sub_11DDAC8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11D526C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DDB48(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11D5DEC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_11DDBC8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11D6D7C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DDC44(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DDC44(uint64_t a1, std::string *a2)
{
  return sub_11D5C74(a2, a1);
}

uint64_t *sub_11DDC54(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unsigned int v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_11D6E28(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DDCD0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_11DDCD0(uint64_t a1, std::string *a2)
{
  return sub_11D640C(a2, a1);
}

void sub_11DDCE0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_152B6B0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DDD60(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      *v10++ = sub_152D8F0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DDDDC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_11DDDDC(uint64_t a1, uint64_t a2)
{
}

void sub_11DDDEC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1528498();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_11DDE6C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unsigned int v10 = &a2[a5];
    do
    {
      sub_152D700(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DDEE8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_11DDEE8(uint64_t a1, uint64_t a2)
{
}

void sub_11DDEF8()
{
  dword_254E980 = 100;
  byte_254E984 = 0;
  sub_1882224((unint64_t)&off_254AE70, 100, 8, 0, 0);
  qword_254E988 = 101;
  sub_18829C0((unint64_t)&off_254AE70, 101, 14, 0, 0, (uint64_t)sub_15B0740);
  dword_254E990 = 100;
  byte_254E994 = 0;
  sub_1882224((unint64_t)&off_254AED8, 100, 8, 0, 0);
  dword_254E998 = 100;
  qword_254E9A0 = 0;
  sub_1882224((unint64_t)&off_254B768, 100, 4, 0, 0);
  dword_254E9A8 = 100;
  byte_254E9AC = 0;
  sub_1882224((unint64_t)&off_254B7C0, 100, 8, 0, 0);
  dword_254E9B0 = 1049;
  qword_254E9B8 = (uint64_t)&off_252C740;
  sub_1882AC4((unint64_t)&off_2541D38, 1049, 11, 0, 0, (uint64_t)&off_252C740);
  dword_254E9C0 = 1050;
  qword_254E9C8 = (uint64_t)&off_252C7B8;
  sub_1882AC4((unint64_t)&off_2541D38, 1050, 11, 0, 0, (uint64_t)&off_252C7B8);
  dword_254E9D0 = 1051;
  qword_254E9D8 = (uint64_t)&off_252D1C8;
  sub_1882AC4((unint64_t)&off_2541D38, 1051, 11, 1, 0, (uint64_t)&off_252D1C8);
  dword_254E9E0 = 1049;
  qword_254E9E8 = (uint64_t)&off_252C740;
  sub_1882AC4((unint64_t)&off_2537290, 1049, 11, 0, 0, (uint64_t)&off_252C740);
  dword_254E9F0 = 1049;
  qword_254E9F8 = (uint64_t)&off_252C740;
  sub_1882AC4((unint64_t)&off_2536EB0, 1049, 11, 0, 0, (uint64_t)&off_252C740);
  dword_254EA00 = 1050;
  qword_254EA08 = (uint64_t)&off_252D1C8;
  sub_1882AC4((unint64_t)&off_2536EB0, 1050, 11, 0, 0, (uint64_t)&off_252D1C8);
  dword_254EA10 = 1049;
  qword_254EA18 = (uint64_t)&off_252C740;
  sub_1882AC4((unint64_t)&off_25340E0, 1049, 11, 0, 0, (uint64_t)&off_252C740);
  dword_254EA20 = 501;
  qword_254EA28 = (uint64_t)&off_252CDA8;
  sub_1882AC4((unint64_t)&off_2541D08, 501, 11, 0, 0, (uint64_t)&off_252CDA8);
  dword_254EA30 = 1100;
  qword_254EA38 = (uint64_t)&off_252CDD0;
  sub_1882AC4((unint64_t)&off_25358A8, 1100, 11, 1, 0, (uint64_t)&off_252CDD0);
  dword_254EA40 = 1101;
  qword_254EA48 = (uint64_t)&off_252CE00;
  sub_1882AC4((unint64_t)&off_25358A8, 1101, 11, 1, 0, (uint64_t)&off_252CE00);
  dword_254EA50 = 1102;
  qword_254EA58 = (uint64_t)&off_252CE00;
  sub_1882AC4((unint64_t)&off_25358A8, 1102, 11, 1, 0, (uint64_t)&off_252CE00);
  dword_254EA60 = 1103;
  qword_254EA68 = (uint64_t)&off_252CE48;
  sub_1882AC4((unint64_t)&off_25358A8, 1103, 11, 0, 0, (uint64_t)&off_252CE48);
  qword_254EA70 = 1100;
  sub_18829C0((unint64_t)&off_25355F8, 1100, 14, 0, 0, (uint64_t)sub_1369B80);
  qword_254EA78 = 1101;
  sub_18829C0((unint64_t)&off_25355F8, 1101, 14, 0, 0, (uint64_t)sub_1369B80);
  qword_254EA80 = 1102;
  sub_18829C0((unint64_t)&off_25355F8, 1102, 14, 0, 0, (uint64_t)sub_1369B80);
  qword_254EA88 = 1103;
  sub_18829C0((unint64_t)&off_25355F8, 1103, 14, 0, 0, (uint64_t)sub_1369B80);
  qword_254EA90 = 1100;
  sub_18829C0((unint64_t)&off_2535FC8, 1100, 14, 0, 0, (uint64_t)sub_1479AB0);
  qword_254EA98 = 1000;
  sub_1882224((unint64_t)&off_2535018, 1000, 13, 0, 0);
  qword_254EAA0 = 1001;
  sub_1882224((unint64_t)&off_2535018, 1001, 13, 0, 0);
  dword_254EAA8 = 1002;
  qword_254EAB0 = (uint64_t)&off_252CE78;
  sub_1882AC4((unint64_t)&off_2535018, 1002, 11, 0, 0, (uint64_t)&off_252CE78);
  dword_254EAB8 = 1053;
  qword_254EAC0 = (uint64_t)&off_252CEE0;
  sub_1882AC4((unint64_t)&off_2536D08, 1053, 11, 0, 0, (uint64_t)&off_252CEE0);
  dword_254EAC8 = 1053;
  qword_254EAD0 = (uint64_t)&off_252CEE0;
  sub_1882AC4((unint64_t)&off_2536FB0, 1053, 11, 0, 0, (uint64_t)&off_252CEE0);
  dword_254EAD8 = 1053;
  qword_254EAE0 = (uint64_t)&off_252CEE0;
  sub_1882AC4((unint64_t)&off_2541B28, 1053, 11, 0, 0, (uint64_t)&off_252CEE0);
  dword_254EAE8 = 1053;
  qword_254EAF0 = (uint64_t)&off_252CEE0;
  sub_1882AC4((unint64_t)&off_2534020, 1053, 11, 0, 0, (uint64_t)&off_252CEE0);
  dword_254EAF8 = 100;
  qword_254EB00 = (uint64_t)&off_254CB28;
  sub_1882AC4((unint64_t)&off_25399D8, 100, 11, 0, 0, (uint64_t)&off_254CB28);
  dword_254EB08 = 200;
  qword_254EB10 = (uint64_t)&off_25398D0;
  sub_1882AC4((unint64_t)&off_2539980, 200, 11, 0, 0, (uint64_t)&off_25398D0);
  dword_254EB18 = 100;
  qword_254EB20 = 0;
  sub_1882224((unint64_t)&off_2539A90, 100, 3, 0, 0);
  dword_254EB28 = 956;
  qword_254EB30 = (uint64_t)&off_252C6C0;
  sub_1882AC4((unint64_t)&off_2541B28, 956, 11, 0, 0, (uint64_t)&off_252C6C0);
  dword_254EB38 = 990;
  qword_254EB40 = (uint64_t)&off_252C710;
  sub_1882AC4((unint64_t)&off_2541D38, 990, 11, 0, 0, (uint64_t)&off_252C710);
  dword_254EB48 = 1000;
  qword_254EB50 = 0;
  sub_1882224((unint64_t)&off_254D2B0, 1000, 4, 0, 0);
  dword_254EB58 = 1001;
  qword_254EB60 = 0;
  sub_1882224((unint64_t)&off_254D2B0, 1001, 4, 0, 0);
  dword_254EB68 = 500;
  qword_254EB70 = (uint64_t)&unk_21379B8;

  sub_1882224((unint64_t)&off_2545418, 500, 9, 0, 0);
}

char *sub_11DE69C()
{
  qword_25FE9D0 = (uint64_t)"CLIENTIZE_RESULT_STATUS_BAD_EXTENTCLIENTIZE_RESULT_STATUS_NO_CACHE_MATCHCLIENTIZE_RESULT_STAT"
                           "US_NO_FEATURE_MATCHCLIENTIZE_RESULT_STATUS_NO_PRIMARY_FEATURECLIENTIZE_RESULT_STATUS_NO_RESUL"
                           "TSCLIENTIZE_RESULT_STATUS_SUCCESSCLIENTIZE_RESULT_STATUS_UNDEFINED";
  *(void *)algn_25FE9D8 = 34;
  dword_25FE9E0 = 3;
  qword_25FE9E8 = (uint64_t)"CLIENTIZE_RESULT_STATUS_NO_CACHE_MATCHCLIENTIZE_RESULT_STATUS_NO_FEATURE_MATCHCLIENTIZE_RESULT_STATUS_NO_PRIMARY_FEATURECLIENTIZE_RESULT_STATUS_NO_RESULTSCLIENTIZE_RESULT_STATUS_SUCCESSCLIENTIZE_RESULT_STATUS_UNDEFINED";
  unk_25FE9F0 = 38;
  dword_25FE9F8 = 4;
  qword_25FEA00 = (uint64_t)"CLIENTIZE_RESULT_STATUS_NO_FEATURE_MATCHCLIENTIZE_RESULT_STATUS_NO_PRIMARY_FEATURECLIENTIZE_RESULT_STATUS_NO_RESULTSCLIENTIZE_RESULT_STATUS_SUCCESSCLIENTIZE_RESULT_STATUS_UNDEFINED";
  unk_25FEA08 = 40;
  dword_25FEA10 = 5;
  qword_25FEA18 = (uint64_t)"CLIENTIZE_RESULT_STATUS_NO_PRIMARY_FEATURECLIENTIZE_RESULT_STATUS_NO_RESULTSCLIENTIZE_RESULT_STATUS_SUCCESSCLIENTIZE_RESULT_STATUS_UNDEFINED";
  unk_25FEA20 = 42;
  dword_25FEA28 = 2;
  qword_25FEA30 = (uint64_t)"CLIENTIZE_RESULT_STATUS_NO_RESULTSCLIENTIZE_RESULT_STATUS_SUCCESSCLIENTIZE_RESULT_STATUS_UNDEFINED";
  unk_25FEA38 = 34;
  dword_25FEA40 = 6;
  qword_25FEA48 = (uint64_t)"CLIENTIZE_RESULT_STATUS_SUCCESSCLIENTIZE_RESULT_STATUS_UNDEFINED";
  unk_25FEA50 = 31;
  dword_25FEA58 = 1;
  qword_25FEA60 = (uint64_t)"CLIENTIZE_RESULT_STATUS_UNDEFINED";
  unk_25FEA68 = 33;
  dword_25FEA70 = 0;
  qword_25FEA78 = (uint64_t)"CLIENTIZE_RESPONSE_STATUS_NO_PARAMETERSCLIENTIZE_RESPONSE_STATUS_NO_REQUESTCLIENTIZE_RESPONSE"
                           "_STATUS_NO_REQUEST_TYPECLIENTIZE_RESPONSE_STATUS_SUCCESSCLIENTIZE_RESPONSE_STATUS_UNDEFINED";
  unk_25FEA80 = 39;
  dword_25FEA88 = 4;
  qword_25FEA90 = (uint64_t)"CLIENTIZE_RESPONSE_STATUS_NO_REQUESTCLIENTIZE_RESPONSE_STATUS_NO_REQUEST_TYPECLIENTIZE_RESPONSE_STATUS_SUCCESSCLIENTIZE_RESPONSE_STATUS_UNDEFINED";
  unk_25FEA98 = 36;
  dword_25FEAA0 = 3;
  qword_25FEAA8 = (uint64_t)"CLIENTIZE_RESPONSE_STATUS_NO_REQUEST_TYPECLIENTIZE_RESPONSE_STATUS_SUCCESSCLIENTIZE_RESPONSE_STATUS_UNDEFINED";
  unk_25FEAB0 = 41;
  dword_25FEAB8 = 2;
  qword_25FEAC0 = (uint64_t)"CLIENTIZE_RESPONSE_STATUS_SUCCESSCLIENTIZE_RESPONSE_STATUS_UNDEFINED";
  unk_25FEAC8 = 33;
  dword_25FEAD0 = 1;
  qword_25FEAD8 = (uint64_t)"CLIENTIZE_RESPONSE_STATUS_UNDEFINED";
  unk_25FEAE0 = 35;
  dword_25FEAE8 = 0;
  qword_25FEAF0 = (uint64_t)"GEMINI_REQUESTPLACE_REQUESTPLACE_SEARCH_REQUESTUNDEFINED_REQUEST";
  *(void *)algn_25FEAF8 = 14;
  dword_25FEB00 = 3;
  qword_25FEB08 = (uint64_t)"PLACE_REQUESTPLACE_SEARCH_REQUESTUNDEFINED_REQUEST";
  unk_25FEB10 = 13;
  dword_25FEB18 = 1;
  qword_25FEB20 = (uint64_t)"PLACE_SEARCH_REQUESTUNDEFINED_REQUEST";
  unk_25FEB28 = 20;
  dword_25FEB30 = 2;
  qword_25FEB38 = (uint64_t)"UNDEFINED_REQUEST";
  unk_25FEB40 = 17;
  dword_25FEB48 = 0;
  qword_25FEB50 = (uint64_t)"DISPUTED_AREA_POIS_ALLOWEDDISPUTED_AREA_POIS_NOT_ALLOWEDNON_DISPUTED_AREA_POIS_ALLOWED";
  *(void *)algn_25FEB58 = 26;
  dword_25FEB60 = 1;
  qword_25FEB68 = (uint64_t)"DISPUTED_AREA_POIS_NOT_ALLOWEDNON_DISPUTED_AREA_POIS_ALLOWED";
  unk_25FEB70 = 30;
  dword_25FEB78 = 2;
  qword_25FEB80 = (uint64_t)"NON_DISPUTED_AREA_POIS_ALLOWED";
  unk_25FEB88 = 30;
  dword_25FEB90 = 0;
  qword_25FEB98 = (uint64_t)"FREEWAYLOCALMAJOR_ARTERIALMINOR_ARTERIALUNKNOWN";
  unk_25FEBA0 = 7;
  dword_25FEBA8 = 1;
  qword_25FEBB0 = (uint64_t)"LOCALMAJOR_ARTERIALMINOR_ARTERIALUNKNOWN";
  unk_25FEBB8 = 5;
  dword_25FEBC0 = 4;
  qword_25FEBC8 = (uint64_t)"MAJOR_ARTERIALMINOR_ARTERIALUNKNOWN";
  unk_25FEBD0 = 14;
  dword_25FEBD8 = 2;
  qword_25FEBE0 = (uint64_t)"MINOR_ARTERIALUNKNOWN";
  unk_25FEBE8 = 14;
  dword_25FEBF0 = 3;
  qword_25FEBF8 = (uint64_t)"UNKNOWN";
  unk_25FEC00 = 7;
  dword_25FEC08 = 0;
  qword_25FEC10 = (uint64_t)"GEOJSONWKBWKTZILCH";
  *(void *)algn_25FEC18 = 7;
  dword_25FEC20 = 3;
  qword_25FEC28 = (uint64_t)"WKBWKTZILCH";
  unk_25FEC30 = 3;
  dword_25FEC38 = 1;
  qword_25FEC40 = (uint64_t)"WKTZILCH";
  unk_25FEC48 = 3;
  dword_25FEC50 = 2;
  qword_25FEC58 = (uint64_t)"ZILCH";
  unk_25FEC60 = 5;
  dword_25FEC68 = 4;
  qword_25FEC70 = (uint64_t)"ADJACENT_FLOWLINES_BEARING_DIFFERENCEBAD_ELEVATIONSEXCESSIVE_SEGMENT_GEOMETRY_DISTRIBUTION_DI"
                           "FF_RATIOEXCESSIVE_TORTUOSITYHIGH_ACCELERATIONNONEOUTSIDE_OF_TRANSPORT_NETWORK_POLYGONSOUT_OF_"
                           "SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LIN"
                           "E_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  *(void *)algn_25FEC78 = 37;
  dword_25FEC80 = 7;
  qword_25FEC88 = (uint64_t)"BAD_ELEVATIONSEXCESSIVE_SEGMENT_GEOMETRY_DISTRIBUTION_DIFF_RATIOEXCESSIVE_TORTUOSITYHIGH_ACCELERATIONNONEOUTSIDE_OF_TRANSPORT_NETWORK_POLYGONSOUT_OF_SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FEC90 = 14;
  dword_25FEC98 = 10;
  qword_25FECA0 = (uint64_t)"EXCESSIVE_SEGMENT_GEOMETRY_DISTRIBUTION_DIFF_RATIOEXCESSIVE_TORTUOSITYHIGH_ACCELERATIONNONEOUTSIDE_OF_TRANSPORT_NETWORK_POLYGONSOUT_OF_SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FECA8 = 50;
  dword_25FECB0 = 11;
  qword_25FECB8 = (uint64_t)"EXCESSIVE_TORTUOSITYHIGH_ACCELERATIONNONEOUTSIDE_OF_TRANSPORT_NETWORK_POLYGONSOUT_OF_SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FECC0 = 20;
  dword_25FECC8 = 9;
  qword_25FECD0 = (uint64_t)"HIGH_ACCELERATIONNONEOUTSIDE_OF_TRANSPORT_NETWORK_POLYGONSOUT_OF_SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FECD8 = 17;
  dword_25FECE0 = 12;
  qword_25FECE8 = (uint64_t)"NONEOUTSIDE_OF_TRANSPORT_NETWORK_POLYGONSOUT_OF_SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FECF0 = 4;
  dword_25FECF8 = 1;
  qword_25FED00 = (uint64_t)"OUTSIDE_OF_TRANSPORT_NETWORK_POLYGONSOUT_OF_SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FED08 = 37;
  dword_25FED10 = 8;
  qword_25FED18 = (uint64_t)"OUT_OF_SEGMENT_BOUNDS_IN_OPPOSITE_TRAVEL_DIRECTIONOUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FED20 = 50;
  dword_25FED28 = 3;
  qword_25FED30 = (uint64_t)"OUT_OF_SEGMENT_BOUNDS_IN_TRAVEL_DIRECTIONROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FED38 = 41;
  dword_25FED40 = 2;
  qword_25FED48 = (uint64_t)"ROUTE_LINE_DIFFERS_FROM_CENTER_LINE_BEARINGSROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FED50 = 44;
  dword_25FED58 = 6;
  qword_25FED60 = (uint64_t)"ROUTE_LINE_JAGGEDROUTE_LINE_SELF_INTERSECTS";
  unk_25FED68 = 17;
  dword_25FED70 = 5;
  qword_25FED78 = (uint64_t)"ROUTE_LINE_SELF_INTERSECTS";
  unk_25FED80 = 26;
  dword_25FED88 = 4;
  qword_25FED90 = (uint64_t)"EXTREMEHIGHLOWMEDIUMNO_ISSUE";
  *(void *)algn_25FED98 = 7;
  dword_25FEDA0 = 4;
  qword_25FEDA8 = (uint64_t)"HIGHLOWMEDIUMNO_ISSUE";
  unk_25FEDB0 = 4;
  dword_25FEDB8 = 3;
  qword_25FEDC0 = (uint64_t)"LOWMEDIUMNO_ISSUE";
  unk_25FEDC8 = 3;
  dword_25FEDD0 = 1;
  qword_25FEDD8 = (uint64_t)"MEDIUMNO_ISSUE";
  unk_25FEDE0 = 6;
  dword_25FEDE8 = 2;
  qword_25FEDF0 = (uint64_t)"NO_ISSUE";
  unk_25FEDF8 = 8;
  dword_25FEE00 = 0;
  qword_25FEE08 = (uint64_t)"DEFAULT_LIVE_TRAFFICECONOMIC_PATH_COMPUTATIONUNKNOWN_SPECIAL_REQUEST_TREATMENT";
  unk_25FEE10 = 20;
  dword_25FEE18 = 2;
  qword_25FEE20 = (uint64_t)"ECONOMIC_PATH_COMPUTATIONUNKNOWN_SPECIAL_REQUEST_TREATMENT";
  unk_25FEE28 = 25;
  dword_25FEE30 = 1;
  qword_25FEE38 = (uint64_t)"UNKNOWN_SPECIAL_REQUEST_TREATMENT";
  unk_25FEE40 = 33;
  dword_25FEE48 = 0;
  qword_25FEE50 = (uint64_t)"DANGER_TYPE_UNKNOWN";
  *(void *)algn_25FEE58 = 19;
  dword_25FEE60 = 0;
  qword_25FEE68 = (uint64_t)"CLASSIFIER_DANGEROUS_MANEUVERSCLASSIFIER_UNKNOWN";
  unk_25FEE70 = 30;
  dword_25FEE78 = 1;
  qword_25FEE80 = (uint64_t)"CLASSIFIER_UNKNOWN";
  unk_25FEE88 = 18;
  dword_25FEE90 = 0;
  qword_25FEE98 = (uint64_t)"NAVIGATION_FEEDBACK_EVENT_TYPE_DIRECTIONSNAVIGATION_FEEDBACK_EVENT_TYPE_ETA_UPDATENAVIGATION_"
                           "FEEDBACK_EVENT_TYPE_UNKNOWN";
  unk_25FEEA0 = 41;
  dword_25FEEA8 = 1;
  uint64_t result = "NAVIGATION_FEEDBACK_EVENT_TYPE_ETA_UPDATENAVIGATION_FEEDBACK_EVENT_TYPE_UNKNOWN";
  qword_25FEEB0 = (uint64_t)"NAVIGATION_FEEDBACK_EVENT_TYPE_ETA_UPDATENAVIGATION_FEEDBACK_EVENT_TYPE_UNKNOWN";
  unk_25FEEB8 = 41;
  dword_25FEEC0 = 2;
  qword_25FEEC8 = (uint64_t)"NAVIGATION_FEEDBACK_EVENT_TYPE_UNKNOWN";
  unk_25FEED0 = 38;
  dword_25FEED8 = 0;
  qword_25FEEE0 = (uint64_t)"BLOCKED_BY_INCIDENTMAP_MATCHING_FAILEDOKOTHER_ERROROUT_OF_COVERAGETOO_MANY_ROUTESUNUSED_STATUS";
  *(void *)algn_25FEEE8 = 19;
  dword_25FEEF0 = 2;
  qword_25FEEF8 = (uint64_t)"MAP_MATCHING_FAILEDOKOTHER_ERROROUT_OF_COVERAGETOO_MANY_ROUTESUNUSED_STATUS";
  unk_25FEF00 = 19;
  dword_25FEF08 = 1;
  qword_25FEF10 = (uint64_t)"OKOTHER_ERROROUT_OF_COVERAGETOO_MANY_ROUTESUNUSED_STATUS";
  unk_25FEF18 = 2;
  dword_25FEF20 = 0;
  qword_25FEF28 = (uint64_t)"OTHER_ERROROUT_OF_COVERAGETOO_MANY_ROUTESUNUSED_STATUS";
  unk_25FEF30 = 11;
  dword_25FEF38 = 99;
  qword_25FEF40 = (uint64_t)"OUT_OF_COVERAGETOO_MANY_ROUTESUNUSED_STATUS";
  unk_25FEF48 = 15;
  dword_25FEF50 = 5;
  qword_25FEF58 = (uint64_t)"TOO_MANY_ROUTESUNUSED_STATUS";
  unk_25FEF60 = 15;
  dword_25FEF68 = 4;
  qword_25FEF70 = (uint64_t)"UNUSED_STATUS";
  unk_25FEF78 = 13;
  dword_25FEF80 = 3;
  qword_25FEF88 = (uint64_t)"INVALID_REQUESTOK";
  unk_25FEF90 = 15;
  dword_25FEF98 = 1;
  qword_25FEFA0 = (uint64_t)"OK";
  unk_25FEFA8 = 2;
  dword_25FEFB0 = 0;
  return result;
}

BOOL sub_11DEADC(unsigned int a1)
{
  return a1 < 6;
}

uint64_t sub_11DEAE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if ((uint64_t (***)())a1 != &off_252D6F0 && *(void *)(a1 + 40))
  {
    sub_128E098();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11DEBD0(uint64_t a1)
{
  sub_11DEAE8(a1);

  operator delete();
}

uint64_t sub_11DEC08(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v5 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_128E0D4(*(void *)(result + 40));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_11DECD8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)unint64_t v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    unint64_t v16 = *(void **)(a1 + 40);
    if (!v16)
    {
      int v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v17 = (void *)*v17;
      }
      unint64_t v16 = sub_128E984((uint64_t)v17);
      *(void *)(a1 + 40) = v16;
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = sub_11DEED8(a3, (uint64_t)v16, v7);
LABEL_35:
    *(void *)unint64_t v23 = v15;
    if (!v15) {
      goto LABEL_41;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
      return *(void *)v23;
    }
  }
  if (v11 == 2)
  {
    if (v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (uint64_t *)*v19;
      }
      uint64_t v20 = (void *)(a1 + 32);
      goto LABEL_34;
    }
  }
  else if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t v20 = (void *)(a1 + 24);
LABEL_34:
    uint64_t v22 = (std::string *)sub_1880F84(v20, v19);
    uint64_t v15 = (uint64_t)sub_188C244(v22, *(char **)v23, (uint64_t)a3);
    goto LABEL_35;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v23;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v23;
  }
LABEL_41:
  *(void *)unint64_t v23 = 0;
  return *(void *)v23;
}

uint64_t sub_11DEED8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_128E1F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11DEF68(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_128E488(v7, v9, a3);
LABEL_13:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_11DF0C4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_14;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_128E5E8(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_11DF1EC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_20;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) != 0)
  {
LABEL_12:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unint64_t v12 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v12)
    {
      std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      unint64_t v12 = (std::string *)sub_128E984((uint64_t)v14);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v12;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v15 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v15 = &off_2530260;
    }
    uint64_t result = sub_128E79C(v12, (uint64_t)v15);
  }
LABEL_20:
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11DF318()
{
  return 1;
}

void *sub_11DF320@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.LocalizedResult.Locale");
}

uint64_t sub_11DF330(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 88);
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252D720)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_11DEAE8(v6);
      operator delete();
    }
    if (*(void *)(a1 + 104))
    {
      sub_146E3A8();
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_16C8084();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_122AC28((void *)(a1 + 64));
  sub_1889DE8((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11DF458(uint64_t a1)
{
  sub_11DF330(a1);

  operator delete();
}

uint64_t sub_11DF490(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t result = sub_188CC00(a1 + 40);
  uint64_t v3 = *(unsigned int *)(a1 + 72);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1750490(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 72) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_21:
    uint64_t result = sub_11DEC08(*(void *)(a1 + 96));
    if ((v6 & 4) == 0)
    {
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_22;
  }
  unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_21;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_21;
    }
  }
LABEL_8:
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_22:
  uint64_t result = sub_13F04AC(*(void *)(a1 + 104));
  if ((v6 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_16C80C0(*(void *)(a1 + 112));
LABEL_11:
  if ((v6 & 0x30) != 0)
  {
    *(_DWORD *)(a1 + 128) = 0;
    *(void *)(a1 + 120) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_11DF59C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v56 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (uint64_t **)(a1 + 40);
    int v55 = (uint64_t *)(a1 + 8);
    while (1)
    {
      char v8 = (unsigned __int8 *)(*(void *)v56 + 1);
      unsigned int v9 = **(unsigned char **)v56;
      if ((char)**(unsigned char **)v56 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v56, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          char v8 = (unsigned __int8 *)(*(void *)v56 + 2);
        }
      }
      *(void *)uint64_t v56 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          unint64_t v12 = *(void **)(a1 + 96);
          if (!v12)
          {
            std::string::size_type v13 = (void *)(*v55 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v55) {
              std::string::size_type v13 = (void *)*v13;
            }
            unint64_t v12 = sub_11E7B10((uint64_t)v13);
            *(void *)(a1 + 96) = v12;
            char v8 = *(unsigned __int8 **)v56;
          }
          uint64_t v14 = sub_11DFBC0(a3, (uint64_t)v12, v8);
          goto LABEL_92;
        case 2u:
          if (v9 != 18) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v15 = *(void *)(a1 + 104);
          if (!v15)
          {
            uint64_t v16 = (void *)(*v55 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v55) {
              uint64_t v16 = (void *)*v16;
            }
            sub_147937C((uint64_t)v16);
            uint64_t v15 = v17;
            *(void *)(a1 + 104) = v17;
            char v8 = *(unsigned __int8 **)v56;
          }
          uint64_t v14 = sub_1179468(a3, v15, v8);
          goto LABEL_92;
        case 3u:
          if (v9 != 26) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v18 = *(void **)(a1 + 112);
          if (!v18)
          {
            uint64_t v19 = (void *)(*v55 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v55) {
              uint64_t v19 = (void *)*v19;
            }
            uint64_t v18 = sub_1786B58((uint64_t)v19);
            *(void *)(a1 + 112) = v18;
            char v8 = *(unsigned __int8 **)v56;
          }
          uint64_t v14 = sub_119BB18(a3, (uint64_t)v18, v8);
          goto LABEL_92;
        case 4u:
          if (v9 != 32) {
            goto LABEL_85;
          }
          uint64_t v20 = (char *)(v8 + 1);
          unint64_t v21 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_31;
          }
          int v22 = *v20;
          int v23 = v21 + (v22 << 7);
          unint64_t v21 = (v23 - 128);
          if (v22 < 0)
          {
            *(void *)uint64_t v56 = sub_188C138((uint64_t)v8, (v23 - 128));
            if (!*(void *)v56) {
              goto LABEL_102;
            }
            unint64_t v21 = v49;
          }
          else
          {
            uint64_t v20 = (char *)(v8 + 2);
LABEL_31:
            *(void *)uint64_t v56 = v20;
          }
          if (sub_119BBA8(v21))
          {
            *(_DWORD *)(a1 + 16) |= 0x20u;
            *(_DWORD *)(a1 + 128) = v21;
          }
          else
          {
            if (*v55) {
              uint64_t v54 = (std::string *)((*v55 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v54 = (std::string *)sub_188DBD8(v55);
            }
            sub_188C020(4, v21, v54);
          }
          goto LABEL_93;
        case 5u:
          if (v9 == 40)
          {
            uint64_t v24 = v8 - 1;
            while (1)
            {
              *(void *)uint64_t v56 = v24 + 1;
              uint64_t v25 = v24[1];
              if ((char)v24[1] < 0)
              {
                int v26 = v25 + (v24[2] << 7);
                uint64_t v25 = (v26 - 128);
                if ((char)v24[2] < 0)
                {
                  uint64_t v24 = (unsigned __int8 *)sub_188C138((uint64_t)(v24 + 1), (v26 - 128));
                  uint64_t v25 = v27;
                }
                else
                {
                  v24 += 3;
                }
              }
              else
              {
                v24 += 2;
              }
              *(void *)uint64_t v56 = v24;
              uint64_t v28 = *(unsigned int *)(a1 + 24);
              if (v28 == *(_DWORD *)(a1 + 28))
              {
                int v29 = v28 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v28 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v28) = v25;
                uint64_t v24 = *(unsigned __int8 **)v56;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v28) = v25;
                int v29 = v28 + 1;
              }
              *(_DWORD *)(a1 + 24) = v29;
              if (!v24) {
                goto LABEL_102;
              }
              if (*(void *)a3 <= (unint64_t)v24 || *v24 != 40) {
                goto LABEL_93;
              }
            }
          }
          if (v9 == 42)
          {
            uint64_t v14 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          }
          else
          {
LABEL_85:
            if (v9) {
              BOOL v52 = (v9 & 7) == 4;
            }
            else {
              BOOL v52 = 1;
            }
            if (v52)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_102:
              *(void *)uint64_t v56 = 0;
              goto LABEL_2;
            }
            if (*v55)
            {
              uint64_t v53 = (std::string *)((*v55 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v53 = (std::string *)sub_188DBD8(v55);
              char v8 = *(unsigned __int8 **)v56;
            }
            uint64_t v14 = (uint64_t)sub_1885AC0(v9, v53, (char *)v8, a3);
          }
LABEL_92:
          *(void *)uint64_t v56 = v14;
          if (!v14) {
            goto LABEL_102;
          }
LABEL_93:
          if (sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 6u:
          if (v9 != 50) {
            goto LABEL_85;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v30 = *(void *)(a1 + 8);
          uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
          if (v30) {
            uint64_t v31 = (uint64_t *)*v31;
          }
          uint64_t v32 = (std::string *)sub_1880F84((void *)(a1 + 88), v31);
          uint64_t v14 = (uint64_t)sub_188C244(v32, *(char **)v56, (uint64_t)a3);
          goto LABEL_92;
        case 7u:
          if (v9 != 56) {
            goto LABEL_85;
          }
          v5 |= 0x10u;
          uint64_t v33 = (char *)(v8 + 1);
          uint64_t v34 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_56;
          }
          int v35 = *v33;
          uint64_t v34 = v34 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            uint64_t v50 = sub_188C138((uint64_t)v8, v34);
            *(void *)uint64_t v56 = v50;
            *(void *)(a1 + 120) = v51;
            if (!v50) {
              goto LABEL_102;
            }
          }
          else
          {
            uint64_t v33 = (char *)(v8 + 2);
LABEL_56:
            *(void *)uint64_t v56 = v33;
            *(void *)(a1 + 120) = v34;
          }
          goto LABEL_93;
        case 8u:
          if (v9 != 66) {
            goto LABEL_85;
          }
          uint64_t v36 = (const std::string::value_type *)(v8 - 1);
          while (1)
          {
            uint64_t v37 = (char *)(v36 + 1);
            *(void *)uint64_t v56 = v36 + 1;
            uint64_t v38 = *(_DWORD **)(a1 + 56);
            if (v38 && (uint64_t v39 = *(int *)(a1 + 48), (int)v39 < *v38))
            {
              *(_DWORD *)(a1 + 48) = v39 + 1;
              unint64_t v40 = *(std::string **)&v38[2 * v39 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              void *v42 = v41;
              v42[1] = sub_3A6EDC;
              void *v41 = 0;
              v41[1] = 0;
              int v41[2] = 0;
              unint64_t v40 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v41);
              uint64_t v37 = *(char **)v56;
            }
            uint64_t v36 = sub_188C244(v40, v37, (uint64_t)a3);
            *(void *)uint64_t v56 = v36;
            if (!v36) {
              goto LABEL_102;
            }
            if (*(void *)a3 <= (unint64_t)v36 || *v36 != 66) {
              goto LABEL_93;
            }
          }
        case 9u:
          if (v9 != 74) {
            goto LABEL_85;
          }
          uint64_t v43 = v8 - 1;
          while (1)
          {
            uint64_t v44 = v43 + 1;
            *(void *)uint64_t v56 = v43 + 1;
            unsigned int v45 = *(_DWORD **)(a1 + 80);
            if (v45 && (uint64_t v46 = *(int *)(a1 + 72), (int)v46 < *v45))
            {
              *(_DWORD *)(a1 + 72) = v46 + 1;
              uint64_t v47 = *(void *)&v45[2 * v46 + 2];
            }
            else
            {
              uint64_t v48 = sub_178BD90(*(void *)(a1 + 64));
              uint64_t v47 = sub_188CDC8(a1 + 64, (uint64_t)v48);
              uint64_t v44 = *(unsigned __int8 **)v56;
            }
            uint64_t v43 = (unsigned __int8 *)sub_11DFC50(a3, v47, v44);
            *(void *)uint64_t v56 = v43;
            if (!v43) {
              goto LABEL_102;
            }
            if (*(void *)a3 <= (unint64_t)v43 || *v43 != 74) {
              goto LABEL_93;
            }
          }
        default:
          goto LABEL_85;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v56;
}

uint64_t sub_11DFBC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11DECD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11DFC50(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_175050C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11DFCE0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_11DEF68(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 104);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  int v4 = sub_146ECEC(v10, (unint64_t)v12, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 112);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  int v4 = sub_16C82D8(v13, v15, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 128);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  uint64_t v19 = *(unsigned int *)(a1 + 24);
  if ((int)v19 >= 1)
  {
    for (uint64_t i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v21 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      char *v4 = 40;
      v4[1] = v21;
      if (v21 > 0x7F)
      {
        v4[1] = v21 | 0x80;
        unint64_t v22 = v21 >> 7;
        v4[2] = v21 >> 7;
        v4 += 3;
        if (v21 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v23 = v22 >> 14;
            v22 >>= 7;
            *v4++ = v22;
          }
          while (v23);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(void *)(a1 + 120);
    char *v4 = 56;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v27 = *(unsigned int *)(a1 + 48);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = 0;
    uint64_t v29 = 8 * v27;
    do
    {
      uint64_t v30 = *(void **)(*(void *)(a1 + 56) + v28 + 8);
      if (*((char *)v30 + 23) < 0)
      {
        int64_t v31 = v30[1];
        if (v31 > 127) {
          goto LABEL_59;
        }
      }
      else
      {
        int64_t v31 = *((unsigned __int8 *)v30 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v31)
      {
        char *v4 = 66;
        v4[1] = v31;
        if (*((char *)v30 + 23) < 0) {
          uint64_t v30 = (void *)*v30;
        }
        uint64_t v32 = v4 + 2;
        memcpy(v32, v30, v31);
        int v4 = &v32[v31];
        goto LABEL_57;
      }
LABEL_59:
      int v4 = (char *)sub_188A868(a3, 8, (uint64_t)v30, v4);
LABEL_57:
      v28 += 8;
    }
    while (v29 != v28);
  }
  int v33 = *(_DWORD *)(a1 + 72);
  if (v33)
  {
    for (int j = 0; j != v33; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      char *v4 = 74;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      v4[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        uint64_t v37 = v4 + 2;
      }
      int v4 = sub_17506B4(v35, v37, a3);
    }
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if ((v38 & 1) == 0) {
    return v4;
  }
  unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    uint64_t v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    uint64_t v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(v4, v41, (int)v42);
    v4 += v43;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v41, v42, v4);
}

uint64_t sub_11E01C0(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(int *)(a1 + 72);
  uint64_t v10 = v4 + v9;
  uint64_t v11 = *(void *)(a1 + 80);
  if (v11) {
    unint64_t v12 = (uint64_t *)(v11 + 8);
  }
  else {
    unint64_t v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_17507A0(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 0x3F) != 0)
  {
    if (v16)
    {
      unint64_t v22 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
      uint64_t v24 = *(void *)(v22 + 8);
      if ((v23 & 0x80u) == 0) {
        uint64_t v24 = v23;
      }
      v10 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v16 & 2) == 0)
      {
LABEL_15:
        if ((v16 & 4) == 0) {
          goto LABEL_16;
        }
        goto LABEL_29;
      }
    }
    else if ((v16 & 2) == 0)
    {
      goto LABEL_15;
    }
    uint64_t v25 = sub_11DF0C4(*(void *)(a1 + 96));
    v10 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 4) == 0)
    {
LABEL_16:
      if ((v16 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
LABEL_29:
    uint64_t v26 = sub_146F320(*(void *)(a1 + 104));
    v10 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 8) == 0)
    {
LABEL_17:
      if ((v16 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_31;
    }
LABEL_30:
    uint64_t v27 = sub_16C83C8(*(void *)(a1 + 112));
    v10 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v16 & 0x10) == 0)
    {
LABEL_18:
      if ((v16 & 0x20) == 0) {
        goto LABEL_23;
      }
LABEL_19:
      int v17 = *(_DWORD *)(a1 + 128);
      uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v17 >= 0) {
        uint64_t v19 = v18;
      }
      else {
        uint64_t v19 = 11;
      }
      v10 += v19;
      goto LABEL_23;
    }
LABEL_31:
    v10 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v16 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_23:
  uint64_t v20 = *(void *)(a1 + 8);
  if (v20)
  {
    unint64_t v28 = v20 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v10 += v29;
  }
  *(_DWORD *)(a1 + 20) = v10;
  return v10;
}

void sub_11E0424(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    unint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *unint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v15 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_122B128((std::string *)(a1 + 64), v15, v14, v13, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v16 = *(_DWORD *)(a1 + 72) + v13;
    *(_DWORD *)(a1 + 72) = v16;
    int v17 = *(int **)(a1 + 80);
    if (*v17 < v16) {
      int *v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 16);
  if ((v18 & 0x3F) != 0)
  {
    if (v18)
    {
      uint64_t v20 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v21 = *(void *)(a1 + 8);
      unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unint64_t v22 = (uint64_t *)*v22;
      }
      sub_1881DF4((std::string **)(a1 + 88), v20, v22);
      if ((v18 & 2) == 0)
      {
LABEL_12:
        if ((v18 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_33;
      }
    }
    else if ((v18 & 2) == 0)
    {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v23 = *(std::string **)(a1 + 96);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = (std::string *)sub_11E7B10((uint64_t)v25);
      *(void *)(a1 + 96) = v23;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v26 = &off_252D6F0;
    }
    sub_11DF1EC(v23, (uint64_t)v26);
    if ((v18 & 4) == 0)
    {
LABEL_13:
      if ((v18 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_41;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v27 = *(void *)(a1 + 104);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      sub_147937C((uint64_t)v29);
      *(void *)(a1 + 104) = v27;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v30 = &off_25398D0;
    }
    sub_13F17EC(v27, (uint64_t)v30);
    if ((v18 & 8) == 0)
    {
LABEL_14:
      if ((v18 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_49;
    }
LABEL_41:
    *(_DWORD *)(a1 + 16) |= 8u;
    int64_t v31 = *(void **)(a1 + 112);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      int v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        int v33 = (void *)*v33;
      }
      int64_t v31 = sub_1786B58((uint64_t)v33);
      *(void *)(a1 + 112) = v31;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v34 = &off_2544B60;
    }
    sub_16C1200((uint64_t)v31, (uint64_t)v34);
    if ((v18 & 0x10) == 0)
    {
LABEL_15:
      if ((v18 & 0x20) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v18;
        goto LABEL_18;
      }
LABEL_16:
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      goto LABEL_17;
    }
LABEL_49:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v18 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11E06FC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_13F1C1C(*(void *)(a1 + 104));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_16C8468(*(void *)(a1 + 112));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11E0748@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.LocalizedResult");
}

uint64_t sub_11E0758(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E0824(uint64_t a1)
{
  sub_11E0758(a1);

  operator delete();
}

uint64_t sub_11E085C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11E0914(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)unint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 40);
        goto LABEL_32;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        int v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          int v17 = (uint64_t *)*v17;
        }
        int v18 = (void *)(a1 + 32);
        goto LABEL_32;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      int v17 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v17 = (uint64_t *)*v17;
      }
      int v18 = (void *)(a1 + 24);
LABEL_32:
      uint64_t v21 = (std::string *)sub_1880F84(v18, v17);
      uint64_t v15 = (void *)sub_188C244(v21, *(char **)v22, (uint64_t)a3);
      goto LABEL_33;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v22;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_33:
    *(void *)unint64_t v22 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_39:
  *(void *)unint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_11E0B04(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_11E0C1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11E0D3C()
{
  return 1;
}

void *sub_11E0D44@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeocoderVersion");
}

uint64_t sub_11E0D54(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_249B8B0;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = &qword_2550250;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 175) = 0;
  *(unsigned char *)(a1 + 183) = 1;
  *(_DWORD *)(a1 + 179) = 16843009;
  return a1;
}

void sub_11E0DFC(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_11E0E2C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 152);
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252D7A8)
  {
    if (*(void *)(a1 + 160))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 168);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DA8(a1 + 136);
  sub_1889DA8(a1 + 120);
  sub_122AD28((void *)(a1 + 96));
  sub_1889DE8((void *)(a1 + 72));
  sub_122ACA8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E0F50(uint64_t a1)
{
  sub_11E0E2C(a1);

  operator delete();
}

uint64_t sub_11E0F88(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_11E2BC8(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v6 = *(unsigned int *)(a1 + 104);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_11DEC08(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 104) = 0;
  }
  *(_DWORD *)(a1 + 120) = 0;
  *(_DWORD *)(a1 + 136) = 0;
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 7) == 0) {
    goto LABEL_14;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_26;
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  *(unsigned char *)unint64_t v12 = 0;
  *(unsigned char *)(v12 + 23) = 0;
  if ((v9 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_26:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 160));
  if ((v9 & 4) != 0) {
LABEL_13:
  }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 168));
LABEL_14:
  *(unsigned char *)(a1 + 178) = 0;
  *(_WORD *)(a1 + 176) = 0;
  if ((v9 & 0xC0) != 0) {
    *(_WORD *)(a1 + 179) = 257;
  }
  if ((v9 & 0x700) != 0)
  {
    *(_WORD *)(a1 + 181) = 257;
    *(unsigned char *)(a1 + 183) = 1;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_11E10D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v102 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v102, a3[11].i32[1]))
  {
    int v101 = 0;
    goto LABEL_3;
  }
  int v101 = 0;
  uint64_t v6 = (uint64_t **)(a1 + 72);
  uint64_t v100 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v102 + 1);
    unsigned int v8 = **(unsigned char **)v102;
    if ((char)**(unsigned char **)v102 < 0)
    {
      int v9 = (char)*v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v102, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v102 + 2);
      }
    }
    *(void *)uint64_t v102 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_159;
        }
        unint64_t v12 = v7 - 1;
        while (1)
        {
          int v13 = v12 + 1;
          *(void *)uint64_t v102 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11E7D40(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            int v13 = *(unsigned __int8 **)v102;
          }
          unint64_t v12 = (unsigned __int8 *)sub_11E1BD0(a3, v16, v13);
          *(void *)uint64_t v102 = v12;
          if (!v12) {
            goto LABEL_174;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_169;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (std::string *)sub_1880F84((void *)(a1 + 152), v19);
        uint64_t v21 = (void *)sub_188C244(v20, *(char **)v102, (uint64_t)a3);
        goto LABEL_168;
      case 3u:
        if (v8 != 26) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v22 = *(void *)(a1 + 160);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v100 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v100) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_15C1918((uint64_t)v23);
          *(void *)(a1 + 160) = v22;
          uint64_t v7 = *(unsigned __int8 **)v102;
        }
        uint64_t v21 = sub_1198F14(a3, v22, v7);
        goto LABEL_168;
      case 4u:
        if (v8 != 34) {
          goto LABEL_159;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 168);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v100 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v100) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_15C19EC((uint64_t)v25);
          *(void *)(a1 + 168) = v24;
          uint64_t v7 = *(unsigned __int8 **)v102;
        }
        uint64_t v21 = sub_11E1C60(a3, v24, v7);
        goto LABEL_168;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_159;
        }
        v101 |= 0x40u;
        uint64_t v26 = (char *)(v7 + 1);
        uint64_t v27 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v81 = sub_188C138((uint64_t)v7, v27);
          *(void *)uint64_t v102 = v81;
          *(unsigned char *)(a1 + 179) = v82 != 0;
          if (!v81) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v7 + 2);
LABEL_40:
          *(void *)uint64_t v102 = v26;
          *(unsigned char *)(a1 + 179) = v27 != 0;
        }
        goto LABEL_169;
      case 0xBu:
        if (v8 != 88) {
          goto LABEL_159;
        }
        v101 |= 0x80u;
        uint64_t v29 = (char *)(v7 + 1);
        uint64_t v30 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v83 = sub_188C138((uint64_t)v7, v30);
          *(void *)uint64_t v102 = v83;
          *(unsigned char *)(a1 + 180) = v84 != 0;
          if (!v83) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v29 = (char *)(v7 + 2);
LABEL_45:
          *(void *)uint64_t v102 = v29;
          *(unsigned char *)(a1 + 180) = v30 != 0;
        }
        goto LABEL_169;
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_159;
        }
        v101 |= 0x100u;
        uint64_t v32 = (char *)(v7 + 1);
        uint64_t v33 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v85 = sub_188C138((uint64_t)v7, v33);
          *(void *)uint64_t v102 = v85;
          *(unsigned char *)(a1 + 181) = v86 != 0;
          if (!v85) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v32 = (char *)(v7 + 2);
LABEL_50:
          *(void *)uint64_t v102 = v32;
          *(unsigned char *)(a1 + 181) = v33 != 0;
        }
        goto LABEL_169;
      case 0xDu:
        if (v8 != 104) {
          goto LABEL_159;
        }
        v101 |= 0x200u;
        uint64_t v35 = (char *)(v7 + 1);
        uint64_t v36 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v87 = sub_188C138((uint64_t)v7, v36);
          *(void *)uint64_t v102 = v87;
          *(unsigned char *)(a1 + 182) = v88 != 0;
          if (!v87) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v35 = (char *)(v7 + 2);
LABEL_55:
          *(void *)uint64_t v102 = v35;
          *(unsigned char *)(a1 + 182) = v36 != 0;
        }
        goto LABEL_169;
      case 0xEu:
        if (v8 != 112) {
          goto LABEL_159;
        }
        v101 |= 0x400u;
        uint64_t v38 = (char *)(v7 + 1);
        uint64_t v39 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_60;
        }
        int v40 = *v38;
        uint64_t v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v89 = sub_188C138((uint64_t)v7, v39);
          *(void *)uint64_t v102 = v89;
          *(unsigned char *)(a1 + 183) = v90 != 0;
          if (!v89) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v38 = (char *)(v7 + 2);
LABEL_60:
          *(void *)uint64_t v102 = v38;
          *(unsigned char *)(a1 + 183) = v39 != 0;
        }
        goto LABEL_169;
      case 0xFu:
        if (v8 != 120) {
          goto LABEL_159;
        }
        v101 |= 8u;
        uint64_t v41 = (char *)(v7 + 1);
        uint64_t v42 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v91 = sub_188C138((uint64_t)v7, v42);
          *(void *)uint64_t v102 = v91;
          *(unsigned char *)(a1 + 176) = v92 != 0;
          if (!v91) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v41 = (char *)(v7 + 2);
LABEL_65:
          *(void *)uint64_t v102 = v41;
          *(unsigned char *)(a1 + 176) = v42 != 0;
        }
        goto LABEL_169;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_159;
        }
        uint64_t v44 = (const std::string::value_type *)(v7 - 2);
        while (1)
        {
          unsigned int v45 = (char *)(v44 + 2);
          *(void *)uint64_t v102 = v44 + 2;
          uint64_t v46 = *(_DWORD **)(a1 + 88);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 80), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 80) = v47 + 1;
            uint64_t v48 = *(std::string **)&v46[2 * v47 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v50 = v49;
            v50[1] = sub_3A6EDC;
            *unint64_t v49 = 0;
            v49[1] = 0;
            int v49[2] = 0;
            uint64_t v48 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v49);
            unsigned int v45 = *(char **)v102;
          }
          uint64_t v44 = sub_188C244(v48, v45, (uint64_t)a3);
          *(void *)uint64_t v102 = v44;
          if (!v44) {
            goto LABEL_174;
          }
          if (*(void *)a3 <= (unint64_t)v44 || *(_WORD *)v44 != 386) {
            goto LABEL_169;
          }
        }
      case 0x11u:
        if (v8 != 136) {
          goto LABEL_159;
        }
        v101 |= 0x10u;
        uint64_t v51 = (char *)(v7 + 1);
        uint64_t v52 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_82;
        }
        int v53 = *v51;
        uint64_t v52 = v52 + (v53 << 7) - 128;
        if (v53 < 0)
        {
          uint64_t v93 = sub_188C138((uint64_t)v7, v52);
          *(void *)uint64_t v102 = v93;
          *(unsigned char *)(a1 + 177) = v94 != 0;
          if (!v93) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v51 = (char *)(v7 + 2);
LABEL_82:
          *(void *)uint64_t v102 = v51;
          *(unsigned char *)(a1 + 177) = v52 != 0;
        }
        goto LABEL_169;
      case 0x12u:
        if (v8 != 144) {
          goto LABEL_159;
        }
        v101 |= 0x20u;
        uint64_t v54 = (char *)(v7 + 1);
        uint64_t v55 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_87;
        }
        int v56 = *v54;
        uint64_t v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v95 = sub_188C138((uint64_t)v7, v55);
          *(void *)uint64_t v102 = v95;
          *(unsigned char *)(a1 + 178) = v96 != 0;
          if (!v95) {
            goto LABEL_174;
          }
        }
        else
        {
          uint64_t v54 = (char *)(v7 + 2);
LABEL_87:
          *(void *)uint64_t v102 = v54;
          *(unsigned char *)(a1 + 178) = v55 != 0;
        }
        goto LABEL_169;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_159;
        }
        int v57 = v7 - 2;
        while (1)
        {
          uint64_t v58 = v57 + 2;
          *(void *)uint64_t v102 = v57 + 2;
          uint64_t v59 = *(_DWORD **)(a1 + 112);
          if (v59 && (uint64_t v60 = *(int *)(a1 + 104), (int)v60 < *v59))
          {
            *(_DWORD *)(a1 + 104) = v60 + 1;
            uint64_t v61 = *(void *)&v59[2 * v60 + 2];
          }
          else
          {
            uint64_t v62 = sub_11E7B10(*(void *)(a1 + 96));
            uint64_t v61 = sub_188CDC8(a1 + 96, (uint64_t)v62);
            uint64_t v58 = *(unsigned __int8 **)v102;
          }
          int v57 = (unsigned __int8 *)sub_11DFBC0(a3, v61, v58);
          *(void *)uint64_t v102 = v57;
          if (!v57) {
            goto LABEL_174;
          }
          if (*(void *)a3 <= (unint64_t)v57 || *(_WORD *)v57 != 418) {
            goto LABEL_169;
          }
        }
      case 0x15u:
        if (v8 == 168)
        {
          uint64_t v63 = (uint64_t)(v7 - 2);
          while (1)
          {
            *(void *)uint64_t v102 = v63 + 2;
            unint64_t v64 = *(unsigned __int8 *)(v63 + 2);
            int v65 = (char *)(v63 + 3);
            if (*(char *)(v63 + 2) < 0)
            {
              int v66 = *v65;
              int v67 = v64 + (v66 << 7);
              unint64_t v64 = (v67 - 128);
              if (v66 < 0)
              {
                *(void *)uint64_t v102 = sub_188C138(v63 + 2, (v67 - 128));
                if (!*(void *)v102) {
                  goto LABEL_174;
                }
                unint64_t v64 = v70;
                goto LABEL_104;
              }
              int v65 = (char *)(v63 + 4);
            }
            *(void *)uint64_t v102 = v65;
LABEL_104:
            if (sub_140B640(v64))
            {
              uint64_t v68 = *(unsigned int *)(a1 + 120);
              if (v68 == *(_DWORD *)(a1 + 124))
              {
                int v69 = v68 + 1;
                sub_188C80C((unsigned int *)(a1 + 120), v68 + 1);
                *(_DWORD *)(*(void *)(a1 + 128) + 4 * v68) = v64;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 128) + 4 * v68) = v64;
                int v69 = v68 + 1;
              }
              *(_DWORD *)(a1 + 120) = v69;
            }
            else
            {
              if (*v100) {
                uint64_t v71 = (std::string *)((*v100 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v71 = (std::string *)sub_188DBD8(v100);
              }
              sub_188C020(21, v64, v71);
            }
            uint64_t v63 = *(void *)v102;
            if (*(void *)a3 <= *(void *)v102 || **(_WORD **)v102 != 424) {
              goto LABEL_169;
            }
          }
        }
        if (v8 != 170) {
          goto LABEL_159;
        }
        *(void *)&long long v103 = a1 + 120;
        *((void *)&v103 + 1) = sub_140B640;
        uint64_t v104 = a1 + 8;
        int v97 = 21;
        goto LABEL_158;
      case 0x16u:
        if (v8 == 176)
        {
          uint64_t v72 = (uint64_t)(v7 - 2);
          while (1)
          {
            *(void *)uint64_t v102 = v72 + 2;
            unint64_t v73 = *(unsigned __int8 *)(v72 + 2);
            uint64_t v74 = (char *)(v72 + 3);
            if (*(char *)(v72 + 2) < 0)
            {
              int v75 = *v74;
              int v76 = v73 + (v75 << 7);
              unint64_t v73 = (v76 - 128);
              if (v75 < 0)
              {
                *(void *)uint64_t v102 = sub_188C138(v72 + 2, (v76 - 128));
                if (!*(void *)v102) {
                  goto LABEL_174;
                }
                unint64_t v73 = v79;
                goto LABEL_124;
              }
              uint64_t v74 = (char *)(v72 + 4);
            }
            *(void *)uint64_t v102 = v74;
LABEL_124:
            if (v73 > 5)
            {
              if (*v100) {
                uint64_t v80 = (std::string *)((*v100 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v80 = (std::string *)sub_188DBD8(v100);
              }
              sub_188C020(22, v73, v80);
            }
            else
            {
              uint64_t v77 = *(unsigned int *)(a1 + 136);
              if (v77 == *(_DWORD *)(a1 + 140))
              {
                int v78 = v77 + 1;
                sub_188C80C((unsigned int *)(a1 + 136), v77 + 1);
                *(_DWORD *)(*(void *)(a1 + 144) + 4 * v77) = v73;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 144) + 4 * v77) = v73;
                int v78 = v77 + 1;
              }
              *(_DWORD *)(a1 + 136) = v78;
            }
            uint64_t v72 = *(void *)v102;
            if (*(void *)a3 <= *(void *)v102 || **(_WORD **)v102 != 432) {
              goto LABEL_169;
            }
          }
        }
        if (v8 == 178)
        {
          *(void *)&long long v103 = a1 + 136;
          *((void *)&v103 + 1) = sub_11DEADC;
          uint64_t v104 = a1 + 8;
          int v97 = 22;
LABEL_158:
          int v105 = v97;
          uint64_t v21 = sub_1112E88((uint64_t)a3, (char *)v7, &v103);
LABEL_168:
          *(void *)uint64_t v102 = v21;
          if (!v21) {
            goto LABEL_174;
          }
LABEL_169:
          if (sub_11947B8((uint64_t)a3, (char **)v102, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
LABEL_159:
        if (v8) {
          BOOL v98 = (v8 & 7) == 4;
        }
        else {
          BOOL v98 = 1;
        }
        if (!v98)
        {
          if ((v8 - 80000) >> 3 > 0x3E8)
          {
            if (*v100)
            {
              uint64_t v99 = (std::string *)((*v100 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v99 = (std::string *)sub_188DBD8(v100);
              uint64_t v7 = *(unsigned __int8 **)v102;
            }
            uint64_t v21 = sub_1885AC0(v8, v99, (char *)v7, a3);
          }
          else
          {
            uint64_t v21 = sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_252D7A8, v100, a3);
          }
          goto LABEL_168;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_174:
        }
          *(void *)uint64_t v102 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v101;
        return *(void *)v102;
      default:
        goto LABEL_159;
    }
  }
}

uint64_t sub_11E1BD0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E2C54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11E1C60(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B1750(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11E1CF0(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_11E3030(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    a2 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_26;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v12 = *(void *)(a1 + 160);
  *a2 = 26;
  unsigned int v13 = *(_DWORD *)(v12 + 44);
  a2[1] = v13;
  if (v13 > 0x7F) {
    unint64_t v14 = sub_188A9CC(v13, a2 + 1);
  }
  else {
    unint64_t v14 = a2 + 2;
  }
  a2 = sub_15B0C0C(v12, v14, a3);
  if ((v11 & 4) == 0)
  {
LABEL_12:
    if ((v11 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v15 = *(void *)(a1 + 168);
  *a2 = 34;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  a2[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, a2 + 1);
  }
  else {
    uint64_t v17 = a2 + 2;
  }
  a2 = sub_15B1A68(v15, (unint64_t)v17, a3);
  if ((v11 & 0x40) == 0)
  {
LABEL_13:
    if ((v11 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_35;
  }
LABEL_32:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v18 = *(unsigned char *)(a1 + 179);
  *a2 = 80;
  a2[1] = v18;
  a2 += 2;
  if ((v11 & 0x80) == 0)
  {
LABEL_14:
    if ((v11 & 0x100) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_35:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v19 = *(unsigned char *)(a1 + 180);
  *a2 = 88;
  a2[1] = v19;
  a2 += 2;
  if ((v11 & 0x100) == 0)
  {
LABEL_15:
    if ((v11 & 0x200) == 0) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_38:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v20 = *(unsigned char *)(a1 + 181);
  *a2 = 96;
  a2[1] = v20;
  a2 += 2;
  if ((v11 & 0x200) == 0)
  {
LABEL_16:
    if ((v11 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_44;
  }
LABEL_41:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v21 = *(unsigned char *)(a1 + 182);
  *a2 = 104;
  a2[1] = v21;
  a2 += 2;
  if ((v11 & 0x400) == 0)
  {
LABEL_17:
    if ((v11 & 8) == 0) {
      goto LABEL_50;
    }
    goto LABEL_47;
  }
LABEL_44:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v22 = *(unsigned char *)(a1 + 183);
  *a2 = 112;
  a2[1] = v22;
  a2 += 2;
  if ((v11 & 8) != 0)
  {
LABEL_47:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v23 = *(unsigned char *)(a1 + 176);
    *a2 = 120;
    a2[1] = v23;
    a2 += 2;
  }
LABEL_50:
  uint64_t v24 = *(unsigned int *)(a1 + 80);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 8 * v24;
    do
    {
      uint64_t v27 = *(void **)(*(void *)(a1 + 88) + v25 + 8);
      if (*((char *)v27 + 23) < 0)
      {
        int64_t v28 = v27[1];
        if (v28 > 127) {
          goto LABEL_61;
        }
      }
      else
      {
        int64_t v28 = *((unsigned __int8 *)v27 + 23);
      }
      if (*a3 - (void)a2 + 13 >= v28)
      {
        *(_WORD *)a2 = 386;
        a2[2] = v28;
        if (*((char *)v27 + 23) < 0) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v29 = a2 + 3;
        memcpy(v29, v27, v28);
        a2 = &v29[v28];
        goto LABEL_59;
      }
LABEL_61:
      a2 = (char *)sub_188A868(a3, 16, (uint64_t)v27, a2);
LABEL_59:
      v25 += 8;
    }
    while (v26 != v25);
  }
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v30 = *(unsigned char *)(a1 + 177);
    *(_WORD *)a2 = 392;
    a2[2] = v30;
    a2 += 3;
  }
  if ((v11 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v31 = *(unsigned char *)(a1 + 178);
    *(_WORD *)a2 = 400;
    a2[2] = v31;
    a2 += 3;
  }
  int v32 = *(_DWORD *)(a1 + 104);
  if (v32)
  {
    for (int j = 0; j != v32; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v34 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      *(_WORD *)a2 = 418;
      unsigned int v35 = *(_DWORD *)(v34 + 20);
      a2[2] = v35;
      if (v35 > 0x7F) {
        uint64_t v36 = sub_188A9CC(v35, a2 + 2);
      }
      else {
        uint64_t v36 = a2 + 3;
      }
      a2 = sub_11DEF68(v34, v36, a3);
    }
  }
  uint64_t v37 = *(unsigned int *)(a1 + 120);
  if ((int)v37 >= 1)
  {
    for (uint64_t k = 0; k != v37; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v39 = *(int *)(*(void *)(a1 + 128) + 4 * k);
      *(_WORD *)a2 = 424;
      a2[2] = v39;
      if (v39 > 0x7F)
      {
        a2[2] = v39 | 0x80;
        unint64_t v40 = v39 >> 7;
        a2[3] = v39 >> 7;
        a2 += 4;
        if (v39 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v41 = v40 >> 14;
            v40 >>= 7;
            *a2++ = v40;
          }
          while (v41);
        }
      }
      else
      {
        a2 += 3;
      }
    }
  }
  uint64_t v42 = *(unsigned int *)(a1 + 136);
  if ((int)v42 >= 1)
  {
    for (uint64_t m = 0; m != v42; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v44 = *(int *)(*(void *)(a1 + 144) + 4 * m);
      *(_WORD *)a2 = 432;
      a2[2] = v44;
      if (v44 > 0x7F)
      {
        a2[2] = v44 | 0x80;
        unint64_t v45 = v44 >> 7;
        a2[3] = v44 >> 7;
        a2 += 4;
        if (v44 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v46 = v45 >> 14;
            v45 >>= 7;
            *a2++ = v45;
          }
          while (v46);
        }
      }
      else
      {
        a2 += 3;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 10000, 11001, a2, a3);
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if ((v47 & 1) == 0) {
    return a2;
  }
  unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v49 + 31) < 0)
  {
    uint64_t v50 = *(void **)(v49 + 8);
    uint64_t v51 = *(void *)(v49 + 16);
  }
  else
  {
    uint64_t v50 = (void *)(v49 + 8);
    LODWORD(v51) = *(unsigned __int8 *)(v49 + 31);
  }
  if (*a3 - (void)a2 >= (int)v51)
  {
    uint64_t v52 = (int)v51;
    memcpy(a2, v50, (int)v51);
    a2 += v52;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v50, v51, a2);
}

uint64_t sub_11E238C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_11E325C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 80);
  uint64_t v11 = v4 + 2 * v10;
  if ((int)v10 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(int *)(a1 + 104);
  uint64_t v17 = v11 + 2 * v16;
  uint64_t v18 = *(void *)(a1 + 112);
  if (v18) {
    char v19 = (uint64_t *)(v18 + 8);
  }
  else {
    char v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_11DF0C4(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  uint64_t v23 = *(unsigned int *)(a1 + 120);
  if (v23)
  {
    int v24 = 0;
    uint64_t v25 = 0;
    do
    {
      int v26 = *(_DWORD *)(*(void *)(a1 + 128) + 4 * v24);
      if (v26 < 0) {
        uint64_t v27 = 10;
      }
      else {
        uint64_t v27 = (9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6;
      }
      v25 += v27;
      ++v24;
    }
    while (v23 != v24);
  }
  else
  {
    uint64_t v25 = 0;
  }
  uint64_t v28 = *(unsigned int *)(a1 + 136);
  if (v28)
  {
    int v29 = 0;
    uint64_t v30 = 0;
    do
    {
      int v31 = *(_DWORD *)(*(void *)(a1 + 144) + 4 * v29);
      if (v31 < 0) {
        uint64_t v32 = 10;
      }
      else {
        uint64_t v32 = (9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6;
      }
      v30 += v32;
      ++v29;
    }
    while (v28 != v29);
  }
  else
  {
    uint64_t v30 = 0;
  }
  uint64_t v33 = v25 + v17 + 2 * (v28 + v23) + v30;
  int v34 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v34)
  {
    if (v34)
    {
      unint64_t v40 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v41 = *(unsigned __int8 *)(v40 + 23);
      uint64_t v42 = *(void *)(v40 + 8);
      if ((v41 & 0x80u) == 0) {
        uint64_t v42 = v41;
      }
      v33 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v34 & 2) == 0)
      {
LABEL_37:
        if ((v34 & 4) == 0)
        {
LABEL_39:
          uint64_t v36 = v33 + 2;
          if ((v34 & 8) == 0) {
            uint64_t v36 = v33;
          }
          if ((v34 & 0x10) != 0) {
            v36 += 3;
          }
          if ((v34 & 0x20) != 0) {
            v36 += 3;
          }
          if ((v34 & 0x40) != 0) {
            v36 += 2;
          }
          if ((v34 & 0x80) != 0) {
            uint64_t v33 = v36 + 2;
          }
          else {
            uint64_t v33 = v36;
          }
          goto LABEL_50;
        }
LABEL_38:
        uint64_t v35 = sub_15B1D1C(*(void *)(a1 + 168));
        v33 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_39;
      }
    }
    else if ((v34 & 2) == 0)
    {
      goto LABEL_37;
    }
    uint64_t v43 = sub_15B0D90(*(void *)(a1 + 160));
    v33 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v34 & 4) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
LABEL_50:
  uint64_t v37 = v33 + 2;
  if ((v34 & 0x100) == 0) {
    uint64_t v37 = v33;
  }
  if ((v34 & 0x200) != 0) {
    v37 += 2;
  }
  if ((v34 & 0x400) != 0) {
    v37 += 2;
  }
  if ((v34 & 0x700) != 0) {
    uint64_t result = v37;
  }
  else {
    uint64_t result = v33;
  }
  uint64_t v39 = *(void *)(a1 + 8);
  if (v39)
  {
    unint64_t v44 = v39 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v44 + 31) < 0) {
      uint64_t v45 = *(void *)(v44 + 16);
    }
    else {
      uint64_t v45 = *(unsigned __int8 *)(v44 + 31);
    }
    result += v45;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_11E26C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_122B1B4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122B240((std::string *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 120);
  if (v19)
  {
    uint64_t v20 = *(int *)(a1 + 120);
    sub_188C80C((unsigned int *)(a1 + 120), v20 + v19);
    uint64_t v21 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v21 + 4 * v20), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 120));
  }
  int v22 = *(_DWORD *)(a2 + 136);
  if (v22)
  {
    uint64_t v23 = *(int *)(a1 + 136);
    sub_188C80C((unsigned int *)(a1 + 136), v23 + v22);
    uint64_t v24 = *(void *)(a1 + 144);
    *(_DWORD *)(a1 + 136) += *(_DWORD *)(a2 + 136);
    memcpy((void *)(v24 + 4 * v23), *(const void **)(a2 + 144), 4 * *(int *)(a2 + 136));
  }
  int v25 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v25)
  {
    if (v25)
    {
      uint64_t v27 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v28 = *(void *)(a1 + 8);
      int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        int v29 = (uint64_t *)*v29;
      }
      sub_1881DF4((std::string **)(a1 + 152), v27, v29);
      if ((v25 & 2) == 0)
      {
LABEL_17:
        if ((v25 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_46;
      }
    }
    else if ((v25 & 2) == 0)
    {
      goto LABEL_17;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v30 = *(void *)(a1 + 160);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        uint64_t v32 = (void *)*v32;
      }
      uint64_t v30 = sub_15C1918((uint64_t)v32);
      *(void *)(a1 + 160) = v30;
    }
    if (*(void *)(a2 + 160)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      uint64_t v33 = &off_253F1A0;
    }
    sub_15B0E24(v30, (uint64_t)v33);
    if ((v25 & 4) == 0)
    {
LABEL_18:
      if ((v25 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_54;
    }
LABEL_46:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v34 = *(void *)(a1 + 168);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        uint64_t v36 = (void *)*v36;
      }
      uint64_t v34 = sub_15C19EC((uint64_t)v36);
      *(void *)(a1 + 168) = v34;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v37 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v37 = &off_253F208;
    }
    sub_15B1E3C(v34, (uint64_t)v37);
    if ((v25 & 8) == 0)
    {
LABEL_19:
      if ((v25 & 0x10) == 0) {
        goto LABEL_20;
      }
      goto LABEL_55;
    }
LABEL_54:
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    if ((v25 & 0x10) == 0)
    {
LABEL_20:
      if ((v25 & 0x20) == 0) {
        goto LABEL_21;
      }
      goto LABEL_56;
    }
LABEL_55:
    *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
    if ((v25 & 0x20) == 0)
    {
LABEL_21:
      if ((v25 & 0x40) == 0) {
        goto LABEL_22;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(unsigned char *)(a1 + 178) = *(unsigned char *)(a2 + 178);
    if ((v25 & 0x40) == 0)
    {
LABEL_22:
      if ((v25 & 0x80) == 0)
      {
LABEL_24:
        *(_DWORD *)(a1 + 40) |= v25;
        goto LABEL_25;
      }
LABEL_23:
      *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
      goto LABEL_24;
    }
LABEL_57:
    *(unsigned char *)(a1 + 179) = *(unsigned char *)(a2 + 179);
    if ((v25 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
LABEL_25:
  if ((v25 & 0x700) == 0) {
    goto LABEL_31;
  }
  if ((v25 & 0x100) == 0)
  {
    if ((v25 & 0x200) == 0) {
      goto LABEL_28;
    }
LABEL_60:
    *(unsigned char *)(a1 + 182) = *(unsigned char *)(a2 + 182);
    if ((v25 & 0x400) == 0) {
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  *(unsigned char *)(a1 + 181) = *(unsigned char *)(a2 + 181);
  if ((v25 & 0x200) != 0) {
    goto LABEL_60;
  }
LABEL_28:
  if ((v25 & 0x400) != 0) {
LABEL_29:
  }
    *(unsigned char *)(a1 + 183) = *(unsigned char *)(a2 + 183);
LABEL_30:
  *(_DWORD *)(a1 + 40) |= v25;
LABEL_31:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v26 = *(void *)(a2 + 8);
  if (v26)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11E2A70(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 160));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 168));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_11E2AC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiGeocodingRequest");
}

uint64_t sub_11E2AD8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E2B90(uint64_t a1)
{
  sub_11E2AD8(a1);

  operator delete();
}

uint64_t sub_11E2BC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x1C) != 0)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11E2C54(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 32);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        int v17 = (void *)sub_188C244(v16, *(char **)v37, (uint64_t)a3);
        goto LABEL_47;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v37 = v31;
          *(unsigned char *)(a1 + 44) = v32 != 0;
          if (!v31) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v37 = v18;
          *(unsigned char *)(a1 + 44) = v19 != 0;
        }
        goto LABEL_48;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_40;
        }
        uint64_t v21 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v37 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v37) {
            goto LABEL_68;
          }
          unint64_t v22 = v33;
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_27:
          *(void *)uint64_t v37 = v21;
        }
        if (v22 <= 0x3C && ((1 << v22) & 0x1000070041F1FC03) != 0)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 48) = v22;
          goto LABEL_48;
        }
        if (*v7) {
          uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v36 = 10;
        goto LABEL_59;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_40;
        }
        uint64_t v26 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v27 = *v26;
        int v28 = v22 + (v27 << 7);
        unint64_t v22 = (v28 - 128);
        if (v27 < 0)
        {
          *(void *)uint64_t v37 = sub_188C138((uint64_t)v8, (v28 - 128));
          if (!*(void *)v37) {
            goto LABEL_68;
          }
          unint64_t v22 = v34;
        }
        else
        {
          uint64_t v26 = v8 + 2;
LABEL_37:
          *(void *)uint64_t v37 = v26;
        }
        if (v22 > 2)
        {
          if (*v7) {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v36 = 11;
LABEL_59:
          sub_188C020(v36, v22, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v22;
        }
        goto LABEL_48;
      default:
LABEL_40:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v37;
          }
          int v17 = sub_1885AC0(v9, v30, v8, a3);
LABEL_47:
          *(void *)uint64_t v37 = v17;
          if (!v17) {
            goto LABEL_68;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

unsigned char *sub_11E3030(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_11;
  }
LABEL_8:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 44);
  unsigned char *v4 = 24;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 48);
    unsigned char *v4 = 80;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_17:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 40);
    unsigned char *v4 = 88;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11E325C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_24;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
  if ((v1 & 8) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x10) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 48);
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v11 >= 0) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 11;
    }
    v2 += v13;
  }
LABEL_24:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11E33AC(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
LABEL_19:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_20:
    v3[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11E34C4()
{
  return 1;
}

void *sub_11E34CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiGeocodingField");
}

void *sub_11E34DC(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E3550(void *a1)
{
  sub_11E34DC(a1);

  operator delete();
}

uint64_t sub_11E3588(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11E35A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(void *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(void *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_11E3720(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

unint64_t sub_11E3848(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v1 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  else {
    unint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_11E38B0()
{
  return 1;
}

void *sub_11E38B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeoCutoutMask");
}

void *sub_11E38C8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E3944(void *a1)
{
  sub_11E38C8(a1);

  operator delete();
}

uint64_t sub_11E397C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11E3998(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v27 + 2;
      }
    }
    int v27 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    unint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      unint64_t v22 = v8 + 2;
LABEL_39:
      int v27 = v22;
      *(_DWORD *)(a1 + 40) = v23;
      int v5 = 1;
      goto LABEL_40;
    }
    int v25 = (char *)sub_188C0D0((uint64_t)v8, v23);
    int v27 = v25;
    *(_DWORD *)(a1 + 40) = v26;
    int v5 = 1;
    if (!v25) {
      goto LABEL_49;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    unint64_t v16 = v8 - 1;
    while (1)
    {
      int v27 = v16 + 1;
      int v17 = v16[1];
      if (v16[1] < 0)
      {
        int v18 = v17 + (v16[2] << 7);
        int v17 = v18 - 128;
        if (v16[2] < 0)
        {
          unint64_t v16 = (char *)sub_188C0D0((uint64_t)(v16 + 1), v18 - 128);
          int v17 = v19;
        }
        else
        {
          v16 += 3;
        }
      }
      else
      {
        v16 += 2;
      }
      int v27 = v16;
      uint64_t v20 = *(unsigned int *)(a1 + 24);
      if (v20 == *(_DWORD *)(a1 + 28))
      {
        int v21 = v20 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v20 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v20) = v17;
        unint64_t v16 = v27;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v20) = v17;
        int v21 = v20 + 1;
      }
      *(_DWORD *)(a1 + 24) = v21;
      if (!v16) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 16) {
        goto LABEL_40;
      }
    }
  }
  if (v9 == 18)
  {
    int v15 = sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
    goto LABEL_20;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v27;
    }
    int v15 = sub_1885AC0(v9, v14, v8, a3);
LABEL_20:
    int v27 = (char *)v15;
    if (!v15) {
      goto LABEL_49;
    }
    goto LABEL_40;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  int v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v27;
}

unsigned char *sub_11E3C14(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11E3DE4(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16)) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11E3E70(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v8 = *(_DWORD *)(a2 + 40);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11E3F30()
{
  return 1;
}

void *sub_11E3F38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.VendorCutoutMask");
}

void *sub_11E3F48(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E3FC4(void *a1)
{
  sub_11E3F48(a1);

  operator delete();
}

uint64_t sub_11E3FFC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11E4010(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v6 = v20 + 1;
    unsigned int v7 = *v20;
    if (*v20 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unsigned int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unsigned int v6 = v20 + 2;
      }
    }
    uint64_t v20 = v6;
    if ((v7 & 0xFFFFFFF8) == 8)
    {
      if (v7 == 8)
      {
        unsigned int v10 = v6 - 1;
        while (1)
        {
          uint64_t v20 = v10 + 1;
          int v11 = v10[1];
          if (v10[1] < 0)
          {
            int v12 = v11 + (v10[2] << 7);
            int v11 = v12 - 128;
            if (v10[2] < 0)
            {
              unsigned int v10 = (char *)sub_188C0D0((uint64_t)(v10 + 1), v12 - 128);
              int v11 = v13;
            }
            else
            {
              v10 += 3;
            }
          }
          else
          {
            v10 += 2;
          }
          uint64_t v20 = v10;
          uint64_t v14 = *(unsigned int *)(a1 + 16);
          if (v14 == *(_DWORD *)(a1 + 20))
          {
            int v15 = v14 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v14 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            unsigned int v10 = v20;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v14) = v11;
            int v15 = v14 + 1;
          }
          *(_DWORD *)(a1 + 16) = v15;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 8) {
            goto LABEL_32;
          }
        }
      }
      if (v7 == 10)
      {
        unint64_t v16 = sub_188C2CC((unsigned int *)(a1 + 16), (unsigned __int8 *)v6, (uint64_t)a3);
        goto LABEL_31;
      }
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v6 = v20;
    }
    unint64_t v16 = sub_1885AC0(v7, v18, v6, a3);
LABEL_31:
    uint64_t v20 = (char *)v16;
    if (!v16) {
      return 0;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v20;
  }
  return 0;
}

char *sub_11E4210(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unsigned int v8 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unsigned int v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unsigned int v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_11E4360(uint64_t a1)
{
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 16)) + *(unsigned int *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

std::string *sub_11E43C0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if (v4)
  {
    uint64_t v5 = &result->__r_.__value_.__r.__words[2];
    uint64_t v6 = SLODWORD(result->__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&result->__r_.__value_.__r.__words[2], v6 + v4);
    std::string::pointer data = v3[1].__r_.__value_.__l.__data_;
    *(_DWORD *)v5 += *(_DWORD *)(a2 + 16);
    uint64_t result = (std::string *)memcpy(&data[4 * v6], *(const void **)(a2 + 24), 4 * *(int *)(a2 + 16));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11E4464()
{
  return 1;
}

void *sub_11E446C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.DataProcessHintArea");
}

uint64_t sub_11E447C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_249BB30;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = &qword_2550250;
  *(_DWORD *)(a1 + 272) = 0;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  return a1;
}

void sub_11E4528(_Unwind_Exception *a1)
{
  *unint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_11E4558(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 232);
  if (*(uint64_t **)(a1 + 232) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252D860 && *(void *)(a1 + 240))
  {
    sub_16BE0FC();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122B028((void *)(a1 + 208));
  sub_122AFA8((void *)(a1 + 184));
  sub_1889DE8((void *)(a1 + 160));
  sub_122AF28((void *)(a1 + 136));
  sub_1889DA8(a1 + 120);
  sub_122AEA8((void *)(a1 + 96));
  sub_122AE28((void *)(a1 + 72));
  sub_122ADA8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E4684(uint64_t a1)
{
  sub_11E4558(a1);

  operator delete();
}

uint64_t sub_11E46BC(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_11E7004(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_11DF490(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  sub_122ABC4(a1 + 96);
  *(_DWORD *)(a1 + 120) = 0;
  sub_122AAFC(a1 + 136);
  sub_188CC00(a1 + 160);
  uint64_t result = sub_122AB64(a1 + 184);
  uint64_t v9 = *(unsigned int *)(a1 + 216);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_11E085C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 216) = 0;
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 3) != 0)
  {
    if ((v12 & 1) == 0) {
      goto LABEL_17;
    }
    unint64_t v13 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v13 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
LABEL_17:
      if ((v12 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    **(unsigned char **)unint64_t v13 = 0;
    *(void *)(v13 + 8) = 0;
    if ((v12 & 2) != 0) {
LABEL_18:
    }
      uint64_t result = sub_16BE138(*(void *)(a1 + 240));
  }
LABEL_19:
  if ((v12 & 0xFC) != 0)
  {
    *(void *)(a1 + 248) = 0;
    *(void *)(a1 + 256) = 0;
    *(void *)(a1 + 263) = 0;
  }
  if ((v12 & 0x300) != 0)
  {
    *(unsigned char *)(a1 + 275) = 0;
    *(_DWORD *)(a1 + 271) = 0;
  }
  char v15 = *(unsigned char *)(a1 + 8);
  uint64_t v14 = a1 + 8;
  *(_DWORD *)(v14 + 32) = 0;
  if (v15)
  {
    return sub_188B4AC((uint64_t *)v14);
  }
  return result;
}

uint64_t sub_11E4828(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v113 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v113, a3[11].i32[1]) & 1) == 0)
  {
    int v111 = 0;
    uint64_t v108 = (uint64_t *)(a1 + 8);
    int v109 = (uint64_t *)(a1 + 184);
    uint64_t v110 = (uint64_t *)(a1 + 208);
    uint64_t v112 = (uint64_t **)(a1 + 160);
    while (1)
    {
      uint64_t v6 = (unsigned __int8 *)(*(void *)v113 + 1);
      unsigned int v7 = **(unsigned char **)v113;
      if ((char)**(unsigned char **)v113 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if ((char)*v6 < 0)
        {
          uint64_t v6 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v113, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = (unsigned __int8 *)(*(void *)v113 + 2);
        }
      }
      *(void *)int v113 = v6;
      switch(v7 >> 3)
      {
        case 1u:
          if (v7 != 10) {
            goto LABEL_166;
          }
          unsigned int v10 = v6 - 1;
          while (1)
          {
            uint64_t v11 = v10 + 1;
            *(void *)int v113 = v10 + 1;
            int v12 = *(_DWORD **)(a1 + 64);
            if (v12 && (uint64_t v13 = *(int *)(a1 + 56), (int)v13 < *v12))
            {
              *(_DWORD *)(a1 + 56) = v13 + 1;
              uint64_t v14 = *(void *)&v12[2 * v13 + 2];
            }
            else
            {
              char v15 = sub_11E8054(*(void *)(a1 + 48));
              uint64_t v14 = sub_188CDC8(a1 + 48, (uint64_t)v15);
              uint64_t v11 = *(unsigned __int8 **)v113;
            }
            unsigned int v10 = (unsigned __int8 *)sub_11E53A4(a3, v14, v11);
            *(void *)int v113 = v10;
            if (!v10) {
              goto LABEL_185;
            }
            if (*(void *)a3 <= (unint64_t)v10 || *v10 != 10) {
              goto LABEL_176;
            }
          }
        case 2u:
          if (v7 != 18) {
            goto LABEL_166;
          }
          uint64_t v16 = v6 - 1;
          while (1)
          {
            int v17 = v16 + 1;
            *(void *)int v113 = v16 + 1;
            uint64_t v18 = *(_DWORD **)(a1 + 88);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 80), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 80) = v19 + 1;
              uint64_t v20 = *(void *)&v18[2 * v19 + 2];
            }
            else
            {
              sub_11E7B98(*(void *)(a1 + 72));
              uint64_t v20 = sub_188CDC8(a1 + 72, v21);
              int v17 = *(unsigned __int8 **)v113;
            }
            uint64_t v16 = (unsigned __int8 *)sub_11E5434(a3, v20, v17);
            *(void *)int v113 = v16;
            if (!v16) {
              goto LABEL_185;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_176;
            }
          }
        case 3u:
          if (v7 != 26) {
            goto LABEL_166;
          }
          unint64_t v22 = (char *)(v6 - 1);
          while (1)
          {
            int v23 = (unsigned __int8 *)(v22 + 1);
            *(void *)int v113 = v22 + 1;
            int v24 = *(_DWORD **)(a1 + 112);
            if (v24 && (uint64_t v25 = *(int *)(a1 + 104), (int)v25 < *v24))
            {
              *(_DWORD *)(a1 + 104) = v25 + 1;
              uint64_t v26 = *(void *)&v24[2 * v25 + 2];
            }
            else
            {
              int v27 = sub_11E7DC8(*(void *)(a1 + 96));
              uint64_t v26 = sub_188CDC8(a1 + 96, (uint64_t)v27);
              int v23 = *(unsigned __int8 **)v113;
            }
            unint64_t v22 = sub_11E54C4(a3, v26, v23);
            *(void *)int v113 = v22;
            if (!v22) {
              goto LABEL_185;
            }
            if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
              goto LABEL_176;
            }
          }
        case 4u:
          if (v7 != 34) {
            goto LABEL_166;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          int v28 = *(void **)(a1 + 240);
          if (!v28)
          {
            BOOL v29 = (void *)(*v108 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v108) {
              BOOL v29 = (void *)*v29;
            }
            int v28 = sub_1786400((uint64_t)v29);
            *(void *)(a1 + 240) = v28;
            uint64_t v6 = *(unsigned __int8 **)v113;
          }
          uint64_t v30 = sub_119BC44(a3, (uint64_t)v28, v6);
          goto LABEL_175;
        case 5u:
          if (v7 != 40) {
            goto LABEL_166;
          }
          v111 |= 4u;
          uint64_t v31 = (char *)(v6 + 1);
          uint64_t v32 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_50;
          }
          int v33 = *v31;
          uint64_t v32 = v32 + (v33 << 7) - 128;
          if (v33 < 0)
          {
            uint64_t v90 = sub_188C138((uint64_t)v6, v32);
            *(void *)int v113 = v90;
            *(void *)(a1 + 248) = v91;
            if (!v90) {
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t v31 = (char *)(v6 + 2);
LABEL_50:
            *(void *)int v113 = v31;
            *(void *)(a1 + 248) = v32;
          }
          goto LABEL_176;
        case 6u:
          if (v7 != 48) {
            goto LABEL_166;
          }
          v111 |= 8u;
          unint64_t v34 = (char *)(v6 + 1);
          uint64_t v35 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_55;
          }
          int v36 = *v34;
          uint64_t v35 = v35 + (v36 << 7) - 128;
          if (v36 < 0)
          {
            uint64_t v92 = sub_188C138((uint64_t)v6, v35);
            *(void *)int v113 = v92;
            *(void *)(a1 + 256) = v93;
            if (!v92) {
              goto LABEL_185;
            }
          }
          else
          {
            unint64_t v34 = (char *)(v6 + 2);
LABEL_55:
            *(void *)int v113 = v34;
            *(void *)(a1 + 256) = v35;
          }
          goto LABEL_176;
        case 7u:
          if (v7 != 56) {
            goto LABEL_166;
          }
          v111 |= 0x10u;
          uint64_t v37 = (char *)(v6 + 1);
          int v38 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_60;
          }
          int v39 = *v37;
          int v38 = v38 + (v39 << 7) - 128;
          if (v39 < 0)
          {
            uint64_t v94 = sub_188C0D0((uint64_t)v6, v38);
            *(void *)int v113 = v94;
            *(_DWORD *)(a1 + 264) = v95;
            if (!v94) {
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t v37 = (char *)(v6 + 2);
LABEL_60:
            *(void *)int v113 = v37;
            *(_DWORD *)(a1 + 264) = v38;
          }
          goto LABEL_176;
        case 8u:
          if (v7 == 64)
          {
            unint64_t v40 = v6 - 1;
            while (1)
            {
              *(void *)int v113 = v40 + 1;
              int v41 = v40[1];
              if ((char)v40[1] < 0)
              {
                int v42 = v41 + (v40[2] << 7);
                int v41 = v42 - 128;
                if ((char)v40[2] < 0)
                {
                  unint64_t v40 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v40 + 1), v42 - 128);
                  int v41 = v43;
                }
                else
                {
                  v40 += 3;
                }
              }
              else
              {
                v40 += 2;
              }
              *(void *)int v113 = v40;
              uint64_t v44 = *(unsigned int *)(a1 + 120);
              if (v44 == *(_DWORD *)(a1 + 124))
              {
                int v45 = v44 + 1;
                sub_188C80C((unsigned int *)(a1 + 120), v44 + 1);
                *(_DWORD *)(*(void *)(a1 + 128) + 4 * v44) = v41;
                unint64_t v40 = *(unsigned __int8 **)v113;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 128) + 4 * v44) = v41;
                int v45 = v44 + 1;
              }
              *(_DWORD *)(a1 + 120) = v45;
              if (!v40) {
                goto LABEL_185;
              }
              if (*(void *)a3 <= (unint64_t)v40 || *v40 != 64) {
                goto LABEL_176;
              }
            }
          }
          if (v7 == 66)
          {
            uint64_t v30 = (uint64_t)sub_188C2CC((unsigned int *)(a1 + 120), v6, (uint64_t)a3);
          }
          else
          {
LABEL_166:
            if (v7) {
              BOOL v105 = (v7 & 7) == 4;
            }
            else {
              BOOL v105 = 1;
            }
            if (v105)
            {
              if (v6)
              {
                a3[10].i32[0] = v7 - 1;
                goto LABEL_3;
              }
LABEL_185:
              *(void *)int v113 = 0;
              goto LABEL_3;
            }
            if ((v7 - 80000) >> 3 > 0x3E8)
            {
              if (*v108)
              {
                uint64_t v106 = (std::string *)((*v108 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v106 = (std::string *)sub_188DBD8(v108);
                uint64_t v6 = *(unsigned __int8 **)v113;
              }
              uint64_t v30 = (uint64_t)sub_1885AC0(v7, v106, (char *)v6, a3);
            }
            else
            {
              uint64_t v30 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v7, (char *)v6, (uint64_t)&off_252D860, v108, a3);
            }
          }
LABEL_175:
          *(void *)int v113 = v30;
          if (!v30) {
            goto LABEL_185;
          }
LABEL_176:
          if (sub_11947B8((uint64_t)a3, (char **)v113, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 9u:
          if (v7 != 74) {
            goto LABEL_166;
          }
          unint64_t v46 = (char *)(v6 - 1);
          while (1)
          {
            uint64_t v47 = (unsigned __int8 *)(v46 + 1);
            *(void *)int v113 = v46 + 1;
            uint64_t v48 = *(_DWORD **)(a1 + 152);
            if (v48 && (uint64_t v49 = *(int *)(a1 + 144), (int)v49 < *v48))
            {
              *(_DWORD *)(a1 + 144) = v49 + 1;
              uint64_t v50 = *(void *)&v48[2 * v49 + 2];
            }
            else
            {
              uint64_t v51 = sub_11E7E40(*(void *)(a1 + 136));
              uint64_t v50 = sub_188CDC8(a1 + 136, v51);
              uint64_t v47 = *(unsigned __int8 **)v113;
            }
            unint64_t v46 = sub_11E5554(a3, v50, v47);
            *(void *)int v113 = v46;
            if (!v46) {
              goto LABEL_185;
            }
            if (*(void *)a3 <= (unint64_t)v46 || *v46 != 74) {
              goto LABEL_176;
            }
          }
        case 0xAu:
          if (v7 != 82) {
            goto LABEL_166;
          }
          uint64_t v52 = (const std::string::value_type *)(v6 - 1);
          while (1)
          {
            int v53 = (char *)(v52 + 1);
            *(void *)int v113 = v52 + 1;
            uint64_t v54 = *(_DWORD **)(a1 + 176);
            if (v54 && (uint64_t v55 = *(int *)(a1 + 168), (int)v55 < *v54))
            {
              *(_DWORD *)(a1 + 168) = v55 + 1;
              int v56 = *(std::string **)&v54[2 * v55 + 2];
            }
            else
            {
              if (!*v112) {
                operator new();
              }
              *uint64_t v58 = v57;
              v58[1] = sub_3A6EDC;
              void *v57 = 0;
              v57[1] = 0;
              v57[2] = 0;
              int v56 = (std::string *)sub_188CDC8((uint64_t)v112, (uint64_t)v57);
              int v53 = *(char **)v113;
            }
            uint64_t v52 = sub_188C244(v56, v53, (uint64_t)a3);
            *(void *)int v113 = v52;
            if (!v52) {
              goto LABEL_185;
            }
            if (*(void *)a3 <= (unint64_t)v52 || *v52 != 82) {
              goto LABEL_176;
            }
          }
        case 0xBu:
          if (v7 != 90) {
            goto LABEL_166;
          }
          uint64_t v59 = (char *)(v6 - 1);
          while (1)
          {
            uint64_t v60 = (unsigned __int8 *)(v59 + 1);
            *(void *)int v113 = v59 + 1;
            uint64_t v61 = *(_DWORD **)(a1 + 200);
            if (v61 && (uint64_t v62 = *(int *)(a1 + 192), (int)v62 < *v61))
            {
              *(_DWORD *)(a1 + 192) = v62 + 1;
              uint64_t v63 = *(void *)&v61[2 * v62 + 2];
            }
            else
            {
              uint64_t v64 = sub_11E7EDC(*v109);
              uint64_t v63 = sub_188CDC8((uint64_t)v109, v64);
              uint64_t v60 = *(unsigned __int8 **)v113;
            }
            uint64_t v59 = sub_11E55E4(a3, v63, v60);
            *(void *)int v113 = v59;
            if (!v59) {
              goto LABEL_185;
            }
            if (*(void *)a3 <= (unint64_t)v59 || *v59 != 90) {
              goto LABEL_176;
            }
          }
        case 0xCu:
          if (v7 != 98) {
            goto LABEL_166;
          }
          int v65 = v6 - 1;
          while (1)
          {
            int v66 = v65 + 1;
            *(void *)int v113 = v65 + 1;
            int v67 = *(_DWORD **)(a1 + 224);
            if (v67 && (uint64_t v68 = *(int *)(a1 + 216), (int)v68 < *v67))
            {
              *(_DWORD *)(a1 + 216) = v68 + 1;
              uint64_t v69 = *(void *)&v67[2 * v68 + 2];
            }
            else
            {
              unint64_t v70 = sub_11E7C5C(*v110);
              uint64_t v69 = sub_188CDC8((uint64_t)v110, (uint64_t)v70);
              int v66 = *(unsigned __int8 **)v113;
            }
            int v65 = (unsigned __int8 *)sub_11E5674(a3, v69, v66);
            *(void *)int v113 = v65;
            if (!v65) {
              goto LABEL_185;
            }
            if (*(void *)a3 <= (unint64_t)v65 || *v65 != 98) {
              goto LABEL_176;
            }
          }
        case 0xDu:
          if (v7 != 106) {
            goto LABEL_166;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v71 = *(void *)(a1 + 8);
          uint64_t v72 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
          if (v71) {
            uint64_t v72 = (uint64_t *)*v72;
          }
          unint64_t v73 = (std::string *)sub_1880F84((void *)(a1 + 232), v72);
          uint64_t v30 = (uint64_t)sub_188C244(v73, *(char **)v113, (uint64_t)a3);
          goto LABEL_175;
        case 0x14u:
          if (v7 != 160) {
            goto LABEL_166;
          }
          v111 |= 0x20u;
          uint64_t v74 = (char *)(v6 + 1);
          uint64_t v75 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_125;
          }
          int v76 = *v74;
          uint64_t v75 = v75 + (v76 << 7) - 128;
          if (v76 < 0)
          {
            uint64_t v96 = sub_188C138((uint64_t)v6, v75);
            *(void *)int v113 = v96;
            *(unsigned char *)(a1 + 268) = v97 != 0;
            if (!v96) {
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t v74 = (char *)(v6 + 2);
LABEL_125:
            *(void *)int v113 = v74;
            *(unsigned char *)(a1 + 268) = v75 != 0;
          }
          goto LABEL_176;
        case 0x15u:
          if (v7 != 168) {
            goto LABEL_166;
          }
          v111 |= 0x40u;
          uint64_t v77 = (char *)(v6 + 1);
          uint64_t v78 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_130;
          }
          int v79 = *v77;
          uint64_t v78 = v78 + (v79 << 7) - 128;
          if (v79 < 0)
          {
            uint64_t v98 = sub_188C138((uint64_t)v6, v78);
            *(void *)int v113 = v98;
            *(unsigned char *)(a1 + 269) = v99 != 0;
            if (!v98) {
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t v77 = (char *)(v6 + 2);
LABEL_130:
            *(void *)int v113 = v77;
            *(unsigned char *)(a1 + 269) = v78 != 0;
          }
          goto LABEL_176;
        case 0x16u:
          if (v7 != 176) {
            goto LABEL_166;
          }
          v111 |= 0x80u;
          uint64_t v80 = (char *)(v6 + 1);
          uint64_t v81 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_135;
          }
          int v82 = *v80;
          uint64_t v81 = v81 + (v82 << 7) - 128;
          if (v82 < 0)
          {
            uint64_t v100 = sub_188C138((uint64_t)v6, v81);
            *(void *)int v113 = v100;
            *(unsigned char *)(a1 + 270) = v101 != 0;
            if (!v100) {
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t v80 = (char *)(v6 + 2);
LABEL_135:
            *(void *)int v113 = v80;
            *(unsigned char *)(a1 + 270) = v81 != 0;
          }
          goto LABEL_176;
        case 0x17u:
          if (v7 != 184) {
            goto LABEL_166;
          }
          v111 |= 0x100u;
          uint64_t v83 = (char *)(v6 + 1);
          uint64_t v84 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_140;
          }
          int v85 = *v83;
          uint64_t v84 = v84 + (v85 << 7) - 128;
          if (v85 < 0)
          {
            uint64_t v102 = sub_188C138((uint64_t)v6, v84);
            *(void *)int v113 = v102;
            *(unsigned char *)(a1 + 271) = v103 != 0;
            if (!v102) {
              goto LABEL_185;
            }
          }
          else
          {
            uint64_t v83 = (char *)(v6 + 2);
LABEL_140:
            *(void *)int v113 = v83;
            *(unsigned char *)(a1 + 271) = v84 != 0;
          }
          goto LABEL_176;
        case 0x18u:
          if (v7 != 192) {
            goto LABEL_166;
          }
          uint64_t v86 = (char *)(v6 + 1);
          unint64_t v87 = *v6;
          if (((char)*v6 & 0x80000000) == 0) {
            goto LABEL_145;
          }
          int v88 = *v86;
          int v89 = v87 + (v88 << 7);
          unint64_t v87 = (v89 - 128);
          if (v88 < 0)
          {
            *(void *)int v113 = sub_188C138((uint64_t)v6, (v89 - 128));
            if (!*(void *)v113) {
              goto LABEL_185;
            }
            unint64_t v87 = v104;
          }
          else
          {
            uint64_t v86 = (char *)(v6 + 2);
LABEL_145:
            *(void *)int v113 = v86;
          }
          if (v87 > 5)
          {
            if (*v108) {
              int v107 = (std::string *)((*v108 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v107 = (std::string *)sub_188DBD8(v108);
            }
            sub_188C020(24, v87, v107);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x200u;
            *(_DWORD *)(a1 + 272) = v87;
          }
          goto LABEL_176;
        default:
          goto LABEL_166;
      }
    }
  }
  int v111 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 40) |= v111;
  return *(void *)v113;
}

uint64_t sub_11E53A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E709C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11E5434(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11DF59C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11E54C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E35A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11E5554(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E3998(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11E55E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E4010(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11E5674(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E0914(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11E5704(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_11E7534(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        char v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        char v15 = a2 + 2;
      }
      a2 = sub_11DFCE0(v13, (unint64_t)v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 104);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *a2 = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_11E3720(v18, (unint64_t)v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 40);
  if ((v21 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v22 = *(void *)(a1 + 240);
    *a2 = 34;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    a2[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, a2 + 1);
    }
    else {
      int v24 = a2 + 2;
    }
    a2 = sub_16BE2D4(v22, v24, a3);
  }
  if ((v21 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v25 = *(void *)(a1 + 248);
    *a2 = 40;
    a2[1] = v25;
    if (v25 > 0x7F)
    {
      a2[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      a2[2] = v25 >> 7;
      a2 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *a2++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v21 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v28 = *(void *)(a1 + 256);
    *a2 = 48;
    a2[1] = v28;
    if (v28 > 0x7F)
    {
      a2[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      a2[2] = v28 >> 7;
      a2 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *a2++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v21 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v31 = *(_DWORD *)(a1 + 264);
    *a2 = 56;
    a2[1] = v31;
    if (v31 > 0x7F)
    {
      a2[1] = v31 | 0x80;
      unsigned int v32 = v31 >> 7;
      a2[2] = v31 >> 7;
      a2 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unsigned int v33 = v32 >> 14;
          v32 >>= 7;
          *a2++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  uint64_t v34 = *(unsigned int *)(a1 + 120);
  if ((int)v34 >= 1)
  {
    for (uint64_t m = 0; m != v34; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unsigned int v36 = *(_DWORD *)(*(void *)(a1 + 128) + 4 * m);
      *a2 = 64;
      a2[1] = v36;
      if (v36 > 0x7F)
      {
        a2[1] = v36 | 0x80;
        unsigned int v37 = v36 >> 7;
        a2[2] = v36 >> 7;
        a2 += 3;
        if (v36 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unsigned int v38 = v37 >> 14;
            v37 >>= 7;
            *a2++ = v37;
          }
          while (v38);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  int v39 = *(_DWORD *)(a1 + 144);
  if (v39)
  {
    for (int n = 0; n != v39; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v41 = *(void *)(*(void *)(a1 + 152) + 8 * n + 8);
      *a2 = 74;
      unsigned int v42 = *(_DWORD *)(v41 + 20);
      a2[1] = v42;
      if (v42 > 0x7F) {
        int v43 = sub_188A9CC(v42, a2 + 1);
      }
      else {
        int v43 = a2 + 2;
      }
      a2 = sub_11E3C14(v41, (unint64_t)v43, a3);
    }
  }
  uint64_t v44 = *(unsigned int *)(a1 + 168);
  if ((int)v44 >= 1)
  {
    uint64_t v45 = 0;
    uint64_t v46 = 8 * v44;
    do
    {
      uint64_t v47 = *(void **)(*(void *)(a1 + 176) + v45 + 8);
      if (*((char *)v47 + 23) < 0)
      {
        int64_t v48 = v47[1];
        if (v48 > 127) {
          goto LABEL_81;
        }
      }
      else
      {
        int64_t v48 = *((unsigned __int8 *)v47 + 23);
      }
      if ((uint64_t)(*a3 - (void)a2 + 14) >= v48)
      {
        *a2 = 82;
        a2[1] = v48;
        if (*((char *)v47 + 23) < 0) {
          uint64_t v47 = (void *)*v47;
        }
        uint64_t v49 = a2 + 2;
        memcpy(v49, v47, v48);
        a2 = &v49[v48];
        goto LABEL_79;
      }
LABEL_81:
      a2 = (char *)sub_188A868(a3, 10, (uint64_t)v47, a2);
LABEL_79:
      v45 += 8;
    }
    while (v46 != v45);
  }
  int v50 = *(_DWORD *)(a1 + 192);
  if (v50)
  {
    for (iint i = 0; ii != v50; ++ii)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v52 = *(void *)(*(void *)(a1 + 200) + 8 * ii + 8);
      *a2 = 90;
      unsigned int v53 = *(_DWORD *)(v52 + 32);
      a2[1] = v53;
      if (v53 > 0x7F) {
        uint64_t v54 = sub_188A9CC(v53, a2 + 1);
      }
      else {
        uint64_t v54 = a2 + 2;
      }
      a2 = sub_11E4210(v52, v54, a3);
    }
  }
  int v55 = *(_DWORD *)(a1 + 216);
  if (v55)
  {
    for (jint j = 0; jj != v55; ++jj)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v57 = *(void *)(*(void *)(a1 + 224) + 8 * jj + 8);
      *a2 = 98;
      unsigned int v58 = *(_DWORD *)(v57 + 20);
      a2[1] = v58;
      if (v58 > 0x7F) {
        uint64_t v59 = sub_188A9CC(v58, a2 + 1);
      }
      else {
        uint64_t v59 = a2 + 2;
      }
      a2 = sub_11E0B04(v57, v59, a3);
    }
  }
  if (v21)
  {
    a2 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v21 & 0x20) == 0)
    {
LABEL_100:
      if ((v21 & 0x40) == 0) {
        goto LABEL_101;
      }
      goto LABEL_109;
    }
  }
  else if ((v21 & 0x20) == 0)
  {
    goto LABEL_100;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v60 = *(unsigned char *)(a1 + 268);
  *(_WORD *)a2 = 416;
  a2[2] = v60;
  a2 += 3;
  if ((v21 & 0x40) == 0)
  {
LABEL_101:
    if ((v21 & 0x80) == 0) {
      goto LABEL_102;
    }
    goto LABEL_112;
  }
LABEL_109:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v61 = *(unsigned char *)(a1 + 269);
  *(_WORD *)a2 = 424;
  a2[2] = v61;
  a2 += 3;
  if ((v21 & 0x80) == 0)
  {
LABEL_102:
    if ((v21 & 0x100) == 0) {
      goto LABEL_103;
    }
    goto LABEL_115;
  }
LABEL_112:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v62 = *(unsigned char *)(a1 + 270);
  *(_WORD *)a2 = 432;
  a2[2] = v62;
  a2 += 3;
  if ((v21 & 0x100) == 0)
  {
LABEL_103:
    if ((v21 & 0x200) == 0) {
      goto LABEL_124;
    }
    goto LABEL_118;
  }
LABEL_115:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  char v63 = *(unsigned char *)(a1 + 271);
  *(_WORD *)a2 = 440;
  a2[2] = v63;
  a2 += 3;
  if ((v21 & 0x200) != 0)
  {
LABEL_118:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v64 = *(int *)(a1 + 272);
    *(_WORD *)a2 = 448;
    a2[2] = v64;
    if (v64 > 0x7F)
    {
      a2[2] = v64 | 0x80;
      unint64_t v65 = v64 >> 7;
      a2[3] = v64 >> 7;
      a2 += 4;
      if (v64 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v66 = v65 >> 14;
          v65 >>= 7;
          *a2++ = v65;
        }
        while (v66);
      }
    }
    else
    {
      a2 += 3;
    }
  }
LABEL_124:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 10000, 11001, a2, a3);
  }
  uint64_t v67 = *(void *)(a1 + 8);
  if ((v67 & 1) == 0) {
    return a2;
  }
  unint64_t v69 = v67 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v69 + 31) < 0)
  {
    unint64_t v70 = *(void **)(v69 + 8);
    uint64_t v71 = *(void *)(v69 + 16);
  }
  else
  {
    unint64_t v70 = (void *)(v69 + 8);
    LODWORD(v71) = *(unsigned __int8 *)(v69 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v71)
  {
    uint64_t v72 = (int)v71;
    memcpy(a2, v70, (int)v71);
    a2 += v72;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v70, v71, a2);
}

uint64_t sub_11E5FB4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_11E781C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_11E01C0(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      unint64_t v23 = sub_11E3848(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = sub_188D4F0((unsigned int *)(a1 + 120));
  uint64_t v25 = *(int *)(a1 + 144);
  uint64_t v26 = v24 + v25 + v18 + *(unsigned int *)(a1 + 120);
  uint64_t v27 = *(void *)(a1 + 152);
  if (v27) {
    unint64_t v28 = (uint64_t *)(v27 + 8);
  }
  else {
    unint64_t v28 = 0;
  }
  if (v25)
  {
    uint64_t v29 = 8 * v25;
    do
    {
      uint64_t v30 = *v28++;
      uint64_t v31 = sub_11E3DE4(v30);
      v26 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6);
      v29 -= 8;
    }
    while (v29);
  }
  uint64_t v32 = *(unsigned int *)(a1 + 168);
  uint64_t v33 = v26 + v32;
  if ((int)v32 >= 1)
  {
    uint64_t v34 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
      uint64_t v37 = *(void *)(v35 + 8);
      if ((v36 & 0x80u) == 0) {
        uint64_t v37 = v36;
      }
      v33 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      --v32;
    }
    while (v32);
  }
  uint64_t v38 = *(int *)(a1 + 192);
  uint64_t v39 = v33 + v38;
  uint64_t v40 = *(void *)(a1 + 200);
  if (v40) {
    uint64_t v41 = (uint64_t *)(v40 + 8);
  }
  else {
    uint64_t v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_11E4360(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  uint64_t v45 = *(int *)(a1 + 216);
  uint64_t v46 = v39 + v45;
  uint64_t v47 = *(void *)(a1 + 224);
  if (v47) {
    int64_t v48 = (uint64_t *)(v47 + 8);
  }
  else {
    int64_t v48 = 0;
  }
  if (v45)
  {
    uint64_t v49 = 8 * v45;
    do
    {
      uint64_t v50 = *v48++;
      uint64_t v51 = sub_11E0C1C(v50);
      v46 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      v49 -= 8;
    }
    while (v49);
  }
  int v52 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v52)
  {
    if (v52)
    {
      unint64_t v59 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v60 = *(unsigned __int8 *)(v59 + 23);
      uint64_t v61 = *(void *)(v59 + 8);
      if ((v60 & 0x80u) == 0) {
        uint64_t v61 = v60;
      }
      v46 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v52 & 2) == 0)
      {
LABEL_45:
        if ((v52 & 4) == 0) {
          goto LABEL_46;
        }
        goto LABEL_70;
      }
    }
    else if ((v52 & 2) == 0)
    {
      goto LABEL_45;
    }
    uint64_t v62 = sub_16BE3A0(*(void *)(a1 + 240));
    v46 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v52 & 4) == 0)
    {
LABEL_46:
      if ((v52 & 8) == 0) {
        goto LABEL_47;
      }
      goto LABEL_71;
    }
LABEL_70:
    v46 += ((9 * (__clz(*(void *)(a1 + 248) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v52 & 8) == 0)
    {
LABEL_47:
      if ((v52 & 0x10) == 0)
      {
LABEL_49:
        uint64_t v53 = v46 + 3;
        if ((v52 & 0x20) == 0) {
          uint64_t v53 = v46;
        }
        if ((v52 & 0x40) != 0) {
          v53 += 3;
        }
        if ((v52 & 0x80) != 0) {
          uint64_t v46 = v53 + 3;
        }
        else {
          uint64_t v46 = v53;
        }
        goto LABEL_56;
      }
LABEL_48:
      v46 += ((9 * (__clz(*(_DWORD *)(a1 + 264) | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_49;
    }
LABEL_71:
    v46 += ((9 * (__clz(*(void *)(a1 + 256) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v52 & 0x10) == 0) {
      goto LABEL_49;
    }
    goto LABEL_48;
  }
LABEL_56:
  if ((v52 & 0x300) != 0)
  {
    if ((v52 & 0x100) != 0) {
      v46 += 3;
    }
    if ((v52 & 0x200) != 0)
    {
      int v54 = *(_DWORD *)(a1 + 272);
      uint64_t v55 = ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v54 >= 0) {
        uint64_t v56 = v55;
      }
      else {
        uint64_t v56 = 12;
      }
      v46 += v56;
    }
  }
  uint64_t v57 = *(void *)(a1 + 8);
  if (v57)
  {
    unint64_t v63 = v57 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v63 + 31) < 0) {
      uint64_t v64 = *(void *)(v63 + 16);
    }
    else {
      uint64_t v64 = *(unsigned __int8 *)(v63 + 31);
    }
    v46 += v64;
  }
  *(_DWORD *)(a1 + 44) = v46;
  return v46;
}

void sub_11E63D4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_122B2CC((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_122B358((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122B3E4((std::string *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 120);
  if (v19)
  {
    uint64_t v20 = *(int *)(a1 + 120);
    sub_188C80C((unsigned int *)(a1 + 120), v20 + v19);
    uint64_t v21 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v21 + 4 * v20), *(const void **)(a2 + 128), 4 * *(int *)(a2 + 120));
  }
  int v22 = *(_DWORD *)(a2 + 144);
  if (v22)
  {
    unint64_t v23 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v24 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_122B470((uint64_t *)(a1 + 136), v24, v23, v22, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v25 = *(_DWORD *)(a1 + 144) + v22;
    *(_DWORD *)(a1 + 144) = v25;
    uint64_t v26 = *(int **)(a1 + 152);
    if (*v26 < v25) {
      int *v26 = v25;
    }
  }
  int v27 = *(_DWORD *)(a2 + 168);
  if (v27)
  {
    unint64_t v28 = (const std::string **)(*(void *)(a2 + 176) + 8);
    uint64_t v29 = (std::string **)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_188FB98(a1 + 160, v29, v28, v27, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v30 = *(_DWORD *)(a1 + 168) + v27;
    *(_DWORD *)(a1 + 168) = v30;
    uint64_t v31 = *(int **)(a1 + 176);
    if (*v31 < v30) {
      int *v31 = v30;
    }
  }
  int v32 = *(_DWORD *)(a2 + 192);
  if (v32)
  {
    uint64_t v33 = (uint64_t *)(*(void *)(a2 + 200) + 8);
    uint64_t v34 = (std::string **)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_122B4FC((uint64_t *)(a1 + 184), v34, v33, v32, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v35 = *(_DWORD *)(a1 + 192) + v32;
    *(_DWORD *)(a1 + 192) = v35;
    uint64_t v36 = *(int **)(a1 + 200);
    if (*v36 < v35) {
      int *v36 = v35;
    }
  }
  int v37 = *(_DWORD *)(a2 + 216);
  if (v37)
  {
    uint64_t v38 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    uint64_t v39 = (std::string **)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_122B588((std::string *)(a1 + 208), v39, v38, v37, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v40 = *(_DWORD *)(a1 + 216) + v37;
    *(_DWORD *)(a1 + 216) = v40;
    uint64_t v41 = *(int **)(a1 + 224);
    if (*v41 < v40) {
      int *v41 = v40;
    }
  }
  int v42 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v42)
  {
    if (v42)
    {
      uint64_t v44 = (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v45 = *(void *)(a1 + 8);
      uint64_t v46 = (uint64_t *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
      if (v45) {
        uint64_t v46 = (uint64_t *)*v46;
      }
      sub_1881DF4((std::string **)(a1 + 232), v44, v46);
      if ((v42 & 2) == 0)
      {
LABEL_27:
        if ((v42 & 4) == 0) {
          goto LABEL_28;
        }
        goto LABEL_56;
      }
    }
    else if ((v42 & 2) == 0)
    {
      goto LABEL_27;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v47 = *(std::string **)(a1 + 240);
    if (!v47)
    {
      uint64_t v48 = *(void *)(a1 + 8);
      uint64_t v49 = (void *)(v48 & 0xFFFFFFFFFFFFFFFCLL);
      if (v48) {
        uint64_t v49 = (void *)*v49;
      }
      uint64_t v47 = (std::string *)sub_1786400((uint64_t)v49);
      *(void *)(a1 + 240) = v47;
    }
    if (*(void *)(a2 + 240)) {
      uint64_t v50 = *(uint64_t (****)())(a2 + 240);
    }
    else {
      uint64_t v50 = &off_25446E8;
    }
    sub_12329D0(v47, (uint64_t)v50);
    if ((v42 & 4) == 0)
    {
LABEL_28:
      if ((v42 & 8) == 0) {
        goto LABEL_29;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    if ((v42 & 8) == 0)
    {
LABEL_29:
      if ((v42 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_58;
    }
LABEL_57:
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    if ((v42 & 0x10) == 0)
    {
LABEL_30:
      if ((v42 & 0x20) == 0) {
        goto LABEL_31;
      }
      goto LABEL_59;
    }
LABEL_58:
    *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
    if ((v42 & 0x20) == 0)
    {
LABEL_31:
      if ((v42 & 0x40) == 0) {
        goto LABEL_32;
      }
      goto LABEL_60;
    }
LABEL_59:
    *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
    if ((v42 & 0x40) == 0)
    {
LABEL_32:
      if ((v42 & 0x80) == 0)
      {
LABEL_34:
        *(_DWORD *)(a1 + 40) |= v42;
        goto LABEL_35;
      }
LABEL_33:
      *(unsigned char *)(a1 + 270) = *(unsigned char *)(a2 + 270);
      goto LABEL_34;
    }
LABEL_60:
    *(unsigned char *)(a1 + 269) = *(unsigned char *)(a2 + 269);
    if ((v42 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_35:
  if ((v42 & 0x300) != 0)
  {
    if ((v42 & 0x100) != 0) {
      *(unsigned char *)(a1 + 271) = *(unsigned char *)(a2 + 271);
    }
    if ((v42 & 0x200) != 0) {
      *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
    }
    *(_DWORD *)(a1 + 40) |= v42;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v43 = *(void *)(a2 + 8);
  if (v43)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v43 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_11E6878(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_11E06FC(*(void *)(*(void *)(a1 + 88) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_11E68E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiGeocodingResponse");
}

uint64_t sub_11E68F0(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E69A8(uint64_t a1)
{
  sub_11E68F0(a1);

  operator delete();
}

uint64_t sub_11E69E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11E6A60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 3)
    {
      if (v11 != 2)
      {
        if (v11 == 1 && v8 == 10)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v23 = *(void *)(a1 + 8);
          int v17 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
          if (v23) {
            int v17 = (uint64_t *)*v17;
          }
          uint64_t v18 = (void *)(a1 + 24);
LABEL_35:
          uint64_t v24 = (std::string *)sub_1880F84(v18, v17);
          uint64_t v15 = (void *)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
          goto LABEL_36;
        }
        goto LABEL_14;
      }
      if (v8 != 16) {
        goto LABEL_14;
      }
      int v19 = v7 + 1;
      unint64_t v20 = *v7;
      if (*v7 < 0)
      {
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)int v27 = sub_188C138((uint64_t)v7, (v22 - 128));
          if (!*(void *)v27) {
            goto LABEL_48;
          }
          unint64_t v20 = v25;
          goto LABEL_30;
        }
        int v19 = v7 + 2;
      }
      *(void *)int v27 = v19;
LABEL_30:
      if (sub_140B640(v20))
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 40) = v20;
      }
      else
      {
        if (*v6) {
          uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v20, v26);
      }
      goto LABEL_37;
    }
    if (v8 == 26)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 8);
      int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        int v17 = (uint64_t *)*v17;
      }
      uint64_t v18 = (void *)(a1 + 32);
      goto LABEL_35;
    }
LABEL_14:
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_36:
    *(void *)int v27 = v15;
    if (!v15) {
      goto LABEL_48;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_48:
  *(void *)int v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_11E6CB4(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_11E6E1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11E6F2C()
{
  return 1;
}

void *sub_11E6F34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiGeocodingResult.MatchedToken");
}

void *sub_11E6F44(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 6);
  sub_122B0A8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E6FCC(void *a1)
{
  sub_11E6F44(a1);

  operator delete();
}

uint64_t sub_11E7004(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_11E69E0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 32) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 48);
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_11E709C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    return *(void *)v38;
  }
  uint64_t v6 = (uint64_t **)(a1 + 48);
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        unint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v38 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v13 = v34;
        }
        else
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v38 = v12;
        }
        if (sub_140B640(v13))
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_52;
        }
        if (*v7) {
          uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v37 = 1;
        goto LABEL_64;
      case 2u:
        if (v9 != 16) {
          goto LABEL_45;
        }
        uint64_t v16 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v38 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v38) {
            return 0;
          }
          unint64_t v13 = v35;
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          *(void *)uint64_t v38 = v16;
        }
        if (v13 > 3)
        {
          if (*v7) {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v37 = 2;
LABEL_64:
          sub_188C020(v37, v13, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 76) = v13;
        }
        goto LABEL_52;
      case 3u:
        if (v9 != 26) {
          goto LABEL_45;
        }
        int v19 = v8 - 1;
        while (1)
        {
          unint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)uint64_t v38 = v19 + 1;
          int v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_11E7FCC(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            unint64_t v20 = *(unsigned __int8 **)v38;
          }
          int v19 = (char *)sub_11E74A4(a3, v23, v20);
          *(void *)uint64_t v38 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_52;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_45;
        }
        unint64_t v25 = v8 - 1;
        while (1)
        {
          uint64_t v26 = (char *)(v25 + 1);
          *(void *)uint64_t v38 = v25 + 1;
          int v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(std::string **)&v27[2 * v28 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v31 = v30;
            v31[1] = sub_3A6EDC;
            *int v30 = 0;
            v30[1] = 0;
            v30[2] = 0;
            uint64_t v29 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v30);
            uint64_t v26 = *(char **)v38;
          }
          unint64_t v25 = sub_188C244(v29, v26, (uint64_t)a3);
          *(void *)uint64_t v38 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 34) {
            goto LABEL_52;
          }
        }
      default:
LABEL_45:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (*v7)
          {
            uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v38;
          }
          *(void *)uint64_t v38 = sub_1885AC0(v9, v33, v8, a3);
          if (!*(void *)v38) {
            return 0;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            return *(void *)v38;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v38;
    }
  }
}

uint64_t sub_11E74A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E6A60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11E7534(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 72);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 76);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      uint64_t v4 = sub_11E6CB4(v15, v17, a3);
    }
  }
  uint64_t v18 = *(unsigned int *)(a1 + 56);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      int v21 = *(void **)(*(void *)(a1 + 64) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_34;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v22)
      {
        char *v4 = 34;
        v4[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          int v21 = (void *)*v21;
        }
        uint64_t v23 = v4 + 2;
        memcpy(v23, v21, v22);
        uint64_t v4 = &v23[v22];
        goto LABEL_32;
      }
LABEL_34:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v21, v4);
LABEL_32:
      v19 += 8;
    }
    while (v20 != v19);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_11E781C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11E6E1C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t result = v2 + v8;
  if ((int)v8 >= 1)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = *(_DWORD *)(a1 + 72);
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v15 >= 0) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 11;
      }
      result += v17;
    }
    if ((v14 & 2) != 0)
    {
      int v18 = *(_DWORD *)(a1 + 76);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 11;
      }
      result += v20;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    result += v23;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_11E7994(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_122B614((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    unint64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    }
    if ((v14 & 2) != 0) {
      HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11E7AF8()
{
  return 1;
}

void *sub_11E7B00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeminiGeocodingResult");
}

void *sub_11E7B10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249B730;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  return result;
}

double sub_11E7B98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_249B7B0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 88) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_DWORD *)(v2 + 128) = 0;
  return result;
}

void *sub_11E7C5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_249B830;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = &qword_2550250;
  return result;
}

uint64_t sub_11E7CE4(uint64_t a1)
{
  if (!a1)
  {
    sub_122B690();
  }

  return sub_11E0D54(v3, a1, 0);
}

uint64_t sub_11E7D40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249B930;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_11E7DC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249B9B0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_11E7E40(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249BA30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_11E7EDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249BAB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_11E7F70(uint64_t a1)
{
  if (!a1)
  {
    sub_122B6FC();
  }

  return sub_11E447C(v3, a1, 0);
}

uint64_t sub_11E7FCC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249BBB0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_11E8054(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249BC30;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  return result;
}

uint64_t sub_11E80F8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_122B768((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E81BC(uint64_t a1)
{
  sub_11E80F8(a1);

  operator delete();
}

uint64_t sub_11E81F4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11E8BF4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(unsigned char *)(v8 + 56) = 0;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_11E82E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 56);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (void *)sub_188C244(v16, *(char **)v31, (uint64_t)a3);
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 4u;
        int v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v31 = v29;
          *(unsigned char *)(a1 + 64) = v30 != 0;
          if (!v29) {
            goto LABEL_48;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v31 = v18;
          *(unsigned char *)(a1 + 64) = v19 != 0;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          unint64_t v22 = (unsigned __int8 *)(v21 + 1);
          *(void *)uint64_t v31 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            unint64_t v26 = sub_11EA7FC(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            unint64_t v22 = *(unsigned __int8 **)v31;
          }
          uint64_t v21 = (char *)sub_11E85CC(a3, v25, v22);
          *(void *)uint64_t v31 = v21;
          if (!v21) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_41;
          }
        }
      default:
LABEL_33:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v31;
          }
          uint64_t v17 = sub_1885AC0(v9, v28, v8, a3);
LABEL_40:
          *(void *)uint64_t v31 = v17;
          if (!v17) {
            goto LABEL_48;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

uint64_t sub_11E85CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E8CDC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11E865C(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 64);
  unsigned char *v4 = 24;
  v4[1] = v7;
  v4 += 2;
LABEL_10:
  int v8 = *(_DWORD *)(a1 + 32);
  if (v8)
  {
    for (int i = 0; i != v8; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v11 = *(_DWORD *)(v10 + 20);
      v4[1] = v11;
      if (v11 > 0x7F) {
        uint64_t v12 = sub_188A9CC(v11, v4 + 1);
      }
      else {
        uint64_t v12 = v4 + 2;
      }
      uint64_t v4 = sub_11E8FB4(v10, v12, a3);
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11E8828(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11E913C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 4) != 0) {
      v2 += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11E8978(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122B8E8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11E8AE0()
{
  return 1;
}

void *sub_11E8AE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.AddressComponentMetadata");
}

uint64_t sub_11E8AF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_122B7E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E8BBC(uint64_t a1)
{
  sub_11E8AF8(a1);

  operator delete();
}

uint64_t sub_11E8BF4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11E9494(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5)
    {
      unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v6 + 23) < 0)
      {
        **(unsigned char **)unint64_t v6 = 0;
        *(void *)(v6 + 8) = 0;
        if ((v5 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    if ((v5 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
LABEL_15:
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_11E8CDC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)BOOL v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 8)
    {
      if (v8 == 66)
      {
        uint64_t v16 = v7 - 1;
        while (1)
        {
          unint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)BOOL v27 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_11EA8A0(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            unint64_t v17 = *(unsigned __int8 **)v27;
          }
          uint64_t v16 = sub_11E8F24(a3, v20, v17);
          *(void *)BOOL v27 = v16;
          if (!v16) {
            goto LABEL_45;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 66) {
            goto LABEL_40;
          }
        }
      }
    }
    else if (v11 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 56);
        goto LABEL_38;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      uint64_t v24 = (void *)(a1 + 48);
LABEL_38:
      unint64_t v26 = (std::string *)sub_1880F84(v24, v23);
      std::string::size_type v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
      goto LABEL_39;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v27;
    }
    std::string::size_type v15 = sub_1885AC0(v8, v14, v7, a3);
LABEL_39:
    *(void *)BOOL v27 = v15;
    if (!v15) {
      goto LABEL_45;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_45:
  *(void *)BOOL v27 = 0;
  return *(void *)v27;
}

char *sub_11E8F24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E952C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11E8FB4(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 66;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_11E98BC(v9, (unint64_t)v11, a3);
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    std::string::size_type v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    std::string::size_type v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_11E913C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11E9B34(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        uint64_t v14 = v13;
      }
      v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11E9280(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_122B974((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11E93C4()
{
  return 1;
}

void *sub_11E93CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.AddressComponent");
}

void *sub_11E93DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122B868(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E945C(void *a1)
{
  sub_11E93DC(a1);

  operator delete();
}

uint64_t sub_11E9494(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11E9E90(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0xF) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(unsigned char *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11E952C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v33 = v12;
          *(void *)(a1 + 48) = v13;
          goto LABEL_41;
        }
        uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v33 = v29;
        *(void *)(a1 + 48) = v30;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_50;
      case 2u:
        if (v9 != 18) {
          goto LABEL_34;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v33 = v15 + 1;
          unint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_11EA940(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            uint64_t v16 = (unsigned __int8 *)v33;
          }
          uint64_t v15 = (char *)sub_11E982C(a3, v19, v16);
          uint64_t v33 = v15;
          if (!v15) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_41;
          }
        }
      case 3u:
        if (v9 != 25) {
          goto LABEL_34;
        }
        uint64_t v22 = *(void *)v8;
        uint64_t v21 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 56) = v22;
        goto LABEL_28;
      case 4u:
        if (v9 != 33) {
          goto LABEL_34;
        }
        uint64_t v23 = *(void *)v8;
        uint64_t v21 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 64) = v23;
LABEL_28:
        uint64_t v33 = v21;
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 8u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v33 = v31;
          *(unsigned char *)(a1 + 72) = v32 != 0;
          if (!v31) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v33 = v24;
          *(unsigned char *)(a1 + 72) = v25 != 0;
        }
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v33;
          }
          uint64_t v33 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v33) {
            goto LABEL_50;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

uint64_t sub_11E982C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11E9F80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11E98BC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_11EA274(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 56);
    unsigned char *v4 = 25;
    *(void *)(v4 + 1) = v15;
    v4 += 9;
    if ((v6 & 4) == 0)
    {
LABEL_18:
      if ((v6 & 8) == 0) {
        goto LABEL_29;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_18;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 64);
  unsigned char *v4 = 33;
  *(void *)(v4 + 1) = v16;
  v4 += 9;
  if ((v6 & 8) != 0)
  {
LABEL_26:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 72);
    unsigned char *v4 = 40;
    v4[1] = v17;
    v4 += 2;
  }
LABEL_29:
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_11E9B34(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EA430(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    uint64_t v9 = v2 + 9;
    if ((v8 & 2) == 0) {
      uint64_t v9 = v2;
    }
    if ((v8 & 4) != 0) {
      v9 += 9;
    }
    if ((v8 & 8) != 0) {
      uint64_t v2 = v9 + 2;
    }
    else {
      uint64_t v2 = v9;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11E9C38(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_122BA00((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      v3[3].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_17:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11E9D60()
{
  return 1;
}

void *sub_11E9D68@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.GeoFeature");
}

uint64_t sub_11E9D78(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11E9E58(uint64_t a1)
{
  sub_11E9D78(a1);

  operator delete();
}

uint64_t sub_11E9E90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11E9F80(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (char *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)BOOL v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
LABEL_25:
        char v17 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v27, (uint64_t)a3);
        goto LABEL_26;
      case 5u:
        if (v8 != 40) {
          goto LABEL_36;
        }
        uint64_t v19 = v7 + 1;
        unint64_t v20 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)BOOL v27 = sub_188C138((uint64_t)v7, (v22 - 128));
          if (!*(void *)v27) {
            return 0;
          }
          unint64_t v20 = v25;
        }
        else
        {
          uint64_t v19 = v7 + 2;
LABEL_33:
          *(void *)BOOL v27 = v19;
        }
        if (v20 > 3)
        {
          if (*v6) {
            int v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v20, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 56) = v20;
        }
        goto LABEL_27;
      default:
LABEL_36:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v6)
          {
            uint64_t v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(char **)v27;
          }
          uint64_t v18 = sub_1885AC0(v8, v24, v7, a3);
LABEL_26:
          *(void *)BOOL v27 = v18;
          if (!v18) {
            return 0;
          }
LABEL_27:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

unsigned char *sub_11EA274(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_11;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 56);
  unsigned char *v4 = 40;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_11EA430(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_26;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v9 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_22;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0)
  {
LABEL_22:
    int v15 = *(_DWORD *)(a1 + 56);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v16;
  }
LABEL_26:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v2 += v20;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11EA5D4(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      int v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_22:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11EA73C()
{
  return 1;
}

void *sub_11EA744@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.AddressToken");
}

uint64_t sub_11EA754(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249BCB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(unsigned char *)(result + 64) = 0;
  return result;
}

void *sub_11EA7FC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249BD30;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

uint64_t sub_11EA8A0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249BDB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 57) = 0u;
  return result;
}

uint64_t sub_11EA940(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249BE30;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

char *sub_11EA9CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B7194(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11EAA5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B9F90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11EAAEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_149FB58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11EAB7C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_146A4A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11EAC0C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11EACAC(uint64_t a1)
{
  sub_11EAC0C(a1);

  operator delete();
}

uint64_t sub_11EACE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11EAD34(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      std::string::size_type v17 = v8 + 1;
      int v18 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_25;
      }
      int v19 = *v17;
      int v18 = v18 + (v19 << 7) - 128;
      if ((v19 & 0x80000000) == 0)
      {
        std::string::size_type v17 = v8 + 2;
LABEL_25:
        *(void *)uint64_t v30 = v17;
        *(_DWORD *)(a1 + 36) = v18;
        goto LABEL_35;
      }
      uint64_t v26 = sub_188C0D0((uint64_t)v8, v18);
      *(void *)uint64_t v30 = v26;
      *(_DWORD *)(a1 + 36) = v27;
      if (!v26) {
        goto LABEL_44;
      }
      goto LABEL_35;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v21 = v8 + 1;
    LODWORD(v20) = *v8;
    if ((v20 & 0x80) == 0) {
      goto LABEL_30;
    }
    int v22 = *v21;
    uint64_t v20 = v20 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      int v21 = v8 + 2;
LABEL_30:
      *(void *)uint64_t v30 = v21;
      *(_DWORD *)(a1 + 32) = v20;
      goto LABEL_35;
    }
    uint64_t v28 = sub_188C138((uint64_t)v8, v20);
    *(void *)uint64_t v30 = v28;
    *(_DWORD *)(a1 + 32) = v29;
    if (!v28) {
      goto LABEL_44;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    unint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 24), v24);
    uint64_t v16 = (void *)sub_188C244(v25, *(char **)v30, (uint64_t)a3);
LABEL_34:
    *(void *)uint64_t v30 = v16;
    if (!v16) {
      goto LABEL_44;
    }
    goto LABEL_35;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v30;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_34;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  *(void *)uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v30;
}

unsigned char *sub_11EAF70(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11EB134(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
LABEL_13:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11EB228(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11EB2F8()
{
  return 1;
}

void *sub_11EB300@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.MatchedToken");
}

void *sub_11EB310(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122BC94(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11EB390(void *a1)
{
  sub_11EB310(a1);

  operator delete();
}

uint64_t sub_11EB3C8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EACE4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11EB44C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        BOOL v14 = v7 - 1;
        while (1)
        {
          unint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            int v19 = sub_11EBAE4(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, (uint64_t)v19);
            unint64_t v15 = (unsigned __int8 *)v26;
          }
          BOOL v14 = (char *)sub_11EB6A4(a3, v18, v15);
          uint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      uint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        uint64_t v20 = v7 + 2;
LABEL_34:
        uint64_t v26 = v20;
      }
      if (v21 > 2)
      {
        if (*v6) {
          unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_11EB6A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11EAD34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11EB734(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_11EAF70(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11EB8F8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EB134(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11EB9E0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122BD14(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11EBACC()
{
  return 1;
}

void *sub_11EBAD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geocoding.MatchedTokenSet");
}

void *sub_11EBAE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249BEB0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

uint64_t sub_11EBB68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249BF30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

BOOL sub_11EBC04(int a1)
{
  return (a1 - 1) < 0xB;
}

BOOL sub_11EBC14(int a1)
{
  return (a1 - 1) < 3;
}

uint64_t sub_11EBC24(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11EBCDC(uint64_t a1)
{
  sub_11EBC24(a1);

  operator delete();
}

uint64_t sub_11EBD14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11EBD90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_11EBF38(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_11EC024(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11EC100(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11EC1D4()
{
  return 1;
}

void *sub_11EC1DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.LocalizedText");
}

uint64_t sub_11EC1EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11EBD90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_11EC27C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11EC2F0(void *a1)
{
  sub_11EC27C(a1);

  operator delete();
}

uint64_t sub_11EC328(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11EC350(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      unint64_t v16 = v8 + 1;
      unint64_t v17 = *v8;
      if (*v8 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          uint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v19 - 128));
          if (!v32) {
            goto LABEL_60;
          }
          unint64_t v17 = v26;
          goto LABEL_27;
        }
        unint64_t v16 = v8 + 2;
      }
      uint64_t v32 = v16;
LABEL_27:
      if (v17 > 2)
      {
        if (*v7) {
          uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v31 = 3;
        goto LABEL_54;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_40;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v20 = v8 + 1;
    int v21 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    int v22 = *v20;
    int v21 = v21 + (v22 << 7) - 128;
    if ((v22 & 0x80000000) == 0)
    {
      uint64_t v20 = v8 + 2;
LABEL_33:
      uint64_t v32 = v20;
      *(_DWORD *)(a1 + 28) = v21;
      goto LABEL_40;
    }
    int v27 = (char *)sub_188C0D0((uint64_t)v8, v21);
    uint64_t v32 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_60;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    int v23 = v8 + 1;
    unint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    int v24 = *v23;
    int v25 = v17 + (v24 << 7);
    unint64_t v17 = (v25 - 128);
    if (v24 < 0)
    {
      uint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
      if (!v32) {
        goto LABEL_60;
      }
      unint64_t v17 = v29;
    }
    else
    {
      int v23 = v8 + 2;
LABEL_37:
      uint64_t v32 = v23;
    }
    if (v17 <= 8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v17;
      goto LABEL_40;
    }
    if (*v7) {
      uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v31 = 1;
LABEL_54:
    sub_188C020(v31, v17, v30);
    goto LABEL_40;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_60:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_11EC624(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_11EC844(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 0x80000000) == 0)
  {
    uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v2 = 11;
  if ((v1 & 2) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  if ((v1 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 32);
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v5;
  }
LABEL_16:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11EC92C()
{
  return 1;
}

void *sub_11EC934@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventPeriod");
}

uint64_t sub_11EC944(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252DA48)
  {
    uint64_t v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_11EC27C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_11EBC24(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11ECA14(uint64_t a1)
{
  sub_11EC944(a1);

  operator delete();
}

uint64_t sub_11ECA4C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_11EC328(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_11EBD14(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0) {
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11ECAC8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v29 + 2;
      }
    }
    unint64_t v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_11FE1F0((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          unint64_t v8 = v29;
        }
        unint64_t v14 = sub_11ECD88(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_38;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        v5 |= 4u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v25 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unint64_t v29 = v25;
          *(_DWORD *)(a1 + 40) = v26;
          if (!v25) {
            goto LABEL_48;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_19:
          unint64_t v29 = v15;
          *(_DWORD *)(a1 + 40) = v16;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        v5 |= 8u;
        unint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v27 = (char *)sub_188C0D0((uint64_t)v8, v19);
          unint64_t v29 = v27;
          *(_DWORD *)(a1 + 44) = v28;
          if (!v27) {
            goto LABEL_48;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_24:
          unint64_t v29 = v18;
          *(_DWORD *)(a1 + 44) = v19;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void **)(a1 + 32);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_11FE16C((uint64_t)v22);
          *(void *)(a1 + 32) = v21;
          unint64_t v8 = v29;
        }
        unint64_t v14 = (char *)sub_11EC1EC(a3, (uint64_t)v21, (unsigned __int8 *)v8);
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v29;
          }
          unint64_t v14 = (char *)sub_1885AC0(v9, v24, v8, a3);
LABEL_38:
          unint64_t v29 = v14;
          if (!v14) {
            goto LABEL_48;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_48:
        }
          unint64_t v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v29;
    }
  }
}

char *sub_11ECD88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11EC350(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11ECE18(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_11EC624(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      unint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      unint64_t v18 = v4 + 2;
    }
    char v4 = sub_11EBF38(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_11ED090(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_11EC844(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_11EC024(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_11ED1C0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        std::string::pointer data = (std::string *)sub_11FE1F0((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_252DA20;
      }
      uint64_t result = sub_117EF50(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    unsigned int v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      unsigned int v10 = (std::string *)sub_11FE16C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unsigned int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unsigned int v13 = &off_252D9F8;
    }
    uint64_t result = sub_11EC100(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_28:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11ED2F8()
{
  return 1;
}

void *sub_11ED300@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventClock");
}

uint64_t sub_11ED310(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11ED3C8(uint64_t a1)
{
  sub_11ED310(a1);

  operator delete();
}

uint64_t sub_11ED400(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x1C) != 0)
  {
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11ED48C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v36 + 2);
      }
    }
    *(void *)uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_35;
        }
        unsigned int v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v36 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v36) {
            goto LABEL_58;
          }
          unint64_t v13 = v30;
        }
        else
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v36 = v12;
        }
        if (v13 > 7)
        {
          if (*v7) {
            unint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v13;
        }
        goto LABEL_43;
      case 2u:
        if (v9 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        unsigned int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unsigned int v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 24);
        goto LABEL_34;
      case 3u:
        if (v9 != 24) {
          goto LABEL_35;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v31 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)uint64_t v36 = v31;
          *(_DWORD *)(a1 + 44) = v32;
          if (!v31) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_24:
          *(void *)uint64_t v36 = v19;
          *(_DWORD *)(a1 + 44) = v20;
        }
        goto LABEL_43;
      case 4u:
        if (v9 != 32) {
          goto LABEL_35;
        }
        v5 |= 0x10u;
        int v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v33 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)uint64_t v36 = v33;
          *(_DWORD *)(a1 + 48) = v34;
          if (!v33) {
            goto LABEL_58;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_29:
          *(void *)uint64_t v36 = v22;
          *(_DWORD *)(a1 + 48) = v23;
        }
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        unsigned int v17 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unsigned int v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (void *)(a1 + 32);
LABEL_34:
        int v26 = (std::string *)sub_1880F84(v18, v17);
        int v27 = (void *)sub_188C244(v26, *(char **)v36, (uint64_t)a3);
        goto LABEL_42;
      default:
LABEL_35:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v36;
          }
          int v27 = sub_1885AC0(v9, v29, v8, a3);
LABEL_42:
          *(void *)uint64_t v36 = v27;
          if (!v27) {
            goto LABEL_58;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          *(void *)uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

unsigned char *sub_11ED7D8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_11EDA38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 40);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v13 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11EDBA4(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unsigned int v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
LABEL_19:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_20:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11EDCBC()
{
  return 1;
}

void *sub_11EDCC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventImage");
}

uint64_t sub_11EDCD4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11EDD8C(uint64_t a1)
{
  sub_11EDCD4(a1);

  operator delete();
}

uint64_t sub_11EDDC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11EDE40(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unsigned int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unsigned int v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_11EDFE8(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_11EE0D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11EE1B0()
{
  return 1;
}

void *sub_11EE1B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventScoreElement");
}

void *sub_11EE1C8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11EE23C(void *a1)
{
  sub_11EE1C8(a1);

  operator delete();
}

uint64_t sub_11EE274(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11EE298(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    uint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      uint64_t v14 = v7 + 2;
    }
    uint64_t v25 = v14;
LABEL_26:
    if (v15 > 3)
    {
      if (*v6) {
        int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      uint64_t v25 = v18;
    }
    if (v15 <= 2)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_11EE4F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11EE694(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11EE754()
{
  return 1;
}

void *sub_11EE75C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventPrize");
}

uint64_t sub_11EE76C(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_249C2B0;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a2;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = a2;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 96) = a2;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = 0;
  *(void *)(result + 120) = a2;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = 0;
  *(void *)(result + 144) = a2;
  *(void *)(result + 152) = 0;
  *(void *)(result + 160) = 0;
  *(void *)(result + 168) = a2;
  *(void *)(result + 176) = 0;
  *(void *)(result + 184) = 0;
  *(void *)(result + 192) = a2;
  *(void *)(result + 200) = 0;
  *(void *)(result + 208) = 0;
  *(void *)(result + 216) = a2;
  *(void *)(result + 224) = 0;
  *(void *)(result + 232) = 0;
  *(void *)(result + 240) = a2;
  *(void *)(result + 248) = 0;
  *(void *)(result + 256) = 0;
  *(void *)(result + 264) = &qword_2550250;
  *(void *)(result + 272) = 0;
  *(_DWORD *)(result + 280) = 0;
  return result;
}

uint64_t sub_11EE7E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_122BDA0((void *)(a1 + 240));
  sub_122BDA0((void *)(a1 + 216));
  sub_122BDA0((void *)(a1 + 192));
  sub_122BFA0((void *)(a1 + 168));
  sub_122BF20((void *)(a1 + 144));
  sub_122BF20((void *)(a1 + 120));
  sub_122BEA0((void *)(a1 + 96));
  sub_122BE20((void *)(a1 + 72));
  sub_122BDA0((void *)(a1 + 48));
  sub_122BDA0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11EE900(uint64_t a1)
{
  sub_11EE7E8(a1);

  operator delete();
}

uint64_t sub_11EE938(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EBD14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11EBD14(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_11ED400(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_11EDDC4(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 128);
  if ((int)v14 >= 1)
  {
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 136) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_11EE938(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 128) = 0;
  }
  uint64_t v17 = *(unsigned int *)(v1 + 152);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v1 + 160) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t result = sub_11EE938(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(v1 + 152) = 0;
  }
  uint64_t v20 = *(unsigned int *)(v1 + 176);
  if ((int)v20 >= 1)
  {
    unint64_t v21 = (uint64_t *)(*(void *)(v1 + 184) + 8);
    do
    {
      uint64_t v22 = *v21++;
      uint64_t result = sub_11EE274(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(v1 + 176) = 0;
  }
  uint64_t v23 = *(unsigned int *)(v1 + 200);
  if ((int)v23 >= 1)
  {
    int v24 = (uint64_t *)(*(void *)(v1 + 208) + 8);
    do
    {
      uint64_t v25 = *v24++;
      uint64_t result = sub_11EBD14(v25);
      --v23;
    }
    while (v23);
    *(_DWORD *)(v1 + 200) = 0;
  }
  uint64_t v26 = *(unsigned int *)(v1 + 224);
  if ((int)v26 >= 1)
  {
    int v27 = (uint64_t *)(*(void *)(v1 + 232) + 8);
    do
    {
      uint64_t v28 = *v27++;
      uint64_t result = sub_11EBD14(v28);
      --v26;
    }
    while (v26);
    *(_DWORD *)(v1 + 224) = 0;
  }
  uint64_t v29 = *(unsigned int *)(v1 + 248);
  if ((int)v29 >= 1)
  {
    unint64_t v30 = (uint64_t *)(*(void *)(v1 + 256) + 8);
    do
    {
      uint64_t v31 = *v30++;
      uint64_t result = sub_11EBD14(v31);
      --v29;
    }
    while (v29);
    *(_DWORD *)(v1 + 248) = 0;
  }
  int v32 = *(_DWORD *)(v1 + 16);
  if (v32)
  {
    unint64_t v33 = *(void *)(v1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v33 + 23) < 0)
    {
      **(unsigned char **)unint64_t v33 = 0;
      *(void *)(v33 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v33 = 0;
      *(unsigned char *)(v33 + 23) = 0;
    }
  }
  if ((v32 & 0xE) != 0)
  {
    *(_DWORD *)(v1 + 280) = 0;
    *(void *)(v1 + 272) = 0;
  }
  char v35 = *(unsigned char *)(v1 + 8);
  uint64_t v34 = v1 + 8;
  *(_DWORD *)(v34 + 8) = 0;
  if (v35)
  {
    return sub_188B4AC((uint64_t *)v34);
  }
  return result;
}

uint64_t sub_11EEB60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v93 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1])) {
    return *(void *)v93;
  }
  uint64_t v91 = (uint64_t *)(a1 + 216);
  uint64_t v92 = (uint64_t *)(a1 + 240);
  uint64_t v90 = (uint64_t *)(a1 + 192);
  int v89 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = (char *)(*(void *)v93 + 1);
    unsigned int v7 = **(unsigned char **)v93;
    if ((char)**(unsigned char **)v93 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v93, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v93 + 2);
      }
    }
    *(void *)uint64_t v93 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 10) {
          goto LABEL_134;
        }
        uint64_t v10 = v6 - 1;
        while (1)
        {
          uint64_t v11 = (unsigned __int8 *)(v10 + 1);
          *(void *)uint64_t v93 = v10 + 1;
          unint64_t v12 = *(_DWORD **)(a1 + 40);
          if (v12 && (uint64_t v13 = *(int *)(a1 + 32), (int)v13 < *v12))
          {
            *(_DWORD *)(a1 + 32) = v13 + 1;
            uint64_t v14 = *(void *)&v12[2 * v13 + 2];
          }
          else
          {
            unint64_t v15 = sub_11FE16C(*(void *)(a1 + 24));
            uint64_t v14 = sub_188CDC8(a1 + 24, (uint64_t)v15);
            uint64_t v11 = *(unsigned __int8 **)v93;
          }
          uint64_t v10 = (char *)sub_11EC1EC(a3, v14, v11);
          *(void *)uint64_t v93 = v10;
          if (!v10) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v10 || *v10 != 10) {
            goto LABEL_142;
          }
        }
      case 2u:
        if (v7 != 18) {
          goto LABEL_134;
        }
        uint64_t v16 = v6 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)uint64_t v93 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            unint64_t v21 = sub_11FE16C(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, (uint64_t)v21);
            uint64_t v17 = *(unsigned __int8 **)v93;
          }
          uint64_t v16 = (char *)sub_11EC1EC(a3, v20, v17);
          *(void *)uint64_t v93 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_142;
          }
        }
      case 3u:
        if (v7 != 26) {
          goto LABEL_134;
        }
        uint64_t v22 = v6 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v93 = v22 + 1;
          int v24 = *(_DWORD **)(a1 + 88);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 80), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 80) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_11FE2E8(*(void *)(a1 + 72));
            uint64_t v26 = sub_188CDC8(a1 + 72, v27);
            uint64_t v23 = *(unsigned __int8 **)v93;
          }
          uint64_t v22 = (char *)sub_11EF4D0(a3, v26, v23);
          *(void *)uint64_t v93 = v22;
          if (!v22) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_142;
          }
        }
      case 4u:
        if (v7 != 34) {
          goto LABEL_134;
        }
        uint64_t v28 = v6 - 1;
        while (1)
        {
          uint64_t v29 = (unsigned __int8 *)(v28 + 1);
          *(void *)uint64_t v93 = v28 + 1;
          unint64_t v30 = *(_DWORD **)(a1 + 112);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 104), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 104) = v31 + 1;
            uint64_t v32 = *(void *)&v30[2 * v31 + 2];
          }
          else
          {
            unint64_t v33 = sub_11FE370(*(void *)(a1 + 96));
            uint64_t v32 = sub_188CDC8(a1 + 96, (uint64_t)v33);
            uint64_t v29 = *(unsigned __int8 **)v93;
          }
          uint64_t v28 = (char *)sub_11EF560(a3, v32, v29);
          *(void *)uint64_t v93 = v28;
          if (!v28) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 34) {
            goto LABEL_142;
          }
        }
      case 5u:
        if (v7 != 42) {
          goto LABEL_134;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v34 = *(void *)(a1 + 8);
        char v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          char v35 = (uint64_t *)*v35;
        }
        uint64_t v36 = (std::string *)sub_1880F84((void *)(a1 + 264), v35);
        int v37 = (void *)sub_188C244(v36, *(char **)v93, (uint64_t)a3);
        goto LABEL_141;
      case 6u:
        if (v7 != 48) {
          goto LABEL_134;
        }
        uint64_t v38 = v6 + 1;
        unint64_t v39 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v40 = *v38;
        int v41 = v39 + (v40 << 7);
        unint64_t v39 = (v41 - 128);
        if (v40 < 0)
        {
          *(void *)uint64_t v93 = sub_188C138((uint64_t)v6, (v41 - 128));
          if (!*(void *)v93) {
            return 0;
          }
          unint64_t v39 = v84;
        }
        else
        {
          uint64_t v38 = v6 + 2;
LABEL_57:
          *(void *)uint64_t v93 = v38;
        }
        if (v39 <= 1)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 272) = v39;
          goto LABEL_142;
        }
        if (*v89) {
          unint64_t v87 = (std::string *)((*v89 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v87 = (std::string *)sub_188DBD8(v89);
        }
        int v88 = 6;
        goto LABEL_159;
      case 7u:
        if (v7 != 58) {
          goto LABEL_134;
        }
        int v42 = v6 - 1;
        while (1)
        {
          *(void *)uint64_t v93 = v42 + 1;
          uint64_t v43 = *(_DWORD **)(a1 + 136);
          if (v43 && (uint64_t v44 = *(int *)(a1 + 128), (int)v44 < *v43))
          {
            *(_DWORD *)(a1 + 128) = v44 + 1;
            uint64_t v45 = *(void *)&v43[2 * v44 + 2];
          }
          else
          {
            uint64_t v46 = sub_11FE46C(*(void *)(a1 + 120));
            uint64_t v45 = sub_188CDC8(a1 + 120, v46);
          }
          int v42 = (char *)sub_11EF5F0(a3, v45);
          *(void *)uint64_t v93 = v42;
          if (!v42) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 58) {
            goto LABEL_142;
          }
        }
      case 8u:
        if (v7 != 66) {
          goto LABEL_134;
        }
        uint64_t v47 = v6 - 1;
        while (1)
        {
          *(void *)uint64_t v93 = v47 + 1;
          uint64_t v48 = *(_DWORD **)(a1 + 160);
          if (v48 && (uint64_t v49 = *(int *)(a1 + 152), (int)v49 < *v48))
          {
            *(_DWORD *)(a1 + 152) = v49 + 1;
            uint64_t v50 = *(void *)&v48[2 * v49 + 2];
          }
          else
          {
            uint64_t v51 = sub_11FE46C(*(void *)(a1 + 144));
            uint64_t v50 = sub_188CDC8(a1 + 144, v51);
          }
          uint64_t v47 = (char *)sub_11EF5F0(a3, v50);
          *(void *)uint64_t v93 = v47;
          if (!v47) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *v47 != 66) {
            goto LABEL_142;
          }
        }
      case 9u:
        if (v7 != 74) {
          goto LABEL_134;
        }
        int v52 = v6 - 1;
        while (1)
        {
          uint64_t v53 = (unsigned __int8 *)(v52 + 1);
          *(void *)uint64_t v93 = v52 + 1;
          int v54 = *(_DWORD **)(a1 + 184);
          if (v54 && (uint64_t v55 = *(int *)(a1 + 176), (int)v55 < *v54))
          {
            *(_DWORD *)(a1 + 176) = v55 + 1;
            uint64_t v56 = *(void *)&v54[2 * v55 + 2];
          }
          else
          {
            uint64_t v57 = sub_11FE3F4(*(void *)(a1 + 168));
            uint64_t v56 = sub_188CDC8(a1 + 168, (uint64_t)v57);
            uint64_t v53 = *(unsigned __int8 **)v93;
          }
          int v52 = sub_11EF680(a3, v56, v53);
          *(void *)uint64_t v93 = v52;
          if (!v52) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v52 || *v52 != 74) {
            goto LABEL_142;
          }
        }
      case 0xAu:
        if (v7 != 80) {
          goto LABEL_134;
        }
        unsigned int v58 = v6 + 1;
        unint64_t v39 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_94;
        }
        int v59 = *v58;
        int v60 = v39 + (v59 << 7);
        unint64_t v39 = (v60 - 128);
        if (v59 < 0)
        {
          *(void *)uint64_t v93 = sub_188C138((uint64_t)v6, (v60 - 128));
          if (!*(void *)v93) {
            return 0;
          }
          unint64_t v39 = v85;
        }
        else
        {
          unsigned int v58 = v6 + 2;
LABEL_94:
          *(void *)uint64_t v93 = v58;
        }
        if (v39 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 276) = v39;
          goto LABEL_142;
        }
        if (*v89) {
          unint64_t v87 = (std::string *)((*v89 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v87 = (std::string *)sub_188DBD8(v89);
        }
        int v88 = 10;
        goto LABEL_159;
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_134;
        }
        uint64_t v61 = v6 - 1;
        while (1)
        {
          uint64_t v62 = (unsigned __int8 *)(v61 + 1);
          *(void *)uint64_t v93 = v61 + 1;
          unint64_t v63 = *(_DWORD **)(a1 + 208);
          if (v63 && (uint64_t v64 = *(int *)(a1 + 200), (int)v64 < *v63))
          {
            *(_DWORD *)(a1 + 200) = v64 + 1;
            uint64_t v65 = *(void *)&v63[2 * v64 + 2];
          }
          else
          {
            unint64_t v66 = sub_11FE16C(*v90);
            uint64_t v65 = sub_188CDC8((uint64_t)v90, (uint64_t)v66);
            uint64_t v62 = *(unsigned __int8 **)v93;
          }
          uint64_t v61 = (char *)sub_11EC1EC(a3, v65, v62);
          *(void *)uint64_t v93 = v61;
          if (!v61) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v61 || *v61 != 90) {
            goto LABEL_142;
          }
        }
      case 0xCu:
        if (v7 != 98) {
          goto LABEL_134;
        }
        uint64_t v67 = v6 - 1;
        while (1)
        {
          uint64_t v68 = (unsigned __int8 *)(v67 + 1);
          *(void *)uint64_t v93 = v67 + 1;
          unint64_t v69 = *(_DWORD **)(a1 + 232);
          if (v69 && (uint64_t v70 = *(int *)(a1 + 224), (int)v70 < *v69))
          {
            *(_DWORD *)(a1 + 224) = v70 + 1;
            uint64_t v71 = *(void *)&v69[2 * v70 + 2];
          }
          else
          {
            uint64_t v72 = sub_11FE16C(*v91);
            uint64_t v71 = sub_188CDC8((uint64_t)v91, (uint64_t)v72);
            uint64_t v68 = *(unsigned __int8 **)v93;
          }
          uint64_t v67 = (char *)sub_11EC1EC(a3, v71, v68);
          *(void *)uint64_t v93 = v67;
          if (!v67) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v67 || *v67 != 98) {
            goto LABEL_142;
          }
        }
      case 0xDu:
        if (v7 != 106) {
          goto LABEL_134;
        }
        unint64_t v73 = v6 - 1;
        while (1)
        {
          uint64_t v74 = (unsigned __int8 *)(v73 + 1);
          *(void *)uint64_t v93 = v73 + 1;
          uint64_t v75 = *(_DWORD **)(a1 + 256);
          if (v75 && (uint64_t v76 = *(int *)(a1 + 248), (int)v76 < *v75))
          {
            *(_DWORD *)(a1 + 248) = v76 + 1;
            uint64_t v77 = *(void *)&v75[2 * v76 + 2];
          }
          else
          {
            uint64_t v78 = sub_11FE16C(*v92);
            uint64_t v77 = sub_188CDC8((uint64_t)v92, (uint64_t)v78);
            uint64_t v74 = *(unsigned __int8 **)v93;
          }
          unint64_t v73 = (char *)sub_11EC1EC(a3, v77, v74);
          *(void *)uint64_t v93 = v73;
          if (!v73) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v73 || *v73 != 106) {
            goto LABEL_142;
          }
        }
      case 0xEu:
        if (v7 != 112) {
          goto LABEL_134;
        }
        int v79 = v6 + 1;
        unint64_t v39 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_131;
        }
        int v80 = *v79;
        int v81 = v39 + (v80 << 7);
        unint64_t v39 = (v81 - 128);
        if (v80 < 0)
        {
          *(void *)uint64_t v93 = sub_188C138((uint64_t)v6, (v81 - 128));
          if (!*(void *)v93) {
            return 0;
          }
          unint64_t v39 = v86;
        }
        else
        {
          int v79 = v6 + 2;
LABEL_131:
          *(void *)uint64_t v93 = v79;
        }
        if (v39 > 2)
        {
          if (*v89) {
            unint64_t v87 = (std::string *)((*v89 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v87 = (std::string *)sub_188DBD8(v89);
          }
          int v88 = 14;
LABEL_159:
          sub_188C020(v88, v39, v87);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 280) = v39;
        }
        goto LABEL_142;
      default:
LABEL_134:
        if (v7) {
          BOOL v82 = (v7 & 7) == 4;
        }
        else {
          BOOL v82 = 1;
        }
        if (!v82)
        {
          if (*v89)
          {
            uint64_t v83 = (std::string *)((*v89 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v83 = (std::string *)sub_188DBD8(v89);
            uint64_t v6 = *(char **)v93;
          }
          int v37 = sub_1885AC0(v7, v83, v6, a3);
LABEL_141:
          *(void *)uint64_t v93 = v37;
          if (!v37) {
            return 0;
          }
LABEL_142:
          if (sub_11947B8((uint64_t)a3, (char **)v93, a3[11].i32[1])) {
            return *(void *)v93;
          }
          continue;
        }
        if (!v6) {
          return 0;
        }
        a3[10].i32[0] = v7 - 1;
        return *(void *)v93;
    }
  }
}

uint64_t sub_11EF4D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11ED48C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11EF560(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11EDE40(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11EF5F0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11EEB60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11EF680(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11EE298(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11EF710(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        uint64_t v10 = a2 + 2;
      }
      a2 = sub_11EBF38(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        unint64_t v15 = a2 + 2;
      }
      a2 = sub_11EBF38(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *a2 = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_11ED7D8(v18, (unint64_t)v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 104);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      *a2 = 34;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      a2[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, a2 + 1);
      }
      else {
        uint64_t v25 = a2 + 2;
      }
      a2 = sub_11EDFE8(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 16);
  if (v26) {
    a2 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v26 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v27 = *(int *)(a1 + 272);
    *a2 = 48;
    a2[1] = v27;
    if (v27 > 0x7F)
    {
      a2[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      a2[2] = v27 >> 7;
      a2 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *a2++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  int v30 = *(_DWORD *)(a1 + 128);
  if (v30)
  {
    for (int n = 0; n != v30; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      *a2 = 58;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      a2[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, a2 + 1);
      }
      else {
        uint64_t v34 = a2 + 2;
      }
      a2 = (char *)sub_11EF710(v32, v34, a3);
    }
  }
  int v35 = *(_DWORD *)(a1 + 152);
  if (v35)
  {
    for (iint i = 0; ii != v35; ++ii)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      *a2 = 66;
      unsigned int v38 = *(_DWORD *)(v37 + 20);
      a2[1] = v38;
      if (v38 > 0x7F) {
        unint64_t v39 = sub_188A9CC(v38, a2 + 1);
      }
      else {
        unint64_t v39 = a2 + 2;
      }
      a2 = (char *)sub_11EF710(v37, v39, a3);
    }
  }
  int v40 = *(_DWORD *)(a1 + 176);
  if (v40)
  {
    for (jint j = 0; jj != v40; ++jj)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v42 = *(void *)(*(void *)(a1 + 184) + 8 * jj + 8);
      *a2 = 74;
      unsigned int v43 = *(_DWORD *)(v42 + 20);
      a2[1] = v43;
      if (v43 > 0x7F) {
        uint64_t v44 = sub_188A9CC(v43, a2 + 1);
      }
      else {
        uint64_t v44 = a2 + 2;
      }
      a2 = sub_11EE4F0(v42, (unint64_t)v44, a3);
    }
  }
  if ((v26 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v45 = *(int *)(a1 + 276);
    *a2 = 80;
    a2[1] = v45;
    if (v45 > 0x7F)
    {
      a2[1] = v45 | 0x80;
      unint64_t v46 = v45 >> 7;
      a2[2] = v45 >> 7;
      a2 += 3;
      if (v45 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v47 = v46 >> 14;
          v46 >>= 7;
          *a2++ = v46;
        }
        while (v47);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  int v48 = *(_DWORD *)(a1 + 200);
  if (v48)
  {
    for (kint k = 0; kk != v48; ++kk)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v50 = *(void *)(*(void *)(a1 + 208) + 8 * kk + 8);
      *a2 = 90;
      unsigned int v51 = *(_DWORD *)(v50 + 20);
      a2[1] = v51;
      if (v51 > 0x7F) {
        int v52 = sub_188A9CC(v51, a2 + 1);
      }
      else {
        int v52 = a2 + 2;
      }
      a2 = sub_11EBF38(v50, v52, a3);
    }
  }
  int v53 = *(_DWORD *)(a1 + 224);
  if (v53)
  {
    for (mint m = 0; mm != v53; ++mm)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v55 = *(void *)(*(void *)(a1 + 232) + 8 * mm + 8);
      *a2 = 98;
      unsigned int v56 = *(_DWORD *)(v55 + 20);
      a2[1] = v56;
      if (v56 > 0x7F) {
        uint64_t v57 = sub_188A9CC(v56, a2 + 1);
      }
      else {
        uint64_t v57 = a2 + 2;
      }
      a2 = sub_11EBF38(v55, v57, a3);
    }
  }
  int v58 = *(_DWORD *)(a1 + 248);
  if (v58)
  {
    for (nint n = 0; nn != v58; ++nn)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v60 = *(void *)(*(void *)(a1 + 256) + 8 * nn + 8);
      *a2 = 106;
      unsigned int v61 = *(_DWORD *)(v60 + 20);
      a2[1] = v61;
      if (v61 > 0x7F) {
        uint64_t v62 = sub_188A9CC(v61, a2 + 1);
      }
      else {
        uint64_t v62 = a2 + 2;
      }
      a2 = sub_11EBF38(v60, v62, a3);
    }
  }
  if ((v26 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v63 = *(int *)(a1 + 280);
    *a2 = 112;
    a2[1] = v63;
    if (v63 > 0x7F)
    {
      a2[1] = v63 | 0x80;
      unint64_t v64 = v63 >> 7;
      a2[2] = v63 >> 7;
      a2 += 3;
      if (v63 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v65 = v64 >> 14;
          v64 >>= 7;
          *a2++ = v64;
        }
        while (v65);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  uint64_t v66 = *(void *)(a1 + 8);
  if ((v66 & 1) == 0) {
    return (uint64_t)a2;
  }
  unint64_t v68 = v66 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v68 + 31) < 0)
  {
    unint64_t v69 = *(void **)(v68 + 8);
    uint64_t v70 = *(void *)(v68 + 16);
  }
  else
  {
    unint64_t v69 = (void *)(v68 + 8);
    LODWORD(v70) = *(unsigned __int8 *)(v68 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v70)
  {
    uint64_t v71 = (int)v70;
    memcpy(a2, v69, (int)v70);
    a2 += v71;
    return (uint64_t)a2;
  }

  return sub_188A528(a3, (char *)v69, v70, a2);
}

uint64_t sub_11EFE90(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EC024(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11EC024(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_11EDA38(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_11EE0D4(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    uint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    uint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_11EFE90(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    unint64_t v39 = (uint64_t *)(v38 + 8);
  }
  else {
    unint64_t v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_11EFE90(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  uint64_t v43 = *(int *)(a1 + 176);
  uint64_t v44 = v37 + v43;
  uint64_t v45 = *(void *)(a1 + 184);
  if (v45) {
    unint64_t v46 = (uint64_t *)(v45 + 8);
  }
  else {
    unint64_t v46 = 0;
  }
  if (v43)
  {
    uint64_t v47 = 8 * v43;
    do
    {
      uint64_t v48 = *v46++;
      uint64_t v49 = sub_11EE694(v48);
      v44 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6);
      v47 -= 8;
    }
    while (v47);
  }
  uint64_t v50 = *(int *)(a1 + 200);
  uint64_t v51 = v44 + v50;
  uint64_t v52 = *(void *)(a1 + 208);
  if (v52) {
    int v53 = (uint64_t *)(v52 + 8);
  }
  else {
    int v53 = 0;
  }
  if (v50)
  {
    uint64_t v54 = 8 * v50;
    do
    {
      uint64_t v55 = *v53++;
      uint64_t v56 = sub_11EC024(v55);
      v51 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6);
      v54 -= 8;
    }
    while (v54);
  }
  uint64_t v57 = *(int *)(a1 + 224);
  uint64_t v58 = v51 + v57;
  uint64_t v59 = *(void *)(a1 + 232);
  if (v59) {
    uint64_t v60 = (uint64_t *)(v59 + 8);
  }
  else {
    uint64_t v60 = 0;
  }
  if (v57)
  {
    uint64_t v61 = 8 * v57;
    do
    {
      uint64_t v62 = *v60++;
      uint64_t v63 = sub_11EC024(v62);
      v58 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6);
      v61 -= 8;
    }
    while (v61);
  }
  uint64_t v64 = *(int *)(a1 + 248);
  uint64_t v65 = v58 + v64;
  uint64_t v66 = *(void *)(a1 + 256);
  if (v66) {
    uint64_t v67 = (uint64_t *)(v66 + 8);
  }
  else {
    uint64_t v67 = 0;
  }
  if (v64)
  {
    uint64_t v68 = 8 * v64;
    do
    {
      uint64_t v69 = *v67++;
      uint64_t v70 = sub_11EC024(v69);
      v65 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6);
      v68 -= 8;
    }
    while (v68);
  }
  int v71 = *(_DWORD *)(a1 + 16);
  if ((v71 & 0xF) == 0) {
    goto LABEL_72;
  }
  if ((v71 & 1) == 0)
  {
    if ((v71 & 2) == 0) {
      goto LABEL_66;
    }
LABEL_77:
    int v80 = *(_DWORD *)(a1 + 272);
    uint64_t v81 = ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v80 >= 0) {
      uint64_t v82 = v81;
    }
    else {
      uint64_t v82 = 11;
    }
    v65 += v82;
    if ((v71 & 4) == 0)
    {
LABEL_67:
      if ((v71 & 8) == 0) {
        goto LABEL_72;
      }
      goto LABEL_68;
    }
    goto LABEL_81;
  }
  unint64_t v77 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v78 = *(unsigned __int8 *)(v77 + 23);
  uint64_t v79 = *(void *)(v77 + 8);
  if ((v78 & 0x80u) == 0) {
    uint64_t v79 = v78;
  }
  v65 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v71 & 2) != 0) {
    goto LABEL_77;
  }
LABEL_66:
  if ((v71 & 4) == 0) {
    goto LABEL_67;
  }
LABEL_81:
  int v83 = *(_DWORD *)(a1 + 276);
  uint64_t v84 = ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v83 >= 0) {
    uint64_t v85 = v84;
  }
  else {
    uint64_t v85 = 11;
  }
  v65 += v85;
  if ((v71 & 8) != 0)
  {
LABEL_68:
    int v72 = *(_DWORD *)(a1 + 280);
    uint64_t v73 = ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v72 >= 0) {
      uint64_t v74 = v73;
    }
    else {
      uint64_t v74 = 11;
    }
    v65 += v74;
  }
LABEL_72:
  uint64_t v75 = *(void *)(a1 + 8);
  if (v75)
  {
    unint64_t v86 = v75 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v86 + 31) < 0) {
      uint64_t v87 = *(void *)(v86 + 16);
    }
    else {
      uint64_t v87 = *(unsigned __int8 *)(v86 + 31);
    }
    v65 += v87;
  }
  *(_DWORD *)(a1 + 20) = v65;
  return v65;
}

std::string *sub_11F030C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122C220(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_122C220(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_122C29C((uint64_t *)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = sub_122C328(v3 + 4, v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2] - LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  uint64_t v24 = *(unsigned int *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = *(void *)(a2 + 136) + 8;
    uint64_t v26 = sub_188CCE4((uint64_t)&v3[5], *(_DWORD *)(a2 + 128));
    uint64_t result = (std::string *)sub_122C3A4(&v3[5], v26, v25, v24, (*(_DWORD *)v3[5].__r_.__value_.__r.__words[2]- LODWORD(v3[5].__r_.__value_.__r.__words[1])));
    int v27 = LODWORD(v3[5].__r_.__value_.__r.__words[1]) + v24;
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = v27;
    uint64_t v28 = (_DWORD *)v3[5].__r_.__value_.__r.__words[2];
    if (*v28 < v27) {
      _DWORD *v28 = v27;
    }
  }
  uint64_t v29 = *(unsigned int *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = *(void *)(a2 + 160) + 8;
    uint64_t v31 = sub_188CCE4((uint64_t)&v3[6], *(_DWORD *)(a2 + 152));
    uint64_t result = (std::string *)sub_122C3A4(&v3[6], v31, v30, v29, (*(_DWORD *)v3[6].__r_.__value_.__r.__words[2]- LODWORD(v3[6].__r_.__value_.__r.__words[1])));
    int v32 = LODWORD(v3[6].__r_.__value_.__r.__words[1]) + v29;
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) = v32;
    uint64_t v33 = (_DWORD *)v3[6].__r_.__value_.__r.__words[2];
    if (*v33 < v32) {
      _DWORD *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 176);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4((uint64_t)&v3[7], *(_DWORD *)(a2 + 176));
    uint64_t result = sub_122C430(v3 + 7, v36, v35, v34, *(_DWORD *)v3[7].__r_.__value_.__r.__words[2] - LODWORD(v3[7].__r_.__value_.__r.__words[1]));
    int v37 = LODWORD(v3[7].__r_.__value_.__r.__words[1]) + v34;
    LODWORD(v3[7].__r_.__value_.__r.__words[1]) = v37;
    uint64_t v38 = (int *)v3[7].__r_.__value_.__r.__words[2];
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 200);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4((uint64_t)&v3[8], *(_DWORD *)(a2 + 200));
    uint64_t result = sub_122C220(v3 + 8, v41, v40, v39, *(_DWORD *)v3[8].__r_.__value_.__r.__words[2] - LODWORD(v3[8].__r_.__value_.__r.__words[1]));
    int v42 = LODWORD(v3[8].__r_.__value_.__r.__words[1]) + v39;
    LODWORD(v3[8].__r_.__value_.__r.__words[1]) = v42;
    uint64_t v43 = (int *)v3[8].__r_.__value_.__r.__words[2];
    if (*v43 < v42) {
      *uint64_t v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 224);
  if (v44)
  {
    uint64_t v45 = (uint64_t *)(*(void *)(a2 + 232) + 8);
    unint64_t v46 = (std::string **)sub_188CCE4((uint64_t)&v3[9], *(_DWORD *)(a2 + 224));
    uint64_t result = sub_122C220(v3 + 9, v46, v45, v44, *(_DWORD *)v3[9].__r_.__value_.__r.__words[2] - LODWORD(v3[9].__r_.__value_.__r.__words[1]));
    int v47 = LODWORD(v3[9].__r_.__value_.__r.__words[1]) + v44;
    LODWORD(v3[9].__r_.__value_.__r.__words[1]) = v47;
    uint64_t v48 = (int *)v3[9].__r_.__value_.__r.__words[2];
    if (*v48 < v47) {
      int *v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 248);
  if (v49)
  {
    uint64_t v50 = (uint64_t *)(*(void *)(a2 + 256) + 8);
    uint64_t v51 = (std::string **)sub_188CCE4((uint64_t)&v3[10], *(_DWORD *)(a2 + 248));
    uint64_t result = sub_122C220(v3 + 10, v51, v50, v49, *(_DWORD *)v3[10].__r_.__value_.__r.__words[2] - LODWORD(v3[10].__r_.__value_.__r.__words[1]));
    int v52 = LODWORD(v3[10].__r_.__value_.__r.__words[1]) + v49;
    LODWORD(v3[10].__r_.__value_.__r.__words[1]) = v52;
    int v53 = (int *)v3[10].__r_.__value_.__r.__words[2];
    if (*v53 < v52) {
      int *v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 16);
  if ((v54 & 0xF) != 0)
  {
    if (v54)
    {
      uint64_t v56 = (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v58 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v58 = (uint64_t *)*v58;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[11], v56, v58);
      if ((v54 & 2) == 0)
      {
LABEL_34:
        if ((v54 & 4) == 0) {
          goto LABEL_35;
        }
        goto LABEL_46;
      }
    }
    else if ((v54 & 2) == 0)
    {
      goto LABEL_34;
    }
    LODWORD(v3[11].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 272);
    if ((v54 & 4) == 0)
    {
LABEL_35:
      if ((v54 & 8) == 0)
      {
LABEL_37:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v54;
        goto LABEL_38;
      }
LABEL_36:
      LODWORD(v3[11].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 280);
      goto LABEL_37;
    }
LABEL_46:
    HIDWORD(v3[11].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 276);
    if ((v54 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_36;
  }
LABEL_38:
  uint64_t v55 = *(void *)(a2 + 8);
  if (v55)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v55 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F07E0()
{
  return 1;
}

void *sub_11F07E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventCompetitor");
}

void *sub_11F07F8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122BDA0(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F0878(void *a1)
{
  sub_11F07F8(a1);

  operator delete();
}

uint64_t sub_11F08B0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EBD14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11F0934(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(_DWORD *)(a1 + 48) = v16;
      int v5 = 1;
      goto LABEL_36;
    }
    uint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      int v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v26 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_11FE16C(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
        int v19 = (unsigned __int8 *)v26;
      }
      uint64_t v18 = (char *)sub_11EC1EC(a3, v22, v19);
      uint64_t v26 = v18;
      if (!v18) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_11F0B5C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11EBF38(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v11;
    if (v11 > 0x7F)
    {
      __dst[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      __dst[2] = v11 >> 7;
      __dst += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *__dst++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_11F0D20(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EC024(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11F0DFC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122C220(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F0EE8()
{
  return 1;
}

void *sub_11F0EF0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventTournament");
}

void *sub_11F0F00(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122BE20(a1 + 5);
  sub_122BDA0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F0F8C(void *a1)
{
  sub_11F0F00(a1);

  operator delete();
}

uint64_t sub_11F0FC4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EBD14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11ED400(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_11F1068(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            unint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_11FE2E8(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_11EF4D0(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            int v25 = sub_11FE16C(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = (char *)sub_11EC1EC(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        unsigned int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_11F12B0(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11EBF38(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_11ED7D8(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_11F1478(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EC024(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11EDA38(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

std::string *sub_11F1578(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_122C220((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_122C29C((uint64_t *)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F16AC()
{
  return 1;
}

void *sub_11F16B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventLeague");
}

void *sub_11F16C4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11F1790((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_122BDA0(a1 + 18);
  sub_122BE20(a1 + 15);
  sub_122BDA0(a1 + 12);
  sub_122BF20(a1 + 9);
  sub_122BDA0(a1 + 6);
  sub_122BDA0(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_11F1790(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 168);
  uint64_t result = (void ***)(a1 + 168);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252DAF8)
  {
    int v4 = *(void **)(a1 + 176);
    if (v4)
    {
      sub_11F07F8(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 184);
    if (v5)
    {
      sub_11EC944(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 192);
    if (v6)
    {
      sub_11EC944(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 200);
    if (result)
    {
      sub_11F0F00(result);
      operator delete();
    }
  }
  return result;
}

void sub_11F1874(void *a1)
{
  sub_11F16C4(a1);

  operator delete();
}

uint64_t sub_11F18AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EBD14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11EBD14(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_11EE938(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t result = sub_11EBD14(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  uint64_t v14 = *(unsigned int *)(v1 + 128);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v1 + 136) + 8);
    do
    {
      uint64_t v16 = *v15++;
      uint64_t result = sub_11ED400(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(v1 + 128) = 0;
  }
  uint64_t v17 = *(unsigned int *)(v1 + 152);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(v1 + 160) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t result = sub_11EBD14(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(v1 + 152) = 0;
  }
  int v20 = *(_DWORD *)(v1 + 16);
  if ((v20 & 0x1F) == 0) {
    goto LABEL_32;
  }
  if (v20)
  {
    unint64_t v23 = *(void *)(v1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v23 + 23) < 0)
    {
      **(unsigned char **)unint64_t v23 = 0;
      *(void *)(v23 + 8) = 0;
      if ((v20 & 2) != 0) {
        goto LABEL_42;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v23 = 0;
      *(unsigned char *)(v23 + 23) = 0;
      if ((v20 & 2) != 0) {
        goto LABEL_42;
      }
    }
LABEL_28:
    if ((v20 & 4) == 0) {
      goto LABEL_29;
    }
LABEL_43:
    uint64_t result = sub_11ECA4C(*(void *)(v1 + 184));
    if ((v20 & 8) == 0)
    {
LABEL_30:
      if ((v20 & 0x10) == 0) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    goto LABEL_44;
  }
  if ((v20 & 2) == 0) {
    goto LABEL_28;
  }
LABEL_42:
  uint64_t result = sub_11F08B0(*(void *)(v1 + 176));
  if ((v20 & 4) != 0) {
    goto LABEL_43;
  }
LABEL_29:
  if ((v20 & 8) == 0) {
    goto LABEL_30;
  }
LABEL_44:
  uint64_t result = sub_11ECA4C(*(void *)(v1 + 192));
  if ((v20 & 0x10) != 0) {
LABEL_31:
  }
    uint64_t result = sub_11F0FC4(*(void *)(v1 + 200));
LABEL_32:
  if ((v20 & 0xE0) != 0)
  {
    *(void *)(v1 + 213) = 0;
    *(void *)(v1 + 208) = 0;
  }
  char v22 = *(unsigned char *)(v1 + 8);
  uint64_t v21 = v1 + 8;
  *(void *)(v21 + 216) = 0;
  *(_DWORD *)(v21 + 8) = 0;
  if (v22)
  {
    return sub_188B4AC((uint64_t *)v21);
  }
  return result;
}

uint64_t sub_11F1A88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v84 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v84, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v83 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v84 + 1);
    unsigned int v8 = **(unsigned char **)v84;
    if ((char)**(unsigned char **)v84 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v84, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v84 + 2);
      }
    }
    *(void *)uint64_t v84 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_119;
        }
        uint64_t v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v84 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v84) {
            goto LABEL_144;
          }
          unint64_t v12 = v75;
        }
        else
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v84 = v11;
        }
        if (v12 > 9)
        {
          if (*v83) {
            uint64_t v82 = (std::string *)((*v83 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v82 = (std::string *)sub_188DBD8(v83);
          }
          sub_188C020(1, v12, v82);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 216) = v12;
        }
        goto LABEL_127;
      case 2u:
        if (v8 != 18) {
          goto LABEL_119;
        }
        uint64_t v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = v15 + 1;
          *(void *)uint64_t v84 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            int v20 = sub_11FE16C(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(unsigned __int8 **)v84;
          }
          uint64_t v15 = (unsigned __int8 *)sub_11EC1EC(a3, v19, v16);
          *(void *)uint64_t v84 = v15;
          if (!v15) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_127;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_119;
        }
        uint64_t v21 = v7 - 1;
        while (1)
        {
          char v22 = v21 + 1;
          *(void *)uint64_t v84 = v21 + 1;
          unint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_11FE16C(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
            char v22 = *(unsigned __int8 **)v84;
          }
          uint64_t v21 = (unsigned __int8 *)sub_11EC1EC(a3, v25, v22);
          *(void *)uint64_t v84 = v21;
          if (!v21) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 26) {
            goto LABEL_127;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_119;
        }
        int v27 = v7 - 1;
        while (1)
        {
          uint64_t v28 = v27 + 1;
          *(void *)uint64_t v84 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_11FE46C(*(void *)(a1 + 72));
            uint64_t v31 = sub_188CDC8(a1 + 72, v32);
            uint64_t v28 = *(unsigned __int8 **)v84;
          }
          int v27 = (unsigned __int8 *)sub_11EF5F0(a3, v31, v28);
          *(void *)uint64_t v84 = v27;
          if (!v27) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 34) {
            goto LABEL_127;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_119;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 176);
        if (!v33)
        {
          int v34 = (void *)(*v83 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v83) {
            int v34 = (void *)*v34;
          }
          uint64_t v33 = sub_11FE4CC((uint64_t)v34);
          *(void *)(a1 + 176) = v33;
          uint64_t v7 = *(unsigned __int8 **)v84;
        }
        uint64_t v35 = sub_11F22E8(a3, v33, v7);
        goto LABEL_126;
      case 6u:
        if (v8 != 48) {
          goto LABEL_119;
        }
        v5 |= 0x20u;
        uint64_t v36 = (char *)(v7 + 1);
        uint64_t v37 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v76 = sub_188C138((uint64_t)v7, v37);
          *(void *)uint64_t v84 = v76;
          *(void *)(a1 + 208) = v77;
          if (!v76) {
            goto LABEL_144;
          }
        }
        else
        {
          uint64_t v36 = (char *)(v7 + 2);
LABEL_56:
          *(void *)uint64_t v84 = v36;
          *(void *)(a1 + 208) = v37;
        }
        goto LABEL_127;
      case 7u:
        if (v8 != 56) {
          goto LABEL_119;
        }
        v5 |= 0x100u;
        int v39 = (char *)(v7 + 1);
        uint64_t v40 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v41 = *v39;
        uint64_t v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          uint64_t v78 = sub_188C138((uint64_t)v7, v40);
          *(void *)uint64_t v84 = v78;
          *(void *)(a1 + 224) = v79;
          if (!v78) {
            goto LABEL_144;
          }
        }
        else
        {
          int v39 = (char *)(v7 + 2);
LABEL_61:
          *(void *)uint64_t v84 = v39;
          *(void *)(a1 + 224) = v40;
        }
        goto LABEL_127;
      case 8u:
        if (v8 != 66) {
          goto LABEL_119;
        }
        int v42 = v7 - 1;
        while (1)
        {
          uint64_t v43 = v42 + 1;
          *(void *)uint64_t v84 = v42 + 1;
          int v44 = *(_DWORD **)(a1 + 112);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 104), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 104) = v45 + 1;
            uint64_t v46 = *(void *)&v44[2 * v45 + 2];
          }
          else
          {
            int v47 = sub_11FE16C(*(void *)(a1 + 96));
            uint64_t v46 = sub_188CDC8(a1 + 96, (uint64_t)v47);
            uint64_t v43 = *(unsigned __int8 **)v84;
          }
          int v42 = (unsigned __int8 *)sub_11EC1EC(a3, v46, v43);
          *(void *)uint64_t v84 = v42;
          if (!v42) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 66) {
            goto LABEL_127;
          }
        }
      case 9u:
        if (v8 != 74) {
          goto LABEL_119;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v48 = *(void *)(a1 + 184);
        if (v48) {
          goto LABEL_83;
        }
        int v49 = (void *)(*v83 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v83) {
          int v49 = (void *)*v49;
        }
        sub_11FE26C((uint64_t)v49);
        uint64_t v48 = v50;
        *(void *)(a1 + 184) = v50;
        goto LABEL_82;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_119;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v48 = *(void *)(a1 + 192);
        if (v48) {
          goto LABEL_83;
        }
        uint64_t v51 = (void *)(*v83 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v83) {
          uint64_t v51 = (void *)*v51;
        }
        sub_11FE26C((uint64_t)v51);
        uint64_t v48 = v52;
        *(void *)(a1 + 192) = v52;
LABEL_82:
        uint64_t v7 = *(unsigned __int8 **)v84;
LABEL_83:
        uint64_t v35 = sub_11F2378(a3, v48, v7);
        goto LABEL_126;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_119;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v53 = *(void *)(a1 + 200);
        if (!v53)
        {
          int v54 = (void *)(*v83 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v83) {
            int v54 = (void *)*v54;
          }
          uint64_t v53 = sub_11FE568((uint64_t)v54);
          *(void *)(a1 + 200) = v53;
          uint64_t v7 = *(unsigned __int8 **)v84;
        }
        uint64_t v35 = sub_11F2408(a3, v53, v7);
        goto LABEL_126;
      case 0xCu:
        if (v8 != 96) {
          goto LABEL_119;
        }
        v5 |= 0x80u;
        uint64_t v55 = (char *)(v7 + 1);
        uint64_t v56 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_94;
        }
        int v57 = *v55;
        uint64_t v56 = v56 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          uint64_t v80 = sub_188C138((uint64_t)v7, v56);
          *(void *)uint64_t v84 = v80;
          *(unsigned char *)(a1 + 220) = v81 != 0;
          if (!v80) {
            goto LABEL_144;
          }
        }
        else
        {
          uint64_t v55 = (char *)(v7 + 2);
LABEL_94:
          *(void *)uint64_t v84 = v55;
          *(unsigned char *)(a1 + 220) = v56 != 0;
        }
        goto LABEL_127;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_119;
        }
        uint64_t v58 = v7 - 1;
        while (1)
        {
          uint64_t v59 = v58 + 1;
          *(void *)uint64_t v84 = v58 + 1;
          uint64_t v60 = *(_DWORD **)(a1 + 136);
          if (v60 && (uint64_t v61 = *(int *)(a1 + 128), (int)v61 < *v60))
          {
            *(_DWORD *)(a1 + 128) = v61 + 1;
            uint64_t v62 = *(void *)&v60[2 * v61 + 2];
          }
          else
          {
            uint64_t v63 = sub_11FE2E8(*(void *)(a1 + 120));
            uint64_t v62 = sub_188CDC8(a1 + 120, v63);
            uint64_t v59 = *(unsigned __int8 **)v84;
          }
          uint64_t v58 = (unsigned __int8 *)sub_11EF4D0(a3, v62, v59);
          *(void *)uint64_t v84 = v58;
          if (!v58) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v58 || *v58 != 106) {
            goto LABEL_127;
          }
        }
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_119;
        }
        uint64_t v64 = v7 - 1;
        while (1)
        {
          uint64_t v65 = v64 + 1;
          *(void *)uint64_t v84 = v64 + 1;
          uint64_t v66 = *(_DWORD **)(a1 + 160);
          if (v66 && (uint64_t v67 = *(int *)(a1 + 152), (int)v67 < *v66))
          {
            *(_DWORD *)(a1 + 152) = v67 + 1;
            uint64_t v68 = *(void *)&v66[2 * v67 + 2];
          }
          else
          {
            uint64_t v69 = sub_11FE16C(*(void *)(a1 + 144));
            uint64_t v68 = sub_188CDC8(a1 + 144, (uint64_t)v69);
            uint64_t v65 = *(unsigned __int8 **)v84;
          }
          uint64_t v64 = (unsigned __int8 *)sub_11EC1EC(a3, v68, v65);
          *(void *)uint64_t v84 = v64;
          if (!v64) {
            goto LABEL_144;
          }
          if (*(void *)a3 <= (unint64_t)v64 || *v64 != 114) {
            goto LABEL_127;
          }
        }
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_119;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v70 = *(void *)(a1 + 8);
        int v71 = (uint64_t *)(v70 & 0xFFFFFFFFFFFFFFFCLL);
        if (v70) {
          int v71 = (uint64_t *)*v71;
        }
        int v72 = (std::string *)sub_1880F84((void *)(a1 + 168), v71);
        uint64_t v35 = (void *)sub_188C244(v72, *(char **)v84, (uint64_t)a3);
        goto LABEL_126;
      default:
LABEL_119:
        if (v8) {
          BOOL v73 = (v8 & 7) == 4;
        }
        else {
          BOOL v73 = 1;
        }
        if (!v73)
        {
          if (*v83)
          {
            uint64_t v74 = (std::string *)((*v83 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v74 = (std::string *)sub_188DBD8(v83);
            uint64_t v7 = *(unsigned __int8 **)v84;
          }
          uint64_t v35 = sub_1885AC0(v8, v74, (char *)v7, a3);
LABEL_126:
          *(void *)uint64_t v84 = v35;
          if (!v35) {
            goto LABEL_144;
          }
LABEL_127:
          if (sub_11947B8((uint64_t)a3, (char **)v84, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_144:
        }
          *(void *)uint64_t v84 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v84;
    }
  }
}

char *sub_11F22E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F0934(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11F2378(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11ECAC8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11F2408(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F1068(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11F2498(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 216);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v17, v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 34;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      uint64_t v4 = (char *)sub_11EF710(v22, v24, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 176);
    char *v4 = 42;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    v4[1] = v26;
    if (v26 > 0x7F) {
      int v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      int v27 = v4 + 2;
    }
    uint64_t v4 = sub_11F0B5C(v25, v27, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(void *)(a1 + 208);
    char *v4 = 48;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(void *)(a1 + 224);
    char *v4 = 56;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v34 = *(_DWORD *)(a1 + 104);
  if (v34)
  {
    for (int m = 0; m != v34; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v36 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      char *v4 = 66;
      unsigned int v37 = *(_DWORD *)(v36 + 20);
      v4[1] = v37;
      if (v37 > 0x7F) {
        int v38 = sub_188A9CC(v37, v4 + 1);
      }
      else {
        int v38 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v36, v38, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v39 = *(void *)(a1 + 184);
    char *v4 = 74;
    unsigned int v40 = *(_DWORD *)(v39 + 20);
    v4[1] = v40;
    if (v40 > 0x7F) {
      int v41 = sub_188A9CC(v40, v4 + 1);
    }
    else {
      int v41 = v4 + 2;
    }
    uint64_t v4 = sub_11ECE18(v39, (unint64_t)v41, a3);
    if ((v6 & 8) == 0)
    {
LABEL_63:
      if ((v6 & 0x10) == 0) {
        goto LABEL_64;
      }
      goto LABEL_78;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_63;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v42 = *(void *)(a1 + 192);
  char *v4 = 82;
  unsigned int v43 = *(_DWORD *)(v42 + 20);
  v4[1] = v43;
  if (v43 > 0x7F) {
    int v44 = sub_188A9CC(v43, v4 + 1);
  }
  else {
    int v44 = v4 + 2;
  }
  uint64_t v4 = sub_11ECE18(v42, (unint64_t)v44, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_64:
    if ((v6 & 0x80) == 0) {
      goto LABEL_87;
    }
    goto LABEL_84;
  }
LABEL_78:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v45 = *(void *)(a1 + 200);
  char *v4 = 90;
  unsigned int v46 = *(_DWORD *)(v45 + 64);
  v4[1] = v46;
  if (v46 > 0x7F) {
    int v47 = sub_188A9CC(v46, v4 + 1);
  }
  else {
    int v47 = v4 + 2;
  }
  uint64_t v4 = sub_11F12B0(v45, v47, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_84:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v48 = *(unsigned char *)(a1 + 220);
    char *v4 = 96;
    v4[1] = v48;
    v4 += 2;
  }
LABEL_87:
  int v49 = *(_DWORD *)(a1 + 128);
  if (v49)
  {
    for (int n = 0; n != v49; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v51 = *(void *)(*(void *)(a1 + 136) + 8 * n + 8);
      char *v4 = 106;
      unsigned int v52 = *(_DWORD *)(v51 + 20);
      v4[1] = v52;
      if (v52 > 0x7F) {
        uint64_t v53 = sub_188A9CC(v52, v4 + 1);
      }
      else {
        uint64_t v53 = v4 + 2;
      }
      uint64_t v4 = sub_11ED7D8(v51, (unint64_t)v53, a3);
    }
  }
  int v54 = *(_DWORD *)(a1 + 152);
  if (v54)
  {
    for (iint i = 0; ii != v54; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v56 = *(void *)(*(void *)(a1 + 160) + 8 * ii + 8);
      char *v4 = 114;
      unsigned int v57 = *(_DWORD *)(v56 + 20);
      v4[1] = v57;
      if (v57 > 0x7F) {
        uint64_t v58 = sub_188A9CC(v57, v4 + 1);
      }
      else {
        uint64_t v58 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v56, v58, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v59 = *(void *)(a1 + 8);
  if ((v59 & 1) == 0) {
    return v4;
  }
  unint64_t v61 = v59 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v61 + 31) < 0)
  {
    uint64_t v62 = *(void **)(v61 + 8);
    uint64_t v63 = *(void *)(v61 + 16);
  }
  else
  {
    uint64_t v62 = (void *)(v61 + 8);
    LODWORD(v63) = *(unsigned __int8 *)(v61 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v63)
  {
    uint64_t v64 = (int)v63;
    memcpy(v4, v62, (int)v63);
    v4 += v64;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v62, v63, v4);
}

uint64_t sub_11F2BE0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EC024(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11EC024(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_11EFE90(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    uint64_t v25 = (uint64_t *)(v24 + 8);
  }
  else {
    uint64_t v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_11EC024(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  uint64_t v29 = *(int *)(a1 + 128);
  uint64_t v30 = v23 + v29;
  uint64_t v31 = *(void *)(a1 + 136);
  if (v31) {
    unint64_t v32 = (uint64_t *)(v31 + 8);
  }
  else {
    unint64_t v32 = 0;
  }
  if (v29)
  {
    uint64_t v33 = 8 * v29;
    do
    {
      uint64_t v34 = *v32++;
      uint64_t v35 = sub_11EDA38(v34);
      v30 += v35 + ((9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6);
      v33 -= 8;
    }
    while (v33);
  }
  uint64_t v36 = *(int *)(a1 + 152);
  uint64_t v37 = v30 + v36;
  uint64_t v38 = *(void *)(a1 + 160);
  if (v38) {
    uint64_t v39 = (uint64_t *)(v38 + 8);
  }
  else {
    uint64_t v39 = 0;
  }
  if (v36)
  {
    uint64_t v40 = 8 * v36;
    do
    {
      uint64_t v41 = *v39++;
      uint64_t v42 = sub_11EC024(v41);
      v37 += v42 + ((9 * (__clz(v42 | 1) ^ 0x1F) + 73) >> 6);
      v40 -= 8;
    }
    while (v40);
  }
  int v43 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v43)
  {
    if (v43)
    {
      unint64_t v49 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v50 = *(unsigned __int8 *)(v49 + 23);
      uint64_t v51 = *(void *)(v49 + 8);
      if ((v50 & 0x80u) == 0) {
        uint64_t v51 = v50;
      }
      v37 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v43 & 2) == 0)
      {
LABEL_42:
        if ((v43 & 4) == 0) {
          goto LABEL_43;
        }
        goto LABEL_61;
      }
    }
    else if ((v43 & 2) == 0)
    {
      goto LABEL_42;
    }
    uint64_t v52 = sub_11F0D20(*(void *)(a1 + 176));
    v37 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 4) == 0)
    {
LABEL_43:
      if ((v43 & 8) == 0) {
        goto LABEL_44;
      }
      goto LABEL_62;
    }
LABEL_61:
    uint64_t v53 = sub_11ED090(*(void *)(a1 + 184));
    v37 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 8) == 0)
    {
LABEL_44:
      if ((v43 & 0x10) == 0) {
        goto LABEL_45;
      }
      goto LABEL_63;
    }
LABEL_62:
    uint64_t v54 = sub_11ED090(*(void *)(a1 + 192));
    v37 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 0x10) == 0)
    {
LABEL_45:
      if ((v43 & 0x20) == 0) {
        goto LABEL_46;
      }
      goto LABEL_64;
    }
LABEL_63:
    uint64_t v55 = sub_11F1478(*(void *)(a1 + 200));
    v37 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v43 & 0x20) == 0)
    {
LABEL_46:
      if ((v43 & 0x40) == 0) {
        goto LABEL_51;
      }
LABEL_47:
      int v44 = *(_DWORD *)(a1 + 216);
      uint64_t v45 = ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v44 >= 0) {
        uint64_t v46 = v45;
      }
      else {
        uint64_t v46 = 11;
      }
      v37 += v46;
LABEL_51:
      if ((v43 & 0x80) != 0) {
        v37 += 2;
      }
      goto LABEL_53;
    }
LABEL_64:
    v37 += ((9 * (__clz(*(void *)(a1 + 208) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v43 & 0x40) == 0) {
      goto LABEL_51;
    }
    goto LABEL_47;
  }
LABEL_53:
  if ((v43 & 0x100) != 0) {
    v37 += ((9 * (__clz(*(void *)(a1 + 224) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if (v47)
  {
    unint64_t v56 = v47 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v56 + 31) < 0) {
      uint64_t v57 = *(void *)(v56 + 16);
    }
    else {
      uint64_t v57 = *(unsigned __int8 *)(v56 + 31);
    }
    v37 += v57;
  }
  *(_DWORD *)(a1 + 20) = v37;
  return v37;
}

std::string *sub_11F2FD4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122C220(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_122C220(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = (std::string *)sub_122C3A4((uint64_t *)&v3[3], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2]- LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    unsigned int v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[4], *(_DWORD *)(a2 + 104));
    uint64_t result = sub_122C220(v3 + 4, v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__r.__words[2] - LODWORD(v3[4].__r_.__value_.__r.__words[1]));
    int v22 = LODWORD(v3[4].__r_.__value_.__r.__words[1]) + v19;
    LODWORD(v3[4].__r_.__value_.__r.__words[1]) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__r.__words[2];
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 128);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[5], *(_DWORD *)(a2 + 128));
    uint64_t result = (std::string *)sub_122C29C((uint64_t *)&v3[5], v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__r.__words[2]- LODWORD(v3[5].__r_.__value_.__r.__words[1]));
    int v27 = LODWORD(v3[5].__r_.__value_.__r.__words[1]) + v24;
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = v27;
    uint64_t v28 = (int *)v3[5].__r_.__value_.__r.__words[2];
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 152);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4((uint64_t)&v3[6], *(_DWORD *)(a2 + 152));
    uint64_t result = sub_122C220(v3 + 6, v31, v30, v29, *(_DWORD *)v3[6].__r_.__value_.__r.__words[2] - LODWORD(v3[6].__r_.__value_.__r.__words[1]));
    int v32 = LODWORD(v3[6].__r_.__value_.__r.__words[1]) + v29;
    LODWORD(v3[6].__r_.__value_.__r.__words[1]) = v32;
    uint64_t v33 = (int *)v3[6].__r_.__value_.__r.__words[2];
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v34)
  {
    if (v34)
    {
      uint64_t v35 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v37 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v37 = (uint64_t *)*v37;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[7], v35, v37);
    }
    if ((v34 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v38 = (std::string *)v3[7].__r_.__value_.__l.__size_;
      if (!v38)
      {
        std::string::size_type v39 = v3->__r_.__value_.__l.__size_;
        uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          uint64_t v40 = (void *)*v40;
        }
        uint64_t v38 = (std::string *)sub_11FE4CC((uint64_t)v40);
        v3[7].__r_.__value_.__l.__size_ = (std::string::size_type)v38;
      }
      if (*(void *)(a2 + 176)) {
        uint64_t v41 = *(uint64_t (****)())(a2 + 176);
      }
      else {
        uint64_t v41 = &off_252DA78;
      }
      uint64_t result = sub_11F0DFC(v38, (uint64_t)v41);
    }
    if ((v34 & 4) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      int v44 = (std::string *)v3[7].__r_.__value_.__r.__words[2];
      if (!v44)
      {
        std::string::size_type v45 = v3->__r_.__value_.__l.__size_;
        uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
        if (v45) {
          uint64_t v46 = (void *)*v46;
        }
        sub_11FE26C((uint64_t)v46);
        v3[7].__r_.__value_.__r.__words[2] = (std::string::size_type)v44;
      }
      if (*(void *)(a2 + 184)) {
        uint64_t v47 = *(uint64_t (****)())(a2 + 184);
      }
      else {
        uint64_t v47 = &off_252DA48;
      }
      uint64_t result = sub_11ED1C0(v44, (uint64_t)v47);
      if ((v34 & 8) == 0)
      {
LABEL_35:
        if ((v34 & 0x10) == 0) {
          goto LABEL_36;
        }
        goto LABEL_63;
      }
    }
    else if ((v34 & 8) == 0)
    {
      goto LABEL_35;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::pointer data = (std::string *)v3[8].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v49 = v3->__r_.__value_.__l.__size_;
      uint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
      if (v49) {
        uint64_t v50 = (void *)*v50;
      }
      sub_11FE26C((uint64_t)v50);
      v3[8].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v51 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v51 = &off_252DA48;
    }
    uint64_t result = sub_11ED1C0(data, (uint64_t)v51);
    if ((v34 & 0x10) == 0)
    {
LABEL_36:
      if ((v34 & 0x20) == 0) {
        goto LABEL_37;
      }
      goto LABEL_71;
    }
LABEL_63:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    uint64_t v52 = (std::string *)v3[8].__r_.__value_.__l.__size_;
    if (!v52)
    {
      std::string::size_type v53 = v3->__r_.__value_.__l.__size_;
      uint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
      if (v53) {
        uint64_t v54 = (void *)*v54;
      }
      uint64_t v52 = (std::string *)sub_11FE568((uint64_t)v54);
      v3[8].__r_.__value_.__l.__size_ = (std::string::size_type)v52;
    }
    if (*(void *)(a2 + 200)) {
      uint64_t v55 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      uint64_t v55 = &off_252DAB0;
    }
    uint64_t result = sub_11F1578(v52, (uint64_t)v55);
    if ((v34 & 0x20) == 0)
    {
LABEL_37:
      if ((v34 & 0x40) == 0) {
        goto LABEL_38;
      }
      goto LABEL_72;
    }
LABEL_71:
    v3[8].__r_.__value_.__r.__words[2] = *(void *)(a2 + 208);
    if ((v34 & 0x40) == 0)
    {
LABEL_38:
      if ((v34 & 0x80) == 0)
      {
LABEL_40:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v34;
        goto LABEL_41;
      }
LABEL_39:
      v3[9].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 220);
      goto LABEL_40;
    }
LABEL_72:
    LODWORD(v3[9].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 216);
    if ((v34 & 0x80) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
LABEL_41:
  if ((v34 & 0x100) != 0)
  {
    std::string::size_type v42 = *(void *)(a2 + 224);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    v3[9].__r_.__value_.__l.__size_ = v42;
  }
  uint64_t v43 = *(void *)(a2 + 8);
  if (v43)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v43 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F3460()
{
  return 1;
}

void *sub_11F3468@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.SportingEventUpdate");
}

uint64_t sub_11F3478(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F3544(uint64_t a1)
{
  sub_11F3478(a1);

  operator delete();
}

uint64_t sub_11F357C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0xF8) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(_WORD *)(a1 + 64) = 0;
  }
  if ((v1 & 0x300) != 0) {
    *(void *)(a1 + 68) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11F3650(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v56 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v56 + 1);
    unsigned int v9 = **(unsigned char **)v56;
    if ((char)**(unsigned char **)v56 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v56, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v56 + 2);
      }
    }
    *(void *)unint64_t v56 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_57;
        }
        v5 |= 8u;
        int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          *(void *)unint64_t v56 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_65;
        }
        uint64_t v42 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)unint64_t v56 = v42;
        *(_DWORD *)(a1 + 48) = v43;
        if (v42) {
          goto LABEL_65;
        }
        goto LABEL_84;
      case 2u:
        if (v9 != 16) {
          goto LABEL_57;
        }
        v5 |= 0x10u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v44 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)unint64_t v56 = v44;
          *(_DWORD *)(a1 + 52) = v45;
          if (!v44) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          *(void *)unint64_t v56 = v15;
          *(_DWORD *)(a1 + 52) = v16;
        }
        goto LABEL_65;
      case 3u:
        if (v9 != 24) {
          goto LABEL_57;
        }
        v5 |= 0x40u;
        unsigned int v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v19);
          *(void *)unint64_t v56 = v46;
          *(unsigned char *)(a1 + 64) = v47 != 0;
          if (!v46) {
            goto LABEL_84;
          }
        }
        else
        {
          unsigned int v18 = v8 + 2;
LABEL_23:
          *(void *)unint64_t v56 = v18;
          *(unsigned char *)(a1 + 64) = v19 != 0;
        }
        goto LABEL_65;
      case 4u:
        if (v9 != 32) {
          goto LABEL_57;
        }
        v5 |= 0x20u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v22);
          *(void *)unint64_t v56 = v48;
          *(void *)(a1 + 56) = v49;
          if (!v48) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          *(void *)unint64_t v56 = v21;
          *(void *)(a1 + 56) = v22;
        }
        goto LABEL_65;
      case 5u:
        if (v9 != 40) {
          goto LABEL_57;
        }
        v5 |= 0x80u;
        int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v8, v25);
          *(void *)unint64_t v56 = v50;
          *(unsigned char *)(a1 + 65) = v51 != 0;
          if (!v50) {
            goto LABEL_84;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          *(void *)unint64_t v56 = v24;
          *(unsigned char *)(a1 + 65) = v25 != 0;
        }
        goto LABEL_65;
      case 6u:
        if (v9 != 50) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        int v29 = (void *)(a1 + 24);
        goto LABEL_56;
      case 7u:
        if (v9 != 56) {
          goto LABEL_57;
        }
        v5 |= 0x100u;
        uint64_t v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v52 = sub_188C0D0((uint64_t)v8, v31);
          *(void *)unint64_t v56 = v52;
          *(_DWORD *)(a1 + 68) = v53;
          if (!v52) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v30 = v8 + 2;
LABEL_42:
          *(void *)unint64_t v56 = v30;
          *(_DWORD *)(a1 + 68) = v31;
        }
        goto LABEL_65;
      case 8u:
        if (v9 != 64) {
          goto LABEL_57;
        }
        v5 |= 0x200u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v54 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)unint64_t v56 = v54;
          *(_DWORD *)(a1 + 72) = v55;
          if (!v54) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_47:
          *(void *)unint64_t v56 = v33;
          *(_DWORD *)(a1 + 72) = v34;
        }
        goto LABEL_65;
      case 9u:
        if (v9 != 74) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        int v29 = (void *)(a1 + 32);
        goto LABEL_56;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v37 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
        if (v37) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        int v29 = (void *)(a1 + 40);
LABEL_56:
        uint64_t v38 = (std::string *)sub_1880F84(v29, v28);
        std::string::size_type v39 = (void *)sub_188C244(v38, *(char **)v56, (uint64_t)a3);
        goto LABEL_64;
      default:
LABEL_57:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v7)
          {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v56;
          }
          std::string::size_type v39 = sub_1885AC0(v9, v41, v8, a3);
LABEL_64:
          *(void *)unint64_t v56 = v39;
          if (!v39) {
            goto LABEL_84;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_84:
        }
          *(void *)unint64_t v56 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v56;
    }
  }
}

unsigned char *sub_11F3B34(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 64);
    unsigned char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v14 = *(void *)(a1 + 56);
    unsigned char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unint64_t v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 65);
    unsigned char *v4 = 40;
    v4[1] = v17;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_28:
      if ((v6 & 0x100) == 0) {
        goto LABEL_40;
      }
      goto LABEL_34;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_28;
  }
  unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v18 = *(_DWORD *)(a1 + 68);
  unsigned char *v4 = 56;
  v4[1] = v18;
  if (v18 > 0x7F)
  {
    v4[1] = v18 | 0x80;
    unsigned int v19 = v18 >> 7;
    v4[2] = v18 >> 7;
    v4 += 3;
    if (v18 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v20 = v19 >> 14;
        v19 >>= 7;
        *v4++ = v19;
      }
      while (v20);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_40:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 72);
    unsigned char *v4 = 64;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_11F3F28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    goto LABEL_21;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
LABEL_32:
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v1 & 0x20) != 0) {
LABEL_16:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_17:
  if ((v1 & 0x40) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x80) != 0) {
    v2 += 2;
  }
LABEL_21:
  if ((v1 & 0x300) != 0)
  {
    if ((v1 & 0x100) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v1 & 0x200) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11F413C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unsigned int v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_28:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_33;
    }
LABEL_32:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_33:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      v3[2].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 65);
      goto LABEL_11;
    }
LABEL_34:
    v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    }
    if ((v4 & 0x200) != 0) {
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F42D8()
{
  return 1;
}

void *sub_11F42E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.BikeshareStationUpdate");
}

uint64_t sub_11F42F0(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F43BC(uint64_t a1)
{
  sub_11F42F0(a1);

  operator delete();
}

uint64_t sub_11F43F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x38) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
    *(_DWORD *)(a1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11F44BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)int v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 24);
        goto LABEL_33;
      case 2u:
        if (v9 != 16) {
          goto LABEL_36;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v16);
          *(void *)int v32 = v28;
          *(void *)(a1 + 48) = v29;
          if (!v28) {
            goto LABEL_57;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_17:
          *(void *)int v32 = v15;
          *(void *)(a1 + 48) = v16;
        }
        goto LABEL_44;
      case 3u:
        if (v9 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 32);
        goto LABEL_33;
      case 4u:
        if (v9 != 32) {
          goto LABEL_36;
        }
        unsigned int v19 = v8 + 1;
        unint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)int v32 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v32) {
            goto LABEL_57;
          }
          unint64_t v20 = v30;
        }
        else
        {
          unsigned int v19 = v8 + 2;
LABEL_26:
          *(void *)int v32 = v19;
        }
        if (v20 > 5)
        {
          if (*v7) {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v20, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v20;
        }
        goto LABEL_44;
      case 5u:
        if (v9 != 42) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 40);
LABEL_33:
        uint64_t v24 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v25 = (void *)sub_188C244(v24, *(char **)v32, (uint64_t)a3);
        goto LABEL_43;
      case 7u:
        if (v9 != 57) {
          goto LABEL_36;
        }
        v5 |= 0x10u;
        *(void *)(a1 + 56) = *(void *)v8;
        *(void *)int v32 = v8 + 8;
        goto LABEL_44;
      default:
LABEL_36:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v32;
          }
          uint64_t v25 = sub_1885AC0(v9, v27, v8, a3);
LABEL_43:
          *(void *)int v32 = v25;
          if (!v25) {
            goto LABEL_57;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          *(void *)int v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_11F480C(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 64);
    unsigned char *v4 = 32;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    unsigned char *v4 = 57;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_11F4A48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_15:
  if ((v1 & 0x10) != 0) {
    v2 += 9;
  }
  if ((v1 & 0x20) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 64);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    v2 += v11;
  }
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11F4BD4(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_24:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F4D24()
{
  return 1;
}

void *sub_11F4D2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.DocklessBikeUpdate");
}

uint64_t sub_11F4D3C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F4DF4(uint64_t a1)
{
  sub_11F4D3C(a1);

  operator delete();
}

uint64_t sub_11F4E2C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11F4EB4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)unint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 32);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v17 = (void *)sub_188C244(v16, *(char **)v30, (uint64_t)a3);
        goto LABEL_35;
      case 3u:
        if (v9 != 24) {
          goto LABEL_28;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v19);
          *(void *)unint64_t v30 = v26;
          *(void *)(a1 + 40) = v27;
          if (!v26) {
            goto LABEL_45;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)unint64_t v30 = v18;
          *(void *)(a1 + 40) = v19;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_28;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)unint64_t v30 = v28;
          *(void *)(a1 + 48) = v29;
          if (!v28) {
            goto LABEL_45;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_27:
          *(void *)unint64_t v30 = v21;
          *(void *)(a1 + 48) = v22;
        }
        goto LABEL_36;
      default:
LABEL_28:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v30;
          }
          unint64_t v17 = sub_1885AC0(v9, v25, v8, a3);
LABEL_35:
          *(void *)unint64_t v30 = v17;
          if (!v17) {
            goto LABEL_45;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          *(void *)unint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_11F515C(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(void *)(a1 + 40);
  unsigned char *v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11F534C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11F5478(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_18:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F5580()
{
  return 1;
}

void *sub_11F5588@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.Flight");
}

void *sub_11F5598(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122C020(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F5618(void *a1)
{
  sub_11F5598(a1);

  operator delete();
}

uint64_t sub_11F5650(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11F4E2C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_11F56CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          std::string::size_type v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11FE810(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_11F586C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        std::string::size_type v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        std::string::size_type v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_11F586C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F4EB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11F58FC(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_11F515C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    std::string::size_type v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    std::string::size_type v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_11F5A40(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11F534C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_11F5AF0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_122C4AC((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F5BC0()
{
  return 1;
}

void *sub_11F5BC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.DepartureGateUpdate");
}

uint64_t sub_11F5BD8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F5C90(uint64_t a1)
{
  sub_11F5BD8(a1);

  operator delete();
}

uint64_t sub_11F5CC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_11F5D44(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      std::string::size_type v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(char **)v20;
    }
    std::string::size_type v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_11F5EEC(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_11F5FD8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11F60B4()
{
  return 1;
}

void *sub_11F60BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.ElectricVehicleCharger.Operator");
}

void *sub_11F60CC(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F6140(void *a1)
{
  sub_11F60CC(a1);

  operator delete();
}

uint64_t sub_11F6178(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x7F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_11F61A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v48 + 2;
      }
    }
    uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_52;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v48 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_59;
        }
        uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v48 = v36;
        *(_DWORD *)(a1 + 24) = v37;
        if (v36) {
          goto LABEL_59;
        }
        goto LABEL_95;
      case 2u:
        if (v9 != 16) {
          goto LABEL_52;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v38 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v48 = v38;
          *(_DWORD *)(a1 + 28) = v39;
          if (!v38) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v48 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_59;
      case 3u:
        if (v9 != 24) {
          goto LABEL_52;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          BOOL v40 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v48 = v40;
          *(_DWORD *)(a1 + 32) = v41;
          if (!v40) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v48 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_59;
      case 4u:
        if (v9 != 32) {
          goto LABEL_52;
        }
        int v21 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, (v24 - 128));
          if (!v48) {
            goto LABEL_95;
          }
          unint64_t v22 = v42;
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          uint64_t v48 = v21;
        }
        if (v22 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 36) = v22;
          goto LABEL_59;
        }
        if (*v7) {
          uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v47 = 4;
        goto LABEL_87;
      case 5u:
        if (v9 != 40) {
          goto LABEL_52;
        }
        uint64_t v25 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v26 = *v25;
        int v27 = v22 + (v26 << 7);
        unint64_t v22 = (v27 - 128);
        if (v26 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v48) {
            goto LABEL_95;
          }
          unint64_t v22 = v43;
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_35:
          uint64_t v48 = v25;
        }
        if (v22 <= 0x1D)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 40) = v22;
          goto LABEL_59;
        }
        if (*v7) {
          uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v47 = 5;
        goto LABEL_87;
      case 6u:
        if (v9 != 48) {
          goto LABEL_52;
        }
        uint64_t v28 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v29 = *v28;
        int v30 = v22 + (v29 << 7);
        unint64_t v22 = (v30 - 128);
        if (v29 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
          if (!v48) {
            goto LABEL_95;
          }
          unint64_t v22 = v44;
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_42:
          uint64_t v48 = v28;
        }
        if (sub_1321814(v22))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 44) = v22;
          goto LABEL_59;
        }
        if (*v7) {
          uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v47 = 6;
        goto LABEL_87;
      case 7u:
        if (v9 != 56) {
          goto LABEL_52;
        }
        int v31 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v32 = *v31;
        int v33 = v22 + (v32 << 7);
        unint64_t v22 = (v33 - 128);
        if (v32 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, (v33 - 128));
          if (!v48) {
            goto LABEL_95;
          }
          unint64_t v22 = v45;
        }
        else
        {
          int v31 = v8 + 2;
LABEL_49:
          uint64_t v48 = v31;
        }
        if (sub_13F4AA8(v22))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 48) = v22;
        }
        else
        {
          if (*v7) {
            uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v47 = 7;
LABEL_87:
          sub_188C020(v47, v22, v46);
        }
        goto LABEL_59;
      default:
LABEL_52:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v48;
          }
          uint64_t v48 = (char *)sub_1885AC0(v9, v35, v8, a3);
          if (!v48) {
            goto LABEL_95;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_95:
        }
          uint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

unsigned char *sub_11F669C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 48);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    int v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    int v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_11F6AAC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_31;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  int v3 = *(_DWORD *)(a1 + 36);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
  if ((v1 & 0x10) == 0)
  {
LABEL_11:
    if ((v1 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_23;
  }
LABEL_19:
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v6;
  if ((v1 & 0x20) == 0)
  {
LABEL_12:
    if ((v1 & 0x40) == 0) {
      goto LABEL_31;
    }
    goto LABEL_27;
  }
LABEL_23:
  int v7 = *(_DWORD *)(a1 + 44);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v8;
  if ((v1 & 0x40) != 0)
  {
LABEL_27:
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_31:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_11F6C5C()
{
  return 1;
}

void *sub_11F6C64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.ElectricVehicleCharger.Connector");
}

uint64_t sub_11F6C74(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252DCD0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_11F5BD8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122C0A0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F6D4C(uint64_t a1)
{
  sub_11F6C74(a1);

  operator delete();
}

uint64_t sub_11F6D84(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11F6178(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_11F5CC8(*(void *)(v1 + 56));
  }
LABEL_11:
  if ((v5 & 0xC) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(_DWORD *)(v1 + 72) = 1;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_11F6E60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v37 + 2);
      }
    }
    *(void *)int v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_41;
        }
        v5 |= 4u;
        unsigned int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v37 = v12;
          *(void *)(a1 + 64) = v13;
          goto LABEL_49;
        }
        uint64_t v33 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v37 = v33;
        *(void *)(a1 + 64) = v34;
        if (v33) {
          goto LABEL_49;
        }
        goto LABEL_62;
      case 2u:
        if (v9 != 16) {
          goto LABEL_41;
        }
        unsigned int v15 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)int v37 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v37) {
            goto LABEL_62;
          }
          unint64_t v16 = v35;
        }
        else
        {
          unsigned int v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)int v37 = v15;
        }
        if ((v16 - 1) > 3)
        {
          if (*v7) {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v36);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 72) = v16;
        }
        goto LABEL_49;
      case 3u:
        if (v9 != 26) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unint64_t v19 = *(void **)(a1 + 56);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v20 = (void *)*v20;
          }
          unint64_t v19 = sub_11FE938((uint64_t)v20);
          *(void *)(a1 + 56) = v19;
          char v8 = *(unsigned __int8 **)v37;
        }
        uint64_t v21 = sub_11F71FC(a3, (uint64_t)v19, v8);
        goto LABEL_48;
      case 4u:
        if (v9 != 34) {
          goto LABEL_41;
        }
        unint64_t v22 = (char *)(v8 - 1);
        while (1)
        {
          unint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)int v37 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            sub_11FE9BC(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, v27);
            unint64_t v23 = *(unsigned __int8 **)v37;
          }
          unint64_t v22 = sub_11F728C(a3, v26, v23);
          *(void *)int v37 = v22;
          if (!v22) {
            goto LABEL_62;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_49;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v29 = (uint64_t *)*v29;
        }
        unint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 48), v29);
        uint64_t v21 = (uint64_t)sub_188C244(v30, *(char **)v37, (uint64_t)a3);
        goto LABEL_48;
      default:
LABEL_41:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v37;
          }
          uint64_t v21 = (uint64_t)sub_1885AC0(v9, v32, (char *)v8, a3);
LABEL_48:
          *(void *)int v37 = v21;
          if (!v21) {
            goto LABEL_62;
          }
LABEL_49:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          *(void *)int v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

uint64_t sub_11F71FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F5D44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11F728C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F61A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11F731C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 72);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 56);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unsigned int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unsigned int v15 = v4 + 2;
    }
    uint64_t v4 = sub_11F5EEC(v13, v15, a3);
  }
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        unint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        unint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_11F669C(v18, (unint64_t)v20, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_11F75E0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11F6AAC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_24;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_19;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_11F5FD8(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v13 = *(_DWORD *)(a1 + 72);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
LABEL_24:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_11F7778(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122C538((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        int v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_26;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(std::string **)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        int v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_11FE938((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v17 = &off_252DCA8;
    }
    sub_11EC100(v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_26:
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11F7908()
{
  return 1;
}

void *sub_11F7910@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.ElectricVehicleCharger");
}

void *sub_11F7920(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122C120(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F79A0(void *a1)
{
  sub_11F7920(a1);

  operator delete();
}

uint64_t sub_11F79D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11F6D84(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_11F7A54(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      unsigned int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          unsigned int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11FEA3C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            int v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_11F7BF4(a3, v16, v13);
          unsigned int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      unsigned int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_11F7BF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F6E60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11F7C84(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_11F731C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_11F7DC8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11F75E0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_11F7E78(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_122C5B4((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11F7F48()
{
  return 1;
}

void *sub_11F7F50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.ElectricVehicleChargingStationUpdate");
}

uint64_t sub_11F7F60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_122BDA0((void *)(a1 + 72));
  sub_122BDA0((void *)(a1 + 48));
  sub_122BDA0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F8050(uint64_t a1)
{
  sub_11F7F60(a1);

  operator delete();
}

uint64_t sub_11F8088(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EBD14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11EBD14(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_11EBD14(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 7) != 0)
  {
    if ((v11 & 1) == 0)
    {
      if ((v11 & 2) == 0) {
        goto LABEL_16;
      }
LABEL_22:
      unint64_t v13 = *(void *)(v1 + 104) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v13 + 23) < 0)
      {
        **(unsigned char **)unint64_t v13 = 0;
        *(void *)(v13 + 8) = 0;
        if ((v11 & 4) == 0) {
          goto LABEL_29;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v13 = 0;
        *(unsigned char *)(v13 + 23) = 0;
        if ((v11 & 4) == 0) {
          goto LABEL_29;
        }
      }
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v11 & 2) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v11 & 2) != 0) {
        goto LABEL_22;
      }
    }
LABEL_16:
    if ((v11 & 4) == 0) {
      goto LABEL_29;
    }
LABEL_26:
    unint64_t v14 = *(void *)(v1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v14 + 23) < 0)
    {
      **(unsigned char **)unint64_t v14 = 0;
      *(void *)(v14 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v14 = 0;
      *(unsigned char *)(v14 + 23) = 0;
    }
  }
LABEL_29:
  if ((v11 & 0x18) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(void *)(v1 + 128) = 0;
  }
  char v16 = *(unsigned char *)(v1 + 8);
  uint64_t v15 = v1 + 8;
  *(_DWORD *)(v15 + 8) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

uint64_t sub_11F8208(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v48 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v49 + 1);
    unsigned int v8 = **(unsigned char **)v49;
    if ((char)**(unsigned char **)v49 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v49, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v49 + 2);
      }
    }
    *(void *)uint64_t v49 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 96);
        goto LABEL_31;
      case 2u:
        if (v8 != 16) {
          goto LABEL_62;
        }
        v5 |= 8u;
        unint64_t v14 = v7 + 1;
        uint64_t v15 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v16 = *v14;
        uint64_t v15 = v15 + (v16 << 7) - 128;
        if (v16 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v7, v15);
          *(void *)uint64_t v49 = v44;
          *(void *)(a1 + 120) = v45;
          if (!v44) {
            goto LABEL_79;
          }
        }
        else
        {
          unint64_t v14 = v7 + 2;
LABEL_17:
          *(void *)uint64_t v49 = v14;
          *(void *)(a1 + 120) = v15;
        }
        goto LABEL_70;
      case 3u:
        if (v8 != 24) {
          goto LABEL_62;
        }
        v5 |= 0x10u;
        uint64_t v17 = v7 + 1;
        uint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v7, v18);
          *(void *)uint64_t v49 = v46;
          *(void *)(a1 + 128) = v47;
          if (!v46) {
            goto LABEL_79;
          }
        }
        else
        {
          uint64_t v17 = v7 + 2;
LABEL_22:
          *(void *)uint64_t v49 = v17;
          *(void *)(a1 + 128) = v18;
        }
        goto LABEL_70;
      case 4u:
        if (v8 != 34) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 104);
        goto LABEL_31;
      case 5u:
        if (v8 != 42) {
          goto LABEL_62;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 112);
LABEL_31:
        unint64_t v22 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v23 = (void *)sub_188C244(v22, *(char **)v49, (uint64_t)a3);
        goto LABEL_69;
      case 6u:
        if (v8 != 50) {
          goto LABEL_62;
        }
        unint64_t v24 = v7 - 1;
        while (1)
        {
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          *(void *)uint64_t v49 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            int v29 = sub_11FE16C(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, (uint64_t)v29);
            uint64_t v25 = *(unsigned __int8 **)v49;
          }
          unint64_t v24 = (char *)sub_11EC1EC(a3, v28, v25);
          *(void *)uint64_t v49 = v24;
          if (!v24) {
            goto LABEL_79;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 50) {
            goto LABEL_70;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_62;
        }
        unint64_t v30 = v7 - 1;
        while (1)
        {
          BOOL v31 = (unsigned __int8 *)(v30 + 1);
          *(void *)uint64_t v49 = v30 + 1;
          uint64_t v32 = *(_DWORD **)(a1 + 64);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 56), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 56) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            unint64_t v35 = sub_11FE16C(*(void *)(a1 + 48));
            uint64_t v34 = sub_188CDC8(a1 + 48, (uint64_t)v35);
            BOOL v31 = *(unsigned __int8 **)v49;
          }
          unint64_t v30 = (char *)sub_11EC1EC(a3, v34, v31);
          *(void *)uint64_t v49 = v30;
          if (!v30) {
            goto LABEL_79;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 58) {
            goto LABEL_70;
          }
        }
      case 8u:
        if (v8 != 66) {
          goto LABEL_62;
        }
        uint64_t v36 = v7 - 1;
        while (1)
        {
          int v37 = (unsigned __int8 *)(v36 + 1);
          *(void *)uint64_t v49 = v36 + 1;
          uint64_t v38 = *(_DWORD **)(a1 + 88);
          if (v38 && (uint64_t v39 = *(int *)(a1 + 80), (int)v39 < *v38))
          {
            *(_DWORD *)(a1 + 80) = v39 + 1;
            uint64_t v40 = *(void *)&v38[2 * v39 + 2];
          }
          else
          {
            int v41 = sub_11FE16C(*(void *)(a1 + 72));
            uint64_t v40 = sub_188CDC8(a1 + 72, (uint64_t)v41);
            int v37 = *(unsigned __int8 **)v49;
          }
          uint64_t v36 = (char *)sub_11EC1EC(a3, v40, v37);
          *(void *)uint64_t v49 = v36;
          if (!v36) {
            goto LABEL_79;
          }
          if (*(void *)a3 <= (unint64_t)v36 || *v36 != 66) {
            goto LABEL_70;
          }
        }
      default:
LABEL_62:
        if (v8) {
          BOOL v42 = (v8 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v48)
          {
            unint64_t v43 = (std::string *)((*v48 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v43 = (std::string *)sub_188DBD8(v48);
            uint64_t v7 = *(char **)v49;
          }
          unint64_t v23 = sub_1885AC0(v8, v43, v7, a3);
LABEL_69:
          *(void *)uint64_t v49 = v23;
          if (!v23) {
            goto LABEL_79;
          }
LABEL_70:
          if (sub_11947B8((uint64_t)a3, (char **)v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_79:
        }
          *(void *)uint64_t v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v49;
    }
  }
}

char *sub_11F86B8(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 120);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 128);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 50;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v15, v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 58;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        unint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        unint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v20, v22, a3);
    }
  }
  int v23 = *(_DWORD *)(a1 + 80);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 66;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      v4[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, v4 + 1);
      }
      else {
        uint64_t v27 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v25, v27, a3);
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    BOOL v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    BOOL v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_11F8A60(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EC024(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11EC024(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_11EC024(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x1F) == 0) {
    goto LABEL_28;
  }
  if (v22)
  {
    unint64_t v25 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 2) == 0)
    {
LABEL_24:
      if ((v22 & 4) == 0) {
        goto LABEL_25;
      }
LABEL_36:
      unint64_t v31 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
      uint64_t v33 = *(void *)(v31 + 8);
      if ((v32 & 0x80u) == 0) {
        uint64_t v33 = v32;
      }
      v16 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 8) == 0)
      {
LABEL_26:
        if ((v22 & 0x10) == 0) {
          goto LABEL_28;
        }
        goto LABEL_27;
      }
      goto LABEL_39;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_24;
  }
  unint64_t v28 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v16 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 4) != 0) {
    goto LABEL_36;
  }
LABEL_25:
  if ((v22 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_39:
  v16 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v22 & 0x10) != 0) {
LABEL_27:
  }
    v16 += ((9 * (__clz(*(void *)(a1 + 128) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_28:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v34 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    v16 += v35;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

std::string *sub_11F8CE4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122C220(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_122C220(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[3], *(_DWORD *)(a2 + 80));
    uint64_t result = sub_122C220(v3 + 3, v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__r.__words[2] - LODWORD(v3[3].__r_.__value_.__r.__words[1]));
    int v17 = LODWORD(v3[3].__r_.__value_.__r.__words[1]) + v14;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v17;
    int v18 = (int *)v3[3].__r_.__value_.__r.__words[2];
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x1F) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v23 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[4], v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_28;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    unint64_t v24 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v25 = v3->__r_.__value_.__l.__size_;
    uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_31;
    }
LABEL_28:
    uint64_t v27 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v28 = v3->__r_.__value_.__l.__size_;
    uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v27, v29);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v19;
        goto LABEL_18;
      }
LABEL_16:
      v3[5].__r_.__value_.__l.__size_ = *(void *)(a2 + 128);
      goto LABEL_17;
    }
LABEL_31:
    v3[5].__r_.__value_.__r.__words[0] = *(void *)(a2 + 120);
    if ((v19 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F8F5C()
{
  return 1;
}

void *sub_11F8F64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.TodayAtAppleSessionUpdate");
}

uint64_t sub_11F8F74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_122BDA0((void *)(a1 + 48));
  sub_122BDA0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F902C(uint64_t a1)
{
  sub_11F8F74(a1);

  operator delete();
}

uint64_t sub_11F9064(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EBD14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11EBD14(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v8 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_11F913C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)unint64_t v31 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 4) {
      break;
    }
    if (v11 == 3)
    {
      if (v8 == 26)
      {
        int v22 = v7 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)unint64_t v31 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_11FE16C(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
            uint64_t v23 = *(unsigned __int8 **)v31;
          }
          int v22 = (char *)sub_11EC1EC(a3, v26, v23);
          *(void *)unint64_t v31 = v22;
          if (!v22) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_45;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 != 2 || v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 72), v29);
    uint64_t v15 = (void *)sub_188C244(v30, *(char **)v31, (uint64_t)a3);
LABEL_44:
    *(void *)unint64_t v31 = v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v8 == 34)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      int v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)unint64_t v31 = v16 + 1;
      int v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_11FE16C(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, (uint64_t)v21);
        int v17 = *(unsigned __int8 **)v31;
      }
      uint64_t v16 = (char *)sub_11EC1EC(a3, v20, v17);
      *(void *)unint64_t v31 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 34) {
        goto LABEL_45;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v31;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_44;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v31;
  }
LABEL_50:
  *(void *)unint64_t v31 = 0;
  return *(void *)v31;
}

char *sub_11F93DC(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 34;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      v4[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, v4 + 1);
      }
      else {
        uint64_t v15 = v4 + 2;
      }
      uint64_t v4 = sub_11EBF38(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_11F95C8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EC024(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11EC024(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_11F9710(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122C220(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_122C220(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11F987C()
{
  return 1;
}

void *sub_11F9884@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.AppleStoreSpecialMessageUpdate");
}

uint64_t sub_11F9894(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_122BDA0((void *)(a1 + 48));
  sub_122BDA0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11F994C(uint64_t a1)
{
  sub_11F9894(a1);

  operator delete();
}

uint64_t sub_11F9984(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11EBD14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_11EBD14(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if (v8)
  {
    unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
  if ((v8 & 6) != 0)
  {
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
  }
  char v11 = *(unsigned char *)(v1 + 8);
  uint64_t v10 = v1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_11F9A68(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)uint64_t v35 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_11FE16C(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(unsigned __int8 **)v35;
          }
          int v12 = (char *)sub_11EC1EC(a3, v16, v13);
          *(void *)uint64_t v35 = v12;
          if (!v12) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_48;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_40;
        }
        v5 |= 2u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v35 = v33;
          *(void *)(a1 + 80) = v34;
          if (!v33) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          *(void *)uint64_t v35 = v18;
          *(void *)(a1 + 80) = v19;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 25) {
          goto LABEL_40;
        }
        v5 |= 4u;
        *(void *)(a1 + 88) = *(void *)v8;
        *(void *)uint64_t v35 = v8 + 8;
        goto LABEL_48;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (uint64_t *)*v22;
        }
        uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 72), v22);
        unint64_t v24 = (void *)sub_188C244(v23, *(char **)v35, (uint64_t)a3);
        goto LABEL_47;
      case 5u:
        if (v9 != 42) {
          goto LABEL_40;
        }
        uint64_t v25 = v8 - 1;
        while (1)
        {
          uint64_t v26 = (unsigned __int8 *)(v25 + 1);
          *(void *)uint64_t v35 = v25 + 1;
          uint64_t v27 = *(_DWORD **)(a1 + 64);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 56), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 56) = v28 + 1;
            uint64_t v29 = *(void *)&v27[2 * v28 + 2];
          }
          else
          {
            uint64_t v30 = sub_11FE16C(*(void *)(a1 + 48));
            uint64_t v29 = sub_188CDC8(a1 + 48, (uint64_t)v30);
            uint64_t v26 = *(unsigned __int8 **)v35;
          }
          uint64_t v25 = (char *)sub_11EC1EC(a3, v29, v26);
          *(void *)uint64_t v35 = v25;
          if (!v25) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 42) {
            goto LABEL_48;
          }
        }
      default:
LABEL_40:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v35;
          }
          unint64_t v24 = sub_1885AC0(v9, v32, v8, a3);
LABEL_47:
          *(void *)uint64_t v35 = v24;
          if (!v24) {
            goto LABEL_55;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

char *sub_11F9DC0(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_11EBF38(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(void *)(a1 + 80);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v15 = *(void *)(a1 + 88);
    *__dst = 25;
    *(void *)(__dst + 1) = v15;
    __dst += 9;
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int j = 0; j != v16; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 42;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        int v20 = __dst + 2;
      }
      __dst = sub_11EBF38(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_11FA060(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11EC024(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_11EC024(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      v9 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v15 & 4) != 0) {
      v9 += 9;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v9 += v22;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_11FA1E0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122C220(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_122C220(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 7) != 0)
  {
    if (v14)
    {
      unint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0)
        {
LABEL_12:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
          goto LABEL_13;
        }
LABEL_11:
        v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
        goto LABEL_12;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    v3[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
    if ((v14 & 4) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11FA384()
{
  return 1;
}

void *sub_11FA38C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.AnimalUpdate");
}

uint64_t sub_11FA39C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252DE88)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_11EBC24(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11FA468(uint64_t a1)
{
  sub_11FA39C(a1);

  operator delete();
}

uint64_t sub_11FA4A0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_11EBD14(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_11FA534(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)int v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (uint64_t)sub_188C244(v17, *(char **)v20, (uint64_t)a3);
LABEL_29:
    *(void *)int v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void **)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_11FE16C((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      int v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_11EC1EC(a3, (uint64_t)v18, v7);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)int v20 = 0;
  return *(void *)v20;
}

char *sub_11FA6F4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_11EBF38(v7, v9, a3);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_11FA830(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_11EC024(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_11FA914(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_11FE16C((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_252D9F8;
      }
      uint64_t result = sub_11EC100(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11FAA00()
{
  return 1;
}

void *sub_11FAA08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.BusinessAdvisoryUpdate.AdvisoryMessage");
}

uint64_t sub_11FAA18(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_122C1A0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11FAAC4(uint64_t a1)
{
  sub_11FAA18(a1);

  operator delete();
}

uint64_t sub_11FAAFC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11FA4A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 6) != 0)
  {
    *(void *)(v1 + 56) = 0;
    *(void *)(v1 + 64) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}