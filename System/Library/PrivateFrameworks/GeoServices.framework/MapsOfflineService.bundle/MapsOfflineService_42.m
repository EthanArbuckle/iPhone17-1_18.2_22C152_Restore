uint64_t sub_11FABB8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  int v5;
  void *v7;
  char *v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t *v13;
  std::string *v14;
  void *v15;
  char *v16;
  unsigned __int8 *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  int v24;
  char *v25;
  uint64_t v26;
  int v27;
  BOOL v28;
  std::string *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34[2];

  *(void *)v34 = a2;
  v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v7 = (void *)(a1 + 8);
  while (2)
  {
    v8 = (char *)(*(void *)v34 + 1);
    v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      v10 = v9 + (*v8 << 7);
      v9 = v10 - 128;
      if (*v8 < 0)
      {
        v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        v9 = v11;
      }
      else
      {
        v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        v12 = *(void *)(a1 + 8);
        v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          v13 = (uint64_t *)*v13;
        }
        v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        v15 = (void *)sub_188C244(v14, *(char **)v34, (uint64_t)a3);
        goto LABEL_40;
      case 2u:
        if (v9 != 18) {
          goto LABEL_33;
        }
        v16 = v8 - 1;
        while (1)
        {
          v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)v34 = v16 + 1;
          v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            v21 = sub_11FEDB0(*(void *)(a1 + 24));
            v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
            v17 = *(unsigned __int8 **)v34;
          }
          v16 = (char *)sub_11FAEB8(a3, v20, v17);
          *(void *)v34 = v16;
          if (!v16) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_41;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 2u;
        v22 = v8 + 1;
        v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        v24 = *v22;
        v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          v30 = sub_188C138((uint64_t)v8, v23);
          *(void *)v34 = v30;
          *(void *)(a1 + 56) = v31;
          if (!v30) {
            goto LABEL_50;
          }
        }
        else
        {
          v22 = v8 + 2;
LABEL_27:
          *(void *)v34 = v22;
          *(void *)(a1 + 56) = v23;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_33;
        }
        v5 |= 4u;
        v25 = v8 + 1;
        v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        v27 = *v25;
        v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          v32 = sub_188C138((uint64_t)v8, v26);
          *(void *)v34 = v32;
          *(void *)(a1 + 64) = v33;
          if (!v32) {
            goto LABEL_50;
          }
        }
        else
        {
          v25 = v8 + 2;
LABEL_32:
          *(void *)v34 = v25;
          *(void *)(a1 + 64) = v26;
        }
        goto LABEL_41;
      default:
LABEL_33:
        if (v9) {
          v28 = (v9 & 7) == 4;
        }
        else {
          v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            v8 = *(char **)v34;
          }
          v15 = sub_1885AC0(v9, v29, v8, a3);
LABEL_40:
          *(void *)v34 = v15;
          if (!v15) {
            goto LABEL_50;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

uint64_t sub_11FAEB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11FA534(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11FAF48(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        v11 = v4 + 2;
      }
      v4 = sub_11FA6F4(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(void *)(a1 + 56);
    unsigned char *v4 = 24;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(void *)(a1 + 64);
    unsigned char *v4 = 32;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_11FB1A8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    v4 = (uint64_t *)(v3 + 8);
  }
  else {
    v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11FA830(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0) {
LABEL_13:
    }
      v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_11FB2FC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122C640(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_11FB43C()
{
  return 1;
}

void *sub_11FB444@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.BusinessAdvisoryUpdate");
}

void *sub_11FB454(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_11FB4D8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_11FB4D8(uint64_t result)
{
  if ((uint64_t (***)())result != &off_252DEF8)
  {
    v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 24);
    if (v2)
    {
      sub_11F3478(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[4];
    if (v3)
    {
      sub_11F16C4(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_11F42F0(v4);
      operator delete();
    }
    uint64_t v5 = (void *)v1[6];
    if (v5)
    {
      sub_11F5598(v5);
      operator delete();
    }
    uint64_t v6 = (void *)v1[7];
    if (v6)
    {
      sub_11F7920(v6);
      operator delete();
    }
    uint64_t v7 = v1[8];
    if (v7)
    {
      sub_11F7F60(v7);
      operator delete();
    }
    uint64_t v8 = v1[9];
    if (v8)
    {
      sub_11F9894(v8);
      operator delete();
    }
    uint64_t v9 = v1[10];
    if (v9)
    {
      sub_11F8F74(v9);
      operator delete();
    }
    uint64_t result = v1[11];
    if (result)
    {
      sub_11FAA18(result);
      operator delete();
    }
  }
  return result;
}

void sub_11FB644(void *a1)
{
  sub_11FB454(a1);

  operator delete();
}

uint64_t sub_11FB67C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t result = sub_11F357C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_11F18AC(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = sub_11F43F4(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = sub_11F5650(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    uint64_t result = sub_11F8088(*(void *)(v1 + 64));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = sub_11F79D8(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_23:
  uint64_t result = sub_11F9984(*(void *)(v1 + 72));
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_11F9064(*(void *)(v1 + 80));
LABEL_11:
  if ((v2 & 0x100) != 0) {
    uint64_t result = sub_11FAAFC(*(void *)(v1 + 88));
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11FB760(uint64_t a1, char *a2, int32x2_t *a3)
{
  v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v33 + 2;
      }
    }
    v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_11FE6F0((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          uint64_t v7 = v33;
        }
        uint64_t v13 = (char *)sub_11FBB94(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 2u:
        if (v8 != 18) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          sub_11FE60C((uint64_t)v15);
          uint64_t v14 = v16;
          *(void *)(a1 + 32) = v16;
          uint64_t v7 = v33;
        }
        uint64_t v13 = (char *)sub_11FBC24(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 3u:
        if (v8 != 26) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void *)(a1 + 40);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_11FE780((uint64_t)v18);
          *(void *)(a1 + 40) = v17;
          uint64_t v7 = v33;
        }
        uint64_t v13 = (char *)sub_11FBCB4(a3, v17, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 4u:
        if (v8 != 34) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 48);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_11FE898((uint64_t)v20);
          *(void *)(a1 + 48) = v19;
          uint64_t v7 = v33;
        }
        uint64_t v13 = sub_11FBD44(a3, v19, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 5u:
        if (v8 != 42) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v21 = *(void *)(a1 + 56);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_11FEAEC((uint64_t)v22);
          *(void *)(a1 + 56) = v21;
          uint64_t v7 = v33;
        }
        uint64_t v13 = sub_11FBDD4(a3, v21, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 6u:
        if (v8 != 50) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v23 = *(void **)(a1 + 64);
        if (!v23)
        {
          v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v24 = (void *)*v24;
          }
          uint64_t v23 = sub_11FEB8C((uint64_t)v24);
          *(void *)(a1 + 64) = v23;
          uint64_t v7 = v33;
        }
        uint64_t v13 = (char *)sub_11FBE64(a3, (uint64_t)v23, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 7u:
        if (v8 != 58) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        v25 = *(void **)(a1 + 72);
        if (!v25)
        {
          v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v26 = (void *)*v26;
          }
          v25 = sub_11FECFC((uint64_t)v26);
          *(void *)(a1 + 72) = v25;
          uint64_t v7 = v33;
        }
        uint64_t v13 = (char *)sub_11FBEF4(a3, (uint64_t)v25, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 8u:
        if (v8 != 66) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        v27 = *(void **)(a1 + 80);
        if (!v27)
        {
          v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v28 = (void *)*v28;
          }
          v27 = sub_11FEC4C((uint64_t)v28);
          *(void *)(a1 + 80) = v27;
          uint64_t v7 = v33;
        }
        uint64_t v13 = (char *)sub_11FBF84(a3, (uint64_t)v27, (unsigned __int8 *)v7);
        goto LABEL_70;
      case 9u:
        if (v8 != 74) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        v29 = *(void **)(a1 + 88);
        if (!v29)
        {
          v30 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v30 = (void *)*v30;
          }
          v29 = sub_11FEE34((uint64_t)v30);
          *(void *)(a1 + 88) = v29;
          uint64_t v7 = v33;
        }
        uint64_t v13 = (char *)sub_11FC014(a3, (uint64_t)v29, (unsigned __int8 *)v7);
        goto LABEL_70;
      default:
LABEL_63:
        if (v8) {
          BOOL v31 = (v8 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v6)
          {
            v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v33;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v32, v7, a3);
LABEL_70:
          v33 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            return v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v33;
    }
  }
}

uint64_t sub_11FBB94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F3650(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FBC24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F1A88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FBCB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F44BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11FBD44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F56CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11FBDD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F7A54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FBE64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F8208(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FBEF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F9A68(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FBF84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11F913C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FC014(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11FABB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11FC0A4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_11F3B34(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_11F2498(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_11F480C(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 40);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_11F58FC(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 40);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_11F7C84(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  unsigned char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    v24 = v4 + 2;
  }
  char v4 = sub_11F86B8(v22, v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 72);
  unsigned char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    v27 = v4 + 2;
  }
  char v4 = sub_11F9DC0(v25, v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_65;
    }
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 80);
  unsigned char *v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    v30 = v4 + 2;
  }
  char v4 = sub_11F93DC(v28, v30, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_59:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 88);
    unsigned char *v4 = 74;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    v4[1] = v32;
    if (v32 > 0x7F) {
      v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      v33 = v4 + 2;
    }
    char v4 = sub_11FAF48(v31, v33, a3);
  }
LABEL_65:
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_11FC504(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v6 = sub_11FB1A8(*(void *)(a1 + 88));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_17;
  }
  if (v2)
  {
    uint64_t v4 = sub_11F3F28(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_8:
    uint64_t v5 = sub_11F2BE0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_11F4A48(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v10 = sub_11F5A40(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = sub_11F7DC8(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = sub_11F8A60(*(void *)(a1 + 64));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v13 = sub_11FA060(*(void *)(a1 + 72));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) == 0)
  {
LABEL_15:
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_24:
  uint64_t v14 = sub_11F95C8(*(void *)(a1 + 80));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x100) != 0) {
    goto LABEL_16;
  }
LABEL_17:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_11FC74C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_10;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(std::string **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = (std::string *)sub_11FE6F0((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_252DBE0;
    }
    sub_11F413C(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(std::string **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    sub_11FE60C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_252DAF8;
  }
  sub_11F2FD4(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_28:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(std::string **)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = (std::string *)sub_11FE780((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_252DC30;
  }
  sub_11F4BD4(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_44;
  }
LABEL_36:
  *(_DWORD *)(a1 + 16) |= 8u;
  unsigned int v17 = *(std::string **)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    unsigned int v17 = (std::string *)sub_11FE898((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    unsigned int v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    unsigned int v20 = &off_252DC78;
  }
  sub_11F5AF0(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_52;
  }
LABEL_44:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 56);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      unsigned int v23 = (void *)*v23;
    }
    uint64_t v21 = sub_11FEAEC((uint64_t)v23);
    *(void *)(a1 + 56) = v21;
  }
  if (*(void *)(a2 + 56)) {
    v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    v24 = &off_252DD20;
  }
  sub_11F7E78(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_60;
  }
LABEL_52:
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v25 = *(std::string **)(a1 + 64);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      v27 = (void *)*v27;
    }
    uint64_t v25 = (std::string *)sub_11FEB8C((uint64_t)v27);
    *(void *)(a1 + 64) = v25;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v28 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v28 = &off_252DD50;
  }
  sub_11F8CE4(v25, (uint64_t)v28);
  if ((v4 & 0x40) != 0)
  {
LABEL_60:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    unsigned int v29 = *(std::string **)(a1 + 72);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      unsigned int v29 = (std::string *)sub_11FECFC((uint64_t)v31);
      *(void *)(a1 + 72) = v29;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v32 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v32 = &off_252DE28;
    }
    sub_11FA1E0(v29, (uint64_t)v32);
    if ((v4 & 0x80) != 0) {
      goto LABEL_68;
    }
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_84;
    }
    goto LABEL_76;
  }
LABEL_9:
  if ((v4 & 0x80) == 0) {
    goto LABEL_10;
  }
LABEL_68:
  *(_DWORD *)(a1 + 16) |= 0x80u;
  v33 = *(std::string **)(a1 + 80);
  if (!v33)
  {
    uint64_t v34 = *(void *)(a1 + 8);
    v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
    if (v34) {
      v35 = (void *)*v35;
    }
    v33 = (std::string *)sub_11FEC4C((uint64_t)v35);
    *(void *)(a1 + 80) = v33;
  }
  if (*(void *)(a2 + 80)) {
    unint64_t v36 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    unint64_t v36 = &off_252DDD8;
  }
  sub_11F9710(v33, (uint64_t)v36);
  if ((v4 & 0x100) != 0)
  {
LABEL_76:
    *(_DWORD *)(a1 + 16) |= 0x100u;
    v37 = *(std::string **)(a1 + 88);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      v37 = (std::string *)sub_11FEE34((uint64_t)v39);
      *(void *)(a1 + 88) = v37;
    }
    if (*(void *)(a2 + 88)) {
      v40 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      v40 = &off_252DEB0;
    }
    sub_11FB2FC(v37, (uint64_t)v40);
  }
LABEL_84:
  uint64_t v41 = *(void *)(a2 + 8);
  if (v41)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v41 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11FCA88()
{
  return 1;
}

void *sub_11FCA90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.LiveDataUpdateEntity.LiveDataUpdateValue");
}

uint64_t sub_11FCAA0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252DF58 && *(void *)(a1 + 32))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11FCB6C(uint64_t a1)
{
  sub_11FCAA0(a1);

  operator delete();
}

unsigned char *sub_11FCBA4(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B09D0(*((void *)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_11FCC38(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)unsigned int v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    unsigned int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v20, (uint64_t)a3);
LABEL_29:
    *(void *)unsigned int v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 32);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_15C1918((uint64_t)v19);
      *(void *)(a1 + 32) = v18;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1198F14(a3, v18, v7);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)unsigned int v20 = 0;
  return *(void *)v20;
}

char *sub_11FCDF8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v7, v9, a3);
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_11FCF34(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_11FD018(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_15C1918((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_253F1A0;
      }
      sub_15B0E24(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11FD104(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11FD130@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.LiveDataUpdateEntity.LiveDataUpdateGeometry");
}

uint64_t sub_11FD140(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_252DF80)
  {
    uint64_t v6 = *(void **)(a1 + 64);
    if (v6)
    {
      sub_11FB454(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 72);
    if (v7)
    {
      sub_11FCAA0(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11FD264(uint64_t a1)
{
  sub_11FD140(a1);

  operator delete();
}

uint64_t sub_11FD29C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_16:
    unint64_t v6 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_20;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
  unint64_t v5 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_16;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_20:
  unint64_t v7 = *(void *)(result + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_24;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_24:
  uint64_t result = sub_11FB67C(*(void *)(result + 64));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = (uint64_t)sub_11FCBA4(*(unsigned char **)(v1 + 72));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(void *)(v3 + 72) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_11FD3B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      int v10 = (char)*v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v41, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 2);
      }
    }
    *(void *)uint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v13 = *(void *)(a1 + 64);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          sub_11FEEDC((uint64_t)v14);
          uint64_t v13 = v15;
          *(void *)(a1 + 64) = v15;
          uint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v16 = (uint64_t)sub_11FD82C(a3, v13, v8);
        goto LABEL_70;
      case 2u:
        if (v9 != 18) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        unsigned int v17 = *(void **)(a1 + 72);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v18 = (void *)*v18;
          }
          unsigned int v17 = sub_11FEF60((uint64_t)v18);
          *(void *)(a1 + 72) = v17;
          uint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v16 = sub_11FD8BC(a3, (uint64_t)v17, v8);
        goto LABEL_70;
      case 3u:
        if (v9 != 26) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        unsigned int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unsigned int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 40);
        goto LABEL_38;
      case 4u:
        if (v9 != 34) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        unsigned int v20 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unsigned int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 48);
        goto LABEL_38;
      case 5u:
        if (v9 != 40) {
          goto LABEL_63;
        }
        v5 |= 0x20u;
        unsigned int v23 = (char *)(v8 + 1);
        uint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v24);
          *(void *)uint64_t v41 = v37;
          *(void *)(a1 + 80) = v38;
          if (!v37) {
            goto LABEL_76;
          }
        }
        else
        {
          unsigned int v23 = (char *)(v8 + 2);
LABEL_33:
          *(void *)uint64_t v41 = v23;
          *(void *)(a1 + 80) = v24;
        }
        goto LABEL_71;
      case 6u:
        if (v9 != 50) {
          goto LABEL_63;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v26 = *(void *)(a1 + 8);
        unsigned int v20 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          unsigned int v20 = (uint64_t *)*v20;
        }
        uint64_t v21 = (void *)(a1 + 56);
LABEL_38:
        v27 = (std::string *)sub_1880F84(v21, v20);
        uint64_t v16 = (uint64_t)sub_188C244(v27, *(char **)v41, (uint64_t)a3);
        goto LABEL_70;
      case 7u:
        if (v9 == 56)
        {
          uint64_t v28 = (uint64_t)(v8 - 1);
          while (1)
          {
            *(void *)uint64_t v41 = v28 + 1;
            unint64_t v29 = *(unsigned __int8 *)(v28 + 1);
            uint64_t v30 = (char *)(v28 + 2);
            if (*(char *)(v28 + 1) < 0)
            {
              int v31 = *v30;
              int v32 = v29 + (v31 << 7);
              unint64_t v29 = (v32 - 128);
              if (v31 < 0)
              {
                *(void *)uint64_t v41 = sub_188C138(v28 + 1, (v32 - 128));
                if (!*(void *)v41) {
                  goto LABEL_76;
                }
                unint64_t v29 = v35;
                goto LABEL_45;
              }
              uint64_t v30 = (char *)(v28 + 3);
            }
            *(void *)uint64_t v41 = v30;
LABEL_45:
            if ((v29 - 1) > 2)
            {
              if (*v7) {
                unint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(7, v29, v36);
            }
            else
            {
              uint64_t v33 = *(unsigned int *)(a1 + 24);
              if (v33 == *(_DWORD *)(a1 + 28))
              {
                int v34 = v33 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v33 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v33) = v29;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v33) = v29;
                int v34 = v33 + 1;
              }
              *(_DWORD *)(a1 + 24) = v34;
            }
            uint64_t v28 = *(void *)v41;
            if (*(void *)a3 <= *(void *)v41 || **(unsigned char **)v41 != 56) {
              goto LABEL_71;
            }
          }
        }
        if (v9 == 58)
        {
          *(void *)&long long v42 = a1 + 24;
          *((void *)&v42 + 1) = sub_11EBC14;
          uint64_t v43 = a1 + 8;
          int v44 = 7;
          uint64_t v16 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v8, &v42);
LABEL_70:
          *(void *)uint64_t v41 = v16;
          if (!v16) {
            goto LABEL_76;
          }
LABEL_71:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_63:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v41;
          }
          uint64_t v16 = (uint64_t)sub_1885AC0(v9, v40, (char *)v8, a3);
          goto LABEL_70;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_76:
        }
          *(void *)uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
      default:
        goto LABEL_63;
    }
  }
}

char *sub_11FD82C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11FB760(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FD8BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11FCC38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11FD94C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_11FC0A4(v7, (unint64_t)v9, a3);
    if ((v6 & 0x10) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 72);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_11FCDF8(v10, (unint64_t)v12, a3);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    if ((v6 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_27;
    }
    goto LABEL_21;
  }
LABEL_20:
  char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v13 = *(void *)(a1 + 80);
  unsigned char *v4 = 40;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unint64_t v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_27:
  if ((v6 & 4) != 0) {
    char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 56;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_11FDC58(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x3F) == 0) {
    goto LABEL_17;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v7 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_25;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v7 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t v20 = sub_11FC504(*(void *)(a1 + 64));
    v7 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0)
    {
LABEL_15:
      if ((v8 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_25:
  unint64_t v17 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v7 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v8 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_29:
  uint64_t v21 = sub_11FCF34(*(void *)(a1 + 72));
  v7 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
LABEL_16:
  }
    v7 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v22 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v7 += v23;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_11FDE80(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0x3F) != 0)
  {
    if (v8)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 40), v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_22;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v13 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 48), v13, v15);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_22:
    uint64_t v16 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 56), v16, v18);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
LABEL_25:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v19 = *(void *)(a1 + 64);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      sub_11FEEDC((uint64_t)v21);
      *(void *)(a1 + 64) = v19;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v22 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v22 = &off_252DEF8;
    }
    sub_11FC74C(v19, (uint64_t)v22);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_12;
      }
LABEL_10:
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_33:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v23 = *(void **)(a1 + 72);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = sub_11FEF60((uint64_t)v25);
      *(void *)(a1 + 72) = v23;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v26 = &off_252DF58;
    }
    sub_11FD018((uint64_t)v23, (uint64_t)v26);
    if ((v8 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_11FE094(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 72);
  if ((*(unsigned char *)(v1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11FE0CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "livedata.LiveDataUpdateEntity");
}

uint64_t sub_11FE0DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11FD3B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_11FE16C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249BFB0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_11FE1F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249C030;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_11FE26C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_249C0B0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

uint64_t sub_11FE2E8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249C130;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_11FE370(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249C1B0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_11FE3F4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249C230;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_11FE46C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_11EE76C(v2, a1, 0);
}

uint64_t sub_11FE4CC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249C330;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_11FE568(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249C3B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

double sub_11FE60C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_249C430;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = 0;
  *(void *)(v2 + 136) = 0;
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 160) = 0;
  *(void *)(v2 + 168) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(void *)(v2 + 224) = 0;
  return result;
}

uint64_t sub_11FE6F0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249C4B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_11FE780(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249C530;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 40) = &qword_2550250;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_11FE810(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249C5B0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_11FE898(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249C630;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_11FE938(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249C6B0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

double sub_11FE9BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_249C730;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_DWORD *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_11FEA3C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249C7B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 72) = 1;
  return result;
}

uint64_t sub_11FEAEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249C830;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

void *sub_11FEB8C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249C8B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = a1;
  result[10] = 0;
  result[11] = 0;
  result[12] = &qword_2550250;
  result[13] = &qword_2550250;
  result[15] = 0;
  result[16] = 0;
  result[14] = &qword_2550250;
  return result;
}

void *sub_11FEC4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249C930;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = &qword_2550250;
  return result;
}

void *sub_11FECFC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249C9B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[10] = 0;
  result[11] = 0;
  result[9] = &qword_2550250;
  return result;
}

void *sub_11FEDB0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_249CA30;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_11FEE34(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249CAB0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[7] = 0;
  result[8] = 0;
  result[6] = &qword_2550250;
  return result;
}

double sub_11FEEDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_249CB30;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  return result;
}

void *sub_11FEF60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_249CBB0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_11FEFE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *double result = off_249CC30;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  result[8] = 0;
  result[9] = 0;
  result[10] = 0;
  return result;
}

char *sub_11FF090(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_15BF898(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_11FF120(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_252DFD8)
  {
    if (*(void *)(a1 + 24))
    {
      sub_15BB0B0();
      operator delete();
    }
    if (*(void *)(a1 + 32))
    {
      sub_15B10B4();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11FF1F0(uint64_t a1)
{
  sub_11FF120(a1);

  operator delete();
}

uint64_t sub_11FF228(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      double result = (uint64_t)sub_15BB0EC(*(unsigned char **)(result + 24));
    }
    if ((v2 & 2) != 0) {
      double result = sub_15B10F0(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_11FF298(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_15C1974((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = v20;
    }
    uint64_t v14 = sub_11FF4E8(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      sub_15C219C((uint64_t)v18);
      uint64_t v17 = v19;
      *(void *)(a1 + 24) = v19;
      int v7 = v20;
    }
    uint64_t v14 = sub_11FF458(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v20;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

char *sub_11FF458(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_15BB160(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_11FF4E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_15B1114(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11FF578(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15BB7A0(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    char v4 = sub_15B1284(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_11FF6F8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15BBC64(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_15B13A0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_11FF7D0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_15C219C((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253F580;
      }
      sub_15BBE88(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(std::string **)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_15C1974((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        BOOL v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        BOOL v12 = &off_253F1E8;
      }
      sub_117EF04(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_11FF8D4(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_11FF228(a1);
    sub_11FF7D0(a1, a2);
  }
}

uint64_t sub_11FF920(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15BC024(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1450(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_11FF96C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.AccessPoint");
}

uint64_t sub_11FF97C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249CD30;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122CC58(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_11FFAA8()
{
}

uint64_t sub_11FFB10(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252E000 && *(void *)(a1 + 48))
  {
    sub_15B10B4();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_122C7D8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_11FFBD4(uint64_t a1)
{
  sub_11FFB10(a1);

  operator delete();
}

uint64_t sub_11FFC0C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_11FF228(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_15B10F0(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 48) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_11FFCA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        uint64_t v17 = v8 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v30 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 40);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 32) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            unint64_t v22 = sub_120800C(*(void *)(a1 + 24));
            uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
            uint64_t v18 = (unsigned __int8 *)v30;
          }
          uint64_t v17 = sub_11FFF18(a3, v21, v18);
          uint64_t v30 = v17;
          if (!v17) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v26 = v8 + 1;
    LODWORD(v25) = *v8;
    if ((v25 & 0x80) == 0) {
      goto LABEL_42;
    }
    int v27 = *v26;
    uint64_t v25 = v25 + (v27 << 7) - 128;
    if ((v27 & 0x80000000) == 0)
    {
      uint64_t v26 = v8 + 2;
LABEL_42:
      uint64_t v30 = v26;
      *(_DWORD *)(a1 + 56) = v25;
      goto LABEL_43;
    }
    uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v25);
    uint64_t v30 = v28;
    *(_DWORD *)(a1 + 56) = v29;
    if (!v28) {
      goto LABEL_50;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void **)(a1 + 48);
    if (!v23)
    {
      uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v23 = sub_15C1974((uint64_t)v24);
      *(void *)(a1 + 48) = v23;
      unint64_t v8 = v30;
    }
    uint64_t v16 = sub_11FF4E8(a3, (uint64_t)v23, (unsigned __int8 *)v8);
LABEL_37:
    uint64_t v30 = v16;
    if (!v16) {
      goto LABEL_50;
    }
    goto LABEL_43;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

char *sub_11FFF18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_11FF298(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_11FFFA8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B1284(v10, (unint64_t)v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_11FF578(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_12001D0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11FF6F8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B13A0(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12002F0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122CC58((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v10 = *(std::string **)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        int v10 = (std::string *)sub_15C1974((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        int v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        int v13 = &off_253F1E8;
      }
      sub_117EF04(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1200430(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_11FF920(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1450(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1200494@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.NumericAddressPoint");
}

void *sub_12004A4(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *BOOL result = off_249CDB0;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

uint64_t sub_12004E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249CDB0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122CC58(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    int v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_1200644()
{
}

uint64_t sub_12006AC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E040 && *(void *)(a1 + 56))
  {
    sub_15B10B4();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122C7D8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1200784(uint64_t a1)
{
  sub_12006AC(a1);

  operator delete();
}

uint64_t sub_12007BC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_11FF228(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      BOOL result = sub_15B10F0(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1200884(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v22 = *(void **)(a1 + 56);
      if (!v22)
      {
        uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v23 = (void *)*v23;
        }
        uint64_t v22 = sub_15C1974((uint64_t)v23);
        *(void *)(a1 + 56) = v22;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_11FF4E8(a3, (uint64_t)v22, v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (uint64_t *)*v25;
      }
      uint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 48), v25);
      uint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
    }
LABEL_40:
    *(void *)int v27 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 26)
  {
    unsigned int v16 = (char *)(v7 - 1);
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)int v27 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_120800C(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(unsigned __int8 **)v27;
      }
      unsigned int v16 = sub_11FFF18(a3, v20, v17);
      *(void *)int v27 = v16;
      if (!v16) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_46:
  *(void *)int v27 = 0;
  return *(void *)v27;
}

unsigned char *sub_1200ADC(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    unsigned char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B1284(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_11FF578(v12, (unint64_t)v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1200CA8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_11FF6F8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_15B13A0(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1200DD8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122CC58((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(std::string **)(a1 + 56);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_15C1974((uint64_t)v15);
        *(void *)(a1 + 56) = v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_253F1E8;
      }
      sub_117EF04(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1200F34(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_11FF920(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  BOOL result = sub_15B1450(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1200F98@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.StringAddressPoint");
}

uint64_t sub_1200FA8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_249CE30;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void sub_1201024(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1201058(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12010CC(void *a1)
{
  sub_1201058(a1);

  operator delete();
}

uint64_t sub_1201104(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0x100000001;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1201130(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v35 + 2;
      }
    }
    unint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_33;
        }
        v5 |= 1u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          unint64_t v35 = v13;
          *(_DWORD *)(a1 + 24) = v12;
          goto LABEL_40;
        }
        int v27 = (char *)sub_188C138((uint64_t)v8, v12);
        unint64_t v35 = v27;
        *(_DWORD *)(a1 + 24) = v28;
        if (v27) {
          goto LABEL_40;
        }
        goto LABEL_62;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 2u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v29 = (char *)sub_188C138((uint64_t)v8, v15);
          unint64_t v35 = v29;
          *(_DWORD *)(a1 + 28) = v30;
          if (!v29) {
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          unint64_t v35 = v16;
          *(_DWORD *)(a1 + 28) = v15;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          unint64_t v35 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v35) {
            goto LABEL_62;
          }
          unint64_t v19 = v31;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          unint64_t v35 = v18;
        }
        if ((v19 - 1) <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 32) = v19;
          goto LABEL_40;
        }
        if (*v7) {
          uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v34 = 3;
        goto LABEL_56;
      case 4u:
        if (v9 != 32) {
          goto LABEL_33;
        }
        uint64_t v22 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v22;
        int v24 = v19 + (v23 << 7);
        unint64_t v19 = (v24 - 128);
        if (v23 < 0)
        {
          unint64_t v35 = (char *)sub_188C138((uint64_t)v8, (v24 - 128));
          if (!v35) {
            goto LABEL_62;
          }
          unint64_t v19 = v32;
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_30:
          unint64_t v35 = v22;
        }
        if ((v19 - 1) > 1)
        {
          if (*v7) {
            uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v34 = 4;
LABEL_56:
          sub_188C020(v34, v19, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 36) = v19;
        }
        goto LABEL_40;
      default:
LABEL_33:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v35;
          }
          unint64_t v35 = (char *)sub_1885AC0(v9, v26, v8, a3);
          if (!v35) {
            goto LABEL_62;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          unint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

unsigned char *sub_1201488(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1201724(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_25;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_21;
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
  if ((v1 & 8) != 0)
  {
LABEL_21:
    int v8 = *(_DWORD *)(a1 + 36);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
LABEL_25:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1201854()
{
  return 1;
}

void *sub_120185C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.Range");
}

void *sub_120186C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12018E0(void *a1)
{
  sub_120186C(a1);

  operator delete();
}

uint64_t sub_1201918(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_120193C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    BOOL v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v16 = v8 + 2;
LABEL_25:
      BOOL v25 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_30;
    }
    unint64_t v21 = (char *)sub_188C138((uint64_t)v8, v15);
    BOOL v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    LODWORD(v18) = *v8;
    if ((v18 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v20 = *v19;
    uint64_t v18 = v18 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      BOOL v25 = v19;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v18);
    BOOL v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    BOOL v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  BOOL v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1201B24(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1201CC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1201D88()
{
  return 1;
}

void *sub_1201D90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.LineAndPos");
}

void *sub_1201DA0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122C858(a1 + 8);
  sub_122C858(a1 + 5);
  sub_122C858(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1201E38(void *a1)
{
  sub_1201DA0(a1);

  operator delete();
}

uint64_t sub_1201E70(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1201918(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1201918(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1201918(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  unint64_t v11 = (uint64_t *)(v1 + 8);
  if (v12)
  {
    return sub_188B4AC(v11);
  }
  return result;
}

char *sub_1201F3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  if ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v33 + 1;
      unsigned int v8 = *v33;
      if (*v33 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v33 + 2;
        }
      }
      uint64_t v33 = v7;
      unsigned int v11 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          unint64_t v15 = v7 - 1;
          while (1)
          {
            unint64_t v16 = (unsigned __int8 *)(v15 + 1);
            uint64_t v33 = v15 + 1;
            uint64_t v17 = *(_DWORD **)(a1 + 80);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 72), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 72) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              int v20 = sub_1208250(*(void *)(a1 + 64));
              uint64_t v19 = sub_188CDC8(a1 + 64, (uint64_t)v20);
              unint64_t v16 = (unsigned __int8 *)v33;
            }
            unint64_t v15 = sub_1202224(a3, v19, v16);
            uint64_t v33 = v15;
            if (!v15) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 2)
      {
        if (v8 == 18)
        {
          unint64_t v21 = v7 - 1;
          while (1)
          {
            int v22 = (unsigned __int8 *)(v21 + 1);
            uint64_t v33 = v21 + 1;
            uint64_t v23 = *(_DWORD **)(a1 + 56);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 48), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 48) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              uint64_t v26 = sub_1208250(*(void *)(a1 + 40));
              uint64_t v25 = sub_188CDC8(a1 + 40, (uint64_t)v26);
              int v22 = (unsigned __int8 *)v33;
            }
            unint64_t v21 = sub_1202224(a3, v25, v22);
            uint64_t v33 = v21;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 1 && v8 == 10)
      {
        int v27 = v7 - 1;
        while (1)
        {
          int v28 = (unsigned __int8 *)(v27 + 1);
          uint64_t v33 = v27 + 1;
          int v29 = *(_DWORD **)(a1 + 32);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 24), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 24) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            unint64_t v32 = sub_1208250(*(void *)(a1 + 16));
            uint64_t v31 = sub_188CDC8(a1 + 16, (uint64_t)v32);
            int v28 = (unsigned __int8 *)v33;
          }
          int v27 = sub_1202224(a3, v31, v28);
          uint64_t v33 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 10) {
            goto LABEL_50;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v33;
      }
      uint64_t v33 = (char *)sub_1885AC0(v8, v14, v7, a3);
      if (!v33) {
        return 0;
      }
LABEL_50:
      if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
        return v33;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v33;
    }
    return 0;
  }
  return v33;
}

char *sub_1202224(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120193C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12022B4(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1201B24(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        unint64_t v15 = __dst + 2;
      }
      __dst = sub_1201B24(v13, (unint64_t)v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        int v20 = __dst + 2;
      }
      __dst = sub_1201B24(v18, (unint64_t)v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_1202500(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1201CC8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1201CC8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1201CC8(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v16 += v25;
  }
  *(_DWORD *)(a1 + 88) = v16;
  return v16;
}

std::string *sub_1202650(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_122CCE4((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_122CCE4((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = sub_122CCE4((std::string *)((char *)v3 + 64), v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12027E8()
{
  return 1;
}

void *sub_12027F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.ComponentServicePositionInfo");
}

uint64_t sub_1202800(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E0E0)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1201DA0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12028CC(uint64_t a1)
{
  sub_1202800(a1);

  operator delete();
}

uint64_t sub_1202904(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1201E70(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    *(unsigned char *)(v1 + 44) = 0;
    *(_DWORD *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_12029A8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_12082C8((uint64_t)v13);
          *(void *)(a1 + 32) = v12;
          uint64_t v8 = *(unsigned __int8 **)v31;
        }
        int v14 = sub_1202CB4(a3, v12, v8);
        goto LABEL_38;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        uint64_t v15 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v31) {
            goto LABEL_52;
          }
          unint64_t v16 = v27;
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_19:
          *(void *)uint64_t v31 = v15;
        }
        if (v16 > 0x11)
        {
          if (*v7) {
            uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v16;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        v5 |= 8u;
        uint64_t v19 = (char *)(v8 + 1);
        uint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v20);
          *(void *)uint64_t v31 = v28;
          *(unsigned char *)(a1 + 44) = v29 != 0;
          if (!v28) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_26:
          *(void *)uint64_t v31 = v19;
          *(unsigned char *)(a1 + 44) = v20 != 0;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        unint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unint64_t v23 = (uint64_t *)*v23;
        }
        unint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 24), v23);
        int v14 = (void *)sub_188C244(v24, *(char **)v31, (uint64_t)a3);
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v31;
          }
          int v14 = sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_38:
          *(void *)uint64_t v31 = v14;
          if (!v14) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

char *sub_1202CB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1201F3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1202D44(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 88);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_12022B4(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 40);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 44);
    char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1202F34(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
  }
  uint64_t v8 = sub_1202500(*(void *)(a1 + 32));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v10;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_120305C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_12082C8((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      uint64_t v13 = &off_252E080;
    }
    uint64_t result = sub_1202650(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[1].__r_.__value_.__s.__data_[20] = *(unsigned char *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_23:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_120317C()
{
  return 1;
}

void *sub_1203184@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.AddressEntityComponent");
}

uint64_t sub_1203194(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_249D030;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(unsigned char *)(result + 64) = 0;
  return result;
}

uint64_t sub_12031D8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E110)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_1201DA0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12032AC(uint64_t a1)
{
  sub_12031D8(a1);

  operator delete();
}

uint64_t sub_12032E4(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1201E70(*(void *)(result + 48));
  }
LABEL_7:
  if ((v2 & 0x1C) != 0)
  {
    *(unsigned char *)(v1 + 64) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_120338C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)long long v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v9 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)long long v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8)
        {
          if (v9 != 10) {
            goto LABEL_58;
          }
          unint64_t v23 = sub_188C2BC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          goto LABEL_65;
        }
        unint64_t v12 = v8 - 1;
        while (1)
        {
          *(void *)long long v42 = v12 + 1;
          int v13 = v12[1];
          if ((char)v12[1] < 0)
          {
            int v14 = v13 + (v12[2] << 7);
            int v13 = v14 - 128;
            if ((char)v12[2] < 0)
            {
              unint64_t v12 = (unsigned __int8 *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
              int v13 = v15;
            }
            else
            {
              v12 += 3;
            }
          }
          else
          {
            v12 += 2;
          }
          *(void *)long long v42 = v12;
          uint64_t v16 = *(unsigned int *)(a1 + 24);
          if (v16 == *(_DWORD *)(a1 + 28))
          {
            int v17 = v16 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v16 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v16) = v13;
            unint64_t v12 = *(unsigned __int8 **)v42;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v16) = v13;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 24) = v17;
          if (!v12) {
            goto LABEL_75;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
            goto LABEL_66;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_58;
        }
        v5 |= 4u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_27;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v18);
          *(void *)long long v42 = v34;
          *(_DWORD *)(a1 + 56) = v35;
          if (!v34) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_27:
          *(void *)long long v42 = v19;
          *(_DWORD *)(a1 + 56) = v18;
        }
        goto LABEL_66;
      case 3u:
        if (v9 != 26) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 48);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_12082C8((uint64_t)v22);
          *(void *)(a1 + 48) = v21;
          uint64_t v8 = *(unsigned __int8 **)v42;
        }
        unint64_t v23 = sub_1202CB4(a3, v21, v8);
        goto LABEL_65;
      case 4u:
        if (v9 != 32) {
          goto LABEL_58;
        }
        unint64_t v24 = (char *)(v8 + 1);
        unint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)long long v42 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v42) {
            goto LABEL_75;
          }
          unint64_t v25 = v36;
        }
        else
        {
          unint64_t v24 = (char *)(v8 + 2);
LABEL_38:
          *(void *)long long v42 = v24;
        }
        if (v25 > 0x11)
        {
          if (*v7) {
            uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v25, v41);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 60) = v25;
        }
        goto LABEL_66;
      case 5u:
        if (v9 != 40) {
          goto LABEL_58;
        }
        v5 |= 0x10u;
        uint64_t v28 = (char *)(v8 + 1);
        uint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v29);
          *(void *)long long v42 = v37;
          *(unsigned char *)(a1 + 64) = v38 != 0;
          if (!v37) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_45:
          *(void *)long long v42 = v28;
          *(unsigned char *)(a1 + 64) = v29 != 0;
        }
        goto LABEL_66;
      case 6u:
        if (v9 != 50) {
          goto LABEL_58;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v31 = *(void *)(a1 + 8);
        unint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          unint64_t v32 = (uint64_t *)*v32;
        }
        uint64_t v33 = (std::string *)sub_1880F84((void *)(a1 + 40), v32);
        unint64_t v23 = (void *)sub_188C244(v33, *(char **)v42, (uint64_t)a3);
        goto LABEL_65;
      default:
LABEL_58:
        if (v9) {
          BOOL v39 = (v9 & 7) == 4;
        }
        else {
          BOOL v39 = 1;
        }
        if (!v39)
        {
          if (*v7)
          {
            v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v42;
          }
          unint64_t v23 = sub_1885AC0(v9, v40, (char *)v8, a3);
LABEL_65:
          *(void *)long long v42 = v23;
          if (!v23) {
            goto LABEL_75;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_75:
        }
          *(void *)long long v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v42;
    }
  }
}

char *sub_12037E4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 56);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v15 = *(void *)(a1 + 48);
    *__dst = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 88);
    __dst[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, __dst + 1);
    }
    else {
      int v17 = __dst + 2;
    }
    __dst = sub_12022B4(v15, v17, a3);
  }
  if ((v11 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v18 = *(int *)(a1 + 60);
    *__dst = 32;
    __dst[1] = v18;
    if (v18 > 0x7F)
    {
      __dst[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      __dst[2] = v18 >> 7;
      __dst += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *__dst++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v21 = *(unsigned char *)(a1 + 64);
    *__dst = 40;
    __dst[1] = v21;
    __dst += 2;
  }
  if (v11) {
    __dst = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return __dst;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    unint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    unint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(__dst, v25, (int)v26);
    __dst += v27;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, __dst);
}

uint64_t sub_1203AEC(uint64_t a1)
{
  uint64_t v2 = sub_188D498((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_21;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v7 = sub_1202500(*(void *)(a1 + 48));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_15;
  }
LABEL_11:
  int v8 = *(_DWORD *)(a1 + 56);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v9;
  if ((v3 & 8) != 0)
  {
LABEL_15:
    int v10 = *(_DWORD *)(a1 + 60);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v11;
  }
LABEL_19:
  if ((v3 & 0x10) != 0) {
    v2 += 2;
  }
LABEL_21:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1203C5C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0x1F) != 0)
  {
    if (v8)
    {
      int v10 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v10, v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_26;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      data = (std::string *)sub_12082C8((uint64_t)v15);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v16 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      unsigned int v16 = &off_252E080;
    }
    uint64_t result = sub_1202650(data, (uint64_t)v16);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
        goto LABEL_11;
      }
LABEL_9:
      v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
      goto LABEL_10;
    }
LABEL_27:
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
    if ((v8 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1203DD0(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_12032E4((uint64_t)result);
    return sub_1203C5C(v4, a2);
  }
  return result;
}

uint64_t sub_1203E1C()
{
  return 1;
}

__n128 sub_1203E24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  __n128 result = *(__n128 *)(a2 + 48);
  *(__n128 *)(a1 + 48) = result;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  LOBYTE(v6) = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a2 + 64) = v6;
  return result;
}

void *sub_1203E88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.AddressComponentInfo");
}

uint64_t sub_1203E98(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1203F50(uint64_t a1)
{
  sub_1203E98(a1);

  operator delete();
}

uint64_t sub_1203F88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1204004(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unsigned int v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unsigned int v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 24);
LABEL_27:
      unint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      std::string::size_type v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    std::string::size_type v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_12041AC(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1204298(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1204374()
{
  return 1;
}

void *sub_120437C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.DoorNumber");
}

uint64_t sub_120438C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252E180)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_1203E98(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_122C958((void *)(a1 + 48));
  sub_122C8D8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120445C(uint64_t a1)
{
  sub_120438C(a1);

  operator delete();
}

uint64_t sub_1204494(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12032E4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1202904(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1203F88(*(void *)(v1 + 72));
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_120454C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    int v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 != 2)
    {
      if (v11 == 1 && v8 == 10)
      {
        unint64_t v24 = v7 - 1;
        while (1)
        {
          unint64_t v25 = (unsigned __int8 *)(v24 + 1);
          int v30 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 40);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 32), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 32) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_1208400(*(void *)(a1 + 24));
            uint64_t v28 = sub_188CDC8(a1 + 24, v29);
            unint64_t v25 = (unsigned __int8 *)v30;
          }
          unint64_t v24 = (char *)sub_12047EC(a3, v28, v25);
          int v30 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 10) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_14;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void **)(a1 + 72);
    if (!v22)
    {
      unint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v23 = (void *)*v23;
      }
      uint64_t v22 = sub_12084AC((uint64_t)v23);
      *(void *)(a1 + 72) = v22;
      uint64_t v7 = v30;
    }
    uint64_t v15 = (char *)sub_120487C(a3, (uint64_t)v22, (unsigned __int8 *)v7);
LABEL_37:
    int v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 == 26)
  {
    unsigned int v16 = v7 - 1;
    while (1)
    {
      int v17 = (unsigned __int8 *)(v16 + 1);
      int v30 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        char v21 = sub_1208378(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, (uint64_t)v21);
        int v17 = (unsigned __int8 *)v30;
      }
      unsigned int v16 = (char *)sub_120490C(a3, v20, v17);
      int v30 = v16;
      if (!v16) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_38;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      std::string::size_type v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

uint64_t sub_12047EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120338C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_120487C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1204004(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_120490C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12029A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_120499C(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_12037E4(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 72);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      BOOL v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      BOOL v13 = __dst + 2;
    }
    __dst = sub_12041AC(v11, v13, a3);
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      __dst[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, __dst + 1);
      }
      else {
        uint64_t v18 = __dst + 2;
      }
      __dst = sub_1202D44(v16, (unint64_t)v18, a3);
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return __dst;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(__dst, v22, (int)v23);
    __dst += v24;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, __dst);
}

uint64_t sub_1204BCC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1203AEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1202F34(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v15 = sub_1204298(*(void *)(a1 + 72));
    v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1204D00(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_122CD60((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = sub_122CDEC(v3 + 2, v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2] - LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = *(uint64_t (****)(uint64_t))(a2 + 72);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)v3[3].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v17 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v17 = (void *)*v17;
      }
      data = (std::string *)sub_12084AC((uint64_t)v17);
      v3[3].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v14 = *(uint64_t (****)(uint64_t))(a2 + 72);
    }
    if (v14) {
      unint64_t v18 = v14;
    }
    else {
      unint64_t v18 = &off_252E158;
    }
    uint64_t result = sub_11EC100(data, (uint64_t)v18);
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1204E88()
{
  return 1;
}

void *sub_1204E90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.Address");
}

uint64_t sub_1204EA0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E1D0)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_120438C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122C9D8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1204F78(uint64_t a1)
{
  sub_1204EA0(a1);

  operator delete();
}

uint64_t sub_1204FB0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_128E0D4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_1204494(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1205078(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (uint64_t *)*v23;
      }
      uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 48), v23);
      uint64_t v15 = (void *)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      unint64_t v25 = *(void **)(a1 + 56);
      if (!v25)
      {
        uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v26 = (void *)*v26;
        }
        unint64_t v25 = sub_1208530((uint64_t)v26);
        *(void *)(a1 + 56) = v25;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_12052D0(a3, (uint64_t)v25, v7);
    }
LABEL_40:
    *(void *)uint64_t v27 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = v7 - 1;
    while (1)
    {
      unsigned int v17 = v16 + 1;
      *(void *)uint64_t v27 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        unint64_t v21 = sub_128E984(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        unsigned int v17 = *(unsigned __int8 **)v27;
      }
      uint64_t v16 = (unsigned __int8 *)sub_11DEED8(a3, v20, v17);
      *(void *)uint64_t v27 = v16;
      if (!v16) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_46:
  *(void *)uint64_t v27 = 0;
  return *(void *)v27;
}

char *sub_12052D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120454C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1205360(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_120499C(v7, v9, a3);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_128E488(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_120552C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_128E5E8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_1204BCC(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_120565C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122CE78(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v13 = (std::string *)v3[2].__r_.__value_.__l.__size_;
      if (!v13)
      {
        std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = (std::string *)sub_1208530((uint64_t)v15);
        v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_252E180;
      }
      uint64_t result = sub_1204D00(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12057B8()
{
  return 1;
}

void *sub_12057C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.LocalizedAddress");
}

double sub_12057D0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_249D230;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &qword_2550250;
  *(void *)(a1 + 128) = &qword_2550250;
  *(void *)(a1 + 136) = &qword_2550250;
  *(void *)(a1 + 144) = &qword_2550250;
  *(void *)(a1 + 152) = &qword_2550250;
  *(_DWORD *)(a1 + 208) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  return result;
}

uint64_t sub_120583C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249D230;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122CF04(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_122CF90((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    unint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      *unint64_t v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    unint64_t v18 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_122D01C((uint64_t *)(a1 + 72), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    uint64_t v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      *uint64_t v20 = v19;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v21 = *(_DWORD *)(a2 + 104);
  if (v21)
  {
    uint64_t v22 = *(void *)(a2 + 112);
    uint64_t v23 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122D0A8((std::string *)(a1 + 96), v23, (uint64_t *)(v22 + 8), v21, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v24 = *(_DWORD *)(a1 + 104) + v21;
    *(_DWORD *)(a1 + 104) = v24;
    unint64_t v25 = *(int **)(a1 + 112);
    if (*v25 < v24) {
      int *v25 = v24;
    }
  }
  uint64_t v26 = *(void *)(a2 + 8);
  if (v26) {
    sub_188B4F8(v4, (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 120) = &qword_2550250;
  int v27 = *(_DWORD *)(a2 + 16);
  if (v27)
  {
    uint64_t v28 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v28 = (uint64_t *)*v28;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v28);
    int v27 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v27 & 2) != 0)
  {
    uint64_t v29 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v29);
    int v27 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 136) = &qword_2550250;
  if ((v27 & 4) != 0)
  {
    int v30 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v30 = (uint64_t *)*v30;
    }
    sub_1881DF4((std::string **)(a1 + 136), (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL), v30);
    int v27 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 144) = &qword_2550250;
  if ((v27 & 8) != 0)
  {
    uint64_t v31 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v31 = (uint64_t *)*v31;
    }
    sub_1881DF4((std::string **)(a1 + 144), (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL), v31);
    int v27 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 152) = &qword_2550250;
  if ((v27 & 0x10) != 0)
  {
    unint64_t v32 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v32 = (uint64_t *)*v32;
    }
    sub_1881DF4((std::string **)(a1 + 152), (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL), v32);
    int v27 = *(_DWORD *)(a2 + 16);
  }
  if ((v27 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  if ((v27 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 168) = 0;
  long long v33 = *(_OWORD *)(a2 + 176);
  long long v34 = *(_OWORD *)(a2 + 192);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v33;
  *(_OWORD *)(a1 + 192) = v34;
  return a1;
}

void sub_1205BE8()
{
}

void *sub_1205CA8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1205D5C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_122CBD8(a1 + 12);
  sub_122CB58(a1 + 9);
  sub_122CAD8(a1 + 6);
  sub_122CA58(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1205D5C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t v2 = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 144));
  }
  double result = (void ***)(a1 + 152);
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252E210)
  {
    if (*(void *)(a1 + 160))
    {
      sub_15B10B4();
      operator delete();
    }
    double result = *(void ****)(a1 + 168);
    if (result)
    {
      sub_15B2274();
      operator delete();
    }
  }
  return result;
}

void sub_1205E50(void *a1)
{
  sub_1205CA8(a1);

  operator delete();
}

uint64_t sub_1205E88(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_11FFC0C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      double result = sub_12007BC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      double result = sub_1201104(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  uint64_t v11 = *(unsigned int *)(v1 + 104);
  if ((int)v11 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v1 + 112) + 8);
    do
    {
      uint64_t v13 = *v12++;
      double result = sub_1204FB0(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(v1 + 104) = 0;
  }
  int v14 = *(_DWORD *)(v1 + 16);
  if ((v14 & 0x7F) == 0) {
    goto LABEL_26;
  }
  if ((v14 & 1) == 0)
  {
    if ((v14 & 2) == 0) {
      goto LABEL_20;
    }
LABEL_36:
    unint64_t v18 = *(void *)(v1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v18 + 23) < 0)
    {
      **(unsigned char **)unint64_t v18 = 0;
      *(void *)(v18 + 8) = 0;
      if ((v14 & 4) != 0) {
        goto LABEL_40;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v18 = 0;
      *(unsigned char *)(v18 + 23) = 0;
      if ((v14 & 4) != 0) {
        goto LABEL_40;
      }
    }
LABEL_21:
    if ((v14 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_44:
    unint64_t v20 = *(void *)(v1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v20 + 23) < 0)
    {
      **(unsigned char **)unint64_t v20 = 0;
      *(void *)(v20 + 8) = 0;
      if ((v14 & 0x10) != 0) {
        goto LABEL_48;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v20 = 0;
      *(unsigned char *)(v20 + 23) = 0;
      if ((v14 & 0x10) != 0) {
        goto LABEL_48;
      }
    }
LABEL_23:
    if ((v14 & 0x20) == 0) {
      goto LABEL_24;
    }
    goto LABEL_52;
  }
  unint64_t v17 = *(void *)(v1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v17 + 23) < 0)
  {
    **(unsigned char **)unint64_t v17 = 0;
    *(void *)(v17 + 8) = 0;
    if ((v14 & 2) != 0) {
      goto LABEL_36;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v14 & 2) != 0) {
      goto LABEL_36;
    }
  }
LABEL_20:
  if ((v14 & 4) == 0) {
    goto LABEL_21;
  }
LABEL_40:
  unint64_t v19 = *(void *)(v1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    **(unsigned char **)unint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    if ((v14 & 8) != 0) {
      goto LABEL_44;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v19 = 0;
    *(unsigned char *)(v19 + 23) = 0;
    if ((v14 & 8) != 0) {
      goto LABEL_44;
    }
  }
LABEL_22:
  if ((v14 & 0x10) == 0) {
    goto LABEL_23;
  }
LABEL_48:
  unint64_t v21 = *(void *)(v1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    **(unsigned char **)unint64_t v21 = 0;
    *(void *)(v21 + 8) = 0;
    if ((v14 & 0x20) != 0) {
      goto LABEL_52;
    }
LABEL_24:
    if ((v14 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  *(unsigned char *)unint64_t v21 = 0;
  *(unsigned char *)(v21 + 23) = 0;
  if ((v14 & 0x20) == 0) {
    goto LABEL_24;
  }
LABEL_52:
  double result = sub_15B10F0(*(void *)(v1 + 160));
  if ((v14 & 0x40) != 0) {
LABEL_25:
  }
    double result = sub_15B22B0(*(void *)(v1 + 168));
LABEL_26:
  *(void *)(v1 + 176) = 0;
  if ((v14 & 0x7F00) != 0)
  {
    *(void *)(v1 + 184) = 0;
    *(void *)(v1 + 192) = 0;
    *(_DWORD *)(v1 + 208) = 0;
    *(void *)(v1 + 200) = 0;
  }
  char v16 = *(unsigned char *)(v1 + 8);
  uint64_t v15 = v1 + 8;
  *(_DWORD *)(v15 + 8) = 0;
  if (v16)
  {
    return sub_188B4AC((uint64_t *)v15);
  }
  return result;
}

uint64_t sub_12060C8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v92 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v92, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v92 + 1);
    unsigned int v9 = **(unsigned char **)v92;
    if ((char)**(unsigned char **)v92 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v92, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v92 + 2);
      }
    }
    *(void *)v92 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_127;
        }
        v5 |= 0x80u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)v92 = v12;
          *(void *)(a1 + 176) = v13;
          goto LABEL_115;
        }
        uint64_t v76 = sub_188C138((uint64_t)v8, v13);
        *(void *)v92 = v76;
        *(void *)(a1 + 176) = v77;
        if (v76) {
          goto LABEL_115;
        }
        goto LABEL_157;
      case 2u:
        if (v9 != 16) {
          goto LABEL_127;
        }
        uint64_t v15 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)v92 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v92) {
            goto LABEL_157;
          }
          unint64_t v16 = v78;
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)v92 = v15;
        }
        if (v16 > 0x11)
        {
          if (*v7) {
            v91 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v91 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v91);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 184) = v16;
        }
        goto LABEL_115;
      case 3u:
        if (v9 != 26) {
          goto LABEL_127;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        unint64_t v19 = *(void **)(a1 + 160);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v20 = (void *)*v20;
          }
          unint64_t v19 = sub_15C1974((uint64_t)v20);
          *(void *)(a1 + 160) = v19;
          uint64_t v8 = *(unsigned __int8 **)v92;
        }
        unint64_t v21 = sub_11FF4E8(a3, (uint64_t)v19, v8);
        goto LABEL_114;
      case 4u:
        if (v9 != 32) {
          goto LABEL_127;
        }
        v5 |= 0x200u;
        uint64_t v23 = (char *)(v8 + 1);
        LODWORD(v22) = *v8;
        if ((v22 & 0x80) == 0) {
          goto LABEL_31;
        }
        int v24 = *v23;
        uint64_t v22 = v22 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v79 = sub_188C138((uint64_t)v8, v22);
          *(void *)v92 = v79;
          *(_DWORD *)(a1 + 188) = v80;
          if (!v79) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v23 = (char *)(v8 + 2);
LABEL_31:
          *(void *)v92 = v23;
          *(_DWORD *)(a1 + 188) = v22;
        }
        goto LABEL_115;
      case 5u:
        if (v9 != 40) {
          goto LABEL_127;
        }
        v5 |= 0x400u;
        uint64_t v26 = (char *)(v8 + 1);
        LODWORD(v25) = *v8;
        if ((v25 & 0x80) == 0) {
          goto LABEL_36;
        }
        int v27 = *v26;
        uint64_t v25 = v25 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v81 = sub_188C138((uint64_t)v8, v25);
          *(void *)v92 = v81;
          *(_DWORD *)(a1 + 192) = v82;
          if (!v81) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v8 + 2);
LABEL_36:
          *(void *)v92 = v26;
          *(_DWORD *)(a1 + 192) = v25;
        }
        goto LABEL_115;
      case 6u:
        if (v9 != 48) {
          goto LABEL_127;
        }
        v5 |= 0x800u;
        uint64_t v29 = (char *)(v8 + 1);
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_41;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v83 = sub_188C138((uint64_t)v8, v28);
          *(void *)v92 = v83;
          *(_DWORD *)(a1 + 196) = v84;
          if (!v83) {
            goto LABEL_157;
          }
        }
        else
        {
          uint64_t v29 = (char *)(v8 + 2);
LABEL_41:
          *(void *)v92 = v29;
          *(_DWORD *)(a1 + 196) = v28;
        }
        goto LABEL_115;
      case 7u:
        if (v9 != 58) {
          goto LABEL_127;
        }
        uint64_t v31 = (char *)(v8 - 1);
        while (1)
        {
          unint64_t v32 = (unsigned __int8 *)(v31 + 1);
          *(void *)v92 = v31 + 1;
          long long v33 = *(_DWORD **)(a1 + 40);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 32), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 32) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_1208088(*(void *)(a1 + 24));
            uint64_t v35 = sub_188CDC8(a1 + 24, v36);
            unint64_t v32 = *(unsigned __int8 **)v92;
          }
          uint64_t v31 = sub_12069AC(a3, v35, v32);
          *(void *)v92 = v31;
          if (!v31) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 58) {
            goto LABEL_115;
          }
        }
      case 8u:
        if (v9 != 66) {
          goto LABEL_127;
        }
        uint64_t v37 = v8 - 1;
        while (1)
        {
          uint64_t v38 = v37 + 1;
          *(void *)v92 = v37 + 1;
          BOOL v39 = *(_DWORD **)(a1 + 64);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 56), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 56) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            long long v42 = sub_120812C(*(void *)(a1 + 48));
            uint64_t v41 = sub_188CDC8(a1 + 48, (uint64_t)v42);
            uint64_t v38 = *(unsigned __int8 **)v92;
          }
          uint64_t v37 = (unsigned __int8 *)sub_1206A3C(a3, v41, v38);
          *(void *)v92 = v37;
          if (!v37) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 66) {
            goto LABEL_115;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_127;
        }
        uint64_t v43 = (char *)(v8 - 1);
        while (1)
        {
          int v44 = (unsigned __int8 *)(v43 + 1);
          *(void *)v92 = v43 + 1;
          v45 = *(_DWORD **)(a1 + 88);
          if (v45 && (uint64_t v46 = *(int *)(a1 + 80), (int)v46 < *v45))
          {
            *(_DWORD *)(a1 + 80) = v46 + 1;
            uint64_t v47 = *(void *)&v45[2 * v46 + 2];
          }
          else
          {
            sub_12081D0(*(void *)(a1 + 72));
            uint64_t v47 = sub_188CDC8(a1 + 72, v48);
            int v44 = *(unsigned __int8 **)v92;
          }
          uint64_t v43 = sub_1206ACC(a3, v47, v44);
          *(void *)v92 = v43;
          if (!v43) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v43 || *v43 != 74) {
            goto LABEL_115;
          }
        }
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_127;
        }
        v49 = v8 - 1;
        while (1)
        {
          v50 = v49 + 1;
          *(void *)v92 = v49 + 1;
          v51 = *(_DWORD **)(a1 + 112);
          if (v51 && (uint64_t v52 = *(int *)(a1 + 104), (int)v52 < *v51))
          {
            *(_DWORD *)(a1 + 104) = v52 + 1;
            uint64_t v53 = *(void *)&v51[2 * v52 + 2];
          }
          else
          {
            v54 = sub_12085D4(*(void *)(a1 + 96));
            uint64_t v53 = sub_188CDC8(a1 + 96, (uint64_t)v54);
            v50 = *(unsigned __int8 **)v92;
          }
          v49 = (unsigned __int8 *)sub_1206B5C(a3, v53, v50);
          *(void *)v92 = v49;
          if (!v49) {
            goto LABEL_157;
          }
          if (*(void *)a3 <= (unint64_t)v49 || *v49 != 82) {
            goto LABEL_115;
          }
        }
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_127;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v55 = *(void *)(a1 + 168);
        if (!v55)
        {
          v56 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v56 = (void *)*v56;
          }
          uint64_t v55 = sub_15C1A94((uint64_t)v56);
          *(void *)(a1 + 168) = v55;
          uint64_t v8 = *(unsigned __int8 **)v92;
        }
        unint64_t v21 = sub_1206BEC(a3, v55, v8);
        goto LABEL_114;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_127;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v57 = *(void *)(a1 + 8);
        v58 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
        if (v57) {
          v58 = (uint64_t *)*v58;
        }
        v59 = (void *)(a1 + 120);
        goto LABEL_113;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_127;
        }
        v5 |= 0x1000u;
        v61 = (char *)(v8 + 1);
        LODWORD(v60) = *v8;
        if ((v60 & 0x80) == 0) {
          goto LABEL_96;
        }
        int v62 = *v61;
        uint64_t v60 = v60 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          uint64_t v85 = sub_188C138((uint64_t)v8, v60);
          *(void *)v92 = v85;
          *(_DWORD *)(a1 + 200) = v86;
          if (!v85) {
            goto LABEL_157;
          }
        }
        else
        {
          v61 = (char *)(v8 + 2);
LABEL_96:
          *(void *)v92 = v61;
          *(_DWORD *)(a1 + 200) = v60;
        }
        goto LABEL_115;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_127;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v63 = *(void *)(a1 + 8);
        v58 = (uint64_t *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
        if (v63) {
          v58 = (uint64_t *)*v58;
        }
        v59 = (void *)(a1 + 128);
        goto LABEL_113;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_127;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v64 = *(void *)(a1 + 8);
        v58 = (uint64_t *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
        if (v64) {
          v58 = (uint64_t *)*v58;
        }
        v59 = (void *)(a1 + 136);
        goto LABEL_113;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_127;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v65 = *(void *)(a1 + 8);
        v58 = (uint64_t *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
        if (v65) {
          v58 = (uint64_t *)*v58;
        }
        v59 = (void *)(a1 + 144);
        goto LABEL_113;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_127;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v66 = *(void *)(a1 + 8);
        v58 = (uint64_t *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
        if (v66) {
          v58 = (uint64_t *)*v58;
        }
        v59 = (void *)(a1 + 152);
LABEL_113:
        v67 = (std::string *)sub_1880F84(v59, v58);
        unint64_t v21 = (void *)sub_188C244(v67, *(char **)v92, (uint64_t)a3);
        goto LABEL_114;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_127;
        }
        v5 |= 0x2000u;
        v68 = (char *)(v8 + 1);
        uint64_t v69 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_121;
        }
        int v70 = *v68;
        uint64_t v69 = v69 + (v70 << 7) - 128;
        if (v70 < 0)
        {
          uint64_t v87 = sub_188C138((uint64_t)v8, v69);
          *(void *)v92 = v87;
          *(unsigned char *)(a1 + 204) = v88 != 0;
          if (!v87) {
            goto LABEL_157;
          }
        }
        else
        {
          v68 = (char *)(v8 + 2);
LABEL_121:
          *(void *)v92 = v68;
          *(unsigned char *)(a1 + 204) = v69 != 0;
        }
        goto LABEL_115;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_127;
        }
        v5 |= 0x4000u;
        v72 = (char *)(v8 + 1);
        LODWORD(v71) = *v8;
        if ((v71 & 0x80) == 0) {
          goto LABEL_126;
        }
        int v73 = *v72;
        uint64_t v71 = v71 + (v73 << 7) - 128;
        if (v73 < 0)
        {
          uint64_t v89 = sub_188C138((uint64_t)v8, v71);
          *(void *)v92 = v89;
          *(_DWORD *)(a1 + 208) = v90;
          if (!v89) {
            goto LABEL_157;
          }
        }
        else
        {
          v72 = (char *)(v8 + 2);
LABEL_126:
          *(void *)v92 = v72;
          *(_DWORD *)(a1 + 208) = v71;
        }
        goto LABEL_115;
      default:
LABEL_127:
        if (v9) {
          BOOL v74 = (v9 & 7) == 4;
        }
        else {
          BOOL v74 = 1;
        }
        if (!v74)
        {
          if (*v7)
          {
            v75 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v75 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v92;
          }
          unint64_t v21 = sub_1885AC0(v9, v75, (char *)v8, a3);
LABEL_114:
          *(void *)v92 = v21;
          if (!v21) {
            goto LABEL_157;
          }
LABEL_115:
          if (sub_11947B8((uint64_t)a3, (char **)v92, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_157:
        }
          *(void *)v92 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v92;
    }
  }
}

char *sub_12069AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  double result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    double result = sub_11FFCA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1206A3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1200884(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1206ACC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1201130(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1206B5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1205078(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1206BEC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B2340(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1206C7C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 176);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 184);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 160);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_15B1284(v13, (unint64_t)v15, a3);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 188);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 192);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 196);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v25 = *(_DWORD *)(a1 + 32);
  if (v25)
  {
    for (int i = 0; i != v25; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 58;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        uint64_t v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        uint64_t v29 = v4 + 2;
      }
      uint64_t v4 = sub_11FFFA8(v27, (unint64_t)v29, a3);
    }
  }
  int v30 = *(_DWORD *)(a1 + 56);
  if (v30)
  {
    for (int j = 0; j != v30; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v32 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 66;
      unsigned int v33 = *(_DWORD *)(v32 + 20);
      v4[1] = v33;
      if (v33 > 0x7F) {
        uint64_t v34 = sub_188A9CC(v33, v4 + 1);
      }
      else {
        uint64_t v34 = v4 + 2;
      }
      uint64_t v4 = sub_1200ADC(v32, v34, a3);
    }
  }
  int v35 = *(_DWORD *)(a1 + 80);
  if (v35)
  {
    for (int k = 0; k != v35; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v37 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      unsigned char *v4 = 74;
      unsigned int v38 = *(_DWORD *)(v37 + 20);
      v4[1] = v38;
      if (v38 > 0x7F) {
        BOOL v39 = sub_188A9CC(v38, v4 + 1);
      }
      else {
        BOOL v39 = v4 + 2;
      }
      uint64_t v4 = sub_1201488(v37, (unint64_t)v39, a3);
    }
  }
  int v40 = *(_DWORD *)(a1 + 104);
  if (v40)
  {
    for (int m = 0; m != v40; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v42 = *(void *)(*(void *)(a1 + 112) + 8 * m + 8);
      unsigned char *v4 = 82;
      unsigned int v43 = *(_DWORD *)(v42 + 20);
      v4[1] = v43;
      if (v43 > 0x7F) {
        int v44 = sub_188A9CC(v43, v4 + 1);
      }
      else {
        int v44 = v4 + 2;
      }
      uint64_t v4 = sub_1205360(v42, (unint64_t)v44, a3);
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v45 = *(void *)(a1 + 168);
    unsigned char *v4 = 90;
    unsigned int v46 = *(_DWORD *)(v45 + 20);
    v4[1] = v46;
    if (v46 > 0x7F) {
      uint64_t v47 = sub_188A9CC(v46, v4 + 1);
    }
    else {
      uint64_t v47 = v4 + 2;
    }
    uint64_t v4 = sub_15B25B0(v45, (unint64_t)v47, a3);
    if ((v6 & 1) == 0)
    {
LABEL_77:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_92;
      }
      goto LABEL_86;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_77;
  }
  uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0) {
    goto LABEL_92;
  }
LABEL_86:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v48 = *(int *)(a1 + 200);
  unsigned char *v4 = 104;
  v4[1] = v48;
  if (v48 > 0x7F)
  {
    v4[1] = v48 | 0x80;
    unint64_t v49 = v48 >> 7;
    v4[2] = v48 >> 7;
    v4 += 3;
    if (v48 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v50 = v49 >> 14;
        v49 >>= 7;
        *v4++ = v49;
      }
      while (v50);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_92:
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_94:
      if ((v6 & 8) == 0) {
        goto LABEL_95;
      }
      goto LABEL_101;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_94;
  }
  uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_95:
    if ((v6 & 0x10) == 0) {
      goto LABEL_96;
    }
    goto LABEL_102;
  }
LABEL_101:
  uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_96:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t v4 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0)
  {
LABEL_97:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_106;
  }
LABEL_103:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v51 = *(unsigned char *)(a1 + 204);
  *(_WORD *)uint64_t v4 = 400;
  v4[2] = v51;
  v4 += 3;
  if ((v6 & 0x4000) != 0)
  {
LABEL_106:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v52 = *(int *)(a1 + 208);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unint64_t v53 = v52 >> 7;
      v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_112:
  uint64_t v55 = *(void *)(a1 + 8);
  if ((v55 & 1) == 0) {
    return v4;
  }
  unint64_t v57 = v55 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v57 + 31) < 0)
  {
    v58 = *(void **)(v57 + 8);
    uint64_t v59 = *(void *)(v57 + 16);
  }
  else
  {
    v58 = (void *)(v57 + 8);
    LODWORD(v59) = *(unsigned __int8 *)(v57 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v59)
  {
    uint64_t v60 = (int)v59;
    memcpy(v4, v58, (int)v59);
    v4 += v60;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v58, v59, v4);
}

uint64_t sub_1207478(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12001D0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1200CA8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1201724(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(int *)(a1 + 104);
  uint64_t v23 = v16 + v22;
  uint64_t v24 = *(void *)(a1 + 112);
  if (v24) {
    int v25 = (uint64_t *)(v24 + 8);
  }
  else {
    int v25 = 0;
  }
  if (v22)
  {
    uint64_t v26 = 8 * v22;
    do
    {
      uint64_t v27 = *v25++;
      uint64_t v28 = sub_120552C(v27);
      v23 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6);
      v26 -= 8;
    }
    while (v26);
  }
  int v29 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v29) {
    goto LABEL_37;
  }
  if (v29)
  {
    unint64_t v38 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
    uint64_t v40 = *(void *)(v38 + 8);
    if ((v39 & 0x80u) == 0) {
      uint64_t v40 = v39;
    }
    v23 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 2) == 0)
    {
LABEL_30:
      if ((v29 & 4) == 0) {
        goto LABEL_31;
      }
      goto LABEL_62;
    }
  }
  else if ((v29 & 2) == 0)
  {
    goto LABEL_30;
  }
  unint64_t v41 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
  uint64_t v43 = *(void *)(v41 + 8);
  if ((v42 & 0x80u) == 0) {
    uint64_t v43 = v42;
  }
  v23 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 4) == 0)
  {
LABEL_31:
    if ((v29 & 8) == 0) {
      goto LABEL_32;
    }
    goto LABEL_65;
  }
LABEL_62:
  unint64_t v44 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
  uint64_t v46 = *(void *)(v44 + 8);
  if ((v45 & 0x80u) == 0) {
    uint64_t v46 = v45;
  }
  v23 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 8) == 0)
  {
LABEL_32:
    if ((v29 & 0x10) == 0) {
      goto LABEL_33;
    }
    goto LABEL_68;
  }
LABEL_65:
  unint64_t v47 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
  uint64_t v49 = *(void *)(v47 + 8);
  if ((v48 & 0x80u) == 0) {
    uint64_t v49 = v48;
  }
  v23 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v29 & 0x10) == 0)
  {
LABEL_33:
    if ((v29 & 0x20) == 0) {
      goto LABEL_34;
    }
LABEL_71:
    uint64_t v53 = sub_15B13A0(*(void *)(a1 + 160));
    v23 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v29 & 0x40) == 0)
    {
LABEL_35:
      if ((v29 & 0x80) == 0) {
        goto LABEL_37;
      }
      goto LABEL_36;
    }
    goto LABEL_72;
  }
LABEL_68:
  unint64_t v50 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v51 = *(unsigned __int8 *)(v50 + 23);
  uint64_t v52 = *(void *)(v50 + 8);
  if ((v51 & 0x80u) == 0) {
    uint64_t v52 = v51;
  }
  v23 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v29 & 0x20) != 0) {
    goto LABEL_71;
  }
LABEL_34:
  if ((v29 & 0x40) == 0) {
    goto LABEL_35;
  }
LABEL_72:
  uint64_t v54 = sub_15B27E8(*(void *)(a1 + 168));
  v23 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v29 & 0x80) != 0) {
LABEL_36:
  }
    v23 += ((9 * (__clz(*(void *)(a1 + 176) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_37:
  if ((v29 & 0x7F00) == 0) {
    goto LABEL_54;
  }
  if ((v29 & 0x100) != 0)
  {
    int v55 = *(_DWORD *)(a1 + 184);
    uint64_t v56 = ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v55 >= 0) {
      uint64_t v57 = v56;
    }
    else {
      uint64_t v57 = 11;
    }
    v23 += v57;
    if ((v29 & 0x200) == 0)
    {
LABEL_40:
      if ((v29 & 0x400) == 0) {
        goto LABEL_41;
      }
      goto LABEL_82;
    }
  }
  else if ((v29 & 0x200) == 0)
  {
    goto LABEL_40;
  }
  int v58 = *(_DWORD *)(a1 + 188);
  uint64_t v59 = ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v58 >= 0) {
    uint64_t v60 = v59;
  }
  else {
    uint64_t v60 = 11;
  }
  v23 += v60;
  if ((v29 & 0x400) == 0)
  {
LABEL_41:
    if ((v29 & 0x800) == 0) {
      goto LABEL_42;
    }
LABEL_86:
    int v64 = *(_DWORD *)(a1 + 196);
    uint64_t v65 = ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v64 >= 0) {
      uint64_t v66 = v65;
    }
    else {
      uint64_t v66 = 11;
    }
    v23 += v66;
    if ((v29 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_82:
  int v61 = *(_DWORD *)(a1 + 192);
  uint64_t v62 = ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v61 >= 0) {
    uint64_t v63 = v62;
  }
  else {
    uint64_t v63 = 11;
  }
  v23 += v63;
  if ((v29 & 0x800) != 0) {
    goto LABEL_86;
  }
LABEL_42:
  if ((v29 & 0x1000) != 0)
  {
LABEL_43:
    int v30 = *(_DWORD *)(a1 + 200);
    uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v30 >= 0) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 11;
    }
    v23 += v32;
  }
LABEL_47:
  if ((v29 & 0x2000) != 0) {
    v23 += 3;
  }
  if ((v29 & 0x4000) != 0)
  {
    int v33 = *(_DWORD *)(a1 + 208);
    uint64_t v34 = ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v33 >= 0) {
      uint64_t v35 = v34;
    }
    else {
      uint64_t v35 = 12;
    }
    v23 += v35;
  }
LABEL_54:
  uint64_t v36 = *(void *)(a1 + 8);
  if (v36)
  {
    unint64_t v67 = v36 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v67 + 31) < 0) {
      uint64_t v68 = *(void *)(v67 + 16);
    }
    else {
      uint64_t v68 = *(unsigned __int8 *)(v67 + 31);
    }
    v23 += v68;
  }
  *(_DWORD *)(a1 + 20) = v23;
  return v23;
}

void sub_120797C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122CF04((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_122CF90((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_122D01C((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_122D0A8((std::string *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v24)
  {
    if (v24)
    {
      uint64_t v26 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (uint64_t *)*v28;
      }
      sub_1881DF4((std::string **)(a1 + 120), v26, v28);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_44;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    int v29 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (uint64_t *)*v31;
    }
    sub_1881DF4((std::string **)(a1 + 128), v29, v31);
    if ((v24 & 4) == 0)
    {
LABEL_17:
      if ((v24 & 8) == 0) {
        goto LABEL_18;
      }
      goto LABEL_47;
    }
LABEL_44:
    uint64_t v32 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v33 = *(void *)(a1 + 8);
    uint64_t v34 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      uint64_t v34 = (uint64_t *)*v34;
    }
    sub_1881DF4((std::string **)(a1 + 136), v32, v34);
    if ((v24 & 8) == 0)
    {
LABEL_18:
      if ((v24 & 0x10) == 0) {
        goto LABEL_19;
      }
      goto LABEL_50;
    }
LABEL_47:
    uint64_t v35 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (uint64_t *)*v37;
    }
    sub_1881DF4((std::string **)(a1 + 144), v35, v37);
    if ((v24 & 0x10) == 0)
    {
LABEL_19:
      if ((v24 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_53;
    }
LABEL_50:
    unint64_t v38 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      uint64_t v40 = (uint64_t *)*v40;
    }
    sub_1881DF4((std::string **)(a1 + 152), v38, v40);
    if ((v24 & 0x20) == 0)
    {
LABEL_20:
      if ((v24 & 0x40) == 0) {
        goto LABEL_21;
      }
      goto LABEL_61;
    }
LABEL_53:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    unint64_t v41 = *(std::string **)(a1 + 160);
    if (!v41)
    {
      uint64_t v42 = *(void *)(a1 + 8);
      uint64_t v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
      if (v42) {
        uint64_t v43 = (void *)*v43;
      }
      unint64_t v41 = (std::string *)sub_15C1974((uint64_t)v43);
      *(void *)(a1 + 160) = v41;
    }
    if (*(void *)(a2 + 160)) {
      unint64_t v44 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      unint64_t v44 = &off_253F1E8;
    }
    sub_117EF04(v41, (uint64_t)v44);
    if ((v24 & 0x40) == 0)
    {
LABEL_21:
      if ((v24 & 0x80) == 0)
      {
LABEL_23:
        *(_DWORD *)(a1 + 16) |= v24;
        goto LABEL_24;
      }
LABEL_22:
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      goto LABEL_23;
    }
LABEL_61:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v45 = *(std::string **)(a1 + 168);
    if (!v45)
    {
      uint64_t v46 = *(void *)(a1 + 8);
      unint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
      if (v46) {
        unint64_t v47 = (void *)*v47;
      }
      uint64_t v45 = (std::string *)sub_15C1A94((uint64_t)v47);
      *(void *)(a1 + 168) = v45;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v48 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v48 = &off_253F260;
    }
    sub_15B28D4(v45, (uint64_t)v48);
    if ((v24 & 0x80) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_24:
  if ((v24 & 0x7F00) == 0) {
    goto LABEL_34;
  }
  if ((v24 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 184) = *(_DWORD *)(a2 + 184);
    if ((v24 & 0x200) == 0)
    {
LABEL_27:
      if ((v24 & 0x400) == 0) {
        goto LABEL_28;
      }
      goto LABEL_72;
    }
  }
  else if ((v24 & 0x200) == 0)
  {
    goto LABEL_27;
  }
  *(_DWORD *)(a1 + 188) = *(_DWORD *)(a2 + 188);
  if ((v24 & 0x400) == 0)
  {
LABEL_28:
    if ((v24 & 0x800) == 0) {
      goto LABEL_29;
    }
    goto LABEL_73;
  }
LABEL_72:
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  if ((v24 & 0x800) == 0)
  {
LABEL_29:
    if ((v24 & 0x1000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_74;
  }
LABEL_73:
  *(_DWORD *)(a1 + 196) = *(_DWORD *)(a2 + 196);
  if ((v24 & 0x1000) == 0)
  {
LABEL_30:
    if ((v24 & 0x2000) == 0) {
      goto LABEL_31;
    }
LABEL_75:
    *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
    if ((v24 & 0x4000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_32;
  }
LABEL_74:
  *(_DWORD *)(a1 + 200) = *(_DWORD *)(a2 + 200);
  if ((v24 & 0x2000) != 0) {
    goto LABEL_75;
  }
LABEL_31:
  if ((v24 & 0x4000) != 0) {
LABEL_32:
  }
    *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v24;
LABEL_34:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1207DDC(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1205E88(a1);
    sub_120797C(a1, a2);
  }
}

BOOL sub_1207E28(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_1200430(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    BOOL v7 = sub_1200F34(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if (!v7) {
      return 0;
    }
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 0x20) != 0)
  {
    BOOL result = sub_15B1450(*(void *)(a1 + 160));
    if (!result) {
      return result;
    }
    int v9 = *(_DWORD *)(a1 + 16);
  }
  if ((v9 & 0x40) == 0) {
    return 1;
  }
  BOOL result = sub_15B29FC(*(void *)(a1 + 168));
  if (result) {
    return 1;
  }
  return result;
}

__n128 sub_1207EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 56) = v7;
  uint64_t v8 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v8;
  uint64_t v9 = *(void *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v9;
  *(void *)(a2 + 80) = v10;
  uint64_t v11 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v11;
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v12;
  *(void *)(a2 + 104) = v13;
  uint64_t v14 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v14;
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a2 + 120) = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v15;
  uint64_t v16 = *(void *)(a2 + 128);
  *(void *)(a2 + 128) = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = v16;
  uint64_t v17 = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v17;
  uint64_t v18 = *(void *)(a2 + 144);
  *(void *)(a2 + 144) = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = v18;
  uint64_t v19 = *(void *)(a2 + 152);
  *(void *)(a2 + 152) = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = v19;
  uint64_t v20 = *(void *)(a1 + 160);
  uint64_t v21 = *(void *)(a1 + 168);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a2 + 160) = v20;
  *(void *)(a2 + 168) = v21;
  uint64_t v22 = *(void *)(a1 + 176);
  uint64_t v23 = *(void *)(a1 + 184);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a2 + 176) = v22;
  *(void *)(a2 + 184) = v23;
  uint64_t v24 = *(void *)(a1 + 192);
  uint64_t v25 = *(void *)(a1 + 200);
  __n128 result = *(__n128 *)(a2 + 192);
  *(__n128 *)(a1 + 192) = result;
  *(void *)(a2 + 192) = v24;
  *(void *)(a2 + 200) = v25;
  LODWORD(v24) = *(_DWORD *)(a1 + 208);
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  *(_DWORD *)(a2 + 208) = v24;
  return result;
}

void *sub_1207FFC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.IndexData");
}

void *sub_120800C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *__n128 result = &off_249CCB0;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1208088(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249CD30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = 0;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

void *sub_120812C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249CDB0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

double sub_12081D0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  v2[1] = a1;
  *uint64_t v2 = off_249CE30;
  v2[2] = 0;
  v2[3] = 0;
  *(void *)&double result = 0x100000001;
  v2[4] = 0x100000001;
  return result;
}

void *sub_1208250(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_249CEB0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_12082C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249CF30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a1;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void *sub_1208378(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249CFB0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  *(void *)((char *)result + 37) = 0;
  return result;
}

uint64_t sub_1208400(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249D030;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 40) = &qword_2550250;
  *(unsigned char *)(result + 64) = 0;
  return result;
}

void *sub_12084AC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249D0B0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_1208530(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249D130;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = 0;
  result[9] = 0;
  return result;
}

void *sub_12085D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249D1B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

double sub_1208678(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = off_249D230;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = 0;
  *(void *)(v2 + 112) = 0;
  *(void *)(v2 + 120) = &qword_2550250;
  *(void *)(v2 + 128) = &qword_2550250;
  *(void *)(v2 + 136) = &qword_2550250;
  *(void *)(v2 + 144) = &qword_2550250;
  *(void *)(v2 + 152) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_DWORD *)(v2 + 208) = 0;
  return result;
}

void *sub_1208750(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *double result = off_249D2B0;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_1208788(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_252E2E8 && *(void *)(a1 + 48))
  {
    sub_12B5EB4();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1208848(uint64_t a1)
{
  sub_1208788(a1);

  operator delete();
}

uint64_t sub_1208880(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t result = sub_12B5EF0(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_12088E4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  uint64_t v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 48);
    if (!v23)
    {
      uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v24 = (void *)*v24;
      }
      sub_12BCD00((uint64_t)v24);
      uint64_t v23 = v25;
      *(void *)(a1 + 48) = v25;
      uint64_t v8 = *(unsigned __int8 **)v26;
    }
    uint64_t v15 = sub_1208B38(a3, v23, v8);
LABEL_37:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_43;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = (const std::string::value_type *)(v8 - 1);
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        void *v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_43;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_38;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, (char *)v8, a3);
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_43:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_1208B38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B6008(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1208BC8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      uint64_t v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      uint64_t v8 = v4 + 2;
    }
    char v4 = sub_12B6340(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 32);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 8 * v9;
    do
    {
      uint64_t v12 = *(void **)(*(void *)(a1 + 40) + v10 + 8);
      if (*((char *)v12 + 23) < 0)
      {
        int64_t v13 = v12[1];
        if (v13 > 127) {
          goto LABEL_19;
        }
      }
      else
      {
        int64_t v13 = *((unsigned __int8 *)v12 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v13)
      {
        char *v4 = 18;
        v4[1] = v13;
        if (*((char *)v12 + 23) < 0) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v14 = v4 + 2;
        memcpy(v14, v12, v13);
        char v4 = &v14[v13];
        goto LABEL_17;
      }
LABEL_19:
      char v4 = (char *)sub_188A868(a3, 2, (uint64_t)v12, v4);
LABEL_17:
      v10 += 8;
    }
    while (v11 != v10);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1208D98(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_12B6530(*(void *)(a1 + 48));
    v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v4 += v12;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_1208E80(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_12BCD00((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      int64_t v13 = v9;
    }
    else {
      int64_t v13 = &off_2530F28;
    }
    sub_12B6638(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1208FA4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_12B6904(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1208FD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.ResultRefinementGroupConfig");
}

void *sub_1208FE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249D2B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_120907C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_252E320)
  {
    if (*(void *)(a1 + 48))
    {
      sub_12A46C8();
      operator delete();
    }
    if (*(void *)(a1 + 56))
    {
      sub_12B75F4();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1209198(uint64_t a1)
{
  sub_120907C(a1);

  operator delete();
}

uint64_t sub_12091D0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_20:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_24:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_28;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  uint64_t result = (uint64_t)sub_12A4704(*(unsigned char **)(result + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_12B7630(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  if ((v2 & 0x700) != 0)
  {
    *(_DWORD *)(v1 + 84) = 0;
    *(void *)(v1 + 76) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1209304(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v53 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 1);
    unsigned int v9 = **(unsigned char **)v53;
    if ((char)**(unsigned char **)v53 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v53, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v53 + 2);
      }
    }
    *(void *)uint64_t v53 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_74;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v53) {
            goto LABEL_120;
          }
          unint64_t v13 = v44;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v53 = v12;
        }
        if (sub_1791E00(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_82;
        }
        if (*v7) {
          uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 1;
        goto LABEL_111;
      case 2u:
        if (v9 != 16) {
          goto LABEL_74;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v53) {
            goto LABEL_120;
          }
          unint64_t v13 = v45;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_20:
          *(void *)uint64_t v53 = v16;
        }
        if (sub_184A080(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 68) = v13;
          goto LABEL_82;
        }
        if (*v7) {
          uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 2;
        goto LABEL_111;
      case 3u:
        if (v9 != 24) {
          goto LABEL_74;
        }
        uint64_t v19 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v20 = *v19;
        int v21 = v13 + (v20 << 7);
        unint64_t v13 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v53) {
            goto LABEL_120;
          }
          unint64_t v13 = v46;
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_27:
          *(void *)uint64_t v53 = v19;
        }
        if (sub_1791DC4(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_82;
        }
        if (*v7) {
          uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 3;
        goto LABEL_111;
      case 4u:
        if (v9 != 32) {
          goto LABEL_74;
        }
        uint64_t v22 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v23 = *v22;
        int v24 = v13 + (v23 << 7);
        unint64_t v13 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v53) {
            goto LABEL_120;
          }
          unint64_t v13 = v47;
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_34:
          *(void *)uint64_t v53 = v22;
        }
        if (sub_129EB9C(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 76) = v13;
          goto LABEL_82;
        }
        if (*v7) {
          uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v52 = 4;
        goto LABEL_111;
      case 5u:
        if (v9 != 42) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void **)(a1 + 48);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_12BBF44((uint64_t)v26);
          *(void *)(a1 + 48) = v25;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v27 = sub_1209958(a3, (uint64_t)v25, v8);
        goto LABEL_81;
      case 6u:
        if (v9 != 50) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          int v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (void *)(a1 + 24);
        goto LABEL_73;
      case 7u:
        if (v9 != 58) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v31 = *(void *)(a1 + 8);
        int v29 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          int v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (void *)(a1 + 32);
        goto LABEL_73;
      case 8u:
        if (v9 != 64) {
          goto LABEL_74;
        }
        uint64_t v32 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v33 = *v32;
        int v34 = v13 + (v33 << 7);
        unint64_t v13 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)uint64_t v53 = sub_188C138((uint64_t)v8, (v34 - 128));
          if (!*(void *)v53) {
            goto LABEL_120;
          }
          unint64_t v13 = v48;
        }
        else
        {
          uint64_t v32 = (char *)(v8 + 2);
LABEL_55:
          *(void *)uint64_t v53 = v32;
        }
        if (sub_130C2F4(v13))
        {
          *(_DWORD *)(a1 + 16) |= 0x200u;
          *(_DWORD *)(a1 + 80) = v13;
        }
        else
        {
          if (*v7) {
            uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v52 = 8;
LABEL_111:
          sub_188C020(v52, v13, v51);
        }
        goto LABEL_82;
      case 9u:
        if (v9 != 72) {
          goto LABEL_74;
        }
        v5 |= 0x400u;
        uint64_t v35 = (char *)(v8 + 1);
        int v36 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_62;
        }
        int v37 = *v35;
        int v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v49 = sub_188C0D0((uint64_t)v8, v36);
          *(void *)uint64_t v53 = v49;
          *(_DWORD *)(a1 + 84) = v50;
          if (!v49) {
            goto LABEL_120;
          }
        }
        else
        {
          uint64_t v35 = (char *)(v8 + 2);
LABEL_62:
          *(void *)uint64_t v53 = v35;
          *(_DWORD *)(a1 + 84) = v36;
        }
        goto LABEL_82;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v38 = *(void *)(a1 + 56);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v39 = (void *)*v39;
          }
          uint64_t v38 = sub_12BCE18((uint64_t)v39);
          *(void *)(a1 + 56) = v38;
          uint64_t v8 = *(unsigned __int8 **)v53;
        }
        uint64_t v27 = sub_12099E8(a3, v38, v8);
        goto LABEL_81;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_74;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v40 = *(void *)(a1 + 8);
        int v29 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          int v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (void *)(a1 + 40);
LABEL_73:
        unint64_t v41 = (std::string *)sub_1880F84(v30, v29);
        uint64_t v27 = (void *)sub_188C244(v41, *(char **)v53, (uint64_t)a3);
        goto LABEL_81;
      default:
LABEL_74:
        if (v9) {
          BOOL v42 = (v9 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v7)
          {
            uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v53;
          }
          uint64_t v27 = sub_1885AC0(v9, v43, (char *)v8, a3);
LABEL_81:
          *(void *)uint64_t v53 = v27;
          if (!v27) {
            goto LABEL_120;
          }
LABEL_82:
          if (sub_11947B8((uint64_t)a3, (char **)v53, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_120:
        }
          *(void *)uint64_t v53 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v53;
    }
  }
}

char *sub_1209958(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A4770(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12099E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B76EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1209A78(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 68);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 72);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 76);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 48);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      int v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      int v21 = v4 + 2;
    }
    char v4 = sub_12A4C18(v19, (unint64_t)v21, a3);
    if ((v6 & 1) == 0)
    {
LABEL_31:
      if ((v6 & 2) == 0) {
        goto LABEL_32;
      }
      goto LABEL_41;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_31;
  }
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_32:
    if ((v6 & 0x200) == 0) {
      goto LABEL_48;
    }
    goto LABEL_42;
  }
LABEL_41:
  char v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0) {
    goto LABEL_48;
  }
LABEL_42:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v22 = *(int *)(a1 + 80);
  unsigned char *v4 = 64;
  v4[1] = v22;
  if (v22 > 0x7F)
  {
    v4[1] = v22 | 0x80;
    unint64_t v23 = v22 >> 7;
    v4[2] = v22 >> 7;
    v4 += 3;
    if (v22 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v24 = v23 >> 14;
        v23 >>= 7;
        *v4++ = v23;
      }
      while (v24);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_48:
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 72;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 56);
    unsigned char *v4 = 82;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      uint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      uint64_t v30 = v4 + 2;
    }
    char v4 = sub_12B7A54(v28, v30, a3);
  }
  if ((v6 & 4) != 0) {
    char v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_1209F50(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_36;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_12A4ED4(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v14 = sub_12B7D00(*(void *)(a1 + 56));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_28;
  }
LABEL_24:
  int v15 = *(_DWORD *)(a1 + 64);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v16;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_36;
    }
    goto LABEL_32;
  }
LABEL_28:
  int v17 = *(_DWORD *)(a1 + 68);
  if (v17 < 0) {
    uint64_t v18 = 11;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v18;
  if ((v2 & 0x80) != 0)
  {
LABEL_32:
    int v19 = *(_DWORD *)(a1 + 72);
    if (v19 < 0) {
      uint64_t v20 = 11;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v20;
  }
LABEL_36:
  if ((v2 & 0x700) == 0) {
    goto LABEL_41;
  }
  if ((v2 & 0x100) != 0)
  {
    int v23 = *(_DWORD *)(a1 + 76);
    if (v23 < 0) {
      uint64_t v24 = 11;
    }
    else {
      uint64_t v24 = ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v24;
    if ((v2 & 0x200) == 0)
    {
LABEL_39:
      if ((v2 & 0x400) == 0) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_39;
  }
  int v25 = *(_DWORD *)(a1 + 80);
  if (v25 < 0) {
    uint64_t v26 = 11;
  }
  else {
    uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v26;
  if ((v2 & 0x400) != 0) {
LABEL_40:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_41:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v27 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v3 += v28;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_120A24C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_31;
    }
LABEL_28:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    int v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      int v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 40), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_39;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v16 = *(void **)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = sub_12BBF44((uint64_t)v18);
      *(void *)(a1 + 48) = v16;
    }
    if (*(void *)(a2 + 48)) {
      int v19 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      int v19 = &off_25309E0;
    }
    sub_12A5038((uint64_t)v16, (uint64_t)v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v20 = *(void *)(a1 + 56);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      unint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        unint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = sub_12BCE18((uint64_t)v22);
      *(void *)(a1 + 56) = v20;
    }
    if (*(void *)(a2 + 56)) {
      int v23 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v23 = &off_2530F90;
    }
    sub_12B7E70(v20, (uint64_t)v23);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_48;
    }
LABEL_47:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_48:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_51:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v4 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  if ((v4 & 0x200) != 0) {
    goto LABEL_51;
  }
LABEL_15:
  if ((v4 & 0x400) != 0) {
LABEL_16:
  }
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
LABEL_17:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_18:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_120A480(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_12A51B0(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_12B8014(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_120A4CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.SearchRequestMetadata");
}

uint64_t sub_120A4DC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E378 && *(void *)(a1 + 32))
  {
    sub_12A0FF0();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120A5A8(uint64_t a1)
{
  sub_120A4DC(a1);

  operator delete();
}

uint64_t sub_120A5E0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12A102C(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0x3C) != 0)
  {
    *(void *)(v1 + 45) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_120A684(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v41 + 2);
      }
    }
    *(void *)unint64_t v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_43;
        }
        uint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unint64_t v41 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v41) {
            goto LABEL_73;
          }
          unint64_t v13 = v33;
        }
        else
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unint64_t v41 = v12;
        }
        if (sub_1791E00(v13))
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_51;
        }
        if (*v7) {
          uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v40 = 1;
        goto LABEL_67;
      case 2u:
        if (v9 != 16) {
          goto LABEL_43;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v16;
        int v18 = v13 + (v17 << 7);
        unint64_t v13 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)unint64_t v41 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v41) {
            goto LABEL_73;
          }
          unint64_t v13 = v34;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_20:
          *(void *)unint64_t v41 = v16;
        }
        if (sub_184A080(v13))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v13;
        }
        else
        {
          if (*v7) {
            uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v40 = 2;
LABEL_67:
          sub_188C020(v40, v13, v39);
        }
        goto LABEL_51;
      case 3u:
        if (v9 != 24) {
          goto LABEL_43;
        }
        v5 |= 0x10u;
        int v19 = (char *)(v8 + 1);
        int v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v35 = sub_188C0D0((uint64_t)v8, v20);
          *(void *)unint64_t v41 = v35;
          *(_DWORD *)(a1 + 48) = v36;
          if (!v35) {
            goto LABEL_73;
          }
        }
        else
        {
          int v19 = (char *)(v8 + 2);
LABEL_27:
          *(void *)unint64_t v41 = v19;
          *(_DWORD *)(a1 + 48) = v20;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_43;
        }
        v5 |= 0x20u;
        unint64_t v22 = (char *)(v8 + 1);
        uint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v37 = sub_188C138((uint64_t)v8, v23);
          *(void *)unint64_t v41 = v37;
          *(unsigned char *)(a1 + 52) = v38 != 0;
          if (!v37) {
            goto LABEL_73;
          }
        }
        else
        {
          unint64_t v22 = (char *)(v8 + 2);
LABEL_32:
          *(void *)unint64_t v41 = v22;
          *(unsigned char *)(a1 + 52) = v23 != 0;
        }
        goto LABEL_51;
      case 5u:
        if (v9 != 42) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 32);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_12BBB40((uint64_t)v26);
          *(void *)(a1 + 32) = v25;
          uint64_t v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v27 = sub_120AA94(a3, v25, v8);
        goto LABEL_50;
      case 6u:
        if (v9 != 50) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v28 = *(void *)(a1 + 8);
        unsigned int v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          unsigned int v29 = (uint64_t *)*v29;
        }
        uint64_t v30 = (std::string *)sub_1880F84((void *)(a1 + 24), v29);
        uint64_t v27 = (uint64_t)sub_188C244(v30, *(char **)v41, (uint64_t)a3);
        goto LABEL_50;
      default:
LABEL_43:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v41;
          }
          uint64_t v27 = (uint64_t)sub_1885AC0(v9, v32, (char *)v8, a3);
LABEL_50:
          *(void *)unint64_t v41 = v27;
          if (!v27) {
            goto LABEL_73;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_73:
        }
          *(void *)unint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

uint64_t sub_120AA94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12A10AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_120AB24(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 48);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v18 = *(unsigned char *)(a1 + 52);
    unsigned char *v4 = 32;
    v4[1] = v18;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_24:
      if ((v6 & 1) == 0) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 32);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  uint64_t v4 = sub_12A12FC(v19, v21, a3);
  if (v6) {
LABEL_25:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_26:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_120AE18(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_12A1464(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v10 = *(_DWORD *)(a1 + 40);
    if (v10 < 0) {
      uint64_t v11 = 11;
    }
    else {
      uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  int v12 = *(_DWORD *)(a1 + 44);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v13;
  if ((v2 & 0x10) == 0) {
    goto LABEL_14;
  }
LABEL_13:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if ((v2 & 0x20) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_17:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v14 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_120AFA8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_25;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    int v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      int v10 = (std::string *)sub_12BBB40((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2530888;
    }
    uint64_t result = sub_117DA78(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_26;
    }
LABEL_25:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
LABEL_26:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      v3[2].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 52);
      goto LABEL_9;
    }
LABEL_27:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_120B0E8()
{
  return 1;
}

void *sub_120B0F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.AutocompleteRequestMetadata");
}

void *sub_120B100(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120B174(void *a1)
{
  sub_120B100(a1);

  operator delete();
}

uint64_t sub_120B1AC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_120B1D0(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v18 + 2;
      }
    }
    char v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        unint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        char v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      unint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v18;
    }
    char v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  char v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_120B340(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)int v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_120B45C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_120B4B8()
{
  return 1;
}

void *sub_120B4C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.SearchResponseMetadata.ResultId");
}

uint64_t sub_120B4D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E3D8)
  {
    unint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_120B100(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120B59C(uint64_t a1)
{
  sub_120B4D0(a1);

  operator delete();
}

uint64_t sub_120B5D4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_120B1AC(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0x1C) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_120B678(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)int v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v12 = *(void **)(a1 + 32);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          int v12 = sub_1211F0C((uint64_t)v13);
          *(void *)(a1 + 32) = v12;
          uint64_t v8 = *(unsigned __int8 **)v36;
        }
        uint64_t v14 = sub_120BA14(a3, (uint64_t)v12, v8);
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v14 = (void *)sub_188C244(v17, *(char **)v36, (uint64_t)a3);
        goto LABEL_45;
      case 3u:
        if (v9 != 24) {
          goto LABEL_38;
        }
        v5 |= 4u;
        uint64_t v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v30 = sub_188C138((uint64_t)v8, v18);
          *(void *)int v36 = v30;
          *(_DWORD *)(a1 + 40) = v31;
          if (!v30) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)int v36 = v19;
          *(_DWORD *)(a1 + 40) = v18;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_38;
        }
        int v21 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          *(void *)int v36 = sub_188C138((uint64_t)v8, (v24 - 128));
          if (!*(void *)v36) {
            goto LABEL_66;
          }
          unint64_t v22 = v32;
        }
        else
        {
          int v21 = (char *)(v8 + 2);
LABEL_28:
          *(void *)int v36 = v21;
        }
        if (sub_16BAF04(v22))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v22;
          goto LABEL_46;
        }
        if (*v7) {
          unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v35 = 4;
        goto LABEL_60;
      case 5u:
        if (v9 != 40) {
          goto LABEL_38;
        }
        uint64_t v25 = (char *)(v8 + 1);
        unint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v26 = *v25;
        int v27 = v22 + (v26 << 7);
        unint64_t v22 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)int v36 = sub_188C138((uint64_t)v8, (v27 - 128));
          if (!*(void *)v36) {
            goto LABEL_66;
          }
          unint64_t v22 = v33;
        }
        else
        {
          uint64_t v25 = (char *)(v8 + 2);
LABEL_35:
          *(void *)int v36 = v25;
        }
        if (sub_129EB9C(v22))
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 48) = v22;
        }
        else
        {
          if (*v7) {
            unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v35 = 5;
LABEL_60:
          sub_188C020(v35, v22, v34);
        }
        goto LABEL_46;
      default:
LABEL_38:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            unsigned int v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v36;
          }
          uint64_t v14 = sub_1885AC0(v9, v29, (char *)v8, a3);
LABEL_45:
          *(void *)int v36 = v14;
          if (!v14) {
            goto LABEL_66;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_66:
        }
          *(void *)int v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

char *sub_120BA14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120B1D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_120BAA4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_120B340(v7, (unint64_t)v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_18;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 40);
  unsigned char *v4 = 24;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_18:
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    unint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    unint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_120BD60(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_26;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_120B45C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  int v10 = *(_DWORD *)(a1 + 44);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
  if ((v2 & 0x10) != 0)
  {
LABEL_22:
    int v12 = *(_DWORD *)(a1 + 48);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v13;
  }
LABEL_26:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_120BEF4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    int v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      int v10 = (std::string *)sub_1211F0C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      uint64_t v13 = &off_252E3B0;
    }
    uint64_t result = sub_1113E40(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_25:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_120C024()
{
  return 1;
}

void *sub_120C02C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.SearchResponseMetadata.SearchResult");
}

uint64_t sub_120C03C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E410 && *(void *)(a1 + 56))
  {
    sub_12B5670();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_122D134((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120C114(uint64_t a1)
{
  sub_120C03C(a1);

  operator delete();
}

uint64_t sub_120C14C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_120B5D4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_12B56AC(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_120C214(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 56);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        uint64_t v16 = sub_12BCC60((uint64_t)v17);
        *(void *)(a1 + 56) = v16;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      unint64_t v15 = sub_120C4FC(a3, v16, v7);
      goto LABEL_40;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    int v26 = (std::string *)sub_1880F84((void *)(a1 + 48), v25);
    unint64_t v15 = (void *)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
LABEL_40:
    *(void *)int v27 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 18)
  {
    unint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = v18 + 1;
      *(void *)int v27 = v18 + 1;
      int v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1211F88(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = *(unsigned __int8 **)v27;
      }
      unint64_t v18 = (unsigned __int8 *)sub_120C46C(a3, v22, v19);
      *(void *)int v27 = v18;
      if (!v18) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    unint64_t v15 = sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_46:
  *(void *)int v27 = 0;
  return *(void *)v27;
}

uint64_t sub_120C46C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120B678(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_120C4FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B5728(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_120C58C(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v7 = *(_DWORD *)(a1 + 32);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      uint64_t v4 = sub_120BAA4(v9, (unint64_t)v11, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 56);
    unsigned char *v4 = 26;
    unsigned int v13 = *(_DWORD *)(v12 + 40);
    v4[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, v4 + 1);
    }
    else {
      uint64_t v14 = v4 + 2;
    }
    uint64_t v4 = sub_12B58C8(v12, v14, a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_120C758(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_120BD60(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_12B5A0C(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_120C888(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122D334((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(void *)(a1 + 56);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_12BCC60((uint64_t)v15);
        *(void *)(a1 + 56) = v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_2530EF8;
      }
      sub_12B5ABC(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_120C9E4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  BOOL result = sub_12B5BD8(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_120CA10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.SearchResponseMetadata");
}

void *sub_120CA20(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120CA94(void *a1)
{
  sub_120CA20(a1);

  operator delete();
}

uint64_t sub_120CACC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_120CAE4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v14 + 2;
      }
    }
    uint64_t v14 = v7;
    if (v8 == 9)
    {
      *(void *)(a1 + 24) = *(void *)v7;
      uint64_t v14 = v7 + 8;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v14;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_120CC24(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v6;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_120CD08(uint64_t a1)
{
  uint64_t v1 = 9;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_120CD50()
{
  return 1;
}

void *sub_120CD58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.AutocompleteResponseMetadata.AddressEntry");
}

void *sub_120CD68(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120CDDC(void *a1)
{
  sub_120CD68(a1);

  operator delete();
}

uint64_t sub_120CE14(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_120CE2C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v14 + 2;
      }
    }
    uint64_t v14 = v7;
    if (v8 == 9)
    {
      *(void *)(a1 + 24) = *(void *)v7;
      uint64_t v14 = v7 + 8;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v14;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_120CF6C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *(unsigned char *)unint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v6;
    unint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_120D050(uint64_t a1)
{
  uint64_t v1 = 9;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_120D098()
{
  return 1;
}

void *sub_120D0A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.AutocompleteResponseMetadata.BusinessEntry");
}

uint64_t sub_120D0B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_122D1B4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120D15C(uint64_t a1)
{
  sub_120D0B0(a1);

  operator delete();
}

uint64_t sub_120D194(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12B3388(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_120D244(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)uint64_t v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_12BCA98(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      unint64_t v15 = sub_120D444(a3, v19, v16);
      *(void *)uint64_t v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

char *sub_120D444(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12B3444(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_120D4D4(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_12B3AF0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_120D63C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12B3E94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_120D734(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122D3C0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 48), v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_120D83C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_12B4328(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_120D894@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.AutocompleteResponseMetadata.QueryEntry");
}

void *sub_120D8A4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_120D928((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_120D928(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 32);
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_252E4C8)
  {
    char v5 = *(void **)(a1 + 40);
    if (v5)
    {
      sub_120CA20(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_120CD68(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_120D0B0((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_120DA00(void *a1)
{
  sub_120D8A4(a1);

  operator delete();
}

uint64_t sub_120DA38(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_21;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
LABEL_14:
    uint64_t v5 = *(void *)(result + 40);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_16;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v4 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v2 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_16:
  if ((v2 & 8) != 0)
  {
    uint64_t v7 = *(void *)(v1 + 48);
    char v8 = *(unsigned char *)(v7 + 8);
    uint64_t result = v7 + 8;
    *(void *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v8) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = sub_120D194(*(void *)(v1 + 56));
  }
LABEL_21:
  if ((v2 & 0x60) != 0) {
    *(void *)(v1 + 64) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_120DB4C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v37 + 1);
    unsigned int v9 = **(unsigned char **)v37;
    if ((char)**(unsigned char **)v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v37 + 2);
      }
    }
    *(void *)uint64_t v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void **)(a1 + 40);
        if (!v12)
        {
          unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_12120B4((uint64_t)v13);
          *(void *)(a1 + 40) = v12;
          char v8 = *(unsigned __int8 **)v37;
        }
        uint64_t v14 = (uint64_t)sub_120DF34(a3, (uint64_t)v12, v8);
        goto LABEL_55;
      case 2u:
        if (v9 != 18) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v15 = *(void **)(a1 + 48);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_121212C((uint64_t)v16);
          *(void *)(a1 + 48) = v15;
          char v8 = *(unsigned __int8 **)v37;
        }
        uint64_t v14 = (uint64_t)sub_120DFC4(a3, (uint64_t)v15, v8);
        goto LABEL_55;
      case 3u:
        if (v9 != 26) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void **)(a1 + 56);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_12121A4((uint64_t)v18);
          *(void *)(a1 + 56) = v17;
          char v8 = *(unsigned __int8 **)v37;
        }
        uint64_t v14 = sub_120E054(a3, (uint64_t)v17, v8);
        goto LABEL_55;
      case 4u:
        if (v9 != 32) {
          goto LABEL_48;
        }
        v5 |= 0x20u;
        uint64_t v20 = (char *)(v8 + 1);
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_31;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v37 = v33;
          *(_DWORD *)(a1 + 64) = v34;
          if (!v33) {
            goto LABEL_69;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_31:
          *(void *)uint64_t v37 = v20;
          *(_DWORD *)(a1 + 64) = v19;
        }
        goto LABEL_56;
      case 5u:
        if (v9 != 42) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 24);
        goto LABEL_40;
      case 6u:
        if (v9 != 50) {
          goto LABEL_48;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v23 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v23 = (uint64_t *)*v23;
        }
        uint64_t v24 = (void *)(a1 + 32);
LABEL_40:
        int v26 = (std::string *)sub_1880F84(v24, v23);
        uint64_t v14 = (uint64_t)sub_188C244(v26, *(char **)v37, (uint64_t)a3);
        goto LABEL_55;
      case 7u:
        if (v9 != 56) {
          goto LABEL_48;
        }
        int v27 = (char *)(v8 + 1);
        unint64_t v28 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v29 = *v27;
        int v30 = v28 + (v29 << 7);
        unint64_t v28 = (v30 - 128);
        if (v29 < 0)
        {
          *(void *)uint64_t v37 = sub_188C138((uint64_t)v8, (v30 - 128));
          if (!*(void *)v37) {
            goto LABEL_69;
          }
          unint64_t v28 = v35;
        }
        else
        {
          int v27 = (char *)(v8 + 2);
LABEL_45:
          *(void *)uint64_t v37 = v27;
        }
        if (sub_130C2F4(v28))
        {
          *(_DWORD *)(a1 + 16) |= 0x40u;
          *(_DWORD *)(a1 + 68) = v28;
        }
        else
        {
          if (*v7) {
            int v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(7, v28, v36);
        }
        goto LABEL_56;
      default:
LABEL_48:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            unint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v37;
          }
          uint64_t v14 = (uint64_t)sub_1885AC0(v9, v32, (char *)v8, a3);
LABEL_55:
          *(void *)uint64_t v37 = v14;
          if (!v14) {
            goto LABEL_69;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, (char **)v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_69:
        }
          *(void *)uint64_t v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v37;
    }
  }
}

char *sub_120DF34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120CAE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_120DFC4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120CE2C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_120E054(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120D244(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_120E0E4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_120CC24(v7, (unint64_t)v9, a3);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  unint64_t v4 = sub_120CF6C(v10, (unint64_t)v12, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 56);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  unint64_t v4 = sub_120D4D4(v13, v15, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 64);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_32:
      if ((v6 & 0x40) == 0) {
        goto LABEL_42;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_32;
  }
  unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_42;
  }
LABEL_36:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v19 = *(int *)(a1 + 68);
  unsigned char *v4 = 56;
  v4[1] = v19;
  if (v19 > 0x7F)
  {
    v4[1] = v19 | 0x80;
    unint64_t v20 = v19 >> 7;
    v4[2] = v19 >> 7;
    v4 += 3;
    if (v19 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v21 = v20 >> 14;
        v20 >>= 7;
        *v4++ = v20;
      }
      while (v21);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_42:
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_120E41C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_35;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = *(void *)(a1 + 40);
    uint64_t v11 = 9;
    if ((*(unsigned char *)(v10 + 16) & 1) == 0) {
      uint64_t v11 = 0;
    }
    uint64_t v12 = *(void *)(v10 + 8);
    if (v12)
    {
      unint64_t v25 = v12 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v25 + 31) < 0) {
        uint64_t v26 = *(void *)(v25 + 16);
      }
      else {
        uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
      }
      v11 += v26;
    }
    *(_DWORD *)(v10 + 20) = v11;
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = 9;
  if ((*(unsigned char *)(v13 + 16) & 1) == 0) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = *(void *)(v13 + 8);
  if (v15)
  {
    unint64_t v27 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v14 += v28;
  }
  *(_DWORD *)(v13 + 20) = v14;
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t v16 = sub_120D63C(*(void *)(a1 + 56));
  v3 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_35;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v17 = *(_DWORD *)(a1 + 64);
  if (v17 < 0) {
    uint64_t v18 = 11;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v18;
  if ((v2 & 0x40) != 0)
  {
LABEL_31:
    int v19 = *(_DWORD *)(a1 + 68);
    if (v19 < 0) {
      uint64_t v20 = 11;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v20;
  }
LABEL_35:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v3 += v24;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_120E698(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 32), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_29;
    }
LABEL_21:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(std::string **)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_12120B4((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(void *(****)(void *))(a2 + 40);
    }
    else {
      uint64_t v16 = &off_252E450;
    }
    sub_11A442C(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 16) |= 8u;
    int v17 = *(std::string **)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      int v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        int v19 = (void *)*v19;
      }
      int v17 = (std::string *)sub_121212C((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v20 = *(void *(****)(void *))(a2 + 48);
    }
    else {
      uint64_t v20 = &off_252E470;
    }
    sub_11A442C(v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v21 = *(void **)(a1 + 56);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      unint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        unint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_12121A4((uint64_t)v23);
      *(void *)(a1 + 56) = v21;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v24 = *(uint64_t (****)(uint64_t))(a2 + 56);
    }
    else {
      uint64_t v24 = &off_252E490;
    }
    sub_120D734((uint64_t)v21, (uint64_t)v24);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      goto LABEL_10;
    }
LABEL_45:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_120E890(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
    return 1;
  }
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v3 = *(unsigned int *)(v2 + 32);
  do
  {
    BOOL v1 = (int)v3 < 1;
    if ((int)v3 < 1) {
      break;
    }
    uint64_t v4 = v3 - 1;
    char v5 = sub_12B4328(*(void *)(*(void *)(v2 + 40) + 8 * v3));
    uint64_t v3 = v4;
  }
  while ((v5 & 1) != 0);
  return v1;
}

void *sub_120E8F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.AutocompleteResponseMetadata.AutocompleteEntry");
}

void *sub_120E904(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122D234(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120E984(void *a1)
{
  sub_120E904(a1);

  operator delete();
}

uint64_t sub_120E9BC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_120DA38(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_120EA38(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_1212248(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_120EBD8(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_120EBD8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120DB4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_120EC68(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_120E0E4(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_120EDAC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_120E41C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_120EE5C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_122D44C((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_120EF2C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_120E890(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_120EF84@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.AutocompleteResponseMetadata.AutocompleteSection");
}

void *sub_120EF94(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122D2B4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120F014(void *a1)
{
  sub_120EF94(a1);

  operator delete();
}

uint64_t sub_120F04C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_120E9BC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_120F0C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_12122D8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_120F268(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_120F268(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120EA38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_120F2F8(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 40);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_120EC68(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_120F43C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_120EDAC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_120F4EC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_122D4D8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_120F5BC(uint64_t a1)
{
  return sub_120F5C4(a1 + 16);
}

uint64_t sub_120F5C4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_120E890(*(void *)(*(void *)(v4 + 32) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_120F650@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.AutocompleteResponseMetadata");
}

uint64_t sub_120F660(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_252E540)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_15B3DFC(v6);
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_17920F0();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_122C6CC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_120F774(uint64_t a1)
{
  sub_120F660(a1);

  operator delete();
}

uint64_t sub_120F7AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15BF870(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if (v5)
  {
    unint64_t v8 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_23;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
  if ((v5 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_23:
  unint64_t v9 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v5 & 4) != 0) {
      goto LABEL_27;
    }
LABEL_9:
    if ((v5 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  *(unsigned char *)unint64_t v9 = 0;
  *(unsigned char *)(v9 + 23) = 0;
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_27:
  uint64_t result = sub_15B043C(*(void *)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_179212C(*(unsigned char **)(v1 + 72));
LABEL_11:
  if ((v5 & 0xF0) != 0)
  {
    *(_DWORD *)(v1 + 88) = 0;
    *(void *)(v1 + 80) = 0;
  }
  if ((v5 & 0x300) != 0) {
    *(void *)(v1 + 92) = 0;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_120F8DC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v60 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v60 + 1);
    unsigned int v9 = **(unsigned char **)v60;
    if ((char)**(unsigned char **)v60 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v60, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v60 + 2);
      }
    }
    *(void *)uint64_t v60 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_70;
        }
        v5 |= 0x10u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v60 = v12;
          *(unsigned char *)(a1 + 80) = v13 != 0;
          goto LABEL_78;
        }
        uint64_t v48 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v60 = v48;
        *(unsigned char *)(a1 + 80) = v49 != 0;
        if (v48) {
          goto LABEL_78;
        }
        goto LABEL_95;
      case 2u:
        if (v9 != 16) {
          goto LABEL_70;
        }
        v5 |= 0x20u;
        uint64_t v15 = (char *)(v8 + 1);
        uint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v60 = v50;
          *(unsigned char *)(a1 + 81) = v51 != 0;
          if (!v50) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)uint64_t v60 = v15;
          *(unsigned char *)(a1 + 81) = v16 != 0;
        }
        goto LABEL_78;
      case 3u:
        if (v9 != 24) {
          goto LABEL_70;
        }
        v5 |= 0x40u;
        int v19 = (char *)(v8 + 1);
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v60 = v52;
          *(_DWORD *)(a1 + 84) = v53;
          if (!v52) {
            goto LABEL_95;
          }
        }
        else
        {
          int v19 = (char *)(v8 + 2);
LABEL_23:
          *(void *)uint64_t v60 = v19;
          *(_DWORD *)(a1 + 84) = v18;
        }
        goto LABEL_78;
      case 4u:
        if (v9 != 34) {
          goto LABEL_70;
        }
        uint64_t v21 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          *(void *)uint64_t v60 = v21 + 1;
          unint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_15C2510(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, v26);
            uint64_t v22 = *(unsigned __int8 **)v60;
          }
          uint64_t v21 = sub_11FF090(a3, v25, v22);
          *(void *)uint64_t v60 = v21;
          if (!v21) {
            goto LABEL_95;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_78;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v27 = *(void *)(a1 + 64);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v28 = (void *)*v28;
          }
          uint64_t v27 = sub_15C1CB4((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          unint64_t v8 = *(unsigned __int8 **)v60;
        }
        int v29 = sub_11B3E48(a3, v27, v8);
        goto LABEL_77;
      case 6u:
        if (v9 != 50) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v30 = *(void *)(a1 + 8);
        BOOL v31 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          BOOL v31 = (uint64_t *)*v31;
        }
        unint64_t v32 = (void *)(a1 + 48);
        goto LABEL_69;
      case 7u:
        if (v9 != 56) {
          goto LABEL_70;
        }
        v5 |= 0x80u;
        int v34 = (char *)(v8 + 1);
        LODWORD(v33) = *v8;
        if ((v33 & 0x80) == 0) {
          goto LABEL_48;
        }
        int v35 = *v34;
        uint64_t v33 = v33 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v8, v33);
          *(void *)uint64_t v60 = v54;
          *(_DWORD *)(a1 + 88) = v55;
          if (!v54) {
            goto LABEL_95;
          }
        }
        else
        {
          int v34 = (char *)(v8 + 2);
LABEL_48:
          *(void *)uint64_t v60 = v34;
          *(_DWORD *)(a1 + 88) = v33;
        }
        goto LABEL_78;
      case 8u:
        if (v9 != 64) {
          goto LABEL_70;
        }
        v5 |= 0x100u;
        uint64_t v37 = (char *)(v8 + 1);
        LODWORD(v36) = *v8;
        if ((v36 & 0x80) == 0) {
          goto LABEL_53;
        }
        int v38 = *v37;
        uint64_t v36 = v36 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v8, v36);
          *(void *)uint64_t v60 = v56;
          *(_DWORD *)(a1 + 92) = v57;
          if (!v56) {
            goto LABEL_95;
          }
        }
        else
        {
          uint64_t v37 = (char *)(v8 + 2);
LABEL_53:
          *(void *)uint64_t v60 = v37;
          *(_DWORD *)(a1 + 92) = v36;
        }
        goto LABEL_78;
      case 9u:
        if (v9 != 74) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v39 = *(void **)(a1 + 72);
        if (!v39)
        {
          int v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v40 = (void *)*v40;
          }
          uint64_t v39 = sub_18302C8((uint64_t)v40);
          *(void *)(a1 + 72) = v39;
          unint64_t v8 = *(unsigned __int8 **)v60;
        }
        int v29 = sub_120FE50(a3, (uint64_t)v39, v8);
        goto LABEL_77;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_70;
        }
        v5 |= 0x200u;
        BOOL v42 = (char *)(v8 + 1);
        LODWORD(v41) = *v8;
        if ((v41 & 0x80) == 0) {
          goto LABEL_64;
        }
        int v43 = *v42;
        uint64_t v41 = v41 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v58 = sub_188C138((uint64_t)v8, v41);
          *(void *)uint64_t v60 = v58;
          *(_DWORD *)(a1 + 96) = v59;
          if (!v58) {
            goto LABEL_95;
          }
        }
        else
        {
          BOOL v42 = (char *)(v8 + 2);
LABEL_64:
          *(void *)uint64_t v60 = v42;
          *(_DWORD *)(a1 + 96) = v41;
        }
        goto LABEL_78;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_70;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v44 = *(void *)(a1 + 8);
        BOOL v31 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
        if (v44) {
          BOOL v31 = (uint64_t *)*v31;
        }
        unint64_t v32 = (void *)(a1 + 56);
LABEL_69:
        unint64_t v45 = (std::string *)sub_1880F84(v32, v31);
        int v29 = (void *)sub_188C244(v45, *(char **)v60, (uint64_t)a3);
        goto LABEL_77;
      default:
LABEL_70:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (*v7)
          {
            unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v60;
          }
          int v29 = sub_1885AC0(v9, v47, (char *)v8, a3);
LABEL_77:
          *(void *)uint64_t v60 = v29;
          if (!v29) {
            goto LABEL_95;
          }
LABEL_78:
          if (sub_11947B8((uint64_t)a3, (char **)v60, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_95:
        }
          *(void *)uint64_t v60 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v60;
    }
  }
}

char *sub_120FE50(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1792194(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_120FEE0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 80);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 81);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 0x40) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v9 = *(int *)(a1 + 84);
    unsigned char *v4 = 24;
    v4[1] = v9;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unint64_t v10 = v9 >> 7;
      v4[2] = v9 >> 7;
      v4 += 3;
      if (v9 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v11 = v10 >> 14;
          v10 >>= 7;
          *v4++ = v10;
        }
        while (v11);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_17:
  int v12 = *(_DWORD *)(a1 + 32);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_15BFAE0(v14, (unint64_t)v16, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 64);
    unsigned char *v4 = 42;
    unsigned int v18 = *(_DWORD *)(v17 + 44);
    v4[1] = v18;
    if (v18 > 0x7F) {
      int v19 = sub_188A9CC(v18, v4 + 1);
    }
    else {
      int v19 = v4 + 2;
    }
    uint64_t v4 = sub_15B43E4(v17, v19, a3);
    if ((v6 & 1) == 0)
    {
LABEL_27:
      if ((v6 & 0x80) == 0) {
        goto LABEL_42;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_42;
  }
LABEL_36:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v20 = *(int *)(a1 + 88);
  unsigned char *v4 = 56;
  v4[1] = v20;
  if (v20 > 0x7F)
  {
    v4[1] = v20 | 0x80;
    unint64_t v21 = v20 >> 7;
    v4[2] = v20 >> 7;
    v4 += 3;
    if (v20 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v22 = v21 >> 14;
        v21 >>= 7;
        *v4++ = v21;
      }
      while (v22);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_42:
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(int *)(a1 + 92);
    unsigned char *v4 = 64;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 72);
    unsigned char *v4 = 74;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    v4[1] = v27;
    if (v27 > 0x7F) {
      uint64_t v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      uint64_t v28 = v4 + 2;
    }
    uint64_t v4 = sub_1792424(v26, (unint64_t)v28, a3);
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v29 = *(int *)(a1 + 96);
    unsigned char *v4 = 80;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unint64_t v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v32 = *(void *)(a1 + 8);
  if ((v32 & 1) == 0) {
    return v4;
  }
  unint64_t v34 = v32 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v34 + 31) < 0)
  {
    int v35 = *(void **)(v34 + 8);
    uint64_t v36 = *(void *)(v34 + 16);
  }
  else
  {
    int v35 = (void *)(v34 + 8);
    LODWORD(v36) = *(unsigned __int8 *)(v34 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v36)
  {
    uint64_t v37 = (int)v36;
    memcpy(v4, v35, (int)v36);
    v4 += v37;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v35, v36, v4);
}

uint64_t sub_12103A8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15BFD00(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_30;
  }
  if (v8)
  {
    unint64_t v19 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      uint64_t v21 = v20;
    }
    v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
LABEL_40:
      uint64_t v25 = sub_15B4924(*(void *)(a1 + 64));
      v2 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v22 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v2 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_40;
  }
LABEL_13:
  if ((v8 & 8) != 0)
  {
LABEL_14:
    uint64_t v9 = sub_1792638(*(void *)(a1 + 72));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v10 = v2 + 2;
  if ((v8 & 0x10) == 0) {
    uint64_t v10 = v2;
  }
  if ((v8 & 0x20) != 0) {
    uint64_t v2 = v10 + 2;
  }
  else {
    uint64_t v2 = v10;
  }
  if ((v8 & 0x40) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 84);
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v11 >= 0) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 11;
    }
    v2 += v13;
  }
  if ((v8 & 0x80) != 0)
  {
    int v14 = *(_DWORD *)(a1 + 88);
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v14 >= 0) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 11;
    }
    v2 += v16;
  }
LABEL_30:
  if ((v8 & 0x300) != 0)
  {
    if ((v8 & 0x100) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 92);
      if (v17 < 0) {
        uint64_t v18 = 11;
      }
      else {
        uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v18;
    }
    if ((v8 & 0x200) != 0)
    {
      int v26 = *(_DWORD *)(a1 + 96);
      if (v26 < 0) {
        uint64_t v27 = 11;
      }
      else {
        uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v27;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v30 + 31) < 0) {
      uint64_t v31 = *(void *)(v30 + 16);
    }
    else {
      uint64_t v31 = *(unsigned __int8 *)(v30 + 31);
    }
    v2 += v31;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_121064C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122C74C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      int v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    int v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 56), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_39;
    }
LABEL_31:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v17 = *(void *)(a1 + 64);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v19 = (void *)*v19;
      }
      uint64_t v17 = sub_15C1CB4((uint64_t)v19);
      *(void *)(a1 + 64) = v17;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v20 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v20 = &off_253F2E8;
    }
    sub_15B04F0(v17, (uint64_t)v20);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v21 = *(void **)(a1 + 72);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      uint64_t v21 = sub_18302C8((uint64_t)v23);
      *(void *)(a1 + 72) = v21;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v24 = &off_2549800;
    }
    sub_1792730((uint64_t)v21, (uint64_t)v24);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_48;
    }
LABEL_47:
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_49;
    }
LABEL_48:
    *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_14;
    }
LABEL_49:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0) {
      *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
    }
    if ((v9 & 0x200) != 0) {
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_12108B0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B06D8(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_1792864(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12108FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.OfflineAnalyticsMetadata");
}

double sub_121090C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_249D930;
  *(void *)(a1 + 8) = v3;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_1210940(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_252E5A8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_120907C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_120C03C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_120F660(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1210A30(uint64_t a1)
{
  sub_1210940(a1);

  operator delete();
}

uint64_t sub_1210A68(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      double result = sub_12091D0(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    double result = sub_120C14C(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      double result = sub_120F7AC(*(void *)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1210AF0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    uint64_t v24 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void *)(a1 + 40);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        sub_1212418((uint64_t)v17);
        uint64_t v16 = v18;
        *(void *)(a1 + 40) = v18;
        uint64_t v7 = v24;
      }
      uint64_t v15 = (char *)sub_1210E28(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_38;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v19 = *(void **)(a1 + 32);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      unint64_t v19 = sub_1212010((uint64_t)v20);
      *(void *)(a1 + 32) = v19;
      uint64_t v7 = v24;
    }
    uint64_t v15 = (char *)sub_1210D98(a3, (uint64_t)v19, (unsigned __int8 *)v7);
LABEL_38:
    uint64_t v24 = v15;
    if (!v15) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 24);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      sub_1211DF0((uint64_t)v22);
      uint64_t v21 = v23;
      *(void *)(a1 + 24) = v23;
      uint64_t v7 = v24;
    }
    uint64_t v15 = (char *)sub_1210D08(a3, v21, (unsigned __int8 *)v7);
    goto LABEL_38;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

uint64_t sub_1210D08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1209304(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1210D98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120C214(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1210E28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120F8DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1210EB8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1209A78(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_120C58C(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_120FEE0(v13, (unint64_t)v15, a3);
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_12110A8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_1209F50(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_120C758(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_12103A8(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_12111B0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_30;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_1211DF0((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_252E320;
    }
    sub_120A24C(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  unint64_t v9 = *(void **)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    unint64_t v9 = sub_1212010((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_252E410;
  }
  sub_120C888((uint64_t)v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      sub_1212418((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_252E540;
    }
    sub_121064C(v13, (uint64_t)v16);
  }
LABEL_30:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_121130C(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1210A68(a1);
    sub_12111B0(a1, a2);
  }
}

uint64_t sub_1211358(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_120A480(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if ((*(unsigned char *)(v4 + 16) & 2) != 0)
    {
      uint64_t result = sub_12B5BD8(*(void *)(v4 + 56));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_12108B0(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_12113C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.OfflineSearchAnalyicsMetadata");
}

double sub_12113D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_249D9B0;
  *(void *)(a1 + 8) = v3;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_1211408(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_252E5D8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_120A4DC(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_120EF94(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_120F660(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12114F8(uint64_t a1)
{
  sub_1211408(a1);

  operator delete();
}

uint64_t sub_1211530(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      double result = sub_120A5E0(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    double result = sub_120F04C(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      double result = sub_120F7AC(*(void *)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12115B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v16 = *(void *)(a1 + 40);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        sub_1212418((uint64_t)v17);
        uint64_t v16 = v18;
        *(void *)(a1 + 40) = v18;
        uint64_t v7 = v23;
      }
      uint64_t v15 = (char *)sub_1210E28(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_38;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v19 = *(void *)(a1 + 32);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_1212378((uint64_t)v20);
      *(void *)(a1 + 32) = v19;
      uint64_t v7 = v23;
    }
    uint64_t v15 = sub_1211860(a3, v19, (unsigned __int8 *)v7);
LABEL_38:
    uint64_t v23 = v15;
    if (!v15) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void **)(a1 + 24);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_1211E84((uint64_t)v22);
      *(void *)(a1 + 24) = v21;
      uint64_t v7 = v23;
    }
    uint64_t v15 = (char *)sub_12117D0(a3, (uint64_t)v21, (unsigned __int8 *)v7);
    goto LABEL_38;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_12117D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120A684(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1211860(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_120F0C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_12118F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_120AB24(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 40);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_120F2F8(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_120FEE0(v13, (unint64_t)v15, a3);
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1211AE0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_120AE18(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_120F43C(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_12103A8(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1211BE8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) == 0) {
    goto LABEL_30;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(std::string **)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = (std::string *)sub_1211E84((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_252E378;
    }
    sub_120AFA8(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      unsigned int v11 = (void *)*v11;
    }
    uint64_t v9 = sub_1212378((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(void *(****)(void *))(a2 + 32);
  }
  else {
    uint64_t v12 = &off_252E510;
  }
  sub_120F4EC(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      sub_1212418((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_252E540;
    }
    sub_121064C(v13, (uint64_t)v16);
  }
LABEL_30:
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1211D44(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1211530(a1);
    sub_1211BE8(a1, a2);
  }
}

uint64_t sub_1211D90(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_120F5C4(*(void *)(a1 + 32) + 16);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_12108B0(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1211DE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.search.analytics.OfflineAutocompleteAnalyicsMetadata");
}

double sub_1211DF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_249D330;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  *(void *)(v2 + 40) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(void *)(v2 + 80) = 0;
  return result;
}

void *sub_1211E84(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_249D3B0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  result[5] = 0;
  *(void *)((char *)result + 45) = 0;
  return result;
}

void *sub_1211F0C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_249D430;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1211F88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249D4B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_1212010(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249D530;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  result[7] = 0;
  return result;
}

void *sub_12120B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249D5B0;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_121212C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249D630;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_12121A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249D6B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

double sub_1212248(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_249D730;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = &qword_2550250;
  *(void *)(v2 + 32) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  return result;
}

uint64_t sub_12122D8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249D7B0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1212378(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249D830;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1212418(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_249D8B0;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  *(void *)(v2 + 56) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_DWORD *)(v2 + 96) = 0;
  return result;
}

double sub_12124C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_249D930;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

double sub_1212544(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_249D9B0;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

void *sub_12125C0(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *double result = off_249DA30;
  result[1] = v3;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0x100000000;
  return result;
}

uint64_t sub_1212604(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_249DA30;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    unsigned int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

void sub_12126E8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_121271C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12127D4(uint64_t a1)
{
  sub_121271C(a1);

  operator delete();
}

uint64_t sub_121280C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x1C) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0x100000000;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1212898(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_31;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        v5 |= 8u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v27 = sub_188C138((uint64_t)v8, v15);
          *(void *)uint64_t v31 = v27;
          *(_DWORD *)(a1 + 48) = v28;
          if (!v27) {
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v31 = v16;
          *(_DWORD *)(a1 + 48) = v15;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_32;
        }
        unint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          *(void *)uint64_t v31 = sub_188C138((uint64_t)v8, (v21 - 128));
          if (!*(void *)v31) {
            goto LABEL_53;
          }
          unint64_t v19 = v29;
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)uint64_t v31 = v18;
        }
        if ((v19 - 1) > 1)
        {
          if (*v7) {
            unint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 52) = v19;
        }
        goto LABEL_40;
      case 4u:
        if (v9 != 33) {
          goto LABEL_32;
        }
        v5 |= 4u;
        *(void *)(a1 + 40) = *(void *)v8;
        *(void *)uint64_t v31 = v8 + 8;
        goto LABEL_40;
      case 5u:
        if (v9 != 42) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
LABEL_31:
        uint64_t v23 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v24 = (void *)sub_188C244(v23, *(char **)v31, (uint64_t)a3);
        goto LABEL_39;
      default:
LABEL_32:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(char **)v31;
          }
          uint64_t v24 = sub_1885AC0(v9, v26, v8, a3);
LABEL_39:
          *(void *)uint64_t v31 = v24;
          if (!v24) {
            goto LABEL_53;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

unsigned char *sub_1212BA8(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 52);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    unsigned char *v4 = 33;
    *(void *)(v4 + 1) = v13;
    v4 += 9;
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1212DC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_24;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 48);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    v2 += v11;
  }
  if ((v1 & 0x10) != 0)
  {
    int v12 = *(_DWORD *)(a1 + 52);
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v12 >= 0) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 11;
    }
    v2 += v14;
  }
LABEL_24:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1212F14(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
LABEL_19:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_8;
    }
LABEL_20:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_121302C(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_121280C((uint64_t)result);
    return sub_1212F14(v4, a2);
  }
  return result;
}

uint64_t sub_1213078()
{
  return 1;
}

uint64_t sub_1213080(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a2 + 24) = *(void *)(result + 24);
  *(void *)(result + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a2 + 32) = *(void *)(result + 32);
  *(void *)(result + 32) = v4;
  uint64_t v5 = *(void *)(result + 40);
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  LODWORD(v5) = *(_DWORD *)(result + 48);
  *(_DWORD *)(result + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 48) = v5;
  LODWORD(v5) = *(_DWORD *)(result + 52);
  *(_DWORD *)(result + 52) = *(_DWORD *)(a2 + 52);
  *(_DWORD *)(a2 + 52) = v5;
  return result;
}

void *sub_12130F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.TriggerEntity");
}

uint64_t sub_1213104(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_249DAB0;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1213148(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249DAB0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122DCE4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_1213274(_Unwind_Exception *a1)
{
  sub_122D564(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_12132BC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_122D564((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1213368(uint64_t a1)
{
  sub_12132BC(a1);

  operator delete();
}

uint64_t sub_12133A0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_121280C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1213454(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v18 = v8 + 1;
    LODWORD(v17) = *v8;
    if ((v17 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v19 = *v18;
    uint64_t v17 = v17 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_25:
      *(void *)uint64_t v31 = v18;
      *(_DWORD *)(a1 + 56) = v17;
      goto LABEL_31;
    }
    uint64_t v29 = sub_188C138((uint64_t)v8, v17);
    *(void *)uint64_t v31 = v29;
    *(_DWORD *)(a1 + 56) = v30;
    if (!v29) {
      goto LABEL_47;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 8);
      int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        int v21 = (uint64_t *)*v21;
      }
      uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 48), v21);
      unint64_t v16 = (void *)sub_188C244(v22, *(char **)v31, (uint64_t)a3);
LABEL_30:
      *(void *)uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_47;
      }
      goto LABEL_31;
    }
  }
  else if (v12 == 1 && v9 == 10)
  {
    uint64_t v23 = v8 - 1;
    while (1)
    {
      uint64_t v24 = (unsigned __int8 *)(v23 + 1);
      *(void *)uint64_t v31 = v23 + 1;
      BOOL v25 = *(_DWORD **)(a1 + 40);
      if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
      {
        *(_DWORD *)(a1 + 32) = v26 + 1;
        uint64_t v27 = *(void *)&v25[2 * v26 + 2];
      }
      else
      {
        int v28 = sub_12247EC(*(void *)(a1 + 24));
        uint64_t v27 = sub_188CDC8(a1 + 24, (uint64_t)v28);
        uint64_t v24 = *(unsigned __int8 **)v31;
      }
      uint64_t v23 = (char *)sub_12136CC(a3, v27, v24);
      *(void *)uint64_t v31 = v23;
      if (!v23) {
        goto LABEL_47;
      }
      if (*(void *)a3 <= (unint64_t)v23 || *v23 != 10) {
        goto LABEL_31;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    unint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

uint64_t sub_12136CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1212898(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_121375C(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1212BA8(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 56);
    *__dst = 24;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return __dst;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)__dst >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(__dst, v18, (int)v19);
    __dst += v20;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, __dst);
}

uint64_t sub_1213940(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1212DC4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v12 = *(_DWORD *)(a1 + 56);
      if (v12 < 0) {
        uint64_t v13 = 11;
      }
      else {
        uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v13;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1213A74(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_122DCE4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1213B9C(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_12133A0((uint64_t)result);
    return sub_1213A74(v4, a2);
  }
  return result;
}

uint64_t sub_1213BE8()
{
  return 1;
}

__n128 sub_1213BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  LODWORD(v7) = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a2 + 56) = v7;
  return result;
}

void *sub_1213C54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.TriggerEntityByLanguage");
}

uint64_t sub_1213C64(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)__n128 result = off_249DB30;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a2;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_1213CA0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122D664(a1 + 5);
  sub_122D5E4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1213D2C(void *a1)
{
  sub_1213CA0(a1);

  operator delete();
}

uint64_t sub_1213D64(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      __n128 result = sub_12133A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      __n128 result = sub_1205E88(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  int v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_1213E08(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            unint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              sub_1208678(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_12140E0(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          int v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_1224878(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            int v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = (char *)sub_1214050(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

uint64_t sub_1214050(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1213454(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12140E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12060C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1214170(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_121375C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1206C7C(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1214338(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1213940(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1207478(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_1214438(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_122DD70((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_122DDFC((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_121456C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    BOOL v5 = sub_1207E28(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while (v5);
  return v3 < 1;
}

void *sub_12145C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.TriggerEntityCollection");
}

uint64_t sub_12145D4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  BOOL v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12146A8(uint64_t a1)
{
  sub_12145D4(a1);

  operator delete();
}

uint64_t sub_12146E0(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0) {
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    goto LABEL_17;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_10:
  unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  *(unsigned char *)unint64_t v3 = 0;
  *(unsigned char *)(v3 + 23) = 0;
  if ((v1 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_17:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_121479C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1]) & 1) == 0)
  {
    char v6 = (void *)(a1 + 8);
    while (1)
    {
      int v7 = (unsigned __int8 *)(*(void *)v26 + 1);
      unsigned int v8 = **(unsigned char **)v26;
      if ((char)**(unsigned char **)v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = (unsigned __int8 *)(*(void *)v26 + 2);
        }
      }
      *(void *)uint64_t v26 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
          if (v11) {
            int v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 40);
          goto LABEL_35;
        case 2u:
          if (v8 == 16)
          {
            uint64_t v14 = v7 - 1;
            while (1)
            {
              *(void *)uint64_t v26 = v14 + 1;
              int v15 = v14[1];
              if ((char)v14[1] < 0)
              {
                int v16 = v15 + (v14[2] << 7);
                int v15 = v16 - 128;
                if ((char)v14[2] < 0)
                {
                  uint64_t v14 = (unsigned __int8 *)sub_188C138((uint64_t)(v14 + 1), (v16 - 128));
                  int v15 = v17;
                }
                else
                {
                  v14 += 3;
                }
              }
              else
              {
                v14 += 2;
              }
              *(void *)uint64_t v26 = v14;
              uint64_t v18 = *(unsigned int *)(a1 + 24);
              if (v18 == *(_DWORD *)(a1 + 28))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v15;
                uint64_t v14 = *(unsigned __int8 **)v26;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v15;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 24) = v19;
              if (!v14) {
                goto LABEL_51;
              }
              if (*(void *)a3 <= (unint64_t)v14 || *v14 != 16) {
                goto LABEL_46;
              }
            }
          }
          if (v8 == 18)
          {
            uint64_t v23 = sub_188C2BC((unsigned int *)(a1 + 24), v7, (uint64_t)a3);
          }
          else
          {
LABEL_38:
            if (v8) {
              BOOL v24 = (v8 & 7) == 4;
            }
            else {
              BOOL v24 = 1;
            }
            if (v24)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                return *(void *)v26;
              }
LABEL_51:
              *(void *)uint64_t v26 = 0;
              return *(void *)v26;
            }
            if (*v6)
            {
              uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v7 = *(unsigned __int8 **)v26;
            }
            uint64_t v23 = sub_1885AC0(v8, v25, (char *)v7, a3);
          }
LABEL_45:
          *(void *)uint64_t v26 = v23;
          if (!v23) {
            goto LABEL_51;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            return *(void *)v26;
          }
          break;
        case 3u:
          if (v8 != 26) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v20 = *(void *)(a1 + 8);
          int v12 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
          if (v20) {
            int v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 48);
          goto LABEL_35;
        case 4u:
          if (v8 != 34) {
            goto LABEL_38;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v21 = *(void *)(a1 + 8);
          int v12 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
          if (v21) {
            int v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 56);
LABEL_35:
          uint64_t v22 = (std::string *)sub_1880F84(v13, v12);
          uint64_t v23 = (void *)sub_188C244(v22, *(char **)v26, (uint64_t)a3);
          goto LABEL_45;
        default:
          goto LABEL_38;
      }
    }
  }
  return *(void *)v26;
}

unsigned char *sub_1214A98(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 24);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v9 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 4) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    int v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    int v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1214C58(uint64_t a1)
{
  uint64_t result = sub_188D498((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 7) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v8 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_5;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0)
  {
LABEL_5:
    unint64_t v4 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1214D9C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v9, v11);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_14;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v12 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v12, v14);
    if ((v8 & 4) != 0)
    {
LABEL_14:
      uint64_t v15 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (uint64_t *)*v17;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v15, v17);
    }
  }
LABEL_17:
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1214EF4()
{
  return 1;
}

void *sub_1214EFC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.Abbreviation");
}

uint64_t sub_1214F0C(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_249DC30;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a2;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a2;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

void *sub_1214F50(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_122D7E4(a1 + 8);
  sub_122D764(a1 + 5);
  sub_122D6E4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1214FE8(void *a1)
{
  sub_1214F50(a1);

  operator delete();
}

uint64_t sub_1215020(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12146E0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1215CF4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_12164DC(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  unint64_t v11 = (uint64_t *)(v1 + 8);
  if (v12)
  {
    return sub_188B4AC(v11);
  }
  return result;
}

char *sub_12150EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  if ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v33 + 1;
      unsigned int v8 = *v33;
      if (*v33 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v33 + 2;
        }
      }
      uint64_t v33 = v7;
      unsigned int v11 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          uint64_t v15 = v7 - 1;
          while (1)
          {
            std::string::size_type v16 = (unsigned __int8 *)(v15 + 1);
            uint64_t v33 = v15 + 1;
            uint64_t v17 = *(_DWORD **)(a1 + 80);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 72), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 72) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              uint64_t v20 = sub_1224BB8(*(void *)(a1 + 64));
              uint64_t v19 = sub_188CDC8(a1 + 64, v20);
              std::string::size_type v16 = (unsigned __int8 *)v33;
            }
            uint64_t v15 = (char *)sub_12154F4(a3, v19, v16);
            uint64_t v33 = v15;
            if (!v15) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v21 = v7 - 1;
          while (1)
          {
            uint64_t v22 = (unsigned __int8 *)(v21 + 1);
            uint64_t v33 = v21 + 1;
            uint64_t v23 = *(_DWORD **)(a1 + 56);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 48), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 48) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              uint64_t v26 = sub_1224B1C(*(void *)(a1 + 40));
              uint64_t v25 = sub_188CDC8(a1 + 40, v26);
              uint64_t v22 = (unsigned __int8 *)v33;
            }
            uint64_t v21 = (char *)sub_1215464(a3, v25, v22);
            uint64_t v33 = v21;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 1 && v8 == 10)
      {
        uint64_t v27 = v7 - 1;
        while (1)
        {
          int v28 = (unsigned __int8 *)(v27 + 1);
          uint64_t v33 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 32);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 24), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 24) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_12249C4(*(void *)(a1 + 16));
            uint64_t v31 = sub_188CDC8(a1 + 16, (uint64_t)v32);
            int v28 = (unsigned __int8 *)v33;
          }
          uint64_t v27 = (char *)sub_12153D4(a3, v31, v28);
          uint64_t v33 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 10) {
            goto LABEL_50;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v33;
      }
      uint64_t v33 = (char *)sub_1885AC0(v8, v14, v7, a3);
      if (!v33) {
        return 0;
      }
LABEL_50:
      if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
        return v33;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v33;
    }
    return 0;
  }
  return v33;
}

uint64_t sub_12153D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_121479C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1215464(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1215D4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12154F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1216534(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1215584(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1214A98(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1215FC4(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 64);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_1216814(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_12157D0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1214C58(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_12161AC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1216A24(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v16 += v25;
  }
  *(_DWORD *)(a1 + 88) = v16;
  return v16;
}

std::string *sub_1215920(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_122DE88((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_122DF14((uint64_t *)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = (std::string *)sub_122DFA0((uint64_t *)&v3[2].__r_.__value_.__r.__words[2], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1215AB8()
{
  return 1;
}

void *sub_1215AC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.TokenInfo");
}

uint64_t sub_1215AD0(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_249DCB0;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1215B08(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249DCB0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_1215BFC(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1215C40(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1215CBC(void *a1)
{
  sub_1215C40(a1);

  operator delete();
}

uint64_t sub_1215CF4(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1215D4C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    int v9 = (char *)(*(void *)v28 + 1);
    unsigned int v10 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        int v9 = (char *)sub_188C180(*(uint64_t *)v28, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)int v28 = v9;
    if (v10 >> 3 != 2) {
      break;
    }
    if (v10 != 16) {
      goto LABEL_13;
    }
    int v17 = v9 + 1;
    LODWORD(v16) = *v9;
    if ((v16 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v18 = *v17;
    uint64_t v16 = v16 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      int v17 = v9 + 2;
LABEL_25:
      *(void *)int v28 = v17;
      *(_DWORD *)(a1 + 48) = v16;
      int v5 = 1;
      goto LABEL_38;
    }
    uint64_t v26 = sub_188C138((uint64_t)v9, v16);
    *(void *)int v28 = v26;
    *(_DWORD *)(a1 + 48) = v27;
    int v5 = 1;
    if (!v26) {
      goto LABEL_43;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v10 >> 3 == 1 && v10 == 10)
  {
    uint64_t v19 = v9 - 1;
    while (1)
    {
      uint64_t v20 = (char *)(v19 + 1);
      *(void *)int v28 = v19 + 1;
      uint64_t v21 = *(_DWORD **)(a1 + 40);
      if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
      {
        *(_DWORD *)(a1 + 32) = v22 + 1;
        unint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
      }
      else
      {
        if (!*v7) {
          operator new();
        }
        void *v25 = v24;
        v25[1] = sub_3A6EDC;
        void *v24 = 0;
        v24[1] = 0;
        int v24[2] = 0;
        unint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
        uint64_t v20 = *(char **)v28;
      }
      uint64_t v19 = sub_188C244(v23, v20, (uint64_t)a3);
      *(void *)int v28 = v19;
      if (!v19) {
        goto LABEL_43;
      }
      if (*(void *)a3 <= (unint64_t)v19 || *v19 != 10) {
        goto LABEL_38;
      }
    }
  }
LABEL_13:
  if (v10) {
    BOOL v14 = (v10 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v8)
    {
      uint64_t v15 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v9 = *(char **)v28;
    }
    *(void *)int v28 = sub_1885AC0(v10, v15, v9, a3);
    if (!*(void *)v28) {
      goto LABEL_43;
    }
    goto LABEL_38;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)int v28 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v28;
}

char *sub_1215FC4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return __dst;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(__dst, v18, (int)v19);
    __dst += v20;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, __dst);
}

uint64_t sub_12161AC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v7 = *(_DWORD *)(a1 + 48);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_121627C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1216368(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_1215CF4((uint64_t)result);
    return sub_121627C(v4, a2);
  }
  return result;
}

uint64_t sub_12163B4()
{
  return 1;
}

__n128 sub_12163BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v6;
  LODWORD(v6) = *(_DWORD *)(a1 + 48);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_DWORD *)(a2 + 48) = v6;
  return result;
}

void *sub_1216410@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.Attribute");
}

void *sub_1216420(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 5);
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12164A4(void *a1)
{
  sub_1216420(a1);

  operator delete();
}

uint64_t sub_12164DC(uint64_t a1)
{
  sub_188CC00(a1 + 16);
  uint64_t result = sub_188CC00(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_1216534(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (uint64_t **)(a1 + 40);
    int v7 = (uint64_t **)(a1 + 16);
    uint64_t v8 = (void *)(a1 + 8);
    while (1)
    {
      int v9 = (char *)(*(void *)v30 + 1);
      unsigned int v10 = **(unsigned char **)v30;
      if ((char)**(unsigned char **)v30 < 0)
      {
        unsigned int v11 = v10 + (*v9 << 7);
        unsigned int v10 = v11 - 128;
        if (*v9 < 0)
        {
          int v9 = (char *)sub_188C180(*(uint64_t *)v30, v11 - 128);
          unsigned int v10 = v12;
        }
        else
        {
          int v9 = (char *)(*(void *)v30 + 2);
        }
      }
      *(void *)uint64_t v30 = v9;
      if (v10 >> 3 == 2)
      {
        if (v10 == 18)
        {
          uint64_t v16 = v9 - 1;
          while (1)
          {
            unint64_t v17 = (char *)(v16 + 1);
            *(void *)uint64_t v30 = v16 + 1;
            int v18 = *(_DWORD **)(a1 + 56);
            if (v18 && (uint64_t v19 = *(int *)(a1 + 48), (int)v19 < *v18))
            {
              *(_DWORD *)(a1 + 48) = v19 + 1;
              uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              *uint64_t v22 = v21;
              v22[1] = sub_3A6EDC;
              void *v21 = 0;
              v21[1] = 0;
              v21[2] = 0;
              uint64_t v20 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v21);
              unint64_t v17 = *(char **)v30;
            }
            uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
            *(void *)uint64_t v30 = v16;
            if (!v16) {
              goto LABEL_48;
            }
            if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
              goto LABEL_43;
            }
          }
        }
      }
      else if (v10 >> 3 == 1 && v10 == 10)
      {
        unint64_t v23 = v9 - 1;
        while (1)
        {
          unint64_t v24 = (char *)(v23 + 1);
          *(void *)uint64_t v30 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 32);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 24), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 24) = v26 + 1;
            int v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v29 = v28;
            v29[1] = sub_3A6EDC;
            void *v28 = 0;
            v28[1] = 0;
            int v28[2] = 0;
            int v27 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v28);
            unint64_t v24 = *(char **)v30;
          }
          unint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)uint64_t v30 = v23;
          if (!v23) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 10) {
            goto LABEL_43;
          }
        }
      }
      if (!v10 || (v10 & 7) == 4) {
        break;
      }
      if (*v8)
      {
        uint64_t v15 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v9 = *(char **)v30;
      }
      *(void *)uint64_t v30 = sub_1885AC0(v10, v15, v9, a3);
      if (!*(void *)v30) {
        goto LABEL_48;
      }
LABEL_43:
      if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
        return *(void *)v30;
      }
    }
    if (v9)
    {
      a3[10].i32[0] = v10 - 1;
      return *(void *)v30;
    }
LABEL_48:
    *(void *)uint64_t v30 = 0;
  }
  return *(void *)v30;
}

char *sub_1216814(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 48);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      uint64_t v15 = *(void **)(*(void *)(a1 + 56) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          uint64_t v15 = (void *)*v15;
        }
        unint64_t v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1216A24(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  uint64_t v8 = v3 + v7;
  if ((int)v7 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v8 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      --v7;
    }
    while (v7);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v8 += v16;
  }
  *(_DWORD *)(a1 + 64) = v8;
  return v8;
}

std::string *sub_1216B14(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1216C48()
{
  return 1;
}

void *sub_1216C50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.MisspelledTokenCorrection");
}

void *sub_1216C60(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_249DDB0;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

uint64_t sub_1216CA0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249DDB0;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122E02C(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    int v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_1216DC4(_Unwind_Exception *a1)
{
  sub_122D864(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1216E0C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_122D864((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1216EB8(uint64_t a1)
{
  sub_1216E0C(a1);

  operator delete();
}

uint64_t sub_1216EF0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_130FEFC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1216FA0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)unint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)unint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    unint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)unint64_t v24 = v15 + 1;
      unint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_131B694(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = *(unsigned __int8 **)v24;
      }
      unint64_t v15 = sub_12171A0(a3, v19, v16);
      *(void *)unint64_t v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)unint64_t v24 = 0;
  return *(void *)v24;
}

char *sub_12171A0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_130FFB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1217230(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_131046C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1217398(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1310828(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1217490(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122E02C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 48), v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1217598(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_1216EF0(a1);
    sub_1217490(a1, a2);
  }
}

uint64_t sub_12175E4()
{
  return 1;
}

__n128 sub_12175EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v7;
  return result;
}

void *sub_1217640@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.ClientRankingModel");
}

double sub_1217650(void *a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *a1 = off_249DE30;
  a1[1] = v3;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = a2;
  double result = 0.0;
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = a2;
  a1[9] = &qword_2550250;
  return result;
}

uint64_t sub_12176A0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249DE30;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    unint64_t v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    sub_188C80C((unsigned int *)(a1 + 56), v9);
    uint64_t v10 = *(void **)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy(v10, *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_1217810(_Unwind_Exception *a1)
{
  sub_1889DA8(v4);
  sub_1889DA8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1217874(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DA8(a1 + 56);
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_121792C(uint64_t a1)
{
  sub_1217874(a1);

  operator delete();
}

uint64_t sub_1217964(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12179B4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  uint64_t v6 = (unsigned int *)(a1 + 56);
  int v7 = (unsigned int *)(a1 + 40);
  unint64_t v8 = (unsigned int *)(a1 + 24);
  int v9 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v10 = (char *)(*(void *)v33 + 1);
    unsigned int v11 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v12 = v11 + (*v10 << 7);
      unsigned int v11 = v12 - 128;
      if (*v10 < 0)
      {
        uint64_t v10 = (char *)sub_188C180(*(uint64_t *)v33, v12 - 128);
        unsigned int v11 = v13;
      }
      else
      {
        uint64_t v10 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v10;
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 10) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (std::string *)sub_1880F84((void *)(a1 + 72), v15);
        unint64_t v17 = (void *)sub_188C244(v16, *(char **)v33, (uint64_t)a3);
        goto LABEL_51;
      case 2u:
        if (v11 != 21)
        {
          if (v11 == 18)
          {
            uint64_t v30 = a1 + 24;
            goto LABEL_43;
          }
          goto LABEL_44;
        }
        uint64_t v18 = v10 - 1;
        unsigned int v19 = *v8;
        do
        {
          uint64_t v20 = (uint64_t)(v18 + 1);
          *(void *)uint64_t v33 = v18 + 1;
          int v21 = *(_DWORD *)(v18 + 1);
          if (v19 == *(_DWORD *)(a1 + 28))
          {
            sub_188C80C((unsigned int *)(a1 + 24), v19 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v21;
            uint64_t v20 = *(void *)v33;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v21;
          }
          *unint64_t v8 = ++v19;
          uint64_t v18 = (char *)(v20 + 4);
          *(void *)uint64_t v33 = v20 + 4;
        }
        while (*(void *)a3 > (unint64_t)(v20 + 4) && *v18 == 21);
        goto LABEL_52;
      case 3u:
        if (v11 != 29)
        {
          if (v11 == 26)
          {
            uint64_t v30 = a1 + 40;
            goto LABEL_43;
          }
          goto LABEL_44;
        }
        uint64_t v22 = v10 - 1;
        unsigned int v23 = *v7;
        do
        {
          uint64_t v24 = (uint64_t)(v22 + 1);
          *(void *)uint64_t v33 = v22 + 1;
          int v25 = *(_DWORD *)(v22 + 1);
          if (v23 == *(_DWORD *)(a1 + 44))
          {
            sub_188C80C((unsigned int *)(a1 + 40), v23 + 1);
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v23) = v25;
            uint64_t v24 = *(void *)v33;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v23) = v25;
          }
          *int v7 = ++v23;
          uint64_t v22 = (char *)(v24 + 4);
          *(void *)uint64_t v33 = v24 + 4;
        }
        while (*(void *)a3 > (unint64_t)(v24 + 4) && *v22 == 29);
        goto LABEL_52;
      case 4u:
        if (v11 == 37)
        {
          uint64_t v26 = v10 - 1;
          unsigned int v27 = *v6;
          do
          {
            uint64_t v28 = (uint64_t)(v26 + 1);
            *(void *)uint64_t v33 = v26 + 1;
            int v29 = *(_DWORD *)(v26 + 1);
            if (v27 == *(_DWORD *)(a1 + 60))
            {
              sub_188C80C((unsigned int *)(a1 + 56), v27 + 1);
              *(_DWORD *)(*(void *)(a1 + 64) + 4 * v27) = v29;
              uint64_t v28 = *(void *)v33;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 64) + 4 * v27) = v29;
            }
            *uint64_t v6 = ++v27;
            uint64_t v26 = (char *)(v28 + 4);
            *(void *)uint64_t v33 = v28 + 4;
          }
          while (*(void *)a3 > (unint64_t)(v28 + 4) && *v26 == 37);
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (v11 == 34)
        {
          uint64_t v30 = a1 + 56;
LABEL_43:
          unint64_t v17 = (void *)sub_188C33C(v30, v10, a3);
LABEL_51:
          *(void *)uint64_t v33 = v17;
          if (!v17) {
            return 0;
          }
          goto LABEL_52;
        }
LABEL_44:
        if (v11) {
          BOOL v31 = (v11 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v9)
          {
            uint64_t v32 = (std::string *)((*v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v10 = *(char **)v33;
          }
          unint64_t v17 = sub_1885AC0(v11, v32, v10, a3);
          goto LABEL_51;
        }
        if (!v10) {
          return 0;
        }
        a3[10].i32[0] = v11 - 1;
        return *(void *)v33;
      default:
        goto LABEL_44;
    }
  }
}

char *sub_1217D40(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 4 * v6;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      int v9 = *(_DWORD *)(*(void *)(a1 + 32) + v7);
      char *v4 = 21;
      *(_DWORD *)(v4 + 1) = v9;
      v4 += 5;
      v7 += 4;
    }
    while (v8 != v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 40);
  if ((int)v10 >= 1)
  {
    uint64_t v11 = 0;
    uint64_t v12 = 4 * v10;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      int v13 = *(_DWORD *)(*(void *)(a1 + 48) + v11);
      char *v4 = 29;
      *(_DWORD *)(v4 + 1) = v13;
      v4 += 5;
      v11 += 4;
    }
    while (v12 != v11);
  }
  uint64_t v14 = *(unsigned int *)(a1 + 56);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = 4 * v14;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      int v17 = *(_DWORD *)(*(void *)(a1 + 64) + v15);
      char *v4 = 37;
      *(_DWORD *)(v4 + 1) = v17;
      v4 += 5;
      v15 += 4;
    }
    while (v16 != v15);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1217F2C(uint64_t a1)
{
  uint64_t v1 = 5 * *(unsigned int *)(a1 + 24)
     + *(unsigned int *)(a1 + 40)
     + 4 * *(unsigned int *)(a1 + 40)
     + *(unsigned int *)(a1 + 56)
     + 4 * *(unsigned int *)(a1 + 56);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    v1 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_1217FCC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = SLODWORD(v3[2].__r_.__value_.__r.__words[1]);
    sub_188C80C((unsigned int *)&v3[2].__r_.__value_.__r.__words[1], v12 + v11);
    std::string::size_type v13 = v3[2].__r_.__value_.__r.__words[2];
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 56);
    uint64_t result = (std::string *)memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3], v14, v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1218130(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_1217964((uint64_t)result);
    return sub_1217FCC(v4, a2);
  }
  return result;
}

uint64_t sub_121817C()
{
  return 1;
}

__n128 sub_1218184(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  __n128 result = *(__n128 *)(a2 + 56);
  *(__n128 *)(a1 + 56) = result;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v8;
  uint64_t v10 = *(void *)(a2 + 72);
  *(void *)(a2 + 72) = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = v10;
  return result;
}

void *sub_12181E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.ClientRankingServerScoreModel");
}

uint64_t sub_12181F8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1218298(uint64_t a1)
{
  sub_12181F8(a1);

  operator delete();
}

uint64_t sub_12182D0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1218318(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v17 = v8 + 1;
    LODWORD(v16) = *v8;
    if ((v16 & 0x80) == 0) {
      goto LABEL_24;
    }
    int v18 = *v17;
    uint64_t v16 = v16 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v17 = v8 + 2;
LABEL_24:
      *(void *)uint64_t v24 = v17;
      *(_DWORD *)(a1 + 32) = v16;
      goto LABEL_29;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v16);
    *(void *)uint64_t v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_29:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    unint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      unint64_t v20 = (uint64_t *)*v20;
    }
    int v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    std::string::size_type v15 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_28:
    *(void *)uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_36;
    }
    goto LABEL_29;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v24;
    }
    std::string::size_type v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_28;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  *(void *)uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_12184F0(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1218638(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1218704()
{
  return 1;
}

void *sub_121870C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.LocalePair");
}

uint64_t sub_121871C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12187C4(uint64_t a1)
{
  sub_121871C(a1);

  operator delete();
}

uint64_t sub_12187FC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1218880(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    int v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      int v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        unint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        void *v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        unint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_1218AD4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1218C60(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1218D40()
{
  return 1;
}

void *sub_1218D48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.RankerModelToRegionsPair");
}

uint64_t sub_1218D58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1218E10(uint64_t a1)
{
  sub_1218D58(a1);

  operator delete();
}

uint64_t sub_1218E48(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1218EC4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      unint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(char **)v20;
    }
    unint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_121906C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1219158(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1219234()
{
  return 1;
}

void *sub_121923C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.LanguageToRevGeoTitle");
}

void *sub_121924C(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12192C8(void *a1)
{
  sub_121924C(a1);

  operator delete();
}

uint64_t sub_1219300(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1219358(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    return *(void *)v28;
  }
  unint64_t v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v28 + 1);
    unsigned int v9 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v8;
    if (v9 >> 3 == 2)
    {
      if (v9 == 18)
      {
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (char *)(v15 + 1);
          *(void *)uint64_t v28 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(std::string **)&v17[2 * v18 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v21 = v20;
            v21[1] = sub_3A6EDC;
            *unint64_t v20 = 0;
            v20[1] = 0;
            int v20[2] = 0;
            uint64_t v19 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(char **)v28;
          }
          uint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
          *(void *)uint64_t v28 = v15;
          if (!v15) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_39;
          }
        }
      }
    }
    else if (v9 >> 3 == 1 && v9 == 8)
    {
      uint64_t v22 = v8 + 1;
      unint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      int v24 = *v22;
      int v25 = v23 + (v24 << 7);
      unint64_t v23 = (v25 - 128);
      if (v24 < 0)
      {
        *(void *)uint64_t v28 = sub_188C138((uint64_t)v8, (v25 - 128));
        if (!*(void *)v28) {
          goto LABEL_50;
        }
        unint64_t v23 = v26;
      }
      else
      {
        uint64_t v22 = v8 + 2;
LABEL_36:
        *(void *)uint64_t v28 = v22;
      }
      if (v23 > 3)
      {
        if (*v7) {
          unsigned int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v23, v27);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v23;
      }
      goto LABEL_39;
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v28;
    }
    *(void *)uint64_t v28 = sub_1885AC0(v9, v14, v8, a3);
    if (!*(void *)v28) {
      goto LABEL_50;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      return *(void *)v28;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v28;
  }
LABEL_50:
  *(void *)uint64_t v28 = 0;
  return *(void *)v28;
}

char *sub_12195FC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 32);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = 0;
    uint64_t v11 = 8 * v9;
    do
    {
      uint64_t v12 = *(void **)(*(void *)(a1 + 40) + v10 + 8);
      if (*((char *)v12 + 23) < 0)
      {
        int64_t v13 = v12[1];
        if (v13 > 127) {
          goto LABEL_19;
        }
      }
      else
      {
        int64_t v13 = *((unsigned __int8 *)v12 + 23);
      }
      if (*(void *)a3 - (void)v4 + 14 >= v13)
      {
        char *v4 = 18;
        v4[1] = v13;
        if (*((char *)v12 + 23) < 0) {
          uint64_t v12 = (void *)*v12;
        }
        unint64_t v14 = v4 + 2;
        memcpy(v14, v12, v13);
        char v4 = &v14[v13];
        goto LABEL_17;
      }
LABEL_19:
      char v4 = (char *)sub_188A868(a3, 2, (uint64_t)v12, v4);
LABEL_17:
      v10 += 8;
    }
    while (v11 != v10);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_12197E4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v7 = *(_DWORD *)(a1 + 48);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v8;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12198B4()
{
  return 1;
}

void *sub_12198BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.CarplayBrowseCategories");
}

uint64_t sub_12198CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1219974(uint64_t a1)
{
  sub_12198CC(a1);

  operator delete();
}

uint64_t sub_12199AC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1219A30(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  uint64_t v6 = (uint64_t **)(a1 + 24);
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)unint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      int v24 = (uint64_t *)*v24;
    }
    int v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)unint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      unint64_t v17 = (char *)(v16 + 1);
      *(void *)unint64_t v26 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        void *v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        unint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)unint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)unint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_1219C84(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1219E10(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1219EF0()
{
  return 1;
}

void *sub_1219EF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.SpellerModelToRegionsPair");
}

uint64_t sub_1219F08(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1219FB0(uint64_t a1)
{
  sub_1219F08(a1);

  operator delete();
}

uint64_t sub_1219FE8(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_121A06C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  uint64_t v6 = (uint64_t **)(a1 + 24);
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)unint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      int v24 = (uint64_t *)*v24;
    }
    int v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)unint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)unint64_t v26 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        void *v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)unint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)unint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_121A2C0(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_121A44C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_121A52C()
{
  return 1;
}

void *sub_121A534@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.SpellerModelToSourcePair");
}

double sub_121A544(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_249E1B0;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a2;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = a2;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = a2;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = a2;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = a2;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = a2;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = 0;
  *(void *)(a1 + 328) = a2;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = a2;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = a2;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = a2;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = a2;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = a2;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = 0;
  *(void *)(a1 + 472) = a2;
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = a2;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 512) = 0;
  *(void *)(a1 + 520) = a2;
  *(void *)(a1 + 536) = 0;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 544) = a2;
  *(void *)(a1 + 560) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 568) = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 956) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(_OWORD *)(a1 + 896) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  *(_OWORD *)(a1 + 880) = 0u;
  *(_OWORD *)(a1 + 832) = 0u;
  *(_OWORD *)(a1 + 848) = 0u;
  *(_OWORD *)(a1 + 800) = 0u;
  *(_OWORD *)(a1 + 816) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_DWORD *)(a1 + 972) = 1;
  return result;
}

void *sub_121A654(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 71);
  sub_1889DE8(a1 + 68);
  sub_1889DE8(a1 + 65);
  sub_1889DE8(a1 + 62);
  sub_1889DE8(a1 + 59);
  sub_1889DE8(a1 + 56);
  sub_1889DE8(a1 + 53);
  sub_1889DE8(a1 + 50);
  sub_1889DE8(a1 + 47);
  sub_1889DE8(a1 + 44);
  sub_122DC64(a1 + 41);
  sub_122DBE4(a1 + 38);
  sub_1889DE8(a1 + 35);
  sub_1889DE8(a1 + 32);
  sub_1889DE8(a1 + 29);
  sub_122DB64(a1 + 26);
  sub_122DAE4(a1 + 23);
  sub_122DA64(a1 + 20);
  sub_122D9E4(a1 + 17);
  sub_122D964(a1 + 14);
  sub_122D8E4(a1 + 11);
  sub_1889DE8(a1 + 8);
  sub_1889DE8(a1 + 5);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_121A7A0(void *a1)
{
  sub_121A654(a1);

  operator delete();
}

uint64_t sub_121A7D8(uint64_t a1)
{
  sub_188CC00(a1 + 40);
  sub_188CC00(a1 + 64);
  uint64_t v2 = *(unsigned int *)(a1 + 96);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_1216EF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 96) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 120);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_1217964(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 144);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_12182D0(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 144) = 0;
  }
  uint64_t v11 = *(unsigned int *)(a1 + 168);
  if ((int)v11 >= 1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_12187FC(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 168) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 192);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 200) + 8);
    do
    {
      uint64_t v16 = *v15++;
      sub_1218E48(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 192) = 0;
  }
  uint64_t v17 = *(unsigned int *)(a1 + 216);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (uint64_t *)(*(void *)(a1 + 224) + 8);
    do
    {
      uint64_t v19 = *v18++;
      sub_1219300(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 216) = 0;
  }
  sub_188CC00(a1 + 232);
  sub_188CC00(a1 + 256);
  sub_188CC00(a1 + 280);
  uint64_t v20 = *(unsigned int *)(a1 + 312);
  if ((int)v20 >= 1)
  {
    int v21 = (uint64_t *)(*(void *)(a1 + 320) + 8);
    do
    {
      uint64_t v22 = *v21++;
      sub_12199AC(v22);
      --v20;
    }
    while (v20);
    *(_DWORD *)(a1 + 312) = 0;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 336);
  if ((int)v23 >= 1)
  {
    int v24 = (uint64_t *)(*(void *)(a1 + 344) + 8);
    do
    {
      uint64_t v25 = *v24++;
      sub_1219FE8(v25);
      --v23;
    }
    while (v23);
    *(_DWORD *)(a1 + 336) = 0;
  }
  sub_188CC00(a1 + 352);
  sub_188CC00(a1 + 376);
  sub_188CC00(a1 + 400);
  sub_188CC00(a1 + 424);
  sub_188CC00(a1 + 448);
  sub_188CC00(a1 + 472);
  sub_188CC00(a1 + 496);
  sub_188CC00(a1 + 520);
  sub_188CC00(a1 + 544);
  uint64_t result = sub_188CC00(a1 + 568);
  unsigned int v27 = (void *)(a1 + 16);
  unsigned int v28 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v28)
  {
    *(_OWORD *)(a1 + 592) = 0u;
    *(_OWORD *)(a1 + 608) = 0u;
  }
  if ((v28 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 640) = 0;
    *(_OWORD *)(a1 + 624) = 0u;
  }
  if ((v28 & 0xFF0000) != 0)
  {
    *(_DWORD *)(a1 + 660) = 0;
    *(_OWORD *)(a1 + 644) = 0u;
  }
  if (HIBYTE(v28))
  {
    *(void *)(a1 + 696) = 0;
    *(_OWORD *)(a1 + 664) = 0u;
    *(_OWORD *)(a1 + 680) = 0u;
  }
  unsigned int v29 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v29)
  {
    *(_DWORD *)(a1 + 720) = 0;
    *(_OWORD *)(a1 + 704) = 0u;
  }
  if ((v29 & 0xFF00) != 0)
  {
    *(_OWORD *)(a1 + 724) = 0u;
    *(_OWORD *)(a1 + 740) = 0u;
  }
  if ((v29 & 0xFF0000) != 0)
  {
    *(_WORD *)(a1 + 780) = 0;
    *(void *)(a1 + 772) = 0;
    *(_OWORD *)(a1 + 756) = 0u;
  }
  if (HIBYTE(v29))
  {
    *(_OWORD *)(a1 + 809) = 0u;
    *(_OWORD *)(a1 + 782) = 0u;
    *(_OWORD *)(a1 + 798) = 0u;
  }
  unsigned int v30 = *(_DWORD *)(a1 + 24);
  if ((_BYTE)v30)
  {
    *(void *)(a1 + 840) = 0;
    *(_OWORD *)(a1 + 825) = 0u;
  }
  if ((v30 & 0xFF00) != 0)
  {
    *(_DWORD *)(a1 + 880) = 0;
    *(_OWORD *)(a1 + 848) = 0u;
    *(_OWORD *)(a1 + 864) = 0u;
  }
  if ((v30 & 0xFF0000) != 0)
  {
    *(_OWORD *)(a1 + 909) = 0u;
    *(_OWORD *)(a1 + 884) = 0u;
    *(_OWORD *)(a1 + 900) = 0u;
  }
  if (HIBYTE(v30))
  {
    *(_OWORD *)(a1 + 928) = 0u;
    *(_OWORD *)(a1 + 944) = 0u;
    *(_OWORD *)(a1 + 956) = 0u;
  }
  char v32 = *(unsigned char *)(a1 + 8);
  uint64_t v31 = a1 + 8;
  *(_DWORD *)(v31 + 964) = 1;
  void *v27 = 0;
  v27[1] = 0;
  if (v32)
  {
    return sub_188B4AC((uint64_t *)v31);
  }
  return result;
}

char *sub_121AB0C(uint64_t a1, char *a2, int32x2_t *a3)
{
  v579 = a2;
  if (sub_11947B8((uint64_t)a3, &v579, a3[11].i32[1])) {
    return v579;
  }
  v577 = (uint64_t **)(a1 + 544);
  v578 = (uint64_t **)(a1 + 568);
  v575 = (uint64_t **)(a1 + 496);
  v576 = (uint64_t **)(a1 + 520);
  v573 = (uint64_t **)(a1 + 448);
  v574 = (uint64_t **)(a1 + 472);
  v571 = (uint64_t **)(a1 + 400);
  v572 = (uint64_t **)(a1 + 424);
  v569 = (uint64_t **)(a1 + 352);
  v570 = (uint64_t **)(a1 + 376);
  v564 = (uint64_t *)(a1 + 304);
  v565 = (uint64_t *)(a1 + 328);
  v567 = (uint64_t **)(a1 + 256);
  v568 = (uint64_t **)(a1 + 280);
  v566 = (uint64_t **)(a1 + 232);
  v562 = (uint64_t *)(a1 + 8);
  v563 = (uint64_t *)(a1 + 208);
  uint64_t v6 = (uint64_t **)(a1 + 64);
  uint64_t v7 = (uint64_t **)(a1 + 40);
  while (2)
  {
    uint64_t v8 = v579 + 1;
    unsigned int v9 = *v579;
    if (*v579 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v579, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v579 + 2;
      }
    }
    v579 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          v579 = v13;
          *(_DWORD *)(a1 + 592) = v12;
          goto LABEL_661;
        }
        v414 = (char *)sub_188C138((uint64_t)v8, v12);
        v579 = v414;
        *(_DWORD *)(a1 + 592) = v415;
        if (v414) {
          goto LABEL_661;
        }
        return 0;
      case 2u:
        if (v9 != 16) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v41 = v8 + 1;
        LODWORD(v40) = *v8;
        if ((v40 & 0x80) == 0) {
          goto LABEL_59;
        }
        int v42 = *v41;
        uint64_t v40 = v40 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          v422 = (char *)sub_188C138((uint64_t)v8, v40);
          v579 = v422;
          *(_DWORD *)(a1 + 596) = v423;
          if (!v422) {
            return 0;
          }
        }
        else
        {
          uint64_t v41 = v8 + 2;
LABEL_59:
          v579 = v41;
          *(_DWORD *)(a1 + 596) = v40;
        }
        goto LABEL_661;
      case 3u:
        if (v9 != 24) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v44 = v8 + 1;
        LODWORD(v43) = *v8;
        if ((v43 & 0x80) == 0) {
          goto LABEL_64;
        }
        int v45 = *v44;
        uint64_t v43 = v43 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          v424 = (char *)sub_188C138((uint64_t)v8, v43);
          v579 = v424;
          *(_DWORD *)(a1 + 600) = v425;
          if (!v424) {
            return 0;
          }
        }
        else
        {
          uint64_t v44 = v8 + 2;
LABEL_64:
          v579 = v44;
          *(_DWORD *)(a1 + 600) = v43;
        }
        goto LABEL_661;
      case 4u:
        if (v9 != 32) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        unint64_t v47 = v8 + 1;
        LODWORD(v46) = *v8;
        if ((v46 & 0x80) == 0) {
          goto LABEL_69;
        }
        int v48 = *v47;
        uint64_t v46 = v46 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          v426 = (char *)sub_188C138((uint64_t)v8, v46);
          v579 = v426;
          *(_DWORD *)(a1 + 604) = v427;
          if (!v426) {
            return 0;
          }
        }
        else
        {
          unint64_t v47 = v8 + 2;
LABEL_69:
          v579 = v47;
          *(_DWORD *)(a1 + 604) = v46;
        }
        goto LABEL_661;
      case 5u:
        if (v9 != 40) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v50 = v8 + 1;
        LODWORD(v49) = *v8;
        if ((v49 & 0x80) == 0) {
          goto LABEL_74;
        }
        int v51 = *v50;
        uint64_t v49 = v49 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          v428 = (char *)sub_188C138((uint64_t)v8, v49);
          v579 = v428;
          *(_DWORD *)(a1 + 608) = v429;
          if (!v428) {
            return 0;
          }
        }
        else
        {
          uint64_t v50 = v8 + 2;
LABEL_74:
          v579 = v50;
          *(_DWORD *)(a1 + 608) = v49;
        }
        goto LABEL_661;
      case 6u:
        if (v9 != 48) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        int v53 = v8 + 1;
        LODWORD(v52) = *v8;
        if ((v52 & 0x80) == 0) {
          goto LABEL_79;
        }
        int v54 = *v53;
        uint64_t v52 = v52 + (v54 << 7) - 128;
        if (v54 < 0)
        {
          v430 = (char *)sub_188C138((uint64_t)v8, v52);
          v579 = v430;
          *(_DWORD *)(a1 + 612) = v431;
          if (!v430) {
            return 0;
          }
        }
        else
        {
          int v53 = v8 + 2;
LABEL_79:
          v579 = v53;
          *(_DWORD *)(a1 + 612) = v52;
        }
        goto LABEL_661;
      case 7u:
        if (v9 != 56) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v56 = v8 + 1;
        LODWORD(v55) = *v8;
        if ((v55 & 0x80) == 0) {
          goto LABEL_84;
        }
        int v57 = *v56;
        uint64_t v55 = v55 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          v432 = (char *)sub_188C138((uint64_t)v8, v55);
          v579 = v432;
          *(_DWORD *)(a1 + 616) = v433;
          if (!v432) {
            return 0;
          }
        }
        else
        {
          uint64_t v56 = v8 + 2;
LABEL_84:
          v579 = v56;
          *(_DWORD *)(a1 + 616) = v55;
        }
        goto LABEL_661;
      case 8u:
        if (v9 != 64) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        int v59 = v8 + 1;
        LODWORD(v58) = *v8;
        if ((v58 & 0x80) == 0) {
          goto LABEL_89;
        }
        int v60 = *v59;
        uint64_t v58 = v58 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          v434 = (char *)sub_188C138((uint64_t)v8, v58);
          v579 = v434;
          *(_DWORD *)(a1 + 620) = v435;
          if (!v434) {
            return 0;
          }
        }
        else
        {
          int v59 = v8 + 2;
LABEL_89:
          v579 = v59;
          *(_DWORD *)(a1 + 620) = v58;
        }
        goto LABEL_661;
      case 9u:
        if (v9 != 72) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v62 = v8 + 1;
        LODWORD(v61) = *v8;
        if ((v61 & 0x80) == 0) {
          goto LABEL_94;
        }
        int v63 = *v62;
        uint64_t v61 = v61 + (v63 << 7) - 128;
        if (v63 < 0)
        {
          v436 = (char *)sub_188C138((uint64_t)v8, v61);
          v579 = v436;
          *(_DWORD *)(a1 + 624) = v437;
          if (!v436) {
            return 0;
          }
        }
        else
        {
          uint64_t v62 = v8 + 2;
LABEL_94:
          v579 = v62;
          *(_DWORD *)(a1 + 624) = v61;
        }
        goto LABEL_661;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        int v64 = v8 + 1;
        uint64_t v65 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_99;
        }
        int v66 = *v64;
        uint64_t v65 = v65 + (v66 << 7) - 128;
        if (v66 < 0)
        {
          v438 = (char *)sub_188C138((uint64_t)v8, v65);
          v579 = v438;
          *(unsigned char *)(a1 + 628) = v439 != 0;
          if (!v438) {
            return 0;
          }
        }
        else
        {
          int v64 = v8 + 2;
LABEL_99:
          v579 = v64;
          *(unsigned char *)(a1 + 628) = v65 != 0;
        }
        goto LABEL_661;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        unint64_t v67 = v8 + 1;
        uint64_t v68 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_104;
        }
        int v69 = *v67;
        uint64_t v68 = v68 + (v69 << 7) - 128;
        if (v69 < 0)
        {
          v440 = (char *)sub_188C138((uint64_t)v8, v68);
          v579 = v440;
          *(unsigned char *)(a1 + 629) = v441 != 0;
          if (!v440) {
            return 0;
          }
        }
        else
        {
          unint64_t v67 = v8 + 2;
LABEL_104:
          v579 = v67;
          *(unsigned char *)(a1 + 629) = v68 != 0;
        }
        goto LABEL_661;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        int v70 = v8 + 1;
        uint64_t v71 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_109;
        }
        int v72 = *v70;
        uint64_t v71 = v71 + (v72 << 7) - 128;
        if (v72 < 0)
        {
          v442 = (char *)sub_188C138((uint64_t)v8, v71);
          v579 = v442;
          *(unsigned char *)(a1 + 630) = v443 != 0;
          if (!v442) {
            return 0;
          }
        }
        else
        {
          int v70 = v8 + 2;
LABEL_109:
          v579 = v70;
          *(unsigned char *)(a1 + 630) = v71 != 0;
        }
        goto LABEL_661;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        int v73 = v8 + 1;
        uint64_t v74 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_114;
        }
        int v75 = *v73;
        uint64_t v74 = v74 + (v75 << 7) - 128;
        if (v75 < 0)
        {
          v444 = (char *)sub_188C138((uint64_t)v8, v74);
          v579 = v444;
          *(unsigned char *)(a1 + 631) = v445 != 0;
          if (!v444) {
            return 0;
          }
        }
        else
        {
          int v73 = v8 + 2;
LABEL_114:
          v579 = v73;
          *(unsigned char *)(a1 + 631) = v74 != 0;
        }
        goto LABEL_661;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        uint64_t v76 = v8 + 1;
        uint64_t v77 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_119;
        }
        int v78 = *v76;
        uint64_t v77 = v77 + (v78 << 7) - 128;
        if (v78 < 0)
        {
          v446 = (char *)sub_188C138((uint64_t)v8, v77);
          v579 = v446;
          *(unsigned char *)(a1 + 648) = v447 != 0;
          if (!v446) {
            return 0;
          }
        }
        else
        {
          uint64_t v76 = v8 + 2;
LABEL_119:
          v579 = v76;
          *(unsigned char *)(a1 + 648) = v77 != 0;
        }
        goto LABEL_661;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000u;
        uint64_t v79 = v8 + 1;
        uint64_t v80 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_124;
        }
        int v81 = *v79;
        uint64_t v80 = v80 + (v81 << 7) - 128;
        if (v81 < 0)
        {
          v448 = (char *)sub_188C138((uint64_t)v8, v80);
          v579 = v448;
          *(unsigned char *)(a1 + 649) = v449 != 0;
          if (!v448) {
            return 0;
          }
        }
        else
        {
          uint64_t v79 = v8 + 2;
LABEL_124:
          v579 = v79;
          *(unsigned char *)(a1 + 649) = v80 != 0;
        }
        goto LABEL_661;
      case 0x10u:
        if (v9 != 133) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        int v82 = *(_DWORD *)v8;
        int v21 = v8 + 4;
        *(_DWORD *)(a1 + 632) = v82;
        goto LABEL_660;
      case 0x11u:
        if (v9 != 141) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        int v83 = *(_DWORD *)v8;
        int v21 = v8 + 4;
        *(_DWORD *)(a1 + 636) = v83;
        goto LABEL_660;
      case 0x12u:
        if (v9 != 149) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        int v84 = *(_DWORD *)v8;
        int v21 = v8 + 4;
        *(_DWORD *)(a1 + 640) = v84;
        goto LABEL_660;
      case 0x13u:
        if (v9 != 157) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        int v85 = *(_DWORD *)v8;
        int v21 = v8 + 4;
        *(_DWORD *)(a1 + 644) = v85;
        goto LABEL_660;
      case 0x14u:
        if (v9 != 165) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x200000u;
        int v86 = *(_DWORD *)v8;
        int v21 = v8 + 4;
        *(_DWORD *)(a1 + 652) = v86;
        goto LABEL_660;
      case 0x15u:
        if (v9 != 173) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x400000u;
        int v87 = *(_DWORD *)v8;
        int v21 = v8 + 4;
        *(_DWORD *)(a1 + 656) = v87;
        goto LABEL_660;
      case 0x16u:
        if (v9 != 176) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x800000u;
        uint64_t v89 = v8 + 1;
        LODWORD(v88) = *v8;
        if ((v88 & 0x80) == 0) {
          goto LABEL_141;
        }
        int v90 = *v89;
        uint64_t v88 = v88 + (v90 << 7) - 128;
        if (v90 < 0)
        {
          v450 = (char *)sub_188C138((uint64_t)v8, v88);
          v579 = v450;
          *(_DWORD *)(a1 + 660) = v451;
          if (!v450) {
            return 0;
          }
        }
        else
        {
          uint64_t v89 = v8 + 2;
LABEL_141:
          v579 = v89;
          *(_DWORD *)(a1 + 660) = v88;
        }
        goto LABEL_661;
      case 0x17u:
        if (v9 != 184) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000u;
        v91 = v8 + 1;
        uint64_t v92 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_146;
        }
        int v93 = *v91;
        uint64_t v92 = v92 + (v93 << 7) - 128;
        if (v93 < 0)
        {
          v452 = (char *)sub_188C138((uint64_t)v8, v92);
          v579 = v452;
          *(unsigned char *)(a1 + 650) = v453 != 0;
          if (!v452) {
            return 0;
          }
        }
        else
        {
          v91 = v8 + 2;
LABEL_146:
          v579 = v91;
          *(unsigned char *)(a1 + 650) = v92 != 0;
        }
        goto LABEL_661;
      case 0x18u:
        if (v9 != 193) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000000u;
        uint64_t v94 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 664) = v94;
        goto LABEL_660;
      case 0x19u:
        if (v9 != 200) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000000u;
        v96 = v8 + 1;
        LODWORD(v95) = *v8;
        if ((v95 & 0x80) == 0) {
          goto LABEL_153;
        }
        int v97 = *v96;
        uint64_t v95 = v95 + (v97 << 7) - 128;
        if (v97 < 0)
        {
          v454 = (char *)sub_188C138((uint64_t)v8, v95);
          v579 = v454;
          *(_DWORD *)(a1 + 672) = v455;
          if (!v454) {
            return 0;
          }
        }
        else
        {
          v96 = v8 + 2;
LABEL_153:
          v579 = v96;
          *(_DWORD *)(a1 + 672) = v95;
        }
        goto LABEL_661;
      case 0x1Au:
        if (v9 != 208) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000000u;
        v99 = v8 + 1;
        LODWORD(v98) = *v8;
        if ((v98 & 0x80) == 0) {
          goto LABEL_158;
        }
        int v100 = *v99;
        uint64_t v98 = v98 + (v100 << 7) - 128;
        if (v100 < 0)
        {
          v456 = (char *)sub_188C138((uint64_t)v8, v98);
          v579 = v456;
          *(_DWORD *)(a1 + 676) = v457;
          if (!v456) {
            return 0;
          }
        }
        else
        {
          v99 = v8 + 2;
LABEL_158:
          v579 = v99;
          *(_DWORD *)(a1 + 676) = v98;
        }
        goto LABEL_661;
      case 0x1Bu:
        if (v9 != 216) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x100000u;
        v101 = v8 + 1;
        uint64_t v102 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_163;
        }
        int v103 = *v101;
        uint64_t v102 = v102 + (v103 << 7) - 128;
        if (v103 < 0)
        {
          v458 = (char *)sub_188C138((uint64_t)v8, v102);
          v579 = v458;
          *(unsigned char *)(a1 + 651) = v459 != 0;
          if (!v458) {
            return 0;
          }
        }
        else
        {
          v101 = v8 + 2;
LABEL_163:
          v579 = v101;
          *(unsigned char *)(a1 + 651) = v102 != 0;
        }
        goto LABEL_661;
      case 0x1Cu:
        if (v9 != 226) {
          goto LABEL_690;
        }
        v104 = v8 - 2;
        while (1)
        {
          v105 = (char *)(v104 + 2);
          v579 = (char *)(v104 + 2);
          v106 = *(_DWORD **)(a1 + 56);
          if (v106 && (uint64_t v107 = *(int *)(a1 + 48), (int)v107 < *v106))
          {
            *(_DWORD *)(a1 + 48) = v107 + 1;
            v108 = *(std::string **)&v106[2 * v107 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v110 = v109;
            v110[1] = sub_3A6EDC;
            void *v109 = 0;
            v109[1] = 0;
            v109[2] = 0;
            v108 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v109);
            v105 = v579;
          }
          v104 = sub_188C244(v108, v105, (uint64_t)a3);
          v579 = (char *)v104;
          if (!v104) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v104 || *(_WORD *)v104 != 482) {
            goto LABEL_661;
          }
        }
      case 0x1Du:
        if (v9 != 234) {
          goto LABEL_690;
        }
        v111 = v8 - 2;
        while (1)
        {
          v112 = (char *)(v111 + 2);
          v579 = (char *)(v111 + 2);
          v113 = *(_DWORD **)(a1 + 80);
          if (v113 && (uint64_t v114 = *(int *)(a1 + 72), (int)v114 < *v113))
          {
            *(_DWORD *)(a1 + 72) = v114 + 1;
            v115 = *(std::string **)&v113[2 * v114 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            void *v117 = v116;
            v117[1] = sub_3A6EDC;
            void *v116 = 0;
            v116[1] = 0;
            v116[2] = 0;
            v115 = (std::string *)sub_188CDC8(a1 + 64, (uint64_t)v116);
            v112 = v579;
          }
          v111 = sub_188C244(v115, v112, (uint64_t)a3);
          v579 = (char *)v111;
          if (!v111) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v111 || *(_WORD *)v111 != 490) {
            goto LABEL_661;
          }
        }
      case 0x1Eu:
        if (v9 != 240) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000000u;
        v119 = v8 + 1;
        LODWORD(v118) = *v8;
        if ((v118 & 0x80) == 0) {
          goto LABEL_192;
        }
        int v120 = *v119;
        uint64_t v118 = v118 + (v120 << 7) - 128;
        if (v120 < 0)
        {
          v460 = (char *)sub_188C138((uint64_t)v8, v118);
          v579 = v460;
          *(_DWORD *)(a1 + 680) = v461;
          if (!v460) {
            return 0;
          }
        }
        else
        {
          v119 = v8 + 2;
LABEL_192:
          v579 = v119;
          *(_DWORD *)(a1 + 680) = v118;
        }
        goto LABEL_661;
      case 0x1Fu:
        if (v9 != 248) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 8u;
        v121 = v8 + 1;
        uint64_t v122 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_197;
        }
        int v123 = *v121;
        uint64_t v122 = v122 + (v123 << 7) - 128;
        if (v123 < 0)
        {
          v462 = (char *)sub_188C138((uint64_t)v8, v122);
          v579 = v462;
          *(unsigned char *)(a1 + 716) = v463 != 0;
          if (!v462) {
            return 0;
          }
        }
        else
        {
          v121 = v8 + 2;
LABEL_197:
          v579 = v121;
          *(unsigned char *)(a1 + 716) = v122 != 0;
        }
        goto LABEL_661;
      case 0x20u:
        if ((_BYTE)v9) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000000u;
        v125 = v8 + 1;
        LODWORD(v124) = *v8;
        if ((v124 & 0x80) == 0) {
          goto LABEL_202;
        }
        int v126 = *v125;
        uint64_t v124 = v124 + (v126 << 7) - 128;
        if (v126 < 0)
        {
          v464 = (char *)sub_188C138((uint64_t)v8, v124);
          v579 = v464;
          *(_DWORD *)(a1 + 684) = v465;
          if (!v464) {
            return 0;
          }
        }
        else
        {
          v125 = v8 + 2;
LABEL_202:
          v579 = v125;
          *(_DWORD *)(a1 + 684) = v124;
        }
        goto LABEL_661;
      case 0x21u:
        if (v9 != 8) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000000u;
        v128 = v8 + 1;
        LODWORD(v127) = *v8;
        if ((v127 & 0x80) == 0) {
          goto LABEL_207;
        }
        int v129 = *v128;
        uint64_t v127 = v127 + (v129 << 7) - 128;
        if (v129 < 0)
        {
          v466 = (char *)sub_188C138((uint64_t)v8, v127);
          v579 = v466;
          *(_DWORD *)(a1 + 688) = v467;
          if (!v466) {
            return 0;
          }
        }
        else
        {
          v128 = v8 + 2;
LABEL_207:
          v579 = v128;
          *(_DWORD *)(a1 + 688) = v127;
        }
        goto LABEL_661;
      case 0x22u:
        if (v9 != 18) {
          goto LABEL_690;
        }
        v130 = v8 - 2;
        while (1)
        {
          v131 = (unsigned __int8 *)(v130 + 2);
          v579 = v130 + 2;
          v132 = *(_DWORD **)(a1 + 104);
          if (v132 && (uint64_t v133 = *(int *)(a1 + 96), (int)v133 < *v132))
          {
            *(_DWORD *)(a1 + 96) = v133 + 1;
            uint64_t v134 = *(void *)&v132[2 * v133 + 2];
          }
          else
          {
            v135 = sub_1224C5C(*(void *)(a1 + 88));
            uint64_t v134 = sub_188CDC8(a1 + 88, (uint64_t)v135);
            v131 = (unsigned __int8 *)v579;
          }
          v130 = (char *)sub_121E108(a3, v134, v131);
          v579 = v130;
          if (!v130) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v130 || *(_WORD *)v130 != 658) {
            goto LABEL_661;
          }
        }
      case 0x23u:
        if (v9 != 26) {
          goto LABEL_690;
        }
        v136 = v8 - 2;
        while (1)
        {
          v137 = (unsigned __int8 *)(v136 + 2);
          v579 = v136 + 2;
          v138 = *(_DWORD **)(a1 + 128);
          if (v138 && (uint64_t v139 = *(int *)(a1 + 120), (int)v139 < *v138))
          {
            *(_DWORD *)(a1 + 120) = v139 + 1;
            uint64_t v140 = *(void *)&v138[2 * v139 + 2];
          }
          else
          {
            v141 = sub_1224D00(*(void *)(a1 + 112));
            uint64_t v140 = sub_188CDC8(a1 + 112, (uint64_t)v141);
            v137 = (unsigned __int8 *)v579;
          }
          v136 = (char *)sub_121E198(a3, v140, v137);
          v579 = v136;
          if (!v136) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v136 || *(_WORD *)v136 != 666) {
            goto LABEL_661;
          }
        }
      case 0x24u:
        if (v9 != 34) {
          goto LABEL_690;
        }
        v142 = v8 - 2;
        while (1)
        {
          v143 = (unsigned __int8 *)(v142 + 2);
          v579 = v142 + 2;
          v144 = *(_DWORD **)(a1 + 152);
          if (v144 && (uint64_t v145 = *(int *)(a1 + 144), (int)v145 < *v144))
          {
            *(_DWORD *)(a1 + 144) = v145 + 1;
            uint64_t v146 = *(void *)&v144[2 * v145 + 2];
          }
          else
          {
            uint64_t v147 = sub_1224DC0(*(void *)(a1 + 136));
            uint64_t v146 = sub_188CDC8(a1 + 136, v147);
            v143 = (unsigned __int8 *)v579;
          }
          v142 = (char *)sub_121E228(a3, v146, v143);
          v579 = v142;
          if (!v142) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v142 || *(_WORD *)v142 != 674) {
            goto LABEL_661;
          }
        }
      case 0x25u:
        if (v9 != 41) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000000;
        uint64_t v148 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 696) = v148;
        goto LABEL_660;
      case 0x26u:
        if (v9 != 48) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000000u;
        v150 = v8 + 1;
        LODWORD(v149) = *v8;
        if ((v149 & 0x80) == 0) {
          goto LABEL_244;
        }
        int v151 = *v150;
        uint64_t v149 = v149 + (v151 << 7) - 128;
        if (v151 < 0)
        {
          v468 = (char *)sub_188C138((uint64_t)v8, v149);
          v579 = v468;
          *(_DWORD *)(a1 + 692) = v469;
          if (!v468) {
            return 0;
          }
        }
        else
        {
          v150 = v8 + 2;
LABEL_244:
          v579 = v150;
          *(_DWORD *)(a1 + 692) = v149;
        }
        goto LABEL_661;
      case 0x27u:
        if (v9 != 56) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 1u;
        v153 = v8 + 1;
        LODWORD(v152) = *v8;
        if ((v152 & 0x80) == 0) {
          goto LABEL_249;
        }
        int v154 = *v153;
        uint64_t v152 = v152 + (v154 << 7) - 128;
        if (v154 < 0)
        {
          v470 = (char *)sub_188C138((uint64_t)v8, v152);
          v579 = v470;
          *(_DWORD *)(a1 + 704) = v471;
          if (!v470) {
            return 0;
          }
        }
        else
        {
          v153 = v8 + 2;
LABEL_249:
          v579 = v153;
          *(_DWORD *)(a1 + 704) = v152;
        }
        goto LABEL_661;
      case 0x28u:
        if (v9 != 64) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 2u;
        v156 = v8 + 1;
        LODWORD(v155) = *v8;
        if ((v155 & 0x80) == 0) {
          goto LABEL_254;
        }
        int v157 = *v156;
        uint64_t v155 = v155 + (v157 << 7) - 128;
        if (v157 < 0)
        {
          v472 = (char *)sub_188C138((uint64_t)v8, v155);
          v579 = v472;
          *(_DWORD *)(a1 + 708) = v473;
          if (!v472) {
            return 0;
          }
        }
        else
        {
          v156 = v8 + 2;
LABEL_254:
          v579 = v156;
          *(_DWORD *)(a1 + 708) = v155;
        }
        goto LABEL_661;
      case 0x29u:
        if (v9 != 72) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x10u;
        v158 = v8 + 1;
        uint64_t v159 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_259;
        }
        int v160 = *v158;
        uint64_t v159 = v159 + (v160 << 7) - 128;
        if (v160 < 0)
        {
          v474 = (char *)sub_188C138((uint64_t)v8, v159);
          v579 = v474;
          *(unsigned char *)(a1 + 717) = v475 != 0;
          if (!v474) {
            return 0;
          }
        }
        else
        {
          v158 = v8 + 2;
LABEL_259:
          v579 = v158;
          *(unsigned char *)(a1 + 717) = v159 != 0;
        }
        goto LABEL_661;
      case 0x2Au:
        if (v9 != 80) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x20u;
        v161 = v8 + 1;
        uint64_t v162 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_264;
        }
        int v163 = *v161;
        uint64_t v162 = v162 + (v163 << 7) - 128;
        if (v163 < 0)
        {
          v476 = (char *)sub_188C138((uint64_t)v8, v162);
          v579 = v476;
          *(unsigned char *)(a1 + 718) = v477 != 0;
          if (!v476) {
            return 0;
          }
        }
        else
        {
          v161 = v8 + 2;
LABEL_264:
          v579 = v161;
          *(unsigned char *)(a1 + 718) = v162 != 0;
        }
        goto LABEL_661;
      case 0x2Bu:
        if (v9 != 88) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 4u;
        v165 = v8 + 1;
        LODWORD(v164) = *v8;
        if ((v164 & 0x80) == 0) {
          goto LABEL_269;
        }
        int v166 = *v165;
        uint64_t v164 = v164 + (v166 << 7) - 128;
        if (v166 < 0)
        {
          v478 = (char *)sub_188C138((uint64_t)v8, v164);
          v579 = v478;
          *(_DWORD *)(a1 + 712) = v479;
          if (!v478) {
            return 0;
          }
        }
        else
        {
          v165 = v8 + 2;
LABEL_269:
          v579 = v165;
          *(_DWORD *)(a1 + 712) = v164;
        }
        goto LABEL_661;
      case 0x2Cu:
        if (v9 != 96) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x80u;
        v168 = v8 + 1;
        LODWORD(v167) = *v8;
        if ((v167 & 0x80) == 0) {
          goto LABEL_274;
        }
        int v169 = *v168;
        uint64_t v167 = v167 + (v169 << 7) - 128;
        if (v169 < 0)
        {
          v480 = (char *)sub_188C138((uint64_t)v8, v167);
          v579 = v480;
          *(_DWORD *)(a1 + 720) = v481;
          if (!v480) {
            return 0;
          }
        }
        else
        {
          v168 = v8 + 2;
LABEL_274:
          v579 = v168;
          *(_DWORD *)(a1 + 720) = v167;
        }
        goto LABEL_661;
      case 0x2Du:
        if (v9 != 104) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x100u;
        v171 = v8 + 1;
        LODWORD(v170) = *v8;
        if ((v170 & 0x80) == 0) {
          goto LABEL_279;
        }
        int v172 = *v171;
        uint64_t v170 = v170 + (v172 << 7) - 128;
        if (v172 < 0)
        {
          v482 = (char *)sub_188C138((uint64_t)v8, v170);
          v579 = v482;
          *(_DWORD *)(a1 + 724) = v483;
          if (!v482) {
            return 0;
          }
        }
        else
        {
          v171 = v8 + 2;
LABEL_279:
          v579 = v171;
          *(_DWORD *)(a1 + 724) = v170;
        }
        goto LABEL_661;
      case 0x2Eu:
        if (v9 != 112) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x200u;
        v174 = v8 + 1;
        LODWORD(v173) = *v8;
        if ((v173 & 0x80) == 0) {
          goto LABEL_284;
        }
        int v175 = *v174;
        uint64_t v173 = v173 + (v175 << 7) - 128;
        if (v175 < 0)
        {
          v484 = (char *)sub_188C138((uint64_t)v8, v173);
          v579 = v484;
          *(_DWORD *)(a1 + 728) = v485;
          if (!v484) {
            return 0;
          }
        }
        else
        {
          v174 = v8 + 2;
LABEL_284:
          v579 = v174;
          *(_DWORD *)(a1 + 728) = v173;
        }
        goto LABEL_661;
      case 0x2Fu:
        if (v9 != 120) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x400u;
        v177 = v8 + 1;
        LODWORD(v176) = *v8;
        if ((v176 & 0x80) == 0) {
          goto LABEL_289;
        }
        int v178 = *v177;
        uint64_t v176 = v176 + (v178 << 7) - 128;
        if (v178 < 0)
        {
          v486 = (char *)sub_188C138((uint64_t)v8, v176);
          v579 = v486;
          *(_DWORD *)(a1 + 732) = v487;
          if (!v486) {
            return 0;
          }
        }
        else
        {
          v177 = v8 + 2;
LABEL_289:
          v579 = v177;
          *(_DWORD *)(a1 + 732) = v176;
        }
        goto LABEL_661;
      case 0x30u:
        if (v9 != 128) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x800u;
        v180 = v8 + 1;
        LODWORD(v179) = *v8;
        if ((v179 & 0x80) == 0) {
          goto LABEL_294;
        }
        int v181 = *v180;
        uint64_t v179 = v179 + (v181 << 7) - 128;
        if (v181 < 0)
        {
          v488 = (char *)sub_188C138((uint64_t)v8, v179);
          v579 = v488;
          *(_DWORD *)(a1 + 736) = v489;
          if (!v488) {
            return 0;
          }
        }
        else
        {
          v180 = v8 + 2;
LABEL_294:
          v579 = v180;
          *(_DWORD *)(a1 + 736) = v179;
        }
        goto LABEL_661;
      case 0x31u:
        if (v9 != 136) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x1000u;
        v183 = v8 + 1;
        LODWORD(v182) = *v8;
        if ((v182 & 0x80) == 0) {
          goto LABEL_299;
        }
        int v184 = *v183;
        uint64_t v182 = v182 + (v184 << 7) - 128;
        if (v184 < 0)
        {
          v490 = (char *)sub_188C138((uint64_t)v8, v182);
          v579 = v490;
          *(_DWORD *)(a1 + 740) = v491;
          if (!v490) {
            return 0;
          }
        }
        else
        {
          v183 = v8 + 2;
LABEL_299:
          v579 = v183;
          *(_DWORD *)(a1 + 740) = v182;
        }
        goto LABEL_661;
      case 0x32u:
        if (v9 != 144) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x2000u;
        v186 = v8 + 1;
        LODWORD(v185) = *v8;
        if ((v185 & 0x80) == 0) {
          goto LABEL_304;
        }
        int v187 = *v186;
        uint64_t v185 = v185 + (v187 << 7) - 128;
        if (v187 < 0)
        {
          v492 = (char *)sub_188C138((uint64_t)v8, v185);
          v579 = v492;
          *(_DWORD *)(a1 + 744) = v493;
          if (!v492) {
            return 0;
          }
        }
        else
        {
          v186 = v8 + 2;
LABEL_304:
          v579 = v186;
          *(_DWORD *)(a1 + 744) = v185;
        }
        goto LABEL_661;
      case 0x33u:
        if (v9 != 152) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x4000u;
        v189 = v8 + 1;
        LODWORD(v188) = *v8;
        if ((v188 & 0x80) == 0) {
          goto LABEL_309;
        }
        int v190 = *v189;
        uint64_t v188 = v188 + (v190 << 7) - 128;
        if (v190 < 0)
        {
          v494 = (char *)sub_188C138((uint64_t)v8, v188);
          v579 = v494;
          *(_DWORD *)(a1 + 748) = v495;
          if (!v494) {
            return 0;
          }
        }
        else
        {
          v189 = v8 + 2;
LABEL_309:
          v579 = v189;
          *(_DWORD *)(a1 + 748) = v188;
        }
        goto LABEL_661;
      case 0x34u:
        if (v9 != 160) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x8000u;
        v192 = v8 + 1;
        LODWORD(v191) = *v8;
        if ((v191 & 0x80) == 0) {
          goto LABEL_314;
        }
        int v193 = *v192;
        uint64_t v191 = v191 + (v193 << 7) - 128;
        if (v193 < 0)
        {
          v496 = (char *)sub_188C138((uint64_t)v8, v191);
          v579 = v496;
          *(_DWORD *)(a1 + 752) = v497;
          if (!v496) {
            return 0;
          }
        }
        else
        {
          v192 = v8 + 2;
LABEL_314:
          v579 = v192;
          *(_DWORD *)(a1 + 752) = v191;
        }
        goto LABEL_661;
      case 0x35u:
        if (v9 != 168) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x10000u;
        v195 = v8 + 1;
        LODWORD(v194) = *v8;
        if ((v194 & 0x80) == 0) {
          goto LABEL_319;
        }
        int v196 = *v195;
        uint64_t v194 = v194 + (v196 << 7) - 128;
        if (v196 < 0)
        {
          v498 = (char *)sub_188C138((uint64_t)v8, v194);
          v579 = v498;
          *(_DWORD *)(a1 + 756) = v499;
          if (!v498) {
            return 0;
          }
        }
        else
        {
          v195 = v8 + 2;
LABEL_319:
          v579 = v195;
          *(_DWORD *)(a1 + 756) = v194;
        }
        goto LABEL_661;
      case 0x36u:
        if (v9 != 176) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x20000u;
        v198 = v8 + 1;
        LODWORD(v197) = *v8;
        if ((v197 & 0x80) == 0) {
          goto LABEL_324;
        }
        int v199 = *v198;
        uint64_t v197 = v197 + (v199 << 7) - 128;
        if (v199 < 0)
        {
          v500 = (char *)sub_188C138((uint64_t)v8, v197);
          v579 = v500;
          *(_DWORD *)(a1 + 760) = v501;
          if (!v500) {
            return 0;
          }
        }
        else
        {
          v198 = v8 + 2;
LABEL_324:
          v579 = v198;
          *(_DWORD *)(a1 + 760) = v197;
        }
        goto LABEL_661;
      case 0x37u:
        if (v9 != 184) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x40000u;
        v201 = v8 + 1;
        LODWORD(v200) = *v8;
        if ((v200 & 0x80) == 0) {
          goto LABEL_329;
        }
        int v202 = *v201;
        uint64_t v200 = v200 + (v202 << 7) - 128;
        if (v202 < 0)
        {
          v502 = (char *)sub_188C138((uint64_t)v8, v200);
          v579 = v502;
          *(_DWORD *)(a1 + 764) = v503;
          if (!v502) {
            return 0;
          }
        }
        else
        {
          v201 = v8 + 2;
LABEL_329:
          v579 = v201;
          *(_DWORD *)(a1 + 764) = v200;
        }
        goto LABEL_661;
      case 0x38u:
        if (v9 != 192) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x80000u;
        v204 = v8 + 1;
        LODWORD(v203) = *v8;
        if ((v203 & 0x80) == 0) {
          goto LABEL_334;
        }
        int v205 = *v204;
        uint64_t v203 = v203 + (v205 << 7) - 128;
        if (v205 < 0)
        {
          v504 = (char *)sub_188C138((uint64_t)v8, v203);
          v579 = v504;
          *(_DWORD *)(a1 + 768) = v505;
          if (!v504) {
            return 0;
          }
        }
        else
        {
          v204 = v8 + 2;
LABEL_334:
          v579 = v204;
          *(_DWORD *)(a1 + 768) = v203;
        }
        goto LABEL_661;
      case 0x39u:
        if (v9 != 200) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x100000u;
        v207 = v8 + 1;
        LODWORD(v206) = *v8;
        if ((v206 & 0x80) == 0) {
          goto LABEL_339;
        }
        int v208 = *v207;
        uint64_t v206 = v206 + (v208 << 7) - 128;
        if (v208 < 0)
        {
          v506 = (char *)sub_188C138((uint64_t)v8, v206);
          v579 = v506;
          *(_DWORD *)(a1 + 772) = v507;
          if (!v506) {
            return 0;
          }
        }
        else
        {
          v207 = v8 + 2;
LABEL_339:
          v579 = v207;
          *(_DWORD *)(a1 + 772) = v206;
        }
        goto LABEL_661;
      case 0x3Au:
        if (v9 != 208) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x40u;
        v209 = v8 + 1;
        uint64_t v210 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_344;
        }
        int v211 = *v209;
        uint64_t v210 = v210 + (v211 << 7) - 128;
        if (v211 < 0)
        {
          v508 = (char *)sub_188C138((uint64_t)v8, v210);
          v579 = v508;
          *(unsigned char *)(a1 + 719) = v509 != 0;
          if (!v508) {
            return 0;
          }
        }
        else
        {
          v209 = v8 + 2;
LABEL_344:
          v579 = v209;
          *(unsigned char *)(a1 + 719) = v210 != 0;
        }
        goto LABEL_661;
      case 0x3Bu:
        if (v9 != 218) {
          goto LABEL_690;
        }
        v212 = v8 - 2;
        while (1)
        {
          v213 = (unsigned __int8 *)(v212 + 2);
          v579 = v212 + 2;
          v214 = *(_DWORD **)(a1 + 176);
          if (v214 && (uint64_t v215 = *(int *)(a1 + 168), (int)v215 < *v214))
          {
            *(_DWORD *)(a1 + 168) = v215 + 1;
            uint64_t v216 = *(void *)&v214[2 * v215 + 2];
          }
          else
          {
            v217 = sub_1224E48(*(void *)(a1 + 160));
            uint64_t v216 = sub_188CDC8(a1 + 160, (uint64_t)v217);
            v213 = (unsigned __int8 *)v579;
          }
          v212 = (char *)sub_121E2B8(a3, v216, v213);
          v579 = v212;
          if (!v212) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v212 || *(_WORD *)v212 != 986) {
            goto LABEL_661;
          }
        }
      case 0x3Cu:
        if (v9 != 224) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x400000u;
        v218 = v8 + 1;
        uint64_t v219 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_359;
        }
        int v220 = *v218;
        uint64_t v219 = v219 + (v220 << 7) - 128;
        if (v220 < 0)
        {
          v510 = (char *)sub_188C138((uint64_t)v8, v219);
          v579 = v510;
          *(unsigned char *)(a1 + 780) = v511 != 0;
          if (!v510) {
            return 0;
          }
        }
        else
        {
          v218 = v8 + 2;
LABEL_359:
          v579 = v218;
          *(unsigned char *)(a1 + 780) = v219 != 0;
        }
        goto LABEL_661;
      case 0x3Du:
        if (v9 != 232) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x200000u;
        v222 = v8 + 1;
        LODWORD(v221) = *v8;
        if ((v221 & 0x80) == 0) {
          goto LABEL_364;
        }
        int v223 = *v222;
        uint64_t v221 = v221 + (v223 << 7) - 128;
        if (v223 < 0)
        {
          v512 = (char *)sub_188C138((uint64_t)v8, v221);
          v579 = v512;
          *(_DWORD *)(a1 + 776) = v513;
          if (!v512) {
            return 0;
          }
        }
        else
        {
          v222 = v8 + 2;
LABEL_364:
          v579 = v222;
          *(_DWORD *)(a1 + 776) = v221;
        }
        goto LABEL_661;
      case 0x3Eu:
        if (v9 != 240) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x800000u;
        v224 = v8 + 1;
        uint64_t v225 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_369;
        }
        int v226 = *v224;
        uint64_t v225 = v225 + (v226 << 7) - 128;
        if (v226 < 0)
        {
          v514 = (char *)sub_188C138((uint64_t)v8, v225);
          v579 = v514;
          *(unsigned char *)(a1 + 781) = v515 != 0;
          if (!v514) {
            return 0;
          }
        }
        else
        {
          v224 = v8 + 2;
LABEL_369:
          v579 = v224;
          *(unsigned char *)(a1 + 781) = v225 != 0;
        }
        goto LABEL_661;
      case 0x3Fu:
        if (v9 != 248) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x1000000u;
        v227 = v8 + 1;
        uint64_t v228 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_374;
        }
        int v229 = *v227;
        uint64_t v228 = v228 + (v229 << 7) - 128;
        if (v229 < 0)
        {
          v516 = (char *)sub_188C138((uint64_t)v8, v228);
          v579 = v516;
          *(unsigned char *)(a1 + 782) = v517 != 0;
          if (!v516) {
            return 0;
          }
        }
        else
        {
          v227 = v8 + 2;
LABEL_374:
          v579 = v227;
          *(unsigned char *)(a1 + 782) = v228 != 0;
        }
        goto LABEL_661;
      case 0x40u:
        if (v9 != 1) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x4000000u;
        uint64_t v230 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 784) = v230;
        goto LABEL_660;
      case 0x41u:
        if (v9 != 9) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x8000000u;
        uint64_t v231 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 792) = v231;
        goto LABEL_660;
      case 0x42u:
        if (v9 != 17) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x10000000u;
        uint64_t v232 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 800) = v232;
        goto LABEL_660;
      case 0x43u:
        if (v9 != 25) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x20000000u;
        uint64_t v233 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 808) = v233;
        goto LABEL_660;
      case 0x44u:
        if (v9 != 32) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x2000000u;
        v234 = v8 + 1;
        uint64_t v235 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_387;
        }
        int v236 = *v234;
        uint64_t v235 = v235 + (v236 << 7) - 128;
        if (v236 < 0)
        {
          v518 = (char *)sub_188C138((uint64_t)v8, v235);
          v579 = v518;
          *(unsigned char *)(a1 + 783) = v519 != 0;
          if (!v518) {
            return 0;
          }
        }
        else
        {
          v234 = v8 + 2;
LABEL_387:
          v579 = v234;
          *(unsigned char *)(a1 + 783) = v235 != 0;
        }
        goto LABEL_661;
      case 0x45u:
        if (v9 != 40) {
          goto LABEL_690;
        }
        v237 = v8 + 1;
        unint64_t v238 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_392;
        }
        int v239 = *v237;
        int v240 = v238 + (v239 << 7);
        unint64_t v238 = (v240 - 128);
        if (v239 < 0)
        {
          v579 = (char *)sub_188C138((uint64_t)v8, (v240 - 128));
          if (!v579) {
            return 0;
          }
          unint64_t v238 = v520;
        }
        else
        {
          v237 = v8 + 2;
LABEL_392:
          v579 = v237;
        }
        if ((v238 - 1) > 1)
        {
          if (*v562) {
            v561 = (std::string *)((*v562 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v561 = (std::string *)sub_188DBD8(v562);
          }
          sub_188C020(69, v238, v561);
        }
        else
        {
          *(_DWORD *)(a1 + 28) |= 1u;
          *(_DWORD *)(a1 + 972) = v238;
        }
        goto LABEL_661;
      case 0x46u:
        if (v9 != 48) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x80000000;
        v241 = v8 + 1;
        uint64_t v242 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_399;
        }
        int v243 = *v241;
        uint64_t v242 = v242 + (v243 << 7) - 128;
        if (v243 < 0)
        {
          v521 = (char *)sub_188C138((uint64_t)v8, v242);
          v579 = v521;
          *(unsigned char *)(a1 + 824) = v522 != 0;
          if (!v521) {
            return 0;
          }
        }
        else
        {
          v241 = v8 + 2;
LABEL_399:
          v579 = v241;
          *(unsigned char *)(a1 + 824) = v242 != 0;
        }
        goto LABEL_661;
      case 0x47u:
        if (v9 != 58) {
          goto LABEL_690;
        }
        v244 = v8 - 2;
        while (1)
        {
          v245 = (unsigned __int8 *)(v244 + 2);
          v579 = v244 + 2;
          v246 = *(_DWORD **)(a1 + 200);
          if (v246 && (uint64_t v247 = *(int *)(a1 + 192), (int)v247 < *v246))
          {
            *(_DWORD *)(a1 + 192) = v247 + 1;
            uint64_t v248 = *(void *)&v246[2 * v247 + 2];
          }
          else
          {
            v249 = sub_1224EEC(*(void *)(a1 + 184));
            uint64_t v248 = sub_188CDC8(a1 + 184, (uint64_t)v249);
            v245 = (unsigned __int8 *)v579;
          }
          v244 = (char *)sub_121E348(a3, v248, v245);
          v579 = v244;
          if (!v244) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v244 || *(_WORD *)v244 != 1210) {
            goto LABEL_661;
          }
        }
      case 0x48u:
        if (v9 != 64) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 1u;
        v250 = v8 + 1;
        uint64_t v251 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_414;
        }
        int v252 = *v250;
        uint64_t v251 = v251 + (v252 << 7) - 128;
        if (v252 < 0)
        {
          v523 = (char *)sub_188C138((uint64_t)v8, v251);
          v579 = v523;
          *(unsigned char *)(a1 + 825) = v524 != 0;
          if (!v523) {
            return 0;
          }
        }
        else
        {
          v250 = v8 + 2;
LABEL_414:
          v579 = v250;
          *(unsigned char *)(a1 + 825) = v251 != 0;
        }
        goto LABEL_661;
      case 0x49u:
        if (v9 != 72) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 2u;
        v253 = v8 + 1;
        uint64_t v254 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_419;
        }
        int v255 = *v253;
        uint64_t v254 = v254 + (v255 << 7) - 128;
        if (v255 < 0)
        {
          v525 = (char *)sub_188C138((uint64_t)v8, v254);
          v579 = v525;
          *(unsigned char *)(a1 + 826) = v526 != 0;
          if (!v525) {
            return 0;
          }
        }
        else
        {
          v253 = v8 + 2;
LABEL_419:
          v579 = v253;
          *(unsigned char *)(a1 + 826) = v254 != 0;
        }
        goto LABEL_661;
      case 0x4Au:
        if (v9 != 82) {
          goto LABEL_690;
        }
        v256 = v8 - 2;
        while (1)
        {
          v257 = (unsigned __int8 *)(v256 + 2);
          v579 = v256 + 2;
          v258 = *(_DWORD **)(a1 + 224);
          if (v258 && (uint64_t v259 = *(int *)(a1 + 216), (int)v259 < *v258))
          {
            *(_DWORD *)(a1 + 216) = v259 + 1;
            uint64_t v260 = *(void *)&v258[2 * v259 + 2];
          }
          else
          {
            uint64_t v261 = sub_1224F70(*v563);
            uint64_t v260 = sub_188CDC8((uint64_t)v563, v261);
            v257 = (unsigned __int8 *)v579;
          }
          v256 = (char *)sub_121E3D8(a3, v260, v257);
          v579 = v256;
          if (!v256) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v256 || *(_WORD *)v256 != 1234) {
            goto LABEL_661;
          }
        }
      case 0x4Bu:
        if (v9 != 89) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 20) |= 0x40000000u;
        uint64_t v262 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 816) = v262;
        goto LABEL_660;
      case 0x4Cu:
        if (v9 != 98) {
          goto LABEL_690;
        }
        v263 = v8 - 2;
        while (1)
        {
          v264 = (char *)(v263 + 2);
          v579 = (char *)(v263 + 2);
          v265 = *(_DWORD **)(a1 + 248);
          if (v265 && (uint64_t v266 = *(int *)(a1 + 240), (int)v266 < *v265))
          {
            *(_DWORD *)(a1 + 240) = v266 + 1;
            v267 = *(std::string **)&v265[2 * v266 + 2];
          }
          else
          {
            if (!*v566) {
              operator new();
            }
            void *v269 = v268;
            v269[1] = sub_3A6EDC;
            void *v268 = 0;
            v268[1] = 0;
            v268[2] = 0;
            v267 = (std::string *)sub_188CDC8((uint64_t)v566, (uint64_t)v268);
            v264 = v579;
          }
          v263 = sub_188C244(v267, v264, (uint64_t)a3);
          v579 = (char *)v263;
          if (!v263) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v263 || *(_WORD *)v263 != 1250) {
            goto LABEL_661;
          }
        }
      case 0x4Du:
        if (v9 != 106) {
          goto LABEL_690;
        }
        v270 = v8 - 2;
        while (1)
        {
          v271 = (char *)(v270 + 2);
          v579 = (char *)(v270 + 2);
          v272 = *(_DWORD **)(a1 + 272);
          if (v272 && (uint64_t v273 = *(int *)(a1 + 264), (int)v273 < *v272))
          {
            *(_DWORD *)(a1 + 264) = v273 + 1;
            v274 = *(std::string **)&v272[2 * v273 + 2];
          }
          else
          {
            if (!*v567) {
              operator new();
            }
            void *v276 = v275;
            v276[1] = sub_3A6EDC;
            void *v275 = 0;
            v275[1] = 0;
            v275[2] = 0;
            v274 = (std::string *)sub_188CDC8((uint64_t)v567, (uint64_t)v275);
            v271 = v579;
          }
          v270 = sub_188C244(v274, v271, (uint64_t)a3);
          v579 = (char *)v270;
          if (!v270) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v270 || *(_WORD *)v270 != 1258) {
            goto LABEL_661;
          }
        }
      case 0x4Eu:
        if (v9 != 114) {
          goto LABEL_690;
        }
        v277 = v8 - 2;
        while (1)
        {
          v278 = (char *)(v277 + 2);
          v579 = (char *)(v277 + 2);
          v279 = *(_DWORD **)(a1 + 296);
          if (v279 && (uint64_t v280 = *(int *)(a1 + 288), (int)v280 < *v279))
          {
            *(_DWORD *)(a1 + 288) = v280 + 1;
            v281 = *(std::string **)&v279[2 * v280 + 2];
          }
          else
          {
            if (!*v568) {
              operator new();
            }
            void *v283 = v282;
            v283[1] = sub_3A6EDC;
            void *v282 = 0;
            v282[1] = 0;
            v282[2] = 0;
            v281 = (std::string *)sub_188CDC8((uint64_t)v568, (uint64_t)v282);
            v278 = v579;
          }
          v277 = sub_188C244(v281, v278, (uint64_t)a3);
          v579 = (char *)v277;
          if (!v277) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v277 || *(_WORD *)v277 != 1266) {
            goto LABEL_661;
          }
        }
      case 0x4Fu:
        if (v9 != 122) {
          goto LABEL_690;
        }
        v284 = v8 - 2;
        while (1)
        {
          v285 = (unsigned __int8 *)(v284 + 2);
          v579 = v284 + 2;
          v286 = *(_DWORD **)(a1 + 320);
          if (v286 && (uint64_t v287 = *(int *)(a1 + 312), (int)v287 < *v286))
          {
            *(_DWORD *)(a1 + 312) = v287 + 1;
            uint64_t v288 = *(void *)&v286[2 * v287 + 2];
          }
          else
          {
            v289 = sub_122500C(*v564);
            uint64_t v288 = sub_188CDC8((uint64_t)v564, (uint64_t)v289);
            v285 = (unsigned __int8 *)v579;
          }
          v284 = (char *)sub_121E468(a3, v288, v285);
          v579 = v284;
          if (!v284) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v284 || *(_WORD *)v284 != 1274) {
            goto LABEL_661;
          }
        }
      case 0x50u:
        if (v9 != 130) {
          goto LABEL_690;
        }
        v290 = v8 - 2;
        while (1)
        {
          v291 = (unsigned __int8 *)(v290 + 2);
          v579 = v290 + 2;
          v292 = *(_DWORD **)(a1 + 344);
          if (v292 && (uint64_t v293 = *(int *)(a1 + 336), (int)v293 < *v292))
          {
            *(_DWORD *)(a1 + 336) = v293 + 1;
            uint64_t v294 = *(void *)&v292[2 * v293 + 2];
          }
          else
          {
            v295 = sub_12250B0(*v565);
            uint64_t v294 = sub_188CDC8((uint64_t)v565, (uint64_t)v295);
            v291 = (unsigned __int8 *)v579;
          }
          v290 = (char *)sub_121E4F8(a3, v294, v291);
          v579 = v290;
          if (!v290) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v290 || *(_WORD *)v290 != 1410) {
            goto LABEL_661;
          }
        }
      case 0x51u:
        if (v9 != 136) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 8u;
        v297 = v8 + 1;
        LODWORD(v296) = *v8;
        if ((v296 & 0x80) == 0) {
          goto LABEL_492;
        }
        int v298 = *v297;
        uint64_t v296 = v296 + (v298 << 7) - 128;
        if (v298 < 0)
        {
          v527 = (char *)sub_188C138((uint64_t)v8, v296);
          v579 = v527;
          *(_DWORD *)(a1 + 828) = v528;
          if (!v527) {
            return 0;
          }
        }
        else
        {
          v297 = v8 + 2;
LABEL_492:
          v579 = v297;
          *(_DWORD *)(a1 + 828) = v296;
        }
        goto LABEL_661;
      case 0x52u:
        if (v9 != 144) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x10u;
        v300 = v8 + 1;
        LODWORD(v299) = *v8;
        if ((v299 & 0x80) == 0) {
          goto LABEL_497;
        }
        int v301 = *v300;
        uint64_t v299 = v299 + (v301 << 7) - 128;
        if (v301 < 0)
        {
          v529 = (char *)sub_188C138((uint64_t)v8, v299);
          v579 = v529;
          *(_DWORD *)(a1 + 832) = v530;
          if (!v529) {
            return 0;
          }
        }
        else
        {
          v300 = v8 + 2;
LABEL_497:
          v579 = v300;
          *(_DWORD *)(a1 + 832) = v299;
        }
        goto LABEL_661;
      case 0x53u:
        if (v9 != 152) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x20u;
        v303 = v8 + 1;
        LODWORD(v302) = *v8;
        if ((v302 & 0x80) == 0) {
          goto LABEL_502;
        }
        int v304 = *v303;
        uint64_t v302 = v302 + (v304 << 7) - 128;
        if (v304 < 0)
        {
          v531 = (char *)sub_188C138((uint64_t)v8, v302);
          v579 = v531;
          *(_DWORD *)(a1 + 836) = v532;
          if (!v531) {
            return 0;
          }
        }
        else
        {
          v303 = v8 + 2;
LABEL_502:
          v579 = v303;
          *(_DWORD *)(a1 + 836) = v302;
        }
        goto LABEL_661;
      case 0x54u:
        if (v9 != 160) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x40u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v416 = (char *)sub_188C138((uint64_t)v8, v15);
          v579 = v416;
          *(_DWORD *)(a1 + 840) = v417;
          if (!v416) {
            return 0;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          v579 = v16;
          *(_DWORD *)(a1 + 840) = v15;
        }
        goto LABEL_661;
      case 0x55u:
        if (v9 != 168) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          v418 = (char *)sub_188C138((uint64_t)v8, v19);
          v579 = v418;
          *(unsigned char *)(a1 + 827) = v419 != 0;
          if (!v418) {
            return 0;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          v579 = v18;
          *(unsigned char *)(a1 + 827) = v19 != 0;
        }
        goto LABEL_661;
      case 0x56u:
        if (v9 != 176) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x80u;
        v306 = v8 + 1;
        LODWORD(v305) = *v8;
        if ((v305 & 0x80) == 0) {
          goto LABEL_507;
        }
        int v307 = *v306;
        uint64_t v305 = v305 + (v307 << 7) - 128;
        if (v307 < 0)
        {
          v533 = (char *)sub_188C138((uint64_t)v8, v305);
          v579 = v533;
          *(_DWORD *)(a1 + 844) = v534;
          if (!v533) {
            return 0;
          }
        }
        else
        {
          v306 = v8 + 2;
LABEL_507:
          v579 = v306;
          *(_DWORD *)(a1 + 844) = v305;
        }
        goto LABEL_661;
      case 0x57u:
        if (v9 != 186) {
          goto LABEL_690;
        }
        v308 = v8 - 2;
        while (1)
        {
          v309 = (char *)(v308 + 2);
          v579 = (char *)(v308 + 2);
          v310 = *(_DWORD **)(a1 + 368);
          if (v310 && (uint64_t v311 = *(int *)(a1 + 360), (int)v311 < *v310))
          {
            *(_DWORD *)(a1 + 360) = v311 + 1;
            v312 = *(std::string **)&v310[2 * v311 + 2];
          }
          else
          {
            if (!*v569) {
              operator new();
            }
            void *v314 = v313;
            v314[1] = sub_3A6EDC;
            void *v313 = 0;
            v313[1] = 0;
            v313[2] = 0;
            v312 = (std::string *)sub_188CDC8((uint64_t)v569, (uint64_t)v313);
            v309 = v579;
          }
          v308 = sub_188C244(v312, v309, (uint64_t)a3);
          v579 = (char *)v308;
          if (!v308) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v308 || *(_WORD *)v308 != 1466) {
            goto LABEL_661;
          }
        }
      case 0x58u:
        if (v9 != 194) {
          goto LABEL_690;
        }
        v315 = v8 - 2;
        while (1)
        {
          v316 = (char *)(v315 + 2);
          v579 = (char *)(v315 + 2);
          v317 = *(_DWORD **)(a1 + 392);
          if (v317 && (uint64_t v318 = *(int *)(a1 + 384), (int)v318 < *v317))
          {
            *(_DWORD *)(a1 + 384) = v318 + 1;
            v319 = *(std::string **)&v317[2 * v318 + 2];
          }
          else
          {
            if (!*v570) {
              operator new();
            }
            void *v321 = v320;
            v321[1] = sub_3A6EDC;
            void *v320 = 0;
            v320[1] = 0;
            v320[2] = 0;
            v319 = (std::string *)sub_188CDC8((uint64_t)v570, (uint64_t)v320);
            v316 = v579;
          }
          v315 = sub_188C244(v319, v316, (uint64_t)a3);
          v579 = (char *)v315;
          if (!v315) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v315 || *(_WORD *)v315 != 1474) {
            goto LABEL_661;
          }
        }
      case 0x59u:
        if (v9 != 201) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x100u;
        uint64_t v322 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 848) = v322;
        goto LABEL_660;
      case 0x5Au:
        if (v9 != 209) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x200u;
        uint64_t v394 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 856) = v394;
        goto LABEL_660;
      case 0x5Bu:
        if (v9 != 217) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x400u;
        uint64_t v395 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 864) = v395;
        goto LABEL_660;
      case 0x5Cu:
        if (v9 != 225) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x800u;
        uint64_t v22 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 872) = v22;
        goto LABEL_660;
      case 0x5Du:
        if (v9 != 232) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x1000u;
        v323 = v8 + 1;
        uint64_t v324 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_538;
        }
        int v325 = *v323;
        uint64_t v324 = v324 + (v325 << 7) - 128;
        if (v325 < 0)
        {
          v535 = (char *)sub_188C138((uint64_t)v8, v324);
          v579 = v535;
          *(unsigned char *)(a1 + 880) = v536 != 0;
          if (!v535) {
            return 0;
          }
        }
        else
        {
          v323 = v8 + 2;
LABEL_538:
          v579 = v323;
          *(unsigned char *)(a1 + 880) = v324 != 0;
        }
        goto LABEL_661;
      case 0x5Eu:
        if (v9 != 240) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x2000u;
        v326 = v8 + 1;
        uint64_t v327 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_543;
        }
        int v328 = *v326;
        uint64_t v327 = v327 + (v328 << 7) - 128;
        if (v328 < 0)
        {
          v537 = (char *)sub_188C138((uint64_t)v8, v327);
          v579 = v537;
          *(unsigned char *)(a1 + 881) = v538 != 0;
          if (!v537) {
            return 0;
          }
        }
        else
        {
          v326 = v8 + 2;
LABEL_543:
          v579 = v326;
          *(unsigned char *)(a1 + 881) = v327 != 0;
        }
        goto LABEL_661;
      case 0x5Fu:
        if (v9 != 248) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x4000u;
        v329 = v8 + 1;
        uint64_t v330 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_548;
        }
        int v331 = *v329;
        uint64_t v330 = v330 + (v331 << 7) - 128;
        if (v331 < 0)
        {
          v539 = (char *)sub_188C138((uint64_t)v8, v330);
          v579 = v539;
          *(unsigned char *)(a1 + 882) = v540 != 0;
          if (!v539) {
            return 0;
          }
        }
        else
        {
          v329 = v8 + 2;
LABEL_548:
          v579 = v329;
          *(unsigned char *)(a1 + 882) = v330 != 0;
        }
        goto LABEL_661;
      case 0x60u:
        if ((_BYTE)v9) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x10000u;
        v397 = v8 + 1;
        LODWORD(v396) = *v8;
        if ((v396 & 0x80) == 0) {
          goto LABEL_667;
        }
        int v398 = *v397;
        uint64_t v396 = v396 + (v398 << 7) - 128;
        if (v398 < 0)
        {
          v555 = (char *)sub_188C138((uint64_t)v8, v396);
          v579 = v555;
          *(_DWORD *)(a1 + 884) = v556;
          if (!v555) {
            return 0;
          }
        }
        else
        {
          v397 = v8 + 2;
LABEL_667:
          v579 = v397;
          *(_DWORD *)(a1 + 884) = v396;
        }
        goto LABEL_661;
      case 0x61u:
        if (v9 != 10) {
          goto LABEL_690;
        }
        v332 = v8 - 2;
        while (1)
        {
          v333 = (char *)(v332 + 2);
          v579 = (char *)(v332 + 2);
          v334 = *(_DWORD **)(a1 + 416);
          if (v334 && (uint64_t v335 = *(int *)(a1 + 408), (int)v335 < *v334))
          {
            *(_DWORD *)(a1 + 408) = v335 + 1;
            v336 = *(std::string **)&v334[2 * v335 + 2];
          }
          else
          {
            if (!*v571) {
              operator new();
            }
            void *v338 = v337;
            v338[1] = sub_3A6EDC;
            void *v337 = 0;
            v337[1] = 0;
            v337[2] = 0;
            v336 = (std::string *)sub_188CDC8((uint64_t)v571, (uint64_t)v337);
            v333 = v579;
          }
          v332 = sub_188C244(v336, v333, (uint64_t)a3);
          v579 = (char *)v332;
          if (!v332) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v332 || *(_WORD *)v332 != 1674) {
            goto LABEL_661;
          }
        }
      case 0x62u:
        if (v9 != 18) {
          goto LABEL_690;
        }
        v399 = v8 - 2;
        while (1)
        {
          v400 = (char *)(v399 + 2);
          v579 = (char *)(v399 + 2);
          v401 = *(_DWORD **)(a1 + 440);
          if (v401 && (uint64_t v402 = *(int *)(a1 + 432), (int)v402 < *v401))
          {
            *(_DWORD *)(a1 + 432) = v402 + 1;
            v403 = *(std::string **)&v401[2 * v402 + 2];
          }
          else
          {
            if (!*v572) {
              operator new();
            }
            void *v405 = v404;
            v405[1] = sub_3A6EDC;
            void *v404 = 0;
            v404[1] = 0;
            v404[2] = 0;
            v403 = (std::string *)sub_188CDC8((uint64_t)v572, (uint64_t)v404);
            v400 = v579;
          }
          v399 = sub_188C244(v403, v400, (uint64_t)a3);
          v579 = (char *)v399;
          if (!v399) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v399 || *(_WORD *)v399 != 1682) {
            goto LABEL_661;
          }
        }
      case 0x63u:
        if (v9 != 24) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x8000u;
        v339 = v8 + 1;
        uint64_t v340 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_565;
        }
        int v341 = *v339;
        uint64_t v340 = v340 + (v341 << 7) - 128;
        if (v341 < 0)
        {
          v541 = (char *)sub_188C138((uint64_t)v8, v340);
          v579 = v541;
          *(unsigned char *)(a1 + 883) = v542 != 0;
          if (!v541) {
            return 0;
          }
        }
        else
        {
          v339 = v8 + 2;
LABEL_565:
          v579 = v339;
          *(unsigned char *)(a1 + 883) = v340 != 0;
        }
        goto LABEL_661;
      case 0x64u:
        if (v9 != 32) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x20000u;
        v407 = v8 + 1;
        LODWORD(v406) = *v8;
        if ((v406 & 0x80) == 0) {
          goto LABEL_684;
        }
        int v408 = *v407;
        uint64_t v406 = v406 + (v408 << 7) - 128;
        if (v408 < 0)
        {
          v557 = (char *)sub_188C138((uint64_t)v8, v406);
          v579 = v557;
          *(_DWORD *)(a1 + 888) = v558;
          if (!v557) {
            return 0;
          }
        }
        else
        {
          v407 = v8 + 2;
LABEL_684:
          v579 = v407;
          *(_DWORD *)(a1 + 888) = v406;
        }
        goto LABEL_661;
      case 0x65u:
        if (v9 != 40) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x40000u;
        v410 = v8 + 1;
        LODWORD(v409) = *v8;
        if ((v409 & 0x80) == 0) {
          goto LABEL_689;
        }
        int v411 = *v410;
        uint64_t v409 = v409 + (v411 << 7) - 128;
        if (v411 < 0)
        {
          v559 = (char *)sub_188C138((uint64_t)v8, v409);
          v579 = v559;
          *(_DWORD *)(a1 + 892) = v560;
          if (!v559) {
            return 0;
          }
        }
        else
        {
          v410 = v8 + 2;
LABEL_689:
          v579 = v410;
          *(_DWORD *)(a1 + 892) = v409;
        }
        goto LABEL_661;
      case 0x66u:
        if (v9 != 49) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x80000u;
        uint64_t v342 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 896) = v342;
        goto LABEL_660;
      case 0x67u:
        if (v9 != 57) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x100000u;
        uint64_t v343 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 904) = v343;
        goto LABEL_660;
      case 0x68u:
        if (v9 != 65) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x200000u;
        uint64_t v344 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 912) = v344;
        goto LABEL_660;
      case 0x69u:
        if (v9 != 72) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x400000u;
        v346 = v8 + 1;
        LODWORD(v345) = *v8;
        if ((v345 & 0x80) == 0) {
          goto LABEL_576;
        }
        int v347 = *v346;
        uint64_t v345 = v345 + (v347 << 7) - 128;
        if (v347 < 0)
        {
          v543 = (char *)sub_188C138((uint64_t)v8, v345);
          v579 = v543;
          *(_DWORD *)(a1 + 920) = v544;
          if (!v543) {
            return 0;
          }
        }
        else
        {
          v346 = v8 + 2;
LABEL_576:
          v579 = v346;
          *(_DWORD *)(a1 + 920) = v345;
        }
        goto LABEL_661;
      case 0x6Au:
        if (v9 != 82) {
          goto LABEL_690;
        }
        v348 = v8 - 2;
        while (1)
        {
          v349 = (char *)(v348 + 2);
          v579 = (char *)(v348 + 2);
          v350 = *(_DWORD **)(a1 + 464);
          if (v350 && (uint64_t v351 = *(int *)(a1 + 456), (int)v351 < *v350))
          {
            *(_DWORD *)(a1 + 456) = v351 + 1;
            v352 = *(std::string **)&v350[2 * v351 + 2];
          }
          else
          {
            if (!*v573) {
              operator new();
            }
            void *v354 = v353;
            v354[1] = sub_3A6EDC;
            void *v353 = 0;
            v353[1] = 0;
            v353[2] = 0;
            v352 = (std::string *)sub_188CDC8((uint64_t)v573, (uint64_t)v353);
            v349 = v579;
          }
          v348 = sub_188C244(v352, v349, (uint64_t)a3);
          v579 = (char *)v348;
          if (!v348) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v348 || *(_WORD *)v348 != 1746) {
            goto LABEL_661;
          }
        }
      case 0x6Bu:
        if (v9 != 90) {
          goto LABEL_690;
        }
        uint64_t v23 = v8 - 2;
        while (1)
        {
          int v24 = (char *)(v23 + 2);
          v579 = (char *)(v23 + 2);
          uint64_t v25 = *(_DWORD **)(a1 + 488);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 480), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 480) = v26 + 1;
            unsigned int v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v574) {
              operator new();
            }
            void *v29 = v28;
            v29[1] = sub_3A6EDC;
            void *v28 = 0;
            v28[1] = 0;
            int v28[2] = 0;
            unsigned int v27 = (std::string *)sub_188CDC8((uint64_t)v574, (uint64_t)v28);
            int v24 = v579;
          }
          uint64_t v23 = sub_188C244(v27, v24, (uint64_t)a3);
          v579 = (char *)v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *(_WORD *)v23 != 1754) {
            goto LABEL_661;
          }
        }
      case 0x6Cu:
        if (v9 != 98) {
          goto LABEL_690;
        }
        v355 = v8 - 2;
        while (1)
        {
          v356 = (char *)(v355 + 2);
          v579 = (char *)(v355 + 2);
          v357 = *(_DWORD **)(a1 + 512);
          if (v357 && (uint64_t v358 = *(int *)(a1 + 504), (int)v358 < *v357))
          {
            *(_DWORD *)(a1 + 504) = v358 + 1;
            v359 = *(std::string **)&v357[2 * v358 + 2];
          }
          else
          {
            if (!*v575) {
              operator new();
            }
            void *v361 = v360;
            v361[1] = sub_3A6EDC;
            void *v360 = 0;
            v360[1] = 0;
            v360[2] = 0;
            v359 = (std::string *)sub_188CDC8((uint64_t)v575, (uint64_t)v360);
            v356 = v579;
          }
          v355 = sub_188C244(v359, v356, (uint64_t)a3);
          v579 = (char *)v355;
          if (!v355) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v355 || *(_WORD *)v355 != 1762) {
            goto LABEL_661;
          }
        }
      case 0x6Du:
        if (v9 != 106) {
          goto LABEL_690;
        }
        v362 = v8 - 2;
        while (1)
        {
          v363 = (char *)(v362 + 2);
          v579 = (char *)(v362 + 2);
          v364 = *(_DWORD **)(a1 + 536);
          if (v364 && (uint64_t v365 = *(int *)(a1 + 528), (int)v365 < *v364))
          {
            *(_DWORD *)(a1 + 528) = v365 + 1;
            v366 = *(std::string **)&v364[2 * v365 + 2];
          }
          else
          {
            if (!*v576) {
              operator new();
            }
            void *v368 = v367;
            v368[1] = sub_3A6EDC;
            void *v367 = 0;
            v367[1] = 0;
            v367[2] = 0;
            v366 = (std::string *)sub_188CDC8((uint64_t)v576, (uint64_t)v367);
            v363 = v579;
          }
          v362 = sub_188C244(v366, v363, (uint64_t)a3);
          v579 = (char *)v362;
          if (!v362) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v362 || *(_WORD *)v362 != 1770) {
            goto LABEL_661;
          }
        }
      case 0x6Eu:
        if (v9 != 114) {
          goto LABEL_690;
        }
        unsigned int v30 = v8 - 2;
        while (1)
        {
          uint64_t v31 = (char *)(v30 + 2);
          v579 = (char *)(v30 + 2);
          char v32 = *(_DWORD **)(a1 + 560);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 552), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 552) = v33 + 1;
            unint64_t v34 = *(std::string **)&v32[2 * v33 + 2];
          }
          else
          {
            if (!*v577) {
              operator new();
            }
            *uint64_t v36 = v35;
            v36[1] = sub_3A6EDC;
            void *v35 = 0;
            v35[1] = 0;
            v35[2] = 0;
            unint64_t v34 = (std::string *)sub_188CDC8((uint64_t)v577, (uint64_t)v35);
            uint64_t v31 = v579;
          }
          unsigned int v30 = sub_188C244(v34, v31, (uint64_t)a3);
          v579 = (char *)v30;
          if (!v30) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *(_WORD *)v30 != 1778) {
            goto LABEL_661;
          }
        }
      case 0x6Fu:
        if (v9 != 120) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x800000u;
        uint64_t v37 = v8 + 1;
        uint64_t v38 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          v420 = (char *)sub_188C138((uint64_t)v8, v38);
          v579 = v420;
          *(unsigned char *)(a1 + 924) = v421 != 0;
          if (!v420) {
            return 0;
          }
        }
        else
        {
          uint64_t v37 = v8 + 2;
LABEL_54:
          v579 = v37;
          *(unsigned char *)(a1 + 924) = v38 != 0;
        }
        goto LABEL_661;
      case 0x70u:
        if (v9 != 129) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x1000000u;
        uint64_t v369 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 928) = v369;
        goto LABEL_660;
      case 0x71u:
        if (v9 != 137) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x2000000u;
        uint64_t v370 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 936) = v370;
        goto LABEL_660;
      case 0x72u:
        if (v9 != 144) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x4000000u;
        v372 = v8 + 1;
        LODWORD(v371) = *v8;
        if ((v371 & 0x80) == 0) {
          goto LABEL_621;
        }
        int v373 = *v372;
        uint64_t v371 = v371 + (v373 << 7) - 128;
        if (v373 < 0)
        {
          v545 = (char *)sub_188C138((uint64_t)v8, v371);
          v579 = v545;
          *(_DWORD *)(a1 + 944) = v546;
          if (!v545) {
            return 0;
          }
        }
        else
        {
          v372 = v8 + 2;
LABEL_621:
          v579 = v372;
          *(_DWORD *)(a1 + 944) = v371;
        }
        goto LABEL_661;
      case 0x73u:
        if (v9 != 154) {
          goto LABEL_690;
        }
        v374 = v8 - 2;
        while (1)
        {
          v375 = (char *)(v374 + 2);
          v579 = (char *)(v374 + 2);
          v376 = *(_DWORD **)(a1 + 584);
          if (v376 && (uint64_t v377 = *(int *)(a1 + 576), (int)v377 < *v376))
          {
            *(_DWORD *)(a1 + 576) = v377 + 1;
            v378 = *(std::string **)&v376[2 * v377 + 2];
          }
          else
          {
            if (!*v578) {
              operator new();
            }
            void *v380 = v379;
            v380[1] = sub_3A6EDC;
            void *v379 = 0;
            v379[1] = 0;
            v379[2] = 0;
            v378 = (std::string *)sub_188CDC8((uint64_t)v578, (uint64_t)v379);
            v375 = v579;
          }
          v374 = sub_188C244(v378, v375, (uint64_t)a3);
          v579 = (char *)v374;
          if (!v374) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v374 || *(_WORD *)v374 != 1946) {
            goto LABEL_661;
          }
        }
      case 0x74u:
        if (v9 != 160) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x8000000u;
        v382 = v8 + 1;
        LODWORD(v381) = *v8;
        if ((v381 & 0x80) == 0) {
          goto LABEL_638;
        }
        int v383 = *v382;
        uint64_t v381 = v381 + (v383 << 7) - 128;
        if (v383 < 0)
        {
          v547 = (char *)sub_188C138((uint64_t)v8, v381);
          v579 = v547;
          *(_DWORD *)(a1 + 948) = v548;
          if (!v547) {
            return 0;
          }
        }
        else
        {
          v382 = v8 + 2;
LABEL_638:
          v579 = v382;
          *(_DWORD *)(a1 + 948) = v381;
        }
        goto LABEL_661;
      case 0x75u:
        if (v9 != 168) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x20000000u;
        v385 = v8 + 1;
        LODWORD(v384) = *v8;
        if ((v384 & 0x80) == 0) {
          goto LABEL_643;
        }
        int v386 = *v385;
        uint64_t v384 = v384 + (v386 << 7) - 128;
        if (v386 < 0)
        {
          v549 = (char *)sub_188C138((uint64_t)v8, v384);
          v579 = v549;
          *(_DWORD *)(a1 + 960) = v550;
          if (!v549) {
            return 0;
          }
        }
        else
        {
          v385 = v8 + 2;
LABEL_643:
          v579 = v385;
          *(_DWORD *)(a1 + 960) = v384;
        }
        goto LABEL_661;
      case 0x76u:
        if (v9 != 177) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x10000000u;
        uint64_t v387 = *(void *)v8;
        int v21 = v8 + 8;
        *(void *)(a1 + 952) = v387;
LABEL_660:
        v579 = v21;
        goto LABEL_661;
      case 0x77u:
        if (v9 != 184) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x40000000u;
        v389 = v8 + 1;
        LODWORD(v388) = *v8;
        if ((v388 & 0x80) == 0) {
          goto LABEL_650;
        }
        int v390 = *v389;
        uint64_t v388 = v388 + (v390 << 7) - 128;
        if (v390 < 0)
        {
          v551 = (char *)sub_188C138((uint64_t)v8, v388);
          v579 = v551;
          *(_DWORD *)(a1 + 964) = v552;
          if (!v551) {
            return 0;
          }
        }
        else
        {
          v389 = v8 + 2;
LABEL_650:
          v579 = v389;
          *(_DWORD *)(a1 + 964) = v388;
        }
        goto LABEL_661;
      case 0x78u:
        if (v9 != 192) {
          goto LABEL_690;
        }
        *(_DWORD *)(a1 + 24) |= 0x80000000;
        v392 = v8 + 1;
        LODWORD(v391) = *v8;
        if ((v391 & 0x80) == 0) {
          goto LABEL_655;
        }
        int v393 = *v392;
        uint64_t v391 = v391 + (v393 << 7) - 128;
        if (v393 < 0)
        {
          v553 = (char *)sub_188C138((uint64_t)v8, v391);
          v579 = v553;
          *(_DWORD *)(a1 + 968) = v554;
          if (!v553) {
            return 0;
          }
        }
        else
        {
          v392 = v8 + 2;
LABEL_655:
          v579 = v392;
          *(_DWORD *)(a1 + 968) = v391;
        }
        goto LABEL_661;
      default:
LABEL_690:
        if (v9) {
          BOOL v412 = (v9 & 7) == 4;
        }
        else {
          BOOL v412 = 1;
        }
        if (!v412)
        {
          if (*v562)
          {
            v413 = (std::string *)((*v562 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v413 = (std::string *)sub_188DBD8(v562);
            uint64_t v8 = v579;
          }
          v579 = (char *)sub_1885AC0(v9, v413, v8, a3);
          if (!v579) {
            return 0;
          }
LABEL_661:
          if (sub_11947B8((uint64_t)a3, &v579, a3[11].i32[1])) {
            return v579;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return v579;
    }
  }
}

uint64_t sub_121E108(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1216FA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_121E198(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12179B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_121E228(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1218318(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_121E2B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1218880(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_121E348(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1218EC4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_121E3D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1219358(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_121E468(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1219A30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_121E4F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_121A06C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_121E588(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 592);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 596);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 600);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 604);
    char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 608);
    char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 612);
    char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 616);
    char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(int *)(a1 + 620);
    char *v4 = 64;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 624);
    char *v4 = 72;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v34 = *(unsigned char *)(a1 + 628);
    char *v4 = 80;
    v4[1] = v34;
    v4 += 2;
    if ((v6 & 0x400) == 0)
    {
LABEL_66:
      if ((v6 & 0x800) == 0) {
        goto LABEL_67;
      }
      goto LABEL_84;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_66;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v35 = *(unsigned char *)(a1 + 629);
  char *v4 = 88;
  v4[1] = v35;
  v4 += 2;
  if ((v6 & 0x800) == 0)
  {
LABEL_67:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_87;
  }
LABEL_84:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v36 = *(unsigned char *)(a1 + 630);
  char *v4 = 96;
  v4[1] = v36;
  v4 += 2;
  if ((v6 & 0x1000) == 0)
  {
LABEL_68:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_69;
    }
    goto LABEL_90;
  }
LABEL_87:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v37 = *(unsigned char *)(a1 + 631);
  char *v4 = 104;
  v4[1] = v37;
  v4 += 2;
  if ((v6 & 0x20000) == 0)
  {
LABEL_69:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_70;
    }
    goto LABEL_93;
  }
LABEL_90:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v38 = *(unsigned char *)(a1 + 648);
  char *v4 = 112;
  v4[1] = v38;
  v4 += 2;
  if ((v6 & 0x40000) == 0)
  {
LABEL_70:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_71;
    }
    goto LABEL_96;
  }
LABEL_93:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v39 = *(unsigned char *)(a1 + 649);
  char *v4 = 120;
  v4[1] = v39;
  v4 += 2;
  if ((v6 & 0x2000) == 0)
  {
LABEL_71:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_99;
  }
LABEL_96:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v40 = *(_DWORD *)(a1 + 632);
  *(_WORD *)uint64_t v4 = 389;
  *(_DWORD *)(v4 + 2) = v40;
  v4 += 6;
  if ((v6 & 0x4000) == 0)
  {
LABEL_72:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_102;
  }
LABEL_99:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v41 = *(_DWORD *)(a1 + 636);
  *(_WORD *)uint64_t v4 = 397;
  *(_DWORD *)(v4 + 2) = v41;
  v4 += 6;
  if ((v6 & 0x8000) == 0)
  {
LABEL_73:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_105;
  }
LABEL_102:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v42 = *(_DWORD *)(a1 + 640);
  *(_WORD *)uint64_t v4 = 405;
  *(_DWORD *)(v4 + 2) = v42;
  v4 += 6;
  if ((v6 & 0x10000) == 0)
  {
LABEL_74:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_108;
  }
LABEL_105:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v43 = *(_DWORD *)(a1 + 644);
  *(_WORD *)uint64_t v4 = 413;
  *(_DWORD *)(v4 + 2) = v43;
  v4 += 6;
  if ((v6 & 0x200000) == 0)
  {
LABEL_75:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_111;
  }
LABEL_108:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v44 = *(_DWORD *)(a1 + 652);
  *(_WORD *)uint64_t v4 = 421;
  *(_DWORD *)(v4 + 2) = v44;
  v4 += 6;
  if ((v6 & 0x400000) == 0)
  {
LABEL_76:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_120;
    }
    goto LABEL_114;
  }
LABEL_111:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v45 = *(_DWORD *)(a1 + 656);
  *(_WORD *)uint64_t v4 = 429;
  *(_DWORD *)(v4 + 2) = v45;
  v4 += 6;
  if ((v6 & 0x800000) != 0)
  {
LABEL_114:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(int *)(a1 + 660);
    *(_WORD *)uint64_t v4 = 432;
    v4[2] = v46;
    if (v46 > 0x7F)
    {
      v4[2] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[3] = v46 >> 7;
      v4 += 4;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_120:
  if ((v6 & 0x80000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v49 = *(unsigned char *)(a1 + 650);
    *(_WORD *)uint64_t v4 = 440;
    v4[2] = v49;
    v4 += 3;
    if ((v6 & 0x1000000) == 0)
    {
LABEL_122:
      if ((v6 & 0x2000000) == 0) {
        goto LABEL_136;
      }
      goto LABEL_130;
    }
  }
  else if ((v6 & 0x1000000) == 0)
  {
    goto LABEL_122;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v50 = *(void *)(a1 + 664);
  *(_WORD *)uint64_t v4 = 449;
  *(void *)(v4 + 2) = v50;
  v4 += 10;
  if ((v6 & 0x2000000) != 0)
  {
LABEL_130:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v51 = *(int *)(a1 + 672);
    *(_WORD *)uint64_t v4 = 456;
    v4[2] = v51;
    if (v51 > 0x7F)
    {
      v4[2] = v51 | 0x80;
      unint64_t v52 = v51 >> 7;
      v4[3] = v51 >> 7;
      v4 += 4;
      if (v51 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v53 = v52 >> 14;
          v52 >>= 7;
          *v4++ = v52;
        }
        while (v53);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_136:
  if ((v6 & 0x4000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v54 = *(int *)(a1 + 676);
    *(_WORD *)uint64_t v4 = 464;
    v4[2] = v54;
    if (v54 > 0x7F)
    {
      v4[2] = v54 | 0x80;
      unint64_t v55 = v54 >> 7;
      v4[3] = v54 >> 7;
      v4 += 4;
      if (v54 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v56 = v55 >> 14;
          v55 >>= 7;
          *v4++ = v55;
        }
        while (v56);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v57 = *(unsigned char *)(a1 + 651);
    *(_WORD *)uint64_t v4 = 472;
    v4[2] = v57;
    v4 += 3;
  }
  uint64_t v58 = *(unsigned int *)(a1 + 48);
  if ((int)v58 >= 1)
  {
    uint64_t v59 = 0;
    uint64_t v60 = 8 * v58;
    do
    {
      uint64_t v61 = *(void **)(*(void *)(a1 + 56) + v59 + 8);
      if (*((char *)v61 + 23) < 0)
      {
        int64_t v62 = v61[1];
        if (v62 > 127) {
          goto LABEL_158;
        }
      }
      else
      {
        int64_t v62 = *((unsigned __int8 *)v61 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v62)
      {
        *(_WORD *)uint64_t v4 = 482;
        v4[2] = v62;
        if (*((char *)v61 + 23) < 0) {
          uint64_t v61 = (void *)*v61;
        }
        int v63 = v4 + 3;
        memcpy(v63, v61, v62);
        uint64_t v4 = &v63[v62];
        goto LABEL_156;
      }
LABEL_158:
      uint64_t v4 = (char *)sub_188A868(a3, 28, (uint64_t)v61, v4);
LABEL_156:
      v59 += 8;
    }
    while (v60 != v59);
  }
  uint64_t v64 = *(unsigned int *)(a1 + 72);
  if ((int)v64 >= 1)
  {
    uint64_t v65 = 0;
    uint64_t v66 = 8 * v64;
    do
    {
      unint64_t v67 = *(void **)(*(void *)(a1 + 80) + v65 + 8);
      if (*((char *)v67 + 23) < 0)
      {
        int64_t v68 = v67[1];
        if (v68 > 127) {
          goto LABEL_170;
        }
      }
      else
      {
        int64_t v68 = *((unsigned __int8 *)v67 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v68)
      {
        *(_WORD *)uint64_t v4 = 490;
        v4[2] = v68;
        if (*((char *)v67 + 23) < 0) {
          unint64_t v67 = (void *)*v67;
        }
        int v69 = v4 + 3;
        memcpy(v69, v67, v68);
        uint64_t v4 = &v69[v68];
        goto LABEL_168;
      }
LABEL_170:
      uint64_t v4 = (char *)sub_188A868(a3, 29, (uint64_t)v67, v4);
LABEL_168:
      v65 += 8;
    }
    while (v66 != v65);
  }
  if ((v6 & 0x8000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v70 = *(int *)(a1 + 680);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v70;
    if (v70 > 0x7F)
    {
      v4[2] = v70 | 0x80;
      unint64_t v71 = v70 >> 7;
      v4[3] = v70 >> 7;
      v4 += 4;
      if (v70 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v72 = v71 >> 14;
          v71 >>= 7;
          *v4++ = v71;
        }
        while (v72);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 20) & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v73 = *(unsigned char *)(a1 + 716);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v73;
    v4 += 3;
  }
  int v74 = *(_DWORD *)(a1 + 16);
  if ((v74 & 0x10000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v75 = *(int *)(a1 + 684);
    *(_WORD *)uint64_t v4 = 640;
    v4[2] = v75;
    if (v75 > 0x7F)
    {
      v4[2] = v75 | 0x80;
      unint64_t v76 = v75 >> 7;
      v4[3] = v75 >> 7;
      v4 += 4;
      if (v75 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v77 = v76 >> 14;
          v76 >>= 7;
          *v4++ = v76;
        }
        while (v77);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v74 & 0x20000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v78 = *(int *)(a1 + 688);
    *(_WORD *)uint64_t v4 = 648;
    v4[2] = v78;
    if (v78 > 0x7F)
    {
      v4[2] = v78 | 0x80;
      unint64_t v79 = v78 >> 7;
      v4[3] = v78 >> 7;
      v4 += 4;
      if (v78 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v80 = v79 >> 14;
          v79 >>= 7;
          *v4++ = v79;
        }
        while (v80);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v81 = *(_DWORD *)(a1 + 96);
  if (v81)
  {
    for (int i = 0; i != v81; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v83 = *(void *)(*(void *)(a1 + 104) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 658;
      unsigned int v84 = *(_DWORD *)(v83 + 20);
      v4[2] = v84;
      if (v84 > 0x7F) {
        int v85 = sub_188A9CC(v84, v4 + 2);
      }
      else {
        int v85 = v4 + 3;
      }
      uint64_t v4 = sub_1217230(v83, v85, a3);
    }
  }
  int v86 = *(_DWORD *)(a1 + 120);
  if (v86)
  {
    for (int j = 0; j != v86; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v88 = *(void *)(*(void *)(a1 + 128) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 666;
      unsigned int v89 = *(_DWORD *)(v88 + 20);
      v4[2] = v89;
      if (v89 > 0x7F) {
        int v90 = sub_188A9CC(v89, v4 + 2);
      }
      else {
        int v90 = v4 + 3;
      }
      uint64_t v4 = sub_1217D40(v88, v90, a3);
    }
  }
  int v91 = *(_DWORD *)(a1 + 144);
  if (v91)
  {
    for (int k = 0; k != v91; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v93 = *(void *)(*(void *)(a1 + 152) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 674;
      unsigned int v94 = *(_DWORD *)(v93 + 20);
      v4[2] = v94;
      if (v94 > 0x7F) {
        uint64_t v95 = sub_188A9CC(v94, v4 + 2);
      }
      else {
        uint64_t v95 = v4 + 3;
      }
      uint64_t v4 = sub_12184F0(v93, v95, a3);
    }
  }
  if ((v74 & 0x80000000) == 0)
  {
    if ((v74 & 0x40000000) == 0) {
      goto LABEL_232;
    }
    goto LABEL_226;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v96 = *(void *)(a1 + 696);
  *(_WORD *)uint64_t v4 = 681;
  *(void *)(v4 + 2) = v96;
  v4 += 10;
  if ((v74 & 0x40000000) != 0)
  {
LABEL_226:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v97 = *(int *)(a1 + 692);
    *(_WORD *)uint64_t v4 = 688;
    v4[2] = v97;
    if (v97 > 0x7F)
    {
      v4[2] = v97 | 0x80;
      unint64_t v98 = v97 >> 7;
      v4[3] = v97 >> 7;
      v4 += 4;
      if (v97 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v99 = v98 >> 14;
          v98 >>= 7;
          *v4++ = v98;
        }
        while (v99);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_232:
  int v100 = *(_DWORD *)(a1 + 20);
  if (v100)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v101 = *(int *)(a1 + 704);
    *(_WORD *)uint64_t v4 = 696;
    v4[2] = v101;
    if (v101 > 0x7F)
    {
      v4[2] = v101 | 0x80;
      unint64_t v102 = v101 >> 7;
      v4[3] = v101 >> 7;
      v4 += 4;
      if (v101 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v103 = v102 >> 14;
          v102 >>= 7;
          *v4++ = v102;
        }
        while (v103);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v104 = *(int *)(a1 + 708);
    *(_WORD *)uint64_t v4 = 704;
    v4[2] = v104;
    if (v104 > 0x7F)
    {
      v4[2] = v104 | 0x80;
      unint64_t v105 = v104 >> 7;
      v4[3] = v104 >> 7;
      v4 += 4;
      if (v104 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v106 = v105 >> 14;
          v105 >>= 7;
          *v4++ = v105;
        }
        while (v106);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v107 = *(unsigned char *)(a1 + 717);
    *(_WORD *)uint64_t v4 = 712;
    v4[2] = v107;
    v4 += 3;
    if ((v100 & 0x20) == 0)
    {
LABEL_248:
      if ((v100 & 4) == 0) {
        goto LABEL_262;
      }
      goto LABEL_256;
    }
  }
  else if ((v100 & 0x20) == 0)
  {
    goto LABEL_248;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v108 = *(unsigned char *)(a1 + 718);
  *(_WORD *)uint64_t v4 = 720;
  v4[2] = v108;
  v4 += 3;
  if ((v100 & 4) != 0)
  {
LABEL_256:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v109 = *(int *)(a1 + 712);
    *(_WORD *)uint64_t v4 = 728;
    v4[2] = v109;
    if (v109 > 0x7F)
    {
      v4[2] = v109 | 0x80;
      unint64_t v110 = v109 >> 7;
      v4[3] = v109 >> 7;
      v4 += 4;
      if (v109 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v111 = v110 >> 14;
          v110 >>= 7;
          *v4++ = v110;
        }
        while (v111);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_262:
  if ((v100 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v112 = *(int *)(a1 + 720);
    *(_WORD *)uint64_t v4 = 736;
    v4[2] = v112;
    if (v112 > 0x7F)
    {
      v4[2] = v112 | 0x80;
      unint64_t v113 = v112 >> 7;
      v4[3] = v112 >> 7;
      v4 += 4;
      if (v112 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v114 = v113 >> 14;
          v113 >>= 7;
          *v4++ = v113;
        }
        while (v114);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v115 = *(int *)(a1 + 724);
    *(_WORD *)uint64_t v4 = 744;
    v4[2] = v115;
    if (v115 > 0x7F)
    {
      v4[2] = v115 | 0x80;
      unint64_t v116 = v115 >> 7;
      v4[3] = v115 >> 7;
      v4 += 4;
      if (v115 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v117 = v116 >> 14;
          v116 >>= 7;
          *v4++ = v116;
        }
        while (v117);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v118 = *(int *)(a1 + 728);
    *(_WORD *)uint64_t v4 = 752;
    v4[2] = v118;
    if (v118 > 0x7F)
    {
      v4[2] = v118 | 0x80;
      unint64_t v119 = v118 >> 7;
      v4[3] = v118 >> 7;
      v4 += 4;
      if (v118 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v120 = v119 >> 14;
          v119 >>= 7;
          *v4++ = v119;
        }
        while (v120);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x400) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v121 = *(int *)(a1 + 732);
    *(_WORD *)uint64_t v4 = 760;
    v4[2] = v121;
    if (v121 > 0x7F)
    {
      v4[2] = v121 | 0x80;
      unint64_t v122 = v121 >> 7;
      v4[3] = v121 >> 7;
      v4 += 4;
      if (v121 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v123 = v122 >> 14;
          v122 >>= 7;
          *v4++ = v122;
        }
        while (v123);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x800) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v124 = *(int *)(a1 + 736);
    *(_WORD *)uint64_t v4 = 896;
    v4[2] = v124;
    if (v124 > 0x7F)
    {
      v4[2] = v124 | 0x80;
      unint64_t v125 = v124 >> 7;
      v4[3] = v124 >> 7;
      v4 += 4;
      if (v124 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v126 = v125 >> 14;
          v125 >>= 7;
          *v4++ = v125;
        }
        while (v126);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x1000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v127 = *(int *)(a1 + 740);
    *(_WORD *)uint64_t v4 = 904;
    v4[2] = v127;
    if (v127 > 0x7F)
    {
      v4[2] = v127 | 0x80;
      unint64_t v128 = v127 >> 7;
      v4[3] = v127 >> 7;
      v4 += 4;
      if (v127 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v129 = v128 >> 14;
          v128 >>= 7;
          *v4++ = v128;
        }
        while (v129);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x2000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v130 = *(int *)(a1 + 744);
    *(_WORD *)uint64_t v4 = 912;
    v4[2] = v130;
    if (v130 > 0x7F)
    {
      v4[2] = v130 | 0x80;
      unint64_t v131 = v130 >> 7;
      v4[3] = v130 >> 7;
      v4 += 4;
      if (v130 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v132 = v131 >> 14;
          v131 >>= 7;
          *v4++ = v131;
        }
        while (v132);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x4000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v133 = *(int *)(a1 + 748);
    *(_WORD *)uint64_t v4 = 920;
    v4[2] = v133;
    if (v133 > 0x7F)
    {
      v4[2] = v133 | 0x80;
      unint64_t v134 = v133 >> 7;
      v4[3] = v133 >> 7;
      v4 += 4;
      if (v133 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v135 = v134 >> 14;
          v134 >>= 7;
          *v4++ = v134;
        }
        while (v135);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x8000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v136 = *(int *)(a1 + 752);
    *(_WORD *)uint64_t v4 = 928;
    v4[2] = v136;
    if (v136 > 0x7F)
    {
      v4[2] = v136 | 0x80;
      unint64_t v137 = v136 >> 7;
      v4[3] = v136 >> 7;
      v4 += 4;
      if (v136 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v138 = v137 >> 14;
          v137 >>= 7;
          *v4++ = v137;
        }
        while (v138);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x10000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v139 = *(int *)(a1 + 756);
    *(_WORD *)uint64_t v4 = 936;
    v4[2] = v139;
    if (v139 > 0x7F)
    {
      v4[2] = v139 | 0x80;
      unint64_t v140 = v139 >> 7;
      v4[3] = v139 >> 7;
      v4 += 4;
      if (v139 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v141 = v140 >> 14;
          v140 >>= 7;
          *v4++ = v140;
        }
        while (v141);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x20000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v142 = *(int *)(a1 + 760);
    *(_WORD *)uint64_t v4 = 944;
    v4[2] = v142;
    if (v142 > 0x7F)
    {
      v4[2] = v142 | 0x80;
      unint64_t v143 = v142 >> 7;
      v4[3] = v142 >> 7;
      v4 += 4;
      if (v142 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v144 = v143 >> 14;
          v143 >>= 7;
          *v4++ = v143;
        }
        while (v144);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x40000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v145 = *(int *)(a1 + 764);
    *(_WORD *)uint64_t v4 = 952;
    v4[2] = v145;
    if (v145 > 0x7F)
    {
      v4[2] = v145 | 0x80;
      unint64_t v146 = v145 >> 7;
      v4[3] = v145 >> 7;
      v4 += 4;
      if (v145 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v147 = v146 >> 14;
          v146 >>= 7;
          *v4++ = v146;
        }
        while (v147);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x80000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v148 = *(int *)(a1 + 768);
    *(_WORD *)uint64_t v4 = 960;
    v4[2] = v148;
    if (v148 > 0x7F)
    {
      v4[2] = v148 | 0x80;
      unint64_t v149 = v148 >> 7;
      v4[3] = v148 >> 7;
      v4 += 4;
      if (v148 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v150 = v149 >> 14;
          v149 >>= 7;
          *v4++ = v149;
        }
        while (v150);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x100000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v151 = *(int *)(a1 + 772);
    *(_WORD *)uint64_t v4 = 968;
    v4[2] = v151;
    if (v151 > 0x7F)
    {
      v4[2] = v151 | 0x80;
      unint64_t v152 = v151 >> 7;
      v4[3] = v151 >> 7;
      v4 += 4;
      if (v151 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v153 = v152 >> 14;
          v152 >>= 7;
          *v4++ = v152;
        }
        while (v153);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v154 = *(unsigned char *)(a1 + 719);
    *(_WORD *)uint64_t v4 = 976;
    v4[2] = v154;
    v4 += 3;
  }
  int v155 = *(_DWORD *)(a1 + 168);
  if (v155)
  {
    for (int m = 0; m != v155; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v157 = *(void *)(*(void *)(a1 + 176) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 986;
      unsigned int v158 = *(_DWORD *)(v157 + 20);
      v4[2] = v158;
      if (v158 > 0x7F) {
        uint64_t v159 = sub_188A9CC(v158, v4 + 2);
      }
      else {
        uint64_t v159 = v4 + 3;
      }
      uint64_t v4 = sub_1218AD4(v157, v159, a3);
    }
  }
  if ((v100 & 0x400000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v160 = *(unsigned char *)(a1 + 780);
    *(_WORD *)uint64_t v4 = 992;
    v4[2] = v160;
    v4 += 3;
  }
  if ((v100 & 0x200000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v161 = *(int *)(a1 + 776);
    *(_WORD *)uint64_t v4 = 1000;
    v4[2] = v161;
    if (v161 > 0x7F)
    {
      v4[2] = v161 | 0x80;
      unint64_t v162 = v161 >> 7;
      v4[3] = v161 >> 7;
      v4 += 4;
      if (v161 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v163 = v162 >> 14;
          v162 >>= 7;
          *v4++ = v162;
        }
        while (v163);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v100 & 0x800000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v164 = *(unsigned char *)(a1 + 781);
    *(_WORD *)uint64_t v4 = 1008;
    v4[2] = v164;
    v4 += 3;
    if ((v100 & 0x1000000) == 0)
    {
LABEL_385:
      if ((v100 & 0x4000000) == 0) {
        goto LABEL_386;
      }
      goto LABEL_397;
    }
  }
  else if ((v100 & 0x1000000) == 0)
  {
    goto LABEL_385;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v165 = *(unsigned char *)(a1 + 782);
  *(_WORD *)uint64_t v4 = 1016;
  v4[2] = v165;
  v4 += 3;
  if ((v100 & 0x4000000) == 0)
  {
LABEL_386:
    if ((v100 & 0x8000000) == 0) {
      goto LABEL_387;
    }
    goto LABEL_400;
  }
LABEL_397:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v166 = *(void *)(a1 + 784);
  *(_WORD *)uint64_t v4 = 1153;
  *(void *)(v4 + 2) = v166;
  v4 += 10;
  if ((v100 & 0x8000000) == 0)
  {
LABEL_387:
    if ((v100 & 0x10000000) == 0) {
      goto LABEL_388;
    }
    goto LABEL_403;
  }
LABEL_400:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v167 = *(void *)(a1 + 792);
  *(_WORD *)uint64_t v4 = 1161;
  *(void *)(v4 + 2) = v167;
  v4 += 10;
  if ((v100 & 0x10000000) == 0)
  {
LABEL_388:
    if ((v100 & 0x20000000) == 0) {
      goto LABEL_389;
    }
    goto LABEL_406;
  }
LABEL_403:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v168 = *(void *)(a1 + 800);
  *(_WORD *)uint64_t v4 = 1169;
  *(void *)(v4 + 2) = v168;
  v4 += 10;
  if ((v100 & 0x20000000) == 0)
  {
LABEL_389:
    if ((v100 & 0x2000000) == 0) {
      goto LABEL_412;
    }
    goto LABEL_409;
  }
LABEL_406:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v169 = *(void *)(a1 + 808);
  *(_WORD *)uint64_t v4 = 1177;
  *(void *)(v4 + 2) = v169;
  v4 += 10;
  if ((v100 & 0x2000000) != 0)
  {
LABEL_409:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v170 = *(unsigned char *)(a1 + 783);
    *(_WORD *)uint64_t v4 = 1184;
    v4[2] = v170;
    v4 += 3;
  }
LABEL_412:
  if (*(unsigned char *)(a1 + 28))
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v171 = *(int *)(a1 + 972);
    *(_WORD *)uint64_t v4 = 1192;
    v4[2] = v171;
    if (v171 > 0x7F)
    {
      v4[2] = v171 | 0x80;
      unint64_t v172 = v171 >> 7;
      v4[3] = v171 >> 7;
      v4 += 4;
      if (v171 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v173 = v172 >> 14;
          v172 >>= 7;
          *v4++ = v172;
        }
        while (v173);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((*(_DWORD *)(a1 + 20) & 0x80000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v174 = *(unsigned char *)(a1 + 824);
    *(_WORD *)uint64_t v4 = 1200;
    v4[2] = v174;
    v4 += 3;
  }
  int v175 = *(_DWORD *)(a1 + 192);
  if (v175)
  {
    for (int n = 0; n != v175; ++n)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v177 = *(void *)(*(void *)(a1 + 200) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 1210;
      unsigned int v178 = *(_DWORD *)(v177 + 20);
      v4[2] = v178;
      if (v178 > 0x7F) {
        uint64_t v179 = sub_188A9CC(v178, v4 + 2);
      }
      else {
        uint64_t v179 = v4 + 3;
      }
      uint64_t v4 = sub_121906C(v177, v179, a3);
    }
  }
  int v180 = *(_DWORD *)(a1 + 24);
  if (v180)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v181 = *(unsigned char *)(a1 + 825);
    *(_WORD *)uint64_t v4 = 1216;
    v4[2] = v181;
    v4 += 3;
  }
  if ((v180 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v182 = *(unsigned char *)(a1 + 826);
    *(_WORD *)uint64_t v4 = 1224;
    v4[2] = v182;
    v4 += 3;
  }
  int v183 = *(_DWORD *)(a1 + 216);
  if (v183)
  {
    for (iint i = 0; ii != v183; ++ii)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v185 = *(void *)(*(void *)(a1 + 224) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 1234;
      unsigned int v186 = *(_DWORD *)(v185 + 20);
      v4[2] = v186;
      if (v186 > 0x7F) {
        int v187 = sub_188A9CC(v186, v4 + 2);
      }
      else {
        int v187 = v4 + 3;
      }
      uint64_t v4 = sub_12195FC(v185, (unint64_t)v187, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 23) & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v188 = *(void *)(a1 + 816);
    *(_WORD *)uint64_t v4 = 1241;
    *(void *)(v4 + 2) = v188;
    v4 += 10;
  }
  uint64_t v189 = *(unsigned int *)(a1 + 240);
  if ((int)v189 >= 1)
  {
    uint64_t v190 = 0;
    uint64_t v191 = 8 * v189;
    do
    {
      v192 = *(void **)(*(void *)(a1 + 248) + v190 + 8);
      if (*((char *)v192 + 23) < 0)
      {
        int64_t v193 = v192[1];
        if (v193 > 127) {
          goto LABEL_462;
        }
      }
      else
      {
        int64_t v193 = *((unsigned __int8 *)v192 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v193)
      {
        *(_WORD *)uint64_t v4 = 1250;
        v4[2] = v193;
        if (*((char *)v192 + 23) < 0) {
          v192 = (void *)*v192;
        }
        uint64_t v194 = v4 + 3;
        memcpy(v194, v192, v193);
        uint64_t v4 = &v194[v193];
        goto LABEL_460;
      }
LABEL_462:
      uint64_t v4 = (char *)sub_188A868(a3, 76, (uint64_t)v192, v4);
LABEL_460:
      v190 += 8;
    }
    while (v191 != v190);
  }
  uint64_t v195 = *(unsigned int *)(a1 + 264);
  if ((int)v195 >= 1)
  {
    uint64_t v196 = 0;
    uint64_t v197 = 8 * v195;
    do
    {
      v198 = *(void **)(*(void *)(a1 + 272) + v196 + 8);
      if (*((char *)v198 + 23) < 0)
      {
        int64_t v199 = v198[1];
        if (v199 > 127) {
          goto LABEL_474;
        }
      }
      else
      {
        int64_t v199 = *((unsigned __int8 *)v198 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v199)
      {
        *(_WORD *)uint64_t v4 = 1258;
        v4[2] = v199;
        if (*((char *)v198 + 23) < 0) {
          v198 = (void *)*v198;
        }
        uint64_t v200 = v4 + 3;
        memcpy(v200, v198, v199);
        uint64_t v4 = &v200[v199];
        goto LABEL_472;
      }
LABEL_474:
      uint64_t v4 = (char *)sub_188A868(a3, 77, (uint64_t)v198, v4);
LABEL_472:
      v196 += 8;
    }
    while (v197 != v196);
  }
  uint64_t v201 = *(unsigned int *)(a1 + 288);
  if ((int)v201 >= 1)
  {
    uint64_t v202 = 0;
    uint64_t v203 = 8 * v201;
    do
    {
      v204 = *(void **)(*(void *)(a1 + 296) + v202 + 8);
      if (*((char *)v204 + 23) < 0)
      {
        int64_t v205 = v204[1];
        if (v205 > 127) {
          goto LABEL_486;
        }
      }
      else
      {
        int64_t v205 = *((unsigned __int8 *)v204 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v205)
      {
        *(_WORD *)uint64_t v4 = 1266;
        v4[2] = v205;
        if (*((char *)v204 + 23) < 0) {
          v204 = (void *)*v204;
        }
        uint64_t v206 = v4 + 3;
        memcpy(v206, v204, v205);
        uint64_t v4 = &v206[v205];
        goto LABEL_484;
      }
LABEL_486:
      uint64_t v4 = (char *)sub_188A868(a3, 78, (uint64_t)v204, v4);
LABEL_484:
      v202 += 8;
    }
    while (v203 != v202);
  }
  int v207 = *(_DWORD *)(a1 + 312);
  if (v207)
  {
    for (jint j = 0; jj != v207; ++jj)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v209 = *(void *)(*(void *)(a1 + 320) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 1274;
      unsigned int v210 = *(_DWORD *)(v209 + 20);
      v4[2] = v210;
      if (v210 > 0x7F) {
        int v211 = sub_188A9CC(v210, v4 + 2);
      }
      else {
        int v211 = v4 + 3;
      }
      uint64_t v4 = sub_1219C84(v209, v211, a3);
    }
  }
  int v212 = *(_DWORD *)(a1 + 336);
  if (v212)
  {
    for (kint k = 0; kk != v212; ++kk)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v214 = *(void *)(*(void *)(a1 + 344) + 8 * kk + 8);
      *(_WORD *)uint64_t v4 = 1410;
      unsigned int v215 = *(_DWORD *)(v214 + 20);
      v4[2] = v215;
      if (v215 > 0x7F) {
        uint64_t v216 = sub_188A9CC(v215, v4 + 2);
      }
      else {
        uint64_t v216 = v4 + 3;
      }
      uint64_t v4 = sub_121A2C0(v214, v216, a3);
    }
  }
  int v217 = *(_DWORD *)(a1 + 24);
  if ((v217 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v218 = *(int *)(a1 + 828);
    *(_WORD *)uint64_t v4 = 1416;
    v4[2] = v218;
    if (v218 > 0x7F)
    {
      v4[2] = v218 | 0x80;
      unint64_t v219 = v218 >> 7;
      v4[3] = v218 >> 7;
      v4 += 4;
      if (v218 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v220 = v219 >> 14;
          v219 >>= 7;
          *v4++ = v219;
        }
        while (v220);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v221 = *(int *)(a1 + 832);
    *(_WORD *)uint64_t v4 = 1424;
    v4[2] = v221;
    if (v221 > 0x7F)
    {
      v4[2] = v221 | 0x80;
      unint64_t v222 = v221 >> 7;
      v4[3] = v221 >> 7;
      v4 += 4;
      if (v221 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v223 = v222 >> 14;
          v222 >>= 7;
          *v4++ = v222;
        }
        while (v223);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v224 = *(int *)(a1 + 836);
    *(_WORD *)uint64_t v4 = 1432;
    v4[2] = v224;
    if (v224 > 0x7F)
    {
      v4[2] = v224 | 0x80;
      unint64_t v225 = v224 >> 7;
      v4[3] = v224 >> 7;
      v4 += 4;
      if (v224 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v226 = v225 >> 14;
          v225 >>= 7;
          *v4++ = v225;
        }
        while (v226);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v227 = *(int *)(a1 + 840);
    *(_WORD *)uint64_t v4 = 1440;
    v4[2] = v227;
    if (v227 > 0x7F)
    {
      v4[2] = v227 | 0x80;
      unint64_t v228 = v227 >> 7;
      v4[3] = v227 >> 7;
      v4 += 4;
      if (v227 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v229 = v228 >> 14;
          v228 >>= 7;
          *v4++ = v228;
        }
        while (v229);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v230 = *(unsigned char *)(a1 + 827);
    *(_WORD *)uint64_t v4 = 1448;
    v4[2] = v230;
    v4 += 3;
  }
  if ((v217 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v231 = *(int *)(a1 + 844);
    *(_WORD *)uint64_t v4 = 1456;
    v4[2] = v231;
    if (v231 > 0x7F)
    {
      v4[2] = v231 | 0x80;
      unint64_t v232 = v231 >> 7;
      v4[3] = v231 >> 7;
      v4 += 4;
      if (v231 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v233 = v232 >> 14;
          v232 >>= 7;
          *v4++ = v232;
        }
        while (v233);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v234 = *(unsigned int *)(a1 + 360);
  if ((int)v234 >= 1)
  {
    uint64_t v235 = 0;
    uint64_t v236 = 8 * v234;
    do
    {
      v237 = *(void **)(*(void *)(a1 + 368) + v235 + 8);
      if (*((char *)v237 + 23) < 0)
      {
        int64_t v238 = v237[1];
        if (v238 > 127) {
          goto LABEL_553;
        }
      }
      else
      {
        int64_t v238 = *((unsigned __int8 *)v237 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v238)
      {
        *(_WORD *)uint64_t v4 = 1466;
        v4[2] = v238;
        if (*((char *)v237 + 23) < 0) {
          v237 = (void *)*v237;
        }
        int v239 = v4 + 3;
        memcpy(v239, v237, v238);
        uint64_t v4 = &v239[v238];
        goto LABEL_551;
      }
LABEL_553:
      uint64_t v4 = (char *)sub_188A868(a3, 87, (uint64_t)v237, v4);
LABEL_551:
      v235 += 8;
    }
    while (v236 != v235);
  }
  uint64_t v240 = *(unsigned int *)(a1 + 384);
  if ((int)v240 >= 1)
  {
    uint64_t v241 = 0;
    uint64_t v242 = 8 * v240;
    do
    {
      int v243 = *(void **)(*(void *)(a1 + 392) + v241 + 8);
      if (*((char *)v243 + 23) < 0)
      {
        int64_t v244 = v243[1];
        if (v244 > 127) {
          goto LABEL_565;
        }
      }
      else
      {
        int64_t v244 = *((unsigned __int8 *)v243 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v244)
      {
        *(_WORD *)uint64_t v4 = 1474;
        v4[2] = v244;
        if (*((char *)v243 + 23) < 0) {
          int v243 = (void *)*v243;
        }
        v245 = v4 + 3;
        memcpy(v245, v243, v244);
        uint64_t v4 = &v245[v244];
        goto LABEL_563;
      }
LABEL_565:
      uint64_t v4 = (char *)sub_188A868(a3, 88, (uint64_t)v243, v4);
LABEL_563:
      v241 += 8;
    }
    while (v242 != v241);
  }
  if ((v217 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v246 = *(void *)(a1 + 848);
    *(_WORD *)uint64_t v4 = 1481;
    *(void *)(v4 + 2) = v246;
    v4 += 10;
    if ((v217 & 0x200) == 0)
    {
LABEL_568:
      if ((v217 & 0x400) == 0) {
        goto LABEL_569;
      }
      goto LABEL_581;
    }
  }
  else if ((v217 & 0x200) == 0)
  {
    goto LABEL_568;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v247 = *(void *)(a1 + 856);
  *(_WORD *)uint64_t v4 = 1489;
  *(void *)(v4 + 2) = v247;
  v4 += 10;
  if ((v217 & 0x400) == 0)
  {
LABEL_569:
    if ((v217 & 0x800) == 0) {
      goto LABEL_570;
    }
    goto LABEL_584;
  }
LABEL_581:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v248 = *(void *)(a1 + 864);
  *(_WORD *)uint64_t v4 = 1497;
  *(void *)(v4 + 2) = v248;
  v4 += 10;
  if ((v217 & 0x800) == 0)
  {
LABEL_570:
    if ((v217 & 0x1000) == 0) {
      goto LABEL_571;
    }
    goto LABEL_587;
  }
LABEL_584:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v249 = *(void *)(a1 + 872);
  *(_WORD *)uint64_t v4 = 1505;
  *(void *)(v4 + 2) = v249;
  v4 += 10;
  if ((v217 & 0x1000) == 0)
  {
LABEL_571:
    if ((v217 & 0x2000) == 0) {
      goto LABEL_572;
    }
    goto LABEL_590;
  }
LABEL_587:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v250 = *(unsigned char *)(a1 + 880);
  *(_WORD *)uint64_t v4 = 1512;
  v4[2] = v250;
  v4 += 3;
  if ((v217 & 0x2000) == 0)
  {
LABEL_572:
    if ((v217 & 0x4000) == 0) {
      goto LABEL_573;
    }
    goto LABEL_593;
  }
LABEL_590:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v251 = *(unsigned char *)(a1 + 881);
  *(_WORD *)uint64_t v4 = 1520;
  v4[2] = v251;
  v4 += 3;
  if ((v217 & 0x4000) == 0)
  {
LABEL_573:
    if ((v217 & 0x10000) == 0) {
      goto LABEL_602;
    }
    goto LABEL_596;
  }
LABEL_593:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v252 = *(unsigned char *)(a1 + 882);
  *(_WORD *)uint64_t v4 = 1528;
  v4[2] = v252;
  v4 += 3;
  if ((v217 & 0x10000) != 0)
  {
LABEL_596:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v253 = *(int *)(a1 + 884);
    *(_WORD *)uint64_t v4 = 1664;
    v4[2] = v253;
    if (v253 > 0x7F)
    {
      v4[2] = v253 | 0x80;
      unint64_t v254 = v253 >> 7;
      v4[3] = v253 >> 7;
      v4 += 4;
      if (v253 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v255 = v254 >> 14;
          v254 >>= 7;
          *v4++ = v254;
        }
        while (v255);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_602:
  uint64_t v256 = *(unsigned int *)(a1 + 408);
  if ((int)v256 >= 1)
  {
    uint64_t v257 = 0;
    uint64_t v258 = 8 * v256;
    do
    {
      uint64_t v259 = *(void **)(*(void *)(a1 + 416) + v257 + 8);
      if (*((char *)v259 + 23) < 0)
      {
        int64_t v260 = v259[1];
        if (v260 > 127) {
          goto LABEL_613;
        }
      }
      else
      {
        int64_t v260 = *((unsigned __int8 *)v259 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v260)
      {
        *(_WORD *)uint64_t v4 = 1674;
        v4[2] = v260;
        if (*((char *)v259 + 23) < 0) {
          uint64_t v259 = (void *)*v259;
        }
        uint64_t v261 = v4 + 3;
        memcpy(v261, v259, v260);
        uint64_t v4 = &v261[v260];
        goto LABEL_611;
      }
LABEL_613:
      uint64_t v4 = (char *)sub_188A868(a3, 97, (uint64_t)v259, v4);
LABEL_611:
      v257 += 8;
    }
    while (v258 != v257);
  }
  uint64_t v262 = *(unsigned int *)(a1 + 432);
  if ((int)v262 >= 1)
  {
    uint64_t v263 = 0;
    uint64_t v264 = 8 * v262;
    do
    {
      v265 = *(void **)(*(void *)(a1 + 440) + v263 + 8);
      if (*((char *)v265 + 23) < 0)
      {
        int64_t v266 = v265[1];
        if (v266 > 127) {
          goto LABEL_625;
        }
      }
      else
      {
        int64_t v266 = *((unsigned __int8 *)v265 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v266)
      {
        *(_WORD *)uint64_t v4 = 1682;
        v4[2] = v266;
        if (*((char *)v265 + 23) < 0) {
          v265 = (void *)*v265;
        }
        v267 = v4 + 3;
        memcpy(v267, v265, v266);
        uint64_t v4 = &v267[v266];
        goto LABEL_623;
      }
LABEL_625:
      uint64_t v4 = (char *)sub_188A868(a3, 98, (uint64_t)v265, v4);
LABEL_623:
      v263 += 8;
    }
    while (v264 != v263);
  }
  if ((v217 & 0x8000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v268 = *(unsigned char *)(a1 + 883);
    *(_WORD *)uint64_t v4 = 1688;
    v4[2] = v268;
    v4 += 3;
  }
  if ((v217 & 0x20000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v269 = *(int *)(a1 + 888);
    *(_WORD *)uint64_t v4 = 1696;
    v4[2] = v269;
    if (v269 > 0x7F)
    {
      v4[2] = v269 | 0x80;
      unint64_t v270 = v269 >> 7;
      v4[3] = v269 >> 7;
      v4 += 4;
      if (v269 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v271 = v270 >> 14;
          v270 >>= 7;
          *v4++ = v270;
        }
        while (v271);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 0x40000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v272 = *(int *)(a1 + 892);
    *(_WORD *)uint64_t v4 = 1704;
    v4[2] = v272;
    if (v272 > 0x7F)
    {
      v4[2] = v272 | 0x80;
      unint64_t v273 = v272 >> 7;
      v4[3] = v272 >> 7;
      v4 += 4;
      if (v272 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v274 = v273 >> 14;
          v273 >>= 7;
          *v4++ = v273;
        }
        while (v274);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 0x80000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v275 = *(void *)(a1 + 896);
    *(_WORD *)uint64_t v4 = 1713;
    *(void *)(v4 + 2) = v275;
    v4 += 10;
    if ((v217 & 0x100000) == 0)
    {
LABEL_646:
      if ((v217 & 0x200000) == 0) {
        goto LABEL_647;
      }
      goto LABEL_655;
    }
  }
  else if ((v217 & 0x100000) == 0)
  {
    goto LABEL_646;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v276 = *(void *)(a1 + 904);
  *(_WORD *)uint64_t v4 = 1721;
  *(void *)(v4 + 2) = v276;
  v4 += 10;
  if ((v217 & 0x200000) == 0)
  {
LABEL_647:
    if ((v217 & 0x400000) == 0) {
      goto LABEL_664;
    }
    goto LABEL_658;
  }
LABEL_655:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v277 = *(void *)(a1 + 912);
  *(_WORD *)uint64_t v4 = 1729;
  *(void *)(v4 + 2) = v277;
  v4 += 10;
  if ((v217 & 0x400000) != 0)
  {
LABEL_658:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v278 = *(int *)(a1 + 920);
    *(_WORD *)uint64_t v4 = 1736;
    v4[2] = v278;
    if (v278 > 0x7F)
    {
      v4[2] = v278 | 0x80;
      unint64_t v279 = v278 >> 7;
      v4[3] = v278 >> 7;
      v4 += 4;
      if (v278 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v280 = v279 >> 14;
          v279 >>= 7;
          *v4++ = v279;
        }
        while (v280);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_664:
  uint64_t v281 = *(unsigned int *)(a1 + 456);
  if ((int)v281 >= 1)
  {
    uint64_t v282 = 0;
    uint64_t v283 = 8 * v281;
    do
    {
      v284 = *(void **)(*(void *)(a1 + 464) + v282 + 8);
      if (*((char *)v284 + 23) < 0)
      {
        int64_t v285 = v284[1];
        if (v285 > 127) {
          goto LABEL_675;
        }
      }
      else
      {
        int64_t v285 = *((unsigned __int8 *)v284 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v285)
      {
        *(_WORD *)uint64_t v4 = 1746;
        v4[2] = v285;
        if (*((char *)v284 + 23) < 0) {
          v284 = (void *)*v284;
        }
        v286 = v4 + 3;
        memcpy(v286, v284, v285);
        uint64_t v4 = &v286[v285];
        goto LABEL_673;
      }
LABEL_675:
      uint64_t v4 = (char *)sub_188A868(a3, 106, (uint64_t)v284, v4);
LABEL_673:
      v282 += 8;
    }
    while (v283 != v282);
  }
  uint64_t v287 = *(unsigned int *)(a1 + 480);
  if ((int)v287 >= 1)
  {
    uint64_t v288 = 0;
    uint64_t v289 = 8 * v287;
    do
    {
      v290 = *(void **)(*(void *)(a1 + 488) + v288 + 8);
      if (*((char *)v290 + 23) < 0)
      {
        int64_t v291 = v290[1];
        if (v291 > 127) {
          goto LABEL_687;
        }
      }
      else
      {
        int64_t v291 = *((unsigned __int8 *)v290 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v291)
      {
        *(_WORD *)uint64_t v4 = 1754;
        v4[2] = v291;
        if (*((char *)v290 + 23) < 0) {
          v290 = (void *)*v290;
        }
        v292 = v4 + 3;
        memcpy(v292, v290, v291);
        uint64_t v4 = &v292[v291];
        goto LABEL_685;
      }
LABEL_687:
      uint64_t v4 = (char *)sub_188A868(a3, 107, (uint64_t)v290, v4);
LABEL_685:
      v288 += 8;
    }
    while (v289 != v288);
  }
  uint64_t v293 = *(unsigned int *)(a1 + 504);
  if ((int)v293 >= 1)
  {
    uint64_t v294 = 0;
    uint64_t v295 = 8 * v293;
    do
    {
      uint64_t v296 = *(void **)(*(void *)(a1 + 512) + v294 + 8);
      if (*((char *)v296 + 23) < 0)
      {
        int64_t v297 = v296[1];
        if (v297 > 127) {
          goto LABEL_699;
        }
      }
      else
      {
        int64_t v297 = *((unsigned __int8 *)v296 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v297)
      {
        *(_WORD *)uint64_t v4 = 1762;
        v4[2] = v297;
        if (*((char *)v296 + 23) < 0) {
          uint64_t v296 = (void *)*v296;
        }
        int v298 = v4 + 3;
        memcpy(v298, v296, v297);
        uint64_t v4 = &v298[v297];
        goto LABEL_697;
      }
LABEL_699:
      uint64_t v4 = (char *)sub_188A868(a3, 108, (uint64_t)v296, v4);
LABEL_697:
      v294 += 8;
    }
    while (v295 != v294);
  }
  uint64_t v299 = *(unsigned int *)(a1 + 528);
  if ((int)v299 >= 1)
  {
    uint64_t v300 = 0;
    uint64_t v301 = 8 * v299;
    do
    {
      uint64_t v302 = *(void **)(*(void *)(a1 + 536) + v300 + 8);
      if (*((char *)v302 + 23) < 0)
      {
        int64_t v303 = v302[1];
        if (v303 > 127) {
          goto LABEL_711;
        }
      }
      else
      {
        int64_t v303 = *((unsigned __int8 *)v302 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v303)
      {
        *(_WORD *)uint64_t v4 = 1770;
        v4[2] = v303;
        if (*((char *)v302 + 23) < 0) {
          uint64_t v302 = (void *)*v302;
        }
        int v304 = v4 + 3;
        memcpy(v304, v302, v303);
        uint64_t v4 = &v304[v303];
        goto LABEL_709;
      }
LABEL_711:
      uint64_t v4 = (char *)sub_188A868(a3, 109, (uint64_t)v302, v4);
LABEL_709:
      v300 += 8;
    }
    while (v301 != v300);
  }
  uint64_t v305 = *(unsigned int *)(a1 + 552);
  if ((int)v305 >= 1)
  {
    uint64_t v306 = 0;
    uint64_t v307 = 8 * v305;
    do
    {
      v308 = *(void **)(*(void *)(a1 + 560) + v306 + 8);
      if (*((char *)v308 + 23) < 0)
      {
        int64_t v309 = v308[1];
        if (v309 > 127) {
          goto LABEL_723;
        }
      }
      else
      {
        int64_t v309 = *((unsigned __int8 *)v308 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v309)
      {
        *(_WORD *)uint64_t v4 = 1778;
        v4[2] = v309;
        if (*((char *)v308 + 23) < 0) {
          v308 = (void *)*v308;
        }
        v310 = v4 + 3;
        memcpy(v310, v308, v309);
        uint64_t v4 = &v310[v309];
        goto LABEL_721;
      }
LABEL_723:
      uint64_t v4 = (char *)sub_188A868(a3, 110, (uint64_t)v308, v4);
LABEL_721:
      v306 += 8;
    }
    while (v307 != v306);
  }
  if ((v217 & 0x800000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v311 = *(unsigned char *)(a1 + 924);
    *(_WORD *)uint64_t v4 = 1784;
    v4[2] = v311;
    v4 += 3;
    if ((v217 & 0x1000000) == 0)
    {
LABEL_726:
      if ((v217 & 0x2000000) == 0) {
        goto LABEL_727;
      }
      goto LABEL_735;
    }
  }
  else if ((v217 & 0x1000000) == 0)
  {
    goto LABEL_726;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v312 = *(void *)(a1 + 928);
  *(_WORD *)uint64_t v4 = 1921;
  *(void *)(v4 + 2) = v312;
  v4 += 10;
  if ((v217 & 0x2000000) == 0)
  {
LABEL_727:
    if ((v217 & 0x4000000) == 0) {
      goto LABEL_744;
    }
    goto LABEL_738;
  }
LABEL_735:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v313 = *(void *)(a1 + 936);
  *(_WORD *)uint64_t v4 = 1929;
  *(void *)(v4 + 2) = v313;
  v4 += 10;
  if ((v217 & 0x4000000) != 0)
  {
LABEL_738:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v314 = *(int *)(a1 + 944);
    *(_WORD *)uint64_t v4 = 1936;
    v4[2] = v314;
    if (v314 > 0x7F)
    {
      v4[2] = v314 | 0x80;
      unint64_t v315 = v314 >> 7;
      v4[3] = v314 >> 7;
      v4 += 4;
      if (v314 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v316 = v315 >> 14;
          v315 >>= 7;
          *v4++ = v315;
        }
        while (v316);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_744:
  uint64_t v317 = *(unsigned int *)(a1 + 576);
  if ((int)v317 >= 1)
  {
    uint64_t v318 = 0;
    uint64_t v319 = 8 * v317;
    do
    {
      v320 = *(void **)(*(void *)(a1 + 584) + v318 + 8);
      if (*((char *)v320 + 23) < 0)
      {
        int64_t v321 = v320[1];
        if (v321 > 127) {
          goto LABEL_755;
        }
      }
      else
      {
        int64_t v321 = *((unsigned __int8 *)v320 + 23);
      }
      if (*(void *)a3 - (void)v4 + 13 >= v321)
      {
        *(_WORD *)uint64_t v4 = 1946;
        v4[2] = v321;
        if (*((char *)v320 + 23) < 0) {
          v320 = (void *)*v320;
        }
        uint64_t v322 = v4 + 3;
        memcpy(v322, v320, v321);
        uint64_t v4 = &v322[v321];
        goto LABEL_753;
      }
LABEL_755:
      uint64_t v4 = (char *)sub_188A868(a3, 115, (uint64_t)v320, v4);
LABEL_753:
      v318 += 8;
    }
    while (v319 != v318);
  }
  if ((v217 & 0x8000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v323 = *(int *)(a1 + 948);
    *(_WORD *)uint64_t v4 = 1952;
    v4[2] = v323;
    if (v323 > 0x7F)
    {
      v4[2] = v323 | 0x80;
      unint64_t v324 = v323 >> 7;
      v4[3] = v323 >> 7;
      v4 += 4;
      if (v323 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v325 = v324 >> 14;
          v324 >>= 7;
          *v4++ = v324;
        }
        while (v325);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 0x20000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v326 = *(int *)(a1 + 960);
    *(_WORD *)uint64_t v4 = 1960;
    v4[2] = v326;
    if (v326 > 0x7F)
    {
      v4[2] = v326 | 0x80;
      unint64_t v327 = v326 >> 7;
      v4[3] = v326 >> 7;
      v4 += 4;
      if (v326 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v328 = v327 >> 14;
          v327 >>= 7;
          *v4++ = v327;
        }
        while (v328);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v217 & 0x10000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v329 = *(void *)(a1 + 952);
    *(_WORD *)uint64_t v4 = 1969;
    *(void *)(v4 + 2) = v329;
    v4 += 10;
  }
  if ((v217 & 0x40000000) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v330 = *(int *)(a1 + 964);
    *(_WORD *)uint64_t v4 = 1976;
    v4[2] = v330;
    if (v330 > 0x7F)
    {
      v4[2] = v330 | 0x80;
      unint64_t v331 = v330 >> 7;
      v4[3] = v330 >> 7;
      v4 += 4;
      if (v330 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v332 = v331 >> 14;
          v331 >>= 7;
          *v4++ = v331;
        }
        while (v332);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (v217 < 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v333 = *(int *)(a1 + 968);
    *(_WORD *)uint64_t v4 = 1984;
    v4[2] = v333;
    if (v333 > 0x7F)
    {
      v4[2] = v333 | 0x80;
      unint64_t v334 = v333 >> 7;
      v4[3] = v333 >> 7;
      v4 += 4;
      if (v333 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v335 = v334 >> 14;
          v334 >>= 7;
          *v4++ = v334;
        }
        while (v335);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v336 = *(void *)(a1 + 8);
  if ((v336 & 1) == 0) {
    return v4;
  }
  unint64_t v338 = v336 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v338 + 31) < 0)
  {
    v339 = *(void **)(v338 + 8);
    uint64_t v340 = *(void *)(v338 + 16);
  }
  else
  {
    v339 = (void *)(v338 + 8);
    LODWORD(v340) = *(unsigned __int8 *)(v338 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v340)
  {
    uint64_t v341 = (int)v340;
    memcpy(v4, v339, (int)v340);
    v4 += v341;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v339, v340, v4);
}

uint64_t sub_1221750(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  uint64_t v3 = 2 * v2;
  if ((int)v2 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 72);
  uint64_t v9 = v3 + 2 * v8;
  if ((int)v8 >= 1)
  {
    unint64_t v10 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(int *)(a1 + 96);
  uint64_t v15 = v9 + 2 * v14;
  uint64_t v16 = *(void *)(a1 + 104);
  if (v16) {
    unint64_t v17 = (uint64_t *)(v16 + 8);
  }
  else {
    unint64_t v17 = 0;
  }
  if (v14)
  {
    uint64_t v18 = 8 * v14;
    do
    {
      uint64_t v19 = *v17++;
      uint64_t v20 = sub_1217398(v19);
      v15 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      v18 -= 8;
    }
    while (v18);
  }
  uint64_t v21 = *(int *)(a1 + 120);
  uint64_t v22 = v15 + 2 * v21;
  uint64_t v23 = *(void *)(a1 + 128);
  if (v23) {
    unint64_t v24 = (uint64_t *)(v23 + 8);
  }
  else {
    unint64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_1217F2C(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  uint64_t v28 = *(int *)(a1 + 144);
  uint64_t v29 = v22 + 2 * v28;
  uint64_t v30 = *(void *)(a1 + 152);
  if (v30) {
    unint64_t v31 = (uint64_t *)(v30 + 8);
  }
  else {
    unint64_t v31 = 0;
  }
  if (v28)
  {
    uint64_t v32 = 8 * v28;
    do
    {
      uint64_t v33 = *v31++;
      uint64_t v34 = sub_1218638(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  uint64_t v35 = *(int *)(a1 + 168);
  uint64_t v36 = v29 + 2 * v35;
  uint64_t v37 = *(void *)(a1 + 176);
  if (v37) {
    char v38 = (uint64_t *)(v37 + 8);
  }
  else {
    char v38 = 0;
  }
  if (v35)
  {
    uint64_t v39 = 8 * v35;
    do
    {
      uint64_t v40 = *v38++;
      uint64_t v41 = sub_1218C60(v40);
      v36 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6);
      v39 -= 8;
    }
    while (v39);
  }
  uint64_t v42 = *(int *)(a1 + 192);
  uint64_t v43 = v36 + 2 * v42;
  uint64_t v44 = *(void *)(a1 + 200);
  if (v44) {
    int v45 = (uint64_t *)(v44 + 8);
  }
  else {
    int v45 = 0;
  }
  if (v42)
  {
    uint64_t v46 = 8 * v42;
    do
    {
      uint64_t v47 = *v45++;
      uint64_t v48 = sub_1219158(v47);
      v43 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6);
      v46 -= 8;
    }
    while (v46);
  }
  uint64_t v49 = *(int *)(a1 + 216);
  uint64_t v50 = v43 + 2 * v49;
  uint64_t v51 = *(void *)(a1 + 224);
  if (v51) {
    unint64_t v52 = (uint64_t *)(v51 + 8);
  }
  else {
    unint64_t v52 = 0;
  }
  if (v49)
  {
    uint64_t v53 = 8 * v49;
    do
    {
      uint64_t v54 = *v52++;
      uint64_t v55 = sub_12197E4(v54);
      v50 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6);
      v53 -= 8;
    }
    while (v53);
  }
  uint64_t v56 = *(unsigned int *)(a1 + 240);
  uint64_t v57 = v50 + 2 * v56;
  if ((int)v56 >= 1)
  {
    uint64_t v58 = (uint64_t *)(*(void *)(a1 + 248) + 8);
    do
    {
      uint64_t v59 = *v58++;
      uint64_t v60 = *(unsigned __int8 *)(v59 + 23);
      uint64_t v61 = *(void *)(v59 + 8);
      if ((v60 & 0x80u) == 0) {
        uint64_t v61 = v60;
      }
      v57 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6);
      --v56;
    }
    while (v56);
  }
  uint64_t v62 = *(unsigned int *)(a1 + 264);
  uint64_t v63 = v57 + 2 * v62;
  if ((int)v62 >= 1)
  {
    uint64_t v64 = (uint64_t *)(*(void *)(a1 + 272) + 8);
    do
    {
      uint64_t v65 = *v64++;
      uint64_t v66 = *(unsigned __int8 *)(v65 + 23);
      uint64_t v67 = *(void *)(v65 + 8);
      if ((v66 & 0x80u) == 0) {
        uint64_t v67 = v66;
      }
      v63 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6);
      --v62;
    }
    while (v62);
  }
  uint64_t v68 = *(unsigned int *)(a1 + 288);
  uint64_t v69 = v63 + 2 * v68;
  if ((int)v68 >= 1)
  {
    unint64_t v70 = (uint64_t *)(*(void *)(a1 + 296) + 8);
    do
    {
      uint64_t v71 = *v70++;
      uint64_t v72 = *(unsigned __int8 *)(v71 + 23);
      uint64_t v73 = *(void *)(v71 + 8);
      if ((v72 & 0x80u) == 0) {
        uint64_t v73 = v72;
      }
      v69 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6);
      --v68;
    }
    while (v68);
  }
  uint64_t v74 = *(int *)(a1 + 312);
  uint64_t v75 = v69 + 2 * v74;
  uint64_t v76 = *(void *)(a1 + 320);
  if (v76) {
    unint64_t v77 = (uint64_t *)(v76 + 8);
  }
  else {
    unint64_t v77 = 0;
  }
  if (v74)
  {
    uint64_t v78 = 8 * v74;
    do
    {
      uint64_t v79 = *v77++;
      uint64_t v80 = sub_1219E10(v79);
      v75 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6);
      v78 -= 8;
    }
    while (v78);
  }
  uint64_t v81 = *(int *)(a1 + 336);
  uint64_t v82 = v75 + 2 * v81;
  uint64_t v83 = *(void *)(a1 + 344);
  if (v83) {
    unsigned int v84 = (uint64_t *)(v83 + 8);
  }
  else {
    unsigned int v84 = 0;
  }
  if (v81)
  {
    uint64_t v85 = 8 * v81;
    do
    {
      uint64_t v86 = *v84++;
      uint64_t v87 = sub_121A44C(v86);
      v82 += v87 + ((9 * (__clz(v87 | 1) ^ 0x1F) + 73) >> 6);
      v85 -= 8;
    }
    while (v85);
  }
  uint64_t v88 = *(unsigned int *)(a1 + 360);
  uint64_t v89 = v82 + 2 * v88;
  if ((int)v88 >= 1)
  {
    int v90 = (uint64_t *)(*(void *)(a1 + 368) + 8);
    do
    {
      uint64_t v91 = *v90++;
      uint64_t v92 = *(unsigned __int8 *)(v91 + 23);
      uint64_t v93 = *(void *)(v91 + 8);
      if ((v92 & 0x80u) == 0) {
        uint64_t v93 = v92;
      }
      v89 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6);
      --v88;
    }
    while (v88);
  }
  uint64_t v94 = *(unsigned int *)(a1 + 384);
  uint64_t v95 = v89 + 2 * v94;
  if ((int)v94 >= 1)
  {
    uint64_t v96 = (uint64_t *)(*(void *)(a1 + 392) + 8);
    do
    {
      uint64_t v97 = *v96++;
      uint64_t v98 = *(unsigned __int8 *)(v97 + 23);
      uint64_t v99 = *(void *)(v97 + 8);
      if ((v98 & 0x80u) == 0) {
        uint64_t v99 = v98;
      }
      v95 += v99 + ((9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6);
      --v94;
    }
    while (v94);
  }
  uint64_t v100 = *(unsigned int *)(a1 + 408);
  uint64_t v101 = v95 + 2 * v100;
  if ((int)v100 >= 1)
  {
    unint64_t v102 = (uint64_t *)(*(void *)(a1 + 416) + 8);
    do
    {
      uint64_t v103 = *v102++;
      uint64_t v104 = *(unsigned __int8 *)(v103 + 23);
      uint64_t v105 = *(void *)(v103 + 8);
      if ((v104 & 0x80u) == 0) {
        uint64_t v105 = v104;
      }
      v101 += v105 + ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6);
      --v100;
    }
    while (v100);
  }
  uint64_t v106 = *(unsigned int *)(a1 + 432);
  uint64_t v107 = v101 + 2 * v106;
  if ((int)v106 >= 1)
  {
    char v108 = (uint64_t *)(*(void *)(a1 + 440) + 8);
    do
    {
      uint64_t v109 = *v108++;
      uint64_t v110 = *(unsigned __int8 *)(v109 + 23);
      uint64_t v111 = *(void *)(v109 + 8);
      if ((v110 & 0x80u) == 0) {
        uint64_t v111 = v110;
      }
      v107 += v111 + ((9 * (__clz(v111 | 1) ^ 0x1F) + 73) >> 6);
      --v106;
    }
    while (v106);
  }
  uint64_t v112 = *(unsigned int *)(a1 + 456);
  uint64_t v113 = v107 + 2 * v112;
  if ((int)v112 >= 1)
  {
    unint64_t v114 = (uint64_t *)(*(void *)(a1 + 464) + 8);
    do
    {
      uint64_t v115 = *v114++;
      uint64_t v116 = *(unsigned __int8 *)(v115 + 23);
      uint64_t v117 = *(void *)(v115 + 8);
      if ((v116 & 0x80u) == 0) {
        uint64_t v117 = v116;
      }
      v113 += v117 + ((9 * (__clz(v117 | 1) ^ 0x1F) + 73) >> 6);
      --v112;
    }
    while (v112);
  }
  uint64_t v118 = *(unsigned int *)(a1 + 480);
  uint64_t v119 = v113 + 2 * v118;
  if ((int)v118 >= 1)
  {
    unint64_t v120 = (uint64_t *)(*(void *)(a1 + 488) + 8);
    do
    {
      uint64_t v121 = *v120++;
      uint64_t v122 = *(unsigned __int8 *)(v121 + 23);
      uint64_t v123 = *(void *)(v121 + 8);
      if ((v122 & 0x80u) == 0) {
        uint64_t v123 = v122;
      }
      v119 += v123 + ((9 * (__clz(v123 | 1) ^ 0x1F) + 73) >> 6);
      --v118;
    }
    while (v118);
  }
  uint64_t v124 = *(unsigned int *)(a1 + 504);
  uint64_t v125 = v119 + 2 * v124;
  if ((int)v124 >= 1)
  {
    unint64_t v126 = (uint64_t *)(*(void *)(a1 + 512) + 8);
    do
    {
      uint64_t v127 = *v126++;
      uint64_t v128 = *(unsigned __int8 *)(v127 + 23);
      uint64_t v129 = *(void *)(v127 + 8);
      if ((v128 & 0x80u) == 0) {
        uint64_t v129 = v128;
      }
      v125 += v129 + ((9 * (__clz(v129 | 1) ^ 0x1F) + 73) >> 6);
      --v124;
    }
    while (v124);
  }
  uint64_t v130 = *(unsigned int *)(a1 + 528);
  uint64_t v131 = v125 + 2 * v130;
  if ((int)v130 >= 1)
  {
    unint64_t v132 = (uint64_t *)(*(void *)(a1 + 536) + 8);
    do
    {
      uint64_t v133 = *v132++;
      uint64_t v134 = *(unsigned __int8 *)(v133 + 23);
      uint64_t v135 = *(void *)(v133 + 8);
      if ((v134 & 0x80u) == 0) {
        uint64_t v135 = v134;
      }
      v131 += v135 + ((9 * (__clz(v135 | 1) ^ 0x1F) + 73) >> 6);
      --v130;
    }
    while (v130);
  }
  uint64_t v136 = *(unsigned int *)(a1 + 552);
  uint64_t v137 = v131 + 2 * v136;
  if ((int)v136 >= 1)
  {
    unint64_t v138 = (uint64_t *)(*(void *)(a1 + 560) + 8);
    do
    {
      uint64_t v139 = *v138++;
      uint64_t v140 = *(unsigned __int8 *)(v139 + 23);
      uint64_t v141 = *(void *)(v139 + 8);
      if ((v140 & 0x80u) == 0) {
        uint64_t v141 = v140;
      }
      v137 += v141 + ((9 * (__clz(v141 | 1) ^ 0x1F) + 73) >> 6);
      --v136;
    }
    while (v136);
  }
  uint64_t v142 = *(unsigned int *)(a1 + 576);
  uint64_t result = v137 + 2 * v142;
  if ((int)v142 >= 1)
  {
    unint64_t v144 = (uint64_t *)(*(void *)(a1 + 584) + 8);
    do
    {
      uint64_t v145 = *v144++;
      uint64_t v146 = *(unsigned __int8 *)(v145 + 23);
      uint64_t v147 = *(void *)(v145 + 8);
      if ((v146 & 0x80u) == 0) {
        uint64_t v147 = v146;
      }
      result += v147 + ((9 * (__clz(v147 | 1) ^ 0x1F) + 73) >> 6);
      --v142;
    }
    while (v142);
  }
  int v148 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v148) {
    goto LABEL_166;
  }
  if (v148)
  {
    int v149 = *(_DWORD *)(a1 + 592);
    if (v149 < 0) {
      uint64_t v150 = 10;
    }
    else {
      uint64_t v150 = (9 * (__clz(v149 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v150 + 1;
    if ((v148 & 2) == 0)
    {
LABEL_127:
      if ((v148 & 4) == 0) {
        goto LABEL_128;
      }
      goto LABEL_142;
    }
  }
  else if ((v148 & 2) == 0)
  {
    goto LABEL_127;
  }
  int v151 = *(_DWORD *)(a1 + 596);
  if (v151 < 0) {
    uint64_t v152 = 10;
  }
  else {
    uint64_t v152 = (9 * (__clz(v151 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v152 + 1;
  if ((v148 & 4) == 0)
  {
LABEL_128:
    if ((v148 & 8) == 0) {
      goto LABEL_129;
    }
    goto LABEL_146;
  }
LABEL_142:
  int v153 = *(_DWORD *)(a1 + 600);
  if (v153 < 0) {
    uint64_t v154 = 10;
  }
  else {
    uint64_t v154 = (9 * (__clz(v153 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v154 + 1;
  if ((v148 & 8) == 0)
  {
LABEL_129:
    if ((v148 & 0x10) == 0) {
      goto LABEL_130;
    }
    goto LABEL_150;
  }
LABEL_146:
  int v155 = *(_DWORD *)(a1 + 604);
  if (v155 < 0) {
    uint64_t v156 = 10;
  }
  else {
    uint64_t v156 = (9 * (__clz(v155 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v156 + 1;
  if ((v148 & 0x10) == 0)
  {
LABEL_130:
    if ((v148 & 0x20) == 0) {
      goto LABEL_131;
    }
LABEL_154:
    int v159 = *(_DWORD *)(a1 + 612);
    if (v159 < 0) {
      uint64_t v160 = 10;
    }
    else {
      uint64_t v160 = (9 * (__clz(v159 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v160 + 1;
    if ((v148 & 0x40) == 0)
    {
LABEL_132:
      if ((v148 & 0x80) == 0) {
        goto LABEL_166;
      }
      goto LABEL_162;
    }
    goto LABEL_158;
  }
LABEL_150:
  int v157 = *(_DWORD *)(a1 + 608);
  if (v157 < 0) {
    uint64_t v158 = 10;
  }
  else {
    uint64_t v158 = (9 * (__clz(v157 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v158 + 1;
  if ((v148 & 0x20) != 0) {
    goto LABEL_154;
  }
LABEL_131:
  if ((v148 & 0x40) == 0) {
    goto LABEL_132;
  }
LABEL_158:
  int v161 = *(_DWORD *)(a1 + 616);
  if (v161 < 0) {
    uint64_t v162 = 10;
  }
  else {
    uint64_t v162 = (9 * (__clz(v161 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v162 + 1;
  if ((v148 & 0x80) != 0)
  {
LABEL_162:
    int v163 = *(_DWORD *)(a1 + 620);
    if (v163 < 0) {
      uint64_t v164 = 10;
    }
    else {
      uint64_t v164 = (9 * (__clz(v163 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v164 + 1;
  }
LABEL_166:
  if ((v148 & 0xFF00) != 0)
  {
    if ((v148 & 0x100) != 0)
    {
      int v165 = *(_DWORD *)(a1 + 624);
      uint64_t v166 = (9 * (__clz(v165 | 1) ^ 0x1F) + 73) >> 6;
      if (v165 >= 0) {
        uint64_t v167 = v166;
      }
      else {
        uint64_t v167 = 10;
      }
      result += v167 + 1;
    }
    uint64_t v168 = result + 2;
    if ((v148 & 0x200) == 0) {
      uint64_t v168 = result;
    }
    if ((v148 & 0x400) != 0) {
      v168 += 2;
    }
    if ((v148 & 0x800) != 0) {
      v168 += 2;
    }
    if ((v148 & 0x1000) != 0) {
      v168 += 2;
    }
    if ((v148 & 0x2000) != 0) {
      v168 += 6;
    }
    if ((v148 & 0x4000) != 0) {
      v168 += 6;
    }
    if ((v148 & 0x8000) != 0) {
      uint64_t result = v168 + 6;
    }
    else {
      uint64_t result = v168;
    }
  }
  if ((v148 & 0xFF0000) != 0)
  {
    uint64_t v169 = result + 6;
    if ((v148 & 0x10000) == 0) {
      uint64_t v169 = result;
    }
    if ((v148 & 0x20000) != 0) {
      v169 += 2;
    }
    if ((v148 & 0x40000) != 0) {
      v169 += 2;
    }
    if ((v148 & 0x80000) != 0) {
      v169 += 3;
    }
    if ((v148 & 0x100000) != 0) {
      v169 += 3;
    }
    if ((v148 & 0x200000) != 0) {
      v169 += 6;
    }
    if ((v148 & 0x400000) != 0) {
      uint64_t result = v169 + 6;
    }
    else {
      uint64_t result = v169;
    }
    if ((v148 & 0x800000) != 0)
    {
      int v170 = *(_DWORD *)(a1 + 660);
      if (v170 < 0) {
        uint64_t v171 = 10;
      }
      else {
        uint64_t v171 = (9 * (__clz(v170 | 1) ^ 0x1F) + 73) >> 6;
      }
      result += v171 + 2;
    }
  }
  if (HIBYTE(v148))
  {
    uint64_t v172 = result + 10;
    if ((v148 & 0x1000000) == 0) {
      uint64_t v172 = result;
    }
    if ((v148 & 0x2000000) != 0)
    {
      int v189 = *(_DWORD *)(a1 + 672);
      uint64_t v190 = (9 * (__clz(v189 | 1) ^ 0x1F) + 73) >> 6;
      if (v189 >= 0) {
        uint64_t v191 = v190;
      }
      else {
        uint64_t v191 = 10;
      }
      v172 += v191 + 2;
      if ((v148 & 0x4000000) == 0)
      {
LABEL_213:
        if ((v148 & 0x8000000) == 0) {
          goto LABEL_214;
        }
        goto LABEL_261;
      }
    }
    else if ((v148 & 0x4000000) == 0)
    {
      goto LABEL_213;
    }
    int v192 = *(_DWORD *)(a1 + 676);
    uint64_t v193 = (9 * (__clz(v192 | 1) ^ 0x1F) + 73) >> 6;
    if (v192 >= 0) {
      uint64_t v194 = v193;
    }
    else {
      uint64_t v194 = 10;
    }
    v172 += v194 + 2;
    if ((v148 & 0x8000000) == 0)
    {
LABEL_214:
      if ((v148 & 0x10000000) == 0) {
        goto LABEL_215;
      }
      goto LABEL_265;
    }
LABEL_261:
    int v195 = *(_DWORD *)(a1 + 680);
    uint64_t v196 = (9 * (__clz(v195 | 1) ^ 0x1F) + 73) >> 6;
    if (v195 >= 0) {
      uint64_t v197 = v196;
    }
    else {
      uint64_t v197 = 10;
    }
    v172 += v197 + 2;
    if ((v148 & 0x10000000) == 0)
    {
LABEL_215:
      if ((v148 & 0x20000000) == 0) {
        goto LABEL_216;
      }
      goto LABEL_269;
    }
LABEL_265:
    int v198 = *(_DWORD *)(a1 + 684);
    uint64_t v199 = (9 * (__clz(v198 | 1) ^ 0x1F) + 73) >> 6;
    if (v198 >= 0) {
      uint64_t v200 = v199;
    }
    else {
      uint64_t v200 = 10;
    }
    v172 += v200 + 2;
    if ((v148 & 0x20000000) == 0)
    {
LABEL_216:
      if ((v148 & 0x40000000) == 0)
      {
LABEL_221:
        if (v148 >= 0) {
          uint64_t result = v172;
        }
        else {
          uint64_t result = v172 + 10;
        }
        goto LABEL_224;
      }
LABEL_217:
      int v173 = *(_DWORD *)(a1 + 692);
      uint64_t v174 = (9 * (__clz(v173 | 1) ^ 0x1F) + 73) >> 6;
      if (v173 >= 0) {
        uint64_t v175 = v174;
      }
      else {
        uint64_t v175 = 10;
      }
      v172 += v175 + 2;
      goto LABEL_221;
    }
LABEL_269:
    int v201 = *(_DWORD *)(a1 + 688);
    uint64_t v202 = (9 * (__clz(v201 | 1) ^ 0x1F) + 73) >> 6;
    if (v201 >= 0) {
      uint64_t v203 = v202;
    }
    else {
      uint64_t v203 = 10;
    }
    v172 += v203 + 2;
    if ((v148 & 0x40000000) == 0) {
      goto LABEL_221;
    }
    goto LABEL_217;
  }
LABEL_224:
  int v176 = *(_DWORD *)(a1 + 20);
  if (!(_BYTE)v176) {
    goto LABEL_276;
  }
  if ((v176 & 1) == 0)
  {
    if ((v176 & 2) == 0) {
      goto LABEL_227;
    }
LABEL_248:
    int v186 = *(_DWORD *)(a1 + 708);
    uint64_t v187 = (9 * (__clz(v186 | 1) ^ 0x1F) + 73) >> 6;
    if (v186 >= 0) {
      uint64_t v188 = v187;
    }
    else {
      uint64_t v188 = 10;
    }
    result += v188 + 2;
    if ((v176 & 4) == 0) {
      goto LABEL_232;
    }
    goto LABEL_228;
  }
  int v183 = *(_DWORD *)(a1 + 704);
  uint64_t v184 = (9 * (__clz(v183 | 1) ^ 0x1F) + 73) >> 6;
  if (v183 >= 0) {
    uint64_t v185 = v184;
  }
  else {
    uint64_t v185 = 10;
  }
  result += v185 + 2;
  if ((v176 & 2) != 0) {
    goto LABEL_248;
  }
LABEL_227:
  if ((v176 & 4) != 0)
  {
LABEL_228:
    int v177 = *(_DWORD *)(a1 + 712);
    uint64_t v178 = (9 * (__clz(v177 | 1) ^ 0x1F) + 73) >> 6;
    if (v177 >= 0) {
      uint64_t v179 = v178;
    }
    else {
      uint64_t v179 = 10;
    }
    result += v179 + 2;
  }
LABEL_232:
  uint64_t v180 = result + 3;
  if ((v176 & 8) == 0) {
    uint64_t v180 = result;
  }
  if ((v176 & 0x10) != 0) {
    v180 += 3;
  }
  if ((v176 & 0x20) != 0) {
    v180 += 3;
  }
  if ((v176 & 0x40) != 0) {
    uint64_t result = v180 + 3;
  }
  else {
    uint64_t result = v180;
  }
  if ((v176 & 0x80) != 0)
  {
    int v181 = *(_DWORD *)(a1 + 720);
    if (v181 < 0) {
      uint64_t v182 = 10;
    }
    else {
      uint64_t v182 = (9 * (__clz(v181 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v182 + 2;
  }
LABEL_276:
  if ((v176 & 0xFF00) == 0) {
    goto LABEL_318;
  }
  if ((v176 & 0x100) != 0)
  {
    int v204 = *(_DWORD *)(a1 + 724);
    if (v204 < 0) {
      uint64_t v205 = 10;
    }
    else {
      uint64_t v205 = (9 * (__clz(v204 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v205 + 2;
    if ((v176 & 0x200) == 0)
    {
LABEL_279:
      if ((v176 & 0x400) == 0) {
        goto LABEL_280;
      }
      goto LABEL_294;
    }
  }
  else if ((v176 & 0x200) == 0)
  {
    goto LABEL_279;
  }
  int v206 = *(_DWORD *)(a1 + 728);
  if (v206 < 0) {
    uint64_t v207 = 10;
  }
  else {
    uint64_t v207 = (9 * (__clz(v206 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v207 + 2;
  if ((v176 & 0x400) == 0)
  {
LABEL_280:
    if ((v176 & 0x800) == 0) {
      goto LABEL_281;
    }
    goto LABEL_298;
  }
LABEL_294:
  int v208 = *(_DWORD *)(a1 + 732);
  if (v208 < 0) {
    uint64_t v209 = 10;
  }
  else {
    uint64_t v209 = (9 * (__clz(v208 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v209 + 2;
  if ((v176 & 0x800) == 0)
  {
LABEL_281:
    if ((v176 & 0x1000) == 0) {
      goto LABEL_282;
    }
    goto LABEL_302;
  }
LABEL_298:
  int v210 = *(_DWORD *)(a1 + 736);
  if (v210 < 0) {
    uint64_t v211 = 10;
  }
  else {
    uint64_t v211 = (9 * (__clz(v210 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v211 + 2;
  if ((v176 & 0x1000) == 0)
  {
LABEL_282:
    if ((v176 & 0x2000) == 0) {
      goto LABEL_283;
    }
    goto LABEL_306;
  }
LABEL_302:
  int v212 = *(_DWORD *)(a1 + 740);
  if (v212 < 0) {
    uint64_t v213 = 10;
  }
  else {
    uint64_t v213 = (9 * (__clz(v212 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v213 + 2;
  if ((v176 & 0x2000) == 0)
  {
LABEL_283:
    if ((v176 & 0x4000) == 0) {
      goto LABEL_284;
    }
    goto LABEL_310;
  }
LABEL_306:
  int v214 = *(_DWORD *)(a1 + 744);
  if (v214 < 0) {
    uint64_t v215 = 10;
  }
  else {
    uint64_t v215 = (9 * (__clz(v214 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v215 + 2;
  if ((v176 & 0x4000) == 0)
  {
LABEL_284:
    if ((v176 & 0x8000) == 0) {
      goto LABEL_318;
    }
    goto LABEL_314;
  }
LABEL_310:
  int v216 = *(_DWORD *)(a1 + 748);
  if (v216 < 0) {
    uint64_t v217 = 10;
  }
  else {
    uint64_t v217 = (9 * (__clz(v216 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v217 + 2;
  if ((v176 & 0x8000) != 0)
  {
LABEL_314:
    int v218 = *(_DWORD *)(a1 + 752);
    if (v218 < 0) {
      uint64_t v219 = 10;
    }
    else {
      uint64_t v219 = (9 * (__clz(v218 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v219 + 2;
  }
LABEL_318:
  if ((v176 & 0xFF0000) == 0) {
    goto LABEL_334;
  }
  if ((v176 & 0x10000) != 0)
  {
    int v249 = *(_DWORD *)(a1 + 756);
    uint64_t v250 = (9 * (__clz(v249 | 1) ^ 0x1F) + 73) >> 6;
    if (v249 >= 0) {
      uint64_t v251 = v250;
    }
    else {
      uint64_t v251 = 10;
    }
    result += v251 + 2;
    if ((v176 & 0x20000) == 0)
    {
LABEL_321:
      if ((v176 & 0x40000) == 0) {
        goto LABEL_322;
      }
      goto LABEL_445;
    }
  }
  else if ((v176 & 0x20000) == 0)
  {
    goto LABEL_321;
  }
  int v252 = *(_DWORD *)(a1 + 760);
  uint64_t v253 = (9 * (__clz(v252 | 1) ^ 0x1F) + 73) >> 6;
  if (v252 >= 0) {
    uint64_t v254 = v253;
  }
  else {
    uint64_t v254 = 10;
  }
  result += v254 + 2;
  if ((v176 & 0x40000) == 0)
  {
LABEL_322:
    if ((v176 & 0x80000) == 0) {
      goto LABEL_323;
    }
    goto LABEL_449;
  }
LABEL_445:
  int v255 = *(_DWORD *)(a1 + 764);
  uint64_t v256 = (9 * (__clz(v255 | 1) ^ 0x1F) + 73) >> 6;
  if (v255 >= 0) {
    uint64_t v257 = v256;
  }
  else {
    uint64_t v257 = 10;
  }
  result += v257 + 2;
  if ((v176 & 0x80000) == 0)
  {
LABEL_323:
    if ((v176 & 0x100000) == 0) {
      goto LABEL_324;
    }
LABEL_453:
    int v261 = *(_DWORD *)(a1 + 772);
    uint64_t v262 = (9 * (__clz(v261 | 1) ^ 0x1F) + 73) >> 6;
    if (v261 >= 0) {
      uint64_t v263 = v262;
    }
    else {
      uint64_t v263 = 10;
    }
    result += v263 + 2;
    if ((v176 & 0x200000) == 0) {
      goto LABEL_329;
    }
    goto LABEL_325;
  }
LABEL_449:
  int v258 = *(_DWORD *)(a1 + 768);
  uint64_t v259 = (9 * (__clz(v258 | 1) ^ 0x1F) + 73) >> 6;
  if (v258 >= 0) {
    uint64_t v260 = v259;
  }
  else {
    uint64_t v260 = 10;
  }
  result += v260 + 2;
  if ((v176 & 0x100000) != 0) {
    goto LABEL_453;
  }
LABEL_324:
  if ((v176 & 0x200000) != 0)
  {
LABEL_325:
    int v220 = *(_DWORD *)(a1 + 776);
    uint64_t v221 = (9 * (__clz(v220 | 1) ^ 0x1F) + 73) >> 6;
    if (v220 >= 0) {
      uint64_t v222 = v221;
    }
    else {
      uint64_t v222 = 10;
    }
    result += v222 + 2;
  }
LABEL_329:
  uint64_t v223 = result + 3;
  if ((v176 & 0x400000) == 0) {
    uint64_t v223 = result;
  }
  if ((v176 & 0x800000) != 0) {
    uint64_t result = v223 + 3;
  }
  else {
    uint64_t result = v223;
  }
LABEL_334:
  if (HIBYTE(v176))
  {
    uint64_t v224 = result + 3;
    if ((v176 & 0x1000000) == 0) {
      uint64_t v224 = result;
    }
    if ((v176 & 0x2000000) != 0) {
      v224 += 3;
    }
    if ((v176 & 0x4000000) != 0) {
      v224 += 10;
    }
    if ((v176 & 0x8000000) != 0) {
      v224 += 10;
    }
    if ((v176 & 0x10000000) != 0) {
      v224 += 10;
    }
    if ((v176 & 0x20000000) != 0) {
      v224 += 10;
    }
    if ((v176 & 0x40000000) != 0) {
      v224 += 10;
    }
    if (v176 >= 0) {
      uint64_t result = v224;
    }
    else {
      uint64_t result = v224 + 3;
    }
  }
  unsigned int v225 = *(_DWORD *)(a1 + 24);
  if (!(_BYTE)v225) {
    goto LABEL_369;
  }
  uint64_t v226 = result + 3;
  if ((v225 & 1) == 0) {
    uint64_t v226 = result;
  }
  if ((v225 & 2) != 0) {
    v226 += 3;
  }
  if ((v225 & 4) != 0) {
    uint64_t result = v226 + 3;
  }
  else {
    uint64_t result = v226;
  }
  if ((v225 & 8) != 0)
  {
    int v264 = *(_DWORD *)(a1 + 828);
    uint64_t v265 = (9 * (__clz(v264 | 1) ^ 0x1F) + 73) >> 6;
    if (v264 >= 0) {
      uint64_t v266 = v265;
    }
    else {
      uint64_t v266 = 10;
    }
    result += v266 + 2;
    if ((v225 & 0x10) == 0)
    {
LABEL_362:
      if ((v225 & 0x20) == 0) {
        goto LABEL_363;
      }
LABEL_466:
      int v270 = *(_DWORD *)(a1 + 836);
      uint64_t v271 = (9 * (__clz(v270 | 1) ^ 0x1F) + 73) >> 6;
      if (v270 >= 0) {
        uint64_t v272 = v271;
      }
      else {
        uint64_t v272 = 10;
      }
      result += v272 + 2;
      if ((v225 & 0x40) == 0)
      {
LABEL_364:
        if ((v225 & 0x80) == 0) {
          goto LABEL_369;
        }
        goto LABEL_365;
      }
      goto LABEL_470;
    }
  }
  else if ((v225 & 0x10) == 0)
  {
    goto LABEL_362;
  }
  int v267 = *(_DWORD *)(a1 + 832);
  uint64_t v268 = (9 * (__clz(v267 | 1) ^ 0x1F) + 73) >> 6;
  if (v267 >= 0) {
    uint64_t v269 = v268;
  }
  else {
    uint64_t v269 = 10;
  }
  result += v269 + 2;
  if ((v225 & 0x20) != 0) {
    goto LABEL_466;
  }
LABEL_363:
  if ((v225 & 0x40) == 0) {
    goto LABEL_364;
  }
LABEL_470:
  int v273 = *(_DWORD *)(a1 + 840);
  uint64_t v274 = (9 * (__clz(v273 | 1) ^ 0x1F) + 73) >> 6;
  if (v273 >= 0) {
    uint64_t v275 = v274;
  }
  else {
    uint64_t v275 = 10;
  }
  result += v275 + 2;
  if ((v225 & 0x80) != 0)
  {
LABEL_365:
    int v227 = *(_DWORD *)(a1 + 844);
    uint64_t v228 = (9 * (__clz(v227 | 1) ^ 0x1F) + 73) >> 6;
    if (v227 >= 0) {
      uint64_t v229 = v228;
    }
    else {
      uint64_t v229 = 10;
    }
    result += v229 + 2;
  }
LABEL_369:
  if ((v225 & 0xFF00) != 0)
  {
    uint64_t v230 = result + 10;
    if ((v225 & 0x100) == 0) {
      uint64_t v230 = result;
    }
    if ((v225 & 0x200) != 0) {
      v230 += 10;
    }
    if ((v225 & 0x400) != 0) {
      v230 += 10;
    }
    if ((v225 & 0x800) != 0) {
      v230 += 10;
    }
    if ((v225 & 0x1000) != 0) {
      v230 += 3;
    }
    if ((v225 & 0x2000) != 0) {
      v230 += 3;
    }
    if ((v225 & 0x4000) != 0) {
      v230 += 3;
    }
    if ((v225 & 0x8000) != 0) {
      uint64_t result = v230 + 3;
    }
    else {
      uint64_t result = v230;
    }
  }
  if ((v225 & 0xFF0000) != 0)
  {
    if ((v225 & 0x10000) != 0)
    {
      int v276 = *(_DWORD *)(a1 + 884);
      uint64_t v277 = (9 * (__clz(v276 | 1) ^ 0x1F) + 73) >> 6;
      if (v276 >= 0) {
        uint64_t v278 = v277;
      }
      else {
        uint64_t v278 = 10;
      }
      result += v278 + 2;
      if ((v225 & 0x20000) == 0)
      {
LABEL_390:
        if ((v225 & 0x40000) == 0)
        {
LABEL_395:
          uint64_t v234 = result + 10;
          if ((v225 & 0x80000) == 0) {
            uint64_t v234 = result;
          }
          if ((v225 & 0x100000) != 0) {
            v234 += 10;
          }
          if ((v225 & 0x200000) != 0) {
            v234 += 10;
          }
          if ((v225 & 0x400000) != 0)
          {
            int v235 = *(_DWORD *)(a1 + 920);
            uint64_t v236 = (9 * (__clz(v235 | 1) ^ 0x1F) + 73) >> 6;
            if (v235 >= 0) {
              uint64_t v237 = v236;
            }
            else {
              uint64_t v237 = 10;
            }
            v234 += v237 + 2;
          }
          if ((v225 & 0x800000) != 0) {
            uint64_t result = v234 + 3;
          }
          else {
            uint64_t result = v234;
          }
          goto LABEL_409;
        }
LABEL_391:
        int v231 = *(_DWORD *)(a1 + 892);
        uint64_t v232 = (9 * (__clz(v231 | 1) ^ 0x1F) + 73) >> 6;
        if (v231 >= 0) {
          uint64_t v233 = v232;
        }
        else {
          uint64_t v233 = 10;
        }
        result += v233 + 2;
        goto LABEL_395;
      }
    }
    else if ((v225 & 0x20000) == 0)
    {
      goto LABEL_390;
    }
    int v279 = *(_DWORD *)(a1 + 888);
    uint64_t v280 = (9 * (__clz(v279 | 1) ^ 0x1F) + 73) >> 6;
    if (v279 >= 0) {
      uint64_t v281 = v280;
    }
    else {
      uint64_t v281 = 10;
    }
    result += v281 + 2;
    if ((v225 & 0x40000) == 0) {
      goto LABEL_395;
    }
    goto LABEL_391;
  }
LABEL_409:
  if (!HIBYTE(v225)) {
    goto LABEL_430;
  }
  uint64_t v238 = result + 10;
  if ((v225 & 0x1000000) == 0) {
    uint64_t v238 = result;
  }
  if ((v225 & 0x2000000) != 0) {
    v238 += 10;
  }
  if ((v225 & 0x4000000) != 0)
  {
    int v239 = *(_DWORD *)(a1 + 944);
    uint64_t v240 = ((9 * (__clz(v239 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v239 >= 0) {
      uint64_t v241 = v240;
    }
    else {
      uint64_t v241 = 12;
    }
    v238 += v241;
  }
  if ((v225 & 0x8000000) != 0)
  {
    int v242 = *(_DWORD *)(a1 + 948);
    uint64_t v243 = ((9 * (__clz(v242 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v242 >= 0) {
      uint64_t v244 = v243;
    }
    else {
      uint64_t v244 = 12;
    }
    v238 += v244;
  }
  if ((v225 & 0x10000000) != 0) {
    uint64_t result = v238 + 10;
  }
  else {
    uint64_t result = v238;
  }
  if ((v225 & 0x20000000) != 0)
  {
    int v282 = *(_DWORD *)(a1 + 960);
    uint64_t v283 = ((9 * (__clz(v282 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v282 >= 0) {
      uint64_t v284 = v283;
    }
    else {
      uint64_t v284 = 12;
    }
    result += v284;
    if ((v225 & 0x40000000) == 0)
    {
LABEL_429:
      if ((v225 & 0x80000000) == 0) {
        goto LABEL_430;
      }
      goto LABEL_492;
    }
  }
  else if ((v225 & 0x40000000) == 0)
  {
    goto LABEL_429;
  }
  int v285 = *(_DWORD *)(a1 + 964);
  uint64_t v286 = ((9 * (__clz(v285 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v285 >= 0) {
    uint64_t v287 = v286;
  }
  else {
    uint64_t v287 = 12;
  }
  result += v287;
  if ((v225 & 0x80000000) != 0)
  {
LABEL_492:
    int v288 = *(_DWORD *)(a1 + 968);
    uint64_t v289 = ((9 * (__clz(v288 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v288 >= 0) {
      uint64_t v290 = v289;
    }
    else {
      uint64_t v290 = 12;
    }
    result += v290;
  }
LABEL_430:
  if (*(unsigned char *)(a1 + 28))
  {
    int v245 = *(_DWORD *)(a1 + 972);
    uint64_t v246 = ((9 * (__clz(v245 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v245 >= 0) {
      uint64_t v247 = v246;
    }
    else {
      uint64_t v247 = 12;
    }
    result += v247;
  }
  uint64_t v248 = *(void *)(a1 + 8);
  if (v248)
  {
    unint64_t v291 = v248 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v291 + 31) < 0) {
      uint64_t v292 = *(void *)(v291 + 16);
    }
    else {
      uint64_t v292 = *(unsigned __int8 *)(v291 + 31);
    }
    result += v292;
  }
  *(_DWORD *)(a1 + 32) = result;
  return result;
}

void sub_1222C9C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    unint64_t v10 = (const std::string **)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_188FB98(a1 + 64, v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_122E0B8((uint64_t *)(a1 + 88), v16, v15, v14, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v17 = *(_DWORD *)(a1 + 96) + v14;
    *(_DWORD *)(a1 + 96) = v17;
    uint64_t v18 = *(int **)(a1 + 104);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 120);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_122E144((std::string *)(a1 + 112), v21, v20, v19, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v22 = *(_DWORD *)(a1 + 120) + v19;
    *(_DWORD *)(a1 + 120) = v22;
    uint64_t v23 = *(int **)(a1 + 128);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 144);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_122E1D0((uint64_t *)(a1 + 136), v26, v25, v24, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v27 = *(_DWORD *)(a1 + 144) + v24;
    *(_DWORD *)(a1 + 144) = v27;
    uint64_t v28 = *(int **)(a1 + 152);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 168);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 176) + 8);
    unint64_t v31 = (std::string **)sub_188CCE4(a1 + 160, *(_DWORD *)(a2 + 168));
    sub_122E24C((std::string *)(a1 + 160), v31, v30, v29, **(_DWORD **)(a1 + 176) - *(_DWORD *)(a1 + 168));
    int v32 = *(_DWORD *)(a1 + 168) + v29;
    *(_DWORD *)(a1 + 168) = v32;
    uint64_t v33 = *(int **)(a1 + 176);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 192);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 200) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4(a1 + 184, *(_DWORD *)(a2 + 192));
    sub_122E2D8((std::string *)(a1 + 184), v36, v35, v34, **(_DWORD **)(a1 + 200) - *(_DWORD *)(a1 + 192));
    int v37 = *(_DWORD *)(a1 + 192) + v34;
    *(_DWORD *)(a1 + 192) = v37;
    char v38 = *(int **)(a1 + 200);
    if (*v38 < v37) {
      *char v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 216);
  if (v39)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_122E354((uint64_t *)(a1 + 208), v41, v40, v39, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v42 = *(_DWORD *)(a1 + 216) + v39;
    *(_DWORD *)(a1 + 216) = v42;
    uint64_t v43 = *(int **)(a1 + 224);
    if (*v43 < v42) {
      *uint64_t v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 240);
  if (v44)
  {
    int v45 = (const std::string **)(*(void *)(a2 + 248) + 8);
    uint64_t v46 = (std::string **)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_188FB98(a1 + 232, v46, v45, v44, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v47 = *(_DWORD *)(a1 + 240) + v44;
    *(_DWORD *)(a1 + 240) = v47;
    uint64_t v48 = *(int **)(a1 + 248);
    if (*v48 < v47) {
      *uint64_t v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 264);
  if (v49)
  {
    uint64_t v50 = (const std::string **)(*(void *)(a2 + 272) + 8);
    uint64_t v51 = (std::string **)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_188FB98(a1 + 256, v51, v50, v49, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v52 = *(_DWORD *)(a1 + 264) + v49;
    *(_DWORD *)(a1 + 264) = v52;
    uint64_t v53 = *(int **)(a1 + 272);
    if (*v53 < v52) {
      *uint64_t v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 288);
  if (v54)
  {
    uint64_t v55 = (const std::string **)(*(void *)(a2 + 296) + 8);
    uint64_t v56 = (std::string **)sub_188CCE4(a1 + 280, *(_DWORD *)(a2 + 288));
    sub_188FB98(a1 + 280, v56, v55, v54, **(_DWORD **)(a1 + 296) - *(_DWORD *)(a1 + 288));
    int v57 = *(_DWORD *)(a1 + 288) + v54;
    *(_DWORD *)(a1 + 288) = v57;
    uint64_t v58 = *(int **)(a1 + 296);
    if (*v58 < v57) {
      int *v58 = v57;
    }
  }
  int v59 = *(_DWORD *)(a2 + 312);
  if (v59)
  {
    uint64_t v60 = (uint64_t *)(*(void *)(a2 + 320) + 8);
    uint64_t v61 = (std::string **)sub_188CCE4(a1 + 304, *(_DWORD *)(a2 + 312));
    sub_122E3D0((std::string *)(a1 + 304), v61, v60, v59, **(_DWORD **)(a1 + 320) - *(_DWORD *)(a1 + 312));
    int v62 = *(_DWORD *)(a1 + 312) + v59;
    *(_DWORD *)(a1 + 312) = v62;
    uint64_t v63 = *(int **)(a1 + 320);
    if (*v63 < v62) {
      *uint64_t v63 = v62;
    }
  }
  int v64 = *(_DWORD *)(a2 + 336);
  if (v64)
  {
    uint64_t v65 = (uint64_t *)(*(void *)(a2 + 344) + 8);
    uint64_t v66 = (std::string **)sub_188CCE4(a1 + 328, *(_DWORD *)(a2 + 336));
    sub_122E44C((std::string *)(a1 + 328), v66, v65, v64, **(_DWORD **)(a1 + 344) - *(_DWORD *)(a1 + 336));
    int v67 = *(_DWORD *)(a1 + 336) + v64;
    *(_DWORD *)(a1 + 336) = v67;
    uint64_t v68 = *(int **)(a1 + 344);
    if (*v68 < v67) {
      int *v68 = v67;
    }
  }
  int v69 = *(_DWORD *)(a2 + 360);
  if (v69)
  {
    unint64_t v70 = (const std::string **)(*(void *)(a2 + 368) + 8);
    uint64_t v71 = (std::string **)sub_188CCE4(a1 + 352, *(_DWORD *)(a2 + 360));
    sub_188FB98(a1 + 352, v71, v70, v69, **(_DWORD **)(a1 + 368) - *(_DWORD *)(a1 + 360));
    int v72 = *(_DWORD *)(a1 + 360) + v69;
    *(_DWORD *)(a1 + 360) = v72;
    uint64_t v73 = *(int **)(a1 + 368);
    if (*v73 < v72) {
      *uint64_t v73 = v72;
    }
  }
  int v74 = *(_DWORD *)(a2 + 384);
  if (v74)
  {
    uint64_t v75 = (const std::string **)(*(void *)(a2 + 392) + 8);
    uint64_t v76 = (std::string **)sub_188CCE4(a1 + 376, *(_DWORD *)(a2 + 384));
    sub_188FB98(a1 + 376, v76, v75, v74, **(_DWORD **)(a1 + 392) - *(_DWORD *)(a1 + 384));
    int v77 = *(_DWORD *)(a1 + 384) + v74;
    *(_DWORD *)(a1 + 384) = v77;
    uint64_t v78 = *(int **)(a1 + 392);
    if (*v78 < v77) {
      *uint64_t v78 = v77;
    }
  }
  int v79 = *(_DWORD *)(a2 + 408);
  if (v79)
  {
    uint64_t v80 = (const std::string **)(*(void *)(a2 + 416) + 8);
    uint64_t v81 = (std::string **)sub_188CCE4(a1 + 400, *(_DWORD *)(a2 + 408));
    sub_188FB98(a1 + 400, v81, v80, v79, **(_DWORD **)(a1 + 416) - *(_DWORD *)(a1 + 408));
    int v82 = *(_DWORD *)(a1 + 408) + v79;
    *(_DWORD *)(a1 + 408) = v82;
    uint64_t v83 = *(int **)(a1 + 416);
    if (*v83 < v82) {
      *uint64_t v83 = v82;
    }
  }
  int v84 = *(_DWORD *)(a2 + 432);
  if (v84)
  {
    uint64_t v85 = (const std::string **)(*(void *)(a2 + 440) + 8);
    uint64_t v86 = (std::string **)sub_188CCE4(a1 + 424, *(_DWORD *)(a2 + 432));
    sub_188FB98(a1 + 424, v86, v85, v84, **(_DWORD **)(a1 + 440) - *(_DWORD *)(a1 + 432));
    int v87 = *(_DWORD *)(a1 + 432) + v84;
    *(_DWORD *)(a1 + 432) = v87;
    uint64_t v88 = *(int **)(a1 + 440);
    if (*v88 < v87) {
      *uint64_t v88 = v87;
    }
  }
  int v89 = *(_DWORD *)(a2 + 456);
  if (v89)
  {
    int v90 = (const std::string **)(*(void *)(a2 + 464) + 8);
    uint64_t v91 = (std::string **)sub_188CCE4(a1 + 448, *(_DWORD *)(a2 + 456));
    sub_188FB98(a1 + 448, v91, v90, v89, **(_DWORD **)(a1 + 464) - *(_DWORD *)(a1 + 456));
    int v92 = *(_DWORD *)(a1 + 456) + v89;
    *(_DWORD *)(a1 + 456) = v92;
    uint64_t v93 = *(int **)(a1 + 464);
    if (*v93 < v92) {
      *uint64_t v93 = v92;
    }
  }
  int v94 = *(_DWORD *)(a2 + 480);
  if (v94)
  {
    uint64_t v95 = (const std::string **)(*(void *)(a2 + 488) + 8);
    uint64_t v96 = (std::string **)sub_188CCE4(a1 + 472, *(_DWORD *)(a2 + 480));
    sub_188FB98(a1 + 472, v96, v95, v94, **(_DWORD **)(a1 + 488) - *(_DWORD *)(a1 + 480));
    int v97 = *(_DWORD *)(a1 + 480) + v94;
    *(_DWORD *)(a1 + 480) = v97;
    uint64_t v98 = *(int **)(a1 + 488);
    if (*v98 < v97) {
      *uint64_t v98 = v97;
    }
  }
  int v99 = *(_DWORD *)(a2 + 504);
  if (v99)
  {
    uint64_t v100 = (const std::string **)(*(void *)(a2 + 512) + 8);
    uint64_t v101 = (std::string **)sub_188CCE4(a1 + 496, *(_DWORD *)(a2 + 504));
    sub_188FB98(a1 + 496, v101, v100, v99, **(_DWORD **)(a1 + 512) - *(_DWORD *)(a1 + 504));
    int v102 = *(_DWORD *)(a1 + 504) + v99;
    *(_DWORD *)(a1 + 504) = v102;
    uint64_t v103 = *(int **)(a1 + 512);
    if (*v103 < v102) {
      *uint64_t v103 = v102;
    }
  }
  int v104 = *(_DWORD *)(a2 + 528);
  if (v104)
  {
    uint64_t v105 = (const std::string **)(*(void *)(a2 + 536) + 8);
    uint64_t v106 = (std::string **)sub_188CCE4(a1 + 520, *(_DWORD *)(a2 + 528));
    sub_188FB98(a1 + 520, v106, v105, v104, **(_DWORD **)(a1 + 536) - *(_DWORD *)(a1 + 528));
    int v107 = *(_DWORD *)(a1 + 528) + v104;
    *(_DWORD *)(a1 + 528) = v107;
    char v108 = *(int **)(a1 + 536);
    if (*v108 < v107) {
      int *v108 = v107;
    }
  }
  int v109 = *(_DWORD *)(a2 + 552);
  if (v109)
  {
    uint64_t v110 = (const std::string **)(*(void *)(a2 + 560) + 8);
    uint64_t v111 = (std::string **)sub_188CCE4(a1 + 544, *(_DWORD *)(a2 + 552));
    sub_188FB98(a1 + 544, v111, v110, v109, **(_DWORD **)(a1 + 560) - *(_DWORD *)(a1 + 552));
    int v112 = *(_DWORD *)(a1 + 552) + v109;
    *(_DWORD *)(a1 + 552) = v112;
    uint64_t v113 = *(int **)(a1 + 560);
    if (*v113 < v112) {
      int *v113 = v112;
    }
  }
  int v114 = *(_DWORD *)(a2 + 576);
  if (v114)
  {
    uint64_t v115 = (const std::string **)(*(void *)(a2 + 584) + 8);
    uint64_t v116 = (std::string **)sub_188CCE4(a1 + 568, *(_DWORD *)(a2 + 576));
    sub_188FB98(a1 + 568, v116, v115, v114, **(_DWORD **)(a1 + 584) - *(_DWORD *)(a1 + 576));
    int v117 = *(_DWORD *)(a1 + 576) + v114;
    *(_DWORD *)(a1 + 576) = v117;
    uint64_t v118 = *(int **)(a1 + 584);
    if (*v118 < v117) {
      *uint64_t v118 = v117;
    }
  }
  unsigned int v119 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v119)
  {
    if (v119)
    {
      *(_DWORD *)(a1 + 592) = *(_DWORD *)(a2 + 592);
      if ((v119 & 2) == 0)
      {
LABEL_73:
        if ((v119 & 4) == 0) {
          goto LABEL_74;
        }
        goto LABEL_207;
      }
    }
    else if ((v119 & 2) == 0)
    {
      goto LABEL_73;
    }
    *(_DWORD *)(a1 + 596) = *(_DWORD *)(a2 + 596);
    if ((v119 & 4) == 0)
    {
LABEL_74:
      if ((v119 & 8) == 0) {
        goto LABEL_75;
      }
      goto LABEL_208;
    }
LABEL_207:
    *(_DWORD *)(a1 + 600) = *(_DWORD *)(a2 + 600);
    if ((v119 & 8) == 0)
    {
LABEL_75:
      if ((v119 & 0x10) == 0) {
        goto LABEL_76;
      }
      goto LABEL_209;
    }
LABEL_208:
    *(_DWORD *)(a1 + 604) = *(_DWORD *)(a2 + 604);
    if ((v119 & 0x10) == 0)
    {
LABEL_76:
      if ((v119 & 0x20) == 0) {
        goto LABEL_77;
      }
      goto LABEL_210;
    }
LABEL_209:
    *(_DWORD *)(a1 + 608) = *(_DWORD *)(a2 + 608);
    if ((v119 & 0x20) == 0)
    {
LABEL_77:
      if ((v119 & 0x40) == 0) {
        goto LABEL_78;
      }
      goto LABEL_211;
    }
LABEL_210:
    *(_DWORD *)(a1 + 612) = *(_DWORD *)(a2 + 612);
    if ((v119 & 0x40) == 0)
    {
LABEL_78:
      if ((v119 & 0x80) == 0)
      {
LABEL_80:
        *(_DWORD *)(a1 + 16) |= v119;
        goto LABEL_81;
      }
LABEL_79:
      *(_DWORD *)(a1 + 620) = *(_DWORD *)(a2 + 620);
      goto LABEL_80;
    }
LABEL_211:
    *(_DWORD *)(a1 + 616) = *(_DWORD *)(a2 + 616);
    if ((v119 & 0x80) == 0) {
      goto LABEL_80;
    }
    goto LABEL_79;
  }
LABEL_81:
  if ((v119 & 0xFF00) == 0) {
    goto LABEL_92;
  }
  if ((v119 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 624) = *(_DWORD *)(a2 + 624);
    if ((v119 & 0x200) == 0)
    {
LABEL_84:
      if ((v119 & 0x400) == 0) {
        goto LABEL_85;
      }
      goto LABEL_215;
    }
  }
  else if ((v119 & 0x200) == 0)
  {
    goto LABEL_84;
  }
  *(unsigned char *)(a1 + 628) = *(unsigned char *)(a2 + 628);
  if ((v119 & 0x400) == 0)
  {
LABEL_85:
    if ((v119 & 0x800) == 0) {
      goto LABEL_86;
    }
    goto LABEL_216;
  }
LABEL_215:
  *(unsigned char *)(a1 + 629) = *(unsigned char *)(a2 + 629);
  if ((v119 & 0x800) == 0)
  {
LABEL_86:
    if ((v119 & 0x1000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_217;
  }
LABEL_216:
  *(unsigned char *)(a1 + 630) = *(unsigned char *)(a2 + 630);
  if ((v119 & 0x1000) == 0)
  {
LABEL_87:
    if ((v119 & 0x2000) == 0) {
      goto LABEL_88;
    }
    goto LABEL_218;
  }
LABEL_217:
  *(unsigned char *)(a1 + 631) = *(unsigned char *)(a2 + 631);
  if ((v119 & 0x2000) == 0)
  {
LABEL_88:
    if ((v119 & 0x4000) == 0) {
      goto LABEL_89;
    }
LABEL_219:
    *(_DWORD *)(a1 + 636) = *(_DWORD *)(a2 + 636);
    if ((v119 & 0x8000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_90;
  }
LABEL_218:
  *(_DWORD *)(a1 + 632) = *(_DWORD *)(a2 + 632);
  if ((v119 & 0x4000) != 0) {
    goto LABEL_219;
  }
LABEL_89:
  if ((v119 & 0x8000) != 0) {
LABEL_90:
  }
    *(_DWORD *)(a1 + 640) = *(_DWORD *)(a2 + 640);
LABEL_91:
  *(_DWORD *)(a1 + 16) |= v119;
LABEL_92:
  if ((v119 & 0xFF0000) == 0) {
    goto LABEL_103;
  }
  if ((v119 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 644) = *(_DWORD *)(a2 + 644);
    if ((v119 & 0x20000) == 0)
    {
LABEL_95:
      if ((v119 & 0x40000) == 0) {
        goto LABEL_96;
      }
      goto LABEL_223;
    }
  }
  else if ((v119 & 0x20000) == 0)
  {
    goto LABEL_95;
  }
  *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
  if ((v119 & 0x40000) == 0)
  {
LABEL_96:
    if ((v119 & 0x80000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_224;
  }
LABEL_223:
  *(unsigned char *)(a1 + 649) = *(unsigned char *)(a2 + 649);
  if ((v119 & 0x80000) == 0)
  {
LABEL_97:
    if ((v119 & 0x100000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_225;
  }
LABEL_224:
  *(unsigned char *)(a1 + 650) = *(unsigned char *)(a2 + 650);
  if ((v119 & 0x100000) == 0)
  {
LABEL_98:
    if ((v119 & 0x200000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_226;
  }
LABEL_225:
  *(unsigned char *)(a1 + 651) = *(unsigned char *)(a2 + 651);
  if ((v119 & 0x200000) == 0)
  {
LABEL_99:
    if ((v119 & 0x400000) == 0) {
      goto LABEL_100;
    }
LABEL_227:
    *(_DWORD *)(a1 + 656) = *(_DWORD *)(a2 + 656);
    if ((v119 & 0x800000) == 0) {
      goto LABEL_102;
    }
    goto LABEL_101;
  }
LABEL_226:
  *(_DWORD *)(a1 + 652) = *(_DWORD *)(a2 + 652);
  if ((v119 & 0x400000) != 0) {
    goto LABEL_227;
  }
LABEL_100:
  if ((v119 & 0x800000) != 0) {
LABEL_101:
  }
    *(_DWORD *)(a1 + 660) = *(_DWORD *)(a2 + 660);
LABEL_102:
  *(_DWORD *)(a1 + 16) |= v119;
LABEL_103:
  if (!HIBYTE(v119)) {
    goto LABEL_113;
  }
  if ((v119 & 0x1000000) != 0)
  {
    *(void *)(a1 + 664) = *(void *)(a2 + 664);
    if ((v119 & 0x2000000) == 0)
    {
LABEL_106:
      if ((v119 & 0x4000000) == 0) {
        goto LABEL_107;
      }
      goto LABEL_279;
    }
  }
  else if ((v119 & 0x2000000) == 0)
  {
    goto LABEL_106;
  }
  *(_DWORD *)(a1 + 672) = *(_DWORD *)(a2 + 672);
  if ((v119 & 0x4000000) == 0)
  {
LABEL_107:
    if ((v119 & 0x8000000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_280;
  }
LABEL_279:
  *(_DWORD *)(a1 + 676) = *(_DWORD *)(a2 + 676);
  if ((v119 & 0x8000000) == 0)
  {
LABEL_108:
    if ((v119 & 0x10000000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_281;
  }
LABEL_280:
  *(_DWORD *)(a1 + 680) = *(_DWORD *)(a2 + 680);
  if ((v119 & 0x10000000) == 0)
  {
LABEL_109:
    if ((v119 & 0x20000000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_282;
  }
LABEL_281:
  *(_DWORD *)(a1 + 684) = *(_DWORD *)(a2 + 684);
  if ((v119 & 0x20000000) == 0)
  {
LABEL_110:
    if ((v119 & 0x40000000) == 0) {
      goto LABEL_111;
    }
LABEL_283:
    *(_DWORD *)(a1 + 692) = *(_DWORD *)(a2 + 692);
    if ((v119 & 0x80000000) == 0) {
      goto LABEL_112;
    }
LABEL_284:
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    goto LABEL_112;
  }
LABEL_282:
  *(_DWORD *)(a1 + 688) = *(_DWORD *)(a2 + 688);
  if ((v119 & 0x40000000) != 0) {
    goto LABEL_283;
  }
LABEL_111:
  if ((v119 & 0x80000000) != 0) {
    goto LABEL_284;
  }
LABEL_112:
  *(_DWORD *)(a1 + 16) |= v119;
LABEL_113:
  unsigned int v120 = *(_DWORD *)(a2 + 20);
  if (!(_BYTE)v120) {
    goto LABEL_124;
  }
  if (v120)
  {
    *(_DWORD *)(a1 + 704) = *(_DWORD *)(a2 + 704);
    if ((v120 & 2) == 0)
    {
LABEL_116:
      if ((v120 & 4) == 0) {
        goto LABEL_117;
      }
      goto LABEL_231;
    }
  }
  else if ((v120 & 2) == 0)
  {
    goto LABEL_116;
  }
  *(_DWORD *)(a1 + 708) = *(_DWORD *)(a2 + 708);
  if ((v120 & 4) == 0)
  {
LABEL_117:
    if ((v120 & 8) == 0) {
      goto LABEL_118;
    }
    goto LABEL_232;
  }
LABEL_231:
  *(_DWORD *)(a1 + 712) = *(_DWORD *)(a2 + 712);
  if ((v120 & 8) == 0)
  {
LABEL_118:
    if ((v120 & 0x10) == 0) {
      goto LABEL_119;
    }
    goto LABEL_233;
  }
LABEL_232:
  *(unsigned char *)(a1 + 716) = *(unsigned char *)(a2 + 716);
  if ((v120 & 0x10) == 0)
  {
LABEL_119:
    if ((v120 & 0x20) == 0) {
      goto LABEL_120;
    }
    goto LABEL_234;
  }
LABEL_233:
  *(unsigned char *)(a1 + 717) = *(unsigned char *)(a2 + 717);
  if ((v120 & 0x20) == 0)
  {
LABEL_120:
    if ((v120 & 0x40) == 0) {
      goto LABEL_121;
    }
LABEL_235:
    *(unsigned char *)(a1 + 719) = *(unsigned char *)(a2 + 719);
    if ((v120 & 0x80) == 0) {
      goto LABEL_123;
    }
    goto LABEL_122;
  }
LABEL_234:
  *(unsigned char *)(a1 + 718) = *(unsigned char *)(a2 + 718);
  if ((v120 & 0x40) != 0) {
    goto LABEL_235;
  }
LABEL_121:
  if ((v120 & 0x80) != 0) {
LABEL_122:
  }
    *(_DWORD *)(a1 + 720) = *(_DWORD *)(a2 + 720);
LABEL_123:
  *(_DWORD *)(a1 + 20) |= v120;
LABEL_124:
  if ((v120 & 0xFF00) == 0) {
    goto LABEL_135;
  }
  if ((v120 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 724) = *(_DWORD *)(a2 + 724);
    if ((v120 & 0x200) == 0)
    {
LABEL_127:
      if ((v120 & 0x400) == 0) {
        goto LABEL_128;
      }
      goto LABEL_239;
    }
  }
  else if ((v120 & 0x200) == 0)
  {
    goto LABEL_127;
  }
  *(_DWORD *)(a1 + 728) = *(_DWORD *)(a2 + 728);
  if ((v120 & 0x400) == 0)
  {
LABEL_128:
    if ((v120 & 0x800) == 0) {
      goto LABEL_129;
    }
    goto LABEL_240;
  }
LABEL_239:
  *(_DWORD *)(a1 + 732) = *(_DWORD *)(a2 + 732);
  if ((v120 & 0x800) == 0)
  {
LABEL_129:
    if ((v120 & 0x1000) == 0) {
      goto LABEL_130;
    }
    goto LABEL_241;
  }
LABEL_240:
  *(_DWORD *)(a1 + 736) = *(_DWORD *)(a2 + 736);
  if ((v120 & 0x1000) == 0)
  {
LABEL_130:
    if ((v120 & 0x2000) == 0) {
      goto LABEL_131;
    }
    goto LABEL_242;
  }
LABEL_241:
  *(_DWORD *)(a1 + 740) = *(_DWORD *)(a2 + 740);
  if ((v120 & 0x2000) == 0)
  {
LABEL_131:
    if ((v120 & 0x4000) == 0) {
      goto LABEL_132;
    }
LABEL_243:
    *(_DWORD *)(a1 + 748) = *(_DWORD *)(a2 + 748);
    if ((v120 & 0x8000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_133;
  }
LABEL_242:
  *(_DWORD *)(a1 + 744) = *(_DWORD *)(a2 + 744);
  if ((v120 & 0x4000) != 0) {
    goto LABEL_243;
  }
LABEL_132:
  if ((v120 & 0x8000) != 0) {
LABEL_133:
  }
    *(_DWORD *)(a1 + 752) = *(_DWORD *)(a2 + 752);
LABEL_134:
  *(_DWORD *)(a1 + 20) |= v120;
LABEL_135:
  if ((v120 & 0xFF0000) == 0) {
    goto LABEL_146;
  }
  if ((v120 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 756) = *(_DWORD *)(a2 + 756);
    if ((v120 & 0x20000) == 0)
    {
LABEL_138:
      if ((v120 & 0x40000) == 0) {
        goto LABEL_139;
      }
      goto LABEL_247;
    }
  }
  else if ((v120 & 0x20000) == 0)
  {
    goto LABEL_138;
  }
  *(_DWORD *)(a1 + 760) = *(_DWORD *)(a2 + 760);
  if ((v120 & 0x40000) == 0)
  {
LABEL_139:
    if ((v120 & 0x80000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_248;
  }
LABEL_247:
  *(_DWORD *)(a1 + 764) = *(_DWORD *)(a2 + 764);
  if ((v120 & 0x80000) == 0)
  {
LABEL_140:
    if ((v120 & 0x100000) == 0) {
      goto LABEL_141;
    }
    goto LABEL_249;
  }
LABEL_248:
  *(_DWORD *)(a1 + 768) = *(_DWORD *)(a2 + 768);
  if ((v120 & 0x100000) == 0)
  {
LABEL_141:
    if ((v120 & 0x200000) == 0) {
      goto LABEL_142;
    }
    goto LABEL_250;
  }
LABEL_249:
  *(_DWORD *)(a1 + 772) = *(_DWORD *)(a2 + 772);
  if ((v120 & 0x200000) == 0)
  {
LABEL_142:
    if ((v120 & 0x400000) == 0) {
      goto LABEL_143;
    }
LABEL_251:
    *(unsigned char *)(a1 + 780) = *(unsigned char *)(a2 + 780);
    if ((v120 & 0x800000) == 0) {
      goto LABEL_145;
    }
    goto LABEL_144;
  }
LABEL_250:
  *(_DWORD *)(a1 + 776) = *(_DWORD *)(a2 + 776);
  if ((v120 & 0x400000) != 0) {
    goto LABEL_251;
  }
LABEL_143:
  if ((v120 & 0x800000) != 0) {
LABEL_144:
  }
    *(unsigned char *)(a1 + 781) = *(unsigned char *)(a2 + 781);
LABEL_145:
  *(_DWORD *)(a1 + 20) |= v120;
LABEL_146:
  if (!HIBYTE(v120)) {
    goto LABEL_156;
  }
  if ((v120 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 782) = *(unsigned char *)(a2 + 782);
    if ((v120 & 0x2000000) == 0)
    {
LABEL_149:
      if ((v120 & 0x4000000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_287;
    }
  }
  else if ((v120 & 0x2000000) == 0)
  {
    goto LABEL_149;
  }
  *(unsigned char *)(a1 + 783) = *(unsigned char *)(a2 + 783);
  if ((v120 & 0x4000000) == 0)
  {
LABEL_150:
    if ((v120 & 0x8000000) == 0) {
      goto LABEL_151;
    }
    goto LABEL_288;
  }
LABEL_287:
  *(void *)(a1 + 784) = *(void *)(a2 + 784);
  if ((v120 & 0x8000000) == 0)
  {
LABEL_151:
    if ((v120 & 0x10000000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_289;
  }
LABEL_288:
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  if ((v120 & 0x10000000) == 0)
  {
LABEL_152:
    if ((v120 & 0x20000000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_290;
  }
LABEL_289:
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  if ((v120 & 0x20000000) == 0)
  {
LABEL_153:
    if ((v120 & 0x40000000) == 0) {
      goto LABEL_154;
    }
LABEL_291:
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    if ((v120 & 0x80000000) == 0) {
      goto LABEL_155;
    }
LABEL_292:
    *(unsigned char *)(a1 + 824) = *(unsigned char *)(a2 + 824);
    goto LABEL_155;
  }
LABEL_290:
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  if ((v120 & 0x40000000) != 0) {
    goto LABEL_291;
  }
LABEL_154:
  if ((v120 & 0x80000000) != 0) {
    goto LABEL_292;
  }
LABEL_155:
  *(_DWORD *)(a1 + 20) |= v120;
LABEL_156:
  unsigned int v121 = *(_DWORD *)(a2 + 24);
  if (!(_BYTE)v121) {
    goto LABEL_167;
  }
  if (v121)
  {
    *(unsigned char *)(a1 + 825) = *(unsigned char *)(a2 + 825);
    if ((v121 & 2) == 0)
    {
LABEL_159:
      if ((v121 & 4) == 0) {
        goto LABEL_160;
      }
      goto LABEL_255;
    }
  }
  else if ((v121 & 2) == 0)
  {
    goto LABEL_159;
  }
  *(unsigned char *)(a1 + 826) = *(unsigned char *)(a2 + 826);
  if ((v121 & 4) == 0)
  {
LABEL_160:
    if ((v121 & 8) == 0) {
      goto LABEL_161;
    }
    goto LABEL_256;
  }
LABEL_255:
  *(unsigned char *)(a1 + 827) = *(unsigned char *)(a2 + 827);
  if ((v121 & 8) == 0)
  {
LABEL_161:
    if ((v121 & 0x10) == 0) {
      goto LABEL_162;
    }
    goto LABEL_257;
  }
LABEL_256:
  *(_DWORD *)(a1 + 828) = *(_DWORD *)(a2 + 828);
  if ((v121 & 0x10) == 0)
  {
LABEL_162:
    if ((v121 & 0x20) == 0) {
      goto LABEL_163;
    }
    goto LABEL_258;
  }
LABEL_257:
  *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
  if ((v121 & 0x20) == 0)
  {
LABEL_163:
    if ((v121 & 0x40) == 0) {
      goto LABEL_164;
    }
LABEL_259:
    *(_DWORD *)(a1 + 840) = *(_DWORD *)(a2 + 840);
    if ((v121 & 0x80) == 0) {
      goto LABEL_166;
    }
    goto LABEL_165;
  }
LABEL_258:
  *(_DWORD *)(a1 + 836) = *(_DWORD *)(a2 + 836);
  if ((v121 & 0x40) != 0) {
    goto LABEL_259;
  }
LABEL_164:
  if ((v121 & 0x80) != 0) {
LABEL_165:
  }
    *(_DWORD *)(a1 + 844) = *(_DWORD *)(a2 + 844);
LABEL_166:
  *(_DWORD *)(a1 + 24) |= v121;
LABEL_167:
  if ((v121 & 0xFF00) == 0) {
    goto LABEL_178;
  }
  if ((v121 & 0x100) != 0)
  {
    *(void *)(a1 + 848) = *(void *)(a2 + 848);
    if ((v121 & 0x200) == 0)
    {
LABEL_170:
      if ((v121 & 0x400) == 0) {
        goto LABEL_171;
      }
      goto LABEL_263;
    }
  }
  else if ((v121 & 0x200) == 0)
  {
    goto LABEL_170;
  }
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  if ((v121 & 0x400) == 0)
  {
LABEL_171:
    if ((v121 & 0x800) == 0) {
      goto LABEL_172;
    }
    goto LABEL_264;
  }
LABEL_263:
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  if ((v121 & 0x800) == 0)
  {
LABEL_172:
    if ((v121 & 0x1000) == 0) {
      goto LABEL_173;
    }
    goto LABEL_265;
  }
LABEL_264:
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  if ((v121 & 0x1000) == 0)
  {
LABEL_173:
    if ((v121 & 0x2000) == 0) {
      goto LABEL_174;
    }
    goto LABEL_266;
  }
LABEL_265:
  *(unsigned char *)(a1 + 880) = *(unsigned char *)(a2 + 880);
  if ((v121 & 0x2000) == 0)
  {
LABEL_174:
    if ((v121 & 0x4000) == 0) {
      goto LABEL_175;
    }
LABEL_267:
    *(unsigned char *)(a1 + 882) = *(unsigned char *)(a2 + 882);
    if ((v121 & 0x8000) == 0) {
      goto LABEL_177;
    }
    goto LABEL_176;
  }
LABEL_266:
  *(unsigned char *)(a1 + 881) = *(unsigned char *)(a2 + 881);
  if ((v121 & 0x4000) != 0) {
    goto LABEL_267;
  }
LABEL_175:
  if ((v121 & 0x8000) != 0) {
LABEL_176:
  }
    *(unsigned char *)(a1 + 883) = *(unsigned char *)(a2 + 883);
LABEL_177:
  *(_DWORD *)(a1 + 24) |= v121;
LABEL_178:
  if ((v121 & 0xFF0000) == 0) {
    goto LABEL_189;
  }
  if ((v121 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 884) = *(_DWORD *)(a2 + 884);
    if ((v121 & 0x20000) == 0)
    {
LABEL_181:
      if ((v121 & 0x40000) == 0) {
        goto LABEL_182;
      }
      goto LABEL_271;
    }
  }
  else if ((v121 & 0x20000) == 0)
  {
    goto LABEL_181;
  }
  *(_DWORD *)(a1 + 888) = *(_DWORD *)(a2 + 888);
  if ((v121 & 0x40000) == 0)
  {
LABEL_182:
    if ((v121 & 0x80000) == 0) {
      goto LABEL_183;
    }
    goto LABEL_272;
  }
LABEL_271:
  *(_DWORD *)(a1 + 892) = *(_DWORD *)(a2 + 892);
  if ((v121 & 0x80000) == 0)
  {
LABEL_183:
    if ((v121 & 0x100000) == 0) {
      goto LABEL_184;
    }
    goto LABEL_273;
  }
LABEL_272:
  *(void *)(a1 + 896) = *(void *)(a2 + 896);
  if ((v121 & 0x100000) == 0)
  {
LABEL_184:
    if ((v121 & 0x200000) == 0) {
      goto LABEL_185;
    }
    goto LABEL_274;
  }
LABEL_273:
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  if ((v121 & 0x200000) == 0)
  {
LABEL_185:
    if ((v121 & 0x400000) == 0) {
      goto LABEL_186;
    }
LABEL_275:
    *(_DWORD *)(a1 + 920) = *(_DWORD *)(a2 + 920);
    if ((v121 & 0x800000) == 0) {
      goto LABEL_188;
    }
    goto LABEL_187;
  }
LABEL_274:
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  if ((v121 & 0x400000) != 0) {
    goto LABEL_275;
  }
LABEL_186:
  if ((v121 & 0x800000) != 0) {
LABEL_187:
  }
    *(unsigned char *)(a1 + 924) = *(unsigned char *)(a2 + 924);
LABEL_188:
  *(_DWORD *)(a1 + 24) |= v121;
LABEL_189:
  if (!HIBYTE(v121)) {
    goto LABEL_199;
  }
  if ((v121 & 0x1000000) != 0)
  {
    *(void *)(a1 + 928) = *(void *)(a2 + 928);
    if ((v121 & 0x2000000) == 0)
    {
LABEL_192:
      if ((v121 & 0x4000000) == 0) {
        goto LABEL_193;
      }
      goto LABEL_295;
    }
  }
  else if ((v121 & 0x2000000) == 0)
  {
    goto LABEL_192;
  }
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  if ((v121 & 0x4000000) == 0)
  {
LABEL_193:
    if ((v121 & 0x8000000) == 0) {
      goto LABEL_194;
    }
    goto LABEL_296;
  }
LABEL_295:
  *(_DWORD *)(a1 + 944) = *(_DWORD *)(a2 + 944);
  if ((v121 & 0x8000000) == 0)
  {
LABEL_194:
    if ((v121 & 0x10000000) == 0) {
      goto LABEL_195;
    }
    goto LABEL_297;
  }
LABEL_296:
  *(_DWORD *)(a1 + 948) = *(_DWORD *)(a2 + 948);
  if ((v121 & 0x10000000) == 0)
  {
LABEL_195:
    if ((v121 & 0x20000000) == 0) {
      goto LABEL_196;
    }
    goto LABEL_298;
  }
LABEL_297:
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  if ((v121 & 0x20000000) == 0)
  {
LABEL_196:
    if ((v121 & 0x40000000) == 0) {
      goto LABEL_197;
    }
LABEL_299:
    *(_DWORD *)(a1 + 964) = *(_DWORD *)(a2 + 964);
    if ((v121 & 0x80000000) == 0) {
      goto LABEL_198;
    }
LABEL_300:
    *(_DWORD *)(a1 + 968) = *(_DWORD *)(a2 + 968);
    goto LABEL_198;
  }
LABEL_298:
  *(_DWORD *)(a1 + 960) = *(_DWORD *)(a2 + 960);
  if ((v121 & 0x40000000) != 0) {
    goto LABEL_299;
  }
LABEL_197:
  if ((v121 & 0x80000000) != 0) {
    goto LABEL_300;
  }
LABEL_198:
  *(_DWORD *)(a1 + 24) |= v121;
LABEL_199:
  if (*(unsigned char *)(a2 + 28))
  {
    int v122 = *(_DWORD *)(a2 + 972);
    *(_DWORD *)(a1 + 28) |= 1u;
    *(_DWORD *)(a1 + 972) = v122;
  }
  uint64_t v123 = *(void *)(a2 + 8);
  if (v123)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v123 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1223D1C()
{
  return 1;
}

void *sub_1223D24@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.SearchParams");
}

uint64_t sub_1223D34(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_249E230;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a2;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a2;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1223D70(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249E230;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    uint64_t v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9) {
    sub_188B4F8(v4, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_1223E74(_Unwind_Exception *a1)
{
  sub_1889DA8(v4);
  sub_1889DA8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1223EC8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1223F4C(void *a1)
{
  sub_1223EC8(a1);

  operator delete();
}

uint64_t sub_1223F84(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 48) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1223FA4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    uint64_t v35 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 24)
      {
        int v17 = v8 - 1;
        while (1)
        {
          uint64_t v35 = v17 + 1;
          int v18 = v17[1];
          if (v17[1] < 0)
          {
            int v19 = v18 + (v17[2] << 7);
            int v18 = v19 - 128;
            if (v17[2] < 0)
            {
              int v17 = (char *)sub_188C0D0((uint64_t)(v17 + 1), v19 - 128);
              int v18 = v20;
            }
            else
            {
              v17 += 3;
            }
          }
          else
          {
            v17 += 2;
          }
          uint64_t v35 = v17;
          uint64_t v21 = *(unsigned int *)(a1 + 40);
          if (v21 == *(_DWORD *)(a1 + 44))
          {
            int v22 = v21 + 1;
            sub_188C80C((unsigned int *)(a1 + 40), v21 + 1);
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v21) = v18;
            int v17 = v35;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 48) + 4 * v21) = v18;
            int v22 = v21 + 1;
          }
          *(_DWORD *)(a1 + 40) = v22;
          if (!v17) {
            goto LABEL_67;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 24) {
            goto LABEL_55;
          }
        }
      }
      if (v9 == 26)
      {
        int v34 = (unsigned int *)(a1 + 40);
        goto LABEL_64;
      }
      goto LABEL_14;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    int v29 = v8 + 1;
    int v30 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_54;
    }
    int v31 = *v29;
    int v30 = v30 + (v31 << 7) - 128;
    if ((v31 & 0x80000000) == 0)
    {
      int v29 = v8 + 2;
LABEL_54:
      uint64_t v35 = v29;
      *(_DWORD *)(a1 + 56) = v30;
      int v5 = 1;
      goto LABEL_55;
    }
    int v32 = (char *)sub_188C0D0((uint64_t)v8, v30);
    uint64_t v35 = v32;
    *(_DWORD *)(a1 + 56) = v33;
    int v5 = 1;
    if (!v32) {
      goto LABEL_67;
    }
LABEL_55:
    if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v23 = v8 - 1;
    while (1)
    {
      uint64_t v35 = v23 + 1;
      int v24 = v23[1];
      if (v23[1] < 0)
      {
        int v25 = v24 + (v23[2] << 7);
        int v24 = v25 - 128;
        if (v23[2] < 0)
        {
          uint64_t v23 = (char *)sub_188C0D0((uint64_t)(v23 + 1), v25 - 128);
          int v24 = v26;
        }
        else
        {
          v23 += 3;
        }
      }
      else
      {
        v23 += 2;
      }
      uint64_t v35 = v23;
      uint64_t v27 = *(unsigned int *)(a1 + 24);
      if (v27 == *(_DWORD *)(a1 + 28))
      {
        int v28 = v27 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v27 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v24;
        uint64_t v23 = v35;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v24;
        int v28 = v27 + 1;
      }
      *(_DWORD *)(a1 + 24) = v28;
      if (!v23) {
        goto LABEL_67;
      }
      if (*(void *)a3 <= (unint64_t)v23 || *v23 != 16) {
        goto LABEL_55;
      }
    }
  }
  if (v9 == 18)
  {
    int v34 = (unsigned int *)(a1 + 24);
LABEL_64:
    uint64_t v16 = sub_188C2CC(v34, (unsigned __int8 *)v8, (uint64_t)a3);
LABEL_21:
    uint64_t v35 = (char *)v16;
    if (!v16) {
      goto LABEL_67;
    }
    goto LABEL_55;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v35;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_21;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_67:
  uint64_t v35 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v35;
}

unsigned char *sub_1224300(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(unsigned int *)(a1 + 40);
  if ((int)v14 >= 1)
  {
    for (uint64_t j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v16 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * j);
      unsigned char *v4 = 24;
      v4[1] = v16;
      if (v16 > 0x7F)
      {
        v4[1] = v16 | 0x80;
        unsigned int v17 = v16 >> 7;
        v4[2] = v16 >> 7;
        v4 += 3;
        if (v16 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v18 = v17 >> 14;
            v17 >>= 7;
            *v4++ = v17;
          }
          while (v18);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_122456C(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  uint64_t result = v2 + sub_188D4F0((unsigned int *)(a1 + 40)) + v3 + *(unsigned int *)(a1 + 40);
  if (*(unsigned char *)(a1 + 16)) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1224618(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188C80C((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[4 * v9], *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v11 = *(_DWORD *)(a2 + 56);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v11;
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_122471C(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    std::string::value_type v6 = result->__r_.__value_.__s.__data_[8];
    p_std::string::size_type size = &result->__r_.__value_.__l.__size_;
    *((_DWORD *)p_size + 4) = 0;
    *((_DWORD *)p_size + 8) = 0;
    *((_DWORD *)p_size + 12) = 0;
    *((_DWORD *)p_size + 2) = 0;
    if (v6) {
      sub_188B4AC((uint64_t *)p_size);
    }
    return sub_1224618(v4, a2);
  }
  return result;
}

uint64_t sub_1224780()
{
  return 1;
}

__n128 sub_1224788(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  __n128 result = *(__n128 *)(a2 + 40);
  *(__n128 *)(a1 + 40) = result;
  *(void *)(a2 + 40) = v5;
  *(void *)(a2 + 48) = v6;
  LODWORD(v5) = *(_DWORD *)(a1 + 56);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(_DWORD *)(a2 + 56) = v5;
  return result;
}

void *sub_12247DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.geo.TileStats");
}

void *sub_12247EC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *__n128 result = off_249DA30;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[5] = 0;
  result[6] = 0x100000000;
  return result;
}

uint64_t sub_1224878(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249DAB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_1224920(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249DB30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_12249C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249DBB0;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = &qword_2550250;
  result[6] = &qword_2550250;
  result[7] = &qword_2550250;
  return result;
}

uint64_t sub_1224A6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249DC30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 64) = a1;
  *(_DWORD *)(result + 88) = 0;
  return result;
}

uint64_t sub_1224B1C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249DCB0;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

uint64_t sub_1224BB8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249DD30;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

void *sub_1224C5C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249DDB0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1224D00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249DE30;
  result[1] = a1;
  result[2] = 0;
  result[3] = 0;
  result[4] = a1;
  result[5] = 0;
  result[6] = a1;
  result[7] = 0;
  result[8] = a1;
  result[9] = &qword_2550250;
  return result;
}

uint64_t sub_1224DC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249DEB0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_1224E48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249DF30;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1224EEC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249DFB0;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

uint64_t sub_1224F70(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249E030;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

void *sub_122500C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249E0B0;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_12250B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = &off_249E130;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

double sub_1225154(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_121A544(v2, a1, 0);
}

uint64_t sub_12251B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_249E230;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t *sub_1225258(int a1)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_26002E0, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_26002E0))
  {
    byte_26002D8 = sub_1889E98((uint64_t)&qword_2600158, (int *)"\r", 16, qword_26002E8);
    __cxa_guard_release(&qword_26002E0);
  }
  int v2 = sub_1889E18((uint64_t)&qword_2600158, (int *)"\r", 0x10uLL, a1);
  if (v2 != -1) {
    return &qword_26002E8[3 * v2];
  }
  if ((atomic_load_explicit((atomic_uchar *volatile)byte_2550268, memory_order_acquire) & 1) == 0) {
    sub_1889F30();
  }
  return &qword_2550250;
}

void sub_1225328(_Unwind_Exception *a1)
{
}

uint64_t sub_1225340(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12253E0(uint64_t a1)
{
  sub_1225340(a1);

  operator delete();
}

uint64_t sub_1225418(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1225460(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_29;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      int v20 = v8 + 2;
LABEL_29:
      *(void *)uint64_t v24 = v20;
      *(_DWORD *)(a1 + 32) = v19;
      goto LABEL_30;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v19);
    *(void *)uint64_t v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_37;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    unsigned int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      unsigned int v17 = (uint64_t *)*v17;
    }
    unsigned int v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
    uint64_t v15 = (void *)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = *(char **)v24;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_24;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  *(void *)uint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_1225638(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1225780(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_122584C()
{
  return 1;
}

void *sub_1225854@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.places.Transliteration");
}

double sub_1225864(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_249E330;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = a2;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 64) = &qword_2550250;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(void *)(a1 + 88) = &qword_2550250;
  *(void *)(a1 + 96) = &qword_2550250;
  *(void *)(a1 + 104) = &qword_2550250;
  *(void *)(a1 + 112) = &qword_2550250;
  *(void *)(a1 + 120) = &qword_2550250;
  *(void *)(a1 + 128) = &qword_2550250;
  *(void *)(a1 + 136) = &qword_2550250;
  *(void *)(a1 + 144) = &qword_2550250;
  *(void *)(a1 + 152) = &qword_2550250;
  *(void *)(a1 + 160) = &qword_2550250;
  *(void *)(a1 + 168) = &qword_2550250;
  *(void *)(a1 + 176) = &qword_2550250;
  *(void *)(a1 + 184) = &qword_2550250;
  *(void *)(a1 + 192) = &qword_2550250;
  *(void *)(a1 + 200) = &qword_2550250;
  *(void *)(a1 + 237) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  return result;
}

uint64_t sub_12258DC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249E330;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_122E5BC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    BOOL v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      BOOL v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v12 & 4) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v12 & 8) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v12 & 0x10) != 0)
  {
    unsigned int v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v12 & 0x20) != 0)
  {
    unsigned int v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v18);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if ((v12 & 0x40) != 0)
  {
    uint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 104) = &qword_2550250;
  if ((v12 & 0x80) != 0)
  {
    int v20 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 104), (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL), v20);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 112) = &qword_2550250;
  if ((v12 & 0x100) != 0)
  {
    int v21 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 112), (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL), v21);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 120) = &qword_2550250;
  if ((v12 & 0x200) != 0)
  {
    uint64_t v22 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v22);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v12 & 0x400) != 0)
  {
    int v23 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v23 = (uint64_t *)*v23;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v23);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 136) = &qword_2550250;
  if ((v12 & 0x800) != 0)
  {
    uint64_t v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 136), (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 144) = &qword_2550250;
  if ((v12 & 0x1000) != 0)
  {
    int v25 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 144), (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL), v25);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 152) = &qword_2550250;
  if ((v12 & 0x2000) != 0)
  {
    int v26 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 152), (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL), v26);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 160) = &qword_2550250;
  if ((v12 & 0x4000) != 0)
  {
    uint64_t v27 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 160), (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL), v27);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 168) = &qword_2550250;
  if ((v12 & 0x8000) != 0)
  {
    int v28 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v28 = (uint64_t *)*v28;
    }
    sub_1881DF4((std::string **)(a1 + 168), (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL), v28);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 176) = &qword_2550250;
  if ((v12 & 0x10000) != 0)
  {
    int v29 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 176), (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v29);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 184) = &qword_2550250;
  if ((v12 & 0x20000) != 0)
  {
    int v30 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v30 = (uint64_t *)*v30;
    }
    sub_1881DF4((std::string **)(a1 + 184), (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), v30);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 192) = &qword_2550250;
  if ((v12 & 0x40000) != 0)
  {
    int v31 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v31 = (uint64_t *)*v31;
    }
    sub_1881DF4((std::string **)(a1 + 192), (long long *)(*(void *)(a2 + 192) & 0xFFFFFFFFFFFFFFFELL), v31);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 200) = &qword_2550250;
  if ((v12 & 0x80000) != 0)
  {
    int v32 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v32 = (uint64_t *)*v32;
    }
    sub_1881DF4((std::string **)(a1 + 200), (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL), v32);
  }
  long long v33 = *(_OWORD *)(a2 + 208);
  long long v34 = *(_OWORD *)(a2 + 224);
  *(void *)(a1 + 237) = *(void *)(a2 + 237);
  *(_OWORD *)(a1 + 208) = v33;
  *(_OWORD *)(a1 + 224) = v34;
  return a1;
}

void sub_1225DA0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1225DE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1225E78((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_122E53C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1225E78(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 112));
  }
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 120));
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 144));
  }
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 152));
  }
  if (*(uint64_t **)(a1 + 160) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 160));
  }
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 168));
  }
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 176));
  }
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 184));
  }
  double result = (void ***)(a1 + 192);
  if (*(uint64_t **)(a1 + 192) != &qword_2550250) {
    sub_1881C6C(result);
  }
  int v6 = *(uint64_t **)(a1 + 200);
  uint64_t v5 = (void ***)(a1 + 200);
  if (v6 != &qword_2550250)
  {
    sub_1881C6C(v5);
  }
  return result;
}

void sub_1226048(void *a1)
{
  sub_1225DE8(a1);

  operator delete();
}

uint64_t sub_1226080(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      double result = sub_1225418(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_19:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_23;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_23;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_27:
      unint64_t v9 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v9 + 23) < 0)
      {
        **(unsigned char **)unint64_t v9 = 0;
        *(void *)(v9 + 8) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v9 = 0;
        *(unsigned char *)(v9 + 23) = 0;
        if ((v5 & 0x10) != 0) {
          goto LABEL_31;
        }
      }
LABEL_11:
      if ((v5 & 0x20) == 0) {
        goto LABEL_12;
      }
LABEL_35:
      unint64_t v11 = *(void *)(v1 + 88) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        if ((v5 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
        if ((v5 & 0x40) != 0) {
          goto LABEL_39;
        }
      }
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_46;
      }
LABEL_43:
      unint64_t v13 = *(void *)(v1 + 104) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v13 + 23) < 0)
      {
        **(unsigned char **)unint64_t v13 = 0;
        *(void *)(v13 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v13 = 0;
        *(unsigned char *)(v13 + 23) = 0;
      }
      goto LABEL_46;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_19;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_19;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_23:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_27;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v5 & 8) != 0) {
        goto LABEL_27;
      }
    }
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_31:
    unint64_t v10 = *(void *)(v1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v5 & 0x20) != 0) {
        goto LABEL_35;
      }
    }
LABEL_12:
    if ((v5 & 0x40) == 0) {
      goto LABEL_13;
    }
LABEL_39:
    unint64_t v12 = *(void *)(v1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v5 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v5 & 0x80) == 0) {
        goto LABEL_46;
      }
    }
    goto LABEL_43;
  }
LABEL_46:
  if ((v5 & 0xFF00) == 0) {
    goto LABEL_87;
  }
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0) {
      goto LABEL_49;
    }
LABEL_60:
    unint64_t v15 = *(void *)(v1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v15 + 23) < 0)
    {
      **(unsigned char **)unint64_t v15 = 0;
      *(void *)(v15 + 8) = 0;
      if ((v5 & 0x400) != 0) {
        goto LABEL_64;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v15 = 0;
      *(unsigned char *)(v15 + 23) = 0;
      if ((v5 & 0x400) != 0) {
        goto LABEL_64;
      }
    }
LABEL_50:
    if ((v5 & 0x800) == 0) {
      goto LABEL_51;
    }
LABEL_68:
    unint64_t v17 = *(void *)(v1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v17 + 23) < 0)
    {
      **(unsigned char **)unint64_t v17 = 0;
      *(void *)(v17 + 8) = 0;
      if ((v5 & 0x1000) != 0) {
        goto LABEL_72;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v17 = 0;
      *(unsigned char *)(v17 + 23) = 0;
      if ((v5 & 0x1000) != 0) {
        goto LABEL_72;
      }
    }
LABEL_52:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_53;
    }
LABEL_76:
    unint64_t v19 = *(void *)(v1 + 152) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v19 + 23) < 0)
    {
      **(unsigned char **)unint64_t v19 = 0;
      *(void *)(v19 + 8) = 0;
      if ((v5 & 0x4000) != 0) {
        goto LABEL_80;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v19 = 0;
      *(unsigned char *)(v19 + 23) = 0;
      if ((v5 & 0x4000) != 0) {
        goto LABEL_80;
      }
    }
LABEL_54:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_84;
  }
  unint64_t v14 = *(void *)(v1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v5 & 0x200) != 0) {
      goto LABEL_60;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v5 & 0x200) != 0) {
      goto LABEL_60;
    }
  }
LABEL_49:
  if ((v5 & 0x400) == 0) {
    goto LABEL_50;
  }
LABEL_64:
  unint64_t v16 = *(void *)(v1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v16 + 23) < 0)
  {
    **(unsigned char **)unint64_t v16 = 0;
    *(void *)(v16 + 8) = 0;
    if ((v5 & 0x800) != 0) {
      goto LABEL_68;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v16 = 0;
    *(unsigned char *)(v16 + 23) = 0;
    if ((v5 & 0x800) != 0) {
      goto LABEL_68;
    }
  }
LABEL_51:
  if ((v5 & 0x1000) == 0) {
    goto LABEL_52;
  }
LABEL_72:
  unint64_t v18 = *(void *)(v1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v18 + 23) < 0)
  {
    **(unsigned char **)unint64_t v18 = 0;
    *(void *)(v18 + 8) = 0;
    if ((v5 & 0x2000) != 0) {
      goto LABEL_76;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
    if ((v5 & 0x2000) != 0) {
      goto LABEL_76;
    }
  }
LABEL_53:
  if ((v5 & 0x4000) == 0) {
    goto LABEL_54;
  }
LABEL_80:
  unint64_t v20 = *(void *)(v1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v20 + 23) < 0)
  {
    **(unsigned char **)unint64_t v20 = 0;
    *(void *)(v20 + 8) = 0;
    if ((v5 & 0x8000) == 0) {
      goto LABEL_87;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v20 = 0;
    *(unsigned char *)(v20 + 23) = 0;
    if ((v5 & 0x8000) == 0) {
      goto LABEL_87;
    }
  }
LABEL_84:
  unint64_t v21 = *(void *)(v1 + 168) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v21 + 23) < 0)
  {
    **(unsigned char **)unint64_t v21 = 0;
    *(void *)(v21 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v21 = 0;
    *(unsigned char *)(v21 + 23) = 0;
  }
LABEL_87:
  if ((v5 & 0xF0000) == 0) {
    goto LABEL_108;
  }
  if ((v5 & 0x10000) == 0)
  {
    if ((v5 & 0x20000) == 0) {
      goto LABEL_90;
    }
LABEL_97:
    unint64_t v23 = *(void *)(v1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v23 + 23) < 0)
    {
      **(unsigned char **)unint64_t v23 = 0;
      *(void *)(v23 + 8) = 0;
      if ((v5 & 0x40000) != 0) {
        goto LABEL_101;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v23 = 0;
      *(unsigned char *)(v23 + 23) = 0;
      if ((v5 & 0x40000) != 0) {
        goto LABEL_101;
      }
    }
LABEL_91:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_105;
  }
  unint64_t v22 = *(void *)(v1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v22 + 23) < 0)
  {
    **(unsigned char **)unint64_t v22 = 0;
    *(void *)(v22 + 8) = 0;
    if ((v5 & 0x20000) != 0) {
      goto LABEL_97;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v22 = 0;
    *(unsigned char *)(v22 + 23) = 0;
    if ((v5 & 0x20000) != 0) {
      goto LABEL_97;
    }
  }
LABEL_90:
  if ((v5 & 0x40000) == 0) {
    goto LABEL_91;
  }
LABEL_101:
  unint64_t v24 = *(void *)(v1 + 192) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v24 + 23) < 0)
  {
    **(unsigned char **)unint64_t v24 = 0;
    *(void *)(v24 + 8) = 0;
    if ((v5 & 0x80000) == 0) {
      goto LABEL_108;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v24 = 0;
    *(unsigned char *)(v24 + 23) = 0;
    if ((v5 & 0x80000) == 0) {
      goto LABEL_108;
    }
  }
LABEL_105:
  unint64_t v25 = *(void *)(v1 + 200) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v25 + 23) < 0)
  {
    **(unsigned char **)unint64_t v25 = 0;
    *(void *)(v25 + 8) = 0;
  }
  else
  {
    *(unsigned char *)unint64_t v25 = 0;
    *(unsigned char *)(v25 + 23) = 0;
  }
LABEL_108:
  if ((v5 & 0xF00000) != 0)
  {
    *(void *)(v1 + 208) = 0;
    *(void *)(v1 + 216) = 0;
    *(_DWORD *)(v1 + 224) = 0;
  }
  if ((v5 & 0xF000000) != 0)
  {
    *(void *)(v1 + 236) = 0;
    *(void *)(v1 + 228) = 0;
    *(unsigned char *)(v1 + 244) = 0;
  }
  char v27 = *(unsigned char *)(v1 + 8);
  uint64_t v26 = v1 + 8;
  *(_DWORD *)(v26 + 8) = 0;
  if (v27)
  {
    return sub_188B4AC((uint64_t *)v26);
  }
  return result;
}

char *sub_1226544(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v69 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v69, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v68 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = v69 + 1;
    unsigned int v8 = *v69;
    if (*v69 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v69, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v69 + 2;
      }
    }
    int v69 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_132;
        }
        v5 |= 0x100000u;
        unint64_t v11 = v7 + 1;
        uint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        uint64_t v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          int v69 = v11;
          *(void *)(a1 + 208) = v12;
          goto LABEL_110;
        }
        uint64_t v60 = (char *)sub_188C138((uint64_t)v7, v12);
        int v69 = v60;
        *(void *)(a1 + 208) = v61;
        if (v60) {
          goto LABEL_110;
        }
        goto LABEL_150;
      case 2u:
        if (v8 != 21) {
          goto LABEL_132;
        }
        int v15 = *(_DWORD *)v7;
        unint64_t v14 = v7 + 4;
        v5 |= 0x200000u;
        *(_DWORD *)(a1 + 216) = v15;
        goto LABEL_26;
      case 3u:
        if (v8 != 29) {
          goto LABEL_132;
        }
        int v16 = *(_DWORD *)v7;
        unint64_t v14 = v7 + 4;
        v5 |= 0x400000u;
        *(_DWORD *)(a1 + 220) = v16;
        goto LABEL_26;
      case 4u:
        if (v8 != 34) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 48);
        goto LABEL_108;
      case 5u:
        if (v8 != 45) {
          goto LABEL_132;
        }
        int v20 = *(_DWORD *)v7;
        unint64_t v14 = v7 + 4;
        v5 |= 0x800000u;
        *(_DWORD *)(a1 + 224) = v20;
        goto LABEL_26;
      case 6u:
        if (v8 != 53) {
          goto LABEL_132;
        }
        int v21 = *(_DWORD *)v7;
        unint64_t v14 = v7 + 4;
        v5 |= 0x1000000u;
        *(_DWORD *)(a1 + 228) = v21;
LABEL_26:
        int v69 = v14;
        goto LABEL_110;
      case 8u:
        if (v8 != 66) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 56);
        goto LABEL_108;
      case 9u:
        if (v8 != 74) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 64);
        goto LABEL_108;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 72);
        goto LABEL_108;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 80);
        goto LABEL_108;
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v26 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 88);
        goto LABEL_108;
      case 0xDu:
        if (v8 != 106) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v27 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 96);
        goto LABEL_108;
      case 0xEu:
        if (v8 != 114) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v28 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
        if (v28) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 104);
        goto LABEL_108;
      case 0xFu:
        if (v8 != 122) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v29 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 112);
        goto LABEL_108;
      case 0x10u:
        if (v8 != 130) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v30 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
        if (v30) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 120);
        goto LABEL_108;
      case 0x11u:
        if (v8 != 136) {
          goto LABEL_132;
        }
        v5 |= 0x2000000u;
        int v31 = v7 + 1;
        uint64_t v32 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_67;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          int v62 = (char *)sub_188C138((uint64_t)v7, v32);
          int v69 = v62;
          *(void *)(a1 + 232) = v63;
          if (!v62) {
            goto LABEL_150;
          }
        }
        else
        {
          int v31 = v7 + 2;
LABEL_67:
          int v69 = v31;
          *(void *)(a1 + 232) = v32;
        }
        goto LABEL_110;
      case 0x12u:
        if (v8 != 146) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v34 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 128);
        goto LABEL_108;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v35 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 136);
        goto LABEL_108;
      case 0x14u:
        if (v8 != 162) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v36 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 144);
        goto LABEL_108;
      case 0x15u:
        if (v8 != 170) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v37 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
        if (v37) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 152);
        goto LABEL_108;
      case 0x16u:
        if (v8 != 178) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v38 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 160);
        goto LABEL_108;
      case 0x17u:
        if (v8 != 186) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v39 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
        if (v39) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 168);
        goto LABEL_108;
      case 0x18u:
        if (v8 != 194) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v40 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
        if (v40) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 176);
        goto LABEL_108;
      case 0x19u:
        if (v8 != 202) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        uint64_t v41 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 184);
        goto LABEL_108;
      case 0x1Au:
        if (v8 != 210) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000u;
        uint64_t v42 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
        if (v42) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 192);
        goto LABEL_108;
      case 0x1Bu:
        if (v8 != 218) {
          goto LABEL_132;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000u;
        uint64_t v43 = *(void *)(a1 + 8);
        unint64_t v18 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          unint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 200);
LABEL_108:
        int v44 = (std::string *)sub_1880F84(v19, v18);
        int v45 = (char *)sub_188C244(v44, v69, (uint64_t)a3);
        goto LABEL_109;
      case 0x1Cu:
        if (v8 != 224) {
          goto LABEL_132;
        }
        v5 |= 0x4000000u;
        int v47 = v7 + 1;
        LODWORD(v46) = *v7;
        if ((v46 & 0x80) == 0) {
          goto LABEL_116;
        }
        int v48 = *v47;
        uint64_t v46 = v46 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          int v64 = (char *)sub_188C138((uint64_t)v7, v46);
          int v69 = v64;
          *(_DWORD *)(a1 + 240) = v65;
          if (!v64) {
            goto LABEL_150;
          }
        }
        else
        {
          int v47 = v7 + 2;
LABEL_116:
          int v69 = v47;
          *(_DWORD *)(a1 + 240) = v46;
        }
        goto LABEL_110;
      case 0x1Du:
        if (v8 != 232) {
          goto LABEL_132;
        }
        v5 |= 0x8000000u;
        int v49 = v7 + 1;
        uint64_t v50 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_121;
        }
        int v51 = *v49;
        uint64_t v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v66 = (char *)sub_188C138((uint64_t)v7, v50);
          int v69 = v66;
          *(unsigned char *)(a1 + 244) = v67 != 0;
          if (!v66) {
            goto LABEL_150;
          }
        }
        else
        {
          int v49 = v7 + 2;
LABEL_121:
          int v69 = v49;
          *(unsigned char *)(a1 + 244) = v50 != 0;
        }
        goto LABEL_110;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_132;
        }
        int v52 = v7 - 2;
        while (1)
        {
          uint64_t v53 = (unsigned __int8 *)(v52 + 2);
          int v69 = v52 + 2;
          int v54 = *(_DWORD **)(a1 + 40);
          if (v54 && (uint64_t v55 = *(int *)(a1 + 32), (int)v55 < *v54))
          {
            *(_DWORD *)(a1 + 32) = v55 + 1;
            uint64_t v56 = *(void *)&v54[2 * v55 + 2];
          }
          else
          {
            uint64_t v57 = sub_12284C8(*(void *)(a1 + 24));
            uint64_t v56 = sub_188CDC8(a1 + 24, v57);
            uint64_t v53 = (unsigned __int8 *)v69;
          }
          int v52 = (char *)sub_1226E3C(a3, v56, v53);
          int v69 = v52;
          if (!v52) {
            goto LABEL_150;
          }
          if (*(void *)a3 <= (unint64_t)v52 || *(_WORD *)v52 != 498) {
            goto LABEL_110;
          }
        }
      default:
LABEL_132:
        if (v8) {
          BOOL v58 = (v8 & 7) == 4;
        }
        else {
          BOOL v58 = 1;
        }
        if (!v58)
        {
          if (*v68)
          {
            int v59 = (std::string *)((*v68 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v59 = (std::string *)sub_188DBD8(v68);
            unint64_t v7 = v69;
          }
          int v45 = (char *)sub_1885AC0(v8, v59, v7, a3);
LABEL_109:
          int v69 = v45;
          if (!v45) {
            goto LABEL_150;
          }
LABEL_110:
          if (sub_11947B8((uint64_t)a3, &v69, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_150:
        }
          int v69 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v69;
    }
  }
}

uint64_t sub_1226E3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1225460(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1226ECC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 208);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 216);
    unsigned char *v4 = 21;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
    if ((v6 & 0x400000) == 0)
    {
LABEL_10:
      if ((v6 & 1) == 0) {
        goto LABEL_11;
      }
      goto LABEL_30;
    }
  }
  else if ((v6 & 0x400000) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v11 = *(_DWORD *)(a1 + 220);
  unsigned char *v4 = 29;
  *(_DWORD *)(v4 + 1) = v11;
  v4 += 5;
  if ((v6 & 1) == 0)
  {
LABEL_11:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x800000) == 0)
  {
LABEL_12:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_31:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v12 = *(_DWORD *)(a1 + 224);
  unsigned char *v4 = 45;
  *(_DWORD *)(v4 + 1) = v12;
  v4 += 5;
  if ((v6 & 0x1000000) == 0)
  {
LABEL_13:
    if ((v6 & 2) == 0) {
      goto LABEL_14;
    }
    goto LABEL_37;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v13 = *(_DWORD *)(a1 + 228);
  unsigned char *v4 = 53;
  *(_DWORD *)(v4 + 1) = v13;
  v4 += 5;
  if ((v6 & 2) == 0)
  {
LABEL_14:
    if ((v6 & 4) == 0) {
      goto LABEL_15;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_15:
    if ((v6 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_38:
  uint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_16:
    if ((v6 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_40;
  }
LABEL_39:
  uint64_t v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_17:
    if ((v6 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_18:
    if ((v6 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_42;
  }
LABEL_41:
  uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_19:
    if ((v6 & 0x80) == 0) {
      goto LABEL_20;
    }
    goto LABEL_43;
  }
LABEL_42:
  uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_20:
    if ((v6 & 0x100) == 0) {
      goto LABEL_21;
    }
    goto LABEL_44;
  }
LABEL_43:
  uint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_21:
    if ((v6 & 0x200) == 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200) == 0)
  {
LABEL_22:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000000) == 0) {
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v14 = *(void *)(a1 + 232);
  *(_WORD *)uint64_t v4 = 392;
  v4[2] = v14;
  if (v14 > 0x7F)
  {
    v4[2] = v14 | 0x80;
    unint64_t v15 = v14 >> 7;
    v4[3] = v14 >> 7;
    v4 += 4;
    if (v14 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v16 = v15 >> 14;
        v15 >>= 7;
        *v4++ = v15;
      }
      while (v16);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_52:
  if ((v6 & 0x400) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 18, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x800) == 0)
    {
LABEL_54:
      if ((v6 & 0x1000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_66;
    }
  }
  else if ((v6 & 0x800) == 0)
  {
    goto LABEL_54;
  }
  uint64_t v4 = sub_117A0AC(a3, 19, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x1000) == 0)
  {
LABEL_55:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_67;
  }
LABEL_66:
  uint64_t v4 = sub_117A0AC(a3, 20, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0)
  {
LABEL_56:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_68;
  }
LABEL_67:
  uint64_t v4 = sub_117A0AC(a3, 21, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000) == 0)
  {
LABEL_57:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_69;
  }
LABEL_68:
  uint64_t v4 = sub_117A0AC(a3, 22, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x8000) == 0)
  {
LABEL_58:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t v4 = sub_117A0AC(a3, 23, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10000) == 0)
  {
LABEL_59:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v4 = sub_117A0AC(a3, 24, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20000) == 0)
  {
LABEL_60:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v4 = sub_117A0AC(a3, 25, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40000) == 0)
  {
LABEL_61:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_73;
  }
LABEL_72:
  uint64_t v4 = sub_117A0AC(a3, 26, (const void **)(*(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80000) == 0)
  {
LABEL_62:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_74;
  }
LABEL_73:
  uint64_t v4 = sub_117A0AC(a3, 27, (const void **)(*(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x4000000) == 0) {
    goto LABEL_80;
  }
LABEL_74:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v17 = *(int *)(a1 + 240);
  *(_WORD *)uint64_t v4 = 480;
  v4[2] = v17;
  if (v17 > 0x7F)
  {
    v4[2] = v17 | 0x80;
    unint64_t v18 = v17 >> 7;
    v4[3] = v17 >> 7;
    v4 += 4;
    if (v17 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v19 = v18 >> 14;
        v18 >>= 7;
        *v4++ = v18;
      }
      while (v19);
    }
  }
  else
  {
    v4 += 3;
  }
LABEL_80:
  if ((v6 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 244);
    *(_WORD *)uint64_t v4 = 488;
    v4[2] = v20;
    v4 += 3;
  }
  int v21 = *(_DWORD *)(a1 + 32);
  if (v21)
  {
    for (int i = 0; i != v21; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *(_WORD *)uint64_t v4 = 498;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[2] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, v4 + 2);
      }
      else {
        uint64_t v25 = v4 + 3;
      }
      uint64_t v4 = sub_1225638(v23, (unint64_t)v25, a3);
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    uint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    uint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_1227588(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = 2 * v2;
  uint64_t v4 = *(void *)(a1 + 40);
  if (v4) {
    int v5 = (uint64_t *)(v4 + 8);
  }
  else {
    int v5 = 0;
  }
  if (v2)
  {
    uint64_t v6 = 8 * v2;
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v8 = sub_1225780(v7);
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      v6 -= 8;
    }
    while (v6);
  }
  int v9 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_19;
  }
  if (v9)
  {
    unint64_t v23 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v25 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      uint64_t v25 = v24;
    }
    v3 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 2) == 0)
    {
LABEL_10:
      if ((v9 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_66;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v26 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
  uint64_t v28 = *(void *)(v26 + 8);
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = v27;
  }
  v3 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 4) == 0)
  {
LABEL_11:
    if ((v9 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_69;
  }
LABEL_66:
  unint64_t v29 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
  uint64_t v31 = *(void *)(v29 + 8);
  if ((v30 & 0x80u) == 0) {
    uint64_t v31 = v30;
  }
  v3 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 8) == 0)
  {
LABEL_12:
    if ((v9 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_72;
  }
LABEL_69:
  unint64_t v32 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v33 = *(unsigned __int8 *)(v32 + 23);
  uint64_t v34 = *(void *)(v32 + 8);
  if ((v33 & 0x80u) == 0) {
    uint64_t v34 = v33;
  }
  v3 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x10) == 0)
  {
LABEL_13:
    if ((v9 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_75:
    unint64_t v38 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
    uint64_t v40 = *(void *)(v38 + 8);
    if ((v39 & 0x80u) == 0) {
      uint64_t v40 = v39;
    }
    v3 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x40) == 0)
    {
LABEL_15:
      if ((v9 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_16;
    }
    goto LABEL_78;
  }
LABEL_72:
  unint64_t v35 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
  uint64_t v37 = *(void *)(v35 + 8);
  if ((v36 & 0x80u) == 0) {
    uint64_t v37 = v36;
  }
  v3 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x20) != 0) {
    goto LABEL_75;
  }
LABEL_14:
  if ((v9 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_78:
  unint64_t v41 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
  uint64_t v43 = *(void *)(v41 + 8);
  if ((v42 & 0x80u) == 0) {
    uint64_t v43 = v42;
  }
  v3 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x80) != 0)
  {
LABEL_16:
    unint64_t v10 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_31;
  }
  if ((v9 & 0x100) != 0)
  {
    unint64_t v44 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
    uint64_t v46 = *(void *)(v44 + 8);
    if ((v45 & 0x80u) == 0) {
      uint64_t v46 = v45;
    }
    v3 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x200) == 0)
    {
LABEL_22:
      if ((v9 & 0x400) == 0) {
        goto LABEL_23;
      }
      goto LABEL_88;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  unint64_t v47 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
  uint64_t v49 = *(void *)(v47 + 8);
  if ((v48 & 0x80u) == 0) {
    uint64_t v49 = v48;
  }
  v3 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x400) == 0)
  {
LABEL_23:
    if ((v9 & 0x800) == 0) {
      goto LABEL_24;
    }
    goto LABEL_91;
  }
LABEL_88:
  unint64_t v50 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v51 = *(unsigned __int8 *)(v50 + 23);
  uint64_t v52 = *(void *)(v50 + 8);
  if ((v51 & 0x80u) == 0) {
    uint64_t v52 = v51;
  }
  v3 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x800) == 0)
  {
LABEL_24:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_94;
  }
LABEL_91:
  unint64_t v53 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v54 = *(unsigned __int8 *)(v53 + 23);
  uint64_t v55 = *(void *)(v53 + 8);
  if ((v54 & 0x80u) == 0) {
    uint64_t v55 = v54;
  }
  v3 += v55 + ((9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x1000) == 0)
  {
LABEL_25:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_97;
  }
LABEL_94:
  unint64_t v56 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v57 = *(unsigned __int8 *)(v56 + 23);
  uint64_t v58 = *(void *)(v56 + 8);
  if ((v57 & 0x80u) == 0) {
    uint64_t v58 = v57;
  }
  v3 += v58 + ((9 * (__clz(v58 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x2000) == 0)
  {
LABEL_26:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_100;
  }
LABEL_97:
  unint64_t v59 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v60 = *(unsigned __int8 *)(v59 + 23);
  uint64_t v61 = *(void *)(v59 + 8);
  if ((v60 & 0x80u) == 0) {
    uint64_t v61 = v60;
  }
  v3 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x4000) == 0)
  {
LABEL_27:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_28;
  }
LABEL_100:
  unint64_t v62 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v63 = *(unsigned __int8 *)(v62 + 23);
  uint64_t v64 = *(void *)(v62 + 8);
  if ((v63 & 0x80u) == 0) {
    uint64_t v64 = v63;
  }
  v3 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x8000) != 0)
  {
LABEL_28:
    unint64_t v13 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_31:
  if ((v9 & 0xFF0000) == 0) {
    goto LABEL_45;
  }
  if ((v9 & 0x10000) != 0)
  {
    unint64_t v65 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v66 = *(unsigned __int8 *)(v65 + 23);
    uint64_t v67 = *(void *)(v65 + 8);
    if ((v66 & 0x80u) == 0) {
      uint64_t v67 = v66;
    }
    v3 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v9 & 0x20000) == 0)
    {
LABEL_34:
      if ((v9 & 0x40000) == 0) {
        goto LABEL_35;
      }
      goto LABEL_110;
    }
  }
  else if ((v9 & 0x20000) == 0)
  {
    goto LABEL_34;
  }
  unint64_t v68 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v69 = *(unsigned __int8 *)(v68 + 23);
  uint64_t v70 = *(void *)(v68 + 8);
  if ((v69 & 0x80u) == 0) {
    uint64_t v70 = v69;
  }
  v3 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x40000) == 0)
  {
LABEL_35:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_36;
    }
LABEL_113:
    unint64_t v74 = *(void *)(a1 + 200) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v75 = *(unsigned __int8 *)(v74 + 23);
    uint64_t v76 = *(void *)(v74 + 8);
    if ((v75 & 0x80u) == 0) {
      uint64_t v76 = v75;
    }
    v3 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v9 & 0x100000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_37;
  }
LABEL_110:
  unint64_t v71 = *(void *)(a1 + 192) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v72 = *(unsigned __int8 *)(v71 + 23);
  uint64_t v73 = *(void *)(v71 + 8);
  if ((v72 & 0x80u) == 0) {
    uint64_t v73 = v72;
  }
  v3 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v9 & 0x80000) != 0) {
    goto LABEL_113;
  }
LABEL_36:
  if ((v9 & 0x100000) != 0) {
LABEL_37:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 208) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_38:
  uint64_t v16 = v3 + 5;
  if ((v9 & 0x200000) == 0) {
    uint64_t v16 = v3;
  }
  if ((v9 & 0x400000) != 0) {
    v16 += 5;
  }
  if ((v9 & 0x800000) != 0) {
    uint64_t v3 = v16 + 5;
  }
  else {
    uint64_t v3 = v16;
  }
LABEL_45:
  if ((v9 & 0xF000000) != 0)
  {
    uint64_t v17 = v3 + 5;
    if ((v9 & 0x1000000) == 0) {
      uint64_t v17 = v3;
    }
    if ((v9 & 0x2000000) != 0) {
      v17 += ((9 * (__clz(*(void *)(a1 + 232) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v9 & 0x4000000) != 0)
    {
      int v18 = *(_DWORD *)(a1 + 240);
      uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v18 >= 0) {
        uint64_t v20 = v19;
      }
      else {
        uint64_t v20 = 12;
      }
      v17 += v20;
    }
    if ((v9 & 0x8000000) != 0) {
      uint64_t v3 = v17 + 3;
    }
    else {
      uint64_t v3 = v17;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v77 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v77 + 31) < 0) {
      uint64_t v78 = *(void *)(v77 + 16);
    }
    else {
      uint64_t v78 = *(unsigned __int8 *)(v77 + 31);
    }
    v3 += v78;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1227CB4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    int v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_122E5BC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_38;
  }
  if (v9)
  {
    unint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    if ((v9 & 2) == 0)
    {
LABEL_7:
      if ((v9 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_20;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_7;
  }
  unint64_t v13 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
  uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
  if (v14) {
    uint64_t v15 = (uint64_t *)*v15;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v13, v15);
  if ((v9 & 4) == 0)
  {
LABEL_8:
    if ((v9 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v16 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
  int v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    int v18 = (uint64_t *)*v18;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v16, v18);
  if ((v9 & 8) == 0)
  {
LABEL_9:
    if ((v9 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v19 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
  std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
  uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
  if (v20) {
    uint64_t v21 = (uint64_t *)*v21;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[3], v19, v21);
  if ((v9 & 0x10) == 0)
  {
LABEL_10:
    if ((v9 & 0x20) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    uint64_t v25 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v26 = v3->__r_.__value_.__l.__size_;
    uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__r.__words[2], v25, v27);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0) {
        goto LABEL_38;
      }
      goto LABEL_35;
    }
    goto LABEL_32;
  }
LABEL_26:
  uint64_t v22 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
  std::string::size_type v23 = v3->__r_.__value_.__l.__size_;
  uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
  if (v23) {
    uint64_t v24 = (uint64_t *)*v24;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v22, v24);
  if ((v9 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_11:
  if ((v9 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_32:
  uint64_t v28 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40u;
  std::string::size_type v29 = v3->__r_.__value_.__l.__size_;
  uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    uint64_t v30 = (uint64_t *)*v30;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[4], v28, v30);
  if ((v9 & 0x80) != 0)
  {
LABEL_35:
    uint64_t v31 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80u;
    std::string::size_type v32 = v3->__r_.__value_.__l.__size_;
    uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      uint64_t v33 = (uint64_t *)*v33;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__l.__size_, v31, v33);
  }
LABEL_38:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_72;
  }
  if ((v9 & 0x100) != 0)
  {
    uint64_t v34 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    std::string::size_type v35 = v3->__r_.__value_.__l.__size_;
    uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      uint64_t v36 = (uint64_t *)*v36;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[4].__r_.__value_.__r.__words[2], v34, v36);
    if ((v9 & 0x200) == 0)
    {
LABEL_41:
      if ((v9 & 0x400) == 0) {
        goto LABEL_42;
      }
      goto LABEL_54;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_41;
  }
  uint64_t v37 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x200u;
  std::string::size_type v38 = v3->__r_.__value_.__l.__size_;
  uint64_t v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
  if (v38) {
    uint64_t v39 = (uint64_t *)*v39;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[5], v37, v39);
  if ((v9 & 0x400) == 0)
  {
LABEL_42:
    if ((v9 & 0x800) == 0) {
      goto LABEL_43;
    }
    goto LABEL_57;
  }
LABEL_54:
  uint64_t v40 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x400u;
  std::string::size_type v41 = v3->__r_.__value_.__l.__size_;
  uint64_t v42 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
  if (v41) {
    uint64_t v42 = (uint64_t *)*v42;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__l.__size_, v40, v42);
  if ((v9 & 0x800) == 0)
  {
LABEL_43:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_60;
  }
LABEL_57:
  uint64_t v43 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x800u;
  std::string::size_type v44 = v3->__r_.__value_.__l.__size_;
  uint64_t v45 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
  if (v44) {
    uint64_t v45 = (uint64_t *)*v45;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[5].__r_.__value_.__r.__words[2], v43, v45);
  if ((v9 & 0x1000) == 0)
  {
LABEL_44:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_63;
  }
LABEL_60:
  uint64_t v46 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x1000u;
  std::string::size_type v47 = v3->__r_.__value_.__l.__size_;
  uint64_t v48 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
  if (v47) {
    uint64_t v48 = (uint64_t *)*v48;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[6], v46, v48);
  if ((v9 & 0x2000) == 0)
  {
LABEL_45:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_66;
  }
LABEL_63:
  uint64_t v49 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x2000u;
  std::string::size_type v50 = v3->__r_.__value_.__l.__size_;
  uint64_t v51 = (uint64_t *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
  if (v50) {
    uint64_t v51 = (uint64_t *)*v51;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[6].__r_.__value_.__l.__size_, v49, v51);
  if ((v9 & 0x4000) == 0)
  {
LABEL_46:
    if ((v9 & 0x8000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_69;
  }
LABEL_66:
  uint64_t v52 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x4000u;
  std::string::size_type v53 = v3->__r_.__value_.__l.__size_;
  uint64_t v54 = (uint64_t *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
  if (v53) {
    uint64_t v54 = (uint64_t *)*v54;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[6].__r_.__value_.__r.__words[2], v52, v54);
  if ((v9 & 0x8000) != 0)
  {
LABEL_69:
    uint64_t v55 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x8000u;
    std::string::size_type v56 = v3->__r_.__value_.__l.__size_;
    uint64_t v57 = (uint64_t *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
    if (v56) {
      uint64_t v57 = (uint64_t *)*v57;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7], v55, v57);
  }
LABEL_72:
  if ((v9 & 0xFF0000) == 0) {
    goto LABEL_83;
  }
  if ((v9 & 0x10000) != 0)
  {
    unint64_t v59 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10000u;
    std::string::size_type v60 = v3->__r_.__value_.__l.__size_;
    uint64_t v61 = (uint64_t *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      uint64_t v61 = (uint64_t *)*v61;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__l.__size_, v59, v61);
    if ((v9 & 0x20000) == 0)
    {
LABEL_75:
      if ((v9 & 0x40000) == 0) {
        goto LABEL_76;
      }
      goto LABEL_100;
    }
  }
  else if ((v9 & 0x20000) == 0)
  {
    goto LABEL_75;
  }
  unint64_t v62 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20000u;
  std::string::size_type v63 = v3->__r_.__value_.__l.__size_;
  uint64_t v64 = (uint64_t *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
  if (v63) {
    uint64_t v64 = (uint64_t *)*v64;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[7].__r_.__value_.__r.__words[2], v62, v64);
  if ((v9 & 0x40000) == 0)
  {
LABEL_76:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_77;
    }
    goto LABEL_103;
  }
LABEL_100:
  unint64_t v65 = (long long *)(*(void *)(a2 + 192) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x40000u;
  std::string::size_type v66 = v3->__r_.__value_.__l.__size_;
  uint64_t v67 = (uint64_t *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
  if (v66) {
    uint64_t v67 = (uint64_t *)*v67;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[8], v65, v67);
  if ((v9 & 0x80000) == 0)
  {
LABEL_77:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_106;
  }
LABEL_103:
  unint64_t v68 = (long long *)(*(void *)(a2 + 200) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x80000u;
  std::string::size_type v69 = v3->__r_.__value_.__l.__size_;
  uint64_t v70 = (uint64_t *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
  if (v69) {
    uint64_t v70 = (uint64_t *)*v70;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[8].__r_.__value_.__l.__size_, v68, v70);
  if ((v9 & 0x100000) == 0)
  {
LABEL_78:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_107;
  }
LABEL_106:
  v3[8].__r_.__value_.__r.__words[2] = *(void *)(a2 + 208);
  if ((v9 & 0x200000) == 0)
  {
LABEL_79:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_80;
    }
LABEL_108:
    HIDWORD(v3[9].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 220);
    if ((v9 & 0x800000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_81;
  }
LABEL_107:
  LODWORD(v3[9].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 216);
  if ((v9 & 0x400000) != 0) {
    goto LABEL_108;
  }
LABEL_80:
  if ((v9 & 0x800000) != 0) {
LABEL_81:
  }
    LODWORD(v3[9].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 224);
LABEL_82:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_83:
  if ((v9 & 0xF000000) == 0) {
    goto LABEL_90;
  }
  if ((v9 & 0x1000000) != 0)
  {
    HIDWORD(v3[9].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 228);
    if ((v9 & 0x2000000) == 0)
    {
LABEL_86:
      if ((v9 & 0x4000000) == 0) {
        goto LABEL_87;
      }
LABEL_112:
      LODWORD(v3[10].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 240);
      if ((v9 & 0x8000000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_88;
    }
  }
  else if ((v9 & 0x2000000) == 0)
  {
    goto LABEL_86;
  }
  v3[9].__r_.__value_.__r.__words[2] = *(void *)(a2 + 232);
  if ((v9 & 0x4000000) != 0) {
    goto LABEL_112;
  }
LABEL_87:
  if ((v9 & 0x8000000) != 0) {
LABEL_88:
  }
    v3[10].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 244);
LABEL_89:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
LABEL_90:
  uint64_t v58 = *(void *)(a2 + 8);
  if (v58)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v58 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12282A0(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_1226080((uint64_t)result);
    return sub_1227CB4(v4, a2);
  }
  return result;
}

uint64_t sub_12282EC()
{
  return 1;
}

__n128 sub_12282F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a2 + 56) = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a2 + 72) = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 80);
  *(void *)(a2 + 80) = *(void *)(a1 + 80);
  *(void *)(a1 + 80) = v10;
  uint64_t v11 = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = v11;
  uint64_t v12 = *(void *)(a2 + 96);
  *(void *)(a2 + 96) = *(void *)(a1 + 96);
  *(void *)(a1 + 96) = v12;
  uint64_t v13 = *(void *)(a2 + 104);
  *(void *)(a2 + 104) = *(void *)(a1 + 104);
  *(void *)(a1 + 104) = v13;
  uint64_t v14 = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = v14;
  uint64_t v15 = *(void *)(a2 + 120);
  *(void *)(a2 + 120) = *(void *)(a1 + 120);
  *(void *)(a1 + 120) = v15;
  uint64_t v16 = *(void *)(a2 + 128);
  *(void *)(a2 + 128) = *(void *)(a1 + 128);
  *(void *)(a1 + 128) = v16;
  uint64_t v17 = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = v17;
  uint64_t v18 = *(void *)(a2 + 144);
  *(void *)(a2 + 144) = *(void *)(a1 + 144);
  *(void *)(a1 + 144) = v18;
  uint64_t v19 = *(void *)(a2 + 152);
  *(void *)(a2 + 152) = *(void *)(a1 + 152);
  *(void *)(a1 + 152) = v19;
  uint64_t v20 = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = v20;
  uint64_t v21 = *(void *)(a2 + 168);
  *(void *)(a2 + 168) = *(void *)(a1 + 168);
  *(void *)(a1 + 168) = v21;
  uint64_t v22 = *(void *)(a2 + 176);
  *(void *)(a2 + 176) = *(void *)(a1 + 176);
  *(void *)(a1 + 176) = v22;
  uint64_t v23 = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = v23;
  uint64_t v24 = *(void *)(a2 + 192);
  *(void *)(a2 + 192) = *(void *)(a1 + 192);
  *(void *)(a1 + 192) = v24;
  uint64_t v25 = *(void *)(a2 + 200);
  *(void *)(a2 + 200) = *(void *)(a1 + 200);
  *(void *)(a1 + 200) = v25;
  uint64_t v26 = *(void *)(a1 + 208);
  uint64_t v27 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a2 + 208) = v26;
  *(void *)(a2 + 216) = v27;
  uint64_t v28 = *(void *)(a1 + 224);
  uint64_t v29 = *(void *)(a1 + 232);
  __n128 result = *(__n128 *)(a2 + 224);
  *(__n128 *)(a1 + 224) = result;
  *(void *)(a2 + 224) = v28;
  *(void *)(a2 + 232) = v29;
  LODWORD(v28) = *(_DWORD *)(a1 + 240);
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  *(_DWORD *)(a2 + 240) = v28;
  LOBYTE(v28) = *(unsigned char *)(a1 + 244);
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  *(unsigned char *)(a2 + 244) = v28;
  return result;
}

void *sub_12284B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "offline.places.PlacesOfflineIndexProto");
}

uint64_t sub_12284C8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249E2B0;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

double sub_1228550(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1225864(v2, a1, 0);
}

void sub_12285B0()
{
}

void *sub_122860C(uint64_t a1, uint64_t a2)
{
  return sub_11E7B10(a2);
}

uint64_t sub_1228614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122861C()
{
}

double sub_1228684(uint64_t a1, uint64_t a2)
{
  return sub_11E7B98(a2);
}

uint64_t sub_122868C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228694()
{
}

void *sub_12286F0(uint64_t a1, uint64_t a2)
{
  return sub_11E7C5C(a2);
}

uint64_t sub_12286F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228700()
{
}

void sub_1228748()
{
}

uint64_t sub_122876C(uint64_t a1, uint64_t a2)
{
  return sub_11E7CE4(a2);
}

uint64_t sub_1228774(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_122877C()
{
}

uint64_t sub_12287D8(uint64_t a1, uint64_t a2)
{
  return sub_11E7D40(a2);
}

uint64_t sub_12287E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12287E8()
{
}

void *sub_1228834(uint64_t a1, uint64_t a2)
{
  return sub_11E7DC8(a2);
}

uint64_t sub_122883C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228844()
{
}

uint64_t sub_1228898(uint64_t a1, uint64_t a2)
{
  return sub_11E7E40(a2);
}

uint64_t sub_12288A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12288A8()
{
}

uint64_t sub_12288F8(uint64_t a1, uint64_t a2)
{
  return sub_11E7EDC(a2);
}

uint64_t sub_1228900(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1228908()
{
}

void sub_1228950()
{
}

uint64_t sub_1228974(uint64_t a1, uint64_t a2)
{
  return sub_11E7F70(a2);
}

uint64_t sub_122897C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1228984()
{
}

uint64_t sub_12289E0(uint64_t a1, uint64_t a2)
{
  return sub_11E7FCC(a2);
}

uint64_t sub_12289E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12289F0()
{
}

void *sub_1228A44(uint64_t a1, uint64_t a2)
{
  return sub_11E8054(a2);
}

uint64_t sub_1228A4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228A54()
{
}

uint64_t sub_1228AB4(uint64_t a1, uint64_t a2)
{
  return sub_11EA754(a2);
}

uint64_t sub_1228ABC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228AC4()
{
}

void *sub_1228B20(uint64_t a1, uint64_t a2)
{
  return sub_11EA7FC(a2);
}

uint64_t sub_1228B28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228B30()
{
}

uint64_t sub_1228B88(uint64_t a1, uint64_t a2)
{
  return sub_11EA8A0(a2);
}

uint64_t sub_1228B90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228B98()
{
}

uint64_t sub_1228BF8(uint64_t a1, uint64_t a2)
{
  return sub_11EA940(a2);
}

uint64_t sub_1228C00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228C08()
{
}

void *sub_1228C60(uint64_t a1, uint64_t a2)
{
  return sub_11EBAE4(a2);
}

uint64_t sub_1228C68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228C70()
{
}

uint64_t sub_1228CC4(uint64_t a1, uint64_t a2)
{
  return sub_11EBB68(a2);
}

uint64_t sub_1228CCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228CD4()
{
}

void *sub_1228D2C(uint64_t a1, uint64_t a2)
{
  return sub_11FE16C(a2);
}

uint64_t sub_1228D34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228D3C()
{
}

uint64_t sub_1228D8C(uint64_t a1, uint64_t a2)
{
  return sub_11FE1F0(a2);
}

uint64_t sub_1228D94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228D9C()
{
}

double sub_1228DEC(uint64_t a1, uint64_t a2)
{
  return sub_11FE26C(a2);
}

uint64_t sub_1228DF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228DFC()
{
}

uint64_t sub_1228E58(uint64_t a1, uint64_t a2)
{
  return sub_11FE2E8(a2);
}

uint64_t sub_1228E60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228E68()
{
}

void *sub_1228EC0(uint64_t a1, uint64_t a2)
{
  return sub_11FE370(a2);
}

uint64_t sub_1228EC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228ED0()
{
}

void *sub_1228F1C(uint64_t a1, uint64_t a2)
{
  return sub_11FE3F4(a2);
}

uint64_t sub_1228F24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228F2C()
{
}

uint64_t sub_1228F70(uint64_t a1, uint64_t a2)
{
  return sub_11FE46C(a2);
}

uint64_t sub_1228F78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228F80()
{
}

uint64_t sub_1228FD4(uint64_t a1, uint64_t a2)
{
  return sub_11FE4CC(a2);
}

uint64_t sub_1228FDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1228FE4()
{
}

uint64_t sub_122903C(uint64_t a1, uint64_t a2)
{
  return sub_11FE568(a2);
}

uint64_t sub_1229044(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_122904C()
{
}

double sub_12290C4(uint64_t a1, uint64_t a2)
{
  return sub_11FE60C(a2);
}

uint64_t sub_12290CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12290D4()
{
}

uint64_t sub_1229138(uint64_t a1, uint64_t a2)
{
  return sub_11FE6F0(a2);
}

uint64_t sub_1229140(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229148()
{
}

uint64_t sub_12291AC(uint64_t a1, uint64_t a2)
{
  return sub_11FE780(a2);
}

uint64_t sub_12291B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12291BC()
{
}

void *sub_1229218(uint64_t a1, uint64_t a2)
{
  return sub_11FE810(a2);
}

uint64_t sub_1229220(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229228()
{
}

uint64_t sub_122927C(uint64_t a1, uint64_t a2)
{
  return sub_11FE898(a2);
}

uint64_t sub_1229284(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_122928C()
{
}

void *sub_12292E4(uint64_t a1, uint64_t a2)
{
  return sub_11FE938(a2);
}

uint64_t sub_12292EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12292F4()
{
}

double sub_1229348(uint64_t a1, uint64_t a2)
{
  return sub_11FE9BC(a2);
}

uint64_t sub_1229350(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229358()
{
}

uint64_t sub_12293C0(uint64_t a1, uint64_t a2)
{
  return sub_11FEA3C(a2);
}

uint64_t sub_12293C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12293D0()
{
}

uint64_t sub_1229424(uint64_t a1, uint64_t a2)
{
  return sub_11FEAEC(a2);
}

uint64_t sub_122942C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1229434()
{
}

void *sub_12294A0(uint64_t a1, uint64_t a2)
{
  return sub_11FEB8C(a2);
}

uint64_t sub_12294A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12294B0()
{
}

void *sub_1229510(uint64_t a1, uint64_t a2)
{
  return sub_11FEC4C(a2);
}

uint64_t sub_1229518(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229520()
{
}

void *sub_1229584(uint64_t a1, uint64_t a2)
{
  return sub_11FECFC(a2);
}

uint64_t sub_122958C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229594()
{
}

void *sub_12295EC(uint64_t a1, uint64_t a2)
{
  return sub_11FEDB0(a2);
}

uint64_t sub_12295F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12295FC()
{
}

void *sub_122965C(uint64_t a1, uint64_t a2)
{
  return sub_11FEE34(a2);
}

uint64_t sub_1229664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122966C()
{
}

double sub_12296C4(uint64_t a1, uint64_t a2)
{
  return sub_11FEEDC(a2);
}

uint64_t sub_12296CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12296D4()
{
}

void *sub_122972C(uint64_t a1, uint64_t a2)
{
  return sub_11FEF60(a2);
}

uint64_t sub_1229734(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122973C()
{
}

void *sub_12297A0(uint64_t a1, uint64_t a2)
{
  return sub_11FEFE4(a2);
}

uint64_t sub_12297A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12297B0()
{
}

void *sub_1229800(uint64_t a1, uint64_t a2)
{
  return sub_120800C(a2);
}

uint64_t sub_1229808(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229810()
{
}

uint64_t sub_1229864(uint64_t a1, uint64_t a2)
{
  return sub_1208088(a2);
}

uint64_t sub_122986C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229874()
{
}

void *sub_12298D0(uint64_t a1, uint64_t a2)
{
  return sub_120812C(a2);
}

uint64_t sub_12298D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12298E0()
{
}

double sub_1229934(uint64_t a1, uint64_t a2)
{
  return sub_12081D0(a2);
}

uint64_t sub_122993C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229944()
{
}

void *sub_1229990(uint64_t a1, uint64_t a2)
{
  return sub_1208250(a2);
}

uint64_t sub_1229998(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_12299A0()
{
}

uint64_t sub_12299F8(uint64_t a1, uint64_t a2)
{
  return sub_12082C8(a2);
}

uint64_t sub_1229A00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_1229A08()
{
}

void *sub_1229A64(uint64_t a1, uint64_t a2)
{
  return sub_1208378(a2);
}

uint64_t sub_1229A6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229A74()
{
}

uint64_t sub_1229AD8(uint64_t a1, uint64_t a2)
{
  return sub_1208400(a2);
}

uint64_t sub_1229AE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229AE8()
{
}

void *sub_1229B40(uint64_t a1, uint64_t a2)
{
  return sub_12084AC(a2);
}

uint64_t sub_1229B48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229B50()
{
}

void *sub_1229BA4(uint64_t a1, uint64_t a2)
{
  return sub_1208530(a2);
}

uint64_t sub_1229BAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229BB4()
{
}

void *sub_1229C10(uint64_t a1, uint64_t a2)
{
  return sub_12085D4(a2);
}

uint64_t sub_1229C18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229C20()
{
}

double sub_1229C98(uint64_t a1, uint64_t a2)
{
  return sub_1208678(a2);
}

uint64_t sub_1229CA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229CA8()
{
}

void *sub_1229CFC(uint64_t a1, uint64_t a2)
{
  return sub_1208FE0(a2);
}

uint64_t sub_1229D04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229D0C()
{
}

double sub_1229D74(uint64_t a1, uint64_t a2)
{
  return sub_1211DF0(a2);
}

uint64_t sub_1229D7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229D84()
{
}

void *sub_1229DE0(uint64_t a1, uint64_t a2)
{
  return sub_1211E84(a2);
}

uint64_t sub_1229DE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229DF0()
{
}

void *sub_1229E40(uint64_t a1, uint64_t a2)
{
  return sub_1211F0C(a2);
}

uint64_t sub_1229E48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229E50()
{
}

uint64_t sub_1229EAC(uint64_t a1, uint64_t a2)
{
  return sub_1211F88(a2);
}

uint64_t sub_1229EB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229EBC()
{
}

void *sub_1229F18(uint64_t a1, uint64_t a2)
{
  return sub_1212010(a2);
}

uint64_t sub_1229F20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229F28()
{
}

void *sub_1229F74(uint64_t a1, uint64_t a2)
{
  return sub_12120B4(a2);
}

uint64_t sub_1229F7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229F84()
{
}

void *sub_1229FD0(uint64_t a1, uint64_t a2)
{
  return sub_121212C(a2);
}

uint64_t sub_1229FD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1229FE0()
{
}

void *sub_122A03C(uint64_t a1, uint64_t a2)
{
  return sub_12121A4(a2);
}

uint64_t sub_122A044(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A04C()
{
}

double sub_122A0B0(uint64_t a1, uint64_t a2)
{
  return sub_1212248(a2);
}

uint64_t sub_122A0B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A0C0()
{
}

uint64_t sub_122A114(uint64_t a1, uint64_t a2)
{
  return sub_12122D8(a2);
}

uint64_t sub_122A11C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_122A124()
{
}

uint64_t sub_122A178(uint64_t a1, uint64_t a2)
{
  return sub_1212378(a2);
}

uint64_t sub_122A180(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_122A188()
{
}

double sub_122A1EC(uint64_t a1, uint64_t a2)
{
  return sub_1212418(a2);
}

uint64_t sub_122A1F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A1FC()
{
}

double sub_122A24C(uint64_t a1, uint64_t a2)
{
  return sub_12124C8(a2);
}

uint64_t sub_122A254(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A25C()
{
}

double sub_122A2AC(uint64_t a1, uint64_t a2)
{
  return sub_1212544(a2);
}

uint64_t sub_122A2B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A2BC()
{
}

void *sub_122A31C(uint64_t a1, uint64_t a2)
{
  return sub_12247EC(a2);
}

uint64_t sub_122A324(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A32C()
{
}

uint64_t sub_122A38C(uint64_t a1, uint64_t a2)
{
  return sub_1224878(a2);
}

uint64_t sub_122A394(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A39C()
{
}

uint64_t sub_122A3F4(uint64_t a1, uint64_t a2)
{
  return sub_1224920(a2);
}

uint64_t sub_122A3FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_122A404()
{
}

void *sub_122A464(uint64_t a1, uint64_t a2)
{
  return sub_12249C4(a2);
}

uint64_t sub_122A46C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A474()
{
}

uint64_t sub_122A4CC(uint64_t a1, uint64_t a2)
{
  return sub_1224A6C(a2);
}

uint64_t sub_122A4D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_122A4DC()
{
}

uint64_t sub_122A530(uint64_t a1, uint64_t a2)
{
  return sub_1224B1C(a2);
}

uint64_t sub_122A538(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A540()
{
}

uint64_t sub_122A598(uint64_t a1, uint64_t a2)
{
  return sub_1224BB8(a2);
}

uint64_t sub_122A5A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_122A5A8()
{
}

void *sub_122A604(uint64_t a1, uint64_t a2)
{
  return sub_1224C5C(a2);
}

uint64_t sub_122A60C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A614()
{
}

void *sub_122A674(uint64_t a1, uint64_t a2)
{
  return sub_1224D00(a2);
}

uint64_t sub_122A67C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A684()
{
}

uint64_t sub_122A6E0(uint64_t a1, uint64_t a2)
{
  return sub_1224DC0(a2);
}

uint64_t sub_122A6E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A6F0()
{
}

void *sub_122A74C(uint64_t a1, uint64_t a2)
{
  return sub_1224E48(a2);
}

uint64_t sub_122A754(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A75C()
{
}

void *sub_122A7B4(uint64_t a1, uint64_t a2)
{
  return sub_1224EEC(a2);
}

uint64_t sub_122A7BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A7C4()
{
}

uint64_t sub_122A818(uint64_t a1, uint64_t a2)
{
  return sub_1224F70(a2);
}

uint64_t sub_122A820(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A828()
{
}

void *sub_122A884(uint64_t a1, uint64_t a2)
{
  return sub_122500C(a2);
}

uint64_t sub_122A88C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A894()
{
}

void *sub_122A8F0(uint64_t a1, uint64_t a2)
{
  return sub_12250B0(a2);
}

uint64_t sub_122A8F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A900()
{
}

double sub_122A944(uint64_t a1, uint64_t a2)
{
  return sub_1225154(a2);
}

uint64_t sub_122A94C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_122A954()
{
}

uint64_t sub_122A9A8(uint64_t a1, uint64_t a2)
{
  return sub_12251B4(a2);
}

uint64_t sub_122A9B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122A9B8()
{
}

uint64_t sub_122AA14(uint64_t a1, uint64_t a2)
{
  return sub_12284C8(a2);
}

uint64_t sub_122AA1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_122AA24()
{
}

double sub_122AA68(uint64_t a1, uint64_t a2)
{
  return sub_1228550(a2);
}

uint64_t sub_122AA70(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

__n128 sub_122AA78(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = v13;
  uint64_t v14 = a1[12];
  uint64_t v15 = a1[13];
  __n128 result = *(__n128 *)(a2 + 96);
  *((__n128 *)a1 + 6) = result;
  *(void *)(a2 + 96) = v14;
  *(void *)(a2 + 104) = v15;
  LODWORD(v14) = *((_DWORD *)a1 + 28);
  *((_DWORD *)a1 + 28) = *(_DWORD *)(a2 + 112);
  *(_DWORD *)(a2 + 112) = v14;
  return result;
}

uint64_t sub_122AAFC(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      __n128 result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 32) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        __n128 result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

uint64_t sub_122AB64(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void *)(result + 16) + 8;
    do
    {
      __n128 result = *(void *)v3 + 8;
      char v4 = *(unsigned char *)result;
      *(_DWORD *)(*(void *)v3 + 16) = 0;
      if (v4) {
        __n128 result = sub_188B4AC((uint64_t *)result);
      }
      v3 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

uint64_t sub_122ABC4(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (void *)(*(void *)(result + 16) + 8);
    do
    {
      __n128 result = *v3 + 8;
      char v4 = *(unsigned char *)result;
      *(void *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        __n128 result = sub_188B4AC((uint64_t *)result);
      }
      ++v3;
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 8) = 0;
  }
  return result;
}

void sub_122AC28(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1750454();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122ACA8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E2AD8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122AD28(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11DEAE8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122ADA8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E6F44(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122AE28(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11DF330(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122AEA8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E34DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122AF28(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E38C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122AFA8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E3F48(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122B028(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E0758(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122B0A8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E68F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_122B128(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_178BD90(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B1A4(uint64_t a1, std::string *a2)
{
  return sub_11EC100(a2, a1);
}

uint64_t *sub_122B1B4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11E7D40(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122B230(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B230(uint64_t a1, std::string *a2)
{
  return sub_11E33AC(a2, a1);
}

std::string *sub_122B240(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11E7B10(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B2BC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B2BC(uint64_t a1, std::string *a2)
{
  return sub_11DF1EC(a2, a1);
}

std::string *sub_122B2CC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11E8054(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B348(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B348(uint64_t a1, std::string *a2)
{
  return sub_11E7994(a2, a1);
}

void sub_122B358(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_11E7B98(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_122B3D4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_122B3D4(uint64_t a1, uint64_t a2)
{
}

std::string *sub_122B3E4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11E7DC8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B460(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B460(uint64_t a1, std::string *a2)
{
  return sub_11A442C(a2, a1);
}

uint64_t *sub_122B470(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11E7E40(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122B4EC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B4EC(uint64_t a1, std::string *a2)
{
  return sub_11E3E70(a2, a1);
}

uint64_t *sub_122B4FC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11E7EDC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122B578(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B578(uint64_t a1, std::string *a2)
{
  return sub_11E43C0(a2, a1);
}

std::string *sub_122B588(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11E7C5C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B604(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B604(uint64_t a1, std::string *a2)
{
  return sub_11D2930(a2, a1);
}

uint64_t *sub_122B614(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11E7FCC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_1194DD8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_122B690()
{
}

void sub_122B6D8()
{
}

void sub_122B6FC()
{
}

void sub_122B744()
{
}

void sub_122B768(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E8AF8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122B7E8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E93DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122B868(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11E9D78(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_122B8E8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11EA7FC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B964(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B964(uint64_t a1, std::string *a2)
{
  return sub_11E9280(a2, a1);
}

uint64_t *sub_122B974(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11EA8A0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122B9F0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122B9F0(uint64_t a1, std::string *a2)
{
  return sub_11E9C38(a2, a1);
}

uint64_t *sub_122BA00(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11EA940(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122BA7C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122BA7C(uint64_t a1, std::string *a2)
{
  return sub_11EA5D4(a2, a1);
}

void sub_122BA8C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_149FAA0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122BB0C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_146A424();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_122BB8C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_14A23B8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122BC08(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_1478FB4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122BC84(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122BC84(uint64_t a1, std::string *a2)
{
  return sub_123CDB8(a2, a1);
}

void sub_122BC94(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11EAC0C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_122BD14(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11EBAE4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122BD90(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122BD90(uint64_t a1, std::string *a2)
{
  return sub_11EB228(a2, a1);
}

void sub_122BDA0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11EBC24(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122BE20(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11ED310(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122BEA0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11EDCD4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122BF20(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11EE7E8();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122BFA0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11EE1C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C020(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11F4D3C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C0A0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11F60CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C120(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11F6C74(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C1A0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11FA39C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_122C220(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11FE16C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_122C29C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11FE2E8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122C318(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122C318(uint64_t a1, std::string *a2)
{
  return sub_11EDBA4(a2, a1);
}

std::string *sub_122C328(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11FE370(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_122C3A4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_11FE46C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122C420(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122C420(uint64_t a1, std::string *a2)
{
  return sub_11F030C(a2, a1);
}

std::string *sub_122C430(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11FE3F4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122C4AC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11FE810(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122C528(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122C528(uint64_t a1, std::string *a2)
{
  return sub_11F5478(a2, a1);
}

void sub_122C538(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_11FE9BC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_11DCB28(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_122C5B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_11FEA3C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_122C630(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_122C630(uint64_t a1, uint64_t a2)
{
}

std::string *sub_122C640(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_11FEDB0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122C6BC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122C6BC(uint64_t a1, std::string *a2)
{
  return sub_11FA914(a2, a1);
}

void sub_122C6CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15BF834();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_122C74C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_15C2510(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122C7C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122C7C8(uint64_t a1, std::string *a2)
{
  return sub_117EF50(a2, a1);
}

void sub_122C7D8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11FF120(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C858(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_120186C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C8D8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12031D8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C958(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1202800(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122C9D8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_128E098();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122CA58(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_11FFB10(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122CAD8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12006AC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122CB58(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1201058(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122CBD8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1204EA0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122CC58(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_120800C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_122CCD4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_122CCD4(uint64_t a1, uint64_t a2)
{
}

std::string *sub_122CCE4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_1208250(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_122CD60(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1208400(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122CDDC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122CDDC(uint64_t a1, std::string *a2)
{
  return sub_1203C5C(a2, a1);
}

std::string *sub_122CDEC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_1208378(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122CE68(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122CE68(uint64_t a1, std::string *a2)
{
  return sub_120305C(a2, a1);
}

std::string *sub_122CE78(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_128E984(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122CEF4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122CEF4(uint64_t a1, std::string *a2)
{
  return sub_128E79C(a2, a1);
}

void sub_122CF04(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1208088(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_122CF80(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_122CF80(uint64_t a1, uint64_t a2)
{
}

void sub_122CF90(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_120812C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_122D00C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_122D00C(uint64_t a1, uint64_t a2)
{
}

void sub_122D01C(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12081D0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_122D098(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_122D098(uint64_t a1, std::string *a2)
{
  return sub_1104DD8(a2, a1);
}

std::string *sub_122D0A8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_12085D4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122D124(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122D124(uint64_t a1, std::string *a2)
{
  return sub_120565C(a2, a1);
}

void sub_122D134(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_120B4D0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D1B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12B334C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D234(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_120D8A4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D2B4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_120E904(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_122D334(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1211F88(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122D3B0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122D3B0(uint64_t a1, std::string *a2)
{
  return sub_120BEF4(a2, a1);
}

void sub_122D3C0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_12BCA98(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_122D43C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_122D43C(uint64_t a1, uint64_t a2)
{
}

void sub_122D44C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1212248(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_122D4C8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_122D4C8(uint64_t a1, uint64_t a2)
{
}

void sub_122D4D8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_12122D8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_122D554(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_122D554(uint64_t a1, uint64_t a2)
{
}

void sub_122D564(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_121271C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D5E4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12132BC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D664(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1205CA8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D6E4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12145D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D764(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1215C40(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D7E4(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1216420(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D864(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_130FEC0();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D8E4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1216E0C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D964(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1217874(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122D9E4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12181F8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122DA64(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_121871C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122DAE4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1218D58(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122DB64(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_121924C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122DBE4(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12198CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_122DC64(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1219F08(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_122DCE4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_12247EC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122DD60(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122DD60(uint64_t a1, std::string *a2)
{
  return sub_1212F14(a2, a1);
}

uint64_t *sub_122DD70(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1224878(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122DDEC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122DDEC(uint64_t a1, std::string *a2)
{
  return sub_1213A74(a2, a1);
}

void sub_122DDFC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1208678(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_122DE78(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_122DE78(uint64_t a1, uint64_t a2)
{
}

std::string *sub_122DE88(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_12249C4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122DF04(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122DF04(uint64_t a1, std::string *a2)
{
  return sub_1214D9C(a2, a1);
}

uint64_t *sub_122DF14(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1224B1C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122DF90(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122DF90(uint64_t a1, std::string *a2)
{
  return sub_121627C(a2, a1);
}

uint64_t *sub_122DFA0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1224BB8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122E01C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122E01C(uint64_t a1, std::string *a2)
{
  return sub_1216B14(a2, a1);
}

void sub_122E02C(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_131B694(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_122E0A8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_122E0A8(uint64_t a1, std::string *a2)
{
  return sub_1310A0C(a2, a1);
}

void sub_122E0B8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1224C5C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_122E134(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_122E134(uint64_t a1, uint64_t a2)
{
}

std::string *sub_122E144(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_1224D00(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122E1C0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122E1C0(uint64_t a1, std::string *a2)
{
  return sub_1217FCC(a2, a1);
}

uint64_t *sub_122E1D0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1224DC0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122E24C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_1224E48(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122E2C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122E2C8(uint64_t a1, std::string *a2)
{
  return sub_1196F3C(a2, a1);
}

std::string *sub_122E2D8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_1224EEC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_122E354(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1224F70(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122DF90(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122E3D0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_122500C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122E2C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_122E44C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_12250B0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122E2C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

__n128 sub_122E4C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  __n128 result = *(__n128 *)(a2 + 64);
  *((__n128 *)a1 + 4) = result;
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  uint64_t v13 = a1[10];
  a1[10] = *(void *)(a2 + 80);
  *(void *)(a2 + 80) = v13;
  LODWORD(v13) = *((_DWORD *)a1 + 22);
  *((_DWORD *)a1 + 22) = *(_DWORD *)(a2 + 88);
  *(_DWORD *)(a2 + 88) = v13;
  return result;
}

void sub_122E53C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1225340(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_122E5BC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_12284C8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_122E638()
{
  dword_254EB78 = 10000;
  qword_254EB80 = (uint64_t)&off_2531238;
  sub_1882AC4((unint64_t)&off_252D860, 10000, 11, 0, 0, (uint64_t)&off_2531238);
  dword_254EB88 = 10000;
  qword_254EB90 = (uint64_t)&off_2531210;
  sub_1882AC4((unint64_t)&off_252D7A8, 10000, 11, 0, 0, (uint64_t)&off_2531210);
  dword_254EB98 = 10001;
  qword_254EBA0 = (uint64_t)&off_253E8D0;
  sub_1882AC4((unint64_t)&off_252D7A8, 10001, 11, 0, 0, (uint64_t)&off_253E8D0);
  dword_254EBA8 = 100;
  byte_254EBAC = 0;
  sub_1882224((unint64_t)&off_254AD38, 100, 8, 0, 0);
  dword_254EBB0 = 101;
  qword_254EBB8 = (uint64_t)&unk_21393F0;
  sub_1882224((unint64_t)&off_254AD38, 101, 9, 0, 0);
  dword_254EBC0 = 102;
  qword_254EBC8 = (uint64_t)&unk_2139408;
  sub_1882224((unint64_t)&off_254AD38, 102, 9, 0, 0);
  dword_254EBD0 = 103;
  qword_254EBD8 = (uint64_t)&unk_2139420;
  sub_1882224((unint64_t)&off_254AD38, 103, 12, 0, 0);
  dword_254EBE0 = 104;
  qword_254EBE8 = (uint64_t)&unk_2139438;
  sub_1882224((unint64_t)&off_254AD38, 104, 12, 0, 0);
  dword_254EBF0 = 105;
  qword_254EBF8 = (uint64_t)&off_2532BC8;
  sub_1882AC4((unint64_t)&off_254AD38, 105, 11, 0, 0, (uint64_t)&off_2532BC8);
  dword_254EC00 = 106;
  qword_254EC08 = (uint64_t)&unk_2139450;
  sub_1882224((unint64_t)&off_254AD38, 106, 9, 1, 0);
  dword_254EC10 = 100;
  qword_254EC18 = (uint64_t)&off_2539740;
  sub_1882AC4((unint64_t)&off_254AD98, 100, 11, 1, 0, (uint64_t)&off_2539740);
  dword_254EC20 = 101;
  qword_254EC28 = (uint64_t)&off_252D9C0;
  sub_1882AC4((unint64_t)&off_254AD98, 101, 11, 1, 0, (uint64_t)&off_252D9C0);
  dword_254EC30 = 102;
  qword_254EC38 = (uint64_t)&off_25397A8;
  sub_1882AC4((unint64_t)&off_254AD98, 102, 11, 1, 0, (uint64_t)&off_25397A8);
  dword_254EC40 = 1001;
  byte_254EC44 = 0;
  sub_1882224((unint64_t)&off_25446B0, 1001, 8, 0, 0);
  dword_254EC48 = 1005;
  qword_254EC50 = 0;
  sub_1882224((unint64_t)&off_25444D8, 1005, 4, 0, 0);
  dword_254EC58 = 501;
  qword_254EC60 = (uint64_t)&off_252E5A8;
  sub_1882AC4((unint64_t)&off_254CAF8, 501, 11, 0, 0, (uint64_t)&off_252E5A8);
  dword_254EC68 = 502;
  qword_254EC70 = (uint64_t)&off_252E5D8;

  sub_1882AC4((unint64_t)&off_254CAF8, 502, 11, 0, 0, (uint64_t)&off_252E5D8);
}

uint64_t sub_122E9E0()
{
  qword_25FEFB8 = (uint64_t)"ADDRESS_LINEADMIN_AREAAOI_NAMEBUILDINGCOUNTRYFORMATTED_ADDRESSFULL_SUB_PREMISELOCALITYPOSTALS"
                           "TREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE"
                           "_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FEFC0 = 12;
  dword_25FEFC8 = 60;
  qword_25FEFD0 = (uint64_t)"ADMIN_AREAAOI_NAMEBUILDINGCOUNTRYFORMATTED_ADDRESSFULL_SUB_PREMISELOCALITYPOSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FEFD8 = 10;
  dword_25FEFE0 = 11;
  qword_25FEFE8 = (uint64_t)"AOI_NAMEBUILDINGCOUNTRYFORMATTED_ADDRESSFULL_SUB_PREMISELOCALITYPOSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FEFF0 = 8;
  dword_25FEFF8 = 16;
  qword_25FF000 = (uint64_t)"BUILDINGCOUNTRYFORMATTED_ADDRESSFULL_SUB_PREMISELOCALITYPOSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF008 = 8;
  dword_25FF010 = 15;
  uint64_t result = 7;
  qword_25FF018 = (uint64_t)"COUNTRYFORMATTED_ADDRESSFULL_SUB_PREMISELOCALITYPOSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF020 = 7;
  dword_25FF028 = 10;
  qword_25FF030 = (uint64_t)"FORMATTED_ADDRESSFULL_SUB_PREMISELOCALITYPOSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF038 = 17;
  dword_25FF040 = 1;
  qword_25FF048 = (uint64_t)"FULL_SUB_PREMISELOCALITYPOSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF050 = 16;
  dword_25FF058 = 40;
  qword_25FF060 = (uint64_t)"LOCALITYPOSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF068 = 8;
  dword_25FF070 = 12;
  qword_25FF078 = (uint64_t)"POSTALSTREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF080 = 6;
  dword_25FF088 = 14;
  qword_25FF090 = (uint64_t)"STREETSTREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF098 = 6;
  dword_25FF0A0 = 20;
  qword_25FF0A8 = (uint64_t)"STREET_NAMESTREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF0B0 = 11;
  dword_25FF0B8 = 21;
  qword_25FF0C0 = (uint64_t)"STREET_NUMBERSTREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF0C8 = 13;
  dword_25FF0D0 = 30;
  qword_25FF0D8 = (uint64_t)"STREET_PREFIXSTREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF0E0 = 13;
  dword_25FF0E8 = 22;
  qword_25FF0F0 = (uint64_t)"STREET_SUFFIXSTREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF0F8 = 13;
  dword_25FF100 = 23;
  qword_25FF108 = (uint64_t)"STREET_TYPESUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF110 = 11;
  dword_25FF118 = 24;
  qword_25FF120 = (uint64_t)"SUB_PREMISE_TYPESUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF128 = 16;
  dword_25FF130 = 41;
  qword_25FF138 = (uint64_t)"SUB_PREMISE_VALUEUNKNOWNUNKNOWN_AREA";
  unk_25FF140 = 17;
  dword_25FF148 = 42;
  qword_25FF150 = (uint64_t)"UNKNOWNUNKNOWN_AREA";
  unk_25FF158 = 7;
  dword_25FF160 = 0;
  qword_25FF168 = (uint64_t)"UNKNOWN_AREA";
  unk_25FF170 = 12;
  dword_25FF178 = 13;
  qword_25FF180 = (uint64_t)"ABSOLUTEHIGHNEUTRAL";
  *(void *)algn_25FF188 = 8;
  dword_25FF190 = 2;
  qword_25FF198 = (uint64_t)"HIGHNEUTRAL";
  unk_25FF1A0 = 4;
  dword_25FF1A8 = 1;
  qword_25FF1B0 = (uint64_t)"NEUTRAL";
  unk_25FF1B8 = 7;
  dword_25FF1C0 = 0;
  qword_25FF1C8 = (uint64_t)"ACCEPTABLEPERFECTUNACCEPTABLEUNKNOWN";
  unk_25FF1D0 = 10;
  dword_25FF1D8 = 2;
  qword_25FF1E0 = (uint64_t)"PERFECTUNACCEPTABLEUNKNOWN";
  unk_25FF1E8 = 7;
  dword_25FF1F0 = 3;
  qword_25FF1F8 = (uint64_t)"UNACCEPTABLEUNKNOWN";
  unk_25FF200 = 12;
  dword_25FF208 = 1;
  qword_25FF210 = (uint64_t)"UNKNOWN";
  unk_25FF218 = 7;
  dword_25FF220 = 0;
  qword_25FF228 = (uint64_t)"GEMINI_GEOCODING_CONFIDENCE_ACCEPTABLEGEMINI_GEOCODING_CONFIDENCE_APPROXIMATEGEMINI_GEOCODING"
                           "_CONFIDENCE_NOT_ACCEPTABLE_LARGE_AREAGEMINI_GEOCODING_CONFIDENCE_NOT_ACCEPTABLE_SMALL_AREAGEM"
                           "INI_GEOCODING_CONFIDENCE_PERFECTGEMINI_GEOCODING_CONFIDENCE_UNKNOWN";
  unk_25FF230 = 38;
  dword_25FF238 = 3;
  qword_25FF240 = (uint64_t)"GEMINI_GEOCODING_CONFIDENCE_APPROXIMATEGEMINI_GEOCODING_CONFIDENCE_NOT_ACCEPTABLE_LARGE_AREAGEMINI_GEOCODING_CONFIDENCE_NOT_ACCEPTABLE_SMALL_AREAGEMINI_GEOCODING_CONFIDENCE_PERFECTGEMINI_GEOCODING_CONFIDENCE_UNKNOWN";
  unk_25FF248 = 39;
  dword_25FF250 = 2;
  qword_25FF258 = (uint64_t)"GEMINI_GEOCODING_CONFIDENCE_NOT_ACCEPTABLE_LARGE_AREAGEMINI_GEOCODING_CONFIDENCE_NOT_ACCEPTABLE_SMALL_AREAGEMINI_GEOCODING_CONFIDENCE_PERFECTGEMINI_GEOCODING_CONFIDENCE_UNKNOWN";
  unk_25FF260 = 53;
  dword_25FF268 = 5;
  qword_25FF270 = (uint64_t)"GEMINI_GEOCODING_CONFIDENCE_NOT_ACCEPTABLE_SMALL_AREAGEMINI_GEOCODING_CONFIDENCE_PERFECTGEMINI_GEOCODING_CONFIDENCE_UNKNOWN";
  unk_25FF278 = 53;
  dword_25FF280 = 4;
  qword_25FF288 = (uint64_t)"GEMINI_GEOCODING_CONFIDENCE_PERFECTGEMINI_GEOCODING_CONFIDENCE_UNKNOWN";
  unk_25FF290 = 35;
  dword_25FF298 = 1;
  qword_25FF2A0 = (uint64_t)"GEMINI_GEOCODING_CONFIDENCE_UNKNOWN";
  unk_25FF2A8 = 35;
  dword_25FF2B0 = 0;
  qword_25FF2B8 = (uint64_t)"FUZZY_MATCHMATCHMISSUNKNOWN";
  unk_25FF2C0 = 11;
  dword_25FF2C8 = 3;
  qword_25FF2D0 = (uint64_t)"MATCHMISSUNKNOWN";
  unk_25FF2D8 = 5;
  dword_25FF2E0 = 2;
  qword_25FF2E8 = (uint64_t)"MISSUNKNOWN";
  unk_25FF2F0 = 4;
  dword_25FF2F8 = 1;
  qword_25FF300 = (uint64_t)"UNKNOWN";
  unk_25FF308 = 7;
  dword_25FF310 = 0;
  qword_25FF318 = (uint64_t)"MATCHED_TOKEN_SET_TYPE_UNKNOWNMATCHED_TOKEN_TYPE_ABOVE_STREET_TOKEN_DROPMATCHED_TOKEN_TYPE_CRF";
  unk_25FF320 = 30;
  dword_25FF328 = 0;
  qword_25FF330 = (uint64_t)"MATCHED_TOKEN_TYPE_ABOVE_STREET_TOKEN_DROPMATCHED_TOKEN_TYPE_CRF";
  unk_25FF338 = 42;
  dword_25FF340 = 2;
  qword_25FF348 = (uint64_t)"MATCHED_TOKEN_TYPE_CRF";
  unk_25FF350 = 22;
  dword_25FF358 = 1;
  qword_25FF360 = (uint64_t)"AVAILABLEOUT_OF_SERVICEUNAVAILABLEUNKNOWN";
  *(void *)algn_25FF368 = 9;
  dword_25FF370 = 2;
  qword_25FF378 = (uint64_t)"OUT_OF_SERVICEUNAVAILABLEUNKNOWN";
  unk_25FF380 = 14;
  dword_25FF388 = 4;
  qword_25FF390 = (uint64_t)"UNAVAILABLEUNKNOWN";
  unk_25FF398 = 11;
  dword_25FF3A0 = 3;
  qword_25FF3A8 = (uint64_t)"UNKNOWN";
  unk_25FF3B0 = 7;
  dword_25FF3B8 = 1;
  qword_25FF3C0 = (uint64_t)"CHADEMOCONNECTOR_TYPE_UNKNOWNDOMESTIC_ADOMESTIC_BDOMESTIC_CDOMESTIC_DDOMESTIC_EDOMESTIC_FDOME"
                           "STIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_"
                           "60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_621"
                           "96_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  *(void *)algn_25FF3C8 = 7;
  dword_25FF3D0 = 1;
  qword_25FF3D8 = (uint64_t)"CONNECTOR_TYPE_UNKNOWNDOMESTIC_ADOMESTIC_BDOMESTIC_CDOMESTIC_DDOMESTIC_EDOMESTIC_FDOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF3E0 = 22;
  dword_25FF3E8 = 0;
  qword_25FF3F0 = (uint64_t)"DOMESTIC_ADOMESTIC_BDOMESTIC_CDOMESTIC_DDOMESTIC_EDOMESTIC_FDOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF3F8 = 10;
  dword_25FF400 = 2;
  qword_25FF408 = (uint64_t)"DOMESTIC_BDOMESTIC_CDOMESTIC_DDOMESTIC_EDOMESTIC_FDOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF410 = 10;
  dword_25FF418 = 3;
  qword_25FF420 = (uint64_t)"DOMESTIC_CDOMESTIC_DDOMESTIC_EDOMESTIC_FDOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF428 = 10;
  dword_25FF430 = 4;
  qword_25FF438 = (uint64_t)"DOMESTIC_DDOMESTIC_EDOMESTIC_FDOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF440 = 10;
  dword_25FF448 = 5;
  qword_25FF450 = (uint64_t)"DOMESTIC_EDOMESTIC_FDOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF458 = 10;
  dword_25FF460 = 6;
  qword_25FF468 = (uint64_t)"DOMESTIC_FDOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF470 = 10;
  dword_25FF478 = 7;
  qword_25FF480 = (uint64_t)"DOMESTIC_GDOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF488 = 10;
  dword_25FF490 = 8;
  qword_25FF498 = (uint64_t)"DOMESTIC_HDOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF4A0 = 10;
  dword_25FF4A8 = 9;
  qword_25FF4B0 = (uint64_t)"DOMESTIC_IDOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF4B8 = 10;
  dword_25FF4C0 = 10;
  qword_25FF4C8 = (uint64_t)"DOMESTIC_JDOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF4D0 = 10;
  dword_25FF4D8 = 11;
  qword_25FF4E0 = (uint64_t)"DOMESTIC_KDOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF4E8 = 10;
  dword_25FF4F0 = 12;
  qword_25FF4F8 = (uint64_t)"DOMESTIC_LGBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF500 = 10;
  dword_25FF508 = 13;
  qword_25FF510 = (uint64_t)"GBT_ACGBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF518 = 6;
  dword_25FF520 = 28;
  qword_25FF528 = (uint64_t)"GBT_DCIEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF530 = 6;
  dword_25FF538 = 29;
  qword_25FF540 = (uint64_t)"IEC_60309_2_single_16IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF548 = 21;
  dword_25FF550 = 14;
  qword_25FF558 = (uint64_t)"IEC_60309_2_three_16IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF560 = 20;
  dword_25FF568 = 15;
  qword_25FF570 = (uint64_t)"IEC_60309_2_three_32IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF578 = 20;
  dword_25FF580 = 16;
  qword_25FF588 = (uint64_t)"IEC_60309_2_three_64IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF590 = 20;
  dword_25FF598 = 17;
  qword_25FF5A0 = (uint64_t)"IEC_62196_T1IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF5A8 = 12;
  dword_25FF5B0 = 18;
  qword_25FF5B8 = (uint64_t)"IEC_62196_T1_COMBOIEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  unk_25FF5C0 = 18;
  qword_25FF5D0 = (uint64_t)"IEC_62196_T2IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  qword_25FF5E8 = (uint64_t)"IEC_62196_T2_COMBOIEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  qword_25FF600 = (uint64_t)"IEC_62196_T3AIEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  qword_25FF618 = (uint64_t)"IEC_62196_T3CPANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  dword_25FF5C8 = 19;
  qword_25FF5D8 = 12;
  dword_25FF5E0 = 20;
  qword_25FF5F0 = 18;
  dword_25FF5F8 = 21;
  qword_25FF608 = 13;
  dword_25FF610 = 22;
  qword_25FF620 = 13;
  dword_25FF628 = 23;
  qword_25FF630 = (uint64_t)"PANTOGRAPH_BOTTOM_UPPANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  qword_25FF638 = 20;
  dword_25FF640 = 24;
  qword_25FF648 = (uint64_t)"PANTOGRAPH_TOP_DOWNTESLA_RTESLA_S";
  qword_25FF650 = 19;
  qword_25FF660 = (uint64_t)"TESLA_RTESLA_S";
  dword_25FF658 = 25;
  qword_25FF668 = 7;
  qword_25FF678 = (uint64_t)"TESLA_S";
  dword_25FF670 = 26;
  qword_25FF680 = 7;
  dword_25FF688 = 27;
  qword_25FF6A8 = (uint64_t)"AC_3_PHASEDCPOWER_TYPE_UNKNOWN";
  unk_25FF6B0 = 10;
  qword_25FF6C0 = (uint64_t)"DCPOWER_TYPE_UNKNOWN";
  unk_25FF6C8 = 2;
  qword_25FF6D8 = (uint64_t)"POWER_TYPE_UNKNOWN";
  unk_25FF6E0 = 18;
  qword_25FF690 = (uint64_t)"AC_1_PHASEAC_3_PHASEDCPOWER_TYPE_UNKNOWN";
  *(void *)algn_25FF698 = 10;
  dword_25FF6A0 = 1;
  dword_25FF6B8 = 2;
  dword_25FF6D0 = 3;
  dword_25FF6E8 = 0;
  qword_25FF708 = (uint64_t)"LIVE_EVENTLOGOPERSON_HEADSHOTPOST_EVENTPRE_EVENTUNKNOWN_IMAGE_TYPEUP_NEXT_BACKGROUND";
  qword_25FF720 = (uint64_t)"LOGOPERSON_HEADSHOTPOST_EVENTPRE_EVENTUNKNOWN_IMAGE_TYPEUP_NEXT_BACKGROUND";
  qword_25FF738 = (uint64_t)"PERSON_HEADSHOTPOST_EVENTPRE_EVENTUNKNOWN_IMAGE_TYPEUP_NEXT_BACKGROUND";
  qword_25FF750 = (uint64_t)"POST_EVENTPRE_EVENTUNKNOWN_IMAGE_TYPEUP_NEXT_BACKGROUND";
  qword_25FF768 = (uint64_t)"PRE_EVENTUNKNOWN_IMAGE_TYPEUP_NEXT_BACKGROUND";
  qword_25FF780 = (uint64_t)"UNKNOWN_IMAGE_TYPEUP_NEXT_BACKGROUND";
  qword_25FF798 = (uint64_t)"UP_NEXT_BACKGROUND";
  qword_25FF7C8 = (uint64_t)"CANCELLEDDELAYEDFINALFORFEITIN_PROGRESSPOSTPONEDPRE_GAMESUSPENDEDUNKNOWN_STATUS";
  qword_25FF7E0 = (uint64_t)"DELAYEDFINALFORFEITIN_PROGRESSPOSTPONEDPRE_GAMESUSPENDEDUNKNOWN_STATUS";
  qword_25FF7F8 = (uint64_t)"FINALFORFEITIN_PROGRESSPOSTPONEDPRE_GAMESUSPENDEDUNKNOWN_STATUS";
  qword_25FF810 = (uint64_t)"FORFEITIN_PROGRESSPOSTPONEDPRE_GAMESUSPENDEDUNKNOWN_STATUS";
  qword_25FF828 = (uint64_t)"IN_PROGRESSPOSTPONEDPRE_GAMESUSPENDEDUNKNOWN_STATUS";
  qword_25FF840 = (uint64_t)"POSTPONEDPRE_GAMESUSPENDEDUNKNOWN_STATUS";
  qword_25FF858 = (uint64_t)"PRE_GAMESUSPENDEDUNKNOWN_STATUS";
  qword_25FF870 = (uint64_t)"SUSPENDEDUNKNOWN_STATUS";
  qword_25FF888 = (uint64_t)"UNKNOWN_STATUS";
  qword_25FF8B8 = (uint64_t)"INNINGLAPOVERTIMEPERIODQUARTERSETSHOOTOUTSUNKNOWN_PERIOD";
  qword_25FF8D0 = (uint64_t)"LAPOVERTIMEPERIODQUARTERSETSHOOTOUTSUNKNOWN_PERIOD";
  qword_25FF8E8 = (uint64_t)"OVERTIMEPERIODQUARTERSETSHOOTOUTSUNKNOWN_PERIOD";
  qword_25FFAC8 = (uint64_t)"UNKNOWN_PRIZE_SUB_TYPE";
  qword_25FFAB0 = (uint64_t)"SILVERUNKNOWN_PRIZE_SUB_TYPE";
  unk_25FFAB8 = 6;
  dword_25FFAC0 = 2;
  qword_25FFA98 = (uint64_t)"GOLDSILVERUNKNOWN_PRIZE_SUB_TYPE";
  unk_25FFAA0 = 4;
  qword_25FFA80 = (uint64_t)"BRONZEGOLDSILVERUNKNOWN_PRIZE_SUB_TYPE";
  *(void *)algn_25FFA88 = 6;
  dword_25FFAA8 = 1;
  dword_25FFA90 = 3;
  qword_25FFA68 = (uint64_t)"UNKNOWN_PRIZE_TYPE";
  unk_25FFA70 = 18;
  qword_25FFA50 = (uint64_t)"TROPHYUNKNOWN_PRIZE_TYPE";
  unk_25FFA58 = 6;
  dword_25FFA78 = 0;
  dword_25FFA60 = 2;
  qword_25FF9A8 = (uint64_t)"UNKNOWN_PERIOD_SUBDIVISION";
  qword_25FFA38 = (uint64_t)"MEDALTROPHYUNKNOWN_PRIZE_TYPE";
  unk_25FFA40 = 5;
  dword_25FFA48 = 1;
  qword_25FFA20 = (uint64_t)"UNKNOWN_COMPETITOR_QUALIFIER";
  unk_25FFA28 = 28;
  dword_25FFA30 = 0;
  qword_25FFA08 = (uint64_t)"HOMEUNKNOWN_COMPETITOR_QUALIFIER";
  unk_25FFA10 = 4;
  qword_25FF9F0 = (uint64_t)"AWAYHOMEUNKNOWN_COMPETITOR_QUALIFIER";
  *(void *)algn_25FF9F8 = 4;
  dword_25FFA18 = 2;
  dword_25FFA00 = 1;
  dword_25FF9E8 = 0;
  qword_25FF9D8 = (uint64_t)"TEAM";
  unk_25FF9E0 = 4;
  qword_25FF9C0 = (uint64_t)"INDIVIDUALTEAM";
  *(void *)algn_25FF9C8 = 10;
  dword_25FF9D0 = 1;
  qword_25FF990 = (uint64_t)"TOPUNKNOWN_PERIOD_SUBDIVISION";
  unk_25FF998 = 3;
  dword_25FF9A0 = 1;
  qword_25FF9B0 = 26;
  dword_25FF9B8 = 0;
  qword_25FF960 = (uint64_t)"UNKNOWN_PERIOD";
  qword_25FF978 = (uint64_t)"BOTTOMTOPUNKNOWN_PERIOD_SUBDIVISION";
  unk_25FF980 = 6;
  dword_25FF988 = 2;
  dword_25FF970 = 0;
  qword_25FF948 = (uint64_t)"SHOOTOUTSUNKNOWN_PERIOD";
  unk_25FF950 = 9;
  dword_25FF958 = 6;
  qword_25FF968 = 14;
  qword_25FF918 = (uint64_t)"QUARTERSETSHOOTOUTSUNKNOWN_PERIOD";
  unk_25FF920 = 7;
  qword_25FF930 = (uint64_t)"SETSHOOTOUTSUNKNOWN_PERIOD";
  unk_25FF938 = 3;
  dword_25FF928 = 2;
  dword_25FF940 = 4;
  qword_25FF900 = (uint64_t)"PERIODQUARTERSETSHOOTOUTSUNKNOWN_PERIOD";
  unk_25FF908 = 6;
  dword_25FF8F8 = 5;
  dword_25FF910 = 8;
  qword_25FF8A0 = (uint64_t)"HALFINNINGLAPOVERTIMEPERIODQUARTERSETSHOOTOUTSUNKNOWN_PERIOD";
  *(void *)algn_25FF8A8 = 4;
  dword_25FF8C8 = 3;
  qword_25FF8D8 = 3;
  dword_25FF8E0 = 7;
  qword_25FF8F0 = 8;
  dword_25FF8B0 = 1;
  qword_25FF8C0 = 6;
  qword_25FF7B0 = (uint64_t)"BREAKCANCELLEDDELAYEDFINALFORFEITIN_PROGRESSPOSTPONEDPRE_GAMESUSPENDEDUNKNOWN_STATUS";
  *(void *)algn_25FF7B8 = 5;
  dword_25FF7C0 = 3;
  dword_25FF898 = 0;
  qword_25FF7D0 = 9;
  dword_25FF7D8 = 7;
  dword_25FF868 = 1;
  qword_25FF878 = 9;
  dword_25FF880 = 6;
  qword_25FF890 = 14;
  qword_25FF7E8 = 7;
  dword_25FF7F0 = 8;
  dword_25FF838 = 2;
  qword_25FF848 = 9;
  dword_25FF850 = 5;
  qword_25FF860 = 8;
  qword_25FF800 = 5;
  dword_25FF808 = 4;
  qword_25FF818 = 7;
  dword_25FF820 = 9;
  qword_25FF830 = 11;
  qword_25FF6F0 = (uint64_t)"ACTION_SHOTLIVE_EVENTLOGOPERSON_HEADSHOTPOST_EVENTPRE_EVENTUNKNOWN_IMAGE_TYPEUP_NEXT_BACKGROUND";
  *(void *)algn_25FF6F8 = 11;
  dword_25FF700 = 7;
  qword_25FF710 = 10;
  dword_25FF718 = 3;
  qword_25FF728 = 4;
  dword_25FF730 = 1;
  qword_25FF740 = 15;
  dword_25FF748 = 6;
  qword_25FF758 = 10;
  dword_25FF760 = 4;
  qword_25FF770 = 9;
  dword_25FF778 = 2;
  qword_25FF788 = 18;
  dword_25FF790 = 0;
  qword_25FF7A0 = 18;
  dword_25FF7A8 = 5;
  qword_25FFAD0 = 22;
  dword_25FFAD8 = 0;
  qword_25FFAF8 = (uint64_t)"TRAILINGUNKNOWN_COMPETITOR_STATUS";
  unk_25FFB00 = 8;
  qword_25FFAE0 = (uint64_t)"LEADINGTRAILINGUNKNOWN_COMPETITOR_STATUS";
  *(void *)algn_25FFAE8 = 7;
  dword_25FFAF0 = 1;
  dword_25FFB08 = 2;
  qword_25FFB10 = (uint64_t)"UNKNOWN_COMPETITOR_STATUS";
  unk_25FFB18 = 25;
  dword_25FFB20 = 0;
  qword_25FFB40 = (uint64_t)"VEHICLE_TYPE_ELECTRIC_BIKEVEHICLE_TYPE_ELECTRIC_SCOOTERVEHICLE_TYPE_MOPEDVEHICLE_TYPE_SCOOTERVEHICLE_TYPE_UNKNOWN";
  unk_25FFB48 = 26;
  qword_25FFB58 = (uint64_t)"VEHICLE_TYPE_ELECTRIC_SCOOTERVEHICLE_TYPE_MOPEDVEHICLE_TYPE_SCOOTERVEHICLE_TYPE_UNKNOWN";
  qword_25FFB60 = 29;
  qword_25FFB70 = (uint64_t)"VEHICLE_TYPE_MOPEDVEHICLE_TYPE_SCOOTERVEHICLE_TYPE_UNKNOWN";
  unk_25FFB78 = 18;
  qword_25FFB88 = (uint64_t)"VEHICLE_TYPE_SCOOTERVEHICLE_TYPE_UNKNOWN";
  unk_25FFB90 = 20;
  qword_25FFBA0 = (uint64_t)"VEHICLE_TYPE_UNKNOWN";
  unk_25FFBA8 = 20;
  qword_25FFB28 = (uint64_t)"VEHICLE_TYPE_BIKEVEHICLE_TYPE_ELECTRIC_BIKEVEHICLE_TYPE_ELECTRIC_SCOOTERVEHICLE_TYPE_MOPEDVEH"
                           "ICLE_TYPE_SCOOTERVEHICLE_TYPE_UNKNOWN";
  unk_25FFB30 = 17;
  dword_25FFB38 = 1;
  dword_25FFB50 = 2;
  dword_25FFB68 = 4;
  dword_25FFB80 = 5;
  dword_25FFB98 = 3;
  dword_25FFBB0 = 0;
  qword_25FFBD0 = (uint64_t)"APPLE_STORE_SPECIAL_MESSAGEBIKESHAREBUSINESS_ADVISORYDOCKLESS_BIKESEV_CHARGINGFLIGHTSGAS_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFBE8 = (uint64_t)"BIKESHAREBUSINESS_ADVISORYDOCKLESS_BIKESEV_CHARGINGFLIGHTSGAS_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFC00 = (uint64_t)"BUSINESS_ADVISORYDOCKLESS_BIKESEV_CHARGINGFLIGHTSGAS_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFC18 = (uint64_t)"DOCKLESS_BIKESEV_CHARGINGFLIGHTSGAS_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFC30 = (uint64_t)"EV_CHARGINGFLIGHTSGAS_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFC48 = (uint64_t)"FLIGHTSGAS_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFC60 = (uint64_t)"GAS_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFC78 = (uint64_t)"HEARTBEATSPORTSTODAY_AT_APPLE";
  qword_25FFC90 = (uint64_t)"SPORTSTODAY_AT_APPLE";
  qword_25FFCA8 = (uint64_t)"TODAY_AT_APPLE";
  qword_25FFBB8 = (uint64_t)"ANIMALAPPLE_STORE_SPECIAL_MESSAGEBIKESHAREBUSINESS_ADVISORYDOCKLESS_BIKESEV_CHARGINGFLIGHTSGA"
                           "S_STATIONSHEARTBEATSPORTSTODAY_AT_APPLE";
  unk_25FFBC0 = 6;
  dword_25FFBC8 = 8;
  qword_25FFBD8 = 27;
  dword_25FFBE0 = 9;
  qword_25FFBF0 = 9;
  dword_25FFBF8 = 2;
  qword_25FFC08 = 17;
  dword_25FFC10 = 10;
  qword_25FFC20 = 14;
  dword_25FFC28 = 5;
  qword_25FFC38 = 11;
  dword_25FFC40 = 6;
  qword_25FFC50 = 7;
  dword_25FFC58 = 3;
  qword_25FFC68 = 12;
  dword_25FFC70 = 4;
  qword_25FFC80 = 9;
  dword_25FFC88 = 11;
  qword_25FFC98 = 6;
  dword_25FFCA0 = 1;
  qword_25FFCB0 = 14;
  dword_25FFCB8 = 7;
  qword_25FFCD8 = (uint64_t)"INTERNALPUBLIC";
  unk_25FFCE0 = 8;
  qword_25FFCF0 = (uint64_t)"PUBLIC";
  unk_25FFCF8 = 6;
  qword_25FFCC0 = (uint64_t)"DEVELOPMENTINTERNALPUBLIC";
  *(void *)algn_25FFCC8 = 11;
  dword_25FFCD0 = 3;
  dword_25FFCE8 = 1;
  dword_25FFD00 = 2;
  qword_25FFD20 = (uint64_t)"MIX_PARITYODD_PARITYUNKNOWN_PARITY";
  unk_25FFD28 = 10;
  qword_25FFD38 = (uint64_t)"ODD_PARITYUNKNOWN_PARITY";
  unk_25FFD40 = 10;
  qword_25FFD50 = (uint64_t)"UNKNOWN_PARITY";
  unk_25FFD58 = 14;
  qword_25FFD08 = (uint64_t)"EVEN_PARITYMIX_PARITYODD_PARITYUNKNOWN_PARITY";
  unk_25FFD10 = 11;
  dword_25FFD18 = 2;
  dword_25FFD30 = 4;
  dword_25FFD48 = 3;
  dword_25FFD60 = 1;
  qword_25FFD80 = (uint64_t)"RIGHT_SIDE";
  unk_25FFD88 = 10;
  qword_25FFD68 = (uint64_t)"LEFT_SIDERIGHT_SIDE";
  unk_25FFD70 = 9;
  dword_25FFD78 = 1;
  dword_25FFD90 = 2;
  qword_25FFDA0 = 28;
  qword_25FFDC8 = (uint64_t)"ENTITY_TYPE_CHOMEENTITY_TYPE_CITYENTITY_TYPE_CONTINENTENTITY_TYPE_COUNTRYENTITY_TYPE_COUNTYENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFDE0 = (uint64_t)"ENTITY_TYPE_CITYENTITY_TYPE_CONTINENTENTITY_TYPE_COUNTRYENTITY_TYPE_COUNTYENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFDF8 = (uint64_t)"ENTITY_TYPE_CONTINENTENTITY_TYPE_COUNTRYENTITY_TYPE_COUNTYENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFE10 = (uint64_t)"ENTITY_TYPE_COUNTRYENTITY_TYPE_COUNTYENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFE28 = (uint64_t)"ENTITY_TYPE_COUNTYENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFE40 = (uint64_t)"ENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFE58 = (uint64_t)"ENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFE70 = (uint64_t)"ENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFE88 = (uint64_t)"ENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFEA0 = (uint64_t)"ENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFEB8 = (uint64_t)"ENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFED0 = (uint64_t)"ENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFEE8 = (uint64_t)"ENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  qword_25FFDB0 = (uint64_t)"ENTITY_TYPE_BUILDINGENTITY_TYPE_CHOMEENTITY_TYPE_CITYENTITY_TYPE_CONTINENTENTITY_TYPE_COUNTRYENTITY_TYPE_COUNTYENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTITY_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  unk_25FFDB8 = 20;
  qword_25FFD98 = (uint64_t)"ENTITY_TYPE_ADDRESSABLE_AREAENTITY_TYPE_BUILDINGENTITY_TYPE_CHOMEENTITY_TYPE_CITYENTITY_TYPE_"
                           "CONTINENTENTITY_TYPE_COUNTRYENTITY_TYPE_COUNTYENTITY_TYPE_ISLANDENTITY_TYPE_NEIGHBORHOODENTIT"
                           "Y_TYPE_OAZAENTITY_TYPE_POSTALENTITY_TYPE_SECTORENTITY_TYPE_STATEENTITY_TYPE_STREETENTITY_TYPE"
                           "_SUB_POSTALENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  dword_25FFDA8 = 11;
  dword_25FFDC0 = 10;
  qword_25FFDD0 = 17;
  dword_25FFDD8 = 6;
  qword_25FFDE8 = 16;
  dword_25FFDF0 = 2;
  qword_25FFE00 = 21;
  dword_25FFE08 = 13;
  qword_25FFE18 = 19;
  dword_25FFE20 = 5;
  qword_25FFE30 = 18;
  dword_25FFE38 = 4;
  qword_25FFE48 = 18;
  dword_25FFE50 = 16;
  qword_25FFE60 = 24;
  dword_25FFE68 = 12;
  qword_25FFE78 = 16;
  dword_25FFE80 = 7;
  qword_25FFE90 = 18;
  dword_25FFE98 = 14;
  qword_25FFEA8 = 18;
  dword_25FFEB0 = 9;
  qword_25FFEC0 = 17;
  dword_25FFEC8 = 3;
  qword_25FFED8 = 18;
  dword_25FFEE0 = 1;
  qword_25FFEF0 = 22;
  dword_25FFEF8 = 17;
  qword_25FFF00 = (uint64_t)"ENTITY_TYPE_UNKNOWNENTITY_TYPE_WARDENTITY_TYPE_WATER";
  unk_25FFF08 = 19;
  dword_25FFF10 = 0;
  qword_25FFF18 = (uint64_t)"ENTITY_TYPE_WARDENTITY_TYPE_WATER";
  unk_25FFF20 = 16;
  dword_25FFF28 = 8;
  qword_25FFF30 = (uint64_t)"ENTITY_TYPE_WATER";
  unk_25FFF38 = 17;
  dword_25FFF40 = 15;
  qword_25FFF50 = 37;
  qword_25FFF60 = (uint64_t)"ADDRESS_COMPONENT_ADMINISTRATIVE_AREA_CODEADDRESS_COMPONENT_COUNTRYADDRESS_COMPONENT_COUNTRY_CODEADDRESS_COMPONENT_LOCALITYADDRESS_COMPONENT_POSTALADDRESS_COMPONENT_SUB_ADMINISTRATIVE_AREAADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  qword_25FFF68 = 42;
  qword_25FFFA8 = (uint64_t)"ADDRESS_COMPONENT_LOCALITYADDRESS_COMPONENT_POSTALADDRESS_COMPONENT_SUB_ADMINISTRATIVE_AREAADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  unk_25FFFB0 = 26;
  qword_25FFFC0 = (uint64_t)"ADDRESS_COMPONENT_POSTALADDRESS_COMPONENT_SUB_ADMINISTRATIVE_AREAADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  unk_25FFFC8 = 24;
  qword_25FFFD8 = (uint64_t)"ADDRESS_COMPONENT_SUB_ADMINISTRATIVE_AREAADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  qword_25FFFE0 = 41;
  qword_25FFFF0 = (uint64_t)"ADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  qword_2600008 = (uint64_t)"ADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  unk_2600010 = 34;
  qword_2600020 = (uint64_t)"ADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  qword_25FFF90 = (uint64_t)"ADDRESS_COMPONENT_COUNTRY_CODEADDRESS_COMPONENT_LOCALITYADDRESS_COMPONENT_POSTALADDRESS_COMPONENT_SUB_ADMINISTRATIVE_AREAADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  qword_25FFF98 = 30;
  qword_25FFFF8 = 30;
  qword_2600028 = 30;
  qword_25FFF78 = (uint64_t)"ADDRESS_COMPONENT_COUNTRYADDRESS_COMPONENT_COUNTRY_CODEADDRESS_COMPONENT_LOCALITYADDRESS_COMPONENT_POSTALADDRESS_COMPONENT_SUB_ADMINISTRATIVE_AREAADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_THOROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  qword_25FFF48 = (uint64_t)"ADDRESS_COMPONENT_ADMINISTRATIVE_AREAADDRESS_COMPONENT_ADMINISTRATIVE_AREA_CODEADDRESS_COMPON"
                           "ENT_COUNTRYADDRESS_COMPONENT_COUNTRY_CODEADDRESS_COMPONENT_LOCALITYADDRESS_COMPONENT_POSTALAD"
                           "DRESS_COMPONENT_SUB_ADMINISTRATIVE_AREAADDRESS_COMPONENT_SUB_LOCALITYADDRESS_COMPONENT_SUB_TH"
                           "OROUGHFAREADDRESS_COMPONENT_THOROUGHFAREADDRESS_COMPONENT_UNKNOWN";
  dword_25FFF58 = 3;
  dword_25FFF70 = 4;
  qword_25FFF80 = 25;
  dword_25FFF88 = 1;
  dword_25FFFA0 = 2;
  dword_25FFFB8 = 6;
  dword_25FFFD0 = 7;
  dword_25FFFE8 = 5;
  dword_2600000 = 8;
  dword_2600018 = 10;
  dword_2600030 = 9;
  qword_2600038 = (uint64_t)"ADDRESS_COMPONENT_UNKNOWN";
  unk_2600040 = 25;
  dword_2600048 = 0;
  qword_2600050 = (uint64_t)"FEATURE_TRANSITFEATURE_UNKNOWN";
  *(void *)algn_2600058 = 15;
  dword_2600060 = 1;
  qword_2600068 = (uint64_t)"FEATURE_UNKNOWN";
  unk_2600070 = 15;
  dword_2600078 = 0;
  qword_2600080 = (uint64_t)"V0";
  *(void *)algn_2600088 = 2;
  dword_2600090 = 0;
  qword_2600098 = (uint64_t)"BRANDSCATEGORY";
  unk_26000A0 = 6;
  dword_26000A8 = 2;
  qword_26000B0 = (uint64_t)"CATEGORY";
  unk_26000B8 = 8;
  dword_26000C0 = 1;
  qword_26000C8 = (uint64_t)"CHARACTERWORD";
  unk_26000D0 = 9;
  dword_26000D8 = 1;
  qword_26000E0 = (uint64_t)"WORD";
  unk_26000E8 = 4;
  dword_26000F0 = 2;
  qword_26000F8 = (uint64_t)"CAR_MODE_ELECTRICCAR_MODE_GASCAR_MODE_HYBRIDCAR_MODE_UNKNOWN";
  unk_2600100 = 17;
  dword_2600108 = 2;
  qword_2600110 = (uint64_t)"CAR_MODE_GASCAR_MODE_HYBRIDCAR_MODE_UNKNOWN";
  unk_2600118 = 12;
  dword_2600120 = 1;
  qword_2600128 = (uint64_t)"CAR_MODE_HYBRIDCAR_MODE_UNKNOWN";
  unk_2600130 = 15;
  dword_2600138 = 3;
  qword_2600140 = (uint64_t)"CAR_MODE_UNKNOWN";
  unk_2600148 = 16;
  dword_2600150 = 0;
  qword_2600170 = (uint64_t)"ACCEPTS_CREDIT_CARDSALLOWS_PETSGOOD_FOR_KIDSHAS_DELIVERYHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600178 = 20;
  dword_2600180 = 5;
  dword_2600198 = 7;
  dword_26001B0 = 1;
  dword_26001C8 = 2;
  qword_26001E8 = (uint64_t)"HAS_FREE_BREAKFASTHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_26001F0 = 18;
  qword_26001D0 = (uint64_t)"HAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_26001D8 = 18;
  dword_26001F8 = 14;
  qword_2600200 = (uint64_t)"HAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600208 = 16;
  dword_2600210 = 10;
  qword_2600218 = (uint64_t)"HAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  dword_2600228 = 8;
  qword_2600230 = (uint64_t)"HAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600238 = 12;
  dword_2600240 = 9;
  qword_2600248 = (uint64_t)"HAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600250 = 27;
  qword_26001B8 = (uint64_t)"HAS_DELIVERYHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_26001C0 = 12;
  dword_2600258 = 12;
  qword_2600260 = (uint64_t)"HAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600268 = 19;
  dword_2600270 = 3;
  qword_2600278 = (uint64_t)"HAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600280 = 17;
  qword_2600158 = (uint64_t)"ACCEPTS_APPLE_PAYACCEPTS_CREDIT_CARDSALLOWS_PETSGOOD_FOR_KIDSHAS_DELIVERYHAS_FITNESS_CENTERHA"
                           "S_FREE_BREAKFASTHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDO"
                           "OR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600160 = 17;
  qword_26001A0 = (uint64_t)"GOOD_FOR_KIDSHAS_DELIVERYHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_26001A8 = 13;
  qword_2600220 = 13;
  dword_2600288 = 13;
  qword_2600290 = (uint64_t)"NONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600298 = 4;
  dword_2600168 = 4;
  qword_26002A8 = (uint64_t)"SMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_26002B0 = 15;
  dword_26001E0 = 15;
  qword_2600188 = (uint64_t)"ALLOWS_PETSGOOD_FOR_KIDSHAS_DELIVERYHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_OUTDOOR_SEATINGHAS_SWIMMING_POOLNONESMOKING_ALLOWEDWHEELCHAIR_ACCESSIBLE";
  unk_2600190 = 11;
  dword_26002B8 = 11;
  qword_26002C0 = (uint64_t)"WHEELCHAIR_ACCESSIBLE";
  unk_26002C8 = 21;
  dword_26002D0 = 6;
  dword_26002A0 = 0;
  return result;
}

uint64_t sub_122F734(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_249EC08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_122F7B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_122F7E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_122F854(void *a1)
{
  sub_122F7E0(a1);

  operator delete();
}

uint64_t sub_122F88C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_122F8A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v14 = v7 + 1;
    LODWORD(v13) = *v7;
    if ((v13 & 0x80) == 0) {
      goto LABEL_19;
    }
    int v15 = *v14;
    uint64_t v13 = v13 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v14 = v7 + 2;
LABEL_19:
      uint64_t v19 = v14;
      *(_DWORD *)(a1 + 24) = v13;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v13);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_122FA20(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_122FB48(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_122FBBC()
{
  return 1;
}

void *sub_122FBC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.transit.VehiclePositionSnapshotMetaData");
}

uint64_t sub_122FBD4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249EC88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124D480(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_122FCF8()
{
}

uint64_t sub_122FD60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252E628)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_122F7E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_124D400((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_122FE24(uint64_t a1)
{
  sub_122FD60(a1);

  operator delete();
}

uint64_t sub_122FE5C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1525B78(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    uint64_t v5 = *(void *)(v1 + 48);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_122FEFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v21 = sub_1230640((uint64_t)v22);
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v23;
    }
    uint64_t v14 = sub_1230104(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 18)
  {
    int v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v23 = v15 + 1;
      int v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_152D560(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v23;
      }
      int v15 = (char *)sub_1230194(a3, v19, v16);
      uint64_t v23 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_1230104(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_122F8A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1230194(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1525C64(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1230224(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_122FA20(v6, (unint64_t)v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_152647C(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_12303D0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1526CD4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_122FB48(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_12304B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124D480((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    unsigned int v10 = *(std::string **)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      unsigned int v10 = (std::string *)sub_1230640((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_252E608;
    }
    sub_11A7934(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_12305D8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_152741C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1230630@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "gpi.routing.transit.VehiclePositionSnapshot");
}

uint64_t sub_1230640(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_249EC08;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

void *sub_12306BC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_249EC88;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_1230758(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_124D50C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1230804(uint64_t a1)
{
  sub_1230758(a1);

  operator delete();
}

uint64_t sub_123083C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14A0568(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if (v5)
  {
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  if ((v5 & 6) != 0)
  {
    *(unsigned char *)(v1 + 60) = 0;
    *(_DWORD *)(v1 + 56) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_12308FC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
        int v15 = (void *)sub_188C244(v14, *(char **)v34, (uint64_t)a3);
        goto LABEL_40;
      case 2u:
        if (v9 != 16) {
          goto LABEL_33;
        }
        v5 |= 2u;
        unint64_t v16 = v8 + 1;
        int v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v17);
          *(void *)uint64_t v34 = v30;
          *(_DWORD *)(a1 + 56) = v31;
          if (!v30) {
            goto LABEL_50;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v34 = v16;
          *(_DWORD *)(a1 + 56) = v17;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 26) {
          goto LABEL_33;
        }
        uint64_t v19 = v8 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          *(void *)uint64_t v34 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            uint64_t v24 = sub_14A24DC(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, v24);
            uint64_t v20 = *(unsigned __int8 **)v34;
          }
          uint64_t v19 = (char *)sub_1230C0C(a3, v23, v20);
          *(void *)uint64_t v34 = v19;
          if (!v19) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 26) {
            goto LABEL_41;
          }
        }
      case 4u:
        if (v9 != 32) {
          goto LABEL_33;
        }
        v5 |= 4u;
        uint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v34 = v32;
          *(unsigned char *)(a1 + 60) = v33 != 0;
          if (!v32) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)uint64_t v34 = v25;
          *(unsigned char *)(a1 + 60) = v26 != 0;
        }
        goto LABEL_41;
      default:
LABEL_33:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v34;
          }
          int v15 = sub_1885AC0(v9, v29, v8, a3);
LABEL_40:
          *(void *)uint64_t v34 = v15;
          if (!v15) {
            goto LABEL_50;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

uint64_t sub_1230C0C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14A05B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1230C9C(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_14A078C(v12, v14, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v15 = *(unsigned char *)(a1 + 60);
    unsigned char *v4 = 32;
    v4[1] = v15;
    v4 += 2;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1230EB8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_14A08D4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 4) != 0) {
      v2 += 2;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1230FEC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_124D60C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123112C()
{
  return 1;
}

void *sub_1231134@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_rpc.proto.ABExecutionSpec");
}

uint64_t sub_1231144(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12311FC(uint64_t a1)
{
  sub_1231144(a1);

  operator delete();
}

uint64_t sub_1231234(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 34) = 0;
  *(_WORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_12312B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)std::string::size_type v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)std::string::size_type v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 32);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        int v17 = (void *)sub_188C244(v16, *(char **)v35, (uint64_t)a3);
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 4u;
        unint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v19);
          *(void *)std::string::size_type v35 = v29;
          *(unsigned char *)(a1 + 40) = v30 != 0;
          if (!v29) {
            goto LABEL_52;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_22:
          *(void *)std::string::size_type v35 = v18;
          *(unsigned char *)(a1 + 40) = v19 != 0;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_33;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v22);
          *(void *)std::string::size_type v35 = v31;
          *(unsigned char *)(a1 + 41) = v32 != 0;
          if (!v31) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_27:
          *(void *)std::string::size_type v35 = v21;
          *(unsigned char *)(a1 + 41) = v22 != 0;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_33;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v8, v25);
          *(void *)std::string::size_type v35 = v33;
          *(unsigned char *)(a1 + 42) = v34 != 0;
          if (!v33) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_32:
          *(void *)std::string::size_type v35 = v24;
          *(unsigned char *)(a1 + 42) = v25 != 0;
        }
        goto LABEL_41;
      default:
LABEL_33:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            BOOL v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = *(char **)v35;
          }
          int v17 = sub_1885AC0(v9, v28, v8, a3);
LABEL_40:
          *(void *)std::string::size_type v35 = v17;
          if (!v17) {
            goto LABEL_52;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)std::string::size_type v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

unsigned char *sub_12315F0(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 40);
  unsigned char *v4 = 24;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 41);
  unsigned char *v4 = 32;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 0x10) != 0)
  {
LABEL_15:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 42);
    unsigned char *v4 = 40;
    v4[1] = v9;
    v4 += 2;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unsigned int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unsigned int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1231798(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      return v2;
    }
    goto LABEL_7;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_7:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  return v2;
}

uint64_t sub_1231834(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 3) != 0)
  {
    uint64_t result = sub_1231798(a1);
  }
  else
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t result = v5 + v9 + v6 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  uint64_t v11 = result + 2;
  if ((v2 & 4) == 0) {
    uint64_t v11 = result;
  }
  if ((v2 & 8) != 0) {
    v11 += 2;
  }
  if ((v2 & 0x10) != 0) {
    v11 += 2;
  }
  if ((v2 & 0x1C) != 0) {
    uint64_t result = v11;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1231940(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_20;
    }
LABEL_19:
    v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[1].__r_.__value_.__s.__data_[18] = *(unsigned char *)(a2 + 42);
      goto LABEL_8;
    }
LABEL_20:
    v3[1].__r_.__value_.__s.__data_[17] = *(unsigned char *)(a2 + 41);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1231A58(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 3) == 0;
}

void *sub_1231A6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_rpc.proto.ABBranchTrace");
}

uint64_t sub_1231A7C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_124D58C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1231B28(uint64_t a1)
{
  sub_1231A7C(a1);

  operator delete();
}

uint64_t sub_1231B60(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1231234(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 48) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1231C14(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 8);
      BOOL v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        BOOL v27 = (uint64_t *)*v27;
      }
      BOOL v28 = (std::string *)sub_1880F84((void *)(a1 + 48), v27);
      uint64_t v16 = (void *)sub_188C244(v28, *(char **)v31, (uint64_t)a3);
LABEL_39:
      *(void *)uint64_t v31 = v16;
      if (!v16) {
        goto LABEL_47;
      }
      goto LABEL_40;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v23 = v8 + 1;
    int v24 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v25 = *v23;
    int v24 = v24 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      int v23 = v8 + 2;
LABEL_35:
      *(void *)uint64_t v31 = v23;
      *(_DWORD *)(a1 + 56) = v24;
      goto LABEL_40;
    }
    uint64_t v29 = sub_188C0D0((uint64_t)v8, v24);
    *(void *)uint64_t v31 = v29;
    *(_DWORD *)(a1 + 56) = v30;
    if (!v29) {
      goto LABEL_47;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    int v17 = v8 - 1;
    while (1)
    {
      unint64_t v18 = (unsigned __int8 *)(v17 + 1);
      *(void *)uint64_t v31 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        uint64_t v22 = sub_1232448(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, v22);
        unint64_t v18 = *(unsigned __int8 **)v31;
      }
      int v17 = (char *)sub_1231E90(a3, v21, v18);
      *(void *)uint64_t v31 = v17;
      if (!v17) {
        goto LABEL_47;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
        goto LABEL_40;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_39;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  *(void *)uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v31;
}

uint64_t sub_1231E90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12312B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1231F20(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 56);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      uint64_t v4 = sub_12315F0(v12, v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_1232104(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1231834(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_123222C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_124D688((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v10, v12);
    }
    if ((v9 & 2) != 0) {
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1232354(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  do
  {
    int v2 = v1;
    if ((int)v1 < 1) {
      break;
    }
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8 * v1--);
  }
  while ((~*(_DWORD *)(v3 + 16) & 3) == 0);
  return v2 < 1;
}

void *sub_123238C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_rpc.proto.ABExecutionTrace");
}

uint64_t sub_123239C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249ED08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  *(unsigned char *)(result + 60) = 0;
  return result;
}

uint64_t sub_1232448(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249ED88;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(_WORD *)(result + 40) = 0;
  *(unsigned char *)(result + 42) = 0;
  return result;
}

uint64_t sub_12324D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249EE08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(_DWORD *)(result + 56) = 0;
  return result;
}

uint64_t sub_123257C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140C874(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123260C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12326AC(uint64_t a1)
{
  sub_123260C(a1);

  operator delete();
}

uint64_t sub_12326E4(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1232728(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)unint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)unint64_t v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)unint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_1232880(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_123294C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_12329D0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v5 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    unint64_t v7 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    uint64_t result = sub_1881DF4(v5, v4, v7);
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1232A5C()
{
  return 1;
}

void *sub_1232A64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.proto.AutocompleteDebug.WFSTDebug");
}

uint64_t sub_1232A74(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E700)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_123260C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1232B40(uint64_t a1)
{
  sub_1232A74(a1);

  operator delete();
}

uint64_t sub_1232B78(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_12326E4(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1232C0C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1233174((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      unint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1232DCC(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

uint64_t sub_1232DCC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1232728(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1232E5C(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1232880(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1232F8C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_123294C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1233070(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_1233174((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)(uint64_t))(a2 + 32);
      }
      else {
        unint64_t v12 = &off_252E6E0;
      }
      uint64_t result = sub_12329D0(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123315C()
{
  return 1;
}

void *sub_1233164@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.proto.AutocompleteDebug");
}

void *sub_1233174(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249EE88;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

void *sub_12331F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249EF08;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_123327C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_124D820(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12332FC(void *a1)
{
  sub_123327C(a1);

  operator delete();
}

uint64_t sub_1233334(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12339C0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_12333B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1238C14(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = (char *)sub_1233550(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_1233550(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1233A8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_12335E0(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        std::string::size_type v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        std::string::size_type v10 = __dst + 2;
      }
      __dst = sub_1233E1C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1233724(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1234044(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_12337D4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_124DA20((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12338A4()
{
  return 1;
}

void *sub_12338AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionDataExtension.ResultSet");
}

uint64_t sub_12338BC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E758)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_123436C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1233988(uint64_t a1)
{
  sub_12338BC(a1);

  operator delete();
}

uint64_t sub_12339C0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1233A64(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0xC) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1233A64(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x7F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1233A8C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_31;
        }
        v5 |= 4u;
        unint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v32 = v12;
          *(void *)(a1 + 40) = v13;
          goto LABEL_39;
        }
        uint64_t v28 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v32 = v28;
        *(void *)(a1 + 40) = v29;
        if (v28) {
          goto LABEL_39;
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        unint64_t v18 = (void *)sub_188C244(v17, *(char **)v32, (uint64_t)a3);
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_31;
        }
        uint64_t v19 = (char *)(v8 + 1);
        unint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)uint64_t v32 = sub_188C138((uint64_t)v8, (v22 - 128));
          if (!*(void *)v32) {
            goto LABEL_52;
          }
          unint64_t v20 = v30;
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_22:
          *(void *)uint64_t v32 = v19;
        }
        if (sub_130C2F4(v20))
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v20;
        }
        else
        {
          if (*v7) {
            uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v20, v31);
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v23 = *(void *)(a1 + 32);
        if (!v23)
        {
          int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v24 = (void *)*v24;
          }
          sub_1238C9C((uint64_t)v24);
          uint64_t v23 = v25;
          *(void *)(a1 + 32) = v25;
          uint64_t v8 = *(unsigned __int8 **)v32;
        }
        unint64_t v18 = sub_1233D8C(a3, v23, v8);
        goto LABEL_38;
      default:
LABEL_31:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            BOOL v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v32;
          }
          unint64_t v18 = sub_1885AC0(v9, v27, (char *)v8, a3);
LABEL_38:
          *(void *)uint64_t v32 = v18;
          if (!v18) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

char *sub_1233D8C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1234418(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1233E1C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 48);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    unsigned char *v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_12347B8(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1234044(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1234A88(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v8 = *(_DWORD *)(a1 + 48);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v9;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1234190(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      sub_1238C9C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(void *(****)(void *))(a2 + 32);
    }
    else {
      uint64_t v13 = &off_252E790;
    }
    uint64_t result = sub_12342B0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_12342B0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_11;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  result[1].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 36);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_17:
  result[1].__r_.__value_.__s.__data_[13] = *(unsigned char *)(a2 + 37);
  if ((v2 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
LABEL_10:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_11:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1234354()
{
  return 1;
}

void *sub_123435C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionDataExtension.Result");
}

void *sub_123436C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12343E0(void *a1)
{
  sub_123436C(a1);

  operator delete();
}

char *sub_1234418(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v39 + 2;
      }
    }
    uint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_38;
        }
        v5 |= 8u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v39 = v12;
          *(unsigned char *)(a1 + 36) = v13 != 0;
          goto LABEL_45;
        }
        uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v39 = v31;
        *(unsigned char *)(a1 + 36) = v32 != 0;
        if (v31) {
          goto LABEL_45;
        }
        goto LABEL_62;
      case 2u:
        if (v9 != 21) {
          goto LABEL_38;
        }
        int v16 = *(_DWORD *)v8;
        uint64_t v15 = v8 + 4;
        v5 |= 1u;
        *(_DWORD *)(a1 + 24) = v16;
        goto LABEL_20;
      case 3u:
        if (v9 != 29) {
          goto LABEL_38;
        }
        int v17 = *(_DWORD *)v8;
        uint64_t v15 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 28) = v17;
        goto LABEL_20;
      case 4u:
        if (v9 != 37) {
          goto LABEL_38;
        }
        int v18 = *(_DWORD *)v8;
        uint64_t v15 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 32) = v18;
LABEL_20:
        uint64_t v39 = v15;
        goto LABEL_45;
      case 5u:
        if (v9 != 40) {
          goto LABEL_38;
        }
        uint64_t v19 = v8 + 1;
        unint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          uint64_t v39 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
          if (!v39) {
            goto LABEL_62;
          }
          unint64_t v20 = v33;
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v39 = v19;
        }
        if (v20 > 3)
        {
          if (*v7) {
            std::string::size_type v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            std::string::size_type v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v20, v38);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 40) = v20;
        }
        goto LABEL_45;
      case 6u:
        if (v9 != 48) {
          goto LABEL_38;
        }
        v5 |= 0x40u;
        uint64_t v23 = v8 + 1;
        int v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v34 = (char *)sub_188C0D0((uint64_t)v8, v24);
          uint64_t v39 = v34;
          *(_DWORD *)(a1 + 44) = v35;
          if (!v34) {
            goto LABEL_62;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_32:
          uint64_t v39 = v23;
          *(_DWORD *)(a1 + 44) = v24;
        }
        goto LABEL_45;
      case 7u:
        if (v9 != 56) {
          goto LABEL_38;
        }
        v5 |= 0x10u;
        BOOL v26 = v8 + 1;
        uint64_t v27 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, v27);
          uint64_t v39 = v36;
          *(unsigned char *)(a1 + 37) = v37 != 0;
          if (!v36) {
            goto LABEL_62;
          }
        }
        else
        {
          BOOL v26 = v8 + 2;
LABEL_37:
          uint64_t v39 = v26;
          *(unsigned char *)(a1 + 37) = v27 != 0;
        }
        goto LABEL_45;
      default:
LABEL_38:
        if (v9) {
          BOOL v29 = (v9 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v7)
          {
            unint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v39;
          }
          uint64_t v39 = (char *)sub_1885AC0(v9, v30, v8, a3);
          if (!v39) {
            goto LABEL_62;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_62:
        }
          uint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

unsigned char *sub_12347B8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 36);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v8 = *(_DWORD *)(a1 + 24);
  unsigned char *v4 = 21;
  *(_DWORD *)(v4 + 1) = v8;
  v4 += 5;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v9 = *(_DWORD *)(a1 + 28);
  unsigned char *v4 = 29;
  *(_DWORD *)(v4 + 1) = v9;
  v4 += 5;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  unsigned char *v4 = 37;
  *(_DWORD *)(v4 + 1) = v10;
  v4 += 5;
  if ((v6 & 0x20) != 0)
  {
LABEL_19:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_25:
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 48;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 37);
    unsigned char *v4 = 56;
    v4[1] = v17;
    v4 += 2;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1234A88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) != 0)
  {
    uint64_t v2 = 5;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      v2 += 5;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 40);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 11;
      }
      v2 += v5;
    }
    if ((v1 & 0x40) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1234B6C()
{
  return 1;
}

void *sub_1234B74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionDataExtension.ResultFeatureSet");
}

uint64_t sub_1234B84(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_124D920((void *)(a1 + 48));
  sub_124D8A0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1234C54(uint64_t a1)
{
  sub_1234B84(a1);

  operator delete();
}

uint64_t sub_1234C8C(uint64_t a1)
{
  uint64_t result = sub_122AAFC(a1 + 24);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1236888(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 3) != 0)
  {
    if (v6)
    {
      unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v6 & 2) == 0) {
          goto LABEL_15;
        }
        goto LABEL_10;
      }
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
    if ((v6 & 2) == 0) {
      goto LABEL_15;
    }
LABEL_10:
    unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_15:
  if ((v6 & 0xFC) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
    *(_DWORD *)(a1 + 112) = 0;
    *(void *)(a1 + 104) = 0;
  }
  if ((v6 & 0xF00) != 0)
  {
    *(void *)(a1 + 124) = 0;
    *(void *)(a1 + 116) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_1234DA0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v76 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v76, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v76 + 1);
    unsigned int v9 = **(unsigned char **)v76;
    if ((char)**(unsigned char **)v76 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v76, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v76 + 2);
      }
    }
    *(void *)uint64_t v76 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_85;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (void *)(a1 + 72);
        goto LABEL_79;
      case 2u:
        if (v9 != 21) {
          goto LABEL_85;
        }
        int v16 = *(_DWORD *)v8;
        unsigned int v15 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 88) = v16;
        goto LABEL_17;
      case 3u:
        if (v9 != 29) {
          goto LABEL_85;
        }
        int v17 = *(_DWORD *)v8;
        unsigned int v15 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 92) = v17;
LABEL_17:
        *(void *)uint64_t v76 = v15;
        goto LABEL_93;
      case 4u:
        if (v9 != 34) {
          goto LABEL_85;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          *(void *)uint64_t v76 = v18 + 1;
          unint64_t v20 = *(_DWORD **)(a1 + 40);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 32) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_1238F00(*(void *)(a1 + 24));
            uint64_t v22 = sub_188CDC8(a1 + 24, v23);
            uint64_t v19 = *(unsigned __int8 **)v76;
          }
          uint64_t v18 = sub_1235454(a3, v22, v19);
          *(void *)uint64_t v76 = v18;
          if (!v18) {
            goto LABEL_118;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 34) {
            goto LABEL_93;
          }
        }
      case 5u:
        if (v9 != 40) {
          goto LABEL_85;
        }
        v5 |= 0x20u;
        int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_32;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v60 = sub_188C138((uint64_t)v8, v25);
          *(void *)uint64_t v76 = v60;
          *(unsigned char *)(a1 + 104) = v61 != 0;
          if (!v60) {
            goto LABEL_118;
          }
        }
        else
        {
          int v24 = v8 + 2;
LABEL_32:
          *(void *)uint64_t v76 = v24;
          *(unsigned char *)(a1 + 104) = v25 != 0;
        }
        goto LABEL_93;
      case 6u:
        if (v9 != 48) {
          goto LABEL_85;
        }
        v5 |= 0x10u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v62 = sub_188C138((uint64_t)v8, v28);
          *(void *)uint64_t v76 = v62;
          *(void *)(a1 + 96) = v63;
          if (!v62) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_37:
          *(void *)uint64_t v76 = v27;
          *(void *)(a1 + 96) = v28;
        }
        goto LABEL_93;
      case 7u:
        if (v9 != 56) {
          goto LABEL_85;
        }
        v5 |= 0x40u;
        unint64_t v30 = v8 + 1;
        int v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v64 = sub_188C0D0((uint64_t)v8, v31);
          *(void *)uint64_t v76 = v64;
          *(_DWORD *)(a1 + 108) = v65;
          if (!v64) {
            goto LABEL_118;
          }
        }
        else
        {
          unint64_t v30 = v8 + 2;
LABEL_42:
          *(void *)uint64_t v76 = v30;
          *(_DWORD *)(a1 + 108) = v31;
        }
        goto LABEL_93;
      case 8u:
        if (v9 != 64) {
          goto LABEL_85;
        }
        v5 |= 0x80u;
        unint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v66 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)uint64_t v76 = v66;
          *(_DWORD *)(a1 + 112) = v67;
          if (!v66) {
            goto LABEL_118;
          }
        }
        else
        {
          unint64_t v33 = v8 + 2;
LABEL_47:
          *(void *)uint64_t v76 = v33;
          *(_DWORD *)(a1 + 112) = v34;
        }
        goto LABEL_93;
      case 9u:
        if (v9 != 72) {
          goto LABEL_85;
        }
        v5 |= 0x100u;
        uint64_t v36 = v8 + 1;
        int v37 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v38 = *v36;
        int v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v68 = sub_188C0D0((uint64_t)v8, v37);
          *(void *)uint64_t v76 = v68;
          *(_DWORD *)(a1 + 116) = v69;
          if (!v68) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v36 = v8 + 2;
LABEL_52:
          *(void *)uint64_t v76 = v36;
          *(_DWORD *)(a1 + 116) = v37;
        }
        goto LABEL_93;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_85;
        }
        uint64_t v39 = v8 - 1;
        while (1)
        {
          uint64_t v40 = (unsigned __int8 *)(v39 + 1);
          *(void *)uint64_t v76 = v39 + 1;
          std::string::size_type v41 = *(_DWORD **)(a1 + 64);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 56), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 56) = v42 + 1;
            uint64_t v43 = *(void *)&v41[2 * v42 + 2];
          }
          else
          {
            uint64_t v44 = sub_1238E54(*(void *)(a1 + 48));
            uint64_t v43 = sub_188CDC8(a1 + 48, v44);
            uint64_t v40 = *(unsigned __int8 **)v76;
          }
          uint64_t v39 = (char *)sub_12354E4(a3, v43, v40);
          *(void *)uint64_t v76 = v39;
          if (!v39) {
            goto LABEL_118;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 82) {
            goto LABEL_93;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_85;
        }
        v5 |= 0x200u;
        uint64_t v45 = v8 + 1;
        int v46 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_67;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v70 = sub_188C0D0((uint64_t)v8, v46);
          *(void *)uint64_t v76 = v70;
          *(_DWORD *)(a1 + 120) = v71;
          if (!v70) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v45 = v8 + 2;
LABEL_67:
          *(void *)uint64_t v76 = v45;
          *(_DWORD *)(a1 + 120) = v46;
        }
        goto LABEL_93;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_85;
        }
        uint64_t v48 = v8 + 1;
        unint64_t v49 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_72;
        }
        int v50 = *v48;
        int v51 = v49 + (v50 << 7);
        unint64_t v49 = (v51 - 128);
        if (v50 < 0)
        {
          *(void *)uint64_t v76 = sub_188C138((uint64_t)v8, (v51 - 128));
          if (!*(void *)v76) {
            goto LABEL_118;
          }
          unint64_t v49 = v72;
        }
        else
        {
          uint64_t v48 = v8 + 2;
LABEL_72:
          *(void *)uint64_t v76 = v48;
        }
        if (sub_130C2F4(v49))
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 124) = v49;
        }
        else
        {
          if (*v7) {
            uint64_t v75 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v75 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(12, v49, v75);
        }
        goto LABEL_93;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_85;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v52 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
        if (v52) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unsigned int v14 = (void *)(a1 + 80);
LABEL_79:
        std::string::size_type v53 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v54 = (void *)sub_188C244(v53, *(char **)v76, (uint64_t)a3);
        goto LABEL_92;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_85;
        }
        v5 |= 0x800u;
        uint64_t v55 = v8 + 1;
        int v56 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v57 = *v55;
        int v56 = v56 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          uint64_t v73 = sub_188C0D0((uint64_t)v8, v56);
          *(void *)uint64_t v76 = v73;
          *(_DWORD *)(a1 + 128) = v74;
          if (!v73) {
            goto LABEL_118;
          }
        }
        else
        {
          uint64_t v55 = v8 + 2;
LABEL_84:
          *(void *)uint64_t v76 = v55;
          *(_DWORD *)(a1 + 128) = v56;
        }
        goto LABEL_93;
      default:
LABEL_85:
        if (v9) {
          BOOL v58 = (v9 & 7) == 4;
        }
        else {
          BOOL v58 = 1;
        }
        if (!v58)
        {
          if (*v7)
          {
            unint64_t v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v76;
          }
          uint64_t v54 = sub_1885AC0(v9, v59, v8, a3);
LABEL_92:
          *(void *)uint64_t v76 = v54;
          if (!v54) {
            goto LABEL_118;
          }
LABEL_93:
          if (sub_11947B8((uint64_t)a3, (char **)v76, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_118:
        }
          *(void *)uint64_t v76 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v76;
    }
  }
}

char *sub_1235454(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12373CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12354E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12369B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1235574(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v7 = *(_DWORD *)(a1 + 88);
  unsigned char *v4 = 21;
  *(_DWORD *)(v4 + 1) = v7;
  v4 += 5;
  if ((v6 & 8) != 0)
  {
LABEL_9:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v8 = *(_DWORD *)(a1 + 92);
    unsigned char *v4 = 29;
    *(_DWORD *)(v4 + 1) = v8;
    v4 += 5;
  }
LABEL_12:
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 34;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        unint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        unint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1237668(v11, v13, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v14 = *(unsigned char *)(a1 + 104);
    unsigned char *v4 = 40;
    v4[1] = v14;
    v4 += 2;
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(void *)(a1 + 96);
    unsigned char *v4 = 48;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 108);
    unsigned char *v4 = 56;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 112);
    unsigned char *v4 = 64;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v24 = *(_DWORD *)(a1 + 116);
    unsigned char *v4 = 72;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unsigned int v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v27 = *(_DWORD *)(a1 + 56);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 82;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        int v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        int v31 = v4 + 2;
      }
      uint64_t v4 = sub_1236D60(v29, v31, a3);
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v32 = *(_DWORD *)(a1 + 120);
    unsigned char *v4 = 88;
    v4[1] = v32;
    if (v32 > 0x7F)
    {
      v4[1] = v32 | 0x80;
      unsigned int v33 = v32 >> 7;
      v4[2] = v32 >> 7;
      v4 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v34 = v33 >> 14;
          v33 >>= 7;
          *v4++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v35 = *(int *)(a1 + 124);
    unsigned char *v4 = 96;
    v4[1] = v35;
    if (v35 > 0x7F)
    {
      v4[1] = v35 | 0x80;
      unint64_t v36 = v35 >> 7;
      v4[2] = v35 >> 7;
      v4 += 3;
      if (v35 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v37 = v36 >> 14;
          v36 >>= 7;
          *v4++ = v36;
        }
        while (v37);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v38 = *(_DWORD *)(a1 + 128);
    unsigned char *v4 = 112;
    v4[1] = v38;
    if (v38 > 0x7F)
    {
      v4[1] = v38 | 0x80;
      unsigned int v39 = v38 >> 7;
      v4[2] = v38 >> 7;
      v4 += 3;
      if (v38 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v40 = v39 >> 14;
          v39 >>= 7;
          *v4++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v41 = *(void *)(a1 + 8);
  if ((v41 & 1) == 0) {
    return v4;
  }
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v43 + 31) < 0)
  {
    uint64_t v44 = *(void **)(v43 + 8);
    uint64_t v45 = *(void *)(v43 + 16);
  }
  else
  {
    uint64_t v44 = (void *)(v43 + 8);
    LODWORD(v45) = *(unsigned __int8 *)(v43 + 31);
  }
  if (*a3 - (void)v4 >= (int)v45)
  {
    uint64_t v46 = (int)v45;
    memcpy(v4, v44, (int)v45);
    v4 += v46;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v44, v45, v4);
}

uint64_t sub_1235B98(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12377F4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1236F84(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v15)
  {
    if (v15)
    {
      unint64_t v16 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
      uint64_t v18 = *(void *)(v16 + 8);
      if ((v17 & 0x80u) == 0) {
        uint64_t v18 = v17;
      }
      v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0)
    {
      unint64_t v19 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v22 = v9 + 5;
    if ((v15 & 4) == 0) {
      uint64_t v22 = v9;
    }
    if ((v15 & 8) != 0) {
      v22 += 5;
    }
    if ((v15 & 0x10) != 0) {
      v22 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v15 & 0x20) != 0) {
      uint64_t v9 = v22 + 2;
    }
    else {
      uint64_t v9 = v22;
    }
    if ((v15 & 0x40) != 0) {
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 108) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 0x80) != 0) {
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if ((v15 & 0xF00) == 0) {
    goto LABEL_43;
  }
  if ((v15 & 0x100) == 0)
  {
    if ((v15 & 0x200) == 0) {
      goto LABEL_40;
    }
LABEL_46:
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 120) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 0x400) == 0)
    {
LABEL_41:
      if ((v15 & 0x800) == 0) {
        goto LABEL_43;
      }
      goto LABEL_42;
    }
    goto LABEL_47;
  }
  v9 += ((9 * (__clz(*(_DWORD *)(a1 + 116) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 0x200) != 0) {
    goto LABEL_46;
  }
LABEL_40:
  if ((v15 & 0x400) == 0) {
    goto LABEL_41;
  }
LABEL_47:
  int v25 = *(_DWORD *)(a1 + 124);
  uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v25 >= 0) {
    uint64_t v27 = v26;
  }
  else {
    uint64_t v27 = 11;
  }
  v9 += v27;
  if ((v15 & 0x800) != 0) {
LABEL_42:
  }
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 128) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_43:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v28 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v9 += v29;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

std::string *sub_1235E88(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_124DAAC((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[2], *(_DWORD *)(a2 + 56));
    uint64_t result = (std::string *)sub_124DB38((uint64_t *)&v3[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__r.__words[2]- LODWORD(v3[2].__r_.__value_.__r.__words[1]));
    int v12 = LODWORD(v3[2].__r_.__value_.__r.__words[1]) + v9;
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__r.__words[2];
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      unint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v18 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[3], v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_35;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[3].__r_.__value_.__l.__size_, v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_36;
    }
LABEL_35:
    LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_37;
    }
LABEL_36:
    HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_38;
    }
LABEL_37:
    v3[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_39;
    }
LABEL_38:
    v3[4].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 104);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      LODWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 112);
      goto LABEL_17;
    }
LABEL_39:
    HIDWORD(v3[4].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 108);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v14 & 0xF00) == 0) {
    goto LABEL_25;
  }
  if ((v14 & 0x100) != 0)
  {
    HIDWORD(v3[4].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 116);
    if ((v14 & 0x200) == 0)
    {
LABEL_21:
      if ((v14 & 0x400) == 0) {
        goto LABEL_22;
      }
LABEL_43:
      HIDWORD(v3[5].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 124);
      if ((v14 & 0x800) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  LODWORD(v3[5].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 120);
  if ((v14 & 0x400) != 0) {
    goto LABEL_43;
  }
LABEL_22:
  if ((v14 & 0x800) != 0) {
LABEL_23:
  }
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 128);
LABEL_24:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v14;
LABEL_25:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12360F8()
{
  return 1;
}

void *sub_1236100@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionDataExtension.QueryFeatureSet");
}

uint64_t sub_1236110(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252E848)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_123436C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12361C8(uint64_t a1)
{
  sub_1236110(a1);

  operator delete();
}

uint64_t sub_1236200(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1233A64(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(void *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1236260(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v24 + 2;
      }
    }
    unsigned int v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      unsigned int v24 = v19;
      *(void *)(a1 + 32) = v20;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v20);
    unsigned int v24 = v22;
    *(void *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      sub_1238C9C((uint64_t)v17);
      uint64_t v16 = v18;
      *(void *)(a1 + 24) = v18;
      uint64_t v8 = v24;
    }
    uint64_t v15 = sub_1233D8C(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    unsigned int v24 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v24;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unsigned int v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

unsigned char *sub_1236444(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    int v4 = sub_12347B8(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_12365D0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1234A88(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1236690(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1238C9C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(void *(****)(void *))(a2 + 24);
      }
      else {
        unint64_t v8 = &off_252E790;
      }
      uint64_t result = sub_12342B0(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1236760()
{
  return 1;
}

void *sub_1236768@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionDataExtension.PreviousResult");
}

uint64_t sub_1236778(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_124D9A0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1236850(uint64_t a1)
{
  sub_1236778(a1);

  operator delete();
}

uint64_t sub_1236888(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1236200(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v7 = *(void *)(v1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v8 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
    }
  }
LABEL_21:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 64) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_12369B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)unsigned int v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_37;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)unsigned int v32 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1238DD8(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = *(unsigned __int8 **)v32;
          }
          int v12 = sub_1236CD0(a3, v16, v13);
          *(void *)unsigned int v32 = v12;
          if (!v12) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_45;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 48);
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_37;
        }
        v5 |= 8u;
        int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v22);
          *(void *)unsigned int v32 = v30;
          *(_DWORD *)(a1 + 72) = v31;
          if (!v30) {
            goto LABEL_52;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_27:
          *(void *)unsigned int v32 = v21;
          *(_DWORD *)(a1 + 72) = v22;
        }
        goto LABEL_45;
      case 4u:
        if (v9 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v24 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 56);
        goto LABEL_36;
      case 5u:
        if (v9 != 42) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v25 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 64);
LABEL_36:
        uint64_t v26 = (std::string *)sub_1880F84(v20, v19);
        uint64_t v27 = (void *)sub_188C244(v26, *(char **)v32, (uint64_t)a3);
        goto LABEL_44;
      default:
LABEL_37:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v32;
          }
          uint64_t v27 = sub_1885AC0(v9, v29, v8, a3);
LABEL_44:
          *(void *)unsigned int v32 = v27;
          if (!v27) {
            goto LABEL_52;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)unsigned int v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

char *sub_1236CD0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1236260(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1236D60(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1236444(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v11 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 72);
    *__dst = 24;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0) {
    __dst = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v11 & 4) != 0) {
    __dst = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return __dst;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(__dst, v18, (int)v19);
    __dst += v20;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, __dst);
}

uint64_t sub_1236F84(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_12365D0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_15;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    unint64_t v14 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_23;
  }
  unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_23:
  unint64_t v17 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
LABEL_14:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_15:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v20 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v2 += v21;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1237144(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_124DBC4(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_10;
    }
LABEL_21:
    unint64_t v17 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v17, v19);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12372E4()
{
  return 1;
}

void *sub_12372EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionDataExtension.PreviousResultSet");
}

void *sub_12372FC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1237378(void *a1)
{
  sub_12372FC(a1);

  operator delete();
}

uint64_t sub_12373B0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12373CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 21) {
      goto LABEL_34;
    }
    *(_DWORD *)(a1 + 40) = *(_DWORD *)v8;
    uint64_t v25 = v8 + 4;
    int v5 = 1;
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1)
  {
    if (v9 == 8)
    {
      uint64_t v13 = v8 - 1;
      while (1)
      {
        uint64_t v25 = v13 + 1;
        unint64_t v14 = v13[1];
        std::string::size_type v15 = v13 + 2;
        if (v13[1] < 0)
        {
          int v16 = *v15;
          int v17 = v14 + (v16 << 7);
          unint64_t v14 = (v17 - 128);
          if (v16 < 0)
          {
            uint64_t v25 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
            if (!v25) {
              goto LABEL_47;
            }
            unint64_t v14 = v20;
            goto LABEL_16;
          }
          std::string::size_type v15 = v13 + 3;
        }
        uint64_t v25 = v15;
LABEL_16:
        if (sub_14FCE30(v14))
        {
          uint64_t v18 = *(unsigned int *)(a1 + 24);
          if (v18 == *(_DWORD *)(a1 + 28))
          {
            int v19 = v18 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v18 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
            int v19 = v18 + 1;
          }
          *(_DWORD *)(a1 + 24) = v19;
        }
        else
        {
          if (*v7) {
            uint64_t v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v14, v21);
        }
        uint64_t v13 = v25;
        if (*(void *)a3 <= (unint64_t)v25 || *v25 != 8) {
          goto LABEL_42;
        }
      }
    }
    if (v9 == 10)
    {
      *(void *)&long long v26 = a1 + 24;
      *((void *)&v26 + 1) = sub_14FCE30;
      uint64_t v27 = a1 + 8;
      int v28 = 1;
      int v22 = sub_1112E88((uint64_t)a3, v8, &v26);
      goto LABEL_41;
    }
  }
LABEL_34:
  if (v9) {
    BOOL v23 = (v9 & 7) == 4;
  }
  else {
    BOOL v23 = 1;
  }
  if (!v23)
  {
    if (*v7)
    {
      uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    int v22 = (char *)sub_1885AC0(v9, v24, v8, a3);
LABEL_41:
    uint64_t v25 = v22;
    if (!v22) {
      goto LABEL_47;
    }
    goto LABEL_42;
  }
  if (v8) {
    a3[10].i32[0] = v9 - 1;
  }
  else {
LABEL_47:
  }
    uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

char *sub_1237668(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    int v11 = *(_DWORD *)(a1 + 40);
    *__dst = 21;
    *(_DWORD *)(__dst + 1) = v11;
    __dst += 5;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return __dst;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    std::string::size_type v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    std::string::size_type v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(__dst, v15, (int)v16);
    __dst += v17;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, __dst);
}

uint64_t sub_12377F4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  if (*(unsigned char *)(a1 + 16)) {
    v6 += 5;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v6 += v10;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_1237894(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v8 = *(_DWORD *)(a2 + 40);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = v8;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1237954()
{
  return 1;
}

void *sub_123795C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteSessionDataExtension.IntentFeature");
}

uint64_t sub_123796C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1237A14(uint64_t a1)
{
  sub_123796C(a1);

  operator delete();
}

uint64_t sub_1237A4C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
  if ((v3 & 0x3E) != 0)
  {
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1237AE4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  int v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (char *)(*(void *)v41 + 1);
    unsigned int v10 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        uint64_t v9 = (char *)sub_188C180(*(uint64_t *)v41, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (char *)(*(void *)v41 + 2);
      }
    }
    *(void *)uint64_t v41 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 9) {
          goto LABEL_44;
        }
        uint64_t v14 = *(void *)v9;
        uint64_t v13 = v9 + 8;
        v5 |= 2u;
        *(void *)(a1 + 56) = v14;
        goto LABEL_15;
      case 2u:
        if (v10 != 17) {
          goto LABEL_44;
        }
        uint64_t v15 = *(void *)v9;
        uint64_t v13 = v9 + 8;
        v5 |= 4u;
        *(void *)(a1 + 64) = v15;
        goto LABEL_15;
      case 3u:
        if (v10 != 25) {
          goto LABEL_44;
        }
        uint64_t v16 = *(void *)v9;
        uint64_t v13 = v9 + 8;
        v5 |= 8u;
        *(void *)(a1 + 72) = v16;
LABEL_15:
        *(void *)uint64_t v41 = v13;
        goto LABEL_52;
      case 4u:
        if (v10 != 32) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        uint64_t v17 = v9 + 1;
        int v18 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v37 = sub_188C0D0((uint64_t)v9, v18);
          *(void *)uint64_t v41 = v37;
          *(_DWORD *)(a1 + 80) = v38;
          if (!v37) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v17 = v9 + 2;
LABEL_20:
          *(void *)uint64_t v41 = v17;
          *(_DWORD *)(a1 + 80) = v18;
        }
        goto LABEL_52;
      case 5u:
        if (v10 != 40) {
          goto LABEL_44;
        }
        unint64_t v20 = v9 + 1;
        unint64_t v21 = *v9;
        if ((*v9 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)uint64_t v41 = sub_188C138((uint64_t)v9, (v23 - 128));
          if (!*(void *)v41) {
            goto LABEL_65;
          }
          unint64_t v21 = v39;
        }
        else
        {
          unint64_t v20 = v9 + 2;
LABEL_25:
          *(void *)uint64_t v41 = v20;
        }
        if (v21 > 5)
        {
          if (*v8) {
            unsigned int v40 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v21, v40);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 84) = v21;
        }
        goto LABEL_52;
      case 6u:
        if (v10 != 50) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v25 = (uint64_t *)*v25;
        }
        long long v26 = (std::string *)sub_1880F84((void *)(a1 + 48), v25);
        uint64_t v27 = (void *)sub_188C244(v26, *(char **)v41, (uint64_t)a3);
        goto LABEL_51;
      case 7u:
        if (v10 != 58) {
          goto LABEL_44;
        }
        int v28 = v9 - 1;
        while (1)
        {
          uint64_t v29 = (char *)(v28 + 1);
          *(void *)uint64_t v41 = v28 + 1;
          uint64_t v30 = *(_DWORD **)(a1 + 40);
          if (v30 && (uint64_t v31 = *(int *)(a1 + 32), (int)v31 < *v30))
          {
            *(_DWORD *)(a1 + 32) = v31 + 1;
            unsigned int v32 = *(std::string **)&v30[2 * v31 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *unsigned int v34 = v33;
            v34[1] = sub_3A6EDC;
            void *v33 = 0;
            v33[1] = 0;
            int v33[2] = 0;
            unsigned int v32 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v33);
            uint64_t v29 = *(char **)v41;
          }
          int v28 = sub_188C244(v32, v29, (uint64_t)a3);
          *(void *)uint64_t v41 = v28;
          if (!v28) {
            goto LABEL_65;
          }
          if (*(void *)a3 <= (unint64_t)v28 || *v28 != 58) {
            goto LABEL_52;
          }
        }
      default:
LABEL_44:
        if (v10) {
          BOOL v35 = (v10 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v8)
          {
            unint64_t v36 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(char **)v41;
          }
          uint64_t v27 = sub_1885AC0(v10, v36, v9, a3);
LABEL_51:
          *(void *)uint64_t v41 = v27;
          if (!v27) {
            goto LABEL_65;
          }
LABEL_52:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_65:
        }
          *(void *)uint64_t v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_1237ED8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 64);
  char *v4 = 17;
  *(void *)(v4 + 1) = v8;
  v4 += 9;
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 72);
  char *v4 = 25;
  *(void *)(v4 + 1) = v9;
  v4 += 9;
  if ((v6 & 0x10) != 0)
  {
LABEL_15:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 80);
    char *v4 = 32;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_21:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 84);
    char *v4 = 40;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 32);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      int v19 = *(void **)(*(void *)(a1 + 40) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_41;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        char *v4 = 58;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          int v19 = (void *)*v19;
        }
        unint64_t v21 = v4 + 2;
        memcpy(v21, v19, v20);
        unint64_t v4 = &v21[v20];
        goto LABEL_39;
      }
LABEL_41:
      unint64_t v4 = (char *)sub_188A868(a3, 7, (uint64_t)v19, v4);
LABEL_39:
      v17 += 8;
    }
    while (v18 != v17);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1238214(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 0x3F) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0) {
      v3 += 9;
    }
    if ((v7 & 4) != 0) {
      v3 += 9;
    }
    if ((v7 & 8) != 0) {
      v3 += 9;
    }
    if ((v7 & 0x10) != 0) {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 0x20) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 84);
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v11 >= 0) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 11;
      }
      v3 += v13;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_123837C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *unint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      int v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v13 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_21;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    v3[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
LABEL_22:
    v3[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
      goto LABEL_12;
    }
LABEL_23:
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_12384EC()
{
  return 1;
}

void *sub_12384F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntryExtension.Features");
}

void *sub_1238504(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1238578(void *a1)
{
  sub_1238504(a1);

  operator delete();
}

uint64_t sub_12385B0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_WORD *)(a1 + 48) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_12385DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v28 + 1;
    unsigned int v9 = *v28;
    if (*v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v28 + 2;
      }
    }
    int v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_26;
        }
        uint64_t v13 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_15;
      case 2u:
        if (v9 != 17) {
          goto LABEL_26;
        }
        uint64_t v14 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_15;
      case 3u:
        if (v9 != 25) {
          goto LABEL_26;
        }
        uint64_t v15 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
LABEL_15:
        int v28 = v12;
        goto LABEL_33;
      case 4u:
        if (v9 != 32) {
          goto LABEL_26;
        }
        v5 |= 8u;
        unint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          unint64_t v24 = (char *)sub_188C138((uint64_t)v8, v17);
          int v28 = v24;
          *(unsigned char *)(a1 + 48) = v25 != 0;
          if (!v24) {
            goto LABEL_42;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_20:
          int v28 = v16;
          *(unsigned char *)(a1 + 48) = v17 != 0;
        }
        goto LABEL_33;
      case 5u:
        if (v9 != 40) {
          goto LABEL_26;
        }
        v5 |= 0x10u;
        int v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v26 = (char *)sub_188C138((uint64_t)v8, v20);
          int v28 = v26;
          *(unsigned char *)(a1 + 49) = v27 != 0;
          if (!v26) {
            goto LABEL_42;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_25:
          int v28 = v19;
          *(unsigned char *)(a1 + 49) = v20 != 0;
        }
        goto LABEL_33;
      default:
LABEL_26:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            int v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v28;
          }
          int v28 = (char *)sub_1885AC0(v9, v23, v8, a3);
          if (!v28) {
            goto LABEL_42;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_42:
        }
          int v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v28;
    }
  }
}

_OWORD *sub_1238878(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)int v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)int v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)int v4 = 32;
  *((unsigned char *)v4 + 1) = v10;
  int v4 = (_OWORD *)((char *)v4 + 2);
  if ((v6 & 0x10) != 0)
  {
LABEL_19:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 49);
    *(unsigned char *)int v4 = 40;
    *((unsigned char *)v4 + 1) = v11;
    int v4 = (_OWORD *)((char *)v4 + 2);
  }
LABEL_22:
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    return (_OWORD *)((char *)v4 + v17);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1238A50(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1238AD8(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    result[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_13:
  result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
  if ((v2 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    result[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
LABEL_8:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_9:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1238B5C()
{
  return 1;
}

void *sub_1238B64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AutocompleteEntryExtension.RankingFeatures");
}

uint64_t sub_1238B74(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249EF88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1238C14(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249F008;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_DWORD *)(result + 48) = 0;
  return result;
}

double sub_1238C9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_249F088;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  return result;
}

double sub_1238D18(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_249F108;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = 0;
  *(void *)(v2 + 72) = &qword_2550250;
  *(void *)(v2 + 80) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 116) = 0u;
  return result;
}

void *sub_1238DD8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_249F188;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1238E54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249F208;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_1238F00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249F288;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

double sub_1238F9C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_249F308;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  return result;
}

double sub_123904C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_249F388;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_WORD *)(v2 + 48) = 0;
  return result;
}

uint64_t sub_12390CC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  int v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1239174(uint64_t a1)
{
  sub_12390CC(a1);

  operator delete();
}

uint64_t sub_12391AC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1239230(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  unint64_t v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    unint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      unint64_t v24 = (uint64_t *)*v24;
    }
    uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    uint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      int v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *BOOL v22 = v21;
        v22[1] = sub_3A6EDC;
        void *v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_1239484(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        char *v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_1239610(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_12396F0()
{
  return 1;
}

void *sub_12396F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.proto.BrandDisplayName.NameAndLanguage");
}

void *sub_1239708(void *result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *uint64_t result = off_249F488;
  result[1] = v3;
  result[2] = 0;
  result[3] = a2;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_1239740(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_249F488;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_124DCD0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_1239834(_Unwind_Exception *a1)
{
  sub_124DC50(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_123987C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_124DC50(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_12398FC(void *a1)
{
  sub_123987C(a1);

  operator delete();
}

uint64_t sub_1239934(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_12391AC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_12399B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    int v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      int v21 = v8 + 2;
LABEL_34:
      uint64_t v26 = v21;
      *(void *)(a1 + 48) = v22;
      int v5 = 1;
      goto LABEL_35;
    }
    unint64_t v24 = (char *)sub_188C138((uint64_t)v8, v22);
    uint64_t v26 = v24;
    *(void *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_42;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    uint64_t v15 = v8 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v26 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_123A0B0(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = (unsigned __int8 *)v26;
      }
      uint64_t v15 = (char *)sub_1239BE0(a3, v19, v16);
      uint64_t v26 = v15;
      if (!v15) {
        goto LABEL_42;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_35;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_42:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

uint64_t sub_1239BE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1239230(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1239C70(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_1239484(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1239E34(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1239610(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1239F0C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_124DCD0(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v9 = *(void *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_1239FF8(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_1239934((uint64_t)result);
    return sub_1239F0C(v4, a2);
  }
  return result;
}

uint64_t sub_123A044()
{
  return 1;
}

__n128 sub_123A04C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(a1 + 16);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a2 + 24);
  *(__n128 *)(a1 + 24) = result;
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = v4;
  uint64_t v6 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = v6;
  uint64_t v7 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a2 + 48) = v7;
  return result;
}

void *sub_123A0A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "learner.proto.BrandDisplayName");
}

void *sub_123A0B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *__n128 result = &off_249F408;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_123A154(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *__n128 result = off_249F488;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  return result;
}

uint64_t sub_123A1F0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123A2A8(uint64_t a1)
{
  sub_123A1F0(a1);

  operator delete();
}

uint64_t sub_123A2E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_123A35C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 32);
        goto LABEL_27;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v18 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 24);
LABEL_27:
      uint64_t v19 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
      goto LABEL_28;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      BOOL v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
LABEL_28:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_34;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_34:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_123A504(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_123A5F0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_123A6CC()
{
  return 1;
}

void *sub_123A6D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.ProviderRule");
}

uint64_t sub_123A6E4(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252E900 && *(void *)(a1 + 32))
  {
    sub_1421660();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123A7B0(uint64_t a1)
{
  sub_123A6E4(a1);

  operator delete();
}

uint64_t sub_123A7E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_141F66C(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_123A87C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_144B03C((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_123AA3C(a3, v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      BOOL v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

uint64_t sub_123AA3C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_142169C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_123AACC(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1421A00(v7, (unint64_t)v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_123ABFC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1421C28(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_123ACE0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_144B03C((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(void *(****)(void *))(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2538030;
      }
      uint64_t result = sub_141F818(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123ADCC()
{
  return 1;
}

void *sub_123ADD4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.UIPVendorInfo");
}

uint64_t sub_123ADE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0x3F00) != 0)
  {
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_123AE30(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_123AE54(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140D100(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123AEE4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CA2E4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123AF74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1453364(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B004(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12D0F6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B094(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1412B50(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B124(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_173FB7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B1B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15BC280(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B244(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141878C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B2D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_140561C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B364(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_124AED8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B3F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141D264(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B484(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1418130(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B514(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_141A438(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B5A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F7018(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B634(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_124B568(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B6C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1411B5C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B754(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_143A500(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B7E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15A2BB0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123B874(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1442580(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B904(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123A35C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123B994(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123A87C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123BA24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1437C8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123BAB4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123C5B0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123BB44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123CA78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123BBD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123CF34(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123BC64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1430DEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123BCF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14486F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_123BD84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14141F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_123BE14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123C1DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

std::string *sub_123BEA4(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_25;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_26;
    }
LABEL_25:
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
LABEL_26:
    result[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_28;
    }
LABEL_27:
    result[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
LABEL_28:
    result[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      result[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_29:
    result[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_21;
  }
  if ((v2 & 0x100) != 0)
  {
    result[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
    if ((v2 & 0x200) == 0)
    {
LABEL_15:
      if ((v2 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  result[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
  if ((v2 & 0x400) == 0)
  {
LABEL_16:
    if ((v2 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_34;
  }
LABEL_33:
  result[4].__r_.__value_.__l.__size_ = *(void *)(a2 + 104);
  if ((v2 & 0x800) == 0)
  {
LABEL_17:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_18;
    }
LABEL_35:
    result[5].__r_.__value_.__r.__words[0] = *(void *)(a2 + 120);
    if ((v2 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_34:
  result[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
  if ((v2 & 0x1000) != 0) {
    goto LABEL_35;
  }
LABEL_18:
  if ((v2 & 0x2000) != 0) {
LABEL_19:
  }
    result[5].__r_.__value_.__l.__size_ = *(void *)(a2 + 128);
LABEL_20:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_21:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_123BFCC(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123C018(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_13F6EB4(*(void *)(*(void *)(v4 + 32) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

uint64_t sub_123C0A4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 24);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_1413F2C(*(void *)(*(void *)(v4 + 32) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_123C130(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123C1A4(void *a1)
{
  sub_123C130(a1);

  operator delete();
}

char *sub_123C1DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v18 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
    goto LABEL_29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v18 + 1;
    unsigned int v8 = *v18;
    if (*v18 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v18, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v18 + 2;
      }
    }
    uint64_t v18 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 17)
      {
        uint64_t v15 = *(void *)v7;
        uint64_t v14 = v7 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v15;
LABEL_23:
        uint64_t v18 = v14;
        goto LABEL_24;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 9)
    {
      uint64_t v16 = *(void *)v7;
      uint64_t v14 = v7 + 8;
      v5 |= 1u;
      *(void *)(a1 + 24) = v16;
      goto LABEL_23;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v18;
    }
    uint64_t v18 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v18) {
      goto LABEL_30;
    }
LABEL_24:
    if (sub_11947B8((uint64_t)a3, &v18, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v18 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 16) |= v5;
  return v18;
}

_OWORD *sub_123C34C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 17;
    *(void *)((char *)v4 + 1) = v8;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    return (_OWORD *)((char *)v4 + v14);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_123C468(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) != 0) {
    v2 += 9;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_123C4C4()
{
  return 1;
}

void *sub_123C4CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.PopularityScoreVariants");
}

void *sub_123C4DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123C550(void *a1)
{
  sub_123C4DC(a1);

  operator delete();
}

uint64_t sub_123C588(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_123C5B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_33;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 8) {
      goto LABEL_12;
    }
    v5 |= 2u;
    uint64_t v14 = v7 + 1;
    int v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v16 = *v14;
    int v15 = v15 + (v16 << 7) - 128;
    if ((v16 & 0x80000000) == 0)
    {
      uint64_t v14 = v7 + 2;
LABEL_25:
      uint64_t v20 = v14;
      *(_DWORD *)(a1 + 32) = v15;
      goto LABEL_26;
    }
    uint64_t v17 = (char *)sub_188C0D0((uint64_t)v7, v15);
    uint64_t v20 = v17;
    *(_DWORD *)(a1 + 32) = v18;
    if (!v17) {
      goto LABEL_34;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_33;
    }
  }
  if (v8 == 17)
  {
    v5 |= 1u;
    *(void *)(a1 + 24) = *(void *)v7;
    uint64_t v20 = v7 + 8;
    goto LABEL_26;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    uint64_t v20 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v20) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_33;
  }
LABEL_34:
  uint64_t v20 = 0;
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

unsigned char *sub_123C760(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_123C8C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_123C940()
{
  return 1;
}

void *sub_123C948@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.TemporalPopularityData");
}

uint64_t sub_123C958(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123C9F8(uint64_t a1)
{
  sub_123C958(a1);

  operator delete();
}

uint64_t sub_123CA30(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_123CA78(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = (char *)(*(void *)v19 + 1);
    unsigned int v8 = **(unsigned char **)v19;
    if ((char)**(unsigned char **)v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180(*(uint64_t *)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = (char *)(*(void *)v19 + 2);
      }
    }
    *(void *)uint64_t v19 = v7;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_12;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
    uint64_t v14 = (void *)sub_188C244(v17, *(char **)v19, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v19 = v14;
    if (!v14) {
      goto LABEL_31;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 == 25)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    *(void *)uint64_t v19 = v7 + 8;
    goto LABEL_25;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = *(char **)v19;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  *(void *)uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v19;
}

char *sub_123CC14(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 25;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    uint64_t v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    uint64_t v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_123CD18(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    else
    {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 9;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_123CDB8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0) {
      v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123CE70()
{
  return 1;
}

void *sub_123CE78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.LocalPopularityData");
}

void *sub_123CE88(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123CEFC(void *a1)
{
  sub_123CE88(a1);

  operator delete();
}

char *sub_123CF34(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_40;
        }
        uint64_t v13 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 24) = v13;
        goto LABEL_37;
      case 2u:
        if (v9 != 17) {
          goto LABEL_40;
        }
        uint64_t v14 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 2u;
        *(void *)(a1 + 32) = v14;
        goto LABEL_37;
      case 3u:
        if (v9 != 25) {
          goto LABEL_40;
        }
        uint64_t v15 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v15;
        goto LABEL_37;
      case 4u:
        if (v9 != 33) {
          goto LABEL_40;
        }
        uint64_t v16 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v16;
        goto LABEL_37;
      case 5u:
        if (v9 != 41) {
          goto LABEL_40;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v17;
        goto LABEL_37;
      case 6u:
        if (v9 != 49) {
          goto LABEL_40;
        }
        uint64_t v18 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x20u;
        *(void *)(a1 + 64) = v18;
        goto LABEL_37;
      case 7u:
        if (v9 != 57) {
          goto LABEL_40;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x40u;
        *(void *)(a1 + 72) = v19;
        goto LABEL_37;
      case 8u:
        if (v9 != 65) {
          goto LABEL_40;
        }
        uint64_t v20 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x80u;
        *(void *)(a1 + 80) = v20;
        goto LABEL_37;
      case 9u:
        if (v9 != 73) {
          goto LABEL_40;
        }
        uint64_t v21 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x100u;
        *(void *)(a1 + 88) = v21;
        goto LABEL_37;
      case 0xAu:
        if (v9 != 81) {
          goto LABEL_40;
        }
        uint64_t v22 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x200u;
        *(void *)(a1 + 96) = v22;
        goto LABEL_37;
      case 0xBu:
        if (v9 != 89) {
          goto LABEL_40;
        }
        uint64_t v23 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x400u;
        *(void *)(a1 + 104) = v23;
        goto LABEL_37;
      case 0xCu:
        if (v9 != 97) {
          goto LABEL_40;
        }
        uint64_t v24 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x800u;
        *(void *)(a1 + 112) = v24;
        goto LABEL_37;
      case 0xDu:
        if (v9 != 105) {
          goto LABEL_40;
        }
        uint64_t v25 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x1000u;
        *(void *)(a1 + 120) = v25;
        goto LABEL_37;
      case 0xEu:
        if (v9 != 113) {
          goto LABEL_40;
        }
        uint64_t v26 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 0x2000u;
        *(void *)(a1 + 128) = v26;
LABEL_37:
        uint64_t v29 = v12;
        goto LABEL_38;
      default:
LABEL_40:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v29;
          }
          uint64_t v29 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v29) {
            goto LABEL_51;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          uint64_t v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v29;
    }
  }
}

_OWORD *sub_123D250(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    int v4 = (_OWORD *)((char *)v4 + 9);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 32);
  *(unsigned char *)int v4 = 17;
  *(void *)((char *)v4 + 1) = v8;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 40);
  *(unsigned char *)int v4 = 25;
  *(void *)((char *)v4 + 1) = v9;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_25:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 48);
  *(unsigned char *)int v4 = 33;
  *(void *)((char *)v4 + 1) = v10;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_28:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 56);
  *(unsigned char *)int v4 = 41;
  *(void *)((char *)v4 + 1) = v11;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_31:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 64);
  *(unsigned char *)int v4 = 49;
  *(void *)((char *)v4 + 1) = v12;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_37;
  }
LABEL_34:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *(unsigned char *)int v4 = 57;
  *(void *)((char *)v4 + 1) = v13;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 80);
  *(unsigned char *)int v4 = 65;
  *(void *)((char *)v4 + 1) = v14;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 88);
  *(unsigned char *)int v4 = 73;
  *(void *)((char *)v4 + 1) = v15;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_46;
  }
LABEL_43:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 96);
  *(unsigned char *)int v4 = 81;
  *(void *)((char *)v4 + 1) = v16;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_49;
  }
LABEL_46:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v17 = *(void *)(a1 + 104);
  *(unsigned char *)int v4 = 89;
  *(void *)((char *)v4 + 1) = v17;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_52;
  }
LABEL_49:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 112);
  *(unsigned char *)int v4 = 97;
  *(void *)((char *)v4 + 1) = v18;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_55;
  }
LABEL_52:
  if (*(void *)a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 120);
  *(unsigned char *)int v4 = 105;
  *(void *)((char *)v4 + 1) = v19;
  int v4 = (_OWORD *)((char *)v4 + 9);
  if ((v6 & 0x2000) != 0)
  {
LABEL_55:
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v20 = *(void *)(a1 + 128);
    *(unsigned char *)int v4 = 113;
    *(void *)((char *)v4 + 1) = v20;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
LABEL_58:
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    return (_OWORD *)((char *)v4 + v26);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_123D644(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x80) != 0) {
      v2 += 9;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  if ((v1 & 0x3F00) != 0)
  {
    if ((v1 & 0x100) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x200) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x400) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x800) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x1000) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x2000) != 0) {
      v2 += 9;
    }
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_123D740()
{
  return 1;
}

void *sub_123D748@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.SearchInteractionAggregates");
}

uint64_t sub_123D758(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_157C89C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void *sub_123D7E8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123D85C(void *a1)
{
  sub_123D7E8(a1);

  operator delete();
}

uint64_t sub_123D894(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_123D8AC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v14 + 2;
      }
    }
    uint64_t v14 = v7;
    if (v8 == 9)
    {
      *(void *)(a1 + 24) = *(void *)v7;
      uint64_t v14 = v7 + 8;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v14;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_123D9EC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *(unsigned char *)int v4 = 9;
    *(void *)((char *)v4 + 1) = v6;
    int v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_123DAD0(uint64_t a1)
{
  uint64_t v1 = 9;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

std::string *sub_123DB18(std::string *result, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v2 = *(void *)(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    result[1].__r_.__value_.__r.__words[0] = v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123DB50()
{
  return 1;
}

void *sub_123DB58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.MiniBusinessRating");
}

uint64_t sub_123DB68(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123DC20(uint64_t a1)
{
  sub_123DB68(a1);

  operator delete();
}

uint64_t sub_123DC58(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0x3C) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_123DCE4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (char *)(*(void *)v33 + 1);
    unsigned int v9 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180(*(uint64_t *)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)unsigned int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_33;
        }
        uint64_t v13 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v13;
        goto LABEL_13;
      case 2u:
        if (v9 != 17) {
          goto LABEL_33;
        }
        uint64_t v14 = *(void *)v8;
        uint64_t v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v14;
LABEL_13:
        *(void *)unsigned int v33 = v12;
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_33;
        }
        v5 |= 0x10u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = sub_188C138((uint64_t)v8, v15);
          *(void *)unsigned int v33 = v29;
          *(_DWORD *)(a1 + 56) = v30;
          if (!v29) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          *(void *)unsigned int v33 = v16;
          *(_DWORD *)(a1 + 56) = v15;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 24);
        goto LABEL_27;
      case 5u:
        if (v9 != 42) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (void *)(a1 + 32);
LABEL_27:
        uint64_t v22 = (std::string *)sub_1880F84(v20, v19);
        unint64_t v23 = (void *)sub_188C244(v22, *(char **)v33, (uint64_t)a3);
        goto LABEL_40;
      case 6u:
        if (v9 != 48) {
          goto LABEL_33;
        }
        v5 |= 0x20u;
        uint64_t v25 = v8 + 1;
        LODWORD(v24) = *v8;
        if ((v24 & 0x80) == 0) {
          goto LABEL_32;
        }
        int v26 = *v25;
        uint64_t v24 = v24 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v24);
          *(void *)unsigned int v33 = v31;
          *(_DWORD *)(a1 + 60) = v32;
          if (!v31) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_32:
          *(void *)unsigned int v33 = v25;
          *(_DWORD *)(a1 + 60) = v24;
        }
        goto LABEL_41;
      default:
LABEL_33:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(char **)v33;
          }
          unint64_t v23 = sub_1885AC0(v9, v28, v8, a3);
LABEL_40:
          *(void *)unsigned int v33 = v23;
          if (!v23) {
            goto LABEL_50;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)unsigned int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v33;
    }
  }
}

unsigned char *sub_123DFC8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    unsigned char *v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 48);
  unsigned char *v4 = 17;
  *(void *)(v4 + 1) = v8;
  v4 += 9;
  if ((v6 & 0x10) != 0)
  {
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v9 = *(int *)(a1 + 56);
    unsigned char *v4 = 24;
    v4[1] = v9;
    if (v9 > 0x7F)
    {
      v4[1] = v9 | 0x80;
      unint64_t v10 = v9 >> 7;
      v4[2] = v9 >> 7;
      v4 += 3;
      if (v9 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v11 = v10 >> 14;
          v10 >>= 7;
          *v4++ = v10;
        }
        while (v11);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_17:
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_19:
      if ((v6 & 0x20) == 0) {
        goto LABEL_29;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_19;
  }
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v12 = *(int *)(a1 + 60);
  unsigned char *v4 = 48;
  v4[1] = v12;
  if (v12 > 0x7F)
  {
    v4[1] = v12 | 0x80;
    unint64_t v13 = v12 >> 7;
    v4[2] = v12 >> 7;
    v4 += 3;
    if (v12 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v14 = v13 >> 14;
        v13 >>= 7;
        *v4++ = v13;
      }
      while (v14);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_29:
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_123E234(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_26;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0) {
    v2 += 9;
  }
  if ((v1 & 0x10) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 56);
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v9 >= 0) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 11;
    }
    v2 += v11;
  }
  if ((v1 & 0x20) != 0)
  {
    int v12 = *(_DWORD *)(a1 + 60);
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v12 >= 0) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 11;
    }
    v2 += v14;
  }
LABEL_26:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_123E390(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      int v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        int v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_21;
    }
LABEL_20:
    v3[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
LABEL_21:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_22:
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123E4B8()
{
  return 1;
}

void *sub_123E4C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.MiniBusinessCardRating");
}

void *sub_123E4D0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 9));
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123E564(void *a1)
{
  sub_123E4D0(a1);

  operator delete();
}

uint64_t sub_123E59C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  *(_DWORD *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  if (*(unsigned char *)(a1 + 16))
  {
    *(void *)(a1 + 136) = 0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 136) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_123E5E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v85 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v85, a3[11].i32[1]) & 1) == 0)
  {
    int v84 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v85 + 1;
      unsigned int v8 = *v85;
      if (*v85 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v85, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v85 + 2;
        }
      }
      uint64_t v85 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_137;
          }
          v5 |= 1u;
          std::string::size_type v11 = v7 + 1;
          uint64_t v12 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          uint64_t v12 = v12 + (v13 << 7) - 128;
          if ((v13 & 0x80000000) == 0)
          {
            std::string::size_type v11 = v7 + 2;
LABEL_13:
            uint64_t v85 = v11;
            *(void *)(a1 + 88) = v12;
            goto LABEL_145;
          }
          uint64_t v62 = (char *)sub_188C138((uint64_t)v7, v12);
          uint64_t v85 = v62;
          *(void *)(a1 + 88) = v63;
          if (!v62) {
            goto LABEL_150;
          }
          goto LABEL_145;
        case 2u:
          if (v8 != 16) {
            goto LABEL_137;
          }
          v5 |= 2u;
          uint64_t v14 = v7 + 1;
          uint64_t v15 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v16 = *v14;
          uint64_t v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            uint64_t v64 = (char *)sub_188C138((uint64_t)v7, v15);
            uint64_t v85 = v64;
            *(void *)(a1 + 96) = v65;
            if (!v64) {
              goto LABEL_150;
            }
          }
          else
          {
            uint64_t v14 = v7 + 2;
LABEL_18:
            uint64_t v85 = v14;
            *(void *)(a1 + 96) = v15;
          }
          goto LABEL_145;
        case 3u:
          if (v8 != 24) {
            goto LABEL_137;
          }
          v5 |= 4u;
          unint64_t v17 = v7 + 1;
          uint64_t v18 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_23;
          }
          int v19 = *v17;
          uint64_t v18 = v18 + (v19 << 7) - 128;
          if (v19 < 0)
          {
            uint64_t v66 = (char *)sub_188C138((uint64_t)v7, v18);
            uint64_t v85 = v66;
            *(void *)(a1 + 104) = v67;
            if (!v66) {
              goto LABEL_150;
            }
          }
          else
          {
            unint64_t v17 = v7 + 2;
LABEL_23:
            uint64_t v85 = v17;
            *(void *)(a1 + 104) = v18;
          }
          goto LABEL_145;
        case 4u:
          if (v8 == 32)
          {
            uint64_t v20 = v7 - 1;
            while (1)
            {
              uint64_t v85 = v20 + 1;
              uint64_t v21 = v20[1];
              if (v20[1] < 0)
              {
                int v22 = v21 + (v20[2] << 7);
                uint64_t v21 = (v22 - 128);
                if (v20[2] < 0)
                {
                  uint64_t v20 = (char *)sub_188C138((uint64_t)(v20 + 1), (v22 - 128));
                  uint64_t v21 = v23;
                }
                else
                {
                  v20 += 3;
                }
              }
              else
              {
                v20 += 2;
              }
              uint64_t v85 = v20;
              uint64_t v24 = *(unsigned int *)(a1 + 24);
              if (v24 == *(_DWORD *)(a1 + 28))
              {
                int v25 = v24 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v24 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v24) = v21;
                uint64_t v20 = v85;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v24) = v21;
                int v25 = v24 + 1;
              }
              *(_DWORD *)(a1 + 24) = v25;
              if (!v20) {
                goto LABEL_150;
              }
              if (*(void *)a3 <= (unint64_t)v20 || *v20 != 32) {
                goto LABEL_145;
              }
            }
          }
          if (v8 == 34)
          {
            uint64_t v80 = (unsigned int *)(a1 + 24);
LABEL_136:
            uint64_t v81 = sub_188C2EC(v80, (unsigned __int8 *)v7, (uint64_t)a3);
          }
          else
          {
LABEL_137:
            if (v8) {
              BOOL v82 = (v8 & 7) == 4;
            }
            else {
              BOOL v82 = 1;
            }
            if (v82)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_150:
              uint64_t v85 = 0;
              goto LABEL_2;
            }
            if (*v84)
            {
              uint64_t v83 = (std::string *)((*v84 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v83 = (std::string *)sub_188DBD8(v84);
              uint64_t v7 = v85;
            }
            uint64_t v81 = sub_1885AC0(v8, v83, v7, a3);
          }
          uint64_t v85 = (char *)v81;
          if (!v81) {
            goto LABEL_150;
          }
LABEL_145:
          if (sub_11947B8((uint64_t)a3, &v85, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 5u:
          if (v8 != 40) {
            goto LABEL_137;
          }
          v5 |= 8u;
          int v26 = v7 + 1;
          uint64_t v27 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_42;
          }
          int v28 = *v26;
          uint64_t v27 = v27 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            uint64_t v68 = (char *)sub_188C138((uint64_t)v7, v27);
            uint64_t v85 = v68;
            *(void *)(a1 + 112) = v69;
            if (!v68) {
              goto LABEL_150;
            }
          }
          else
          {
            int v26 = v7 + 2;
LABEL_42:
            uint64_t v85 = v26;
            *(void *)(a1 + 112) = v27;
          }
          goto LABEL_145;
        case 6u:
          if (v8 != 48) {
            goto LABEL_137;
          }
          v5 |= 0x20u;
          int v30 = v7 + 1;
          LODWORD(v29) = *v7;
          if ((v29 & 0x80) == 0) {
            goto LABEL_47;
          }
          int v31 = *v30;
          uint64_t v29 = v29 + (v31 << 7) - 128;
          if (v31 < 0)
          {
            uint64_t v70 = (char *)sub_188C138((uint64_t)v7, v29);
            uint64_t v85 = v70;
            *(_DWORD *)(a1 + 128) = v71;
            if (!v70) {
              goto LABEL_150;
            }
          }
          else
          {
            int v30 = v7 + 2;
LABEL_47:
            uint64_t v85 = v30;
            *(_DWORD *)(a1 + 128) = v29;
          }
          goto LABEL_145;
        case 7u:
          if (v8 != 56) {
            goto LABEL_137;
          }
          v5 |= 0x10u;
          int v32 = v7 + 1;
          uint64_t v33 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_52;
          }
          int v34 = *v32;
          uint64_t v33 = v33 + (v34 << 7) - 128;
          if (v34 < 0)
          {
            unint64_t v72 = (char *)sub_188C138((uint64_t)v7, v33);
            uint64_t v85 = v72;
            *(void *)(a1 + 120) = v73;
            if (!v72) {
              goto LABEL_150;
            }
          }
          else
          {
            int v32 = v7 + 2;
LABEL_52:
            uint64_t v85 = v32;
            *(void *)(a1 + 120) = v33;
          }
          goto LABEL_145;
        case 8u:
          if (v8 != 64) {
            goto LABEL_137;
          }
          v5 |= 0x80u;
          BOOL v35 = v7 + 1;
          uint64_t v36 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_57;
          }
          int v37 = *v35;
          uint64_t v36 = v36 + (v37 << 7) - 128;
          if (v37 < 0)
          {
            int v74 = (char *)sub_188C138((uint64_t)v7, v36);
            uint64_t v85 = v74;
            *(void *)(a1 + 136) = v75;
            if (!v74) {
              goto LABEL_150;
            }
          }
          else
          {
            BOOL v35 = v7 + 2;
LABEL_57:
            uint64_t v85 = v35;
            *(void *)(a1 + 136) = v36;
          }
          goto LABEL_145;
        case 9u:
          if (v8 != 72) {
            goto LABEL_137;
          }
          v5 |= 0x40u;
          int v38 = v7 + 1;
          uint64_t v39 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_62;
          }
          int v40 = *v38;
          uint64_t v39 = v39 + (v40 << 7) - 128;
          if (v40 < 0)
          {
            uint64_t v76 = (char *)sub_188C138((uint64_t)v7, v39);
            uint64_t v85 = v76;
            *(unsigned char *)(a1 + 132) = v77 != 0;
            if (!v76) {
              goto LABEL_150;
            }
          }
          else
          {
            int v38 = v7 + 2;
LABEL_62:
            uint64_t v85 = v38;
            *(unsigned char *)(a1 + 132) = v39 != 0;
          }
          goto LABEL_145;
        case 0xAu:
          if (v8 != 80) {
            goto LABEL_137;
          }
          v5 |= 0x100u;
          uint64_t v41 = v7 + 1;
          uint64_t v42 = *v7;
          if ((*v7 & 0x80000000) == 0) {
            goto LABEL_67;
          }
          int v43 = *v41;
          uint64_t v42 = v42 + (v43 << 7) - 128;
          if (v43 < 0)
          {
            uint64_t v78 = (char *)sub_188C138((uint64_t)v7, v42);
            uint64_t v85 = v78;
            *(void *)(a1 + 144) = v79;
            if (!v78) {
              goto LABEL_150;
            }
          }
          else
          {
            uint64_t v41 = v7 + 2;
LABEL_67:
            uint64_t v85 = v41;
            *(void *)(a1 + 144) = v42;
          }
          goto LABEL_145;
        case 0xBu:
          if (v8 == 88)
          {
            uint64_t v44 = v7 - 1;
            while (1)
            {
              uint64_t v85 = v44 + 1;
              uint64_t v45 = v44[1];
              if (v44[1] < 0)
              {
                int v46 = v45 + (v44[2] << 7);
                uint64_t v45 = (v46 - 128);
                if (v44[2] < 0)
                {
                  uint64_t v44 = (char *)sub_188C138((uint64_t)(v44 + 1), (v46 - 128));
                  uint64_t v45 = v47;
                }
                else
                {
                  v44 += 3;
                }
              }
              else
              {
                v44 += 2;
              }
              uint64_t v85 = v44;
              uint64_t v48 = *(unsigned int *)(a1 + 40);
              if (v48 == *(_DWORD *)(a1 + 44))
              {
                int v49 = v48 + 1;
                sub_188CA54((unsigned int *)(a1 + 40), v48 + 1);
                *(void *)(*(void *)(a1 + 48) + 8 * v48) = v45;
                uint64_t v44 = v85;
              }
              else
              {
                *(void *)(*(void *)(a1 + 48) + 8 * v48) = v45;
                int v49 = v48 + 1;
              }
              *(_DWORD *)(a1 + 40) = v49;
              if (!v44) {
                goto LABEL_150;
              }
              if (*(void *)a3 <= (unint64_t)v44 || *v44 != 88) {
                goto LABEL_145;
              }
            }
          }
          if (v8 != 90) {
            goto LABEL_137;
          }
          uint64_t v80 = (unsigned int *)(a1 + 40);
          goto LABEL_136;
        case 0xCu:
          if (v8 == 96)
          {
            int v50 = v7 - 1;
            while (1)
            {
              uint64_t v85 = v50 + 1;
              uint64_t v51 = v50[1];
              if (v50[1] < 0)
              {
                int v52 = v51 + (v50[2] << 7);
                uint64_t v51 = (v52 - 128);
                if (v50[2] < 0)
                {
                  int v50 = (char *)sub_188C138((uint64_t)(v50 + 1), (v52 - 128));
                  uint64_t v51 = v53;
                }
                else
                {
                  v50 += 3;
                }
              }
              else
              {
                v50 += 2;
              }
              uint64_t v85 = v50;
              uint64_t v54 = *(unsigned int *)(a1 + 56);
              if (v54 == *(_DWORD *)(a1 + 60))
              {
                int v55 = v54 + 1;
                sub_188CA54((unsigned int *)(a1 + 56), v54 + 1);
                *(void *)(*(void *)(a1 + 64) + 8 * v54) = v51;
                int v50 = v85;
              }
              else
              {
                *(void *)(*(void *)(a1 + 64) + 8 * v54) = v51;
                int v55 = v54 + 1;
              }
              *(_DWORD *)(a1 + 56) = v55;
              if (!v50) {
                goto LABEL_150;
              }
              if (*(void *)a3 <= (unint64_t)v50 || *v50 != 96) {
                goto LABEL_145;
              }
            }
          }
          if (v8 != 98) {
            goto LABEL_137;
          }
          uint64_t v80 = (unsigned int *)(a1 + 56);
          goto LABEL_136;
        case 0xDu:
          if (v8 == 104)
          {
            int v56 = v7 - 1;
            while (1)
            {
              uint64_t v85 = v56 + 1;
              uint64_t v57 = v56[1];
              if (v56[1] < 0)
              {
                int v58 = v57 + (v56[2] << 7);
                uint64_t v57 = (v58 - 128);
                if (v56[2] < 0)
                {
                  int v56 = (char *)sub_188C138((uint64_t)(v56 + 1), (v58 - 128));
                  uint64_t v57 = v59;
                }
                else
                {
                  v56 += 3;
                }
              }
              else
              {
                v56 += 2;
              }
              uint64_t v85 = v56;
              uint64_t v60 = *(unsigned int *)(a1 + 72);
              if (v60 == *(_DWORD *)(a1 + 76))
              {
                int v61 = v60 + 1;
                sub_188CA54((unsigned int *)(a1 + 72), v60 + 1);
                *(void *)(*(void *)(a1 + 80) + 8 * v60) = v57;
                int v56 = v85;
              }
              else
              {
                *(void *)(*(void *)(a1 + 80) + 8 * v60) = v57;
                int v61 = v60 + 1;
              }
              *(_DWORD *)(a1 + 72) = v61;
              if (!v56) {
                goto LABEL_150;
              }
              if (*(void *)a3 <= (unint64_t)v56 || *v56 != 104) {
                goto LABEL_145;
              }
            }
          }
          if (v8 != 106) {
            goto LABEL_137;
          }
          uint64_t v80 = (unsigned int *)(a1 + 72);
          goto LABEL_136;
        default:
          goto LABEL_137;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v85;
}

unsigned char *sub_123EE18(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 88);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 96);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 104);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      unsigned char *v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(void *)(a1 + 112);
    unsigned char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 128);
    unsigned char *v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(void *)(a1 + 120);
    unsigned char *v4 = 56;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v30 = *(void *)(a1 + 136);
    unsigned char *v4 = 64;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unint64_t v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v33 = *(unsigned char *)(a1 + 132);
    unsigned char *v4 = 72;
    v4[1] = v33;
    v4 += 2;
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v34 = *(void *)(a1 + 144);
    unsigned char *v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unint64_t v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v37 = *(unsigned int *)(a1 + 40);
  if ((int)v37 >= 1)
  {
    for (uint64_t j = 0; j != v37; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v39 = *(void *)(*(void *)(a1 + 48) + 8 * j);
      unsigned char *v4 = 88;
      v4[1] = v39;
      if (v39 > 0x7F)
      {
        v4[1] = v39 | 0x80;
        unint64_t v40 = v39 >> 7;
        v4[2] = v39 >> 7;
        v4 += 3;
        if (v39 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v41 = v40 >> 14;
            v40 >>= 7;
            *v4++ = v40;
          }
          while (v41);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v42 = *(unsigned int *)(a1 + 56);
  if ((int)v42 >= 1)
  {
    for (uint64_t k = 0; k != v42; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v44 = *(void *)(*(void *)(a1 + 64) + 8 * k);
      unsigned char *v4 = 96;
      v4[1] = v44;
      if (v44 > 0x7F)
      {
        v4[1] = v44 | 0x80;
        unint64_t v45 = v44 >> 7;
        v4[2] = v44 >> 7;
        v4 += 3;
        if (v44 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v46 = v45 >> 14;
            v45 >>= 7;
            *v4++ = v45;
          }
          while (v46);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v47 = *(unsigned int *)(a1 + 72);
  if ((int)v47 >= 1)
  {
    for (uint64_t m = 0; m != v47; ++m)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v49 = *(void *)(*(void *)(a1 + 80) + 8 * m);
      unsigned char *v4 = 104;
      v4[1] = v49;
      if (v49 > 0x7F)
      {
        v4[1] = v49 | 0x80;
        unint64_t v50 = v49 >> 7;
        v4[2] = v49 >> 7;
        v4 += 3;
        if (v49 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v51 = v50 >> 14;
            v50 >>= 7;
            *v4++ = v50;
          }
          while (v51);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v52 = *(void *)(a1 + 8);
  if ((v52 & 1) == 0) {
    return v4;
  }
  unint64_t v54 = v52 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v54 + 31) < 0)
  {
    int v55 = *(void **)(v54 + 8);
    uint64_t v56 = *(void *)(v54 + 16);
  }
  else
  {
    int v55 = (void *)(v54 + 8);
    LODWORD(v56) = *(unsigned __int8 *)(v54 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v56)
  {
    uint64_t v57 = (int)v56;
    memcpy(v4, v55, (int)v56);
    v4 += v57;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v55, v56, v4);
}

uint64_t sub_123F564(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(unsigned int *)(a1 + 24);
  uint64_t v4 = sub_188D5A8((unsigned int *)(a1 + 40));
  uint64_t v5 = *(unsigned int *)(a1 + 40);
  uint64_t v6 = sub_188D5A8((unsigned int *)(a1 + 56));
  uint64_t v7 = *(unsigned int *)(a1 + 56);
  uint64_t result = v2 + v4 + v3 + v5 + v6 + v7 + sub_188D5A8((unsigned int *)(a1 + 72)) + *(unsigned int *)(a1 + 72);
  int v9 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v9) {
    goto LABEL_16;
  }
  if (v9)
  {
    result += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v9 & 2) == 0)
    {
LABEL_4:
      if ((v9 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_22;
    }
  }
  else if ((v9 & 2) == 0)
  {
    goto LABEL_4;
  }
  result += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v9 & 4) == 0)
  {
LABEL_5:
    if ((v9 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  result += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v9 & 8) == 0)
  {
LABEL_6:
    if ((v9 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_24:
    result += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v9 & 0x20) != 0) {
      goto LABEL_8;
    }
    goto LABEL_12;
  }
LABEL_23:
  result += ((9 * (__clz(*(void *)(a1 + 112) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v9 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_7:
  if ((v9 & 0x20) != 0)
  {
LABEL_8:
    int v10 = *(_DWORD *)(a1 + 128);
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v10 >= 0) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 11;
    }
    result += v12;
  }
LABEL_12:
  if ((v9 & 0x40) != 0) {
    result += 2;
  }
  if ((v9 & 0x80) != 0) {
    result += ((9 * (__clz(*(void *)(a1 + 136) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_16:
  if ((v9 & 0x100) != 0) {
    result += ((9 * (__clz(*(void *)(a1 + 144) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v14 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_123F784(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 8 * data_low), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = SLODWORD(v3[1].__r_.__value_.__r.__words[2]);
    sub_188CA54((unsigned int *)&v3[1].__r_.__value_.__r.__words[2], v9 + v8);
    std::string::pointer data = v3[2].__r_.__value_.__l.__data_;
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) += *(_DWORD *)(a2 + 40);
    uint64_t result = (std::string *)memcpy(&data[8 * v9], *(const void **)(a2 + 48), 8 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = SLODWORD(v3[2].__r_.__value_.__r.__words[1]);
    sub_188CA54((unsigned int *)&v3[2].__r_.__value_.__r.__words[1], v12 + v11);
    std::string::size_type v13 = v3[2].__r_.__value_.__r.__words[2];
    LODWORD(v3[2].__r_.__value_.__r.__words[1]) += *(_DWORD *)(a2 + 56);
    uint64_t result = (std::string *)memcpy((void *)(v13 + 8 * v12), *(const void **)(a2 + 64), 8 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = SLODWORD(v3[3].__r_.__value_.__l.__data_);
    sub_188CA54((unsigned int *)&v3[3], v15 + v14);
    std::string::size_type v16 = v3[3].__r_.__value_.__l.__size_;
    LODWORD(v3[3].__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 72);
    uint64_t result = (std::string *)memcpy((void *)(v16 + 8 * v15), *(const void **)(a2 + 80), 8 * *(int *)(a2 + 72));
  }
  int v17 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v17)
  {
    if (v17)
    {
      v3[3].__r_.__value_.__r.__words[2] = *(void *)(a2 + 88);
      if ((v17 & 2) == 0)
      {
LABEL_12:
        if ((v17 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_28;
      }
    }
    else if ((v17 & 2) == 0)
    {
      goto LABEL_12;
    }
    v3[4].__r_.__value_.__r.__words[0] = *(void *)(a2 + 96);
    if ((v17 & 4) == 0)
    {
LABEL_13:
      if ((v17 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_29;
    }
LABEL_28:
    v3[4].__r_.__value_.__l.__size_ = *(void *)(a2 + 104);
    if ((v17 & 8) == 0)
    {
LABEL_14:
      if ((v17 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[4].__r_.__value_.__r.__words[2] = *(void *)(a2 + 112);
    if ((v17 & 0x10) == 0)
    {
LABEL_15:
      if ((v17 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_31;
    }
LABEL_30:
    v3[5].__r_.__value_.__r.__words[0] = *(void *)(a2 + 120);
    if ((v17 & 0x20) == 0)
    {
LABEL_16:
      if ((v17 & 0x40) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(v3[5].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 128);
    if ((v17 & 0x40) == 0)
    {
LABEL_17:
      if ((v17 & 0x80) == 0)
      {
LABEL_19:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v17;
        goto LABEL_20;
      }
LABEL_18:
      v3[5].__r_.__value_.__r.__words[2] = *(void *)(a2 + 136);
      goto LABEL_19;
    }
LABEL_32:
    v3[5].__r_.__value_.__s.__data_[12] = *(unsigned char *)(a2 + 132);
    if ((v17 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_20:
  if ((v17 & 0x100) != 0)
  {
    std::string::size_type v18 = *(void *)(a2 + 144);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    v3[6].__r_.__value_.__r.__words[0] = v18;
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_123F9A4()
{
  return 1;
}

void *sub_123F9AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.MiniBusinessCardIndoor");
}

uint64_t sub_123F9BC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_17;
    }
  }
  else if (v4)
  {
    goto LABEL_17;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_17:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_123FAC4(uint64_t a1)
{
  sub_123F9BC(a1);

  operator delete();
}

uint64_t sub_123FAFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_13:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_17;
        }
      }
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_21:
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v1 & 0x10) != 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v1 & 0x10) != 0) {
          goto LABEL_25;
        }
      }
LABEL_7:
      if ((v1 & 0x20) == 0) {
        goto LABEL_32;
      }
LABEL_29:
      unint64_t v7 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
      }
      goto LABEL_32;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_13;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_13;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_17:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_21;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_21;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_25:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v1 & 0x20) == 0) {
        goto LABEL_32;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v1 & 0x20) == 0) {
        goto LABEL_32;
      }
    }
    goto LABEL_29;
  }
LABEL_32:
  if ((v1 & 0xC0) != 0) {
    *(void *)(a1 + 72) = 0;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 72) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v9) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_123FC60(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v34 = (uint64_t *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v35 + 1);
    unsigned int v8 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v35, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)unint64_t v35 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 24);
        goto LABEL_33;
      case 2u:
        if (v8 != 18) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 32);
        goto LABEL_33;
      case 3u:
        if (v8 != 26) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 40);
        goto LABEL_33;
      case 4u:
        if (v8 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 48);
        goto LABEL_33;
      case 5u:
        if (v8 != 42) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 56);
        goto LABEL_33;
      case 6u:
        if (v8 != 50) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        std::string::size_type v13 = (void *)(a1 + 64);
LABEL_33:
        uint64_t v19 = (std::string *)sub_1880F84(v13, v12);
        unint64_t v20 = (void *)sub_188C244(v19, *(char **)v35, (uint64_t)a3);
        goto LABEL_34;
      case 7u:
        if (v8 != 56) {
          goto LABEL_51;
        }
        v5 |= 0x40u;
        unint64_t v21 = v7 + 1;
        int v22 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v7, v22);
          *(void *)unint64_t v35 = v30;
          *(_DWORD *)(a1 + 72) = v31;
          if (!v30) {
            goto LABEL_69;
          }
        }
        else
        {
          unint64_t v21 = v7 + 2;
LABEL_41:
          *(void *)unint64_t v35 = v21;
          *(_DWORD *)(a1 + 72) = v22;
        }
        goto LABEL_35;
      case 8u:
        if (v8 != 69) {
          goto LABEL_51;
        }
        v5 |= 0x80u;
        *(_DWORD *)(a1 + 76) = *(_DWORD *)v7;
        *(void *)unint64_t v35 = v7 + 4;
        goto LABEL_35;
      case 9u:
        if (v8 != 72) {
          goto LABEL_51;
        }
        unint64_t v24 = v7 + 1;
        unint64_t v25 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          *(void *)unint64_t v35 = sub_188C138((uint64_t)v7, (v27 - 128));
          if (!*(void *)v35) {
            goto LABEL_69;
          }
          unint64_t v25 = v32;
        }
        else
        {
          unint64_t v24 = v7 + 2;
LABEL_48:
          *(void *)unint64_t v35 = v24;
        }
        if (sub_125D180(v25))
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 80) = v25;
        }
        else
        {
          if (*v34) {
            char v33 = (std::string *)((*v34 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            char v33 = (std::string *)sub_188DBD8(v34);
          }
          sub_188C020(9, v25, v33);
        }
        goto LABEL_35;
      default:
LABEL_51:
        if (v8) {
          BOOL v28 = (v8 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v34)
          {
            unint64_t v29 = (std::string *)((*v34 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v29 = (std::string *)sub_188DBD8(v34);
            unint64_t v7 = *(char **)v35;
          }
          unint64_t v20 = sub_1885AC0(v8, v29, v7, a3);
LABEL_34:
          *(void *)unint64_t v35 = v20;
          if (!v20) {
            goto LABEL_69;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v7) {
          a3[10].i32[0] = v8 - 1;
        }
        else {
LABEL_69:
        }
          *(void *)unint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

unsigned char *sub_1240078(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v7 = *(_DWORD *)(a1 + 72);
  unsigned char *v4 = 56;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unsigned int v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_21:
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 69;
    *(_DWORD *)(v4 + 1) = v10;
    v4 += 5;
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 80);
    unsigned char *v4 = 72;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1240330(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v1)
  {
    uint64_t v2 = 0;
    if ((v1 & 0x100) == 0) {
      goto LABEL_39;
    }
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_10:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  if ((v1 & 4) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_15:
      if ((v1 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_30;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_15;
  }
  unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_16:
    if ((v1 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_33;
  }
LABEL_30:
  unint64_t v17 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
  uint64_t v19 = *(void *)(v17 + 8);
  if ((v18 & 0x80u) == 0) {
    uint64_t v19 = v18;
  }
  v2 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x20) == 0)
  {
LABEL_17:
    if ((v1 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_33:
  unint64_t v20 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  v2 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x40) != 0) {
LABEL_18:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  if ((v1 & 0x80) != 0) {
    v2 += 5;
  }
  if ((v1 & 0x100) != 0)
  {
LABEL_22:
    int v9 = *(_DWORD *)(a1 + 80);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_39:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v2 += v26;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_124059C(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v7 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v8 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v10 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v10 = (uint64_t *)*v10;
      }
      uint64_t result = sub_1881DF4(v8, v7, v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v11 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v12 = v3->__r_.__value_.__l.__size_;
    uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
    if (v12) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v11, v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v14 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v14, v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_30;
    }
LABEL_27:
    unint64_t v17 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v18 = v3->__r_.__value_.__l.__size_;
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v17, v19);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_33;
    }
LABEL_30:
    unint64_t v20 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v21 = v3->__r_.__value_.__l.__size_;
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v20, v22);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_36;
    }
LABEL_33:
    uint64_t v23 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x20u;
    std::string::size_type v24 = v3->__r_.__value_.__l.__size_;
    unint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      unint64_t v25 = (uint64_t *)*v25;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__r.__words[2], v23, v25);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
      goto LABEL_11;
    }
LABEL_36:
    LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 80);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    LODWORD(v3[3].__r_.__value_.__r.__words[1]) = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_124079C()
{
  return 1;
}

void *sub_12407A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.MerchantInfo.MiniMerchantMetaData");
}

void *sub_12407B4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_124E64C(a1 + 20);
  sub_1889DE8(a1 + 17);
  sub_1889DE8(a1 + 14);
  sub_1889DE8(a1 + 11);
  sub_1889DE8(a1 + 8);
  sub_1889DE8(a1 + 5);
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1240864(void *a1)
{
  sub_12407B4(a1);

  operator delete();
}

uint64_t sub_124089C(uint64_t a1)
{
  sub_188CC00(a1 + 16);
  sub_188CC00(a1 + 40);
  sub_188CC00(a1 + 64);
  sub_188CC00(a1 + 88);
  sub_188CC00(a1 + 112);
  uint64_t result = sub_188CC00(a1 + 136);
  uint64_t v3 = *(unsigned int *)(a1 + 168);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 176) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_123FAFC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 168) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

uint64_t sub_1240948(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v70 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v70, a3[11].i32[1])) {
    return *(void *)v70;
  }
  uint64_t v6 = (uint64_t **)(a1 + 136);
  char v7 = (uint64_t **)(a1 + 112);
  uint64_t v8 = (uint64_t **)(a1 + 88);
  int v9 = (uint64_t **)(a1 + 64);
  uint64_t v10 = (uint64_t **)(a1 + 40);
  unint64_t v11 = (uint64_t **)(a1 + 16);
  uint64_t v68 = (uint64_t *)(a1 + 8);
  uint64_t v69 = (uint64_t *)(a1 + 160);
  while (2)
  {
    uint64_t v13 = (uint64_t)v12;
    unint64_t v14 = (char *)(*(void *)v70 + 1);
    unsigned int v15 = **(unsigned char **)v70;
    if ((char)**(unsigned char **)v70 < 0)
    {
      unsigned int v16 = v15 + (*v14 << 7);
      unsigned int v15 = v16 - 128;
      if (*v14 < 0)
      {
        unint64_t v14 = (char *)sub_188C180(*(uint64_t *)v70, v16 - 128);
        unsigned int v15 = v17;
      }
      else
      {
        unint64_t v14 = (char *)(*(void *)v70 + 2);
      }
    }
    *(void *)uint64_t v70 = v14;
    switch(v15 >> 3)
    {
      case 1u:
        if (v15 != 10) {
          goto LABEL_91;
        }
        std::string::size_type v18 = v14 - 1;
        std::string::size_type v12 = (_UNKNOWN **)v13;
        while (1)
        {
          uint64_t v19 = (char *)(v18 + 1);
          *(void *)uint64_t v70 = v18 + 1;
          unint64_t v20 = *(_DWORD **)(a1 + 32);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 24), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 24) = v21 + 1;
            uint64_t v22 = *(std::string **)&v20[2 * v21 + 2];
          }
          else
          {
            if (!*v11) {
              operator new();
            }
            uint64_t v23 = (void *)sub_1881C00(*v11, 24, v13);
            void *v24 = v23;
            v24[1] = sub_3A6EDC;
            *uint64_t v23 = 0;
            v23[1] = 0;
            v23[2] = 0;
            uint64_t v22 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v23);
            uint64_t v19 = *(char **)v70;
          }
          std::string::size_type v18 = sub_188C244(v22, v19, (uint64_t)a3);
          *(void *)uint64_t v70 = v18;
          if (!v18) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
            goto LABEL_98;
          }
        }
      case 2u:
        if (v15 != 18) {
          goto LABEL_91;
        }
        unint64_t v25 = v14 - 1;
        std::string::size_type v12 = (_UNKNOWN **)v13;
        while (1)
        {
          uint64_t v26 = (char *)(v25 + 1);
          *(void *)uint64_t v70 = v25 + 1;
          int v27 = *(_DWORD **)(a1 + 56);
          if (v27 && (uint64_t v28 = *(int *)(a1 + 48), (int)v28 < *v27))
          {
            *(_DWORD *)(a1 + 48) = v28 + 1;
            unint64_t v29 = *(std::string **)&v27[2 * v28 + 2];
          }
          else
          {
            if (!*v10) {
              operator new();
            }
            uint64_t v30 = (void *)sub_1881C00(*v10, 24, v13);
            *int v31 = v30;
            v31[1] = sub_3A6EDC;
            void *v30 = 0;
            v30[1] = 0;
            int v30[2] = 0;
            unint64_t v29 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v30);
            uint64_t v26 = *(char **)v70;
          }
          unint64_t v25 = sub_188C244(v29, v26, (uint64_t)a3);
          *(void *)uint64_t v70 = v25;
          if (!v25) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v25 || *v25 != 18) {
            goto LABEL_98;
          }
        }
      case 3u:
        if (v15 != 26) {
          goto LABEL_91;
        }
        unint64_t v32 = v14 - 1;
        std::string::size_type v12 = (_UNKNOWN **)v13;
        while (1)
        {
          char v33 = (char *)(v32 + 1);
          *(void *)uint64_t v70 = v32 + 1;
          unint64_t v34 = *(_DWORD **)(a1 + 80);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 72), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 72) = v35 + 1;
            unint64_t v36 = *(std::string **)&v34[2 * v35 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            uint64_t v37 = (void *)sub_1881C00(*v9, 24, v13);
            *int v38 = v37;
            v38[1] = sub_3A6EDC;
            void *v37 = 0;
            v37[1] = 0;
            int v37[2] = 0;
            unint64_t v36 = (std::string *)sub_188CDC8(a1 + 64, (uint64_t)v37);
            char v33 = *(char **)v70;
          }
          unint64_t v32 = sub_188C244(v36, v33, (uint64_t)a3);
          *(void *)uint64_t v70 = v32;
          if (!v32) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 26) {
            goto LABEL_98;
          }
        }
      case 4u:
        if (v15 != 34) {
          goto LABEL_91;
        }
        unint64_t v39 = v14 - 1;
        std::string::size_type v12 = (_UNKNOWN **)v13;
        while (1)
        {
          unint64_t v40 = (char *)(v39 + 1);
          *(void *)uint64_t v70 = v39 + 1;
          unint64_t v41 = *(_DWORD **)(a1 + 104);
          if (v41 && (uint64_t v42 = *(int *)(a1 + 96), (int)v42 < *v41))
          {
            *(_DWORD *)(a1 + 96) = v42 + 1;
            int v43 = *(std::string **)&v41[2 * v42 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            unint64_t v44 = (void *)sub_1881C00(*v8, 24, v13);
            void *v45 = v44;
            v45[1] = sub_3A6EDC;
            *unint64_t v44 = 0;
            v44[1] = 0;
            v44[2] = 0;
            int v43 = (std::string *)sub_188CDC8(a1 + 88, (uint64_t)v44);
            unint64_t v40 = *(char **)v70;
          }
          unint64_t v39 = sub_188C244(v43, v40, (uint64_t)a3);
          *(void *)uint64_t v70 = v39;
          if (!v39) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v39 || *v39 != 34) {
            goto LABEL_98;
          }
        }
      case 5u:
        if (v15 != 42) {
          goto LABEL_91;
        }
        unint64_t v46 = v14 - 1;
        std::string::size_type v12 = (_UNKNOWN **)v13;
        while (1)
        {
          uint64_t v47 = (char *)(v46 + 1);
          *(void *)uint64_t v70 = v46 + 1;
          uint64_t v48 = *(_DWORD **)(a1 + 128);
          if (v48 && (uint64_t v49 = *(int *)(a1 + 120), (int)v49 < *v48))
          {
            *(_DWORD *)(a1 + 120) = v49 + 1;
            unint64_t v50 = *(std::string **)&v48[2 * v49 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            unint64_t v51 = (void *)sub_1881C00(*v7, 24, v13);
            *uint64_t v52 = v51;
            v52[1] = sub_3A6EDC;
            void *v51 = 0;
            v51[1] = 0;
            v51[2] = 0;
            unint64_t v50 = (std::string *)sub_188CDC8(a1 + 112, (uint64_t)v51);
            uint64_t v47 = *(char **)v70;
          }
          unint64_t v46 = sub_188C244(v50, v47, (uint64_t)a3);
          *(void *)uint64_t v70 = v46;
          if (!v46) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v46 || *v46 != 42) {
            goto LABEL_98;
          }
        }
      case 6u:
        if (v15 != 50) {
          goto LABEL_91;
        }
        uint64_t v53 = v14 - 1;
        std::string::size_type v12 = (_UNKNOWN **)v13;
        while (1)
        {
          unint64_t v54 = (char *)(v53 + 1);
          *(void *)uint64_t v70 = v53 + 1;
          int v55 = *(_DWORD **)(a1 + 152);
          if (v55 && (uint64_t v56 = *(int *)(a1 + 144), (int)v56 < *v55))
          {
            *(_DWORD *)(a1 + 144) = v56 + 1;
            uint64_t v57 = *(std::string **)&v55[2 * v56 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            int v58 = (void *)sub_1881C00(*v6, 24, v13);
            void *v59 = v58;
            v59[1] = sub_3A6EDC;
            void *v58 = 0;
            v58[1] = 0;
            v58[2] = 0;
            uint64_t v57 = (std::string *)sub_188CDC8(a1 + 136, (uint64_t)v58);
            unint64_t v54 = *(char **)v70;
          }
          uint64_t v53 = sub_188C244(v57, v54, (uint64_t)a3);
          *(void *)uint64_t v70 = v53;
          if (!v53) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v53 || *v53 != 50) {
            goto LABEL_98;
          }
        }
      case 7u:
        if (v15 != 58) {
          goto LABEL_91;
        }
        uint64_t v60 = v14 - 1;
        std::string::size_type v12 = (_UNKNOWN **)v13;
        while (1)
        {
          int v61 = (unsigned __int8 *)(v60 + 1);
          *(void *)uint64_t v70 = v60 + 1;
          uint64_t v62 = *(_DWORD **)(a1 + 176);
          if (v62 && (uint64_t v63 = *(int *)(a1 + 168), (int)v63 < *v62))
          {
            *(_DWORD *)(a1 + 168) = v63 + 1;
            uint64_t v64 = *(void *)&v62[2 * v63 + 2];
          }
          else
          {
            uint64_t v65 = sub_124BFAC(*v69);
            uint64_t v64 = sub_188CDC8((uint64_t)v69, v65);
            int v61 = *(unsigned __int8 **)v70;
          }
          uint64_t v60 = (char *)sub_124107C(a3, v64, v61);
          *(void *)uint64_t v70 = v60;
          if (!v60) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v60 || *v60 != 58) {
            goto LABEL_98;
          }
        }
      default:
LABEL_91:
        if (v15) {
          BOOL v66 = (v15 & 7) == 4;
        }
        else {
          BOOL v66 = 1;
        }
        if (!v66)
        {
          if (*v68)
          {
            uint64_t v67 = (std::string *)((*v68 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v67 = (std::string *)sub_188DBD8(v68);
            unint64_t v14 = *(char **)v70;
          }
          *(void *)uint64_t v70 = sub_1885AC0(v15, v67, v14, a3);
          std::string::size_type v12 = (_UNKNOWN **)v13;
          if (!*(void *)v70) {
            return 0;
          }
LABEL_98:
          if (sub_11947B8((uint64_t)a3, (char **)v70, a3[11].i32[1])) {
            return *(void *)v70;
          }
          continue;
        }
        if (!v14) {
          return 0;
        }
        a3[10].i32[0] = v15 - 1;
        return *(void *)v70;
    }
  }
}

uint64_t sub_124107C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123FC60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_124110C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 32) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unint64_t v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 48);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      unsigned int v15 = *(void **)(*(void *)(a1 + 56) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          unsigned int v15 = (void *)*v15;
        }
        unsigned int v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(unsigned int *)(a1 + 72);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      uint64_t v21 = *(void **)(*(void *)(a1 + 80) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_36;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v22)
      {
        *__dst = 26;
        __dst[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v23 = __dst + 2;
        memcpy(v23, v21, v22);
        __dst = &v23[v22];
        goto LABEL_34;
      }
LABEL_36:
      __dst = (char *)sub_188A868(a3, 3, (uint64_t)v21, __dst);
LABEL_34:
      v19 += 8;
    }
    while (v20 != v19);
  }
  uint64_t v24 = *(unsigned int *)(a1 + 96);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 8 * v24;
    do
    {
      int v27 = *(void **)(*(void *)(a1 + 104) + v25 + 8);
      if (*((char *)v27 + 23) < 0)
      {
        int64_t v28 = v27[1];
        if (v28 > 127) {
          goto LABEL_48;
        }
      }
      else
      {
        int64_t v28 = *((unsigned __int8 *)v27 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v28)
      {
        *__dst = 34;
        __dst[1] = v28;
        if (*((char *)v27 + 23) < 0) {
          int v27 = (void *)*v27;
        }
        unint64_t v29 = __dst + 2;
        memcpy(v29, v27, v28);
        __dst = &v29[v28];
        goto LABEL_46;
      }
LABEL_48:
      __dst = (char *)sub_188A868(a3, 4, (uint64_t)v27, __dst);
LABEL_46:
      v25 += 8;
    }
    while (v26 != v25);
  }
  uint64_t v30 = *(unsigned int *)(a1 + 120);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = 0;
    uint64_t v32 = 8 * v30;
    do
    {
      char v33 = *(void **)(*(void *)(a1 + 128) + v31 + 8);
      if (*((char *)v33 + 23) < 0)
      {
        int64_t v34 = v33[1];
        if (v34 > 127) {
          goto LABEL_60;
        }
      }
      else
      {
        int64_t v34 = *((unsigned __int8 *)v33 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v34)
      {
        *__dst = 42;
        __dst[1] = v34;
        if (*((char *)v33 + 23) < 0) {
          char v33 = (void *)*v33;
        }
        uint64_t v35 = __dst + 2;
        memcpy(v35, v33, v34);
        __dst = &v35[v34];
        goto LABEL_58;
      }
LABEL_60:
      __dst = (char *)sub_188A868(a3, 5, (uint64_t)v33, __dst);
LABEL_58:
      v31 += 8;
    }
    while (v32 != v31);
  }
  uint64_t v36 = *(unsigned int *)(a1 + 144);
  if ((int)v36 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 8 * v36;
    do
    {
      unint64_t v39 = *(void **)(*(void *)(a1 + 152) + v37 + 8);
      if (*((char *)v39 + 23) < 0)
      {
        int64_t v40 = v39[1];
        if (v40 > 127) {
          goto LABEL_72;
        }
      }
      else
      {
        int64_t v40 = *((unsigned __int8 *)v39 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v40)
      {
        *__dst = 50;
        __dst[1] = v40;
        if (*((char *)v39 + 23) < 0) {
          unint64_t v39 = (void *)*v39;
        }
        unint64_t v41 = __dst + 2;
        memcpy(v41, v39, v40);
        __dst = &v41[v40];
        goto LABEL_70;
      }
LABEL_72:
      __dst = (char *)sub_188A868(a3, 6, (uint64_t)v39, __dst);
LABEL_70:
      v37 += 8;
    }
    while (v38 != v37);
  }
  int v42 = *(_DWORD *)(a1 + 168);
  if (v42)
  {
    for (int i = 0; i != v42; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v44 = *(void *)(*(void *)(a1 + 176) + 8 * i + 8);
      *__dst = 58;
      unsigned int v45 = *(_DWORD *)(v44 + 20);
      __dst[1] = v45;
      if (v45 > 0x7F) {
        unint64_t v46 = sub_188A9CC(v45, __dst + 1);
      }
      else {
        unint64_t v46 = __dst + 2;
      }
      __dst = sub_1240078(v44, v46, a3);
    }
  }
  uint64_t v47 = *(void *)(a1 + 8);
  if ((v47 & 1) == 0) {
    return __dst;
  }
  unint64_t v49 = v47 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v49 + 31) < 0)
  {
    unint64_t v50 = *(void **)(v49 + 8);
    uint64_t v51 = *(void *)(v49 + 16);
  }
  else
  {
    unint64_t v50 = (void *)(v49 + 8);
    LODWORD(v51) = *(unsigned __int8 *)(v49 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v51)
  {
    uint64_t v52 = (int)v51;
    memcpy(__dst, v50, (int)v51);
    __dst += v52;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v50, v51, __dst);
}

uint64_t sub_1241640(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    int64_t v10 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(unsigned int *)(a1 + 72);
  uint64_t v15 = v9 + v14;
  if ((int)v14 >= 1)
  {
    int64_t v16 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v15 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      --v14;
    }
    while (v14);
  }
  uint64_t v20 = *(unsigned int *)(a1 + 96);
  uint64_t v21 = v15 + v20;
  if ((int)v20 >= 1)
  {
    int64_t v22 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v25 = *(void *)(v23 + 8);
      if ((v24 & 0x80u) == 0) {
        uint64_t v25 = v24;
      }
      v21 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6);
      --v20;
    }
    while (v20);
  }
  uint64_t v26 = *(unsigned int *)(a1 + 120);
  uint64_t v27 = v21 + v26;
  if ((int)v26 >= 1)
  {
    int64_t v28 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
      uint64_t v31 = *(void *)(v29 + 8);
      if ((v30 & 0x80u) == 0) {
        uint64_t v31 = v30;
      }
      v27 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6);
      --v26;
    }
    while (v26);
  }
  uint64_t v32 = *(unsigned int *)(a1 + 144);
  uint64_t v33 = v27 + v32;
  if ((int)v32 >= 1)
  {
    int64_t v34 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
      uint64_t v37 = *(void *)(v35 + 8);
      if ((v36 & 0x80u) == 0) {
        uint64_t v37 = v36;
      }
      v33 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      --v32;
    }
    while (v32);
  }
  uint64_t v38 = *(int *)(a1 + 168);
  uint64_t v39 = v33 + v38;
  uint64_t v40 = *(void *)(a1 + 176);
  if (v40) {
    unint64_t v41 = (uint64_t *)(v40 + 8);
  }
  else {
    unint64_t v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_1240330(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  uint64_t v45 = *(void *)(a1 + 8);
  if (v45)
  {
    unint64_t v47 = v45 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v47 + 31) < 0) {
      uint64_t v48 = *(void *)(v47 + 16);
    }
    else {
      uint64_t v48 = *(unsigned __int8 *)(v47 + 31);
    }
    v39 += v48;
  }
  *(_DWORD *)(a1 + 184) = v39;
  return v39;
}

std::string *sub_1241904(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    int64_t v10 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[1].__r_.__value_.__r.__words[2], v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 80) + 8);
    int64_t v16 = (std::string **)sub_188CCE4((uint64_t)&v3[2].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 72));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[2].__r_.__value_.__r.__words[2], v16, v15, v14, *(_DWORD *)v3[3].__r_.__value_.__l.__size_ - LODWORD(v3[3].__r_.__value_.__l.__data_));
    int v17 = LODWORD(v3[3].__r_.__value_.__l.__data_) + v14;
    LODWORD(v3[3].__r_.__value_.__l.__data_) = v17;
    uint64_t v18 = (int *)v3[3].__r_.__value_.__l.__size_;
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 96);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 104) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4((uint64_t)&v3[3].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 96));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[3].__r_.__value_.__r.__words[2], v21, v20, v19, *(_DWORD *)v3[4].__r_.__value_.__l.__size_ - LODWORD(v3[4].__r_.__value_.__l.__data_));
    int v22 = LODWORD(v3[4].__r_.__value_.__l.__data_) + v19;
    LODWORD(v3[4].__r_.__value_.__l.__data_) = v22;
    uint64_t v23 = (int *)v3[4].__r_.__value_.__l.__size_;
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 120);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 128) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4((uint64_t)&v3[4].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 120));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[4].__r_.__value_.__r.__words[2], v26, v25, v24, *(_DWORD *)v3[5].__r_.__value_.__l.__size_ - LODWORD(v3[5].__r_.__value_.__l.__data_));
    int v27 = LODWORD(v3[5].__r_.__value_.__l.__data_) + v24;
    LODWORD(v3[5].__r_.__value_.__l.__data_) = v27;
    int64_t v28 = (int *)v3[5].__r_.__value_.__l.__size_;
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 144);
  if (v29)
  {
    uint64_t v30 = (const std::string **)(*(void *)(a2 + 152) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4((uint64_t)&v3[5].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 144));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3[5].__r_.__value_.__r.__words[2], v31, v30, v29, *(_DWORD *)v3[6].__r_.__value_.__l.__size_ - LODWORD(v3[6].__r_.__value_.__l.__data_));
    int v32 = LODWORD(v3[6].__r_.__value_.__l.__data_) + v29;
    LODWORD(v3[6].__r_.__value_.__l.__data_) = v32;
    uint64_t v33 = (int *)v3[6].__r_.__value_.__l.__size_;
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 168);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 176) + 8);
    uint64_t v36 = (std::string **)sub_188CCE4((uint64_t)&v3[6].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 168));
    uint64_t result = (std::string *)sub_124F2E8((uint64_t *)&v3[6].__r_.__value_.__r.__words[2], v36, v35, v34, *(_DWORD *)v3[7].__r_.__value_.__l.__size_ - LODWORD(v3[7].__r_.__value_.__l.__data_));
    int v37 = LODWORD(v3[7].__r_.__value_.__l.__data_) + v34;
    LODWORD(v3[7].__r_.__value_.__l.__data_) = v37;
    uint64_t v38 = (int *)v3[7].__r_.__value_.__l.__size_;
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  uint64_t v39 = *(void *)(a2 + 8);
  if (v39)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v39 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1241C2C()
{
  return 1;
}

void *sub_1241C34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.MerchantInfo");
}

double sub_1241C44(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_249FA88;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
  double result = 0.0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = a2;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = a2;
  *(void *)(a1 + 256) = 0;
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = a2;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = a2;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = a2;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = a2;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = a2;
  *(void *)(a1 + 384) = a2;
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = a2;
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 440) = a2;
  *(void *)(a1 + 448) = a2;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = 0;
  *(void *)(a1 + 472) = a2;
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = 0;
  *(void *)(a1 + 496) = a2;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 512) = 0;
  *(void *)(a1 + 520) = a2;
  *(void *)(a1 + 536) = 0;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 544) = a2;
  *(void *)(a1 + 560) = 0;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 568) = a2;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 576) = 0;
  *(void *)(a1 + 592) = a2;
  *(void *)(a1 + 608) = 0;
  *(void *)(a1 + 600) = 0;
  *(void *)(a1 + 616) = 0;
  *(void *)(a1 + 624) = a2;
  *(void *)(a1 + 632) = a2;
  *(void *)(a1 + 648) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 656) = a2;
  *(void *)(a1 + 672) = 0;
  *(void *)(a1 + 664) = 0;
  *(void *)(a1 + 680) = a2;
  *(void *)(a1 + 696) = 0;
  *(void *)(a1 + 688) = 0;
  *(void *)(a1 + 704) = 0;
  *(void *)(a1 + 712) = a2;
  *(void *)(a1 + 720) = a2;
  *(void *)(a1 + 736) = 0;
  *(void *)(a1 + 728) = 0;
  *(void *)(a1 + 744) = a2;
  *(void *)(a1 + 760) = 0;
  *(void *)(a1 + 752) = 0;
  *(void *)(a1 + 768) = &qword_2550250;
  *(void *)(a1 + 776) = &qword_2550250;
  *(void *)(a1 + 784) = &qword_2550250;
  *(void *)(a1 + 792) = &qword_2550250;
  *(void *)(a1 + 800) = &qword_2550250;
  *(void *)(a1 + 808) = &qword_2550250;
  *(void *)(a1 + 816) = &qword_2550250;
  *(void *)(a1 + 824) = &qword_2550250;
  *(void *)(a1 + 832) = &qword_2550250;
  *(_OWORD *)(a1 + 1108) = 0u;
  *(_OWORD *)(a1 + 1080) = 0u;
  *(_OWORD *)(a1 + 1096) = 0u;
  *(_OWORD *)(a1 + 1048) = 0u;
  *(_OWORD *)(a1 + 1064) = 0u;
  *(_OWORD *)(a1 + 1016) = 0u;
  *(_OWORD *)(a1 + 1032) = 0u;
  *(_OWORD *)(a1 + 984) = 0u;
  *(_OWORD *)(a1 + 1000) = 0u;
  *(_OWORD *)(a1 + 952) = 0u;
  *(_OWORD *)(a1 + 968) = 0u;
  *(_OWORD *)(a1 + 920) = 0u;
  *(_OWORD *)(a1 + 936) = 0u;
  *(_OWORD *)(a1 + 888) = 0u;
  *(_OWORD *)(a1 + 904) = 0u;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 872) = 0u;
  *(_OWORD *)(a1 + 840) = 0u;
  return result;
}

void *sub_1241DD4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1241FB0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_124E54C(a1 + 93);
  sub_124E44C(a1 + 90);
  sub_1889DA8((uint64_t)(a1 + 88));
  sub_124E3CC(a1 + 85);
  sub_124E34C(a1 + 82);
  sub_124E2CC(a1 + 79);
  sub_1889DA8((uint64_t)(a1 + 77));
  sub_124E0CC(a1 + 74);
  sub_124E24C(a1 + 71);
  sub_124E1CC(a1 + 68);
  sub_124E1CC(a1 + 65);
  sub_124E1CC(a1 + 62);
  sub_124E1CC(a1 + 59);
  sub_124E74C(a1 + 56);
  sub_1889DA8((uint64_t)(a1 + 54));
  sub_124E14C(a1 + 51);
  sub_124E04C(a1 + 48);
  sub_1889DA8((uint64_t)(a1 + 46));
  sub_1889DE8(a1 + 43);
  sub_1889DE8(a1 + 40);
  sub_124DFCC(a1 + 37);
  sub_1889DE8(a1 + 34);
  sub_124DF4C(a1 + 31);
  sub_124DD4C(a1 + 28);
  sub_1889DE8(a1 + 25);
  sub_124E74C(a1 + 22);
  sub_122BA8C(a1 + 19);
  sub_1889DE8(a1 + 16);
  sub_1889DE8(a1 + 13);
  sub_1889DA8((uint64_t)(a1 + 11));
  sub_124E6CC(a1 + 8);
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1889DA8((uint64_t)(a1 + 4));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1241FB0(uint64_t result)
{
  int v1 = (void *)result;
  if (*(uint64_t **)(result + 768) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 768));
  }
  if (*(uint64_t **)(result + 776) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 776));
  }
  if (*(uint64_t **)(result + 784) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 784));
  }
  if (*(uint64_t **)(result + 792) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 792));
  }
  if (*(uint64_t **)(result + 800) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 800));
  }
  if (*(uint64_t **)(result + 808) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 808));
  }
  if (*(uint64_t **)(result + 816) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 816));
  }
  if (*(uint64_t **)(result + 824) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 824));
  }
  if (*(uint64_t **)(result + 832) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 832));
  }
  if ((uint64_t (***)())result != &off_252EB50)
  {
    if (*(void *)(result + 840))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v2 = *(void **)(result + 848);
    if (v2)
    {
      sub_123D7E8(v2);
      operator delete();
    }
    if (v1[107])
    {
      sub_12CA25C();
      operator delete();
    }
    if (v1[108])
    {
      sub_15BC200();
      operator delete();
    }
    if (v1[109])
    {
      sub_1418750();
      operator delete();
    }
    uint64_t v3 = (void *)v1[110];
    if (v3)
    {
      sub_123E4D0(v3);
      operator delete();
    }
    if (v1[111])
    {
      sub_13F6F8C();
      operator delete();
    }
    int v4 = (void *)v1[112];
    if (v4)
    {
      sub_12407B4(v4);
      operator delete();
    }
    if (v1[113])
    {
      sub_15B6D48();
      operator delete();
    }
    uint64_t v5 = (void *)v1[114];
    if (v5)
    {
      sub_123D7E8(v5);
      operator delete();
    }
    if (v1[115])
    {
      sub_13F6F8C();
      operator delete();
    }
    uint64_t v6 = (void *)v1[116];
    if (v6)
    {
      sub_123CE88(v6);
      operator delete();
    }
    if (v1[117])
    {
      sub_140D044();
      operator delete();
    }
    double result = v1[118];
    if (result)
    {
      sub_123C130((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_1242278(void *a1)
{
  sub_1241DD4(a1);

  operator delete();
}

uint64_t sub_12422B0(uint64_t a1)
{
  *(_DWORD *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 72);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_12CE228(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 72) = 0;
  }
  *(_DWORD *)(a1 + 88) = 0;
  sub_188CC00(a1 + 104);
  sub_188CC00(a1 + 128);
  uint64_t v5 = *(unsigned int *)(a1 + 160);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 168) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_149FADC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 160) = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 184);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(a1 + 192) + 8);
    do
    {
      uint64_t v10 = *v9++;
      sub_123DC58(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(a1 + 184) = 0;
  }
  sub_188CC00(a1 + 200);
  uint64_t v11 = *(unsigned int *)(a1 + 232);
  if ((int)v11 >= 1)
  {
    int v12 = (uint64_t *)(*(void *)(a1 + 240) + 8);
    do
    {
      uint64_t v13 = *v12++;
      sub_14532E4(v13);
      --v11;
    }
    while (v11);
    *(_DWORD *)(a1 + 232) = 0;
  }
  uint64_t v14 = *(unsigned int *)(a1 + 256);
  if ((int)v14 >= 1)
  {
    uint64_t v15 = (unsigned char **)(*(void *)(a1 + 264) + 8);
    do
    {
      int64_t v16 = *v15++;
      sub_124AE5C(v16);
      --v14;
    }
    while (v14);
    *(_DWORD *)(a1 + 256) = 0;
  }
  sub_188CC00(a1 + 272);
  uint64_t v17 = *(unsigned int *)(a1 + 304);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = (unsigned char **)(*(void *)(a1 + 312) + 8);
    do
    {
      int v19 = *v18++;
      sub_124B4EC(v19);
      --v17;
    }
    while (v17);
    *(_DWORD *)(a1 + 304) = 0;
  }
  sub_188CC00(a1 + 320);
  uint64_t result = sub_188CC00(a1 + 344);
  *(_DWORD *)(a1 + 368) = 0;
  uint64_t v21 = *(unsigned int *)(a1 + 392);
  if ((int)v21 >= 1)
  {
    int v22 = (uint64_t *)(*(void *)(a1 + 400) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_1411AA0(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 392) = 0;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 416);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a1 + 424) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_13F4BF0(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 416) = 0;
  }
  *(_DWORD *)(a1 + 432) = 0;
  uint64_t v27 = *(unsigned int *)(a1 + 456);
  if ((int)v27 >= 1)
  {
    int64_t v28 = (uint64_t *)(*(void *)(a1 + 464) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t result = sub_123DC58(v29);
      --v27;
    }
    while (v27);
    *(_DWORD *)(a1 + 456) = 0;
  }
  uint64_t v30 = *(unsigned int *)(a1 + 480);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a1 + 488) + 8);
    do
    {
      uint64_t v32 = *v31++;
      uint64_t result = sub_123A2E0(v32);
      --v30;
    }
    while (v30);
    *(_DWORD *)(a1 + 480) = 0;
  }
  uint64_t v33 = *(unsigned int *)(a1 + 504);
  if ((int)v33 >= 1)
  {
    int v34 = (uint64_t *)(*(void *)(a1 + 512) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = sub_123A2E0(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 504) = 0;
  }
  uint64_t v36 = *(unsigned int *)(a1 + 528);
  if ((int)v36 >= 1)
  {
    int v37 = (uint64_t *)(*(void *)(a1 + 536) + 8);
    do
    {
      uint64_t v38 = *v37++;
      uint64_t result = sub_123A2E0(v38);
      --v36;
    }
    while (v36);
    *(_DWORD *)(a1 + 528) = 0;
  }
  uint64_t v39 = *(unsigned int *)(a1 + 552);
  if ((int)v39 >= 1)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a1 + 560) + 8);
    do
    {
      uint64_t v41 = *v40++;
      uint64_t result = sub_123A2E0(v41);
      --v39;
    }
    while (v39);
    *(_DWORD *)(a1 + 552) = 0;
  }
  uint64_t v42 = *(unsigned int *)(a1 + 576);
  if ((int)v42 >= 1)
  {
    uint64_t v43 = (uint64_t *)(*(void *)(a1 + 584) + 8);
    do
    {
      uint64_t v44 = *v43++;
      uint64_t result = sub_123A7E8(v44);
      --v42;
    }
    while (v42);
    *(_DWORD *)(a1 + 576) = 0;
  }
  uint64_t v45 = *(unsigned int *)(a1 + 600);
  if ((int)v45 >= 1)
  {
    unint64_t v46 = (uint64_t *)(*(void *)(a1 + 608) + 8);
    do
    {
      uint64_t v47 = *v46++;
      uint64_t result = sub_15A2AD8(v47);
      --v45;
    }
    while (v45);
    *(_DWORD *)(a1 + 600) = 0;
  }
  *(_DWORD *)(a1 + 616) = 0;
  uint64_t v48 = *(unsigned int *)(a1 + 640);
  if ((int)v48 >= 1)
  {
    unint64_t v49 = (uint64_t *)(*(void *)(a1 + 648) + 8);
    do
    {
      uint64_t v50 = *v49++;
      uint64_t result = sub_123C588(v50);
      --v48;
    }
    while (v48);
    *(_DWORD *)(a1 + 640) = 0;
  }
  uint64_t v51 = *(unsigned int *)(a1 + 664);
  if ((int)v51 >= 1)
  {
    uint64_t v52 = (uint64_t *)(*(void *)(a1 + 672) + 8);
    do
    {
      uint64_t v53 = *v52++;
      uint64_t result = sub_123CA30(v53);
      --v51;
    }
    while (v51);
    *(_DWORD *)(a1 + 664) = 0;
  }
  uint64_t v54 = *(unsigned int *)(a1 + 688);
  if ((int)v54 >= 1)
  {
    int v55 = (uint64_t *)(*(void *)(a1 + 696) + 8);
    do
    {
      uint64_t v56 = *v55++;
      uint64_t result = sub_13F6FC8(v56);
      --v54;
    }
    while (v54);
    *(_DWORD *)(a1 + 688) = 0;
  }
  *(_DWORD *)(a1 + 704) = 0;
  uint64_t v57 = *(unsigned int *)(a1 + 728);
  if ((int)v57 >= 1)
  {
    int v58 = (uint64_t *)(*(void *)(a1 + 736) + 8);
    do
    {
      uint64_t v59 = *v58++;
      uint64_t result = sub_13F4B4C(v59);
      --v57;
    }
    while (v57);
    *(_DWORD *)(a1 + 728) = 0;
  }
  uint64_t v60 = *(unsigned int *)(a1 + 752);
  if ((int)v60 >= 1)
  {
    int v61 = (uint64_t *)(*(void *)(a1 + 760) + 8);
    do
    {
      uint64_t v62 = *v61++;
      uint64_t result = sub_1414170(v62);
      --v60;
    }
    while (v60);
    *(_DWORD *)(a1 + 752) = 0;
  }
  unsigned int v63 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v63)
  {
    if ((v63 & 1) == 0)
    {
      if ((v63 & 2) == 0) {
        goto LABEL_84;
      }
LABEL_95:
      unint64_t v65 = *(void *)(a1 + 776) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v65 + 23) < 0)
      {
        **(unsigned char **)unint64_t v65 = 0;
        *(void *)(v65 + 8) = 0;
        if ((v63 & 4) != 0) {
          goto LABEL_99;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v65 = 0;
        *(unsigned char *)(v65 + 23) = 0;
        if ((v63 & 4) != 0) {
          goto LABEL_99;
        }
      }
LABEL_85:
      if ((v63 & 8) == 0) {
        goto LABEL_86;
      }
LABEL_103:
      unint64_t v67 = *(void *)(a1 + 792) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v67 + 23) < 0)
      {
        **(unsigned char **)unint64_t v67 = 0;
        *(void *)(v67 + 8) = 0;
        if ((v63 & 0x10) != 0) {
          goto LABEL_107;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v67 = 0;
        *(unsigned char *)(v67 + 23) = 0;
        if ((v63 & 0x10) != 0) {
          goto LABEL_107;
        }
      }
LABEL_87:
      if ((v63 & 0x20) == 0) {
        goto LABEL_88;
      }
LABEL_111:
      unint64_t v69 = *(void *)(a1 + 808) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v69 + 23) < 0)
      {
        **(unsigned char **)unint64_t v69 = 0;
        *(void *)(v69 + 8) = 0;
        if ((v63 & 0x40) != 0) {
          goto LABEL_115;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v69 = 0;
        *(unsigned char *)(v69 + 23) = 0;
        if ((v63 & 0x40) != 0) {
          goto LABEL_115;
        }
      }
LABEL_89:
      if ((v63 & 0x80) == 0) {
        goto LABEL_122;
      }
LABEL_119:
      unint64_t v71 = *(void *)(a1 + 824) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v71 + 23) < 0)
      {
        **(unsigned char **)unint64_t v71 = 0;
        *(void *)(v71 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v71 = 0;
        *(unsigned char *)(v71 + 23) = 0;
      }
      goto LABEL_122;
    }
    unint64_t v64 = *(void *)(a1 + 768) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v64 + 23) < 0)
    {
      **(unsigned char **)unint64_t v64 = 0;
      *(void *)(v64 + 8) = 0;
      if ((v63 & 2) != 0) {
        goto LABEL_95;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v64 = 0;
      *(unsigned char *)(v64 + 23) = 0;
      if ((v63 & 2) != 0) {
        goto LABEL_95;
      }
    }
LABEL_84:
    if ((v63 & 4) == 0) {
      goto LABEL_85;
    }
LABEL_99:
    unint64_t v66 = *(void *)(a1 + 784) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v66 + 23) < 0)
    {
      **(unsigned char **)unint64_t v66 = 0;
      *(void *)(v66 + 8) = 0;
      if ((v63 & 8) != 0) {
        goto LABEL_103;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v66 = 0;
      *(unsigned char *)(v66 + 23) = 0;
      if ((v63 & 8) != 0) {
        goto LABEL_103;
      }
    }
LABEL_86:
    if ((v63 & 0x10) == 0) {
      goto LABEL_87;
    }
LABEL_107:
    unint64_t v68 = *(void *)(a1 + 800) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v68 + 23) < 0)
    {
      **(unsigned char **)unint64_t v68 = 0;
      *(void *)(v68 + 8) = 0;
      if ((v63 & 0x20) != 0) {
        goto LABEL_111;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v68 = 0;
      *(unsigned char *)(v68 + 23) = 0;
      if ((v63 & 0x20) != 0) {
        goto LABEL_111;
      }
    }
LABEL_88:
    if ((v63 & 0x40) == 0) {
      goto LABEL_89;
    }
LABEL_115:
    unint64_t v70 = *(void *)(a1 + 816) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v70 + 23) < 0)
    {
      **(unsigned char **)unint64_t v70 = 0;
      *(void *)(v70 + 8) = 0;
      if ((v63 & 0x80) == 0) {
        goto LABEL_122;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v70 = 0;
      *(unsigned char *)(v70 + 23) = 0;
      if ((v63 & 0x80) == 0) {
        goto LABEL_122;
      }
    }
    goto LABEL_119;
  }
LABEL_122:
  if ((v63 & 0xFF00) == 0) {
    goto LABEL_140;
  }
  if ((v63 & 0x100) != 0)
  {
    unint64_t v72 = *(void *)(a1 + 832) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v72 + 23) < 0)
    {
      **(unsigned char **)unint64_t v72 = 0;
      *(void *)(v72 + 8) = 0;
      if ((v63 & 0x200) != 0) {
        goto LABEL_131;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v72 = 0;
      *(unsigned char *)(v72 + 23) = 0;
      if ((v63 & 0x200) != 0) {
        goto LABEL_131;
      }
    }
LABEL_125:
    if ((v63 & 0x400) == 0) {
      goto LABEL_134;
    }
    goto LABEL_132;
  }
  if ((v63 & 0x200) == 0) {
    goto LABEL_125;
  }
LABEL_131:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 840));
  if ((v63 & 0x400) == 0) {
    goto LABEL_134;
  }
LABEL_132:
  uint64_t v73 = *(void *)(a1 + 848);
  char v74 = *(unsigned char *)(v73 + 8);
  uint64_t result = v73 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v74) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_134:
  if ((v63 & 0x800) != 0)
  {
    uint64_t result = sub_12CA298(*(void *)(a1 + 856));
    if ((v63 & 0x1000) == 0)
    {
LABEL_136:
      if ((v63 & 0x2000) == 0) {
        goto LABEL_137;
      }
      goto LABEL_147;
    }
  }
  else if ((v63 & 0x1000) == 0)
  {
    goto LABEL_136;
  }
  uint64_t result = sub_15BC23C(*(void *)(a1 + 864));
  if ((v63 & 0x2000) == 0)
  {
LABEL_137:
    if ((v63 & 0x4000) == 0) {
      goto LABEL_138;
    }
    goto LABEL_148;
  }
LABEL_147:
  uint64_t result = (uint64_t)sub_14152E8(*(std::string **)(a1 + 872));
  if ((v63 & 0x4000) == 0)
  {
LABEL_138:
    if ((v63 & 0x8000) == 0) {
      goto LABEL_140;
    }
    goto LABEL_139;
  }
LABEL_148:
  uint64_t result = sub_123E59C(*(void *)(a1 + 880));
  if ((v63 & 0x8000) != 0) {
LABEL_139:
  }
    uint64_t result = sub_13F6FC8(*(void *)(a1 + 888));
LABEL_140:
  if ((v63 & 0x7F0000) == 0) {
    goto LABEL_159;
  }
  if ((v63 & 0x10000) != 0)
  {
    uint64_t result = sub_124089C(*(void *)(a1 + 896));
    if ((v63 & 0x20000) == 0)
    {
LABEL_143:
      if ((v63 & 0x40000) == 0) {
        goto LABEL_154;
      }
      goto LABEL_152;
    }
  }
  else if ((v63 & 0x20000) == 0)
  {
    goto LABEL_143;
  }
  uint64_t result = sub_15B6D84(*(void *)(a1 + 904));
  if ((v63 & 0x40000) == 0) {
    goto LABEL_154;
  }
LABEL_152:
  uint64_t v75 = *(void *)(a1 + 912);
  char v76 = *(unsigned char *)(v75 + 8);
  uint64_t result = v75 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v76) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_154:
  if ((v63 & 0x80000) != 0)
  {
    uint64_t result = sub_13F6FC8(*(void *)(a1 + 920));
    if ((v63 & 0x100000) == 0)
    {
LABEL_156:
      if ((v63 & 0x200000) == 0) {
        goto LABEL_157;
      }
      goto LABEL_175;
    }
  }
  else if ((v63 & 0x100000) == 0)
  {
    goto LABEL_156;
  }
  uint64_t result = sub_123ADE4(*(void *)(a1 + 928));
  if ((v63 & 0x200000) == 0)
  {
LABEL_157:
    if ((v63 & 0x400000) == 0) {
      goto LABEL_159;
    }
    goto LABEL_158;
  }
LABEL_175:
  uint64_t result = sub_140D080(*(void *)(a1 + 936));
  if ((v63 & 0x400000) != 0) {
LABEL_158:
  }
    uint64_t result = sub_123AE30(*(void *)(a1 + 944));
LABEL_159:
  *(void *)(a1 + 952) = 0;
  if (HIBYTE(v63))
  {
    *(_OWORD *)(a1 + 960) = 0u;
    *(_OWORD *)(a1 + 976) = 0u;
  }
  int v77 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v77)
  {
    *(_OWORD *)(a1 + 992) = 0u;
    *(_OWORD *)(a1 + 1008) = 0u;
    *(_OWORD *)(a1 + 1022) = 0u;
  }
  if ((v77 & 0xFF00) != 0)
  {
    *(void *)(a1 + 1052) = 0;
    *(_OWORD *)(a1 + 1038) = 0u;
  }
  if ((v77 & 0xFF0000) != 0)
  {
    *(_DWORD *)(a1 + 1092) = 0;
    *(_OWORD *)(a1 + 1060) = 0u;
    *(_OWORD *)(a1 + 1076) = 0u;
  }
  if ((v77 & 0xF000000) != 0)
  {
    *(_DWORD *)(a1 + 1120) = 0;
    *(void *)(a1 + 1112) = 0;
    *(_OWORD *)(a1 + 1096) = 0u;
  }
  char v79 = *(unsigned char *)(a1 + 8);
  uint64_t v78 = (uint64_t *)(a1 + 8);
  v78[1] = 0;
  if (v79)
  {
    return sub_188B4AC(v78);
  }
  return result;
}

char *sub_12429DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v386 = a2;
  char v5 = sub_11947B8((uint64_t)a3, &v386, a3[11].i32[1]);
  uint64_t result = v386;
  if (v5) {
    return result;
  }
  v359 = (uint64_t *)(a1 + 8);
  v378 = (uint64_t *)(a1 + 720);
  v379 = (uint64_t *)(a1 + 744);
  v376 = (uint64_t *)(a1 + 656);
  uint64_t v377 = (uint64_t *)(a1 + 680);
  uint64_t v7 = (unsigned int *)(a1 + 616);
  v374 = (uint64_t *)(a1 + 592);
  v375 = (uint64_t *)(a1 + 632);
  v372 = (uint64_t *)(a1 + 544);
  int v373 = (uint64_t *)(a1 + 568);
  uint64_t v370 = (uint64_t *)(a1 + 496);
  uint64_t v371 = (uint64_t *)(a1 + 520);
  v368 = (uint64_t *)(a1 + 448);
  uint64_t v369 = (uint64_t *)(a1 + 472);
  v366 = (uint64_t *)(a1 + 384);
  v367 = (uint64_t *)(a1 + 408);
  uint64_t v8 = (unsigned int *)(a1 + 368);
  uint64_t v384 = (uint64_t **)(a1 + 320);
  v385 = (uint64_t **)(a1 + 344);
  uint64_t v365 = (uint64_t *)(a1 + 296);
  int v383 = (uint64_t **)(a1 + 272);
  v363 = (uint64_t *)(a1 + 224);
  v364 = (uint64_t *)(a1 + 248);
  v382 = (uint64_t **)(a1 + 200);
  v361 = (uint64_t *)(a1 + 152);
  v362 = (uint64_t *)(a1 + 176);
  v380 = (uint64_t **)(a1 + 104);
  uint64_t v381 = (uint64_t **)(a1 + 128);
  v360 = (uint64_t *)(a1 + 64);
  int v9 = (unsigned int *)(a1 + 48);
  uint64_t v10 = (unsigned int *)(a1 + 32);
  while (2)
  {
    uint64_t v11 = result + 1;
    unsigned int v12 = *result;
    if (*result < 0)
    {
      int v13 = *v11;
      unsigned int v14 = v12 + (v13 << 7);
      unsigned int v12 = v14 - 128;
      if (v13 < 0)
      {
        uint64_t v11 = (char *)sub_188C180((uint64_t)result, v14 - 128);
        unsigned int v12 = v15;
      }
      else
      {
        uint64_t v11 = result + 2;
      }
    }
    int v386 = v11;
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 8) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x800000u;
        int64_t v16 = v11 + 1;
        uint64_t v17 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if ((v18 & 0x80000000) == 0)
        {
          int64_t v16 = v11 + 2;
LABEL_13:
          int v386 = v16;
          *(void *)(a1 + 952) = v17;
          goto LABEL_653;
        }
        uint64_t result = (char *)sub_188C138((uint64_t)v11, v17);
        int v386 = result;
        *(void *)(a1 + 952) = v327;
        if (!result) {
          return result;
        }
        goto LABEL_653;
      case 2u:
        if (v12 != 18) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v19 = *(void *)(a1 + 840);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 840) = v19;
          uint64_t v11 = v386;
        }
        uint64_t result = sub_1198F14(a3, v19, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 4u:
        if (v12 != 34) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v21 = *(void **)(a1 + 848);
        if (v21) {
          goto LABEL_582;
        }
        int v22 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v359) {
          int v22 = (void *)*v22;
        }
        uint64_t v21 = sub_124BDD4((uint64_t)v22);
        *(void *)(a1 + 848) = v21;
        goto LABEL_581;
      case 5u:
        if (v12 != 40) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000000u;
        uint64_t v23 = v11 + 1;
        uint64_t v24 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v24);
          int v386 = result;
          *(void *)(a1 + 960) = v328;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v23 = v11 + 2;
LABEL_29:
          int v386 = v23;
          *(void *)(a1 + 960) = v24;
        }
        goto LABEL_653;
      case 6u:
        if (v12 != 48) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000000u;
        uint64_t v27 = v11 + 1;
        LODWORD(v26) = *v11;
        if ((v26 & 0x80) == 0) {
          goto LABEL_34;
        }
        int v28 = *v27;
        uint64_t v26 = v26 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v26);
          int v386 = result;
          *(_DWORD *)(a1 + 976) = v329;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v27 = v11 + 2;
LABEL_34:
          int v386 = v27;
          *(_DWORD *)(a1 + 976) = v26;
        }
        goto LABEL_653;
      case 7u:
        if (v12 != 56) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000000u;
        uint64_t v29 = v11 + 1;
        uint64_t v30 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v30);
          int v386 = result;
          *(unsigned char *)(a1 + 980) = v330 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v29 = v11 + 2;
LABEL_39:
          int v386 = v29;
          *(unsigned char *)(a1 + 980) = v30 != 0;
        }
        goto LABEL_653;
      case 8u:
        if (v12 == 65)
        {
          uint64_t v32 = v11 - 1;
          unsigned int v33 = *v10;
          do
          {
            int v34 = v32 + 1;
            int v386 = v32 + 1;
            uint64_t v35 = *(void *)(v32 + 1);
            if (v33 == *(_DWORD *)(a1 + 36))
            {
              sub_188CA54((unsigned int *)(a1 + 32), v33 + 1);
              *(void *)(*(void *)(a1 + 40) + 8 * v33) = v35;
              int v34 = v386;
            }
            else
            {
              *(void *)(*(void *)(a1 + 40) + 8 * v33) = v35;
            }
            *uint64_t v10 = ++v33;
            uint64_t v32 = v34 + 8;
            int v386 = v34 + 8;
          }
          while (*(void *)a3 > (unint64_t)(v34 + 8) && *v32 == 65);
          goto LABEL_653;
        }
        if (v12 != 66) {
          goto LABEL_725;
        }
        uint64_t v354 = a1 + 32;
        goto LABEL_713;
      case 9u:
        if (v12 != 72) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000000u;
        uint64_t v36 = v11 + 1;
        uint64_t v37 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v38 = *v36;
        uint64_t v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v37);
          int v386 = result;
          *(unsigned char *)(a1 + 981) = v331 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v36 = v11 + 2;
LABEL_52:
          int v386 = v36;
          *(unsigned char *)(a1 + 981) = v37 != 0;
        }
        goto LABEL_653;
      case 0xAu:
        if (v12 == 81)
        {
          uint64_t v39 = v11 - 1;
          unsigned int v40 = *v9;
          do
          {
            uint64_t v41 = v39 + 1;
            int v386 = v39 + 1;
            uint64_t v42 = *(void *)(v39 + 1);
            if (v40 == *(_DWORD *)(a1 + 52))
            {
              sub_188CA54((unsigned int *)(a1 + 48), v40 + 1);
              *(void *)(*(void *)(a1 + 56) + 8 * v40) = v42;
              uint64_t v41 = v386;
            }
            else
            {
              *(void *)(*(void *)(a1 + 56) + 8 * v40) = v42;
            }
            *int v9 = ++v40;
            uint64_t v39 = v41 + 8;
            int v386 = v41 + 8;
          }
          while (*(void *)a3 > (unint64_t)(v41 + 8) && *v39 == 81);
          goto LABEL_653;
        }
        if (v12 != 82) {
          goto LABEL_725;
        }
        uint64_t v354 = a1 + 48;
LABEL_713:
        uint64_t result = (char *)sub_188C3D4(v354, v11, a3);
        goto LABEL_652;
      case 0xBu:
        if (v12 != 89) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000000u;
        uint64_t v44 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 968) = v44;
        goto LABEL_565;
      case 0xCu:
        if (v12 != 98) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 1;
        while (1)
        {
          uint64_t v45 = (unsigned __int8 *)(result + 1);
          int v386 = result + 1;
          unint64_t v46 = *(_DWORD **)(a1 + 80);
          if (v46 && (uint64_t v47 = *(int *)(a1 + 72), (int)v47 < *v46))
          {
            *(_DWORD *)(a1 + 72) = v47 + 1;
            uint64_t v48 = *(void *)&v46[2 * v47 + 2];
          }
          else
          {
            uint64_t v49 = sub_12D09A8(*v360);
            uint64_t v48 = sub_188CDC8((uint64_t)v360, v49);
            uint64_t v45 = (unsigned __int8 *)v386;
          }
          uint64_t result = sub_1245848(a3, v48, v45);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 98) {
            goto LABEL_653;
          }
        }
      case 0xDu:
        if (v12 != 106) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x800u;
        uint64_t v231 = *(void *)(a1 + 856);
        if (!v231)
        {
          uint64_t v232 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v232 = (void *)*v232;
          }
          sub_12CCBF0((uint64_t)v232);
          uint64_t v231 = v233;
          *(void *)(a1 + 856) = v233;
          uint64_t v11 = v386;
        }
        uint64_t result = sub_123AEE4(a3, v231, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0xEu:
        if (v12 != 113) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000000;
        uint64_t v234 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 984) = v234;
        goto LABEL_565;
      case 0xFu:
        if (v12 != 120) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 1u;
        uint64_t v50 = v11 + 1;
        uint64_t v51 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_77;
        }
        int v52 = *v50;
        uint64_t v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v51);
          int v386 = result;
          *(void *)(a1 + 992) = v332;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v50 = v11 + 2;
LABEL_77:
          int v386 = v50;
          *(void *)(a1 + 992) = v51;
        }
        goto LABEL_653;
      case 0x10u:
        if (v12 != 128) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 2u;
        uint64_t v53 = v11 + 1;
        uint64_t v54 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_82;
        }
        int v55 = *v53;
        uint64_t v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v54);
          int v386 = result;
          *(void *)(a1 + 1000) = v333;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v53 = v11 + 2;
LABEL_82:
          int v386 = v53;
          *(void *)(a1 + 1000) = v54;
        }
        goto LABEL_653;
      case 0x11u:
        if (v12 == 136)
        {
          uint64_t result = v11 - 2;
          while (1)
          {
            int v386 = result + 2;
            uint64_t v235 = result[2];
            if (result[2] < 0)
            {
              int v236 = v235 + (result[3] << 7);
              uint64_t v235 = (v236 - 128);
              if (result[3] < 0)
              {
                uint64_t result = (char *)sub_188C138((uint64_t)(result + 2), (v236 - 128));
                uint64_t v235 = v237;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            int v386 = result;
            uint64_t v238 = *(unsigned int *)(a1 + 88);
            if (v238 == *(_DWORD *)(a1 + 92))
            {
              int v239 = v238 + 1;
              sub_188CA54((unsigned int *)(a1 + 88), v238 + 1);
              *(void *)(*(void *)(a1 + 96) + 8 * v238) = v235;
              uint64_t result = v386;
            }
            else
            {
              *(void *)(*(void *)(a1 + 96) + 8 * v238) = v235;
              int v239 = v238 + 1;
            }
            *(_DWORD *)(a1 + 88) = v239;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 392) {
              goto LABEL_653;
            }
          }
        }
        if (v12 != 138) {
          goto LABEL_725;
        }
        v355 = (unsigned int *)(a1 + 88);
        goto LABEL_724;
      case 0x12u:
        if (v12 != 144) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000000u;
        uint64_t v56 = v11 + 1;
        uint64_t v57 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_87;
        }
        int v58 = *v56;
        uint64_t v57 = v57 + (v58 << 7) - 128;
        if (v58 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v57);
          int v386 = result;
          *(unsigned char *)(a1 + 982) = v334 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v56 = v11 + 2;
LABEL_87:
          int v386 = v56;
          *(unsigned char *)(a1 + 982) = v57 != 0;
        }
        goto LABEL_653;
      case 0x13u:
        if (v12 != 153) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 4u;
        uint64_t v240 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1008) = v240;
        goto LABEL_565;
      case 0x14u:
        if (v12 != 161) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 8u;
        uint64_t v59 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1016) = v59;
        goto LABEL_565;
      case 0x15u:
        if (v12 != 168) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000000u;
        uint64_t v60 = v11 + 1;
        uint64_t v61 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_94;
        }
        int v62 = *v60;
        uint64_t v61 = v61 + (v62 << 7) - 128;
        if (v62 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v61);
          int v386 = result;
          *(unsigned char *)(a1 + 983) = v335 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v60 = v11 + 2;
LABEL_94:
          int v386 = v60;
          *(unsigned char *)(a1 + 983) = v61 != 0;
        }
        goto LABEL_653;
      case 0x16u:
        if (v12 != 177) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x10u;
        uint64_t v63 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1024) = v63;
        goto LABEL_565;
      case 0x17u:
        if (v12 != 184) {
          goto LABEL_725;
        }
        unint64_t v64 = v11 + 1;
        unint64_t v65 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_101;
        }
        int v66 = *v64;
        int v67 = v65 + (v66 << 7);
        unint64_t v65 = (v67 - 128);
        if (v66 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, (v67 - 128));
          int v386 = result;
          if (!result) {
            return result;
          }
          unint64_t v65 = v336;
        }
        else
        {
          unint64_t v64 = v11 + 2;
LABEL_101:
          int v386 = v64;
        }
        if (sub_15207B0(v65))
        {
          *(_DWORD *)(a1 + 20) |= 0x20u;
          *(_DWORD *)(a1 + 1032) = v65;
        }
        else
        {
          if (*v359) {
            uint64_t v358 = (std::string *)((*v359 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v358 = (std::string *)sub_188DBD8(v359);
          }
          sub_188C020(23, v65, v358);
          uint64_t v7 = (unsigned int *)(a1 + 616);
          uint64_t v8 = (unsigned int *)(a1 + 368);
        }
        goto LABEL_653;
      case 0x18u:
        if (v12 != 194) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v68 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v68 & 0xFFFFFFFFFFFFFFFCLL);
        if (v68) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 768);
        goto LABEL_651;
      case 0x19u:
        if (v12 != 202) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          unint64_t v71 = result + 2;
          int v386 = result + 2;
          unint64_t v72 = *(_DWORD **)(a1 + 120);
          if (v72 && (uint64_t v73 = *(int *)(a1 + 112), (int)v73 < *v72))
          {
            *(_DWORD *)(a1 + 112) = v73 + 1;
            char v74 = *(std::string **)&v72[2 * v73 + 2];
          }
          else
          {
            if (!*v380) {
              operator new();
            }
            *char v76 = v75;
            v76[1] = sub_3A6EDC;
            void *v75 = 0;
            v75[1] = 0;
            v75[2] = 0;
            char v74 = (std::string *)sub_188CDC8((uint64_t)v380, (uint64_t)v75);
            unint64_t v71 = v386;
          }
          uint64_t result = (char *)sub_188C244(v74, v71, (uint64_t)a3);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 458) {
            goto LABEL_653;
          }
        }
      case 0x1Au:
        if (v12 != 210) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v241 = result + 2;
          int v386 = result + 2;
          int v242 = *(_DWORD **)(a1 + 144);
          if (v242 && (uint64_t v243 = *(int *)(a1 + 136), (int)v243 < *v242))
          {
            *(_DWORD *)(a1 + 136) = v243 + 1;
            uint64_t v244 = *(std::string **)&v242[2 * v243 + 2];
          }
          else
          {
            if (!*v381) {
              operator new();
            }
            void *v246 = v245;
            v246[1] = sub_3A6EDC;
            void *v245 = 0;
            v245[1] = 0;
            v245[2] = 0;
            uint64_t v244 = (std::string *)sub_188CDC8((uint64_t)v381, (uint64_t)v245);
            uint64_t v241 = v386;
          }
          uint64_t result = (char *)sub_188C244(v244, v241, (uint64_t)a3);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 466) {
            goto LABEL_653;
          }
        }
      case 0x1Bu:
        if (v12 != 218) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v77 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v78 = *(_DWORD **)(a1 + 168);
          if (v78 && (uint64_t v79 = *(int *)(a1 + 160), (int)v79 < *v78))
          {
            *(_DWORD *)(a1 + 160) = v79 + 1;
            uint64_t v80 = *(void *)&v78[2 * v79 + 2];
          }
          else
          {
            uint64_t v81 = sub_14A23B8(*v361);
            uint64_t v80 = sub_188CDC8((uint64_t)v361, (uint64_t)v81);
            int v77 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_11EAAEC(a3, v80, v77);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 474) {
            goto LABEL_653;
          }
        }
      case 0x1Cu:
        if (v12 != 226) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          BOOL v82 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v83 = *(_DWORD **)(a1 + 192);
          if (v83 && (uint64_t v84 = *(int *)(a1 + 184), (int)v84 < *v83))
          {
            *(_DWORD *)(a1 + 184) = v84 + 1;
            uint64_t v85 = *(void *)&v83[2 * v84 + 2];
          }
          else
          {
            uint64_t v86 = sub_124BE4C(*v362);
            uint64_t v85 = sub_188CDC8((uint64_t)v362, (uint64_t)v86);
            BOOL v82 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_12458D8(a3, v85, v82);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 482) {
            goto LABEL_653;
          }
        }
      case 0x1Du:
        if (v12 != 234) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v87 = result + 2;
          int v386 = result + 2;
          uint64_t v88 = *(_DWORD **)(a1 + 216);
          if (v88 && (uint64_t v89 = *(int *)(a1 + 208), (int)v89 < *v88))
          {
            *(_DWORD *)(a1 + 208) = v89 + 1;
            int v90 = *(std::string **)&v88[2 * v89 + 2];
          }
          else
          {
            if (!*v382) {
              operator new();
            }
            *int v92 = v91;
            v92[1] = sub_3A6EDC;
            void *v91 = 0;
            v91[1] = 0;
            v91[2] = 0;
            int v90 = (std::string *)sub_188CDC8((uint64_t)v382, (uint64_t)v91);
            int v87 = v386;
          }
          uint64_t result = (char *)sub_188C244(v90, v87, (uint64_t)a3);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 490) {
            goto LABEL_653;
          }
        }
      case 0x1Eu:
        if (v12 != 242) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x1000u;
        uint64_t v93 = *(void **)(a1 + 864);
        if (!v93)
        {
          int v94 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            int v94 = (void *)*v94;
          }
          uint64_t v93 = sub_15C221C((uint64_t)v94);
          *(void *)(a1 + 864) = v93;
          uint64_t v11 = v386;
        }
        uint64_t result = (char *)sub_123B1B4(a3, (uint64_t)v93, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x1Fu:
        if (v12 != 250) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v95 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v96 = *(_DWORD **)(a1 + 240);
          if (v96 && (uint64_t v97 = *(int *)(a1 + 232), (int)v97 < *v96))
          {
            *(_DWORD *)(a1 + 232) = v97 + 1;
            uint64_t v98 = *(void *)&v96[2 * v97 + 2];
          }
          else
          {
            uint64_t v99 = sub_14785D4(*v363);
            uint64_t v98 = sub_188CDC8((uint64_t)v363, v99);
            uint64_t v95 = (unsigned __int8 *)v386;
          }
          uint64_t result = sub_123AF74(a3, v98, v95);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 506) {
            goto LABEL_653;
          }
        }
      case 0x20u:
        if (v12 != 2) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x2000u;
        uint64_t v247 = *(void **)(a1 + 872);
        if (!v247)
        {
          uint64_t v248 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v248 = (void *)*v248;
          }
          uint64_t v247 = sub_144A82C((uint64_t)v248);
          *(void *)(a1 + 872) = v247;
          uint64_t v11 = v386;
        }
        uint64_t result = (char *)sub_123B244(a3, (uint64_t)v247, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x21u:
        if (v12 != 10) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v100 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v100 & 0xFFFFFFFFFFFFFFFCLL);
        if (v100) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 776);
        goto LABEL_651;
      case 0x22u:
        if (v12 != 16) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x40u;
        uint64_t v101 = v11 + 1;
        uint64_t v102 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_176;
        }
        int v103 = *v101;
        uint64_t v102 = v102 + (v103 << 7) - 128;
        if (v103 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v102);
          int v386 = result;
          *(unsigned char *)(a1 + 1036) = v337 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v101 = v11 + 2;
LABEL_176:
          int v386 = v101;
          *(unsigned char *)(a1 + 1036) = v102 != 0;
        }
        goto LABEL_653;
      case 0x23u:
        if (v12 != 24) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x80u;
        int v104 = v11 + 1;
        uint64_t v105 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_181;
        }
        int v106 = *v104;
        uint64_t v105 = v105 + (v106 << 7) - 128;
        if (v106 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v105);
          int v386 = result;
          *(unsigned char *)(a1 + 1037) = v338 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v104 = v11 + 2;
LABEL_181:
          int v386 = v104;
          *(unsigned char *)(a1 + 1037) = v105 != 0;
        }
        goto LABEL_653;
      case 0x24u:
        if (v12 != 32) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x100u;
        int v249 = v11 + 1;
        uint64_t v250 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_489;
        }
        int v251 = *v249;
        uint64_t v250 = v250 + (v251 << 7) - 128;
        if (v251 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v250);
          int v386 = result;
          *(unsigned char *)(a1 + 1038) = v348 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v249 = v11 + 2;
LABEL_489:
          int v386 = v249;
          *(unsigned char *)(a1 + 1038) = v250 != 0;
        }
        goto LABEL_653;
      case 0x25u:
        if (v12 != 40) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x400u;
        int v107 = v11 + 1;
        uint64_t v108 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_186;
        }
        int v109 = *v107;
        uint64_t v108 = v108 + (v109 << 7) - 128;
        if (v109 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v108);
          int v386 = result;
          *(void *)(a1 + 1040) = v339;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v107 = v11 + 2;
LABEL_186:
          int v386 = v107;
          *(void *)(a1 + 1040) = v108;
        }
        goto LABEL_653;
      case 0x26u:
        if (v12 != 50) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v110 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v111 = *(_DWORD **)(a1 + 264);
          if (v111 && (uint64_t v112 = *(int *)(a1 + 256), (int)v112 < *v111))
          {
            *(_DWORD *)(a1 + 256) = v112 + 1;
            uint64_t v113 = *(void *)&v111[2 * v112 + 2];
          }
          else
          {
            uint64_t v114 = sub_124C1DC(*v364);
            uint64_t v113 = sub_188CDC8((uint64_t)v364, v114);
            uint64_t v110 = (unsigned __int8 *)v386;
          }
          uint64_t result = sub_123B364(a3, v113, v110);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 690) {
            goto LABEL_653;
          }
        }
      case 0x27u:
        if (v12 != 58) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x4000u;
        uint64_t v115 = *(void *)(a1 + 880);
        if (!v115)
        {
          uint64_t v116 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v116 = (void *)*v116;
          }
          sub_124BED8((uint64_t)v116);
          uint64_t v115 = v117;
          *(void *)(a1 + 880) = v117;
          uint64_t v11 = v386;
        }
        uint64_t result = sub_1245968(a3, v115, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x28u:
        if (v12 != 64) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x800u;
        uint64_t v118 = v11 + 1;
        uint64_t v119 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_207;
        }
        int v120 = *v118;
        uint64_t v119 = v119 + (v120 << 7) - 128;
        if (v120 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v119);
          int v386 = result;
          *(void *)(a1 + 1048) = v340;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v118 = v11 + 2;
LABEL_207:
          int v386 = v118;
          *(void *)(a1 + 1048) = v119;
        }
        goto LABEL_653;
      case 0x29u:
        if (v12 != 72) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x200u;
        unsigned int v121 = v11 + 1;
        uint64_t v122 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_212;
        }
        int v123 = *v121;
        uint64_t v122 = v122 + (v123 << 7) - 128;
        if (v123 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v122);
          int v386 = result;
          *(unsigned char *)(a1 + 1039) = v341 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          unsigned int v121 = v11 + 2;
LABEL_212:
          int v386 = v121;
          *(unsigned char *)(a1 + 1039) = v122 != 0;
        }
        goto LABEL_653;
      case 0x2Au:
        if (v12 != 80) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x1000u;
        uint64_t v124 = v11 + 1;
        uint64_t v125 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_217;
        }
        int v126 = *v124;
        uint64_t v125 = v125 + (v126 << 7) - 128;
        if (v126 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v125);
          int v386 = result;
          *(unsigned char *)(a1 + 1056) = v342 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v124 = v11 + 2;
LABEL_217:
          int v386 = v124;
          *(unsigned char *)(a1 + 1056) = v125 != 0;
        }
        goto LABEL_653;
      case 0x2Bu:
        if (v12 != 90) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v127 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v127 & 0xFFFFFFFFFFFFFFFCLL);
        if (v127) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 784);
        goto LABEL_651;
      case 0x2Cu:
        if (v12 != 98) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v252 = result + 2;
          int v386 = result + 2;
          uint64_t v253 = *(_DWORD **)(a1 + 288);
          if (v253 && (uint64_t v254 = *(int *)(a1 + 280), (int)v254 < *v253))
          {
            *(_DWORD *)(a1 + 280) = v254 + 1;
            int v255 = *(std::string **)&v253[2 * v254 + 2];
          }
          else
          {
            if (!*v383) {
              operator new();
            }
            void *v257 = v256;
            v257[1] = sub_3A6EDC;
            void *v256 = 0;
            v256[1] = 0;
            v256[2] = 0;
            int v255 = (std::string *)sub_188CDC8((uint64_t)v383, (uint64_t)v256);
            int v252 = v386;
          }
          uint64_t result = (char *)sub_188C244(v255, v252, (uint64_t)a3);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 738) {
            goto LABEL_653;
          }
        }
      case 0x2Du:
        if (v12 != 106) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x8000u;
        uint64_t v128 = *(void **)(a1 + 888);
        if (v128) {
          goto LABEL_369;
        }
        uint64_t v129 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v359) {
          uint64_t v129 = (void *)*v129;
        }
        uint64_t v128 = sub_1448DC4((uint64_t)v129);
        *(void *)(a1 + 888) = v128;
        goto LABEL_368;
      case 0x2Eu:
        if (v12 != 114) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v130 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v131 = *(_DWORD **)(a1 + 312);
          if (v131 && (uint64_t v132 = *(int *)(a1 + 304), (int)v132 < *v131))
          {
            *(_DWORD *)(a1 + 304) = v132 + 1;
            uint64_t v133 = *(void *)&v131[2 * v132 + 2];
          }
          else
          {
            uint64_t v134 = sub_124C27C(*v365);
            uint64_t v133 = sub_188CDC8((uint64_t)v365, v134);
            uint64_t v130 = (unsigned __int8 *)v386;
          }
          uint64_t result = sub_123B634(a3, v133, v130);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 754) {
            goto LABEL_653;
          }
        }
      case 0x2Fu:
        if (v12 != 122) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v135 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v135 & 0xFFFFFFFFFFFFFFFCLL);
        if (v135) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 792);
        goto LABEL_651;
      case 0x30u:
        if (v12 != 130) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v136 = result + 2;
          int v386 = result + 2;
          uint64_t v137 = *(_DWORD **)(a1 + 336);
          if (v137 && (uint64_t v138 = *(int *)(a1 + 328), (int)v138 < *v137))
          {
            *(_DWORD *)(a1 + 328) = v138 + 1;
            uint64_t v139 = *(std::string **)&v137[2 * v138 + 2];
          }
          else
          {
            if (!*v384) {
              operator new();
            }
            void *v141 = v140;
            v141[1] = sub_3A6EDC;
            *uint64_t v140 = 0;
            v140[1] = 0;
            v140[2] = 0;
            uint64_t v139 = (std::string *)sub_188CDC8((uint64_t)v384, (uint64_t)v140);
            uint64_t v136 = v386;
          }
          uint64_t result = (char *)sub_188C244(v139, v136, (uint64_t)a3);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 898) {
            goto LABEL_653;
          }
        }
      case 0x31u:
        if (v12 != 138) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v258 = result + 2;
          int v386 = result + 2;
          uint64_t v259 = *(_DWORD **)(a1 + 360);
          if (v259 && (uint64_t v260 = *(int *)(a1 + 352), (int)v260 < *v259))
          {
            *(_DWORD *)(a1 + 352) = v260 + 1;
            int v261 = *(std::string **)&v259[2 * v260 + 2];
          }
          else
          {
            if (!*v385) {
              operator new();
            }
            void *v263 = v262;
            v263[1] = sub_3A6EDC;
            *uint64_t v262 = 0;
            v262[1] = 0;
            v262[2] = 0;
            int v261 = (std::string *)sub_188CDC8((uint64_t)v385, (uint64_t)v262);
            int v258 = v386;
          }
          uint64_t result = (char *)sub_188C244(v261, v258, (uint64_t)a3);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 906) {
            goto LABEL_653;
          }
        }
      case 0x32u:
        if (v12 != 146) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v142 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v142 & 0xFFFFFFFFFFFFFFFCLL);
        if (v142) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 800);
        goto LABEL_651;
      case 0x33u:
        if (v12 != 154) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v143 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v143 & 0xFFFFFFFFFFFFFFFCLL);
        if (v143) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 808);
        goto LABEL_651;
      case 0x34u:
        if (v12 != 160) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x2000u;
        unint64_t v144 = v11 + 1;
        uint64_t v145 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_265;
        }
        int v146 = *v144;
        uint64_t v145 = v145 + (v146 << 7) - 128;
        if (v146 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v145);
          int v386 = result;
          *(unsigned char *)(a1 + 1057) = v343 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v144 = v11 + 2;
LABEL_265:
          int v386 = v144;
          *(unsigned char *)(a1 + 1057) = v145 != 0;
        }
        goto LABEL_653;
      case 0x35u:
        if (v12 != 168) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x4000u;
        int v264 = v11 + 1;
        uint64_t v265 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_518;
        }
        int v266 = *v264;
        uint64_t v265 = v265 + (v266 << 7) - 128;
        if (v266 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v265);
          int v386 = result;
          *(unsigned char *)(a1 + 1058) = v349 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v264 = v11 + 2;
LABEL_518:
          int v386 = v264;
          *(unsigned char *)(a1 + 1058) = v265 != 0;
        }
        goto LABEL_653;
      case 0x36u:
        if (v12 == 176)
        {
          uint64_t result = v11 - 2;
          while (1)
          {
            int v386 = result + 2;
            uint64_t v267 = result[2];
            if (result[2] < 0)
            {
              int v268 = v267 + (result[3] << 7);
              uint64_t v267 = (v268 - 128);
              if (result[3] < 0)
              {
                uint64_t result = (char *)sub_188C138((uint64_t)(result + 2), (v268 - 128));
                uint64_t v267 = v269;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            int v386 = result;
            uint64_t v270 = *(unsigned int *)(a1 + 368);
            if (v270 == *(_DWORD *)(a1 + 372))
            {
              unsigned int v271 = v270 + 1;
              sub_188CA54(v8, v270 + 1);
              *(void *)(*(void *)(a1 + 376) + 8 * v270) = v267;
              uint64_t result = v386;
            }
            else
            {
              *(void *)(*(void *)(a1 + 376) + 8 * v270) = v267;
              unsigned int v271 = v270 + 1;
            }
            *uint64_t v8 = v271;
            if (!result) {
              return result;
            }
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 944) {
              goto LABEL_653;
            }
          }
        }
        if (v12 != 178) {
          goto LABEL_725;
        }
        v355 = v8;
        goto LABEL_724;
      case 0x37u:
        if (v12 != 186) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v147 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v147 & 0xFFFFFFFFFFFFFFFCLL);
        if (v147) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 816);
        goto LABEL_651;
      case 0x38u:
        if (v12 != 192) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x8000u;
        int v148 = v11 + 1;
        uint64_t v149 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_274;
        }
        int v150 = *v148;
        uint64_t v149 = v149 + (v150 << 7) - 128;
        if (v150 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v149);
          int v386 = result;
          *(unsigned char *)(a1 + 1059) = v344 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v148 = v11 + 2;
LABEL_274:
          int v386 = v148;
          *(unsigned char *)(a1 + 1059) = v149 != 0;
        }
        goto LABEL_653;
      case 0x39u:
        if (v12 != 202) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x10000u;
        uint64_t v272 = *(void *)(a1 + 896);
        if (!v272)
        {
          int v273 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            int v273 = (void *)*v273;
          }
          uint64_t v272 = sub_124C02C((uint64_t)v273);
          *(void *)(a1 + 896) = v272;
          uint64_t v11 = v386;
        }
        uint64_t result = (char *)sub_12459F8(a3, v272, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x3Au:
        if (v12 != 210) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x20000u;
        int v151 = *(void **)(a1 + 904);
        if (!v151)
        {
          uint64_t v152 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v152 = (void *)*v152;
          }
          int v151 = sub_15C1E94((uint64_t)v152);
          *(void *)(a1 + 904) = v151;
          uint64_t v11 = v386;
        }
        uint64_t result = sub_11EA9CC(a3, (uint64_t)v151, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x3Bu:
        if (v12 != 216) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x10000u;
        uint64_t v274 = v11 + 1;
        uint64_t v275 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_543;
        }
        int v276 = *v274;
        uint64_t v275 = v275 + (v276 << 7) - 128;
        if (v276 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v275);
          int v386 = result;
          *(unsigned char *)(a1 + 1060) = v350 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v274 = v11 + 2;
LABEL_543:
          int v386 = v274;
          *(unsigned char *)(a1 + 1060) = v275 != 0;
        }
        goto LABEL_653;
      case 0x3Cu:
        if (v12 != 224) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x20000u;
        uint64_t v277 = v11 + 1;
        uint64_t v278 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_548;
        }
        int v279 = *v277;
        uint64_t v278 = v278 + (v279 << 7) - 128;
        if (v279 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v278);
          int v386 = result;
          *(unsigned char *)(a1 + 1061) = v351 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v277 = v11 + 2;
LABEL_548:
          int v386 = v277;
          *(unsigned char *)(a1 + 1061) = v278 != 0;
        }
        goto LABEL_653;
      case 0x3Du:
        if (v12 != 232) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x40000u;
        int v153 = v11 + 1;
        uint64_t v154 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_285;
        }
        int v155 = *v153;
        uint64_t v154 = v154 + (v155 << 7) - 128;
        if (v155 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v154);
          int v386 = result;
          *(unsigned char *)(a1 + 1062) = v345 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v153 = v11 + 2;
LABEL_285:
          int v386 = v153;
          *(unsigned char *)(a1 + 1062) = v154 != 0;
        }
        goto LABEL_653;
      case 0x3Eu:
        if (v12 != 242) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v280 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v280 & 0xFFFFFFFFFFFFFFFCLL);
        if (v280) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 824);
        goto LABEL_651;
      case 0x3Fu:
        if (v12 != 250) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v281 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          int v282 = *(_DWORD **)(a1 + 400);
          if (v282 && (uint64_t v283 = *(int *)(a1 + 392), (int)v283 < *v282))
          {
            *(_DWORD *)(a1 + 392) = v283 + 1;
            uint64_t v284 = *(void *)&v282[2 * v283 + 2];
          }
          else
          {
            uint64_t v285 = sub_144A378(*v366);
            uint64_t v284 = sub_188CDC8((uint64_t)v366, v285);
            uint64_t v281 = (unsigned __int8 *)v386;
          }
          uint64_t result = sub_123B6C4(a3, v284, v281);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1018) {
            goto LABEL_653;
          }
        }
      case 0x40u:
        if (v12 != 1) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x100000u;
        uint64_t v286 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1064) = v286;
        goto LABEL_565;
      case 0x41u:
        if (v12 != 10) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v287 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          int v288 = *(_DWORD **)(a1 + 424);
          if (v288 && (uint64_t v289 = *(int *)(a1 + 416), (int)v289 < *v288))
          {
            *(_DWORD *)(a1 + 416) = v289 + 1;
            uint64_t v290 = *(void *)&v288[2 * v289 + 2];
          }
          else
          {
            uint64_t v291 = sub_144CB80(*v367);
            uint64_t v290 = sub_188CDC8((uint64_t)v367, v291);
            uint64_t v287 = (unsigned __int8 *)v386;
          }
          uint64_t result = sub_123B874(a3, v290, v287);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1162) {
            goto LABEL_653;
          }
        }
      case 0x42u:
        if (v12 == 16)
        {
          uint64_t result = v11 - 2;
          while (1)
          {
            int v386 = result + 2;
            uint64_t v156 = result[2];
            if (result[2] < 0)
            {
              int v157 = v156 + (result[3] << 7);
              uint64_t v156 = (v157 - 128);
              if (result[3] < 0)
              {
                uint64_t result = (char *)sub_188C138((uint64_t)(result + 2), (v157 - 128));
                uint64_t v156 = v158;
              }
              else
              {
                result += 4;
              }
            }
            else
            {
              result += 3;
            }
            int v386 = result;
            uint64_t v159 = *(unsigned int *)(a1 + 432);
            if (v159 == *(_DWORD *)(a1 + 436))
            {
              int v160 = v159 + 1;
              int v161 = (_DWORD *)(a1 + 432);
              sub_188CA54((unsigned int *)(a1 + 432), v159 + 1);
              *(void *)(*(void *)(a1 + 440) + 8 * v159) = v156;
              uint64_t result = v386;
            }
            else
            {
              *(void *)(*(void *)(a1 + 440) + 8 * v159) = v156;
              int v160 = v159 + 1;
              int v161 = (_DWORD *)(a1 + 432);
            }
            _DWORD *v161 = v160;
            if (!result) {
              return result;
            }
            uint64_t v8 = (unsigned int *)(a1 + 368);
            if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1168) {
              goto LABEL_653;
            }
          }
        }
        if (v12 != 18) {
          goto LABEL_725;
        }
        v355 = (unsigned int *)(a1 + 432);
        goto LABEL_724;
      case 0x43u:
        if (v12 != 26) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x40000u;
        uint64_t v21 = *(void **)(a1 + 912);
        if (v21) {
          goto LABEL_582;
        }
        uint64_t v292 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v359) {
          uint64_t v292 = (void *)*v292;
        }
        uint64_t v21 = sub_124BDD4((uint64_t)v292);
        *(void *)(a1 + 912) = v21;
LABEL_581:
        uint64_t v11 = v386;
LABEL_582:
        uint64_t result = sub_12457B8(a3, (uint64_t)v21, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x44u:
        if (v12 != 34) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v162 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          int v163 = *(_DWORD **)(a1 + 464);
          if (v163 && (uint64_t v164 = *(int *)(a1 + 456), (int)v164 < *v163))
          {
            *(_DWORD *)(a1 + 456) = v164 + 1;
            uint64_t v165 = *(void *)&v163[2 * v164 + 2];
          }
          else
          {
            uint64_t v166 = sub_124BE4C(*v368);
            uint64_t v165 = sub_188CDC8((uint64_t)v368, (uint64_t)v166);
            uint64_t v162 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_12458D8(a3, v165, v162);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1186) {
            goto LABEL_653;
          }
        }
      case 0x45u:
        if (v12 != 42) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v293 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v294 = *(_DWORD **)(a1 + 488);
          if (v294 && (uint64_t v295 = *(int *)(a1 + 480), (int)v295 < *v294))
          {
            *(_DWORD *)(a1 + 480) = v295 + 1;
            uint64_t v296 = *(void *)&v294[2 * v295 + 2];
          }
          else
          {
            int64_t v297 = sub_124BAC4(*v369);
            uint64_t v296 = sub_188CDC8((uint64_t)v369, (uint64_t)v297);
            uint64_t v293 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123B904(a3, v296, v293);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1194) {
            goto LABEL_653;
          }
        }
      case 0x46u:
        if (v12 != 50) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v298 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v299 = *(_DWORD **)(a1 + 512);
          if (v299 && (uint64_t v300 = *(int *)(a1 + 504), (int)v300 < *v299))
          {
            *(_DWORD *)(a1 + 504) = v300 + 1;
            uint64_t v301 = *(void *)&v299[2 * v300 + 2];
          }
          else
          {
            uint64_t v302 = sub_124BAC4(*v370);
            uint64_t v301 = sub_188CDC8((uint64_t)v370, (uint64_t)v302);
            int v298 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123B904(a3, v301, v298);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1202) {
            goto LABEL_653;
          }
        }
      case 0x47u:
        if (v12 != 58) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v167 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v168 = *(_DWORD **)(a1 + 536);
          if (v168 && (uint64_t v169 = *(int *)(a1 + 528), (int)v169 < *v168))
          {
            *(_DWORD *)(a1 + 528) = v169 + 1;
            uint64_t v170 = *(void *)&v168[2 * v169 + 2];
          }
          else
          {
            uint64_t v171 = sub_124BAC4(*v371);
            uint64_t v170 = sub_188CDC8((uint64_t)v371, (uint64_t)v171);
            uint64_t v167 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123B904(a3, v170, v167);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1210) {
            goto LABEL_653;
          }
        }
      case 0x48u:
        if (v12 != 66) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int64_t v303 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          int v304 = *(_DWORD **)(a1 + 560);
          if (v304 && (uint64_t v305 = *(int *)(a1 + 552), (int)v305 < *v304))
          {
            *(_DWORD *)(a1 + 552) = v305 + 1;
            uint64_t v306 = *(void *)&v304[2 * v305 + 2];
          }
          else
          {
            uint64_t v307 = sub_124BAC4(*v372);
            uint64_t v306 = sub_188CDC8((uint64_t)v372, (uint64_t)v307);
            int64_t v303 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123B904(a3, v306, v303);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1218) {
            goto LABEL_653;
          }
        }
      case 0x49u:
        if (v12 != 74) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          v308 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          int64_t v309 = *(_DWORD **)(a1 + 584);
          if (v309 && (uint64_t v310 = *(int *)(a1 + 576), (int)v310 < *v309))
          {
            *(_DWORD *)(a1 + 576) = v310 + 1;
            uint64_t v311 = *(void *)&v309[2 * v310 + 2];
          }
          else
          {
            uint64_t v312 = sub_124BB48(*v373);
            uint64_t v311 = sub_188CDC8((uint64_t)v373, (uint64_t)v312);
            v308 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123B994(a3, v311, v308);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1226) {
            goto LABEL_653;
          }
        }
      case 0x4Au:
        if (v12 != 81) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x200000u;
        uint64_t v172 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1072) = v172;
        goto LABEL_565;
      case 0x4Bu:
        if (v12 != 89) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x400000u;
        uint64_t v173 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1080) = v173;
        goto LABEL_565;
      case 0x4Cu:
        if (v12 != 98) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v174 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v175 = *(_DWORD **)(a1 + 608);
          if (v175 && (uint64_t v176 = *(int *)(a1 + 600), (int)v176 < *v175))
          {
            *(_DWORD *)(a1 + 600) = v176 + 1;
            uint64_t v177 = *(void *)&v175[2 * v176 + 2];
          }
          else
          {
            sub_15A3DBC(*v374);
            uint64_t v177 = sub_188CDC8((uint64_t)v374, v178);
            uint64_t v174 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123B7E4(a3, v177, v174);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1250) {
            goto LABEL_653;
          }
        }
      case 0x4Du:
        if (v12 != 104) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x8000000u;
        uint64_t v180 = v11 + 1;
        LODWORD(v179) = *v11;
        if ((v179 & 0x80) == 0) {
          goto LABEL_338;
        }
        int v181 = *v180;
        uint64_t v179 = v179 + (v181 << 7) - 128;
        if (v181 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v179);
          int v386 = result;
          *(_DWORD *)(a1 + 1120) = v346;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v180 = v11 + 2;
LABEL_338:
          int v386 = v180;
          *(_DWORD *)(a1 + 1120) = v179;
        }
        goto LABEL_653;
      case 0x4Eu:
        if (v12 != 112)
        {
          if (v12 != 114)
          {
LABEL_725:
            if (v12) {
              BOOL v356 = (v12 & 7) == 4;
            }
            else {
              BOOL v356 = 1;
            }
            if (v356)
            {
              if (!v11) {
                return 0;
              }
              a3[10].i32[0] = v12 - 1;
              return v11;
            }
            if (*v359)
            {
              v357 = (std::string *)((*v359 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v357 = (std::string *)sub_188DBD8(v359);
              uint64_t v11 = v386;
            }
            uint64_t result = (char *)sub_1885AC0(v12, v357, v11, a3);
            goto LABEL_652;
          }
          v355 = v7;
LABEL_724:
          uint64_t result = (char *)sub_188C2EC(v355, (unsigned __int8 *)v11, (uint64_t)a3);
LABEL_652:
          int v386 = result;
          if (!result) {
            return result;
          }
LABEL_653:
          int v326 = sub_11947B8((uint64_t)a3, &v386, a3[11].i32[1]);
          uint64_t result = v386;
          if (v326) {
            return result;
          }
          continue;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v386 = result + 2;
          uint64_t v313 = result[2];
          if (result[2] < 0)
          {
            int v314 = v313 + (result[3] << 7);
            uint64_t v313 = (v314 - 128);
            if (result[3] < 0)
            {
              uint64_t result = (char *)sub_188C138((uint64_t)(result + 2), (v314 - 128));
              uint64_t v313 = v315;
            }
            else
            {
              result += 4;
            }
          }
          else
          {
            result += 3;
          }
          int v386 = result;
          uint64_t v316 = *(unsigned int *)(a1 + 616);
          if (v316 == *(_DWORD *)(a1 + 620))
          {
            unsigned int v317 = v316 + 1;
            sub_188CA54(v7, v316 + 1);
            *(void *)(*(void *)(a1 + 624) + 8 * v316) = v313;
            uint64_t result = v386;
          }
          else
          {
            *(void *)(*(void *)(a1 + 624) + 8 * v316) = v313;
            unsigned int v317 = v316 + 1;
          }
          *uint64_t v7 = v317;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1264) {
            goto LABEL_653;
          }
        }
      case 0x4Fu:
        if (v12 != 121) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x800000u;
        uint64_t v182 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1088) = v182;
        goto LABEL_565;
      case 0x50u:
        if (v12 != 129) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x1000000u;
        uint64_t v183 = *(void *)v11;
        uint64_t v43 = v11 + 8;
        *(void *)(a1 + 1096) = v183;
LABEL_565:
        int v386 = v43;
        goto LABEL_653;
      case 0x51u:
        if (v12 != 138) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v184 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v185 = *(_DWORD **)(a1 + 648);
          if (v185 && (uint64_t v186 = *(int *)(a1 + 640), (int)v186 < *v185))
          {
            *(_DWORD *)(a1 + 640) = v186 + 1;
            uint64_t v187 = *(void *)&v185[2 * v186 + 2];
          }
          else
          {
            uint64_t v188 = sub_124BC48(*v375);
            uint64_t v187 = sub_188CDC8((uint64_t)v375, v188);
            uint64_t v184 = (unsigned __int8 *)v386;
          }
          uint64_t result = sub_123BAB4(a3, v187, v184);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1418) {
            goto LABEL_653;
          }
        }
      case 0x52u:
        if (v12 != 146) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v189 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v190 = *(_DWORD **)(a1 + 672);
          if (v190 && (uint64_t v191 = *(int *)(a1 + 664), (int)v191 < *v190))
          {
            *(_DWORD *)(a1 + 664) = v191 + 1;
            uint64_t v192 = *(void *)&v190[2 * v191 + 2];
          }
          else
          {
            uint64_t v193 = sub_124BCC4(*v376);
            uint64_t v192 = sub_188CDC8((uint64_t)v376, (uint64_t)v193);
            int v189 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123BB44(a3, v192, v189);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1426) {
            goto LABEL_653;
          }
        }
      case 0x53u:
        if (v12 != 154) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x80000u;
        uint64_t v128 = *(void **)(a1 + 920);
        if (!v128)
        {
          uint64_t v194 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v194 = (void *)*v194;
          }
          uint64_t v128 = sub_1448DC4((uint64_t)v194);
          *(void *)(a1 + 920) = v128;
LABEL_368:
          uint64_t v11 = v386;
        }
LABEL_369:
        uint64_t result = (char *)sub_123B5A4(a3, (uint64_t)v128, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x54u:
        if (v12 != 162) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          int v195 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          uint64_t v196 = *(_DWORD **)(a1 + 696);
          if (v196 && (uint64_t v197 = *(int *)(a1 + 688), (int)v197 < *v196))
          {
            *(_DWORD *)(a1 + 688) = v197 + 1;
            uint64_t v198 = *(void *)&v196[2 * v197 + 2];
          }
          else
          {
            uint64_t v199 = sub_1448DC4(*v377);
            uint64_t v198 = sub_188CDC8((uint64_t)v377, (uint64_t)v199);
            int v195 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123B5A4(a3, v198, v195);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1442) {
            goto LABEL_653;
          }
        }
      case 0x55u:
        if (v12 != 170) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x100000u;
        uint64_t v200 = *(void *)(a1 + 928);
        if (!v200)
        {
          int v201 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            int v201 = (void *)*v201;
          }
          sub_124BD48((uint64_t)v201);
          uint64_t v200 = v202;
          *(void *)(a1 + 928) = v202;
          uint64_t v11 = v386;
        }
        uint64_t result = sub_123BBD4(a3, v200, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x56u:
        if (v12 != 176) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x2000000u;
        uint64_t v203 = v11 + 1;
        uint64_t v204 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_390;
        }
        int v205 = *v203;
        uint64_t v204 = v204 + (v205 << 7) - 128;
        if (v205 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v204);
          int v386 = result;
          *(void *)(a1 + 1104) = v347;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v203 = v11 + 2;
LABEL_390:
          int v386 = v203;
          *(void *)(a1 + 1104) = v204;
        }
        goto LABEL_653;
      case 0x57u:
        if (v12 != 184)
        {
          if (v12 != 186) {
            goto LABEL_725;
          }
          *(void *)&long long v387 = a1 + 704;
          *((void *)&v387 + 1) = sub_13942C0;
          uint64_t v388 = a1 + 8;
          int v389 = 87;
          uint64_t result = sub_1112E88((uint64_t)a3, v11, &v387);
          goto LABEL_652;
        }
        int v206 = v11 - 2;
        while (1)
        {
          int v386 = v206 + 2;
          unint64_t v207 = v206[2];
          int v208 = v206 + 3;
          if (v206[2] < 0)
          {
            int v209 = *v208;
            int v210 = v207 + (v209 << 7);
            unint64_t v207 = (v210 - 128);
            if (v209 < 0)
            {
              uint64_t result = (char *)sub_188C138((uint64_t)(v206 + 2), (v210 - 128));
              int v386 = result;
              if (!result) {
                return result;
              }
              unint64_t v207 = v214;
              goto LABEL_397;
            }
            int v208 = v206 + 4;
          }
          int v386 = v208;
LABEL_397:
          if (sub_13942C0(v207))
          {
            uint64_t v211 = *(unsigned int *)(a1 + 704);
            if (v211 == *(_DWORD *)(a1 + 708))
            {
              int v212 = v211 + 1;
              uint64_t v213 = (_DWORD *)(a1 + 704);
              sub_188C80C((unsigned int *)(a1 + 704), v211 + 1);
              *(_DWORD *)(*(void *)(a1 + 712) + 4 * v211) = v207;
            }
            else
            {
              *(_DWORD *)(*(void *)(a1 + 712) + 4 * v211) = v207;
              int v212 = v211 + 1;
              uint64_t v213 = (_DWORD *)(a1 + 704);
            }
            _DWORD *v213 = v212;
            uint64_t v7 = (unsigned int *)(a1 + 616);
          }
          else
          {
            if (*v359) {
              uint64_t v215 = (std::string *)((*v359 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v215 = (std::string *)sub_188DBD8(v359);
            }
            sub_188C020(87, v207, v215);
          }
          int v206 = v386;
          if (*(void *)a3 <= (unint64_t)v386 || *(_WORD *)v386 != 1464) {
            goto LABEL_653;
          }
        }
      case 0x58u:
        if (v12 != 192) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x4000000u;
        uint64_t v318 = v11 + 1;
        uint64_t v319 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_641;
        }
        int v320 = *v318;
        uint64_t v319 = v319 + (v320 << 7) - 128;
        if (v320 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v319);
          int v386 = result;
          *(void *)(a1 + 1112) = v352;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v318 = v11 + 2;
LABEL_641:
          int v386 = v318;
          *(void *)(a1 + 1112) = v319;
        }
        goto LABEL_653;
      case 0x59u:
        if (v12 != 202) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x200000u;
        uint64_t v216 = *(void *)(a1 + 936);
        if (!v216)
        {
          uint64_t v217 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v217 = (void *)*v217;
          }
          sub_1449F3C((uint64_t)v217);
          uint64_t v216 = v218;
          *(void *)(a1 + 936) = v218;
          uint64_t v11 = v386;
        }
        uint64_t result = sub_123AE54(a3, v216, (unsigned __int8 *)v11);
        goto LABEL_652;
      case 0x5Au:
        if (v12 != 210) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v219 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          int v220 = *(_DWORD **)(a1 + 736);
          if (v220 && (uint64_t v221 = *(int *)(a1 + 728), (int)v221 < *v220))
          {
            *(_DWORD *)(a1 + 728) = v221 + 1;
            uint64_t v222 = *(void *)&v220[2 * v221 + 2];
          }
          else
          {
            uint64_t v223 = sub_144BD58(*v378);
            uint64_t v222 = sub_188CDC8((uint64_t)v378, v223);
            uint64_t v219 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123BC64(a3, v222, v219);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1490) {
            goto LABEL_653;
          }
        }
      case 0x5Bu:
        if (v12 != 216) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 20) |= 0x80000u;
        int64_t v321 = v11 + 1;
        uint64_t v322 = *v11;
        if ((*v11 & 0x80000000) == 0) {
          goto LABEL_646;
        }
        int v323 = *v321;
        uint64_t v322 = v322 + (v323 << 7) - 128;
        if (v323 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v11, v322);
          int v386 = result;
          *(unsigned char *)(a1 + 1063) = v353 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          int64_t v321 = v11 + 2;
LABEL_646:
          int v386 = v321;
          *(unsigned char *)(a1 + 1063) = v322 != 0;
        }
        goto LABEL_653;
      case 0x5Cu:
        if (v12 != 226) {
          goto LABEL_725;
        }
        uint64_t result = v11 - 2;
        while (1)
        {
          uint64_t v224 = (unsigned __int8 *)(result + 2);
          int v386 = result + 2;
          unsigned int v225 = *(_DWORD **)(a1 + 760);
          if (v225 && (uint64_t v226 = *(int *)(a1 + 752), (int)v226 < *v225))
          {
            *(_DWORD *)(a1 + 752) = v226 + 1;
            uint64_t v227 = *(void *)&v225[2 * v226 + 2];
          }
          else
          {
            uint64_t v228 = sub_144A550(*v379);
            uint64_t v227 = sub_188CDC8((uint64_t)v379, (uint64_t)v228);
            uint64_t v224 = (unsigned __int8 *)v386;
          }
          uint64_t result = (char *)sub_123BD84(a3, v227, v224);
          int v386 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1506) {
            goto LABEL_653;
          }
        }
      case 0x5Du:
        if (v12 != 234) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v324 = *(void *)(a1 + 8);
        unint64_t v69 = (uint64_t *)(v324 & 0xFFFFFFFFFFFFFFFCLL);
        if (v324) {
          unint64_t v69 = (uint64_t *)*v69;
        }
        unint64_t v70 = (void *)(a1 + 832);
LABEL_651:
        unint64_t v325 = (std::string *)sub_1880F84(v70, v69);
        uint64_t result = (char *)sub_188C244(v325, v386, (uint64_t)a3);
        goto LABEL_652;
      case 0x5Eu:
        if (v12 != 242) {
          goto LABEL_725;
        }
        *(_DWORD *)(a1 + 16) |= 0x400000u;
        uint64_t v229 = *(void **)(a1 + 944);
        if (!v229)
        {
          uint64_t v230 = (void *)(*v359 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v359) {
            uint64_t v230 = (void *)*v230;
          }
          uint64_t v229 = sub_124BBCC((uint64_t)v230);
          *(void *)(a1 + 944) = v229;
          uint64_t v11 = v386;
        }
        uint64_t result = sub_123BE14(a3, (uint64_t)v229, (unsigned __int8 *)v11);
        goto LABEL_652;
      default:
        goto LABEL_725;
    }
  }
}

char *sub_12457B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123D8AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1245848(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_12CE23C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12458D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123DCE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1245968(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_123E5E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_12459F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1240948(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1245A88(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 952);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 840);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v10, v12, a3);
    if ((v6 & 0x400) == 0)
    {
LABEL_10:
      if ((v6 & 0x1000000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 0x400) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 848);
  char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unsigned int v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unsigned int v15 = v4 + 2;
  }
  uint64_t v4 = (char *)sub_123D9EC(v13, (unint64_t)v15, a3);
  if ((v6 & 0x1000000) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 960);
    char *v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  if ((v6 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 976);
    char *v4 = 48;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 980);
    char *v4 = 56;
    v4[1] = v22;
    v4 += 2;
  }
  uint64_t v23 = *(unsigned int *)(a1 + 32);
  if ((int)v23 >= 1)
  {
    uint64_t v24 = 0;
    uint64_t v25 = 8 * v23;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 40) + v24);
      char *v4 = 65;
      *(void *)(v4 + 1) = v26;
      v4 += 9;
      v24 += 8;
    }
    while (v25 != v24);
  }
  if ((v6 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v27 = *(unsigned char *)(a1 + 981);
    char *v4 = 72;
    v4[1] = v27;
    v4 += 2;
  }
  uint64_t v28 = *(unsigned int *)(a1 + 48);
  if ((int)v28 >= 1)
  {
    uint64_t v29 = 0;
    uint64_t v30 = 8 * v28;
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v31 = *(void *)(*(void *)(a1 + 56) + v29);
      char *v4 = 81;
      *(void *)(v4 + 1) = v31;
      v4 += 9;
      v29 += 8;
    }
    while (v30 != v29);
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 968);
    char *v4 = 89;
    *(void *)(v4 + 1) = v32;
    v4 += 9;
  }
  int v33 = *(_DWORD *)(a1 + 72);
  if (v33)
  {
    for (int i = 0; i != v33; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 80) + 8 * i + 8);
      char *v4 = 98;
      unsigned int v36 = *(_DWORD *)(v35 + 32);
      v4[1] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, v4 + 1);
      }
      else {
        uint64_t v37 = v4 + 2;
      }
      uint64_t v4 = sub_12CE43C(v35, v37, a3);
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 856);
    char *v4 = 106;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      unsigned int v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      unsigned int v40 = v4 + 2;
    }
    uint64_t v4 = sub_12CA928(v38, (unint64_t)v40, a3);
  }
  if (v6 < 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 984);
    char *v4 = 113;
    *(void *)(v4 + 1) = v41;
    v4 += 9;
  }
  int v42 = *(_DWORD *)(a1 + 20);
  if (v42)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v43 = *(void *)(a1 + 992);
    char *v4 = 120;
    v4[1] = v43;
    if (v43 > 0x7F)
    {
      v4[1] = v43 | 0x80;
      unint64_t v44 = v43 >> 7;
      v4[2] = v43 >> 7;
      v4 += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v42 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v46 = *(void *)(a1 + 1000);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v46;
    if (v46 > 0x7F)
    {
      v4[2] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      v4[3] = v46 >> 7;
      v4 += 4;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v49 = *(unsigned int *)(a1 + 88);
  if ((int)v49 >= 1)
  {
    for (uint64_t j = 0; j != v49; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v51 = *(void *)(*(void *)(a1 + 96) + 8 * j);
      *(_WORD *)uint64_t v4 = 392;
      v4[2] = v51;
      if (v51 > 0x7F)
      {
        v4[2] = v51 | 0x80;
        unint64_t v52 = v51 >> 7;
        v4[3] = v51 >> 7;
        v4 += 4;
        if (v51 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v53 = v52 >> 14;
            v52 >>= 7;
            *v4++ = v52;
          }
          while (v53);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 19) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v54 = *(unsigned char *)(a1 + 982);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v54;
    v4 += 3;
  }
  int v55 = *(_DWORD *)(a1 + 20);
  if ((v55 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v56 = *(void *)(a1 + 1008);
    *(_WORD *)uint64_t v4 = 409;
    *(void *)(v4 + 2) = v56;
    v4 += 10;
  }
  if ((v55 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v57 = *(void *)(a1 + 1016);
    *(_WORD *)uint64_t v4 = 417;
    *(void *)(v4 + 2) = v57;
    v4 += 10;
  }
  if ((*(unsigned char *)(a1 + 19) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v58 = *(unsigned char *)(a1 + 983);
    *(_WORD *)uint64_t v4 = 424;
    v4[2] = v58;
    v4 += 3;
  }
  int v59 = *(_DWORD *)(a1 + 20);
  if ((v59 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v60 = *(void *)(a1 + 1024);
    *(_WORD *)uint64_t v4 = 433;
    *(void *)(v4 + 2) = v60;
    v4 += 10;
  }
  if ((v59 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v61 = *(int *)(a1 + 1032);
    *(_WORD *)uint64_t v4 = 440;
    v4[2] = v61;
    if (v61 > 0x7F)
    {
      v4[2] = v61 | 0x80;
      unint64_t v62 = v61 >> 7;
      v4[3] = v61 >> 7;
      v4 += 4;
      if (v61 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v63 = v62 >> 14;
          v62 >>= 7;
          *v4++ = v62;
        }
        while (v63);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v64 = *(_DWORD *)(a1 + 16);
  if (v64) {
    uint64_t v4 = sub_117A0AC(a3, 24, (const void **)(*(void *)(a1 + 768) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v65 = *(unsigned int *)(a1 + 112);
  if ((int)v65 >= 1)
  {
    uint64_t v66 = 0;
    uint64_t v67 = 8 * v65;
    do
    {
      uint64_t v68 = *(void **)(*(void *)(a1 + 120) + v66 + 8);
      if (*((char *)v68 + 23) < 0)
      {
        int64_t v69 = v68[1];
        if (v69 > 127) {
          goto LABEL_141;
        }
      }
      else
      {
        int64_t v69 = *((unsigned __int8 *)v68 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v69)
      {
        *(_WORD *)uint64_t v4 = 458;
        v4[2] = v69;
        if (*((char *)v68 + 23) < 0) {
          uint64_t v68 = (void *)*v68;
        }
        unint64_t v70 = v4 + 3;
        memcpy(v70, v68, v69);
        uint64_t v4 = &v70[v69];
        goto LABEL_139;
      }
LABEL_141:
      uint64_t v4 = (char *)sub_188A868(a3, 25, (uint64_t)v68, v4);
LABEL_139:
      v66 += 8;
    }
    while (v67 != v66);
  }
  uint64_t v71 = *(unsigned int *)(a1 + 136);
  if ((int)v71 >= 1)
  {
    uint64_t v72 = 0;
    uint64_t v73 = 8 * v71;
    do
    {
      char v74 = *(void **)(*(void *)(a1 + 144) + v72 + 8);
      if (*((char *)v74 + 23) < 0)
      {
        int64_t v75 = v74[1];
        if (v75 > 127) {
          goto LABEL_153;
        }
      }
      else
      {
        int64_t v75 = *((unsigned __int8 *)v74 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v75)
      {
        *(_WORD *)uint64_t v4 = 466;
        v4[2] = v75;
        if (*((char *)v74 + 23) < 0) {
          char v74 = (void *)*v74;
        }
        char v76 = v4 + 3;
        memcpy(v76, v74, v75);
        uint64_t v4 = &v76[v75];
        goto LABEL_151;
      }
LABEL_153:
      uint64_t v4 = (char *)sub_188A868(a3, 26, (uint64_t)v74, v4);
LABEL_151:
      v72 += 8;
    }
    while (v73 != v72);
  }
  int v77 = *(_DWORD *)(a1 + 160);
  if (v77)
  {
    for (int k = 0; k != v77; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v79 = *(void *)(*(void *)(a1 + 168) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 474;
      unsigned int v80 = *(_DWORD *)(v79 + 20);
      v4[2] = v80;
      if (v80 > 0x7F) {
        uint64_t v81 = sub_188A9CC(v80, v4 + 2);
      }
      else {
        uint64_t v81 = v4 + 3;
      }
      uint64_t v4 = sub_149FD00(v79, v81, a3);
    }
  }
  int v82 = *(_DWORD *)(a1 + 184);
  if (v82)
  {
    for (int m = 0; m != v82; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v84 = *(void *)(*(void *)(a1 + 192) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 482;
      unsigned int v85 = *(_DWORD *)(v84 + 20);
      v4[2] = v85;
      if (v85 > 0x7F) {
        uint64_t v86 = sub_188A9CC(v85, v4 + 2);
      }
      else {
        uint64_t v86 = v4 + 3;
      }
      uint64_t v4 = sub_123DFC8(v84, (unint64_t)v86, a3);
    }
  }
  uint64_t v87 = *(unsigned int *)(a1 + 208);
  if ((int)v87 >= 1)
  {
    uint64_t v88 = 0;
    uint64_t v89 = 8 * v87;
    do
    {
      int v90 = *(void **)(*(void *)(a1 + 216) + v88 + 8);
      if (*((char *)v90 + 23) < 0)
      {
        int64_t v91 = v90[1];
        if (v91 > 127) {
          goto LABEL_181;
        }
      }
      else
      {
        int64_t v91 = *((unsigned __int8 *)v90 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v91)
      {
        *(_WORD *)uint64_t v4 = 490;
        v4[2] = v91;
        if (*((char *)v90 + 23) < 0) {
          int v90 = (void *)*v90;
        }
        int v92 = v4 + 3;
        memcpy(v92, v90, v91);
        uint64_t v4 = &v92[v91];
        goto LABEL_179;
      }
LABEL_181:
      uint64_t v4 = (char *)sub_188A868(a3, 29, (uint64_t)v90, v4);
LABEL_179:
      v88 += 8;
    }
    while (v89 != v88);
  }
  if ((v64 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v93 = *(void *)(a1 + 864);
    *(_WORD *)uint64_t v4 = 498;
    unsigned int v94 = *(_DWORD *)(v93 + 20);
    v4[2] = v94;
    if (v94 > 0x7F) {
      uint64_t v95 = sub_188A9CC(v94, v4 + 2);
    }
    else {
      uint64_t v95 = v4 + 3;
    }
    uint64_t v4 = sub_15BC3D8(v93, v95, a3);
  }
  int v96 = *(_DWORD *)(a1 + 232);
  if (v96)
  {
    for (int n = 0; n != v96; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v98 = *(void *)(*(void *)(a1 + 240) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 506;
      unsigned int v99 = *(_DWORD *)(v98 + 56);
      v4[2] = v99;
      if (v99 > 0x7F) {
        uint64_t v100 = sub_188A9CC(v99, v4 + 2);
      }
      else {
        uint64_t v100 = v4 + 3;
      }
      uint64_t v4 = sub_14536EC(v98, v100, a3);
    }
  }
  if ((v64 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v101 = *(void *)(a1 + 872);
    *(_WORD *)uint64_t v4 = 642;
    unsigned int v102 = *(_DWORD *)(v101 + 20);
    v4[2] = v102;
    if (v102 > 0x7F) {
      int v103 = sub_188A9CC(v102, v4 + 2);
    }
    else {
      int v103 = v4 + 3;
    }
    uint64_t v4 = sub_141894C(v101, v103, a3);
  }
  if ((v64 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 33, (const void **)(*(void *)(a1 + 776) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v104 = *(_DWORD *)(a1 + 20);
  if ((v104 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v105 = *(unsigned char *)(a1 + 1036);
    *(_WORD *)uint64_t v4 = 656;
    v4[2] = v105;
    v4 += 3;
    if ((v104 & 0x80) == 0)
    {
LABEL_208:
      if ((v104 & 0x100) == 0) {
        goto LABEL_209;
      }
      goto LABEL_217;
    }
  }
  else if ((v104 & 0x80) == 0)
  {
    goto LABEL_208;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v106 = *(unsigned char *)(a1 + 1037);
  *(_WORD *)uint64_t v4 = 664;
  v4[2] = v106;
  v4 += 3;
  if ((v104 & 0x100) == 0)
  {
LABEL_209:
    if ((v104 & 0x400) == 0) {
      goto LABEL_226;
    }
    goto LABEL_220;
  }
LABEL_217:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v107 = *(unsigned char *)(a1 + 1038);
  *(_WORD *)uint64_t v4 = 672;
  v4[2] = v107;
  v4 += 3;
  if ((v104 & 0x400) != 0)
  {
LABEL_220:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v108 = *(void *)(a1 + 1040);
    *(_WORD *)uint64_t v4 = 680;
    v4[2] = v108;
    if (v108 > 0x7F)
    {
      v4[2] = v108 | 0x80;
      unint64_t v109 = v108 >> 7;
      v4[3] = v108 >> 7;
      v4 += 4;
      if (v108 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v110 = v109 >> 14;
          v109 >>= 7;
          *v4++ = v109;
        }
        while (v110);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_226:
  int v111 = *(_DWORD *)(a1 + 256);
  if (v111)
  {
    for (iint i = 0; ii != v111; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v113 = *(void *)(*(void *)(a1 + 264) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 690;
      unsigned int v114 = *(_DWORD *)(v113 + 40);
      v4[2] = v114;
      if (v114 > 0x7F) {
        uint64_t v115 = sub_188A9CC(v114, v4 + 2);
      }
      else {
        uint64_t v115 = v4 + 3;
      }
      uint64_t v4 = sub_124B108(v113, v115, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 17) & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v116 = *(void *)(a1 + 880);
    *(_WORD *)uint64_t v4 = 698;
    unsigned int v117 = *(_DWORD *)(v116 + 20);
    v4[2] = v117;
    if (v117 > 0x7F) {
      uint64_t v118 = sub_188A9CC(v117, v4 + 2);
    }
    else {
      uint64_t v118 = v4 + 3;
    }
    uint64_t v4 = sub_123EE18(v116, (unint64_t)v118, a3);
  }
  int v119 = *(_DWORD *)(a1 + 20);
  if ((v119 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v120 = *(void *)(a1 + 1048);
    *(_WORD *)uint64_t v4 = 704;
    v4[2] = v120;
    if (v120 > 0x7F)
    {
      v4[2] = v120 | 0x80;
      unint64_t v121 = v120 >> 7;
      v4[3] = v120 >> 7;
      v4 += 4;
      if (v120 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v122 = v121 >> 14;
          v121 >>= 7;
          *v4++ = v121;
        }
        while (v122);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v119 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v123 = *(unsigned char *)(a1 + 1039);
    *(_WORD *)uint64_t v4 = 712;
    v4[2] = v123;
    v4 += 3;
  }
  if ((v119 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v124 = *(unsigned char *)(a1 + 1056);
    *(_WORD *)uint64_t v4 = 720;
    v4[2] = v124;
    v4 += 3;
  }
  int v125 = *(_DWORD *)(a1 + 16);
  if ((v125 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 43, (const void **)(*(void *)(a1 + 784) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v126 = *(unsigned int *)(a1 + 280);
  if ((int)v126 >= 1)
  {
    uint64_t v127 = 0;
    uint64_t v128 = 8 * v126;
    do
    {
      uint64_t v129 = *(void **)(*(void *)(a1 + 288) + v127 + 8);
      if (*((char *)v129 + 23) < 0)
      {
        int64_t v130 = v129[1];
        if (v130 > 127) {
          goto LABEL_269;
        }
      }
      else
      {
        int64_t v130 = *((unsigned __int8 *)v129 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v130)
      {
        *(_WORD *)uint64_t v4 = 738;
        v4[2] = v130;
        if (*((char *)v129 + 23) < 0) {
          uint64_t v129 = (void *)*v129;
        }
        uint64_t v131 = v4 + 3;
        memcpy(v131, v129, v130);
        uint64_t v4 = &v131[v130];
        goto LABEL_267;
      }
LABEL_269:
      uint64_t v4 = (char *)sub_188A868(a3, 44, (uint64_t)v129, v4);
LABEL_267:
      v127 += 8;
    }
    while (v128 != v127);
  }
  if ((v125 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v132 = *(void *)(a1 + 888);
    *(_WORD *)uint64_t v4 = 746;
    unsigned int v133 = *(_DWORD *)(v132 + 20);
    v4[2] = v133;
    if (v133 > 0x7F) {
      uint64_t v134 = sub_188A9CC(v133, v4 + 2);
    }
    else {
      uint64_t v134 = v4 + 3;
    }
    uint64_t v4 = sub_13F721C(v132, v134, a3);
  }
  int v135 = *(_DWORD *)(a1 + 304);
  if (v135)
  {
    for (juint64_t j = 0; jj != v135; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v137 = *(void *)(*(void *)(a1 + 312) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 754;
      unsigned int v138 = *(_DWORD *)(v137 + 40);
      v4[2] = v138;
      if (v138 > 0x7F) {
        uint64_t v139 = sub_188A9CC(v138, v4 + 2);
      }
      else {
        uint64_t v139 = v4 + 3;
      }
      uint64_t v4 = sub_124B798(v137, v139, a3);
    }
  }
  if ((v125 & 8) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 47, (const void **)(*(void *)(a1 + 792) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v140 = *(unsigned int *)(a1 + 328);
  if ((int)v140 >= 1)
  {
    uint64_t v141 = 0;
    uint64_t v142 = 8 * v140;
    do
    {
      uint64_t v143 = *(void **)(*(void *)(a1 + 336) + v141 + 8);
      if (*((char *)v143 + 23) < 0)
      {
        int64_t v144 = v143[1];
        if (v144 > 127) {
          goto LABEL_298;
        }
      }
      else
      {
        int64_t v144 = *((unsigned __int8 *)v143 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v144)
      {
        *(_WORD *)uint64_t v4 = 898;
        v4[2] = v144;
        if (*((char *)v143 + 23) < 0) {
          uint64_t v143 = (void *)*v143;
        }
        uint64_t v145 = v4 + 3;
        memcpy(v145, v143, v144);
        uint64_t v4 = &v145[v144];
        goto LABEL_296;
      }
LABEL_298:
      uint64_t v4 = (char *)sub_188A868(a3, 48, (uint64_t)v143, v4);
LABEL_296:
      v141 += 8;
    }
    while (v142 != v141);
  }
  uint64_t v146 = *(unsigned int *)(a1 + 352);
  if ((int)v146 >= 1)
  {
    uint64_t v147 = 0;
    uint64_t v148 = 8 * v146;
    do
    {
      uint64_t v149 = *(void **)(*(void *)(a1 + 360) + v147 + 8);
      if (*((char *)v149 + 23) < 0)
      {
        int64_t v150 = v149[1];
        if (v150 > 127) {
          goto LABEL_310;
        }
      }
      else
      {
        int64_t v150 = *((unsigned __int8 *)v149 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v150)
      {
        *(_WORD *)uint64_t v4 = 906;
        v4[2] = v150;
        if (*((char *)v149 + 23) < 0) {
          uint64_t v149 = (void *)*v149;
        }
        int v151 = v4 + 3;
        memcpy(v151, v149, v150);
        uint64_t v4 = &v151[v150];
        goto LABEL_308;
      }
LABEL_310:
      uint64_t v4 = (char *)sub_188A868(a3, 49, (uint64_t)v149, v4);
LABEL_308:
      v147 += 8;
    }
    while (v148 != v147);
  }
  if ((v125 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 50, (const void **)(*(void *)(a1 + 800) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v125 & 0x20) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 51, (const void **)(*(void *)(a1 + 808) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v152 = *(_DWORD *)(a1 + 20);
  if ((v152 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v153 = *(unsigned char *)(a1 + 1057);
    *(_WORD *)uint64_t v4 = 928;
    v4[2] = v153;
    v4 += 3;
  }
  if ((v152 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v154 = *(unsigned char *)(a1 + 1058);
    *(_WORD *)uint64_t v4 = 936;
    v4[2] = v154;
    v4 += 3;
  }
  uint64_t v155 = *(unsigned int *)(a1 + 368);
  if ((int)v155 >= 1)
  {
    for (kint k = 0; kk != v155; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v157 = *(void *)(*(void *)(a1 + 376) + 8 * kk);
      *(_WORD *)uint64_t v4 = 944;
      v4[2] = v157;
      if (v157 > 0x7F)
      {
        v4[2] = v157 | 0x80;
        unint64_t v158 = v157 >> 7;
        v4[3] = v157 >> 7;
        v4 += 4;
        if (v157 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v159 = v158 >> 14;
            v158 >>= 7;
            *v4++ = v158;
          }
          while (v159);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 0x40) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 55, (const void **)(*(void *)(a1 + 816) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((*(unsigned char *)(a1 + 21) & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v160 = *(unsigned char *)(a1 + 1059);
    *(_WORD *)uint64_t v4 = 960;
    v4[2] = v160;
    v4 += 3;
  }
  int v161 = *(_DWORD *)(a1 + 16);
  if ((v161 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v162 = *(void *)(a1 + 896);
    *(_WORD *)uint64_t v4 = 970;
    unsigned int v163 = *(_DWORD *)(v162 + 184);
    v4[2] = v163;
    if (v163 > 0x7F) {
      uint64_t v164 = sub_188A9CC(v163, v4 + 2);
    }
    else {
      uint64_t v164 = v4 + 3;
    }
    uint64_t v4 = sub_124110C(v162, v164, a3);
  }
  if ((v161 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v165 = *(void *)(a1 + 904);
    *(_WORD *)uint64_t v4 = 978;
    unsigned int v166 = *(_DWORD *)(v165 + 20);
    v4[2] = v166;
    if (v166 > 0x7F) {
      uint64_t v167 = sub_188A9CC(v166, v4 + 2);
    }
    else {
      uint64_t v167 = v4 + 3;
    }
    uint64_t v4 = sub_15B7AE4(v165, v167, a3);
  }
  int v168 = *(_DWORD *)(a1 + 20);
  if ((v168 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v169 = *(unsigned char *)(a1 + 1060);
    *(_WORD *)uint64_t v4 = 984;
    v4[2] = v169;
    v4 += 3;
    if ((v168 & 0x20000) == 0)
    {
LABEL_354:
      if ((v168 & 0x40000) == 0) {
        goto LABEL_365;
      }
      goto LABEL_362;
    }
  }
  else if ((v168 & 0x20000) == 0)
  {
    goto LABEL_354;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v170 = *(unsigned char *)(a1 + 1061);
  *(_WORD *)uint64_t v4 = 992;
  v4[2] = v170;
  v4 += 3;
  if ((v168 & 0x40000) != 0)
  {
LABEL_362:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v171 = *(unsigned char *)(a1 + 1062);
    *(_WORD *)uint64_t v4 = 1000;
    v4[2] = v171;
    v4 += 3;
  }
LABEL_365:
  if ((*(unsigned char *)(a1 + 16) & 0x80) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 62, (const void **)(*(void *)(a1 + 824) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v172 = *(_DWORD *)(a1 + 392);
  if (v172)
  {
    for (mint m = 0; mm != v172; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v174 = *(void *)(*(void *)(a1 + 400) + 8 * mm + 8);
      *(_WORD *)uint64_t v4 = 1018;
      unsigned int v175 = *(_DWORD *)(v174 + 20);
      v4[2] = v175;
      if (v175 > 0x7F) {
        uint64_t v176 = sub_188A9CC(v175, v4 + 2);
      }
      else {
        uint64_t v176 = v4 + 3;
      }
      uint64_t v4 = sub_1411F40(v174, (unint64_t)v176, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 22) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v177 = *(void *)(a1 + 1064);
    *(_WORD *)uint64_t v4 = 1153;
    *(void *)(v4 + 2) = v177;
    v4 += 10;
  }
  int v178 = *(_DWORD *)(a1 + 416);
  if (v178)
  {
    for (nint n = 0; nn != v178; ++nn)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v180 = *(void *)(*(void *)(a1 + 424) + 8 * nn + 8);
      *(_WORD *)uint64_t v4 = 1162;
      unsigned int v181 = *(_DWORD *)(v180 + 44);
      v4[2] = v181;
      if (v181 > 0x7F) {
        uint64_t v182 = sub_188A9CC(v181, v4 + 2);
      }
      else {
        uint64_t v182 = v4 + 3;
      }
      uint64_t v4 = sub_1443EFC(v180, v182, a3);
    }
  }
  uint64_t v183 = *(unsigned int *)(a1 + 432);
  if ((int)v183 >= 1)
  {
    for (uint64_t i1 = 0; i1 != v183; ++i1)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v185 = *(void *)(*(void *)(a1 + 440) + 8 * i1);
      *(_WORD *)uint64_t v4 = 1168;
      v4[2] = v185;
      if (v185 > 0x7F)
      {
        v4[2] = v185 | 0x80;
        unint64_t v186 = v185 >> 7;
        v4[3] = v185 >> 7;
        v4 += 4;
        if (v185 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v187 = v186 >> 14;
            v186 >>= 7;
            *v4++ = v186;
          }
          while (v187);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((*(unsigned char *)(a1 + 18) & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v188 = *(void *)(a1 + 912);
    *(_WORD *)uint64_t v4 = 1178;
    unsigned int v189 = *(_DWORD *)(v188 + 20);
    v4[2] = v189;
    if (v189 > 0x7F) {
      uint64_t v190 = sub_188A9CC(v189, v4 + 2);
    }
    else {
      uint64_t v190 = v4 + 3;
    }
    uint64_t v4 = (char *)sub_123D9EC(v188, (unint64_t)v190, a3);
  }
  int v191 = *(_DWORD *)(a1 + 456);
  if (v191)
  {
    for (int i2 = 0; i2 != v191; ++i2)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v193 = *(void *)(*(void *)(a1 + 464) + 8 * i2 + 8);
      *(_WORD *)uint64_t v4 = 1186;
      unsigned int v194 = *(_DWORD *)(v193 + 20);
      v4[2] = v194;
      if (v194 > 0x7F) {
        int v195 = sub_188A9CC(v194, v4 + 2);
      }
      else {
        int v195 = v4 + 3;
      }
      uint64_t v4 = sub_123DFC8(v193, (unint64_t)v195, a3);
    }
  }
  int v196 = *(_DWORD *)(a1 + 480);
  if (v196)
  {
    for (int i3 = 0; i3 != v196; ++i3)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v198 = *(void *)(*(void *)(a1 + 488) + 8 * i3 + 8);
      *(_WORD *)uint64_t v4 = 1194;
      unsigned int v199 = *(_DWORD *)(v198 + 20);
      v4[2] = v199;
      if (v199 > 0x7F) {
        uint64_t v200 = sub_188A9CC(v199, v4 + 2);
      }
      else {
        uint64_t v200 = v4 + 3;
      }
      uint64_t v4 = sub_123A504(v198, v200, a3);
    }
  }
  int v201 = *(_DWORD *)(a1 + 504);
  if (v201)
  {
    for (int i4 = 0; i4 != v201; ++i4)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v203 = *(void *)(*(void *)(a1 + 512) + 8 * i4 + 8);
      *(_WORD *)uint64_t v4 = 1202;
      unsigned int v204 = *(_DWORD *)(v203 + 20);
      v4[2] = v204;
      if (v204 > 0x7F) {
        int v205 = sub_188A9CC(v204, v4 + 2);
      }
      else {
        int v205 = v4 + 3;
      }
      uint64_t v4 = sub_123A504(v203, v205, a3);
    }
  }
  int v206 = *(_DWORD *)(a1 + 528);
  if (v206)
  {
    for (int i5 = 0; i5 != v206; ++i5)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v208 = *(void *)(*(void *)(a1 + 536) + 8 * i5 + 8);
      *(_WORD *)uint64_t v4 = 1210;
      unsigned int v209 = *(_DWORD *)(v208 + 20);
      v4[2] = v209;
      if (v209 > 0x7F) {
        int v210 = sub_188A9CC(v209, v4 + 2);
      }
      else {
        int v210 = v4 + 3;
      }
      uint64_t v4 = sub_123A504(v208, v210, a3);
    }
  }
  int v211 = *(_DWORD *)(a1 + 552);
  if (v211)
  {
    for (int i6 = 0; i6 != v211; ++i6)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v213 = *(void *)(*(void *)(a1 + 560) + 8 * i6 + 8);
      *(_WORD *)uint64_t v4 = 1218;
      unsigned int v214 = *(_DWORD *)(v213 + 20);
      v4[2] = v214;
      if (v214 > 0x7F) {
        uint64_t v215 = sub_188A9CC(v214, v4 + 2);
      }
      else {
        uint64_t v215 = v4 + 3;
      }
      uint64_t v4 = sub_123A504(v213, v215, a3);
    }
  }
  int v216 = *(_DWORD *)(a1 + 576);
  if (v216)
  {
    for (int i7 = 0; i7 != v216; ++i7)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v218 = *(void *)(*(void *)(a1 + 584) + 8 * i7 + 8);
      *(_WORD *)uint64_t v4 = 1226;
      unsigned int v219 = *(_DWORD *)(v218 + 20);
      v4[2] = v219;
      if (v219 > 0x7F) {
        int v220 = sub_188A9CC(v219, v4 + 2);
      }
      else {
        int v220 = v4 + 3;
      }
      uint64_t v4 = sub_123AACC(v218, v220, a3);
    }
  }
  int v221 = *(_DWORD *)(a1 + 20);
  if ((v221 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v222 = *(void *)(a1 + 1072);
    *(_WORD *)uint64_t v4 = 1233;
    *(void *)(v4 + 2) = v222;
    v4 += 10;
  }
  if ((v221 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v223 = *(void *)(a1 + 1080);
    *(_WORD *)uint64_t v4 = 1241;
    *(void *)(v4 + 2) = v223;
    v4 += 10;
  }
  int v224 = *(_DWORD *)(a1 + 600);
  if (v224)
  {
    for (int i8 = 0; i8 != v224; ++i8)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v226 = *(void *)(*(void *)(a1 + 608) + 8 * i8 + 8);
      *(_WORD *)uint64_t v4 = 1250;
      unsigned int v227 = *(_DWORD *)(v226 + 20);
      v4[2] = v227;
      if (v227 > 0x7F) {
        uint64_t v228 = sub_188A9CC(v227, v4 + 2);
      }
      else {
        uint64_t v228 = v4 + 3;
      }
      uint64_t v4 = sub_15A30C0(v226, v228, a3);
    }
  }
  if ((v221 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v229 = *(int *)(a1 + 1120);
    *(_WORD *)uint64_t v4 = 1256;
    v4[2] = v229;
    if (v229 > 0x7F)
    {
      v4[2] = v229 | 0x80;
      unint64_t v230 = v229 >> 7;
      v4[3] = v229 >> 7;
      v4 += 4;
      if (v229 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v231 = v230 >> 14;
          v230 >>= 7;
          *v4++ = v230;
        }
        while (v231);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v232 = *(unsigned int *)(a1 + 616);
  if ((int)v232 >= 1)
  {
    for (uint64_t i9 = 0; i9 != v232; ++i9)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v234 = *(void *)(*(void *)(a1 + 624) + 8 * i9);
      *(_WORD *)uint64_t v4 = 1264;
      v4[2] = v234;
      if (v234 > 0x7F)
      {
        v4[2] = v234 | 0x80;
        unint64_t v235 = v234 >> 7;
        v4[3] = v234 >> 7;
        v4 += 4;
        if (v234 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v236 = v235 >> 14;
            v235 >>= 7;
            *v4++ = v235;
          }
          while (v236);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v221 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v237 = *(void *)(a1 + 1088);
    *(_WORD *)uint64_t v4 = 1273;
    *(void *)(v4 + 2) = v237;
    v4 += 10;
  }
  if ((v221 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v238 = *(void *)(a1 + 1096);
    *(_WORD *)uint64_t v4 = 1409;
    *(void *)(v4 + 2) = v238;
    v4 += 10;
  }
  int v239 = *(_DWORD *)(a1 + 640);
  if (v239)
  {
    for (int i10 = 0; i10 != v239; ++i10)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v241 = *(void *)(*(void *)(a1 + 648) + 8 * i10 + 8);
      *(_WORD *)uint64_t v4 = 1418;
      unsigned int v242 = *(_DWORD *)(v241 + 20);
      v4[2] = v242;
      if (v242 > 0x7F) {
        uint64_t v243 = sub_188A9CC(v242, v4 + 2);
      }
      else {
        uint64_t v243 = v4 + 3;
      }
      uint64_t v4 = sub_123C760(v241, (unint64_t)v243, a3);
    }
  }
  int v244 = *(_DWORD *)(a1 + 664);
  if (v244)
  {
    for (int i11 = 0; i11 != v244; ++i11)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v246 = *(void *)(*(void *)(a1 + 672) + 8 * i11 + 8);
      *(_WORD *)uint64_t v4 = 1426;
      unsigned int v247 = *(_DWORD *)(v246 + 20);
      v4[2] = v247;
      if (v247 > 0x7F) {
        uint64_t v248 = sub_188A9CC(v247, v4 + 2);
      }
      else {
        uint64_t v248 = v4 + 3;
      }
      uint64_t v4 = sub_123CC14(v246, v248, a3);
    }
  }
  int v249 = *(_DWORD *)(a1 + 16);
  if ((v249 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v250 = *(void *)(a1 + 920);
    *(_WORD *)uint64_t v4 = 1434;
    unsigned int v251 = *(_DWORD *)(v250 + 20);
    v4[2] = v251;
    if (v251 > 0x7F) {
      int v252 = sub_188A9CC(v251, v4 + 2);
    }
    else {
      int v252 = v4 + 3;
    }
    uint64_t v4 = sub_13F721C(v250, v252, a3);
  }
  int v253 = *(_DWORD *)(a1 + 688);
  if (v253)
  {
    for (int i12 = 0; i12 != v253; ++i12)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v255 = *(void *)(*(void *)(a1 + 696) + 8 * i12 + 8);
      *(_WORD *)uint64_t v4 = 1442;
      unsigned int v256 = *(_DWORD *)(v255 + 20);
      v4[2] = v256;
      if (v256 > 0x7F) {
        uint64_t v257 = sub_188A9CC(v256, v4 + 2);
      }
      else {
        uint64_t v257 = v4 + 3;
      }
      uint64_t v4 = sub_13F721C(v255, v257, a3);
    }
  }
  if ((v249 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v258 = *(void *)(a1 + 928);
    *(_WORD *)uint64_t v4 = 1450;
    unsigned int v259 = *(_DWORD *)(v258 + 20);
    v4[2] = v259;
    if (v259 > 0x7F) {
      uint64_t v260 = sub_188A9CC(v259, v4 + 2);
    }
    else {
      uint64_t v260 = v4 + 3;
    }
    uint64_t v4 = (char *)sub_123D250(v258, (unint64_t)v260, a3);
  }
  int v261 = *(_DWORD *)(a1 + 20);
  if ((v261 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v262 = *(void *)(a1 + 1104);
    *(_WORD *)uint64_t v4 = 1456;
    v4[2] = v262;
    if (v262 > 0x7F)
    {
      v4[2] = v262 | 0x80;
      unint64_t v263 = v262 >> 7;
      v4[3] = v262 >> 7;
      v4 += 4;
      if (v262 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v264 = v263 >> 14;
          v263 >>= 7;
          *v4++ = v263;
        }
        while (v264);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v265 = *(unsigned int *)(a1 + 704);
  if ((int)v265 >= 1)
  {
    for (uint64_t i13 = 0; i13 != v265; ++i13)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v267 = *(int *)(*(void *)(a1 + 712) + 4 * i13);
      *(_WORD *)uint64_t v4 = 1464;
      v4[2] = v267;
      if (v267 > 0x7F)
      {
        v4[2] = v267 | 0x80;
        unint64_t v268 = v267 >> 7;
        v4[3] = v267 >> 7;
        v4 += 4;
        if (v267 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v269 = v268 >> 14;
            v268 >>= 7;
            *v4++ = v268;
          }
          while (v269);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v261 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v270 = *(void *)(a1 + 1112);
    *(_WORD *)uint64_t v4 = 1472;
    v4[2] = v270;
    if (v270 > 0x7F)
    {
      v4[2] = v270 | 0x80;
      unint64_t v271 = v270 >> 7;
      v4[3] = v270 >> 7;
      v4 += 4;
      if (v270 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v272 = v271 >> 14;
          v271 >>= 7;
          *v4++ = v271;
        }
        while (v272);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((*(unsigned char *)(a1 + 18) & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v273 = *(void *)(a1 + 936);
    *(_WORD *)uint64_t v4 = 1482;
    unsigned int v274 = *(_DWORD *)(v273 + 20);
    v4[2] = v274;
    if (v274 > 0x7F) {
      uint64_t v275 = sub_188A9CC(v274, v4 + 2);
    }
    else {
      uint64_t v275 = v4 + 3;
    }
    uint64_t v4 = sub_140D4C8(v273, (unint64_t)v275, a3);
  }
  int v276 = *(_DWORD *)(a1 + 728);
  if (v276)
  {
    for (int i14 = 0; i14 != v276; ++i14)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v278 = *(void *)(*(void *)(a1 + 736) + 8 * i14 + 8);
      *(_WORD *)uint64_t v4 = 1490;
      unsigned int v279 = *(_DWORD *)(v278 + 20);
      v4[2] = v279;
      if (v279 > 0x7F) {
        uint64_t v280 = sub_188A9CC(v279, v4 + 2);
      }
      else {
        uint64_t v280 = v4 + 3;
      }
      uint64_t v4 = sub_1431148(v278, (unint64_t)v280, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 22) & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v281 = *(unsigned char *)(a1 + 1063);
    *(_WORD *)uint64_t v4 = 1496;
    v4[2] = v281;
    v4 += 3;
  }
  int v282 = *(_DWORD *)(a1 + 752);
  if (v282)
  {
    for (int i15 = 0; i15 != v282; ++i15)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v284 = *(void *)(*(void *)(a1 + 760) + 8 * i15 + 8);
      *(_WORD *)uint64_t v4 = 1506;
      unsigned int v285 = *(_DWORD *)(v284 + 20);
      v4[2] = v285;
      if (v285 > 0x7F) {
        uint64_t v286 = sub_188A9CC(v285, v4 + 2);
      }
      else {
        uint64_t v286 = v4 + 3;
      }
      uint64_t v4 = sub_141450C(v284, v286, a3);
    }
  }
  int v287 = *(_DWORD *)(a1 + 16);
  if ((v287 & 0x100) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 93, (const void **)(*(void *)(a1 + 832) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v287 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v288 = *(void *)(a1 + 944);
    *(_WORD *)uint64_t v4 = 1522;
    unsigned int v289 = *(_DWORD *)(v288 + 20);
    v4[2] = v289;
    if (v289 > 0x7F) {
      uint64_t v290 = sub_188A9CC(v289, v4 + 2);
    }
    else {
      uint64_t v290 = v4 + 3;
    }
    uint64_t v4 = (char *)sub_123C34C(v288, (unint64_t)v290, a3);
  }
  uint64_t v291 = *(void *)(a1 + 8);
  if ((v291 & 1) == 0) {
    return v4;
  }
  unint64_t v293 = v291 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v293 + 31) < 0)
  {
    uint64_t v294 = *(void **)(v293 + 8);
    uint64_t v295 = *(void *)(v293 + 16);
  }
  else
  {
    uint64_t v294 = (void *)(v293 + 8);
    LODWORD(v295) = *(unsigned __int8 *)(v293 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v295)
  {
    uint64_t v296 = (int)v295;
    memcpy(v4, v294, (int)v295);
    v4 += v296;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v294, v295, v4);
}

uint64_t sub_1247F74(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 0x2800000) != 0)
  {
    if ((v2 & 0x800000) != 0) {
      unint64_t v4 = ((9 * (__clz(*(void *)(a1 + 952) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    else {
      unint64_t v4 = 0;
    }
    if ((v2 & 0x2000000) != 0) {
      unint64_t v3 = v4 + 9;
    }
    else {
      unint64_t v3 = v4;
    }
  }
  else
  {
    unint64_t v3 = ((9 * (__clz(*(void *)(a1 + 952) | 1) ^ 0x3F) + 73) >> 6) + 10;
  }
  uint64_t v5 = *(int *)(a1 + 72);
  unint64_t v6 = *(unsigned int *)(a1 + 48) + (unint64_t)*(unsigned int *)(a1 + 32);
  uint64_t v7 = v3 + v6 + v5 + 8 * v6;
  uint64_t v8 = *(void *)(a1 + 80);
  if (v8) {
    unint64_t v9 = (uint64_t *)(v8 + 8);
  }
  else {
    unint64_t v9 = 0;
  }
  if (v5)
  {
    uint64_t v10 = 8 * v5;
    do
    {
      uint64_t v11 = *v9++;
      uint64_t v12 = sub_12CE58C(v11);
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6);
      v10 -= 8;
    }
    while (v10);
  }
  uint64_t v13 = sub_188D5A8((unsigned int *)(a1 + 88));
  uint64_t v14 = *(unsigned int *)(a1 + 112);
  uint64_t v15 = v13 + v7 + 2 * (v14 + *(unsigned int *)(a1 + 88));
  if ((int)v14 >= 1)
  {
    unint64_t v16 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v15 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      --v14;
    }
    while (v14);
  }
  uint64_t v20 = *(unsigned int *)(a1 + 136);
  uint64_t v21 = v15 + 2 * v20;
  if ((int)v20 >= 1)
  {
    char v22 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
      uint64_t v25 = *(void *)(v23 + 8);
      if ((v24 & 0x80u) == 0) {
        uint64_t v25 = v24;
      }
      v21 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6);
      --v20;
    }
    while (v20);
  }
  uint64_t v26 = *(int *)(a1 + 160);
  uint64_t v27 = v21 + 2 * v26;
  uint64_t v28 = *(void *)(a1 + 168);
  if (v28) {
    uint64_t v29 = (uint64_t *)(v28 + 8);
  }
  else {
    uint64_t v29 = 0;
  }
  if (v26)
  {
    uint64_t v30 = 8 * v26;
    do
    {
      uint64_t v31 = *v29++;
      uint64_t v32 = sub_149FDEC(v31);
      v27 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6);
      v30 -= 8;
    }
    while (v30);
  }
  uint64_t v33 = *(int *)(a1 + 184);
  uint64_t v34 = v27 + 2 * v33;
  uint64_t v35 = *(void *)(a1 + 192);
  if (v35) {
    unsigned int v36 = (uint64_t *)(v35 + 8);
  }
  else {
    unsigned int v36 = 0;
  }
  if (v33)
  {
    uint64_t v37 = 8 * v33;
    do
    {
      uint64_t v38 = *v36++;
      uint64_t v39 = sub_123E234(v38);
      v34 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6);
      v37 -= 8;
    }
    while (v37);
  }
  uint64_t v40 = *(unsigned int *)(a1 + 208);
  uint64_t v41 = v34 + 2 * v40;
  if ((int)v40 >= 1)
  {
    int v42 = (uint64_t *)(*(void *)(a1 + 216) + 8);
    do
    {
      uint64_t v43 = *v42++;
      uint64_t v44 = *(unsigned __int8 *)(v43 + 23);
      uint64_t v45 = *(void *)(v43 + 8);
      if ((v44 & 0x80u) == 0) {
        uint64_t v45 = v44;
      }
      v41 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6);
      --v40;
    }
    while (v40);
  }
  uint64_t v46 = *(int *)(a1 + 232);
  uint64_t v47 = v41 + 2 * v46;
  uint64_t v48 = *(void *)(a1 + 240);
  if (v48) {
    uint64_t v49 = (uint64_t *)(v48 + 8);
  }
  else {
    uint64_t v49 = 0;
  }
  if (v46)
  {
    uint64_t v50 = 8 * v46;
    do
    {
      uint64_t v51 = *v49++;
      uint64_t v52 = sub_14538CC(v51);
      v47 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6);
      v50 -= 8;
    }
    while (v50);
  }
  uint64_t v53 = *(int *)(a1 + 256);
  uint64_t v54 = v47 + 2 * v53;
  uint64_t v55 = *(void *)(a1 + 264);
  if (v55) {
    uint64_t v56 = (uint64_t *)(v55 + 8);
  }
  else {
    uint64_t v56 = 0;
  }
  if (v53)
  {
    uint64_t v57 = 8 * v53;
    do
    {
      uint64_t v58 = *v56++;
      uint64_t v59 = sub_124B24C(v58);
      v54 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6);
      v57 -= 8;
    }
    while (v57);
  }
  uint64_t v60 = *(unsigned int *)(a1 + 280);
  uint64_t v61 = v54 + 2 * v60;
  if ((int)v60 >= 1)
  {
    unint64_t v62 = (uint64_t *)(*(void *)(a1 + 288) + 8);
    do
    {
      uint64_t v63 = *v62++;
      uint64_t v64 = *(unsigned __int8 *)(v63 + 23);
      uint64_t v65 = *(void *)(v63 + 8);
      if ((v64 & 0x80u) == 0) {
        uint64_t v65 = v64;
      }
      v61 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6);
      --v60;
    }
    while (v60);
  }
  uint64_t v66 = *(int *)(a1 + 304);
  uint64_t v67 = v61 + 2 * v66;
  uint64_t v68 = *(void *)(a1 + 312);
  if (v68) {
    int64_t v69 = (uint64_t *)(v68 + 8);
  }
  else {
    int64_t v69 = 0;
  }
  if (v66)
  {
    uint64_t v70 = 8 * v66;
    do
    {
      uint64_t v71 = *v69++;
      uint64_t v72 = sub_124B8DC(v71);
      v67 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6);
      v70 -= 8;
    }
    while (v70);
  }
  uint64_t v73 = *(unsigned int *)(a1 + 328);
  uint64_t v74 = v67 + 2 * v73;
  if ((int)v73 >= 1)
  {
    int64_t v75 = (uint64_t *)(*(void *)(a1 + 336) + 8);
    do
    {
      uint64_t v76 = *v75++;
      uint64_t v77 = *(unsigned __int8 *)(v76 + 23);
      uint64_t v78 = *(void *)(v76 + 8);
      if ((v77 & 0x80u) == 0) {
        uint64_t v78 = v77;
      }
      v74 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6);
      --v73;
    }
    while (v73);
  }
  uint64_t v79 = *(unsigned int *)(a1 + 352);
  uint64_t v80 = v74 + 2 * v79;
  if ((int)v79 >= 1)
  {
    uint64_t v81 = (uint64_t *)(*(void *)(a1 + 360) + 8);
    do
    {
      uint64_t v82 = *v81++;
      uint64_t v83 = *(unsigned __int8 *)(v82 + 23);
      uint64_t v84 = *(void *)(v82 + 8);
      if ((v83 & 0x80u) == 0) {
        uint64_t v84 = v83;
      }
      v80 += v84 + ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6);
      --v79;
    }
    while (v79);
  }
  uint64_t v85 = sub_188D5A8((unsigned int *)(a1 + 368));
  uint64_t v86 = *(int *)(a1 + 392);
  uint64_t v87 = v85 + v80 + 2 * (v86 + *(unsigned int *)(a1 + 368));
  uint64_t v88 = *(void *)(a1 + 400);
  if (v88) {
    uint64_t v89 = (uint64_t *)(v88 + 8);
  }
  else {
    uint64_t v89 = 0;
  }
  if (v86)
  {
    uint64_t v90 = 8 * v86;
    do
    {
      uint64_t v91 = *v89++;
      uint64_t v92 = sub_14121EC(v91);
      v87 += v92 + ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6);
      v90 -= 8;
    }
    while (v90);
  }
  uint64_t v93 = *(int *)(a1 + 416);
  uint64_t v94 = v87 + 2 * v93;
  uint64_t v95 = *(void *)(a1 + 424);
  if (v95) {
    int v96 = (uint64_t *)(v95 + 8);
  }
  else {
    int v96 = 0;
  }
  if (v93)
  {
    uint64_t v97 = 8 * v93;
    do
    {
      uint64_t v98 = *v96++;
      uint64_t v99 = sub_1445008(v98);
      v94 += v99 + ((9 * (__clz(v99 | 1) ^ 0x1F) + 73) >> 6);
      v97 -= 8;
    }
    while (v97);
  }
  uint64_t v100 = sub_188D5A8((unsigned int *)(a1 + 432));
  uint64_t v101 = *(int *)(a1 + 456);
  uint64_t v102 = v100 + v94 + 2 * (v101 + *(unsigned int *)(a1 + 432));
  uint64_t v103 = *(void *)(a1 + 464);
  if (v103) {
    int v104 = (uint64_t *)(v103 + 8);
  }
  else {
    int v104 = 0;
  }
  if (v101)
  {
    uint64_t v105 = 8 * v101;
    do
    {
      uint64_t v106 = *v104++;
      uint64_t v107 = sub_123E234(v106);
      v102 += v107 + ((9 * (__clz(v107 | 1) ^ 0x1F) + 73) >> 6);
      v105 -= 8;
    }
    while (v105);
  }
  uint64_t v108 = *(int *)(a1 + 480);
  uint64_t v109 = v102 + 2 * v108;
  uint64_t v110 = *(void *)(a1 + 488);
  if (v110) {
    int v111 = (uint64_t *)(v110 + 8);
  }
  else {
    int v111 = 0;
  }
  if (v108)
  {
    uint64_t v112 = 8 * v108;
    do
    {
      uint64_t v113 = *v111++;
      uint64_t v114 = sub_123A5F0(v113);
      v109 += v114 + ((9 * (__clz(v114 | 1) ^ 0x1F) + 73) >> 6);
      v112 -= 8;
    }
    while (v112);
  }
  uint64_t v115 = *(int *)(a1 + 504);
  uint64_t v116 = v109 + 2 * v115;
  uint64_t v117 = *(void *)(a1 + 512);
  if (v117) {
    uint64_t v118 = (uint64_t *)(v117 + 8);
  }
  else {
    uint64_t v118 = 0;
  }
  if (v115)
  {
    uint64_t v119 = 8 * v115;
    do
    {
      uint64_t v120 = *v118++;
      uint64_t v121 = sub_123A5F0(v120);
      v116 += v121 + ((9 * (__clz(v121 | 1) ^ 0x1F) + 73) >> 6);
      v119 -= 8;
    }
    while (v119);
  }
  uint64_t v122 = *(int *)(a1 + 528);
  uint64_t v123 = v116 + 2 * v122;
  uint64_t v124 = *(void *)(a1 + 536);
  if (v124) {
    int v125 = (uint64_t *)(v124 + 8);
  }
  else {
    int v125 = 0;
  }
  if (v122)
  {
    uint64_t v126 = 8 * v122;
    do
    {
      uint64_t v127 = *v125++;
      uint64_t v128 = sub_123A5F0(v127);
      v123 += v128 + ((9 * (__clz(v128 | 1) ^ 0x1F) + 73) >> 6);
      v126 -= 8;
    }
    while (v126);
  }
  uint64_t v129 = *(int *)(a1 + 552);
  uint64_t v130 = v123 + 2 * v129;
  uint64_t v131 = *(void *)(a1 + 560);
  if (v131) {
    uint64_t v132 = (uint64_t *)(v131 + 8);
  }
  else {
    uint64_t v132 = 0;
  }
  if (v129)
  {
    uint64_t v133 = 8 * v129;
    do
    {
      uint64_t v134 = *v132++;
      uint64_t v135 = sub_123A5F0(v134);
      v130 += v135 + ((9 * (__clz(v135 | 1) ^ 0x1F) + 73) >> 6);
      v133 -= 8;
    }
    while (v133);
  }
  uint64_t v136 = *(int *)(a1 + 576);
  uint64_t v137 = v130 + 2 * v136;
  uint64_t v138 = *(void *)(a1 + 584);
  if (v138) {
    uint64_t v139 = (uint64_t *)(v138 + 8);
  }
  else {
    uint64_t v139 = 0;
  }
  if (v136)
  {
    uint64_t v140 = 8 * v136;
    do
    {
      uint64_t v141 = *v139++;
      uint64_t v142 = sub_123ABFC(v141);
      v137 += v142 + ((9 * (__clz(v142 | 1) ^ 0x1F) + 73) >> 6);
      v140 -= 8;
    }
    while (v140);
  }
  uint64_t v143 = *(int *)(a1 + 600);
  uint64_t v144 = v137 + 2 * v143;
  uint64_t v145 = *(void *)(a1 + 608);
  if (v145) {
    uint64_t v146 = (uint64_t *)(v145 + 8);
  }
  else {
    uint64_t v146 = 0;
  }
  if (v143)
  {
    uint64_t v147 = 8 * v143;
    do
    {
      uint64_t v148 = *v146++;
      uint64_t v149 = sub_15A34CC(v148);
      v144 += v149 + ((9 * (__clz(v149 | 1) ^ 0x1F) + 73) >> 6);
      v147 -= 8;
    }
    while (v147);
  }
  uint64_t v150 = sub_188D5A8((unsigned int *)(a1 + 616));
  uint64_t v151 = *(int *)(a1 + 640);
  uint64_t v152 = v150 + v144 + 2 * (v151 + *(unsigned int *)(a1 + 616));
  uint64_t v153 = *(void *)(a1 + 648);
  if (v153) {
    char v154 = (uint64_t *)(v153 + 8);
  }
  else {
    char v154 = 0;
  }
  if (v151)
  {
    uint64_t v155 = 8 * v151;
    do
    {
      uint64_t v156 = *v154++;
      uint64_t v157 = sub_123C8C0(v156);
      v152 += v157 + ((9 * (__clz(v157 | 1) ^ 0x1F) + 73) >> 6);
      v155 -= 8;
    }
    while (v155);
  }
  uint64_t v158 = *(int *)(a1 + 664);
  uint64_t v159 = v152 + 2 * v158;
  uint64_t v160 = *(void *)(a1 + 672);
  if (v160) {
    int v161 = (uint64_t *)(v160 + 8);
  }
  else {
    int v161 = 0;
  }
  if (v158)
  {
    uint64_t v162 = 8 * v158;
    do
    {
      uint64_t v163 = *v161++;
      uint64_t v164 = sub_123CD18(v163);
      v159 += v164 + ((9 * (__clz(v164 | 1) ^ 0x1F) + 73) >> 6);
      v162 -= 8;
    }
    while (v162);
  }
  uint64_t v165 = *(int *)(a1 + 688);
  uint64_t v166 = v159 + 2 * v165;
  uint64_t v167 = *(void *)(a1 + 696);
  if (v167) {
    int v168 = (uint64_t *)(v167 + 8);
  }
  else {
    int v168 = 0;
  }
  if (v165)
  {
    uint64_t v169 = 8 * v165;
    do
    {
      uint64_t v170 = *v168++;
      uint64_t v171 = sub_13F73A8(v170);
      v166 += v171 + ((9 * (__clz(v171 | 1) ^ 0x1F) + 73) >> 6);
      v169 -= 8;
    }
    while (v169);
  }
  uint64_t v172 = *(unsigned int *)(a1 + 704);
  if (v172)
  {
    int v173 = 0;
    uint64_t v174 = 0;
    do
    {
      int v175 = *(_DWORD *)(*(void *)(a1 + 712) + 4 * v173);
      if (v175 < 0) {
        uint64_t v176 = 10;
      }
      else {
        uint64_t v176 = (9 * (__clz(v175 | 1) ^ 0x1F) + 73) >> 6;
      }
      v174 += v176;
      ++v173;
    }
    while (v172 != v173);
  }
  else
  {
    uint64_t v174 = 0;
  }
  uint64_t v177 = *(int *)(a1 + 728);
  uint64_t v178 = v174 + v166 + 2 * (v177 + v172);
  uint64_t v179 = *(void *)(a1 + 736);
  if (v179) {
    uint64_t v180 = (uint64_t *)(v179 + 8);
  }
  else {
    uint64_t v180 = 0;
  }
  if (v177)
  {
    uint64_t v181 = 8 * v177;
    do
    {
      uint64_t v182 = *v180++;
      uint64_t v183 = sub_1431344(v182);
      v178 += v183 + ((9 * (__clz(v183 | 1) ^ 0x1F) + 73) >> 6);
      v181 -= 8;
    }
    while (v181);
  }
  uint64_t v184 = *(int *)(a1 + 752);
  uint64_t v185 = v178 + 2 * v184;
  uint64_t v186 = *(void *)(a1 + 760);
  if (v186) {
    unint64_t v187 = (uint64_t *)(v186 + 8);
  }
  else {
    unint64_t v187 = 0;
  }
  if (v184)
  {
    uint64_t v188 = 8 * v184;
    do
    {
      uint64_t v189 = *v187++;
      uint64_t v190 = sub_14146F0(v189);
      v185 += v190 + ((9 * (__clz(v190 | 1) ^ 0x1F) + 73) >> 6);
      v188 -= 8;
    }
    while (v188);
  }
  int v191 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v191) {
    goto LABEL_179;
  }
  if (v191)
  {
    unint64_t v213 = *(void *)(a1 + 768) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v214 = *(unsigned __int8 *)(v213 + 23);
    uint64_t v215 = *(void *)(v213 + 8);
    if ((v214 & 0x80u) == 0) {
      uint64_t v215 = v214;
    }
    v185 += v215 + ((9 * (__clz(v215 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v191 & 2) == 0)
    {
LABEL_170:
      if ((v191 & 4) == 0) {
        goto LABEL_171;
      }
      goto LABEL_292;
    }
  }
  else if ((v191 & 2) == 0)
  {
    goto LABEL_170;
  }
  unint64_t v216 = *(void *)(a1 + 776) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v217 = *(unsigned __int8 *)(v216 + 23);
  uint64_t v218 = *(void *)(v216 + 8);
  if ((v217 & 0x80u) == 0) {
    uint64_t v218 = v217;
  }
  v185 += v218 + ((9 * (__clz(v218 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 4) == 0)
  {
LABEL_171:
    if ((v191 & 8) == 0) {
      goto LABEL_172;
    }
    goto LABEL_295;
  }
LABEL_292:
  unint64_t v219 = *(void *)(a1 + 784) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v220 = *(unsigned __int8 *)(v219 + 23);
  uint64_t v221 = *(void *)(v219 + 8);
  if ((v220 & 0x80u) == 0) {
    uint64_t v221 = v220;
  }
  v185 += v221 + ((9 * (__clz(v221 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 8) == 0)
  {
LABEL_172:
    if ((v191 & 0x10) == 0) {
      goto LABEL_173;
    }
    goto LABEL_298;
  }
LABEL_295:
  unint64_t v222 = *(void *)(a1 + 792) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v223 = *(unsigned __int8 *)(v222 + 23);
  uint64_t v224 = *(void *)(v222 + 8);
  if ((v223 & 0x80u) == 0) {
    uint64_t v224 = v223;
  }
  v185 += v224 + ((9 * (__clz(v224 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x10) == 0)
  {
LABEL_173:
    if ((v191 & 0x20) == 0) {
      goto LABEL_174;
    }
LABEL_301:
    unint64_t v228 = *(void *)(a1 + 808) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v229 = *(unsigned __int8 *)(v228 + 23);
    uint64_t v230 = *(void *)(v228 + 8);
    if ((v229 & 0x80u) == 0) {
      uint64_t v230 = v229;
    }
    v185 += v230 + ((9 * (__clz(v230 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v191 & 0x40) == 0)
    {
LABEL_175:
      if ((v191 & 0x80) == 0) {
        goto LABEL_179;
      }
      goto LABEL_176;
    }
    goto LABEL_304;
  }
LABEL_298:
  unint64_t v225 = *(void *)(a1 + 800) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v226 = *(unsigned __int8 *)(v225 + 23);
  uint64_t v227 = *(void *)(v225 + 8);
  if ((v226 & 0x80u) == 0) {
    uint64_t v227 = v226;
  }
  v185 += v227 + ((9 * (__clz(v227 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x20) != 0) {
    goto LABEL_301;
  }
LABEL_174:
  if ((v191 & 0x40) == 0) {
    goto LABEL_175;
  }
LABEL_304:
  unint64_t v231 = *(void *)(a1 + 816) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v232 = *(unsigned __int8 *)(v231 + 23);
  uint64_t v233 = *(void *)(v231 + 8);
  if ((v232 & 0x80u) == 0) {
    uint64_t v233 = v232;
  }
  v185 += v233 + ((9 * (__clz(v233 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x80) != 0)
  {
LABEL_176:
    unint64_t v192 = *(void *)(a1 + 824) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v193 = *(unsigned __int8 *)(v192 + 23);
    uint64_t v194 = *(void *)(v192 + 8);
    if ((v193 & 0x80u) == 0) {
      uint64_t v194 = v193;
    }
    v185 += v194 + ((9 * (__clz(v194 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_179:
  if ((v191 & 0xFF00) == 0) {
    goto LABEL_189;
  }
  if ((v191 & 0x100) != 0)
  {
    unint64_t v234 = *(void *)(a1 + 832) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v235 = *(unsigned __int8 *)(v234 + 23);
    uint64_t v236 = *(void *)(v234 + 8);
    if ((v235 & 0x80u) == 0) {
      uint64_t v236 = v235;
    }
    v185 += v236 + ((9 * (__clz(v236 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v191 & 0x200) == 0)
    {
LABEL_182:
      if ((v191 & 0x400) == 0) {
        goto LABEL_183;
      }
      goto LABEL_312;
    }
  }
  else if ((v191 & 0x200) == 0)
  {
    goto LABEL_182;
  }
  uint64_t v237 = sub_15B0D90(*(void *)(a1 + 840));
  v185 += v237 + ((9 * (__clz(v237 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v191 & 0x400) == 0)
  {
LABEL_183:
    if ((v191 & 0x800) == 0) {
      goto LABEL_184;
    }
    goto LABEL_316;
  }
LABEL_312:
  uint64_t v238 = *(void *)(a1 + 848);
  uint64_t v239 = 9;
  if ((*(unsigned char *)(v238 + 16) & 1) == 0) {
    uint64_t v239 = 0;
  }
  uint64_t v240 = *(void *)(v238 + 8);
  if (v240)
  {
    unint64_t v255 = v240 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v255 + 31) < 0) {
      uint64_t v256 = *(void *)(v255 + 16);
    }
    else {
      uint64_t v256 = *(unsigned __int8 *)(v255 + 31);
    }
    v239 += v256;
  }
  *(_DWORD *)(v238 + 20) = v239;
  v185 += v239 + ((9 * (__clz(v239 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v191 & 0x800) == 0)
  {
LABEL_184:
    if ((v191 & 0x1000) == 0) {
      goto LABEL_185;
    }
    goto LABEL_317;
  }
LABEL_316:
  unint64_t v241 = sub_12CB020(*(void *)(a1 + 856));
  v185 += v241 + ((9 * (__clz(v241 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v191 & 0x1000) == 0)
  {
LABEL_185:
    if ((v191 & 0x2000) == 0) {
      goto LABEL_186;
    }
    goto LABEL_318;
  }
LABEL_317:
  uint64_t v242 = sub_15BC4A4(*(void *)(a1 + 864));
  v185 += v242 + ((9 * (__clz(v242 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x2000) == 0)
  {
LABEL_186:
    if ((v191 & 0x4000) == 0) {
      goto LABEL_187;
    }
    goto LABEL_319;
  }
LABEL_318:
  uint64_t v243 = sub_1418A38(*(void *)(a1 + 872));
  v185 += v243 + ((9 * (__clz(v243 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x4000) == 0)
  {
LABEL_187:
    if ((v191 & 0x8000) == 0) {
      goto LABEL_189;
    }
    goto LABEL_188;
  }
LABEL_319:
  uint64_t v244 = sub_123F564(*(void *)(a1 + 880));
  v185 += v244 + ((9 * (__clz(v244 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x8000) != 0)
  {
LABEL_188:
    uint64_t v195 = sub_13F73A8(*(void *)(a1 + 888));
    v185 += v195 + ((9 * (__clz(v195 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_189:
  if ((v191 & 0x7F0000) == 0) {
    goto LABEL_198;
  }
  if ((v191 & 0x10000) != 0)
  {
    uint64_t v245 = sub_1241640(*(void *)(a1 + 896));
    v185 += v245 + ((9 * (__clz(v245 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v191 & 0x20000) == 0)
    {
LABEL_192:
      if ((v191 & 0x40000) == 0) {
        goto LABEL_193;
      }
      goto LABEL_323;
    }
  }
  else if ((v191 & 0x20000) == 0)
  {
    goto LABEL_192;
  }
  uint64_t v246 = sub_15B806C(*(void *)(a1 + 904));
  v185 += v246 + ((9 * (__clz(v246 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x40000) == 0)
  {
LABEL_193:
    if ((v191 & 0x80000) == 0) {
      goto LABEL_194;
    }
    goto LABEL_327;
  }
LABEL_323:
  uint64_t v247 = *(void *)(a1 + 912);
  uint64_t v248 = 9;
  if ((*(unsigned char *)(v247 + 16) & 1) == 0) {
    uint64_t v248 = 0;
  }
  uint64_t v249 = *(void *)(v247 + 8);
  if (v249)
  {
    unint64_t v257 = v249 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v257 + 31) < 0) {
      uint64_t v258 = *(void *)(v257 + 16);
    }
    else {
      uint64_t v258 = *(unsigned __int8 *)(v257 + 31);
    }
    v248 += v258;
  }
  *(_DWORD *)(v247 + 20) = v248;
  v185 += v248 + ((9 * (__clz(v248 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x80000) == 0)
  {
LABEL_194:
    if ((v191 & 0x100000) == 0) {
      goto LABEL_195;
    }
    goto LABEL_328;
  }
LABEL_327:
  uint64_t v250 = sub_13F73A8(*(void *)(a1 + 920));
  v185 += v250 + ((9 * (__clz(v250 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x100000) == 0)
  {
LABEL_195:
    if ((v191 & 0x200000) == 0) {
      goto LABEL_196;
    }
    goto LABEL_329;
  }
LABEL_328:
  uint64_t v251 = sub_123D644(*(void *)(a1 + 928));
  v185 += v251 + ((9 * (__clz(v251 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x200000) == 0)
  {
LABEL_196:
    if ((v191 & 0x400000) == 0) {
      goto LABEL_198;
    }
    goto LABEL_197;
  }
LABEL_329:
  uint64_t v252 = sub_140D778(*(void *)(a1 + 936));
  v185 += v252 + ((9 * (__clz(v252 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v191 & 0x400000) != 0)
  {
LABEL_197:
    uint64_t v196 = sub_123C468(*(void *)(a1 + 944));
    v185 += v196 + ((9 * (__clz(v196 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_198:
  if ((v191 & 0x1000000) != 0) {
    v185 += ((9 * (__clz(*(void *)(a1 + 960) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if (v191 >> 26)
  {
    if ((v191 & 0x4000000) != 0)
    {
      int v197 = *(_DWORD *)(a1 + 976);
      uint64_t v198 = (9 * (__clz(v197 | 1) ^ 0x1F) + 73) >> 6;
      if (v197 >= 0) {
        uint64_t v199 = v198;
      }
      else {
        uint64_t v199 = 10;
      }
      v185 += v199 + 1;
    }
    uint64_t v200 = v185 + 2;
    if ((v191 & 0x8000000) == 0) {
      uint64_t v200 = v185;
    }
    if ((v191 & 0x10000000) != 0) {
      v200 += 2;
    }
    if ((v191 & 0x20000000) != 0) {
      v200 += 3;
    }
    if ((v191 & 0x40000000) != 0) {
      v200 += 3;
    }
    if (v191 >= 0) {
      uint64_t v185 = v200;
    }
    else {
      uint64_t v185 = v200 + 9;
    }
  }
  int v201 = *(_DWORD *)(a1 + 20);
  if ((_BYTE)v201)
  {
    if (v201) {
      v185 += ((9 * (__clz(*(void *)(a1 + 992) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v201 & 2) != 0) {
      v185 += ((9 * (__clz(*(void *)(a1 + 1000) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    uint64_t v202 = v185 + 10;
    if ((v201 & 4) == 0) {
      uint64_t v202 = v185;
    }
    if ((v201 & 8) != 0) {
      v202 += 10;
    }
    if ((v201 & 0x10) != 0) {
      v202 += 10;
    }
    if ((v201 & 0x20) != 0)
    {
      int v203 = *(_DWORD *)(a1 + 1032);
      uint64_t v204 = ((9 * (__clz(v203 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v203 >= 0) {
        uint64_t v205 = v204;
      }
      else {
        uint64_t v205 = 12;
      }
      v202 += v205;
    }
    if ((v201 & 0x40) != 0) {
      v202 += 3;
    }
    if ((v201 & 0x80) != 0) {
      uint64_t v185 = v202 + 3;
    }
    else {
      uint64_t v185 = v202;
    }
  }
  if ((v201 & 0xFF00) != 0)
  {
    uint64_t v206 = v185 + 3;
    if ((v201 & 0x100) == 0) {
      uint64_t v206 = v185;
    }
    if ((v201 & 0x200) != 0) {
      v206 += 3;
    }
    if ((v201 & 0x400) != 0) {
      v206 += ((9 * (__clz(*(void *)(a1 + 1040) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v201 & 0x800) != 0) {
      v206 += ((9 * (__clz(*(void *)(a1 + 1048) | 1) ^ 0x3F) + 73) >> 6) + 2;
    }
    if ((v201 & 0x1000) != 0) {
      v206 += 3;
    }
    if ((v201 & 0x2000) != 0) {
      v206 += 3;
    }
    if ((v201 & 0x4000) != 0) {
      v206 += 3;
    }
    if ((v201 & 0x8000) != 0) {
      uint64_t v185 = v206 + 3;
    }
    else {
      uint64_t v185 = v206;
    }
  }
  if ((v201 & 0xFF0000) != 0)
  {
    uint64_t v207 = v185 + 3;
    if ((v201 & 0x10000) == 0) {
      uint64_t v207 = v185;
    }
    if ((v201 & 0x20000) != 0) {
      v207 += 3;
    }
    if ((v201 & 0x40000) != 0) {
      v207 += 3;
    }
    if ((v201 & 0x80000) != 0) {
      v207 += 3;
    }
    if ((v201 & 0x100000) != 0) {
      v207 += 10;
    }
    if ((v201 & 0x200000) != 0) {
      v207 += 10;
    }
    if ((v201 & 0x400000) != 0) {
      v207 += 10;
    }
    if ((v201 & 0x800000) != 0) {
      uint64_t v185 = v207 + 10;
    }
    else {
      uint64_t v185 = v207;
    }
  }
  if ((v201 & 0xF000000) != 0)
  {
    if ((v201 & 0x1000000) != 0) {
      v185 += 10;
    }
    if ((v201 & 0x2000000) != 0)
    {
      v185 += ((9 * (__clz(*(void *)(a1 + 1104) | 1) ^ 0x3F) + 73) >> 6) + 2;
      if ((v201 & 0x4000000) == 0)
      {
LABEL_279:
        if ((v201 & 0x8000000) == 0) {
          goto LABEL_284;
        }
LABEL_280:
        int v208 = *(_DWORD *)(a1 + 1120);
        uint64_t v209 = ((9 * (__clz(v208 | 1) ^ 0x1F) + 73) >> 6) + 2;
        if (v208 >= 0) {
          uint64_t v210 = v209;
        }
        else {
          uint64_t v210 = 12;
        }
        v185 += v210;
        goto LABEL_284;
      }
    }
    else if ((v201 & 0x4000000) == 0)
    {
      goto LABEL_279;
    }
    v185 += ((9 * (__clz(*(void *)(a1 + 1112) | 1) ^ 0x3F) + 73) >> 6) + 2;
    if ((v201 & 0x8000000) == 0) {
      goto LABEL_284;
    }
    goto LABEL_280;
  }
LABEL_284:
  uint64_t v211 = *(void *)(a1 + 8);
  if (v211)
  {
    unint64_t v253 = v211 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v253 + 31) < 0) {
      uint64_t v254 = *(void *)(v253 + 16);
    }
    else {
      uint64_t v254 = *(unsigned __int8 *)(v253 + 31);
    }
    v185 += v254;
  }
  *(_DWORD *)(a1 + 24) = v185;
  return v185;
}

void sub_1249238(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 32);
    uint64_t v6 = *(int *)(a1 + 32);
    sub_188CA54((unsigned int *)(a1 + 32), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 40);
    *v5 += *(_DWORD *)(a2 + 32);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 40), 8 * *(int *)(a2 + 32));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v10 + 8 * v9), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v11 = *(_DWORD *)(a2 + 72);
  if (v11)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_124F374((uint64_t *)(a1 + 64), v13, v12, v11, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v14 = *(_DWORD *)(a1 + 72) + v11;
    *(_DWORD *)(a1 + 72) = v14;
    uint64_t v15 = *(int **)(a1 + 80);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  int v16 = *(_DWORD *)(a2 + 88);
  if (v16)
  {
    uint64_t v17 = *(int *)(a1 + 88);
    sub_188CA54((unsigned int *)(a1 + 88), v17 + v16);
    uint64_t v18 = *(void *)(a1 + 96);
    *(_DWORD *)(a1 + 88) += *(_DWORD *)(a2 + 88);
    memcpy((void *)(v18 + 8 * v17), *(const void **)(a2 + 96), 8 * *(int *)(a2 + 88));
  }
  int v19 = *(_DWORD *)(a2 + 112);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 120) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_188FB98(a1 + 104, v21, v20, v19, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v22 = *(_DWORD *)(a1 + 112) + v19;
    *(_DWORD *)(a1 + 112) = v22;
    uint64_t v23 = *(int **)(a1 + 120);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 136);
  if (v24)
  {
    uint64_t v25 = (const std::string **)(*(void *)(a2 + 144) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_188FB98(a1 + 128, v26, v25, v24, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v27 = *(_DWORD *)(a1 + 136) + v24;
    *(_DWORD *)(a1 + 136) = v27;
    uint64_t v28 = *(int **)(a1 + 144);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 160);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 168) + 8);
    uint64_t v31 = (std::string **)sub_188CCE4(a1 + 152, *(_DWORD *)(a2 + 160));
    sub_122BB8C((std::string *)(a1 + 152), v31, v30, v29, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v32 = *(_DWORD *)(a1 + 160) + v29;
    *(_DWORD *)(a1 + 160) = v32;
    uint64_t v33 = *(int **)(a1 + 168);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 184);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 192) + 8);
    unsigned int v36 = (std::string **)sub_188CCE4(a1 + 176, *(_DWORD *)(a2 + 184));
    sub_124F3F0((std::string *)(a1 + 176), v36, v35, v34, **(_DWORD **)(a1 + 192) - *(_DWORD *)(a1 + 184));
    int v37 = *(_DWORD *)(a1 + 184) + v34;
    *(_DWORD *)(a1 + 184) = v37;
    uint64_t v38 = *(int **)(a1 + 192);
    if (*v38 < v37) {
      *uint64_t v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 208);
  if (v39)
  {
    uint64_t v40 = (const std::string **)(*(void *)(a2 + 216) + 8);
    uint64_t v41 = (std::string **)sub_188CCE4(a1 + 200, *(_DWORD *)(a2 + 208));
    sub_188FB98(a1 + 200, v41, v40, v39, **(_DWORD **)(a1 + 216) - *(_DWORD *)(a1 + 208));
    int v42 = *(_DWORD *)(a1 + 208) + v39;
    *(_DWORD *)(a1 + 208) = v42;
    uint64_t v43 = *(int **)(a1 + 216);
    if (*v43 < v42) {
      *uint64_t v43 = v42;
    }
  }
  int v44 = *(_DWORD *)(a2 + 232);
  if (v44)
  {
    uint64_t v45 = (uint64_t *)(*(void *)(a2 + 240) + 8);
    uint64_t v46 = (std::string **)sub_188CCE4(a1 + 224, *(_DWORD *)(a2 + 232));
    sub_124E8CC((uint64_t *)(a1 + 224), v46, v45, v44, **(_DWORD **)(a1 + 240) - *(_DWORD *)(a1 + 232));
    int v47 = *(_DWORD *)(a1 + 232) + v44;
    *(_DWORD *)(a1 + 232) = v47;
    uint64_t v48 = *(int **)(a1 + 240);
    if (*v48 < v47) {
      *uint64_t v48 = v47;
    }
  }
  int v49 = *(_DWORD *)(a2 + 256);
  if (v49)
  {
    uint64_t v50 = (uint64_t *)(*(void *)(a2 + 264) + 8);
    uint64_t v51 = (uint64_t *)sub_188CCE4(a1 + 248, *(_DWORD *)(a2 + 256));
    sub_124EAFC((uint64_t *)(a1 + 248), v51, v50, v49, **(_DWORD **)(a1 + 264) - *(_DWORD *)(a1 + 256));
    int v52 = *(_DWORD *)(a1 + 256) + v49;
    *(_DWORD *)(a1 + 256) = v52;
    uint64_t v53 = *(int **)(a1 + 264);
    if (*v53 < v52) {
      *uint64_t v53 = v52;
    }
  }
  int v54 = *(_DWORD *)(a2 + 280);
  if (v54)
  {
    uint64_t v55 = (const std::string **)(*(void *)(a2 + 288) + 8);
    uint64_t v56 = (std::string **)sub_188CCE4(a1 + 272, *(_DWORD *)(a2 + 280));
    sub_188FB98(a1 + 272, v56, v55, v54, **(_DWORD **)(a1 + 288) - *(_DWORD *)(a1 + 280));
    int v57 = *(_DWORD *)(a1 + 280) + v54;
    *(_DWORD *)(a1 + 280) = v57;
    uint64_t v58 = *(int **)(a1 + 288);
    if (*v58 < v57) {
      int *v58 = v57;
    }
  }
  int v59 = *(_DWORD *)(a2 + 304);
  if (v59)
  {
    uint64_t v60 = (uint64_t *)(*(void *)(a2 + 312) + 8);
    uint64_t v61 = (uint64_t *)sub_188CCE4(a1 + 296, *(_DWORD *)(a2 + 304));
    sub_124EB88((uint64_t *)(a1 + 296), v61, v60, v59, **(_DWORD **)(a1 + 312) - *(_DWORD *)(a1 + 304));
    int v62 = *(_DWORD *)(a1 + 304) + v59;
    *(_DWORD *)(a1 + 304) = v62;
    uint64_t v63 = *(int **)(a1 + 312);
    if (*v63 < v62) {
      *uint64_t v63 = v62;
    }
  }
  int v64 = *(_DWORD *)(a2 + 328);
  if (v64)
  {
    uint64_t v65 = (const std::string **)(*(void *)(a2 + 336) + 8);
    uint64_t v66 = (std::string **)sub_188CCE4(a1 + 320, *(_DWORD *)(a2 + 328));
    sub_188FB98(a1 + 320, v66, v65, v64, **(_DWORD **)(a1 + 336) - *(_DWORD *)(a1 + 328));
    int v67 = *(_DWORD *)(a1 + 328) + v64;
    *(_DWORD *)(a1 + 328) = v67;
    uint64_t v68 = *(int **)(a1 + 336);
    if (*v68 < v67) {
      int *v68 = v67;
    }
  }
  int v69 = *(_DWORD *)(a2 + 352);
  if (v69)
  {
    uint64_t v70 = (const std::string **)(*(void *)(a2 + 360) + 8);
    uint64_t v71 = (std::string **)sub_188CCE4(a1 + 344, *(_DWORD *)(a2 + 352));
    sub_188FB98(a1 + 344, v71, v70, v69, **(_DWORD **)(a1 + 360) - *(_DWORD *)(a1 + 352));
    int v72 = *(_DWORD *)(a1 + 352) + v69;
    *(_DWORD *)(a1 + 352) = v72;
    uint64_t v73 = *(int **)(a1 + 360);
    if (*v73 < v72) {
      *uint64_t v73 = v72;
    }
  }
  int v74 = *(_DWORD *)(a2 + 368);
  if (v74)
  {
    uint64_t v75 = *(int *)(a1 + 368);
    sub_188CA54((unsigned int *)(a1 + 368), v75 + v74);
    uint64_t v76 = *(void *)(a1 + 376);
    *(_DWORD *)(a1 + 368) += *(_DWORD *)(a2 + 368);
    memcpy((void *)(v76 + 8 * v75), *(const void **)(a2 + 376), 8 * *(int *)(a2 + 368));
  }
  int v77 = *(_DWORD *)(a2 + 392);
  if (v77)
  {
    uint64_t v78 = (uint64_t *)(*(void *)(a2 + 400) + 8);
    uint64_t v79 = (std::string **)sub_188CCE4(a1 + 384, *(_DWORD *)(a2 + 392));
    sub_124EC14((uint64_t *)(a1 + 384), v79, v78, v77, **(_DWORD **)(a1 + 400) - *(_DWORD *)(a1 + 392));
    int v80 = *(_DWORD *)(a1 + 392) + v77;
    *(_DWORD *)(a1 + 392) = v80;
    uint64_t v81 = *(int **)(a1 + 400);
    if (*v81 < v80) {
      *uint64_t v81 = v80;
    }
  }
  int v82 = *(_DWORD *)(a2 + 416);
  if (v82)
  {
    uint64_t v83 = (uint64_t *)(*(void *)(a2 + 424) + 8);
    uint64_t v84 = (uint64_t *)sub_188CCE4(a1 + 408, *(_DWORD *)(a2 + 416));
    sub_124ED2C((uint64_t *)(a1 + 408), v84, v83, v82, **(_DWORD **)(a1 + 424) - *(_DWORD *)(a1 + 416));
    int v85 = *(_DWORD *)(a1 + 416) + v82;
    *(_DWORD *)(a1 + 416) = v85;
    uint64_t v86 = *(int **)(a1 + 424);
    if (*v86 < v85) {
      *uint64_t v86 = v85;
    }
  }
  int v87 = *(_DWORD *)(a2 + 432);
  if (v87)
  {
    uint64_t v88 = *(int *)(a1 + 432);
    sub_188CA54((unsigned int *)(a1 + 432), v88 + v87);
    uint64_t v89 = *(void *)(a1 + 440);
    *(_DWORD *)(a1 + 432) += *(_DWORD *)(a2 + 432);
    memcpy((void *)(v89 + 8 * v88), *(const void **)(a2 + 440), 8 * *(int *)(a2 + 432));
  }
  int v90 = *(_DWORD *)(a2 + 456);
  if (v90)
  {
    uint64_t v91 = (uint64_t *)(*(void *)(a2 + 464) + 8);
    uint64_t v92 = (std::string **)sub_188CCE4(a1 + 448, *(_DWORD *)(a2 + 456));
    sub_124F3F0((std::string *)(a1 + 448), v92, v91, v90, **(_DWORD **)(a1 + 464) - *(_DWORD *)(a1 + 456));
    int v93 = *(_DWORD *)(a1 + 456) + v90;
    *(_DWORD *)(a1 + 456) = v93;
    uint64_t v94 = *(int **)(a1 + 464);
    if (*v94 < v93) {
      *uint64_t v94 = v93;
    }
  }
  int v95 = *(_DWORD *)(a2 + 480);
  if (v95)
  {
    int v96 = (uint64_t *)(*(void *)(a2 + 488) + 8);
    uint64_t v97 = (std::string **)sub_188CCE4(a1 + 472, *(_DWORD *)(a2 + 480));
    sub_124EDB8((std::string *)(a1 + 472), v97, v96, v95, **(_DWORD **)(a1 + 488) - *(_DWORD *)(a1 + 480));
    int v98 = *(_DWORD *)(a1 + 480) + v95;
    *(_DWORD *)(a1 + 480) = v98;
    uint64_t v99 = *(int **)(a1 + 488);
    if (*v99 < v98) {
      int *v99 = v98;
    }
  }
  int v100 = *(_DWORD *)(a2 + 504);
  if (v100)
  {
    uint64_t v101 = (uint64_t *)(*(void *)(a2 + 512) + 8);
    uint64_t v102 = (std::string **)sub_188CCE4(a1 + 496, *(_DWORD *)(a2 + 504));
    sub_124EDB8((std::string *)(a1 + 496), v102, v101, v100, **(_DWORD **)(a1 + 512) - *(_DWORD *)(a1 + 504));
    int v103 = *(_DWORD *)(a1 + 504) + v100;
    *(_DWORD *)(a1 + 504) = v103;
    int v104 = *(int **)(a1 + 512);
    if (*v104 < v103) {
      int *v104 = v103;
    }
  }
  int v105 = *(_DWORD *)(a2 + 528);
  if (v105)
  {
    uint64_t v106 = (uint64_t *)(*(void *)(a2 + 536) + 8);
    uint64_t v107 = (std::string **)sub_188CCE4(a1 + 520, *(_DWORD *)(a2 + 528));
    sub_124EDB8((std::string *)(a1 + 520), v107, v106, v105, **(_DWORD **)(a1 + 536) - *(_DWORD *)(a1 + 528));
    int v108 = *(_DWORD *)(a1 + 528) + v105;
    *(_DWORD *)(a1 + 528) = v108;
    uint64_t v109 = *(int **)(a1 + 536);
    if (*v109 < v108) {
      int *v109 = v108;
    }
  }
  int v110 = *(_DWORD *)(a2 + 552);
  if (v110)
  {
    int v111 = (uint64_t *)(*(void *)(a2 + 560) + 8);
    uint64_t v112 = (std::string **)sub_188CCE4(a1 + 544, *(_DWORD *)(a2 + 552));
    sub_124EDB8((std::string *)(a1 + 544), v112, v111, v110, **(_DWORD **)(a1 + 560) - *(_DWORD *)(a1 + 552));
    int v113 = *(_DWORD *)(a1 + 552) + v110;
    *(_DWORD *)(a1 + 552) = v113;
    uint64_t v114 = *(int **)(a1 + 560);
    if (*v114 < v113) {
      *uint64_t v114 = v113;
    }
  }
  int v115 = *(_DWORD *)(a2 + 576);
  if (v115)
  {
    uint64_t v116 = (uint64_t *)(*(void *)(a2 + 584) + 8);
    uint64_t v117 = (std::string **)sub_188CCE4(a1 + 568, *(_DWORD *)(a2 + 576));
    sub_124EE34((std::string *)(a1 + 568), v117, v116, v115, **(_DWORD **)(a1 + 584) - *(_DWORD *)(a1 + 576));
    int v118 = *(_DWORD *)(a1 + 576) + v115;
    *(_DWORD *)(a1 + 576) = v118;
    uint64_t v119 = *(int **)(a1 + 584);
    if (*v119 < v118) {
      int *v119 = v118;
    }
  }
  int v120 = *(_DWORD *)(a2 + 600);
  if (v120)
  {
    uint64_t v121 = (uint64_t *)(*(void *)(a2 + 608) + 8);
    uint64_t v122 = (std::string **)sub_188CCE4(a1 + 592, *(_DWORD *)(a2 + 600));
    sub_124ECA0((uint64_t *)(a1 + 592), v122, v121, v120, **(_DWORD **)(a1 + 608) - *(_DWORD *)(a1 + 600));
    int v123 = *(_DWORD *)(a1 + 600) + v120;
    *(_DWORD *)(a1 + 600) = v123;
    uint64_t v124 = *(int **)(a1 + 608);
    if (*v124 < v123) {
      *uint64_t v124 = v123;
    }
  }
  int v125 = *(_DWORD *)(a2 + 616);
  if (v125)
  {
    uint64_t v126 = *(int *)(a1 + 616);
    sub_188CA54((unsigned int *)(a1 + 616), v126 + v125);
    uint64_t v127 = *(void *)(a1 + 624);
    *(_DWORD *)(a1 + 616) += *(_DWORD *)(a2 + 616);
    memcpy((void *)(v127 + 8 * v126), *(const void **)(a2 + 624), 8 * *(int *)(a2 + 616));
  }
  int v128 = *(_DWORD *)(a2 + 640);
  if (v128)
  {
    uint64_t v129 = (uint64_t *)(*(void *)(a2 + 648) + 8);
    uint64_t v130 = (std::string **)sub_188CCE4(a1 + 632, *(_DWORD *)(a2 + 640));
    sub_124EEC0((uint64_t *)(a1 + 632), v130, v129, v128, **(_DWORD **)(a1 + 648) - *(_DWORD *)(a1 + 640));
    int v131 = *(_DWORD *)(a1 + 640) + v128;
    *(_DWORD *)(a1 + 640) = v131;
    uint64_t v132 = *(int **)(a1 + 648);
    if (*v132 < v131) {
      int *v132 = v131;
    }
  }
  int v133 = *(_DWORD *)(a2 + 664);
  if (v133)
  {
    uint64_t v134 = (uint64_t *)(*(void *)(a2 + 672) + 8);
    uint64_t v135 = (std::string **)sub_188CCE4(a1 + 656, *(_DWORD *)(a2 + 664));
    sub_124EF3C((std::string *)(a1 + 656), v135, v134, v133, **(_DWORD **)(a1 + 672) - *(_DWORD *)(a1 + 664));
    int v136 = *(_DWORD *)(a1 + 664) + v133;
    *(_DWORD *)(a1 + 664) = v136;
    uint64_t v137 = *(int **)(a1 + 672);
    if (*v137 < v136) {
      int *v137 = v136;
    }
  }
  int v138 = *(_DWORD *)(a2 + 688);
  if (v138)
  {
    uint64_t v139 = (uint64_t *)(*(void *)(a2 + 696) + 8);
    uint64_t v140 = (std::string **)sub_188CCE4(a1 + 680, *(_DWORD *)(a2 + 688));
    sub_124EFB8((std::string *)(a1 + 680), v140, v139, v138, **(_DWORD **)(a1 + 696) - *(_DWORD *)(a1 + 688));
    int v141 = *(_DWORD *)(a1 + 688) + v138;
    *(_DWORD *)(a1 + 688) = v141;
    uint64_t v142 = *(int **)(a1 + 696);
    if (*v142 < v141) {
      int *v142 = v141;
    }
  }
  int v143 = *(_DWORD *)(a2 + 704);
  if (v143)
  {
    uint64_t v144 = *(int *)(a1 + 704);
    sub_188C80C((unsigned int *)(a1 + 704), v144 + v143);
    uint64_t v145 = *(void *)(a1 + 712);
    *(_DWORD *)(a1 + 704) += *(_DWORD *)(a2 + 704);
    memcpy((void *)(v145 + 4 * v144), *(const void **)(a2 + 712), 4 * *(int *)(a2 + 704));
  }
  int v146 = *(_DWORD *)(a2 + 728);
  if (v146)
  {
    uint64_t v147 = (uint64_t *)(*(void *)(a2 + 736) + 8);
    uint64_t v148 = (std::string **)sub_188CCE4(a1 + 720, *(_DWORD *)(a2 + 728));
    sub_124F044((uint64_t *)(a1 + 720), v148, v147, v146, **(_DWORD **)(a1 + 736) - *(_DWORD *)(a1 + 728));
    int v149 = *(_DWORD *)(a1 + 728) + v146;
    *(_DWORD *)(a1 + 728) = v149;
    uint64_t v150 = *(int **)(a1 + 736);
    if (*v150 < v149) {
      int *v150 = v149;
    }
  }
  int v151 = *(_DWORD *)(a2 + 752);
  if (v151)
  {
    uint64_t v152 = (uint64_t *)(*(void *)(a2 + 760) + 8);
    uint64_t v153 = (std::string **)sub_188CCE4(a1 + 744, *(_DWORD *)(a2 + 752));
    sub_124F15C((std::string *)(a1 + 744), v153, v152, v151, **(_DWORD **)(a1 + 760) - *(_DWORD *)(a1 + 752));
    int v154 = *(_DWORD *)(a1 + 752) + v151;
    *(_DWORD *)(a1 + 752) = v154;
    uint64_t v155 = *(int **)(a1 + 760);
    if (*v155 < v154) {
      *uint64_t v155 = v154;
    }
  }
  unsigned int v156 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v156) {
    goto LABEL_127;
  }
  if (v156)
  {
    uint64_t v157 = (long long *)(*(void *)(a2 + 768) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v158 = *(void *)(a1 + 8);
    uint64_t v159 = (uint64_t *)(v158 & 0xFFFFFFFFFFFFFFFCLL);
    if (v158) {
      uint64_t v159 = (uint64_t *)*v159;
    }
    sub_1881DF4((std::string **)(a1 + 768), v157, v159);
    if ((v156 & 2) == 0)
    {
LABEL_96:
      if ((v156 & 4) == 0) {
        goto LABEL_97;
      }
      goto LABEL_109;
    }
  }
  else if ((v156 & 2) == 0)
  {
    goto LABEL_96;
  }
  uint64_t v160 = (long long *)(*(void *)(a2 + 776) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v161 = *(void *)(a1 + 8);
  uint64_t v162 = (uint64_t *)(v161 & 0xFFFFFFFFFFFFFFFCLL);
  if (v161) {
    uint64_t v162 = (uint64_t *)*v162;
  }
  sub_1881DF4((std::string **)(a1 + 776), v160, v162);
  if ((v156 & 4) == 0)
  {
LABEL_97:
    if ((v156 & 8) == 0) {
      goto LABEL_98;
    }
    goto LABEL_112;
  }
LABEL_109:
  uint64_t v163 = (long long *)(*(void *)(a2 + 784) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v164 = *(void *)(a1 + 8);
  uint64_t v165 = (uint64_t *)(v164 & 0xFFFFFFFFFFFFFFFCLL);
  if (v164) {
    uint64_t v165 = (uint64_t *)*v165;
  }
  sub_1881DF4((std::string **)(a1 + 784), v163, v165);
  if ((v156 & 8) == 0)
  {
LABEL_98:
    if ((v156 & 0x10) == 0) {
      goto LABEL_99;
    }
    goto LABEL_115;
  }
LABEL_112:
  uint64_t v166 = (long long *)(*(void *)(a2 + 792) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v167 = *(void *)(a1 + 8);
  int v168 = (uint64_t *)(v167 & 0xFFFFFFFFFFFFFFFCLL);
  if (v167) {
    int v168 = (uint64_t *)*v168;
  }
  sub_1881DF4((std::string **)(a1 + 792), v166, v168);
  if ((v156 & 0x10) == 0)
  {
LABEL_99:
    if ((v156 & 0x20) == 0) {
      goto LABEL_100;
    }
LABEL_118:
    uint64_t v172 = (long long *)(*(void *)(a2 + 808) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v173 = *(void *)(a1 + 8);
    uint64_t v174 = (uint64_t *)(v173 & 0xFFFFFFFFFFFFFFFCLL);
    if (v173) {
      uint64_t v174 = (uint64_t *)*v174;
    }
    sub_1881DF4((std::string **)(a1 + 808), v172, v174);
    if ((v156 & 0x40) == 0)
    {
LABEL_101:
      if ((v156 & 0x80) == 0) {
        goto LABEL_127;
      }
      goto LABEL_124;
    }
    goto LABEL_121;
  }
LABEL_115:
  uint64_t v169 = (long long *)(*(void *)(a2 + 800) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v170 = *(void *)(a1 + 8);
  uint64_t v171 = (uint64_t *)(v170 & 0xFFFFFFFFFFFFFFFCLL);
  if (v170) {
    uint64_t v171 = (uint64_t *)*v171;
  }
  sub_1881DF4((std::string **)(a1 + 800), v169, v171);
  if ((v156 & 0x20) != 0) {
    goto LABEL_118;
  }
LABEL_100:
  if ((v156 & 0x40) == 0) {
    goto LABEL_101;
  }
LABEL_121:
  int v175 = (long long *)(*(void *)(a2 + 816) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v176 = *(void *)(a1 + 8);
  uint64_t v177 = (uint64_t *)(v176 & 0xFFFFFFFFFFFFFFFCLL);
  if (v176) {
    uint64_t v177 = (uint64_t *)*v177;
  }
  sub_1881DF4((std::string **)(a1 + 816), v175, v177);
  if ((v156 & 0x80) != 0)
  {
LABEL_124:
    uint64_t v178 = (long long *)(*(void *)(a2 + 824) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v179 = *(void *)(a1 + 8);
    uint64_t v180 = (uint64_t *)(v179 & 0xFFFFFFFFFFFFFFFCLL);
    if (v179) {
      uint64_t v180 = (uint64_t *)*v180;
    }
    sub_1881DF4((std::string **)(a1 + 824), v178, v180);
  }
LABEL_127:
  if ((v156 & 0xFF00) == 0) {
    goto LABEL_196;
  }
  if ((v156 & 0x100) != 0)
  {
    uint64_t v181 = (long long *)(*(void *)(a2 + 832) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v182 = *(void *)(a1 + 8);
    uint64_t v183 = (uint64_t *)(v182 & 0xFFFFFFFFFFFFFFFCLL);
    if (v182) {
      uint64_t v183 = (uint64_t *)*v183;
    }
    sub_1881DF4((std::string **)(a1 + 832), v181, v183);
    if ((v156 & 0x200) == 0)
    {
LABEL_130:
      if ((v156 & 0x400) == 0) {
        goto LABEL_131;
      }
      goto LABEL_148;
    }
  }
  else if ((v156 & 0x200) == 0)
  {
    goto LABEL_130;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v184 = *(void *)(a1 + 840);
  if (!v184)
  {
    uint64_t v185 = *(void *)(a1 + 8);
    uint64_t v186 = (void *)(v185 & 0xFFFFFFFFFFFFFFFCLL);
    if (v185) {
      uint64_t v186 = (void *)*v186;
    }
    uint64_t v184 = sub_15C1918((uint64_t)v186);
    *(void *)(a1 + 840) = v184;
  }
  if (*(void *)(a2 + 840)) {
    unint64_t v187 = *(uint64_t (****)())(a2 + 840);
  }
  else {
    unint64_t v187 = &off_253F1A0;
  }
  sub_15B0E24(v184, (uint64_t)v187);
  if ((v156 & 0x400) == 0)
  {
LABEL_131:
    if ((v156 & 0x800) == 0) {
      goto LABEL_132;
    }
    goto LABEL_156;
  }
LABEL_148:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v188 = *(std::string **)(a1 + 848);
  if (!v188)
  {
    uint64_t v189 = *(void *)(a1 + 8);
    uint64_t v190 = (void *)(v189 & 0xFFFFFFFFFFFFFFFCLL);
    if (v189) {
      uint64_t v190 = (void *)*v190;
    }
    uint64_t v188 = (std::string *)sub_124BDD4((uint64_t)v190);
    *(void *)(a1 + 848) = v188;
  }
  if (*(void *)(a2 + 848)) {
    int v191 = *(void *(****)(void *))(a2 + 848);
  }
  else {
    int v191 = &off_252E9D8;
  }
  sub_123DB18(v188, (uint64_t)v191);
  if ((v156 & 0x800) == 0)
  {
LABEL_132:
    if ((v156 & 0x1000) == 0) {
      goto LABEL_133;
    }
    goto LABEL_164;
  }
LABEL_156:
  *(_DWORD *)(a1 + 16) |= 0x800u;
  unint64_t v192 = *(std::string **)(a1 + 856);
  if (!v192)
  {
    uint64_t v193 = *(void *)(a1 + 8);
    uint64_t v194 = (void *)(v193 & 0xFFFFFFFFFFFFFFFCLL);
    if (v193) {
      uint64_t v194 = (void *)*v194;
    }
    sub_12CCBF0((uint64_t)v194);
    *(void *)(a1 + 856) = v192;
  }
  if (*(void *)(a2 + 856)) {
    uint64_t v195 = *(void *(****)(void *))(a2 + 856);
  }
  else {
    uint64_t v195 = &off_2531308;
  }
  sub_12CB280(v192, (uint64_t)v195);
  if ((v156 & 0x1000) == 0)
  {
LABEL_133:
    if ((v156 & 0x2000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_172;
  }
LABEL_164:
  *(_DWORD *)(a1 + 16) |= 0x1000u;
  uint64_t v196 = *(std::string **)(a1 + 864);
  if (!v196)
  {
    uint64_t v197 = *(void *)(a1 + 8);
    uint64_t v198 = (void *)(v197 & 0xFFFFFFFFFFFFFFFCLL);
    if (v197) {
      uint64_t v198 = (void *)*v198;
    }
    uint64_t v196 = (std::string *)sub_15C221C((uint64_t)v198);
    *(void *)(a1 + 864) = v196;
  }
  if (*(void *)(a2 + 864)) {
    uint64_t v199 = *(uint64_t (****)())(a2 + 864);
  }
  else {
    uint64_t v199 = &off_253F5C0;
  }
  sub_12329D0(v196, (uint64_t)v199);
  if ((v156 & 0x2000) == 0)
  {
LABEL_134:
    if ((v156 & 0x4000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_180;
  }
LABEL_172:
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  uint64_t v200 = *(std::string **)(a1 + 872);
  if (!v200)
  {
    uint64_t v201 = *(void *)(a1 + 8);
    uint64_t v202 = (void *)(v201 & 0xFFFFFFFFFFFFFFFCLL);
    if (v201) {
      uint64_t v202 = (void *)*v202;
    }
    uint64_t v200 = (std::string *)sub_144A82C((uint64_t)v202);
    *(void *)(a1 + 872) = v200;
  }
  if (*(void *)(a2 + 872)) {
    int v203 = *(uint64_t (****)(uint64_t))(a2 + 872);
  }
  else {
    int v203 = &off_2537D60;
  }
  sub_1415C08(v200, (uint64_t)v203);
  if ((v156 & 0x4000) == 0)
  {
LABEL_135:
    if ((v156 & 0x8000) == 0) {
      goto LABEL_196;
    }
    goto LABEL_188;
  }
LABEL_180:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  uint64_t v204 = *(std::string **)(a1 + 880);
  if (!v204)
  {
    uint64_t v205 = *(void *)(a1 + 8);
    uint64_t v206 = (void *)(v205 & 0xFFFFFFFFFFFFFFFCLL);
    if (v205) {
      uint64_t v206 = (void *)*v206;
    }
    sub_124BED8((uint64_t)v206);
    *(void *)(a1 + 880) = v204;
  }
  if (*(void *)(a2 + 880)) {
    uint64_t v207 = *(void *(****)(void *))(a2 + 880);
  }
  else {
    uint64_t v207 = &off_252E9F8;
  }
  sub_123F784(v204, (uint64_t)v207);
  if ((v156 & 0x8000) != 0)
  {
LABEL_188:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    int v208 = *(std::string **)(a1 + 888);
    if (!v208)
    {
      uint64_t v209 = *(void *)(a1 + 8);
      uint64_t v210 = (void *)(v209 & 0xFFFFFFFFFFFFFFFCLL);
      if (v209) {
        uint64_t v210 = (void *)*v210;
      }
      int v208 = (std::string *)sub_1448DC4((uint64_t)v210);
      *(void *)(a1 + 888) = v208;
    }
    if (*(void *)(a2 + 888)) {
      uint64_t v211 = *(uint64_t (****)(uint64_t))(a2 + 888);
    }
    else {
      uint64_t v211 = &off_25373B0;
    }
    sub_13F746C(v208, (uint64_t)v211);
  }
LABEL_196:
  if ((v156 & 0xFF0000) == 0) {
    goto LABEL_207;
  }
  if ((v156 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v214 = *(std::string **)(a1 + 896);
    if (!v214)
    {
      uint64_t v215 = *(void *)(a1 + 8);
      unint64_t v216 = (void *)(v215 & 0xFFFFFFFFFFFFFFFCLL);
      if (v215) {
        unint64_t v216 = (void *)*v216;
      }
      uint64_t v214 = (std::string *)sub_124C02C((uint64_t)v216);
      *(void *)(a1 + 896) = v214;
    }
    if (*(void *)(a2 + 896)) {
      uint64_t v217 = *(void *(****)(void *))(a2 + 896);
    }
    else {
      uint64_t v217 = &off_252EA90;
    }
    sub_1241904(v214, (uint64_t)v217);
    if ((v156 & 0x20000) == 0)
    {
LABEL_199:
      if ((v156 & 0x40000) == 0) {
        goto LABEL_200;
      }
      goto LABEL_277;
    }
  }
  else if ((v156 & 0x20000) == 0)
  {
    goto LABEL_199;
  }
  *(_DWORD *)(a1 + 16) |= 0x20000u;
  uint64_t v218 = *(std::string **)(a1 + 904);
  if (!v218)
  {
    uint64_t v219 = *(void *)(a1 + 8);
    uint64_t v220 = (void *)(v219 & 0xFFFFFFFFFFFFFFFCLL);
    if (v219) {
      uint64_t v220 = (void *)*v220;
    }
    uint64_t v218 = (std::string *)sub_15C1E94((uint64_t)v220);
    *(void *)(a1 + 904) = v218;
  }
  if (*(void *)(a2 + 904)) {
    uint64_t v221 = *(uint64_t (****)())(a2 + 904);
  }
  else {
    uint64_t v221 = &off_253F3D0;
  }
  sub_15B86B8(v218, (uint64_t)v221);
  if ((v156 & 0x40000) == 0)
  {
LABEL_200:
    if ((v156 & 0x80000) == 0) {
      goto LABEL_201;
    }
    goto LABEL_285;
  }
LABEL_277:
  *(_DWORD *)(a1 + 16) |= 0x40000u;
  unint64_t v222 = *(std::string **)(a1 + 912);
  if (!v222)
  {
    uint64_t v223 = *(void *)(a1 + 8);
    uint64_t v224 = (void *)(v223 & 0xFFFFFFFFFFFFFFFCLL);
    if (v223) {
      uint64_t v224 = (void *)*v224;
    }
    unint64_t v222 = (std::string *)sub_124BDD4((uint64_t)v224);
    *(void *)(a1 + 912) = v222;
  }
  if (*(void *)(a2 + 912)) {
    unint64_t v225 = *(void *(****)(void *))(a2 + 912);
  }
  else {
    unint64_t v225 = &off_252E9D8;
  }
  sub_123DB18(v222, (uint64_t)v225);
  if ((v156 & 0x80000) == 0)
  {
LABEL_201:
    if ((v156 & 0x100000) == 0) {
      goto LABEL_202;
    }
    goto LABEL_293;
  }
LABEL_285:
  *(_DWORD *)(a1 + 16) |= 0x80000u;
  uint64_t v226 = *(std::string **)(a1 + 920);
  if (!v226)
  {
    uint64_t v227 = *(void *)(a1 + 8);
    unint64_t v228 = (void *)(v227 & 0xFFFFFFFFFFFFFFFCLL);
    if (v227) {
      unint64_t v228 = (void *)*v228;
    }
    uint64_t v226 = (std::string *)sub_1448DC4((uint64_t)v228);
    *(void *)(a1 + 920) = v226;
  }
  if (*(void *)(a2 + 920)) {
    uint64_t v229 = *(uint64_t (****)(uint64_t))(a2 + 920);
  }
  else {
    uint64_t v229 = &off_25373B0;
  }
  sub_13F746C(v226, (uint64_t)v229);
  if ((v156 & 0x100000) == 0)
  {
LABEL_202:
    if ((v156 & 0x200000) == 0) {
      goto LABEL_203;
    }
    goto LABEL_301;
  }
LABEL_293:
  *(_DWORD *)(a1 + 16) |= 0x100000u;
  uint64_t v230 = *(std::string **)(a1 + 928);
  if (!v230)
  {
    uint64_t v231 = *(void *)(a1 + 8);
    uint64_t v232 = (void *)(v231 & 0xFFFFFFFFFFFFFFFCLL);
    if (v231) {
      uint64_t v232 = (void *)*v232;
    }
    sub_124BD48((uint64_t)v232);
    *(void *)(a1 + 928) = v230;
  }
  if (*(void *)(a2 + 928)) {
    uint64_t v233 = *(void *(****)(void *))(a2 + 928);
  }
  else {
    uint64_t v233 = &off_252E950;
  }
  sub_123BEA4(v230, (uint64_t)v233);
  if ((v156 & 0x200000) == 0)
  {
LABEL_203:
    if ((v156 & 0x400000) == 0) {
      goto LABEL_204;
    }
LABEL_309:
    *(_DWORD *)(a1 + 16) |= 0x400000u;
    uint64_t v238 = *(std::string **)(a1 + 944);
    if (!v238)
    {
      uint64_t v239 = *(void *)(a1 + 8);
      uint64_t v240 = (void *)(v239 & 0xFFFFFFFFFFFFFFFCLL);
      if (v239) {
        uint64_t v240 = (void *)*v240;
      }
      uint64_t v238 = (std::string *)sub_124BBCC((uint64_t)v240);
      *(void *)(a1 + 944) = v238;
    }
    if (*(void *)(a2 + 944)) {
      unint64_t v241 = *(void *(****)(void *))(a2 + 944);
    }
    else {
      unint64_t v241 = &off_252E928;
    }
    sub_123BFCC(v238, (uint64_t)v241);
    if ((v156 & 0x800000) == 0) {
      goto LABEL_206;
    }
    goto LABEL_205;
  }
LABEL_301:
  *(_DWORD *)(a1 + 16) |= 0x200000u;
  uint64_t v234 = *(void *)(a1 + 936);
  if (!v234)
  {
    uint64_t v235 = *(void *)(a1 + 8);
    uint64_t v236 = (void *)(v235 & 0xFFFFFFFFFFFFFFFCLL);
    if (v235) {
      uint64_t v236 = (void *)*v236;
    }
    sub_1449F3C((uint64_t)v236);
    *(void *)(a1 + 936) = v234;
  }
  if (*(void *)(a2 + 936)) {
    uint64_t v237 = *(uint64_t (****)())(a2 + 936);
  }
  else {
    uint64_t v237 = &off_2537998;
  }
  sub_140D8C8(v234, (uint64_t)v237);
  if ((v156 & 0x400000) != 0) {
    goto LABEL_309;
  }
LABEL_204:
  if ((v156 & 0x800000) != 0) {
LABEL_205:
  }
    *(void *)(a1 + 952) = *(void *)(a2 + 952);
LABEL_206:
  *(_DWORD *)(a1 + 16) |= v156;
LABEL_207:
  if (!HIBYTE(v156)) {
    goto LABEL_217;
  }
  if ((v156 & 0x1000000) != 0)
  {
    *(void *)(a1 + 960) = *(void *)(a2 + 960);
    if ((v156 & 0x2000000) == 0)
    {
LABEL_210:
      if ((v156 & 0x4000000) == 0) {
        goto LABEL_211;
      }
      goto LABEL_348;
    }
  }
  else if ((v156 & 0x2000000) == 0)
  {
    goto LABEL_210;
  }
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  if ((v156 & 0x4000000) == 0)
  {
LABEL_211:
    if ((v156 & 0x8000000) == 0) {
      goto LABEL_212;
    }
    goto LABEL_349;
  }
LABEL_348:
  *(_DWORD *)(a1 + 976) = *(_DWORD *)(a2 + 976);
  if ((v156 & 0x8000000) == 0)
  {
LABEL_212:
    if ((v156 & 0x10000000) == 0) {
      goto LABEL_213;
    }
    goto LABEL_350;
  }
LABEL_349:
  *(unsigned char *)(a1 + 980) = *(unsigned char *)(a2 + 980);
  if ((v156 & 0x10000000) == 0)
  {
LABEL_213:
    if ((v156 & 0x20000000) == 0) {
      goto LABEL_214;
    }
    goto LABEL_351;
  }
LABEL_350:
  *(unsigned char *)(a1 + 981) = *(unsigned char *)(a2 + 981);
  if ((v156 & 0x20000000) == 0)
  {
LABEL_214:
    if ((v156 & 0x40000000) == 0) {
      goto LABEL_215;
    }
LABEL_352:
    *(unsigned char *)(a1 + 983) = *(unsigned char *)(a2 + 983);
    if ((v156 & 0x80000000) == 0) {
      goto LABEL_216;
    }
LABEL_353:
    *(void *)(a1 + 984) = *(void *)(a2 + 984);
    goto LABEL_216;
  }
LABEL_351:
  *(unsigned char *)(a1 + 982) = *(unsigned char *)(a2 + 982);
  if ((v156 & 0x40000000) != 0) {
    goto LABEL_352;
  }
LABEL_215:
  if ((v156 & 0x80000000) != 0) {
    goto LABEL_353;
  }
LABEL_216:
  *(_DWORD *)(a1 + 16) |= v156;
LABEL_217:
  int v212 = *(_DWORD *)(a2 + 20);
  if (!(_BYTE)v212) {
    goto LABEL_228;
  }
  if (v212)
  {
    *(void *)(a1 + 992) = *(void *)(a2 + 992);
    if ((v212 & 2) == 0)
    {
LABEL_220:
      if ((v212 & 4) == 0) {
        goto LABEL_221;
      }
      goto LABEL_320;
    }
  }
  else if ((v212 & 2) == 0)
  {
    goto LABEL_220;
  }
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  if ((v212 & 4) == 0)
  {
LABEL_221:
    if ((v212 & 8) == 0) {
      goto LABEL_222;
    }
    goto LABEL_321;
  }
LABEL_320:
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  if ((v212 & 8) == 0)
  {
LABEL_222:
    if ((v212 & 0x10) == 0) {
      goto LABEL_223;
    }
    goto LABEL_322;
  }
LABEL_321:
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  if ((v212 & 0x10) == 0)
  {
LABEL_223:
    if ((v212 & 0x20) == 0) {
      goto LABEL_224;
    }
    goto LABEL_323;
  }
LABEL_322:
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  if ((v212 & 0x20) == 0)
  {
LABEL_224:
    if ((v212 & 0x40) == 0) {
      goto LABEL_225;
    }
LABEL_324:
    *(unsigned char *)(a1 + 1036) = *(unsigned char *)(a2 + 1036);
    if ((v212 & 0x80) == 0) {
      goto LABEL_227;
    }
    goto LABEL_226;
  }
LABEL_323:
  *(_DWORD *)(a1 + 1032) = *(_DWORD *)(a2 + 1032);
  if ((v212 & 0x40) != 0) {
    goto LABEL_324;
  }
LABEL_225:
  if ((v212 & 0x80) != 0) {
LABEL_226:
  }
    *(unsigned char *)(a1 + 1037) = *(unsigned char *)(a2 + 1037);
LABEL_227:
  *(_DWORD *)(a1 + 20) |= v212;
LABEL_228:
  if ((v212 & 0xFF00) == 0) {
    goto LABEL_239;
  }
  if ((v212 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 1038) = *(unsigned char *)(a2 + 1038);
    if ((v212 & 0x200) == 0)
    {
LABEL_231:
      if ((v212 & 0x400) == 0) {
        goto LABEL_232;
      }
      goto LABEL_328;
    }
  }
  else if ((v212 & 0x200) == 0)
  {
    goto LABEL_231;
  }
  *(unsigned char *)(a1 + 1039) = *(unsigned char *)(a2 + 1039);
  if ((v212 & 0x400) == 0)
  {
LABEL_232:
    if ((v212 & 0x800) == 0) {
      goto LABEL_233;
    }
    goto LABEL_329;
  }
LABEL_328:
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  if ((v212 & 0x800) == 0)
  {
LABEL_233:
    if ((v212 & 0x1000) == 0) {
      goto LABEL_234;
    }
    goto LABEL_330;
  }
LABEL_329:
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  if ((v212 & 0x1000) == 0)
  {
LABEL_234:
    if ((v212 & 0x2000) == 0) {
      goto LABEL_235;
    }
    goto LABEL_331;
  }
LABEL_330:
  *(unsigned char *)(a1 + 1056) = *(unsigned char *)(a2 + 1056);
  if ((v212 & 0x2000) == 0)
  {
LABEL_235:
    if ((v212 & 0x4000) == 0) {
      goto LABEL_236;
    }
LABEL_332:
    *(unsigned char *)(a1 + 1058) = *(unsigned char *)(a2 + 1058);
    if ((v212 & 0x8000) == 0) {
      goto LABEL_238;
    }
    goto LABEL_237;
  }
LABEL_331:
  *(unsigned char *)(a1 + 1057) = *(unsigned char *)(a2 + 1057);
  if ((v212 & 0x4000) != 0) {
    goto LABEL_332;
  }
LABEL_236:
  if ((v212 & 0x8000) != 0) {
LABEL_237:
  }
    *(unsigned char *)(a1 + 1059) = *(unsigned char *)(a2 + 1059);
LABEL_238:
  *(_DWORD *)(a1 + 20) |= v212;
LABEL_239:
  if ((v212 & 0xFF0000) == 0) {
    goto LABEL_250;
  }
  if ((v212 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 1060) = *(unsigned char *)(a2 + 1060);
    if ((v212 & 0x20000) == 0)
    {
LABEL_242:
      if ((v212 & 0x40000) == 0) {
        goto LABEL_243;
      }
      goto LABEL_336;
    }
  }
  else if ((v212 & 0x20000) == 0)
  {
    goto LABEL_242;
  }
  *(unsigned char *)(a1 + 1061) = *(unsigned char *)(a2 + 1061);
  if ((v212 & 0x40000) == 0)
  {
LABEL_243:
    if ((v212 & 0x80000) == 0) {
      goto LABEL_244;
    }
    goto LABEL_337;
  }
LABEL_336:
  *(unsigned char *)(a1 + 1062) = *(unsigned char *)(a2 + 1062);
  if ((v212 & 0x80000) == 0)
  {
LABEL_244:
    if ((v212 & 0x100000) == 0) {
      goto LABEL_245;
    }
    goto LABEL_338;
  }
LABEL_337:
  *(unsigned char *)(a1 + 1063) = *(unsigned char *)(a2 + 1063);
  if ((v212 & 0x100000) == 0)
  {
LABEL_245:
    if ((v212 & 0x200000) == 0) {
      goto LABEL_246;
    }
    goto LABEL_339;
  }
LABEL_338:
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  if ((v212 & 0x200000) == 0)
  {
LABEL_246:
    if ((v212 & 0x400000) == 0) {
      goto LABEL_247;
    }
LABEL_340:
    *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
    if ((v212 & 0x800000) == 0) {
      goto LABEL_249;
    }
    goto LABEL_248;
  }
LABEL_339:
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  if ((v212 & 0x400000) != 0) {
    goto LABEL_340;
  }
LABEL_247:
  if ((v212 & 0x800000) != 0) {
LABEL_248:
  }
    *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
LABEL_249:
  *(_DWORD *)(a1 + 20) |= v212;
LABEL_250:
  if ((v212 & 0xF000000) == 0) {
    goto LABEL_257;
  }
  if ((v212 & 0x1000000) != 0)
  {
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    if ((v212 & 0x2000000) == 0)
    {
LABEL_253:
      if ((v212 & 0x4000000) == 0) {
        goto LABEL_254;
      }
LABEL_344:
      *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
      if ((v212 & 0x8000000) == 0) {
        goto LABEL_256;
      }
      goto LABEL_255;
    }
  }
  else if ((v212 & 0x2000000) == 0)
  {
    goto LABEL_253;
  }
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  if ((v212 & 0x4000000) != 0) {
    goto LABEL_344;
  }
LABEL_254:
  if ((v212 & 0x8000000) != 0) {
LABEL_255:
  }
    *(_DWORD *)(a1 + 1120) = *(_DWORD *)(a2 + 1120);
LABEL_256:
  *(_DWORD *)(a1 + 20) |= v212;
LABEL_257:
  uint64_t v213 = *(void *)(a2 + 8);
  if (v213)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v213 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_124A7D0(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 16) & 0x2800000) != 0) {
    return 0;
  }
  uint64_t result = sub_123C018(a1 + 248);
  if (result)
  {
    uint64_t result = sub_123C0A4(a1 + 296);
    if (result)
    {
      uint64_t v3 = *(unsigned int *)(a1 + 416);
      while ((int)v3 >= 1)
      {
        uint64_t v4 = v3 - 1;
        char v5 = sub_13F6548(*(void *)(*(void *)(a1 + 424) + 8 * v3));
        uint64_t v3 = v4;
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v6 = *(unsigned int *)(a1 + 728);
      while ((int)v6 >= 1)
      {
        uint64_t v7 = v6 - 1;
        char v8 = sub_13F651C(*(void *)(*(void *)(a1 + 736) + 8 * v6));
        uint64_t v6 = v7;
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      int v9 = *(_DWORD *)(a1 + 16);
      if ((v9 & 0x200) != 0)
      {
        uint64_t result = sub_15B0F18(*(void *)(a1 + 840));
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 16);
      }
      if ((v9 & 0x1000) != 0)
      {
        uint64_t result = sub_15BC528(*(void *)(a1 + 864));
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 16);
      }
      if ((v9 & 0x2000) != 0)
      {
        uint64_t result = sub_1416384(*(void *)(a1 + 872));
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 16);
      }
      if ((v9 & 0x20000) != 0)
      {
        uint64_t result = sub_15B8CAC(*(void *)(a1 + 904));
        if (!result) {
          return result;
        }
        int v9 = *(_DWORD *)(a1 + 16);
      }
      if ((v9 & 0x200000) == 0) {
        return 1;
      }
      uint64_t result = sub_140DEA8(*(void *)(a1 + 936));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

void *sub_124A8D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.MiniBusinessCard");
}

void *sub_124A8E4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_124A958(void *a1)
{
  sub_124A8E4(a1);

  operator delete();
}

uint64_t sub_124A990(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_124A9B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_12;
    }
    v5 |= 2u;
    int v14 = v7 + 1;
    uint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v16 = *v14;
    uint64_t v15 = v15 + (v16 << 7) - 128;
    if ((v16 & 0x80000000) == 0)
    {
      int v14 = v7 + 2;
LABEL_24:
      uint64_t v20 = v14;
      *(void *)(a1 + 32) = v15;
      goto LABEL_26;
    }
    uint64_t v17 = (char *)sub_188C138((uint64_t)v7, v15);
    uint64_t v20 = v17;
    *(void *)(a1 + 32) = v18;
    if (!v17) {
      goto LABEL_34;
    }
LABEL_26:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_33;
    }
  }
  if (v8 >> 3 == 1 && v8 == 9)
  {
    v5 |= 1u;
    *(void *)(a1 + 24) = *(void *)v7;
    uint64_t v20 = v7 + 8;
    goto LABEL_26;
  }
LABEL_12:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    uint64_t v20 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v20) {
      goto LABEL_34;
    }
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_33;
  }
LABEL_34:
  uint64_t v20 = 0;
LABEL_33:
  *(_DWORD *)(a1 + 16) |= v5;
  return v20;
}

_OWORD *sub_124AB64(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 16;
    *((unsigned char *)v4 + 1) = v8;
    if (v8 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      *((unsigned char *)v4 + 2) = v8 >> 7;
      uint64_t v4 = (_OWORD *)((char *)v4 + 3);
      if (v8 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *(unsigned char *)uint64_t v4 = v9;
          uint64_t v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v10);
      }
    }
    else
    {
      uint64_t v4 = (_OWORD *)((char *)v4 + 2);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_124ACC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_124AD40(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_124AD8C()
{
  return 1;
}

void *sub_124AD94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.StreamedPopularity");
}

void *sub_124ADA4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_124E7CC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_124AE24(void *a1)
{
  sub_124ADA4(a1);

  operator delete();
}

unsigned char *sub_124AE5C(unsigned char *result)
{
  int v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13F677C(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_124AED8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        BOOL v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1448D44(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          BOOL v12 = sub_124B078(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_124B078(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13F67E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_124B108(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_13F6B00(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_124B24C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13F6D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_124B2FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_124F47C((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_124B3CC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_13F6EB4(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_124B424@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.EntryPointWrapper");
}

void *sub_124B434(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_124E84C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_124B4B4(void *a1)
{
  sub_124B434(a1);

  operator delete();
}

unsigned char *sub_124B4EC(unsigned char *result)
{
  int v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    int v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_14139C0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  char v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_124B568(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        BOOL v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_144A4D4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          BOOL v12 = sub_124B708(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_124B708(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1413A20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_124B798(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_1413C04(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_124B8DC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1413D9C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_124B98C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_124F4F8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_124BA5C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1413F2C(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_124BAB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "ag_glov.proto.AccessPointWrapper");
}

void *sub_124BAC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249F508;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  return result;
}

void *sub_124BB48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249F588;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

void *sub_124BBCC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249F608;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_124BC48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = &off_249F688;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

void *sub_124BCC4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249F708;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = 0;
  return result;
}

double sub_124BD48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = &off_249F788;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(void *)(v2 + 128) = 0;
  return result;
}

void *sub_124BDD4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_249F808;
  result[2] = 0;
  result[3] = 0;
  return result;
}

void *sub_124BE4C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = &off_249F888;
  result[2] = 0;
  result[3] = &qword_2550250;
  result[4] = &qword_2550250;
  result[6] = 0;
  result[7] = 0;
  result[5] = 0;
  return result;
}

double sub_124BED8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t v2 = &off_249F908;
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = a1;
  double result = 0.0;
  *(void *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = 0;
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = 0;
  *(void *)(v2 + 80) = a1;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  return result;
}

uint64_t sub_124BFAC(uint64_t a1)
{
  if (!a1)
  {
    sub_124F584();
  }
  *(void *)uint64_t result = &off_249F988;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = &qword_2550250;
  *(void *)(result + 32) = &qword_2550250;
  *(void *)(result + 40) = &qword_2550250;
  *(void *)(result + 48) = &qword_2550250;
  *(void *)(result + 56) = &qword_2550250;
  *(void *)(result + 64) = &qword_2550250;
  *(void *)(result + 72) = 0;
  *(_DWORD *)(result + 80) = 0;
  return result;
}

uint64_t sub_124C02C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249FA08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = a1;
  *(void *)(result + 72) = 0;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = a1;
  *(void *)(result + 96) = 0;
  *(void *)(result + 104) = 0;
  *(void *)(result + 112) = a1;
  *(void *)(result + 120) = 0;
  *(void *)(result + 128) = 0;
  *(void *)(result + 136) = a1;
  *(void *)(result + 144) = 0;
  *(void *)(result + 152) = 0;
  *(void *)(result + 168) = 0;
  *(void *)(result + 176) = 0;
  *(void *)(result + 160) = a1;
  *(_DWORD *)(result + 184) = 0;
  return result;
}

double sub_124C100(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  return sub_1241C44(v2, a1, 0);
}

void *sub_124C160(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = &off_249FB08;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_124C1DC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249FB88;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_124C27C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = &off_249FC08;
  *(void *)(result + 8) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_124C31C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16553C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_124C3AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1653D60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_124C43C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1662234(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_124C4CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1663784(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_124C55C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_165156C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_124C5EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1652000(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_124C67C()
{
}

uint64_t sub_124C6CC(uint64_t a1, uint64_t a2)
{
  return sub_1230640(a2);
}

uint64_t sub_124C6D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C6DC()
{
}

void *sub_124C730(uint64_t a1, uint64_t a2)
{
  return sub_12306BC(a2);
}

uint64_t sub_124C738(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C740()
{
}

uint64_t sub_124C7A4(uint64_t a1, uint64_t a2)
{
  return sub_123239C(a2);
}

uint64_t sub_124C7AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C7B4()
{
}

uint64_t sub_124C814(uint64_t a1, uint64_t a2)
{
  return sub_1232448(a2);
}

uint64_t sub_124C81C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C824()
{
}

uint64_t sub_124C884(uint64_t a1, uint64_t a2)
{
  return sub_12324D4(a2);
}

uint64_t sub_124C88C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C894()
{
}

void *sub_124C8EC(uint64_t a1, uint64_t a2)
{
  return sub_1233174(a2);
}

uint64_t sub_124C8F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C8FC()
{
}

void *sub_124C954(uint64_t a1, uint64_t a2)
{
  return sub_12331F8(a2);
}

uint64_t sub_124C95C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C964()
{
}

void *sub_124C9BC(uint64_t a1, uint64_t a2)
{
  return sub_124BAC4(a2);
}

uint64_t sub_124C9C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124C9CC()
{
}

void *sub_124CA24(uint64_t a1, uint64_t a2)
{
  return sub_124BB48(a2);
}

uint64_t sub_124CA2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CA34()
{
}

void *sub_124CA84(uint64_t a1, uint64_t a2)
{
  return sub_124BBCC(a2);
}

uint64_t sub_124CA8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CA94()
{
}

uint64_t sub_124CAE4(uint64_t a1, uint64_t a2)
{
  return sub_124BC48(a2);
}

uint64_t sub_124CAEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CAF4()
{
}

void *sub_124CB4C(uint64_t a1, uint64_t a2)
{
  return sub_124BCC4(a2);
}

uint64_t sub_124CB54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CB5C()
{
}

double sub_124CBBC(uint64_t a1, uint64_t a2)
{
  return sub_124BD48(a2);
}

uint64_t sub_124CBC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CBCC()
{
}

void *sub_124CC18(uint64_t a1, uint64_t a2)
{
  return sub_124BDD4(a2);
}

uint64_t sub_124CC20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CC28()
{
}

void *sub_124CC88(uint64_t a1, uint64_t a2)
{
  return sub_124BE4C(a2);
}

uint64_t sub_124CC90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CC98()
{
}

double sub_124CCF8(uint64_t a1, uint64_t a2)
{
  return sub_124BED8(a2);
}

uint64_t sub_124CD00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CD08()
{
}

uint64_t sub_124CD70(uint64_t a1, uint64_t a2)
{
  return sub_124BFAC(a2);
}

uint64_t sub_124CD78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CD80()
{
}

uint64_t sub_124CDE4(uint64_t a1, uint64_t a2)
{
  return sub_124C02C(a2);
}

uint64_t sub_124CDEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 184);
}

void sub_124CDF4()
{
}

double sub_124CE38(uint64_t a1, uint64_t a2)
{
  return sub_124C100(a2);
}

uint64_t sub_124CE40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_124CE48()
{
}

void *sub_124CE98(uint64_t a1, uint64_t a2)
{
  return sub_124C160(a2);
}

uint64_t sub_124CEA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124CEA8()
{
}

uint64_t sub_124CEFC(uint64_t a1, uint64_t a2)
{
  return sub_124C1DC(a2);
}

uint64_t sub_124CF04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_124CF0C()
{
}

uint64_t sub_124CF60(uint64_t a1, uint64_t a2)
{
  return sub_124C27C(a2);
}

uint64_t sub_124CF68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_124CF70()
{
}

uint64_t sub_124CFC4(uint64_t a1, uint64_t a2)
{
  return sub_1238B74(a2);
}

uint64_t sub_124CFCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_124CFD4()
{
}

uint64_t sub_124D030(uint64_t a1, uint64_t a2)
{
  return sub_1238C14(a2);
}

uint64_t sub_124D038(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D040()
{
}

double sub_124D090(uint64_t a1, uint64_t a2)
{
  return sub_1238C9C(a2);
}

uint64_t sub_124D098(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D0A0()
{
}

double sub_124D110(uint64_t a1, uint64_t a2)
{
  return sub_1238D18(a2);
}

uint64_t sub_124D118(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D120()
{
}

void *sub_124D170(uint64_t a1, uint64_t a2)
{
  return sub_1238DD8(a2);
}

uint64_t sub_124D178(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D180()
{
}

uint64_t sub_124D1E4(uint64_t a1, uint64_t a2)
{
  return sub_1238E54(a2);
}

uint64_t sub_124D1EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D1F4()
{
}

uint64_t sub_124D248(uint64_t a1, uint64_t a2)
{
  return sub_1238F00(a2);
}

uint64_t sub_124D250(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D258()
{
}

double sub_124D2BC(uint64_t a1, uint64_t a2)
{
  return sub_1238F9C(a2);
}

uint64_t sub_124D2C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D2CC()
{
}

double sub_124D320(uint64_t a1, uint64_t a2)
{
  return sub_123904C(a2);
}

uint64_t sub_124D328(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D330()
{
}

void *sub_124D38C(uint64_t a1, uint64_t a2)
{
  return sub_123A0B0(a2);
}

uint64_t sub_124D394(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D39C()
{
}

void *sub_124D3F0(uint64_t a1, uint64_t a2)
{
  return sub_123A154(a2);
}

uint64_t sub_124D3F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_124D400(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1525B3C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124D480(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_152D560(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124D4FC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124D4FC(uint64_t a1, uint64_t a2)
{
}

void sub_124D50C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14A052C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124D58C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1231144(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_124D60C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_14A24DC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DB12C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_124D688(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1232448(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124D704(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124D704(uint64_t a1, std::string *a2)
{
  return sub_1231940(a2, a1);
}

void sub_124D714(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_140C74C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_124D794(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1449EB4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_124D810(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124D810(uint64_t a1, std::string *a2)
{
  return sub_1263010(a2, a1);
}

void sub_124D820(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12338BC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124D8A0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12372FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124D920(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1236778(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124D9A0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1236110(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_124DA20(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1238C14(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124DA9C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124DA9C(uint64_t a1, std::string *a2)
{
  return sub_1234190(a2, a1);
}

uint64_t *sub_124DAAC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1238F00(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124DB28(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124DB28(uint64_t a1, std::string *a2)
{
  return sub_1237894(a2, a1);
}

uint64_t *sub_124DB38(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1238E54(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124DBB4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124DBB4(uint64_t a1, std::string *a2)
{
  return sub_1237144(a2, a1);
}

std::string *sub_124DBC4(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1238DD8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_124DC40(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124DC40(uint64_t a1, std::string *a2)
{
  return sub_1236690(a2, a1);
}

void sub_124DC50(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12390CC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_124DCD0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_123A0B0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122E2C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_124DD4C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_14532A8();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124DDCC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12D0D94(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124DE4C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1412984(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124DECC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_173FA40(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124DF4C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_124ADA4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124DFCC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_124B434(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E04C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1411A64();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E0CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15A2A9C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E14C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1442544();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E1CC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_123A1F0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E24C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_123A6E4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E2CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_123C4DC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E34C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_123C958(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E3CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F6F8C();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E44C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1430C74();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E4CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1448690(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E54C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1414134();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E5CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_157C7AC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E64C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_123F9BC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E6CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12CE1EC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E74C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_123DB68(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E7CC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_13F6740();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124E84C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    int v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1413984();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_124E8CC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_14785D4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124E948(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124E948(uint64_t a1, std::string *a2)
{
  return sub_14539D0(a2, a1);
}

std::string *sub_124E958(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12D2834(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_124E9D4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124E9D4(uint64_t a1, std::string *a2)
{
  return sub_12D1AFC(a2, a1);
}

uint64_t *sub_124E9E4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_144A420(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124EA60(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124EA60(uint64_t a1, std::string *a2)
{
  return sub_14135A0(a2, a1);
}

void sub_124EA70(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178B458(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124EAEC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124EAEC(uint64_t a1, uint64_t a2)
{
}

void sub_124EAFC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_124C1DC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124EB78(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124EB78(uint64_t a1, uint64_t a2)
{
}

void sub_124EB88(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_124C27C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124EC04(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124EC04(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_124EC14(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_144A378(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124EC90(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124EC90(uint64_t a1, std::string *a2)
{
  return sub_1412358(a2, a1);
}

void sub_124ECA0(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unint64_t v10 = &a2[a5];
    do
    {
      sub_15A3DBC(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      int v14 = *v7++;
      sub_124ED1C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_124ED1C(uint64_t a1, std::string *a2)
{
  return sub_15A36E0(a2, a1);
}

void sub_124ED2C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    unint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_144CB80(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124EDA8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124EDA8(uint64_t a1, uint64_t a2)
{
}

std::string *sub_124EDB8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_124BAC4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124EE34(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_124BB48(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_124EEB0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124EEB0(uint64_t a1, std::string *a2)
{
  return sub_123ACE0(a2, a1);
}

uint64_t *sub_124EEC0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_124BC48(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DC268(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124EF3C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_124BCC4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122BC84(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124EFB8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1448DC4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_124F034(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F034(uint64_t a1, std::string *a2)
{
  return sub_13F746C(a2, a1);
}

uint64_t *sub_124F044(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_144BD58(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124F0C0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F0C0(uint64_t a1, std::string *a2)
{
  return sub_13F51DC(a2, a1);
}

uint64_t *sub_124F0D0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    unint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_144CE80(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_124F14C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F14C(uint64_t a1, std::string *a2)
{
  return sub_1448CB8(a2, a1);
}

std::string *sub_124F15C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  int v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    unint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_144A550(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC1DC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

__n128 sub_124F1D8(void *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)a2 = v2;
  *(void *)(a2 + 8) = v3;
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  uint64_t v6 = a1[4];
  uint64_t v7 = a1[5];
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *(void *)(a2 + 32) = v6;
  *(void *)(a2 + 40) = v7;
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v9;
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  *(void *)(a2 + 64) = v10;
  *(void *)(a2 + 72) = v11;
  uint64_t v12 = a1[10];
  uint64_t v13 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  *(void *)(a2 + 80) = v12;
  *(void *)(a2 + 88) = v13;
  uint64_t v14 = a1[12];
  uint64_t v15 = a1[13];
  __n128 result = *(__n128 *)(a2 + 96);
  *((__n128 *)a1 + 6) = result;
  *(void *)(a2 + 96) = v14;
  *(void *)(a2 + 104) = v15;
  uint64_t v17 = a1[14];
  a1[14] = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v17;
  return result;
}

uint64_t *sub_124F25C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1585058(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_124F2D8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F2D8(uint64_t a1, std::string *a2)
{
  return sub_157CF44(a2, a1);
}

uint64_t *sub_124F2E8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_124BFAC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_124F364(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F364(uint64_t a1, std::string *a2)
{
  return sub_124059C(a2, a1);
}

uint64_t *sub_124F374(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_12D09A8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_122B578(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F3F0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_124BE4C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_124F46C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F46C(uint64_t a1, std::string *a2)
{
  return sub_123E390(a2, a1);
}

void sub_124F47C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1448D44(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_11DC754(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124F4F8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_144A4D4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124F574(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124F574(uint64_t a1, uint64_t a2)
{
}

void sub_124F584()
{
}

void sub_124F5EC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1655248(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124F66C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1653C44(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124F6EC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16621CC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124F76C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16636CC();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124F7EC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1662AB8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124F868(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124F868(uint64_t a1, uint64_t a2)
{
}

void sub_124F878(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1662994(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_124F8F4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_124F8F4(uint64_t a1, std::string *a2)
{
  return sub_1654774(a2, a1);
}

uint64_t *sub_124F904(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      __n128 result = (uint64_t *)sub_1663050(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = (uint64_t *)sub_124F980(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_124F980(uint64_t a1, std::string *a2)
{
  return sub_1662908(a2, a1);
}

std::string *sub_124F990(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      __n128 result = (std::string *)sub_16640A4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      __n128 result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_124FA0C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16512E4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124FA8C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1651FC4();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_124FB0C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_16539C0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_124FB88(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_124FB88(uint64_t a1, uint64_t a2)
{
}

void sub_124FB98(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1653A3C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_124FC14(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_124FC14(uint64_t a1, uint64_t a2)
{
}

void sub_124FC24()
{
  dword_254EC78 = 1000;
  qword_254EC80 = 0;
  sub_1882224((unint64_t)&off_25332F0, 1000, 4, 0, 0);
  dword_254EC88 = 199;
  qword_254EC90 = (uint64_t)&off_252E700;
  sub_1882AC4((unint64_t)&off_2532BC8, 199, 11, 0, 0, (uint64_t)&off_252E700);
  dword_254EC98 = 100;
  qword_254ECA0 = (uint64_t)&off_252E728;
  sub_1882AC4((unint64_t)&off_2532768, 100, 11, 0, 0, (uint64_t)&off_252E728);
  dword_254ECA8 = 101;
  qword_254ECB0 = (uint64_t)&off_252E7C0;
  sub_1882AC4((unint64_t)&off_2532768, 101, 11, 0, 0, (uint64_t)&off_252E7C0);
  dword_254ECB8 = 102;
  qword_254ECC0 = (uint64_t)&off_252E728;
  sub_1882AC4((unint64_t)&off_2532768, 102, 11, 0, 0, (uint64_t)&off_252E728);
  dword_254ECC8 = 600;
  qword_254ECD0 = (uint64_t)&off_2532BC8;
  sub_1882AC4((unint64_t)&off_25393B0, 600, 11, 0, 0, (uint64_t)&off_2532BC8);
  dword_254ECD8 = 10010;
  qword_254ECE0 = (uint64_t)&off_253F558;
  sub_1882AC4((unint64_t)&off_2532BC8, 10010, 11, 1, 0, (uint64_t)&off_253F558);
  dword_254ECE8 = 10011;
  qword_254ECF0 = (uint64_t)&off_252E870;
  sub_1882AC4((unint64_t)&off_2532BC8, 10011, 11, 0, 0, (uint64_t)&off_252E870);
  dword_254ECF8 = 10012;
  qword_254ED00 = 0;
  sub_1882224((unint64_t)&off_2532BC8, 10012, 4, 0, 0);
  dword_254ED08 = 10013;
  qword_254ED10 = (uint64_t)&unk_213B0B8;
  sub_1882224((unint64_t)&off_2532BC8, 10013, 12, 0, 0);
  dword_254ED18 = 10014;
  qword_254ED20 = (uint64_t)&unk_213B0D0;
  sub_1882224((unint64_t)&off_2532BC8, 10014, 9, 0, 0);
  dword_254ED28 = 10015;
  byte_254ED2C = 0;
  sub_1882224((unint64_t)&off_2532BC8, 10015, 8, 0, 0);
  dword_254ED30 = 10016;
  qword_254ED38 = (uint64_t)&unk_213B0E8;
  sub_1882224((unint64_t)&off_2532BC8, 10016, 9, 0, 0);
  dword_254ED40 = 10017;
  qword_254ED48 = (uint64_t)&off_252E8C8;
  sub_1882AC4((unint64_t)&off_2532BC8, 10017, 11, 0, 0, (uint64_t)&off_252E8C8);
  dword_254ED50 = 10018;
  byte_254ED54 = 0;
  sub_1882224((unint64_t)&off_2532BC8, 10018, 8, 0, 0);
  qword_254ED58 = 10019;
  sub_1882224((unint64_t)&off_2532BC8, 10019, 13, 0, 0);
  qword_254ED60 = 10020;
  sub_1882224((unint64_t)&off_2532BC8, 10020, 13, 0, 0);
  dword_254ED68 = 10021;
  byte_254ED6C = 0;
  sub_1882224((unint64_t)&off_2532BC8, 10021, 8, 0, 0);
  dword_254ED70 = 10022;
  qword_254ED78 = (uint64_t)&off_253C5F0;
  sub_1882AC4((unint64_t)&off_2532BC8, 10022, 11, 0, 0, (uint64_t)&off_253C5F0);
  qword_254ED80 = 10023;
  sub_1882224((unint64_t)&off_2532BC8, 10023, 13, 0, 0);
  dword_254ED88 = 501;
  qword_254ED90 = (uint64_t)&off_253C5F0;
  sub_1882AC4((unint64_t)&off_2539B90, 501, 11, 0, 0, (uint64_t)&off_253C5F0);
  dword_254ED98 = 10000;
  qword_254EDA0 = 0;
  sub_1882224((unint64_t)&off_25329F0, 10000, 4, 0, 0);
  dword_254EDA8 = 10000;
  qword_254EDB0 = (uint64_t)&unk_213B100;
  sub_1882224((unint64_t)&off_2532A50, 10000, 9, 0, 0);
  qword_254EDB8 = 10001;
  sub_1882224((unint64_t)&off_2532A50, 10001, 5, 0, 0);
  dword_254EDC0 = 10002;
  qword_254EDC8 = (uint64_t)&unk_213B118;
  sub_1882224((unint64_t)&off_2532A50, 10002, 9, 0, 0);
  dword_254EDD0 = 10003;
  qword_254EDD8 = (uint64_t)&unk_213B130;
  sub_1882224((unint64_t)&off_2532A50, 10003, 9, 0, 0);
  qword_254EDE0 = 10004;
  sub_18829C0((unint64_t)&off_2532A50, 10004, 14, 0, 0, (uint64_t)sub_140D4BC);
  dword_254EDE8 = 10005;
  qword_254EDF0 = (uint64_t)&unk_213B148;
  sub_1882224((unint64_t)&off_2532A50, 10005, 9, 0, 0);
  dword_254EDF8 = 10006;
  qword_254EE00 = (uint64_t)&unk_213B160;
  sub_1882224((unint64_t)&off_2532A50, 10006, 9, 0, 0);
  dword_254EE08 = 10007;
  qword_254EE10 = (uint64_t)&unk_213B178;
  sub_1882224((unint64_t)&off_2532A50, 10007, 9, 0, 0);
  qword_254EE18 = 10000;
  sub_1882224((unint64_t)&off_2532AB0, 10000, 5, 0, 0);
  dword_254EE20 = 10001;
  qword_254EE28 = (uint64_t)&unk_213B190;
  sub_1882224((unint64_t)&off_2532AB0, 10001, 9, 0, 0);
  dword_254EE30 = 10002;
  qword_254EE38 = (uint64_t)&unk_213B1A8;
  sub_1882224((unint64_t)&off_2532AB0, 10002, 9, 0, 0);
  dword_254EE40 = 1000;
  qword_254EE48 = (uint64_t)&unk_213B1C0;
  sub_1882224((unint64_t)&off_254B970, 1000, 9, 1, 0);
  dword_254EE50 = 1001;
  qword_254EE58 = (uint64_t)&unk_213B1D8;
  sub_1882224((unint64_t)&off_254B970, 1001, 9, 0, 0);
  dword_254EE60 = 1002;
  qword_254EE68 = (uint64_t)&unk_213B1F0;
  sub_1882224((unint64_t)&off_254B970, 1002, 9, 0, 0);
  dword_254EE70 = 1003;
  qword_254EE78 = (uint64_t)&unk_213B208;
  sub_1882224((unint64_t)&off_254B970, 1003, 9, 0, 0);
  dword_254EE80 = 1004;
  qword_254EE88 = (uint64_t)&unk_213B220;
  sub_1882224((unint64_t)&off_254B970, 1004, 9, 0, 0);
  dword_254EE90 = 1005;
  qword_254EE98 = (uint64_t)&unk_213B238;
  sub_1882224((unint64_t)&off_254B970, 1005, 9, 0, 0);
  dword_254EEA0 = 1006;
  qword_254EEA8 = (uint64_t)&unk_213B250;
  sub_1882224((unint64_t)&off_254B970, 1006, 9, 0, 0);
  dword_254EEB0 = 1007;
  qword_254EEB8 = (uint64_t)&unk_213B268;
  sub_1882224((unint64_t)&off_254B970, 1007, 9, 0, 0);
  dword_254EEC0 = 1008;
  qword_254EEC8 = (uint64_t)&unk_213B280;
  sub_1882224((unint64_t)&off_254B970, 1008, 9, 0, 0);
  dword_254EED0 = 1009;
  qword_254EED8 = (uint64_t)&unk_213B298;
  sub_1882224((unint64_t)&off_254B970, 1009, 9, 0, 0);
  dword_254EEE0 = 1000;
  qword_254EEE8 = (uint64_t)&unk_213B2B0;
  sub_1882224((unint64_t)&off_254BDC0, 1000, 9, 1, 0);
  dword_254EEF0 = 1000;
  qword_254EEF8 = (uint64_t)&off_253F1A0;
  sub_1882AC4((unint64_t)&off_2538BB0, 1000, 11, 0, 0, (uint64_t)&off_253F1A0);
  dword_254EF00 = 1001;
  qword_254EF08 = 0;
  sub_1882224((unint64_t)&off_2538BB0, 1001, 1, 0, 0);
  dword_254EF10 = 1000;
  qword_254EF18 = (uint64_t)&unk_213B2C8;
  sub_1882224((unint64_t)&off_25386C0, 1000, 9, 1, 0);
  dword_254EF20 = 1001;
  qword_254EF28 = (uint64_t)&unk_213B2E0;

  sub_1882224((unint64_t)&off_25386C0, 1001, 9, 0, 0);
}

uint64_t sub_12505CC()
{
  qword_2600468 = (uint64_t)"L1OTHERQSSUNK";
  unk_2600470 = 2;
  dword_2600478 = 2;
  qword_2600480 = (uint64_t)"OTHERQSSUNK";
  unk_2600488 = 5;
  dword_2600490 = 3;
  qword_2600498 = (uint64_t)"QSSUNK";
  unk_26004A0 = 3;
  dword_26004A8 = 1;
  qword_26004B0 = (uint64_t)"UNK";
  unk_26004B8 = 3;
  dword_26004C0 = 0;
  qword_26004C8 = (uint64_t)"ABOVE_STREETCOUNTRYINTERSECTIONPOSTALSTREET_AND_ADDRESSUNKNOWN";
  unk_26004D0 = 12;
  dword_26004D8 = 2;
  qword_26004E0 = (uint64_t)"COUNTRYINTERSECTIONPOSTALSTREET_AND_ADDRESSUNKNOWN";
  unk_26004E8 = 7;
  dword_26004F0 = 1;
  qword_26004F8 = (uint64_t)"INTERSECTIONPOSTALSTREET_AND_ADDRESSUNKNOWN";
  unk_2600500 = 12;
  dword_2600508 = 4;
  qword_2600510 = (uint64_t)"POSTALSTREET_AND_ADDRESSUNKNOWN";
  unk_2600518 = 6;
  dword_2600520 = 5;
  qword_2600528 = (uint64_t)"STREET_AND_ADDRESSUNKNOWN";
  unk_2600530 = 18;
  dword_2600538 = 3;
  qword_2600540 = (uint64_t)"UNKNOWN";
  unk_2600548 = 7;
  dword_2600550 = 0;
  qword_2600558 = (uint64_t)"BROOKLYN_ENTITY_TYPE_COLLECTIONBROOKLYN_ENTITY_TYPE_GEO_IDBROOKLYN_ENTITY_TYPE_MODULE_LIST_ID"
                           "BROOKLYN_ENTITY_TYPE_PUBLISHERBROOKLYN_ENTITY_TYPE_UNKNOWN";
  unk_2600560 = 31;
  dword_2600568 = 1;
  qword_2600570 = (uint64_t)"BROOKLYN_ENTITY_TYPE_GEO_IDBROOKLYN_ENTITY_TYPE_MODULE_LIST_IDBROOKLYN_ENTITY_TYPE_PUBLISHERBROOKLYN_ENTITY_TYPE_UNKNOWN";
  unk_2600578 = 27;
  dword_2600580 = 3;
  qword_2600588 = (uint64_t)"BROOKLYN_ENTITY_TYPE_MODULE_LIST_IDBROOKLYN_ENTITY_TYPE_PUBLISHERBROOKLYN_ENTITY_TYPE_UNKNOWN";
  unk_2600590 = 35;
  dword_2600598 = 4;
  qword_26005A0 = (uint64_t)"BROOKLYN_ENTITY_TYPE_PUBLISHERBROOKLYN_ENTITY_TYPE_UNKNOWN";
  unk_26005A8 = 30;
  dword_26005B0 = 2;
  qword_26005B8 = (uint64_t)"BROOKLYN_ENTITY_TYPE_UNKNOWN";
  unk_26005C0 = 28;
  dword_26005C8 = 0;
  dword_26005E0 = 163;
  qword_26005E8 = (uint64_t)"POI_ADULT_STOREPOI_AIRLINEPOI_AIRPORTPOI_AMUSEMENT_PARKPOI_APPLE_INCPOI_APPLE_STOREPOI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26005F8 = 164;
  qword_2600600 = (uint64_t)"POI_AIRLINEPOI_AIRPORTPOI_AMUSEMENT_PARKPOI_APPLE_INCPOI_APPLE_STOREPOI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600610 = 179;
  qword_2600618 = (uint64_t)"POI_AIRPORTPOI_AMUSEMENT_PARKPOI_APPLE_INCPOI_APPLE_STOREPOI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600630 = (uint64_t)"POI_AMUSEMENT_PARKPOI_APPLE_INCPOI_APPLE_STOREPOI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600648 = (uint64_t)"POI_APPLE_INCPOI_APPLE_STOREPOI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600658 = 138;
  qword_2600660 = (uint64_t)"POI_APPLE_STOREPOI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600670 = 131;
  qword_2600678 = (uint64_t)"POI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600688 = 132;
  qword_2600690 = (uint64_t)"POI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26006A0 = 100;
  qword_26006A8 = (uint64_t)"POI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26006B8 = 133;
  qword_26006C0 = (uint64_t)"POI_AUTOMOTIVE_REPAIR_SERVICESPOI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26006D0 = 101;
  qword_26006D8 = (uint64_t)"POI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26006E8 = 102;
  qword_26006F0 = (uint64_t)"POI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600700 = 134;
  qword_2600708 = (uint64_t)"POI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600718 = 103;
  qword_2600720 = (uint64_t)"POI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600730 = 135;
  qword_2600738 = (uint64_t)"POI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600748 = 104;
  qword_2600750 = (uint64_t)"POI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600760 = 216;
  qword_2600768 = (uint64_t)"POI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600778 = 217;
  qword_2600780 = (uint64_t)"POI_CAFEPOI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600798 = (uint64_t)"POI_CAMPGROUNDPOI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26007A8 = 136;
  qword_26007B0 = (uint64_t)"POI_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26007C0 = 165;
  qword_26007C8 = (uint64_t)"POI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26007D8 = 130;
  qword_26007E0 = (uint64_t)"POI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26007F0 = 137;
  qword_26007F8 = (uint64_t)"POI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600808 = 105;
  qword_2600810 = (uint64_t)"POI_CASTLEPOI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600820 = 106;
  qword_2600828 = (uint64_t)"POI_CEMETERYPOI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600838 = 107;
  qword_2600840 = (uint64_t)"POI_COMMERCIALPOI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600850 = 171;
  qword_2600858 = (uint64_t)"POI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600868 = 172;
  qword_2600870 = (uint64_t)"POI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600880 = 108;
  qword_2600888 = (uint64_t)"POI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600898 = 210;
  qword_26008A0 = (uint64_t)"POI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26008B0 = 109;
  qword_26008B8 = (uint64_t)"POI_COURTHOUSEPOI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26008C8 = 110;
  qword_26008D0 = (uint64_t)"POI_DENTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26008E0 = 139;
  qword_26008E8 = (uint64_t)"POI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26008F8 = 140;
  qword_2600900 = (uint64_t)"POI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600910 = 169;
  qword_2600918 = (uint64_t)"POI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600928 = 213;
  qword_2600930 = (uint64_t)"POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600940 = 214;
  qword_2600948 = (uint64_t)"POI_EDUCATIONAL_TIER3POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600958 = 215;
  qword_2600960 = (uint64_t)"POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600970 = 141;
  qword_2600978 = (uint64_t)"POI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600988 = 174;
  qword_2600990 = (uint64_t)"POI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26009A0 = 209;
  qword_26009A8 = (uint64_t)"POI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26009B8 = 142;
  qword_26009C0 = (uint64_t)"POI_FERRY_STATIONPOI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26009D0 = 184;
  qword_26009D8 = (uint64_t)"POI_FIRE_STATIONPOI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26009E8 = 111;
  qword_26009F0 = (uint64_t)"POI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600A00 = 143;
  qword_2600A08 = (uint64_t)"POI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600A18 = 144;
  qword_2600A20 = (uint64_t)"POI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600A30 = 145;
  qword_2600A38 = (uint64_t)"POI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600A48 = 146;
  qword_2600A50 = (uint64_t)"POI_FORTRESSPOI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600A60 = 147;
  qword_2600A68 = (uint64_t)"POI_FUNERAL_SERVICEPOI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600A78 = 166;
  qword_2600A80 = (uint64_t)"POI_GAS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600A90 = 112;
  qword_2600A98 = (uint64_t)"POI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600AB0 = (uint64_t)"POI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600AC0 = 113;
  qword_2600AC8 = (uint64_t)"POI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600AD8 = 114;
  qword_2600AE0 = (uint64_t)"POI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600AF0 = 148;
  qword_2600AF8 = (uint64_t)"POI_HIGH_SPEED_RAILPOI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600B08 = 198;
  qword_2600B10 = (uint64_t)"POI_HOME_SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600B20 = 175;
  qword_2600B28 = (uint64_t)"POI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600B40 = (uint64_t)"POI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600B58 = (uint64_t)"POI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600B68 = 199;
  qword_2600B70 = (uint64_t)"POI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600B88 = (uint64_t)"POI_JAPAN_POSTALPOI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600B98 = 150;
  qword_2600BA0 = (uint64_t)"POI_LANDMARKPOI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600BB0 = 115;
  qword_2600BB8 = (uint64_t)"POI_LIBRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600BD0 = (uint64_t)"POI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600BE0 = 149;
  qword_2600BE8 = (uint64_t)"POI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600BF8 = 185;
  qword_2600C00 = (uint64_t)"POI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600C10 = 176;
  qword_2600C18 = (uint64_t)"POI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600C28 = 116;
  qword_2600C30 = (uint64_t)"POI_MARKETPOI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600C48 = (uint64_t)"POI_MAUSOLEUMPOI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600C58 = 151;
  qword_2600C60 = (uint64_t)"POI_MEDIAPOI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600C70 = 117;
  qword_2600C78 = (uint64_t)"POI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600C88 = 173;
  qword_2600C90 = (uint64_t)"POI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600CA0 = 152;
  qword_2600CA8 = (uint64_t)"POI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600CC0 = (uint64_t)"POI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600CD0 = 200;
  qword_2600CD8 = (uint64_t)"POI_MUNICIPAL_BUILDING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600CE8 = 201;
  qword_2600CF0 = (uint64_t)"POI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600D08 = (uint64_t)"POI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600D18 = 118;
  qword_2600D20 = (uint64_t)"POI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600D30 = 153;
  qword_2600D38 = (uint64_t)"POI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600D50 = (uint64_t)"POI_NONEPOI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600D68 = (uint64_t)"POI_PALACEPOI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600D78 = 154;
  qword_2600D80 = (uint64_t)"POI_PARKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600D98 = (uint64_t)"POI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600DB0 = (uint64_t)"POI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600DC0 = 219;
  qword_2600DC8 = (uint64_t)"POI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600DD8 = 120;
  qword_2600DE0 = (uint64_t)"POI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600DF0 = 170;
  qword_2600DF8 = (uint64_t)"POI_PLACE_OF_HISTORIC_OR_CULTURAL_INTERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600E08 = 202;
  qword_2600E10 = (uint64_t)"POI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600E20 = 121;
  qword_2600E28 = (uint64_t)"POI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600E38 = 122;
  qword_2600E40 = (uint64_t)"POI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600E50 = 123;
  qword_2600E58 = (uint64_t)"POI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600E68 = 203;
  qword_2600E70 = (uint64_t)"POI_PROFESSIONAL_SERVICESPOI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600E80 = 177;
  qword_2600E88 = (uint64_t)"POI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600E98 = 124;
  qword_2600EA0 = (uint64_t)"POI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600EB0 = 125;
  qword_2600EB8 = (uint64_t)"POI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600EC8 = 155;
  qword_2600ED0 = (uint64_t)"POI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600EE8 = (uint64_t)"POI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600EF8 = 126;
  qword_2600F00 = (uint64_t)"POI_RV_PARKPOI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600F10 = 156;
  qword_2600F18 = (uint64_t)"POI_SAUNAPOI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600F28 = 168;
  qword_2600F30 = (uint64_t)"POI_SEAPORTPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600F40 = 157;
  qword_2600F48 = (uint64_t)"POI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600F58 = 204;
  qword_2600F60 = (uint64_t)"POI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600F70 = 158;
  qword_2600F78 = (uint64_t)"POI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600F88 = 220;
  qword_2600F90 = (uint64_t)"POI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600FA8 = (uint64_t)"POI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2600FC0 = (uint64_t)"POI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600FD0 = 188;
  qword_2600FD8 = (uint64_t)"POI_SUPERMARKETPOI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2600FE8 = 159;
  qword_2600FF0 = (uint64_t)"POI_SWAMPPOI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2601000 = 160;
  qword_2601008 = (uint64_t)"POI_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2601018 = 167;
  qword_2601020 = (uint64_t)"POI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2601030 = 205;
  qword_2601038 = (uint64_t)"POI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2601048 = 161;
  qword_26012C0 = (uint64_t)"POI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601638 = (uint64_t)"POI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601650 = (uint64_t)"POI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_2601648 = 53;
  dword_2601630 = 52;
  qword_2601640 = 25;
  qword_2601620 = (uint64_t)"POI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601610 = 19;
  dword_2601618 = 51;
  qword_2601628 = 19;
  qword_26014B8 = (uint64_t)"POI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601608 = (uint64_t)"POI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26015F8 = 18;
  dword_2601600 = 14;
  qword_26015D8 = (uint64_t)"POI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26015F0 = (uint64_t)"POI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26015E0 = 18;
  dword_26015E8 = 50;
  qword_26015C0 = (uint64_t)"POI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26015C8 = 18;
  dword_26015D0 = 49;
  qword_26015A8 = (uint64_t)"POI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_26015A0 = 47;
  qword_26015B0 = 28;
  dword_26015B8 = 48;
  qword_2601590 = (uint64_t)"POI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_2601588 = 13;
  qword_2601598 = 23;
  qword_2601578 = (uint64_t)"POI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601568 = 22;
  dword_2601570 = 46;
  qword_2601580 = 24;
  qword_2601560 = (uint64_t)"POI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601550 = 19;
  dword_2601558 = 45;
  qword_2601548 = (uint64_t)"POI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601538 = 21;
  dword_2601540 = 44;
  qword_2601518 = (uint64_t)"POI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601530 = (uint64_t)"POI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601520 = 22;
  dword_2601528 = 43;
  qword_2601500 = (uint64_t)"POI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_26014F8 = 12;
  qword_2601508 = 23;
  dword_2601510 = 42;
  qword_26014E8 = (uint64_t)"POI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26014D8 = 18;
  dword_26014E0 = 41;
  qword_26014F0 = 22;
  qword_26014D0 = (uint64_t)"POI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26014C0 = 18;
  dword_26014C8 = 40;
  qword_26014A0 = (uint64_t)"POI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_2601498 = 39;
  qword_26014A8 = 16;
  dword_26014B0 = 0;
  qword_2601488 = (uint64_t)"POI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601478 = 21;
  dword_2601480 = 38;
  qword_2601490 = 17;
  qword_2601410 = (uint64_t)"POI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601470 = (uint64_t)"POI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601460 = 22;
  dword_2601468 = 11;
  qword_2601440 = (uint64_t)"POI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601458 = (uint64_t)"POI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601448 = 17;
  dword_2601450 = 37;
  qword_2601428 = (uint64_t)"POI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_2601420 = 35;
  qword_2601430 = 23;
  dword_2601438 = 36;
  qword_2601400 = 37;
  dword_2601408 = 34;
  qword_2601418 = 32;
  qword_26013E0 = (uint64_t)"POI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26013F8 = (uint64_t)"POI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26013E8 = 21;
  dword_26013F0 = 10;
  qword_2601380 = (uint64_t)"POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_26013C8 = (uint64_t)"POI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_26013C0 = 8;
  qword_26013D0 = 21;
  dword_26013D8 = 9;
  qword_26013B0 = (uint64_t)"POI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_26013A8 = 33;
  qword_26013B8 = 19;
  qword_2601398 = (uint64_t)"POI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601388 = 20;
  dword_2601390 = 7;
  qword_26013A0 = 29;
  qword_2601368 = (uint64_t)"POI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_2601360 = 6;
  qword_2601370 = 28;
  dword_2601378 = 32;
  qword_2601350 = (uint64_t)"POI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  qword_2601338 = (uint64_t)"POI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601340 = 18;
  dword_2601348 = 31;
  qword_2601358 = 18;
  dword_2601318 = 30;
  qword_2601320 = (uint64_t)"POI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601328 = 15;
  dword_2601330 = 5;
  qword_2601308 = (uint64_t)"POI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601310 = 19;
  qword_26012F0 = (uint64_t)"POI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_26012F8 = 20;
  dword_2601300 = 29;
  qword_26012D8 = (uint64_t)"POI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_26012E0 = 20;
  dword_26012D0 = 27;
  dword_26012E8 = 28;
  qword_26012A8 = (uint64_t)"POI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_26012B0 = 19;
  dword_26012B8 = 26;
  qword_26012C8 = 17;
  qword_2601278 = (uint64_t)"POI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601280 = 23;
  qword_2601290 = (uint64_t)"POI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601298 = 18;
  dword_2601288 = 4;
  dword_26012A0 = 25;
  qword_2601260 = (uint64_t)"POI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601268 = 16;
  dword_2601270 = 24;
  qword_2601230 = (uint64_t)"POI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601238 = 26;
  qword_2601248 = (uint64_t)"POI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601250 = 17;
  dword_2601240 = 22;
  dword_2601258 = 23;
  qword_2601218 = (uint64_t)"POI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601220 = 18;
  dword_2601228 = 21;
  qword_26011E8 = (uint64_t)"POI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAPOI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_26011F0 = 38;
  qword_2601200 = (uint64_t)"POI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601208 = 26;
  dword_26011F8 = 20;
  dword_2601210 = 3;
  qword_26011D0 = (uint64_t)"POI_COMPANY_COSMOPOI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAPOI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_26011D8 = 17;
  dword_26011E0 = 19;
  qword_26011A0 = (uint64_t)"POI_COMPANY_COCO_STOREPOI_COMPANY_COMMUNITY_STOREPOI_COMPANY_COSMOPOI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAPOI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_26011A8 = 22;
  qword_26011B8 = (uint64_t)"POI_COMPANY_COMMUNITY_STOREPOI_COMPANY_COSMOPOI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAPOI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_26011C0 = 27;
  dword_26011B0 = 16;
  dword_26011C8 = 18;
  qword_2601188 = (uint64_t)"POI_COMPANY_COCOSPOI_COMPANY_COCO_STOREPOI_COMPANY_COMMUNITY_STOREPOI_COMPANY_COSMOPOI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAPOI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601190 = 17;
  dword_2601198 = 17;
  qword_2601068 = (uint64_t)"POI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2601170 = (uint64_t)"POI_COMPANY_CIRCLE_KPOI_COMPANY_COCOSPOI_COMPANY_COCO_STOREPOI_COMPANY_COMMUNITY_STOREPOI_COMPANY_COSMOPOI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAPOI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601178 = 20;
  dword_2601168 = 15;
  dword_2601180 = 2;
  qword_2601158 = (uint64_t)"POI_COMPANY_BARMIYANPOI_COMPANY_CIRCLE_KPOI_COMPANY_COCOSPOI_COMPANY_COCO_STOREPOI_COMPANY_COMMUNITY_STOREPOI_COMPANY_COSMOPOI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAPOI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COMPANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COMPANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMPANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_COMPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKPOI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGERPOI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMPANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_STARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_COMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  unk_2601160 = 20;
  qword_2601140 = (uint64_t)"POI_COMPANY_31_ICE_CREAMPOI_COMPANY_BARMIYANPOI_COMPANY_CIRCLE_KPOI_COMPANY_COCOSPOI_COMPANY_"
                           "COCO_STOREPOI_COMPANY_COMMUNITY_STOREPOI_COMPANY_COSMOPOI_COMPANY_CURRY_HOUSE_COCO_ICHIBANYAP"
                           "OI_COMPANY_DAILY_YAMAZAKIPOI_COMPANY_DENNYSPOI_COMPANY_DOUTOUR_COFFEEPOI_COMPANY_ENEOSPOI_COM"
                           "PANY_ESSOPOI_COMPANY_FAMILY_MARTPOI_COMPANY_FUJIYAPOI_COMPANY_GENERALPOI_COMPANY_GUSTOPOI_COM"
                           "PANY_IDEMITSUPOI_COMPANY_JONATHANPOI_COMPANY_JOYFULLPOI_COMPANY_KFCPOI_COMPANY_KYGNUSPOI_COMP"
                           "ANY_LAWSONPOI_COMPANY_LAWSON_STORE_100POI_COMPANY_LOTTERIAPOI_COMPANY_MATSUMOTO_KIYOSHIPOI_CO"
                           "MPANY_MATSUYAPOI_COMPANY_MCDONALDSPOI_COMPANY_MINI_STOPPOI_COMPANY_MITSUBISHI_TOKYO_UFJ_BANKP"
                           "OI_COMPANY_MITSUI_SUMITOMO_BANKPOI_COMPANY_MIZUHO_BANKPOI_COMPANY_MOBILPOI_COMPANY_MOS_BURGER"
                           "POI_COMPANY_MR_DONUTSPOI_COMPANY_NAKAUPOI_COMPANY_NONEPOI_COMPANY_POPURAPOI_COMPANY_PRONTOPOI"
                           "_COMPANY_RINGER_HUTPOI_COMPANY_RISONA_BANKPOI_COMPANY_ROYAL_HOSTPOI_COMPANY_SAIZERIYAPOI_COMP"
                           "ANY_SAVE_ONPOI_COMPANY_SEICO_MARTPOI_COMPANY_SEVEN_ELEVENPOI_COMPANY_SHOWA_SHELLPOI_COMPANY_S"
                           "TARBUCKS_COFFEEPOI_COMPANY_SUBWAYPOI_COMPANY_SUKIYAPOI_COMPANY_SUNKUSPOI_COMPANY_THREE_FPOI_C"
                           "OMPANY_TSUTAYAPOI_COMPANY_TULLYS_COFFEEPOI_COMPANY_UNIQLOPOI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  *(void *)algn_2601148 = 24;
  dword_2601150 = 1;
  dword_26010F0 = 218;
  dword_2601138 = 129;
  qword_2601130 = 7;
  qword_2601110 = (uint64_t)"POI_WINERYPOI_ZOO";
  dword_2601120 = 128;
  qword_2601128 = (uint64_t)"POI_ZOO";
  qword_2601118 = 10;
  qword_26010F8 = (uint64_t)"POI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_2601108 = 119;
  qword_2601100 = 16;
  qword_26010B0 = (uint64_t)"POI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_26010E0 = (uint64_t)"POI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_26010D0 = 14;
  dword_26010D8 = 25;
  qword_26010E8 = 9;
  dword_26010C0 = 178;
  qword_26010C8 = (uint64_t)"POI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_26010B8 = 27;
  qword_2601098 = (uint64_t)"POI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  dword_26010A8 = 127;
  dword_2601090 = 24;
  qword_26010A0 = 11;
  dword_2601078 = 162;
  qword_2601080 = (uint64_t)"POI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_2601070 = 8;
  qword_2601088 = 17;
  qword_2601050 = (uint64_t)"POI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPORTATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  qword_26005D0 = (uint64_t)"POI_ADULT_ENTERTAINMENTPOI_ADULT_STOREPOI_AIRLINEPOI_AIRPORTPOI_AMUSEMENT_PARKPOI_APPLE_INCPO"
                           "I_APPLE_STOREPOI_AQUARIUMPOI_ARTS_ENTERTAINMENTPOI_ART_GALLERYPOI_AUTOMOTIVE_REPAIR_SERVICESP"
                           "OI_BANKPOI_BEACHPOI_BEAUTYPOI_BOWLINGPOI_BREWERYPOI_BUSPOI_CABLE_CARPOI_CAFEPOI_CAMPGROUNDPOI"
                           "_CANNABIS_CLINICPOI_CAPITAL_CITYPOI_CAR_RENTALPOI_CASINOPOI_CASTLEPOI_CEMETERYPOI_COMMERCIALP"
                           "OI_COMPANYPOI_CONSULATE_EMBASSYPOI_CONVENIENCE_STOREPOI_CONVENTION_CENTERPOI_COURTHOUSEPOI_DE"
                           "NTISTPOI_DESERTPOI_EDUCATIONALPOI_EDUCATIONAL_TIER1POI_EDUCATIONAL_TIER2POI_EDUCATIONAL_TIER3"
                           "POI_EMERGENCYPOI_EVENT_SERVICESPOI_FAST_FOODPOI_FEDERAL_LANDPOI_FERRY_STATIONPOI_FIRE_STATION"
                           "POI_FIRING_RANGEPOI_FIRST_AIDPOI_FITNESS_CENTERPOI_FORESTPOI_FORTRESSPOI_FUNERAL_SERVICEPOI_G"
                           "AS_STATIONPOI_GOLFCLUBPOI_GOVERNMENTPOI_HEALTH_MEDICALPOI_HELIPADPOI_HIGH_SPEED_RAILPOI_HOME_"
                           "SERVICESPOI_HOSPITALPOI_HOTELPOI_HOT_SPRINGSPOI_INFORMATIONPOI_JAPAN_POSTALPOI_LANDMARKPOI_LI"
                           "BRARYPOI_LIGHTHOUSEPOI_LIGHT_RAILPOI_LOCAL_SERVICESPOI_MARINAPOI_MARKETPOI_MAUSOLEUMPOI_MEDIA"
                           "POI_MILITARYPOI_MISSIONPOI_MOVIE_THEATERPOI_MUNICIPAL_BUILDING_CITY_OR_WARDPOI_MUNICIPAL_BUIL"
                           "DING_TOWN_OR_VILLAGEPOI_MUSEUMPOI_MUSICPOI_NATIONAL_PARKPOI_NIGHTCLUBPOI_NONEPOI_PALACEPOI_PA"
                           "RKPOI_PARKINGPOI_PARKLETPOI_PHARMACYPOI_PHYSICAL_FEATUREPOI_PLACE_OF_HISTORIC_OR_CULTURAL_INT"
                           "ERESTPOI_PLANETARIUMPOI_POLICEPOI_POST_OFFICEPOI_PREFECTORAL_OFFICEPOI_PROFESSIONAL_SERVICESP"
                           "OI_RECREATIONPOI_RELIGIOUSPOI_RESORTPOI_RESTAURANTPOI_REST_AREAPOI_RV_PARKPOI_SAUNAPOI_SEAPOR"
                           "TPOI_SHRINEPOI_SKATINGPOI_SKI_RESORTPOI_STADIUMPOI_STOREPOI_SUBWAYPOI_SUPERMARKETPOI_SWAMPPOI"
                           "_SWIMMING_POOLPOI_TEMPLEPOI_TENNISPOI_THEATREPOI_TOLLPOI_TRAIN_STATIONPOI_TRANSITPOI_TRANSPOR"
                           "TATION_SERVICESPOI_UNIVERSITYPOI_VENUEPOI_VETERINARIANPOI_WINERYPOI_ZOO";
  *(void *)algn_26005D8 = 23;
  qword_2601040 = 10;
  qword_2601058 = 11;
  dword_2601060 = 23;
  qword_26005F0 = 15;
  qword_2600608 = 11;
  qword_2600620 = 11;
  dword_2600628 = 6;
  qword_2601010 = 17;
  qword_2601028 = 10;
  qword_2600638 = 18;
  dword_2600640 = 7;
  qword_2600650 = 13;
  qword_2600668 = 15;
  qword_2600FE0 = 15;
  qword_2600FF8 = 9;
  qword_2600680 = 12;
  qword_2600698 = 22;
  qword_26006B0 = 15;
  qword_2600FB0 = 9;
  dword_2600FB8 = 22;
  qword_2600FC8 = 10;
  qword_26006C8 = 30;
  qword_26006E0 = 8;
  qword_26006F8 = 9;
  qword_2600F80 = 14;
  qword_2600F98 = 11;
  dword_2600FA0 = 21;
  qword_2600710 = 10;
  qword_2600728 = 11;
  qword_2600740 = 11;
  qword_2600758 = 7;
  qword_2600F50 = 10;
  qword_2600F68 = 11;
  qword_2600770 = 13;
  qword_2600788 = 8;
  dword_2600790 = 8;
  qword_26007A0 = 14;
  qword_2600F20 = 9;
  qword_2600F38 = 11;
  qword_26007B8 = 19;
  qword_26007D0 = 16;
  qword_26007E8 = 14;
  qword_2600800 = 10;
  qword_2600EF0 = 13;
  qword_2600F08 = 11;
  qword_2600818 = 10;
  qword_2600830 = 12;
  qword_2600848 = 14;
  qword_2600EC0 = 10;
  qword_2600ED8 = 14;
  dword_2600EE0 = 20;
  qword_2600860 = 11;
  qword_2600878 = 21;
  qword_2600890 = 21;
  qword_26008A8 = 21;
  qword_2600E90 = 14;
  qword_2600EA8 = 13;
  qword_26008C0 = 14;
  qword_26008D8 = 11;
  qword_26008F0 = 10;
  qword_2600908 = 15;
  qword_2600E60 = 22;
  qword_2600E78 = 25;
  qword_2600920 = 21;
  qword_2600938 = 21;
  qword_2600950 = 21;
  qword_2600968 = 13;
  qword_2600E30 = 10;
  qword_2600E48 = 15;
  qword_2600980 = 18;
  qword_2600998 = 13;
  qword_26009B0 = 16;
  qword_26009C8 = 17;
  qword_2600E00 = 42;
  qword_2600E18 = 15;
  qword_26009E0 = 16;
  qword_26009F8 = 16;
  qword_2600A10 = 13;
  qword_2600A28 = 18;
  qword_2600DD0 = 12;
  qword_2600DE8 = 20;
  qword_2600A40 = 10;
  qword_2600A58 = 12;
  qword_2600A70 = 19;
  qword_2600DA0 = 11;
  dword_2600DA8 = 19;
  qword_2600DB8 = 11;
  qword_2600A88 = 15;
  qword_2600AA0 = 12;
  dword_2600AA8 = 9;
  qword_2600D70 = 10;
  qword_2600D88 = 8;
  dword_2600D90 = 18;
  qword_2600AB8 = 14;
  qword_2600AD0 = 18;
  qword_2600D40 = 13;
  dword_2600D48 = 17;
  qword_2600D58 = 8;
  dword_2600D60 = 0;
  qword_2600AE8 = 11;
  qword_2600B00 = 19;
  qword_2600B18 = 17;
  qword_2600B30 = 12;
  qword_2600D10 = 9;
  qword_2600D28 = 17;
  dword_2600B38 = 10;
  qword_2600B48 = 9;
  dword_2600B50 = 11;
  qword_2600CE0 = 38;
  qword_2600CF8 = 10;
  dword_2600D00 = 16;
  qword_2600B60 = 15;
  qword_2600B78 = 15;
  dword_2600B80 = 12;
  qword_2600CB0 = 17;
  dword_2600CB8 = 15;
  qword_2600CC8 = 35;
  qword_2600B90 = 16;
  qword_2600BA8 = 12;
  qword_2600BC0 = 11;
  dword_2600BC8 = 13;
  qword_2600C80 = 12;
  qword_2600C98 = 11;
  qword_2600BD8 = 14;
  qword_2600BF0 = 14;
  qword_2600C08 = 18;
  qword_2600C20 = 10;
  qword_2600C38 = 10;
  qword_2600C68 = 9;
  dword_2600C40 = 14;
  qword_2600C50 = 13;
  dword_2601660 = 54;
  qword_2601668 = (uint64_t)"POI_COMPANY_YAMAZAKI_STOREPOI_COMPANY_YOSHINOYA";
  dword_2601678 = 55;
  qword_2601680 = (uint64_t)"POI_COMPANY_YOSHINOYA";
  dword_2601690 = 56;
  qword_2601658 = 18;
  qword_2601670 = 26;
  qword_2601688 = 21;
  qword_26016B0 = (uint64_t)"POI_TRANSIT_AGENCY_BARCELONA_METROPOI_TRANSIT_AGENCY_BARTPOI_TRANSIT_AGENCY_BEIJING_SUBWAYPOI_TRANSIT_AGENCY_BERLIN_U_BAHNPOI_TRANSIT_AGENCY_CHICAGO_LPOI_TRANSIT_AGENCY_FUKUOKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26016C8 = (uint64_t)"POI_TRANSIT_AGENCY_BARTPOI_TRANSIT_AGENCY_BEIJING_SUBWAYPOI_TRANSIT_AGENCY_BERLIN_U_BAHNPOI_TRANSIT_AGENCY_CHICAGO_LPOI_TRANSIT_AGENCY_FUKUOKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_26016D8 = 15;
  qword_26016F8 = (uint64_t)"POI_TRANSIT_AGENCY_BERLIN_U_BAHNPOI_TRANSIT_AGENCY_CHICAGO_LPOI_TRANSIT_AGENCY_FUKUOKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601720 = 13;
  dword_2601738 = 10;
  qword_2601740 = (uint64_t)"POI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601758 = (uint64_t)"POI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_26017B0 = 52;
  qword_26017D0 = (uint64_t)"POI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_26017E0 = 48;
  dword_26016A8 = 41;
  qword_2601788 = (uint64_t)"POI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  unk_2601790 = 41;
  qword_2601800 = (uint64_t)"POI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  unk_2601808 = 41;
  qword_2601818 = (uint64_t)"POI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601840 = 17;
  dword_2601858 = 14;
  qword_2601860 = (uint64_t)"POI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601870 = 25;
  dword_2601888 = 20;
  qword_2601890 = (uint64_t)"POI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26018A8 = (uint64_t)"POI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26018C0 = (uint64_t)"POI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26018D8 = (uint64_t)"POI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26017A0 = (uint64_t)"POI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26017A8 = 49;
  dword_26018E8 = 49;
  qword_26018F0 = (uint64_t)"POI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601900 = 50;
  qword_2601908 = (uint64_t)"POI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601918 = 51;
  qword_2601920 = (uint64_t)"POI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601938 = (uint64_t)"POI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601930 = 42;
  qword_2601940 = 42;
  qword_2601950 = (uint64_t)"POI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601968 = (uint64_t)"POI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601980 = (uint64_t)"POI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26017B8 = (uint64_t)"POI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26017C0 = 36;
  dword_2601828 = 36;
  qword_2601868 = 36;
  qword_2601988 = 36;
  qword_2601998 = (uint64_t)"POI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26016E0 = (uint64_t)"POI_TRANSIT_AGENCY_BEIJING_SUBWAYPOI_TRANSIT_AGENCY_BERLIN_U_BAHNPOI_TRANSIT_AGENCY_CHICAGO_LPOI_TRANSIT_AGENCY_FUKUOKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26016E8 = 33;
  qword_26018B0 = 33;
  dword_26019A8 = 33;
  qword_26019B0 = (uint64_t)"POI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601710 = (uint64_t)"POI_TRANSIT_AGENCY_CHICAGO_LPOI_TRANSIT_AGENCY_FUKUOKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_26016F0 = 28;
  qword_2601718 = 28;
  qword_26019B8 = 28;
  qword_26019C8 = (uint64_t)"POI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601910 = 45;
  dword_26019D8 = 45;
  qword_26019E0 = (uint64_t)"POI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601848 = (uint64_t)"POI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601850 = 46;
  dword_26019F0 = 46;
  qword_26019F8 = (uint64_t)"POI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601A10 = (uint64_t)"POI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601A20 = 26;
  qword_2601A28 = (uint64_t)"POI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601958 = 39;
  qword_2601A18 = 39;
  dword_2601A38 = 39;
  qword_2601A40 = (uint64_t)"POI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601A58 = (uint64_t)"POI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_26018A0 = 43;
  qword_26018E0 = 43;
  qword_26018F8 = 43;
  qword_2601A60 = 43;
  qword_2601A70 = (uint64_t)"POI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_26017E8 = (uint64_t)"POI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601708 = 37;
  qword_26017F0 = 37;
  qword_2601A78 = 37;
  qword_2601A88 = (uint64_t)"POI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_2601A98 = 27;
  qword_2601AA0 = (uint64_t)"POI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601830 = (uint64_t)"POI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  unk_2601838 = 24;
  dword_2601A50 = 24;
  qword_2601AA8 = 24;
  dword_2601AB0 = 16;
  qword_2601AB8 = (uint64_t)"POI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601AD0 = (uint64_t)"POI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_26017C8 = 47;
  qword_2601AD8 = 47;
  qword_2601AE8 = (uint64_t)"POI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601B00 = (uint64_t)"POI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601B18 = (uint64_t)"POI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601B20 = 62;
  qword_2601B30 = (uint64_t)"POI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601770 = (uint64_t)"POI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601778 = 40;
  dword_2601AF8 = 40;
  qword_2601B38 = 40;
  qword_2601B48 = (uint64_t)"POI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601728 = (uint64_t)"POI_TRANSIT_AGENCY_FUKUOKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_METRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSETTS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  dword_26016C0 = 38;
  qword_2601730 = 38;
  qword_2601B50 = 38;
  qword_2601B60 = (uint64_t)"POI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601878 = (uint64_t)"POI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TRANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_TRANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENCY_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGENCY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSIT_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOUL_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AGENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601880 = 35;
  dword_26018D0 = 35;
  qword_26019E8 = 35;
  qword_2601B68 = 35;
  qword_2601698 = (uint64_t)"POI_TRANSIT_AGENCY_AMSTERDAM_METROPOI_TRANSIT_AGENCY_BARCELONA_METROPOI_TRANSIT_AGENCY_BARTPO"
                           "I_TRANSIT_AGENCY_BEIJING_SUBWAYPOI_TRANSIT_AGENCY_BERLIN_U_BAHNPOI_TRANSIT_AGENCY_CHICAGO_LPO"
                           "I_TRANSIT_AGENCY_FUKUOKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_GUANGZHOU_METROPOI_TRANSIT_AGENCY_HONG"
                           "_KONG_MTRPOI_TRANSIT_AGENCY_KOBE_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_KYOTO_MUNICIPAL_SUBWAYPOI"
                           "_TRANSIT_AGENCY_LONDON_DOCKLANDS_LIGHT_RAILWAYPOI_TRANSIT_AGENCY_LONDON_OVERGROUNDPOI_TRANSIT"
                           "_AGENCY_LONDON_TRAMLINKPOI_TRANSIT_AGENCY_LONDON_UNDERGROUNDPOI_TRANSIT_AGENCY_LOS_ANGELES_ME"
                           "TRO_RAILPOI_TRANSIT_AGENCY_MADRID_METROPOI_TRANSIT_AGENCY_MARTAPOI_TRANSIT_AGENCY_MASSACHUSET"
                           "TS_BAY_TRANSPORTPOI_TRANSIT_AGENCY_MEXICO_CITY_METROPOI_TRANSIT_AGENCY_MIAMI_METRO_RAILPOI_TR"
                           "ANSIT_AGENCY_MILAN_METROPOI_TRANSIT_AGENCY_MONTREAL_METROPOI_TRANSIT_AGENCY_MOSCOW_METROPOI_T"
                           "RANSIT_AGENCY_MTA_LONG_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MTA_METRO_NORTH_RAILROADPOI_TRANSIT_"
                           "AGENCY_MTA_STATEN_ISLAND_RAILROADPOI_TRANSIT_AGENCY_MUNICH_U_BAHNPOI_TRANSIT_AGENCY_NAGOYA_MU"
                           "NICIPAL_SUBWAYPOI_TRANSIT_AGENCY_NEW_YORK_CITY_SUBWAYPOI_TRANSIT_AGENCY_NONEPOI_TRANSIT_AGENC"
                           "Y_OSAKA_CITY_SUBWAYPOI_TRANSIT_AGENCY_PARIS_METROPOI_TRANSIT_AGENCY_PARIS_RERPOI_TRANSIT_AGEN"
                           "CY_PARIS_TRAMWAYPOI_TRANSIT_AGENCY_PARIS_TRANSILIENPOI_TRANSIT_AGENCY_PATHPOI_TRANSIT_AGENCY_"
                           "RIO_DE_JANEIRO_METROPOI_TRANSIT_AGENCY_ROME_METROPOI_TRANSIT_AGENCY_SAO_PAULO_METROPOI_TRANSI"
                           "T_AGENCY_SAPPORO_MUNICIPAL_SUBWAYPOI_TRANSIT_AGENCY_SENDAI_CITY_SUBWAYPOI_TRANSIT_AGENCY_SEOU"
                           "L_METROPOLITAN_SUBWAYPOI_TRANSIT_AGENCY_SEPTAPOI_TRANSIT_AGENCY_SHANGHAI_SUBWAYPOI_TRANSIT_AG"
                           "ENCY_SINGAPORE_MASS_RAPID_TRANSITPOI_TRANSIT_AGENCY_STOCKHOLM_METROPOI_TRANSIT_AGENCY_TOKYO_M"
                           "ETROPOI_TRANSIT_AGENCY_TOKYO_METROPOLITAN_BUREAU_OF_TRANSPORTATIONPOI_TRANSIT_AGENCY_TORONTO_"
                           "SUBWAY_AND_RTPOI_TRANSIT_AGENCY_VANCOUVER_SKY_TRAINPOI_TRANSIT_AGENCY_WASHINGTON_METROPOI_TRA"
                           "NSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  unk_26016A0 = 34;
  qword_26016B8 = 34;
  qword_26016D0 = 23;
  qword_2601700 = 32;
  qword_2601748 = 34;
  dword_2601750 = 30;
  qword_2601760 = 32;
  dword_2601768 = 31;
  dword_2601780 = 9;
  dword_2601798 = 7;
  qword_26017D8 = 34;
  dword_26017F8 = 34;
  dword_2601810 = 19;
  qword_2601820 = 31;
  qword_2601898 = 30;
  dword_26018B8 = 22;
  qword_26018C8 = 31;
  qword_2601928 = 32;
  uint64_t result = 6;
  dword_2601948 = 6;
  dword_2601960 = 11;
  qword_2601970 = 23;
  dword_2601978 = 0;
  dword_2601990 = 8;
  qword_26019A0 = 30;
  dword_26019C0 = 44;
  qword_26019D0 = 32;
  qword_2601A00 = 23;
  dword_2601A08 = 18;
  qword_2601A30 = 29;
  qword_2601A48 = 34;
  dword_2601A68 = 3;
  dword_2601A80 = 4;
  qword_2601A90 = 44;
  qword_2601AC0 = 34;
  dword_2601AC8 = 29;
  dword_2601AE0 = 32;
  qword_2601AF0 = 34;
  qword_2601B08 = 30;
  dword_2601B10 = 1;
  dword_2601B28 = 2;
  dword_2601B40 = 21;
  dword_2601B58 = 23;
  dword_2601B70 = 12;
  qword_2601B78 = (uint64_t)"POI_TRANSIT_AGENCY_YOKOHAMA_MUNICIPAL_SUBWAY";
  qword_2601B80 = 44;
  dword_2601B88 = 5;
  qword_2601BA8 = (uint64_t)"FEATURE_NONEFEATURE_POI";
  unk_2601BB0 = 12;
  qword_2601B90 = (uint64_t)"FEATURE_AOIFEATURE_NONEFEATURE_POI";
  *(void *)algn_2601B98 = 11;
  dword_2601BA0 = 2;
  dword_2601BB8 = 0;
  qword_2601BC0 = (uint64_t)"FEATURE_POI";
  unk_2601BC8 = 11;
  dword_2601BD0 = 1;
  qword_2601BD8 = (uint64_t)"PC_CHILDPC_NONEPC_PARENT";
  unk_2601BE0 = 8;
  dword_2601BE8 = 1;
  qword_2601BF0 = (uint64_t)"PC_NONEPC_PARENT";
  unk_2601BF8 = 7;
  dword_2601C00 = 0;
  qword_2601C08 = (uint64_t)"PC_PARENT";
  unk_2601C10 = 9;
  dword_2601C18 = 2;
  qword_2601C20 = (uint64_t)"MZR_AOI_POLYGON_SIZE_ADJUSTMENTMZR_CHAIN_RECOGNITIONMZR_GEMINI_OVERRIDEMZR_ICON_HEAT_MAP_BASE"
                           "D_ADJUSTMENTMZR_NONEMZR_POPULARITY_RANKINGMZR_STATIC_RANKINGMZR_VAULTMZR_YELP_REVIEW_RANKING";
  *(void *)algn_2601C28 = 31;
  qword_2601C38 = (uint64_t)"MZR_CHAIN_RECOGNITIONMZR_GEMINI_OVERRIDEMZR_ICON_HEAT_MAP_BASED_ADJUSTMENTMZR_NONEMZR_POPULARITY_RANKINGMZR_STATIC_RANKINGMZR_VAULTMZR_YELP_REVIEW_RANKING";
  unk_2601C40 = 21;
  qword_2601C50 = (uint64_t)"MZR_GEMINI_OVERRIDEMZR_ICON_HEAT_MAP_BASED_ADJUSTMENTMZR_NONEMZR_POPULARITY_RANKINGMZR_STATIC_RANKINGMZR_VAULTMZR_YELP_REVIEW_RANKING";
  unk_2601C58 = 19;
  qword_2601C68 = (uint64_t)"MZR_ICON_HEAT_MAP_BASED_ADJUSTMENTMZR_NONEMZR_POPULARITY_RANKINGMZR_STATIC_RANKINGMZR_VAULTMZR_YELP_REVIEW_RANKING";
  unk_2601C70 = 34;
  qword_2601C98 = (uint64_t)"MZR_POPULARITY_RANKINGMZR_STATIC_RANKINGMZR_VAULTMZR_YELP_REVIEW_RANKING";
  unk_2601CA0 = 22;
  dword_2601CA8 = 4;
  qword_2601CB0 = (uint64_t)"MZR_STATIC_RANKINGMZR_VAULTMZR_YELP_REVIEW_RANKING";
  unk_2601CB8 = 18;
  qword_2601C80 = (uint64_t)"MZR_NONEMZR_POPULARITY_RANKINGMZR_STATIC_RANKINGMZR_VAULTMZR_YELP_REVIEW_RANKING";
  dword_2601C30 = 7;
  dword_2601C48 = 3;
  dword_2601C60 = 5;
  dword_2601C78 = 8;
  qword_2601C88 = 8;
  dword_2601C90 = 0;
  dword_2601CC0 = 6;
  qword_2601CC8 = (uint64_t)"MZR_VAULTMZR_YELP_REVIEW_RANKING";
  unk_2601CD0 = 9;
  dword_2601CD8 = 1;
  qword_2601CE0 = (uint64_t)"MZR_YELP_REVIEW_RANKING";
  unk_2601CE8 = 23;
  dword_2601CF0 = 2;
  qword_2601D10 = (uint64_t)"NEIGHBORHOOD_ICON_DENSITY_LOWNEIGHBORHOOD_ICON_DENSITY_MEDIUMNEIGHBORHOOD_ICON_DENSITY_NONE";
  unk_2601D18 = 29;
  qword_2601D28 = (uint64_t)"NEIGHBORHOOD_ICON_DENSITY_MEDIUMNEIGHBORHOOD_ICON_DENSITY_NONE";
  unk_2601D30 = 32;
  qword_2601D40 = (uint64_t)"NEIGHBORHOOD_ICON_DENSITY_NONE";
  unk_2601D48 = 30;
  qword_2601CF8 = (uint64_t)"NEIGHBORHOOD_ICON_DENSITY_HIGHNEIGHBORHOOD_ICON_DENSITY_LOWNEIGHBORHOOD_ICON_DENSITY_MEDIUMNE"
                           "IGHBORHOOD_ICON_DENSITY_NONE";
  unk_2601D00 = 30;
  dword_2601D08 = 3;
  dword_2601D20 = 1;
  dword_2601D38 = 2;
  dword_2601D50 = 0;
  qword_2601D58 = (uint64_t)"AC_LOG_TRIGGER_UNKNOWNKEYPRESSRESPONSE";
  unk_2601D60 = 22;
  dword_2601D68 = 0;
  qword_2601D70 = (uint64_t)"KEYPRESSRESPONSE";
  unk_2601D78 = 8;
  dword_2601D80 = 1;
  qword_2601D88 = (uint64_t)"RESPONSE";
  unk_2601D90 = 8;
  dword_2601D98 = 2;
  qword_2601DB8 = (uint64_t)"KEYPRESS_STATUS_UNKNOWNSUBMITTEDTHROTTLED";
  unk_2601DC0 = 23;
  qword_2601DD0 = (uint64_t)"SUBMITTEDTHROTTLED";
  unk_2601DD8 = 9;
  qword_2601DE8 = (uint64_t)"THROTTLED";
  unk_2601DF0 = 9;
  qword_2601DA0 = (uint64_t)"BATCHEDKEYPRESS_STATUS_UNKNOWNSUBMITTEDTHROTTLED";
  *(void *)algn_2601DA8 = 7;
  dword_2601DB0 = 3;
  dword_2601DC8 = 0;
  dword_2601DE0 = 1;
  dword_2601DF8 = 2;
  dword_2601E10 = 2;
  dword_2601E28 = 1;
  qword_2601E30 = (uint64_t)"CATEGORYQUERY";
  unk_2601E38 = 8;
  qword_2601E18 = (uint64_t)"BUSINESSCATEGORYQUERY";
  unk_2601E20 = 8;
  dword_2601E40 = 3;
  qword_2601E00 = (uint64_t)"ADDRESSBUSINESSCATEGORYQUERY";
  *(void *)algn_2601E08 = 7;
  qword_2601E48 = (uint64_t)"QUERY";
  unk_2601E50 = 5;
  dword_2601E58 = 0;
  return result;
}

BOOL sub_1251ADC(int a1)
{
  BOOL result = 1;
  if ((a1 - 1) > 0x3F || ((1 << (a1 - 1)) & 0x800000008000808BLL) == 0) {
    return a1 == 128 || a1 == 256;
  }
  return result;
}

BOOL sub_1251B20(int a1)
{
  return (a1 - 1) < 2;
}

void *sub_1251B30(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1251BA4(void *a1)
{
  sub_1251B30(a1);

  operator delete();
}

uint64_t sub_1251BDC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(void *)(a1 + 56) = 0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0x300) != 0) {
    *(void *)(a1 + 64) = 0;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1251C18(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v64 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v64, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v64 + 1;
    unsigned int v9 = *v64;
    if (*v64 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v64, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v64 + 2;
      }
    }
    int v64 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_59;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v64 = v12;
          *(void *)(a1 + 24) = v13;
          goto LABEL_66;
        }
        int v44 = (char *)sub_188C138((uint64_t)v8, v13);
        int v64 = v44;
        *(void *)(a1 + 24) = v45;
        if (v44) {
          goto LABEL_66;
        }
        goto LABEL_91;
      case 2u:
        if (v9 != 16) {
          goto LABEL_59;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v46 = (char *)sub_188C138((uint64_t)v8, v16);
          int v64 = v46;
          *(void *)(a1 + 32) = v47;
          if (!v46) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          int v64 = v15;
          *(void *)(a1 + 32) = v16;
        }
        goto LABEL_66;
      case 3u:
        if (v9 != 24) {
          goto LABEL_59;
        }
        v5 |= 4u;
        int v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, v18);
          int v64 = v48;
          *(_DWORD *)(a1 + 40) = v49;
          if (!v48) {
            goto LABEL_91;
          }
        }
        else
        {
          int v19 = v8 + 2;
LABEL_23:
          int v64 = v19;
          *(_DWORD *)(a1 + 40) = v18;
        }
        goto LABEL_66;
      case 4u:
        if (v9 != 32) {
          goto LABEL_59;
        }
        v5 |= 8u;
        int v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v50 = (char *)sub_188C138((uint64_t)v8, v21);
          int v64 = v50;
          *(_DWORD *)(a1 + 44) = v51;
          if (!v50) {
            goto LABEL_91;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_28:
          int v64 = v22;
          *(_DWORD *)(a1 + 44) = v21;
        }
        goto LABEL_66;
      case 5u:
        if (v9 != 40) {
          goto LABEL_59;
        }
        v5 |= 0x10u;
        uint64_t v25 = v8 + 1;
        LODWORD(v24) = *v8;
        if ((v24 & 0x80) == 0) {
          goto LABEL_33;
        }
        int v26 = *v25;
        uint64_t v24 = v24 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          int v52 = (char *)sub_188C138((uint64_t)v8, v24);
          int v64 = v52;
          *(_DWORD *)(a1 + 48) = v53;
          if (!v52) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_33:
          int v64 = v25;
          *(_DWORD *)(a1 + 48) = v24;
        }
        goto LABEL_66;
      case 6u:
        if (v9 != 48) {
          goto LABEL_59;
        }
        v5 |= 0x20u;
        uint64_t v28 = v8 + 1;
        LODWORD(v27) = *v8;
        if ((v27 & 0x80) == 0) {
          goto LABEL_38;
        }
        int v29 = *v28;
        uint64_t v27 = v27 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          int v54 = (char *)sub_188C138((uint64_t)v8, v27);
          int v64 = v54;
          *(_DWORD *)(a1 + 52) = v55;
          if (!v54) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_38:
          int v64 = v28;
          *(_DWORD *)(a1 + 52) = v27;
        }
        goto LABEL_66;
      case 7u:
        if (v9 != 56) {
          goto LABEL_59;
        }
        v5 |= 0x40u;
        uint64_t v31 = v8 + 1;
        LODWORD(v30) = *v8;
        if ((v30 & 0x80) == 0) {
          goto LABEL_43;
        }
        int v32 = *v31;
        uint64_t v30 = v30 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v56 = (char *)sub_188C138((uint64_t)v8, v30);
          int v64 = v56;
          *(_DWORD *)(a1 + 56) = v57;
          if (!v56) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v31 = v8 + 2;
LABEL_43:
          int v64 = v31;
          *(_DWORD *)(a1 + 56) = v30;
        }
        goto LABEL_66;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_59;
        }
        v5 |= 0x80u;
        uint64_t v33 = v8 + 1;
        int v34 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v58 = (char *)sub_188C0D0((uint64_t)v8, v34);
          int v64 = v58;
          *(_DWORD *)(a1 + 60) = v59;
          if (!v58) {
            goto LABEL_91;
          }
        }
        else
        {
          uint64_t v33 = v8 + 2;
LABEL_48:
          int v64 = v33;
          *(_DWORD *)(a1 + 60) = v34;
        }
        goto LABEL_66;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_59;
        }
        v5 |= 0x100u;
        int v37 = v8 + 1;
        LODWORD(v36) = *v8;
        if ((v36 & 0x80) == 0) {
          goto LABEL_53;
        }
        int v38 = *v37;
        uint64_t v36 = v36 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          uint64_t v60 = (char *)sub_188C138((uint64_t)v8, v36);
          int v64 = v60;
          *(_DWORD *)(a1 + 64) = v61;
          if (!v60) {
            goto LABEL_91;
          }
        }
        else
        {
          int v37 = v8 + 2;
LABEL_53:
          int v64 = v37;
          *(_DWORD *)(a1 + 64) = v36;
        }
        goto LABEL_66;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_59;
        }
        v5 |= 0x200u;
        int v39 = v8 + 1;
        int v40 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v41 = *v39;
        int v40 = v40 + (v41 << 7) - 128;
        if (v41 < 0)
        {
          int v62 = (char *)sub_188C0D0((uint64_t)v8, v40);
          int v64 = v62;
          *(_DWORD *)(a1 + 68) = v63;
          if (!v62) {
            goto LABEL_91;
          }
        }
        else
        {
          int v39 = v8 + 2;
LABEL_58:
          int v64 = v39;
          *(_DWORD *)(a1 + 68) = v40;
        }
        goto LABEL_66;
      default:
LABEL_59:
        if (v9) {
          BOOL v42 = (v9 & 7) == 4;
        }
        else {
          BOOL v42 = 1;
        }
        if (!v42)
        {
          if (*v7)
          {
            uint64_t v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v64;
          }
          int v64 = (char *)sub_1885AC0(v9, v43, v8, a3);
          if (!v64) {
            goto LABEL_91;
          }
LABEL_66:
          if (sub_11947B8((uint64_t)a3, &v64, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_91:
        }
          int v64 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v64;
    }
  }
}

unsigned char *sub_1252124(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 52);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 56);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 60);
    unsigned char *v4 = 88;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 64);
    unsigned char *v4 = 96;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 104;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    int v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    int v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v40, v41, v4);
}

unint64_t sub_12526A8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    unint64_t result = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  unint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_5:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_6:
  if ((v2 & 4) != 0)
  {
    int v4 = *(_DWORD *)(a1 + 40);
    if (v4 < 0) {
      uint64_t v5 = 11;
    }
    else {
      uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v5;
  }
  return result;
}

unint64_t sub_1252740(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 7) != 0)
  {
    unint64_t result = sub_12526A8(a1);
  }
  else
  {
    unint64_t v3 = (9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6;
    unint64_t v4 = (9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6;
    int v5 = *(_DWORD *)(a1 + 40);
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    if (v5 >= 0) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 10;
    }
    unint64_t result = v3 + v4 + v7 + 3;
  }
  if ((v2 & 0xF8) == 0) {
    goto LABEL_14;
  }
  if ((v2 & 8) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 44);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v12;
    if ((v2 & 0x10) == 0)
    {
LABEL_10:
      if ((v2 & 0x20) == 0) {
        goto LABEL_11;
      }
LABEL_32:
      int v16 = *(_DWORD *)(a1 + 52);
      if (v16 < 0) {
        uint64_t v17 = 11;
      }
      else {
        uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v17;
      if ((v2 & 0x40) == 0)
      {
LABEL_12:
        if ((v2 & 0x80) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_10;
  }
  int v14 = *(_DWORD *)(a1 + 48);
  if (v14 < 0) {
    uint64_t v15 = 11;
  }
  else {
    uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v15;
  if ((v2 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_11:
  if ((v2 & 0x40) == 0) {
    goto LABEL_12;
  }
LABEL_36:
  int v18 = *(_DWORD *)(a1 + 56);
  if (v18 < 0) {
    uint64_t v19 = 11;
  }
  else {
    uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v19;
  if ((v2 & 0x80) != 0) {
LABEL_13:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_14:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v9 = *(_DWORD *)(a1 + 64);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v10;
    }
    if ((v2 & 0x200) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v20 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    result += v21;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_125298C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(result[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_25:
    HIDWORD(result[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      HIDWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 60);
      goto LABEL_11;
    }
LABEL_26:
    LODWORD(result[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      LODWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    }
    if ((v2 & 0x200) != 0) {
      HIDWORD(result[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1252A6C(uint64_t a1)
{
  return (~*(_DWORD *)(a1 + 16) & 7) == 0;
}

void *sub_1252A80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.Location");
}

uint64_t sub_1252A90(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252F028)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1251B30(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1252B48(uint64_t a1)
{
  sub_1252A90(a1);

  operator delete();
}

uint64_t sub_1252B80(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    unint64_t result = sub_1251BDC(*(void *)(result + 24));
  }
  if ((v2 & 0x7E) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1252BEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v48 + 2;
      }
    }
    uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        v5 |= 2u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v48 = v13;
          *(_DWORD *)(a1 + 32) = v12;
          goto LABEL_53;
        }
        unsigned int v36 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v48 = v36;
        *(_DWORD *)(a1 + 32) = v37;
        if (v36) {
          goto LABEL_53;
        }
        goto LABEL_70;
      case 2u:
        if (v9 != 16) {
          goto LABEL_45;
        }
        v5 |= 4u;
        int v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v38 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v48 = v38;
          *(_DWORD *)(a1 + 36) = v39;
          if (!v38) {
            goto LABEL_70;
          }
        }
        else
        {
          int v16 = v8 + 2;
LABEL_18:
          uint64_t v48 = v16;
          *(_DWORD *)(a1 + 36) = v15;
        }
        goto LABEL_53;
      case 3u:
        if (v9 != 24) {
          goto LABEL_45;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v40 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v48 = v40;
          *(_DWORD *)(a1 + 40) = v41;
          if (!v40) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          uint64_t v48 = v19;
          *(_DWORD *)(a1 + 40) = v18;
        }
        goto LABEL_53;
      case 4u:
        if (v9 != 32) {
          goto LABEL_45;
        }
        v5 |= 0x10u;
        unint64_t v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v42 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v48 = v42;
          *(_DWORD *)(a1 + 44) = v43;
          if (!v42) {
            goto LABEL_70;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_28:
          uint64_t v48 = v22;
          *(_DWORD *)(a1 + 44) = v21;
        }
        goto LABEL_53;
      case 5u:
        if (v9 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 24);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          sub_125BD04((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 24) = v26;
          unint64_t v8 = v48;
        }
        unint64_t v27 = sub_1252FD4(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_45;
        }
        v5 |= 0x20u;
        unsigned int v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_39;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          int v44 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v48 = v44;
          *(_DWORD *)(a1 + 48) = v45;
          if (!v44) {
            goto LABEL_70;
          }
        }
        else
        {
          unsigned int v29 = v8 + 2;
LABEL_39:
          uint64_t v48 = v29;
          *(_DWORD *)(a1 + 48) = v28;
        }
        goto LABEL_53;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_45;
        }
        v5 |= 0x40u;
        unint64_t v32 = v8 + 1;
        LODWORD(v31) = *v8;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        int v33 = *v32;
        uint64_t v31 = v31 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v46 = (char *)sub_188C138((uint64_t)v8, v31);
          uint64_t v48 = v46;
          *(_DWORD *)(a1 + 52) = v47;
          if (!v46) {
            goto LABEL_70;
          }
        }
        else
        {
          unint64_t v32 = v8 + 2;
LABEL_44:
          uint64_t v48 = v32;
          *(_DWORD *)(a1 + 52) = v31;
        }
        goto LABEL_53;
      default:
LABEL_45:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            unsigned int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v48;
          }
          unint64_t v27 = (char *)sub_1885AC0(v9, v35, v8, a3);
LABEL_52:
          uint64_t v48 = v27;
          if (!v27) {
            goto LABEL_70;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          uint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

char *sub_1252FD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  unint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    unint64_t result = sub_1251C18(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1253064(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 24);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    char v4 = sub_1252124(v19, (unint64_t)v21, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 48);
    unsigned char *v4 = 88;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 52);
    unsigned char *v4 = 96;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1253468(_DWORD *a1)
{
  int v2 = a1[4];
  if ((v2 & 2) != 0)
  {
    int v4 = a1[8];
    if (v4 < 0)
    {
      uint64_t result = 11;
      if ((v2 & 4) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t result = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 4) == 0) {
        goto LABEL_12;
      }
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_12;
    }
  }
  int v5 = a1[9];
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_12:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 0x10) == 0) {
      return result;
    }
    goto LABEL_19;
  }
  int v7 = a1[10];
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v8;
  if ((v2 & 0x10) != 0)
  {
LABEL_19:
    int v9 = a1[11];
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v10;
  }
  return result;
}

uint64_t sub_1253558(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 0x1E) != 0)
  {
    uint64_t v5 = sub_1253468((_DWORD *)a1);
    if (v2)
    {
LABEL_17:
      unint64_t v12 = sub_1252740(*(void *)(a1 + 24));
      v5 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = *(_DWORD *)(a1 + 32);
    if (v3 < 0) {
      uint64_t v4 = 14;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 4;
    }
    int v6 = *(_DWORD *)(a1 + 36);
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    }
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 10;
    }
    else {
      uint64_t v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
    }
    int v10 = *(_DWORD *)(a1 + 44);
    if (v10 < 0) {
      uint64_t v11 = 10;
    }
    else {
      uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v5 = v4 + v7 + v9 + v11;
    if (v2) {
      goto LABEL_17;
    }
  }
  if ((v2 & 0x60) != 0)
  {
    if ((v2 & 0x20) != 0)
    {
      int v13 = *(_DWORD *)(a1 + 48);
      if (v13 < 0) {
        uint64_t v14 = 11;
      }
      else {
        uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v5 += v14;
    }
    if ((v2 & 0x40) != 0)
    {
      int v15 = *(_DWORD *)(a1 + 52);
      if (v15 < 0) {
        uint64_t v16 = 11;
      }
      else {
        uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v5 += v16;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v5 += v20;
  }
  *(_DWORD *)(a1 + 20) = v5;
  return v5;
}

std::string *sub_1253728(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v8 = (void *)*v8;
        }
        sub_125BD04((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_252EFE0;
      }
      uint64_t result = sub_125298C(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_25:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
      goto LABEL_10;
    }
LABEL_27:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1253850(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  return (~v1 & 0x1E) == 0 && ((v1 & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 7) == 0);
}

void *sub_1253888@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.CellTower");
}

uint64_t sub_1253898(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252F060)
  {
    int v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1251B30(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1253950(uint64_t a1)
{
  sub_1253898(a1);

  operator delete();
}

uint64_t sub_1253988(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1251BDC(*(void *)(result + 24));
  }
  if ((v2 & 0xFE) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(_DWORD *)(v1 + 56) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 52) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12539FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v58 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v58, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v58 + 1;
    unsigned int v9 = *v58;
    if (*v58 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v58, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v58 + 2;
      }
    }
    uint64_t v58 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_55;
        }
        v5 |= 2u;
        int v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v13 = v8 + 2;
LABEL_13:
          uint64_t v58 = v13;
          *(_DWORD *)(a1 + 32) = v12;
          goto LABEL_63;
        }
        uint64_t v42 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v58 = v42;
        *(_DWORD *)(a1 + 32) = v43;
        if (v42) {
          goto LABEL_63;
        }
        goto LABEL_84;
      case 3u:
        if (v9 != 24) {
          goto LABEL_55;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v44 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v58 = v44;
          *(_DWORD *)(a1 + 36) = v45;
          if (!v44) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          uint64_t v58 = v16;
          *(_DWORD *)(a1 + 36) = v15;
        }
        goto LABEL_63;
      case 4u:
        if (v9 != 32) {
          goto LABEL_55;
        }
        v5 |= 8u;
        unint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v46 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v58 = v46;
          *(_DWORD *)(a1 + 40) = v47;
          if (!v46) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v19 = v8 + 2;
LABEL_23:
          uint64_t v58 = v19;
          *(_DWORD *)(a1 + 40) = v18;
        }
        goto LABEL_63;
      case 5u:
        if (v9 != 40) {
          goto LABEL_55;
        }
        v5 |= 0x10u;
        unint64_t v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v58 = v48;
          *(_DWORD *)(a1 + 44) = v49;
          if (!v48) {
            goto LABEL_84;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_28:
          uint64_t v58 = v22;
          *(_DWORD *)(a1 + 44) = v21;
        }
        goto LABEL_63;
      case 6u:
        if (v9 != 50) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 24);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          sub_125BD04((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 24) = v26;
          int v8 = v58;
        }
        unint64_t v27 = sub_1252FD4(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_62;
      case 7u:
        if (v9 != 56) {
          goto LABEL_55;
        }
        v5 |= 0x20u;
        unsigned int v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_39;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v50 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v58 = v50;
          *(_DWORD *)(a1 + 48) = v51;
          if (!v50) {
            goto LABEL_84;
          }
        }
        else
        {
          unsigned int v29 = v8 + 2;
LABEL_39:
          uint64_t v58 = v29;
          *(_DWORD *)(a1 + 48) = v28;
        }
        goto LABEL_63;
      case 8u:
        if (v9 != 64) {
          goto LABEL_55;
        }
        v5 |= 0x40u;
        uint64_t v32 = v8 + 1;
        LODWORD(v31) = *v8;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        int v33 = *v32;
        uint64_t v31 = v31 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          int v52 = (char *)sub_188C138((uint64_t)v8, v31);
          uint64_t v58 = v52;
          *(_DWORD *)(a1 + 52) = v53;
          if (!v52) {
            goto LABEL_84;
          }
        }
        else
        {
          uint64_t v32 = v8 + 2;
LABEL_44:
          uint64_t v58 = v32;
          *(_DWORD *)(a1 + 52) = v31;
        }
        goto LABEL_63;
      case 9u:
        if (v9 != 72) {
          goto LABEL_55;
        }
        v5 |= 0x80u;
        unsigned int v35 = v8 + 1;
        LODWORD(v34) = *v8;
        if ((v34 & 0x80) == 0) {
          goto LABEL_49;
        }
        int v36 = *v35;
        uint64_t v34 = v34 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          int v54 = (char *)sub_188C138((uint64_t)v8, v34);
          uint64_t v58 = v54;
          *(_DWORD *)(a1 + 56) = v55;
          if (!v54) {
            goto LABEL_84;
          }
        }
        else
        {
          unsigned int v35 = v8 + 2;
LABEL_49:
          uint64_t v58 = v35;
          *(_DWORD *)(a1 + 56) = v34;
        }
        goto LABEL_63;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_55;
        }
        v5 |= 0x100u;
        int v38 = v8 + 1;
        LODWORD(v37) = *v8;
        if ((v37 & 0x80) == 0) {
          goto LABEL_54;
        }
        int v39 = *v38;
        uint64_t v37 = v37 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v56 = (char *)sub_188C138((uint64_t)v8, v37);
          uint64_t v58 = v56;
          *(_DWORD *)(a1 + 60) = v57;
          if (!v56) {
            goto LABEL_84;
          }
        }
        else
        {
          int v38 = v8 + 2;
LABEL_54:
          uint64_t v58 = v38;
          *(_DWORD *)(a1 + 60) = v37;
        }
        goto LABEL_63;
      default:
LABEL_55:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v7)
          {
            int v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v58;
          }
          unint64_t v27 = (char *)sub_1885AC0(v9, v41, v8, a3);
LABEL_62:
          uint64_t v58 = v27;
          if (!v27) {
            goto LABEL_84;
          }
LABEL_63:
          if (sub_11947B8((uint64_t)a3, &v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_84:
        }
          uint64_t v58 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v58;
    }
  }
}

unsigned char *sub_1253E8C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    unsigned char *v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 24);
    unsigned char *v4 = 50;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    char v4 = sub_1252124(v19, (unint64_t)v21, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 48);
    unsigned char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 52);
    unsigned char *v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v28 = *(int *)(a1 + 56);
    unsigned char *v4 = 72;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unint64_t v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 60);
    unsigned char *v4 = 80;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    uint64_t v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    uint64_t v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_1254388(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
  if (v2)
  {
    unint64_t v4 = sub_1252740(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 10;
  }
  else {
    uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
  }
  result += v6 + 1;
LABEL_12:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v10;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_32;
  }
LABEL_28:
  int v11 = *(_DWORD *)(a1 + 44);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v12;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_36;
  }
LABEL_32:
  int v13 = *(_DWORD *)(a1 + 48);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v14;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_36:
  int v15 = *(_DWORD *)(a1 + 52);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v16;
  if ((v2 & 0x80) == 0)
  {
LABEL_18:
    if ((v2 & 0x100) == 0) {
      goto LABEL_48;
    }
    goto LABEL_44;
  }
LABEL_40:
  int v17 = *(_DWORD *)(a1 + 56);
  if (v17 < 0) {
    uint64_t v18 = 11;
  }
  else {
    uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v18;
  if ((v2 & 0x100) != 0)
  {
LABEL_44:
    int v19 = *(_DWORD *)(a1 + 60);
    if (v19 < 0) {
      uint64_t v20 = 11;
    }
    else {
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v20;
  }
LABEL_48:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v22 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    result += v23;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_12545E4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::pointer data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v9 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v9 = (void *)*v9;
        }
        sub_125BD04((uint64_t)v9);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v10 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v10 = &off_252EFE0;
      }
      uint64_t result = sub_125298C(data, (uint64_t)v10);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_27;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_27:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
LABEL_28:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_29:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
      goto LABEL_11;
    }
LABEL_31:
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x100) != 0)
  {
    int v5 = *(_DWORD *)(a2 + 60);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x100u;
    HIDWORD(v3[2].__r_.__value_.__r.__words[1]) = v5;
  }
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_1254734(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 7) == 0;
}

void *sub_1254760@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.CdmaCellTower");
}

uint64_t sub_1254770(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  int v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_252F0A0)
  {
    uint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_1251B30(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_125483C(uint64_t a1)
{
  sub_1254770(a1);

  operator delete();
}

uint64_t sub_1254874(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1251BDC(*(void *)(result + 32));
  }
LABEL_7:
  if ((v2 & 0x1C) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1254918(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v9 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)unint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        int v15 = (void *)sub_188C244(v14, *(char **)v36, (uint64_t)a3);
        goto LABEL_41;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 4u;
        int v17 = (char *)(v8 + 1);
        LODWORD(v16) = *v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_17;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v30 = sub_188C138((uint64_t)v8, v16);
          *(void *)unint64_t v36 = v30;
          *(_DWORD *)(a1 + 40) = v31;
          if (!v30) {
            goto LABEL_53;
          }
        }
        else
        {
          int v17 = (char *)(v8 + 2);
LABEL_17:
          *(void *)unint64_t v36 = v17;
          *(_DWORD *)(a1 + 40) = v16;
        }
        goto LABEL_42;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        v5 |= 8u;
        uint64_t v20 = (char *)(v8 + 1);
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_22;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v32 = sub_188C138((uint64_t)v8, v19);
          *(void *)unint64_t v36 = v32;
          *(_DWORD *)(a1 + 44) = v33;
          if (!v32) {
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v20 = (char *)(v8 + 2);
LABEL_22:
          *(void *)unint64_t v36 = v20;
          *(_DWORD *)(a1 + 44) = v19;
        }
        goto LABEL_42;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 0x10u;
        uint64_t v23 = (char *)(v8 + 1);
        LODWORD(v22) = *v8;
        if ((v22 & 0x80) == 0) {
          goto LABEL_27;
        }
        int v24 = *v23;
        uint64_t v22 = v22 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v34 = sub_188C138((uint64_t)v8, v22);
          *(void *)unint64_t v36 = v34;
          *(_DWORD *)(a1 + 48) = v35;
          if (!v34) {
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v23 = (char *)(v8 + 2);
LABEL_27:
          *(void *)unint64_t v36 = v23;
          *(_DWORD *)(a1 + 48) = v22;
        }
        goto LABEL_42;
      case 5u:
        if (v9 != 42) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 32);
        if (!v25)
        {
          unint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v26 = (void *)*v26;
          }
          sub_125BD04((uint64_t)v26);
          uint64_t v25 = v27;
          *(void *)(a1 + 32) = v27;
          uint64_t v8 = *(unsigned __int8 **)v36;
        }
        int v15 = sub_1252FD4(a3, v25, v8);
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            unint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v36;
          }
          int v15 = sub_1885AC0(v9, v29, (char *)v8, a3);
LABEL_41:
          *(void *)unint64_t v36 = v15;
          if (!v15) {
            goto LABEL_53;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)unint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

unsigned char *sub_1254C24(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 32);
    unsigned char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    uint64_t v4 = sub_1252124(v16, (unint64_t)v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1254EC8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_26;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    unint64_t v7 = sub_1252740(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v9;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_26;
      }
      goto LABEL_22;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  int v10 = *(_DWORD *)(a1 + 44);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
  if ((v2 & 0x10) != 0)
  {
LABEL_22:
    int v12 = *(_DWORD *)(a1 + 48);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v13;
  }
LABEL_26:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_125505C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    int v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      sub_125BD04((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_252EFE0;
    }
    uint64_t result = sub_125298C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_25:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_125518C(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 2) == 0 || (~*(_DWORD *)(*(void *)(a1 + 32) + 16) & 7) == 0;
}

void *sub_12551B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.CdmaEvdoTower");
}

uint64_t sub_12551C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252F0D8)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1251B30(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1255280(uint64_t a1)
{
  sub_12551C8(a1);

  operator delete();
}

uint64_t sub_12552B8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1251BDC(*(void *)(result + 24));
  }
  if ((v2 & 0x7E) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1255324(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v48 + 2;
      }
    }
    uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        v5 |= 2u;
        uint64_t v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          uint64_t v48 = v13;
          *(_DWORD *)(a1 + 32) = v12;
          goto LABEL_53;
        }
        unint64_t v36 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v48 = v36;
        *(_DWORD *)(a1 + 32) = v37;
        if (v36) {
          goto LABEL_53;
        }
        goto LABEL_70;
      case 2u:
        if (v9 != 16) {
          goto LABEL_45;
        }
        v5 |= 4u;
        unint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v48 = v38;
          *(_DWORD *)(a1 + 36) = v39;
          if (!v38) {
            goto LABEL_70;
          }
        }
        else
        {
          unint64_t v16 = v8 + 2;
LABEL_18:
          uint64_t v48 = v16;
          *(_DWORD *)(a1 + 36) = v15;
        }
        goto LABEL_53;
      case 3u:
        if (v9 != 24) {
          goto LABEL_45;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          BOOL v40 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v48 = v40;
          *(_DWORD *)(a1 + 40) = v41;
          if (!v40) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          uint64_t v48 = v19;
          *(_DWORD *)(a1 + 40) = v18;
        }
        goto LABEL_53;
      case 4u:
        if (v9 != 32) {
          goto LABEL_45;
        }
        v5 |= 0x10u;
        uint64_t v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v42 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v48 = v42;
          *(_DWORD *)(a1 + 44) = v43;
          if (!v42) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_28:
          uint64_t v48 = v22;
          *(_DWORD *)(a1 + 44) = v21;
        }
        goto LABEL_53;
      case 5u:
        if (v9 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 24);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          sub_125BD04((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 24) = v26;
          int v8 = v48;
        }
        uint64_t v27 = sub_1252FD4(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 6u:
        if (v9 != 48) {
          goto LABEL_45;
        }
        v5 |= 0x20u;
        unint64_t v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_39;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          int v44 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v48 = v44;
          *(_DWORD *)(a1 + 48) = v45;
          if (!v44) {
            goto LABEL_70;
          }
        }
        else
        {
          unint64_t v29 = v8 + 2;
LABEL_39:
          uint64_t v48 = v29;
          *(_DWORD *)(a1 + 48) = v28;
        }
        goto LABEL_53;
      case 7u:
        if (v9 != 56) {
          goto LABEL_45;
        }
        v5 |= 0x40u;
        uint64_t v32 = v8 + 1;
        LODWORD(v31) = *v8;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        int v33 = *v32;
        uint64_t v31 = v31 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v46 = (char *)sub_188C138((uint64_t)v8, v31);
          uint64_t v48 = v46;
          *(_DWORD *)(a1 + 52) = v47;
          if (!v46) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v32 = v8 + 2;
LABEL_44:
          uint64_t v48 = v32;
          *(_DWORD *)(a1 + 52) = v31;
        }
        goto LABEL_53;
      default:
LABEL_45:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v48;
          }
          uint64_t v27 = (char *)sub_1885AC0(v9, v35, v8, a3);
LABEL_52:
          uint64_t v48 = v27;
          if (!v27) {
            goto LABEL_70;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          uint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

unsigned char *sub_12556F8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 24);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    char v4 = sub_1252124(v19, (unint64_t)v21, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 48);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 52);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1255AFC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_37;
  }
  if (v2)
  {
    unint64_t v4 = sub_1252740(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_25;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v10;
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v11 = *(_DWORD *)(a1 + 44);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v12;
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_37;
    }
    goto LABEL_33;
  }
LABEL_29:
  int v13 = *(_DWORD *)(a1 + 48);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v14;
  if ((v2 & 0x40) != 0)
  {
LABEL_33:
    int v15 = *(_DWORD *)(a1 + 52);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v16;
  }
LABEL_37:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v18 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    result += v19;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

BOOL sub_1255CE4(uint64_t a1)
{
  return (*(unsigned char *)(a1 + 16) & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 7) == 0;
}

void *sub_1255D10@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.LteCellTower");
}

uint64_t sub_1255D20(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252F110)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1251B30(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1255DD8(uint64_t a1)
{
  sub_1255D20(a1);

  operator delete();
}

uint64_t sub_1255E10(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1251BDC(*(void *)(result + 24));
  }
  if ((v2 & 0x7E) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1255E7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v48 + 1;
    unsigned int v9 = *v48;
    if (*v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v48 + 2;
      }
    }
    uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_45;
        }
        v5 |= 2u;
        int v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v13 = v8 + 2;
LABEL_13:
          uint64_t v48 = v13;
          *(_DWORD *)(a1 + 32) = v12;
          goto LABEL_53;
        }
        unint64_t v36 = (char *)sub_188C138((uint64_t)v8, v12);
        uint64_t v48 = v36;
        *(_DWORD *)(a1 + 32) = v37;
        if (v36) {
          goto LABEL_53;
        }
        goto LABEL_70;
      case 2u:
        if (v9 != 16) {
          goto LABEL_45;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v8, v15);
          uint64_t v48 = v38;
          *(_DWORD *)(a1 + 36) = v39;
          if (!v38) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          uint64_t v48 = v16;
          *(_DWORD *)(a1 + 36) = v15;
        }
        goto LABEL_53;
      case 3u:
        if (v9 != 24) {
          goto LABEL_45;
        }
        v5 |= 8u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          BOOL v40 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v48 = v40;
          *(_DWORD *)(a1 + 40) = v41;
          if (!v40) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_23:
          uint64_t v48 = v19;
          *(_DWORD *)(a1 + 40) = v18;
        }
        goto LABEL_53;
      case 4u:
        if (v9 != 32) {
          goto LABEL_45;
        }
        v5 |= 0x10u;
        unint64_t v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v42 = (char *)sub_188C138((uint64_t)v8, v21);
          uint64_t v48 = v42;
          *(_DWORD *)(a1 + 44) = v43;
          if (!v42) {
            goto LABEL_70;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_28:
          uint64_t v48 = v22;
          *(_DWORD *)(a1 + 44) = v21;
        }
        goto LABEL_53;
      case 5u:
        if (v9 != 42) {
          goto LABEL_45;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 24);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          sub_125BD04((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 24) = v26;
          uint64_t v8 = v48;
        }
        unint64_t v27 = sub_1252FD4(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_45;
        }
        v5 |= 0x20u;
        unint64_t v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_39;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          int v44 = (char *)sub_188C138((uint64_t)v8, v28);
          uint64_t v48 = v44;
          *(_DWORD *)(a1 + 48) = v45;
          if (!v44) {
            goto LABEL_70;
          }
        }
        else
        {
          unint64_t v29 = v8 + 2;
LABEL_39:
          uint64_t v48 = v29;
          *(_DWORD *)(a1 + 48) = v28;
        }
        goto LABEL_53;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_45;
        }
        v5 |= 0x40u;
        uint64_t v32 = v8 + 1;
        LODWORD(v31) = *v8;
        if ((v31 & 0x80) == 0) {
          goto LABEL_44;
        }
        int v33 = *v32;
        uint64_t v31 = v31 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v46 = (char *)sub_188C138((uint64_t)v8, v31);
          uint64_t v48 = v46;
          *(_DWORD *)(a1 + 52) = v47;
          if (!v46) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v32 = v8 + 2;
LABEL_44:
          uint64_t v48 = v32;
          *(_DWORD *)(a1 + 52) = v31;
        }
        goto LABEL_53;
      default:
LABEL_45:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            int v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v48;
          }
          unint64_t v27 = (char *)sub_1885AC0(v9, v35, v8, a3);
LABEL_52:
          uint64_t v48 = v27;
          if (!v27) {
            goto LABEL_70;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          uint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v48;
    }
  }
}

unsigned char *sub_1256264(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 44);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 24);
    unsigned char *v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      uint64_t v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      uint64_t v21 = v4 + 2;
    }
    char v4 = sub_1252124(v19, (unint64_t)v21, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 48);
    unsigned char *v4 = 88;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 52);
    unsigned char *v4 = 96;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v28 = *(void *)(a1 + 8);
  if ((v28 & 1) == 0) {
    return v4;
  }
  unint64_t v30 = v28 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v30 + 31) < 0)
  {
    uint64_t v31 = *(void **)(v30 + 8);
    uint64_t v32 = *(void *)(v30 + 16);
  }
  else
  {
    uint64_t v31 = (void *)(v30 + 8);
    LODWORD(v32) = *(unsigned __int8 *)(v30 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v32)
  {
    uint64_t v33 = (int)v32;
    memcpy(v4, v31, (int)v32);
    v4 += v33;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v31, v32, v4);
}

uint64_t sub_1256668(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((~v2 & 0x1E) != 0)
  {
    uint64_t v5 = sub_1253468((_DWORD *)a1);
    if (v2)
    {
LABEL_17:
      unint64_t v12 = sub_1252740(*(void *)(a1 + 24));
      v5 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    int v3 = *(_DWORD *)(a1 + 32);
    if (v3 < 0) {
      uint64_t v4 = 14;
    }
    else {
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 4;
    }
    int v6 = *(_DWORD *)(a1 + 36);
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
    }
    int v8 = *(_DWORD *)(a1 + 40);
    if (v8 < 0) {
      uint64_t v9 = 10;
    }
    else {
      uint64_t v9 = (9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6;
    }
    int v10 = *(_DWORD *)(a1 + 44);
    if (v10 < 0) {
      uint64_t v11 = 10;
    }
    else {
      uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
    }
    uint64_t v5 = v4 + v7 + v9 + v11;
    if (v2) {
      goto LABEL_17;
    }
  }
  if ((v2 & 0x60) != 0)
  {
    if ((v2 & 0x20) != 0)
    {
      int v13 = *(_DWORD *)(a1 + 48);
      if (v13 < 0) {
        uint64_t v14 = 11;
      }
      else {
        uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v5 += v14;
    }
    if ((v2 & 0x40) != 0)
    {
      int v15 = *(_DWORD *)(a1 + 52);
      if (v15 < 0) {
        uint64_t v16 = 11;
      }
      else {
        uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v5 += v16;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v5 += v20;
  }
  *(_DWORD *)(a1 + 20) = v5;
  return v5;
}

BOOL sub_1256838(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  return (~v1 & 0x1E) == 0 && ((v1 & 1) == 0 || (~*(_DWORD *)(*(void *)(a1 + 24) + 16) & 7) == 0);
}

void *sub_1256870@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "als.ScdmaCellTower");
}

uint64_t sub_1256880(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_252F148)
  {
    int v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_1251B30(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1256938(uint64_t a1)
{
  sub_1256880(a1);

  operator delete();
}

uint64_t sub_1256970(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1251BDC(*(void *)(result + 24));
  }
  if ((v2 & 0x3E) != 0)
  {
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_12569DC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v43 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v43 + 1;
    unsigned int v9 = *v43;
    if (*v43 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v43, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v43 + 2;
      }
    }
    int v43 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_40;
        }
        v5 |= 2u;
        int v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v13 = v8 + 2;
LABEL_13:
          int v43 = v13;
          *(_DWORD *)(a1 + 32) = v12;
          goto LABEL_48;
        }
        uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v12);
        int v43 = v33;
        *(_DWORD *)(a1 + 32) = v34;
        if (v33) {
          goto LABEL_48;
        }
        goto LABEL_63;
      case 2u:
        if (v9 != 16) {
          goto LABEL_40;
        }
        v5 |= 4u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v35 = (char *)sub_188C138((uint64_t)v8, v15);
          int v43 = v35;
          *(_DWORD *)(a1 + 36) = v36;
          if (!v35) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          int v43 = v16;
          *(_DWORD *)(a1 + 36) = v15;
        }
        goto LABEL_48;
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        v5 |= 8u;
        unint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v37 = (char *)sub_188C138((uint64_t)v8, v19);
          int v43 = v37;
          *(void *)(a1 + 40) = v38;
          if (!v37) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_23:
          int v43 = v18;
          *(void *)(a1 + 40) = v19;
        }
        goto LABEL_48;
      case 4u:
        if (v9 != 32) {
          goto LABEL_40;
        }
        v5 |= 0x10u;
        unint64_t v22 = v8 + 1;
        LODWORD(v21) = *v8;
        if ((v21 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v23 = *v22;
        uint64_t v21 = v21 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v39 = (char *)sub_188C138((uint64_t)v8, v21);
          int v43 = v39;
          *(_DWORD *)(a1 + 48) = v40;
          if (!v39) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_28:
          int v43 = v22;
          *(_DWORD *)(a1 + 48) = v21;
        }
        goto LABEL_48;
      case 5u:
        if (v9 != 42) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v24 = *(void *)(a1 + 24);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          sub_125BD04((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 24) = v26;
          int v8 = v43;
        }
        unint64_t v27 = sub_1252FD4(a3, v24, (unsigned __int8 *)v8);
        goto LABEL_47;
      case 6u:
        if (v9 != 48) {
          goto LABEL_40;
        }
        v5 |= 0x20u;
        unint64_t v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_39;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          int v41 = (char *)sub_188C138((uint64_t)v8, v28);
          int v43 = v41;
          *(_DWORD *)(a1 + 52) = v42;
          if (!v41) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v29 = v8 + 2;
LABEL_39:
          int v43 = v29;
          *(_DWORD *)(a1 + 52) = v28;
        }
        goto LABEL_48;
      default:
LABEL_40:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v43;
          }
          unint64_t v27 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_47:
          int v43 = v27;
          if (!v27) {
            goto LABEL_63;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, &v43, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          int v43 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v43;
    }
  }
}