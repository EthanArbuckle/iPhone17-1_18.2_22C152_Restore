uint64_t sub_1843690(uint64_t a1)
{
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  unint64_t v122;
  unint64_t v123;
  unint64_t v124;

  v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    v3 = 0;
    goto LABEL_30;
  }
  if ((v2 & 1) == 0)
  {
    v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  v4 = *(void *)(a1 + 32);
  v5 = *(void *)(v4 + 8);
  if (v5)
  {
    v99 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v99 + 31) < 0) {
      v6 = *(void *)(v99 + 16);
    }
    else {
      v6 = *(unsigned __int8 *)(v99 + 31);
    }
  }
  else
  {
    v6 = 0;
  }
  *(_DWORD *)(v4 + 16) = v6;
  v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    v7 = *(void *)(a1 + 40);
    v8 = *(void *)(v7 + 8);
    if (v8)
    {
      v100 = v8 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v100 + 31) < 0) {
        v9 = *(void *)(v100 + 16);
      }
      else {
        v9 = *(unsigned __int8 *)(v100 + 31);
      }
    }
    else
    {
      v9 = 0;
    }
    *(_DWORD *)(v7 + 16) = v9;
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    v10 = sub_1837E9C(*(void *)(a1 + 48));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_23;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  v11 = *(void *)(a1 + 56);
  v12 = *(void *)(v11 + 8);
  if (v12)
  {
    v101 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v101 + 31) < 0) {
      v13 = *(void *)(v101 + 16);
    }
    else {
      v13 = *(unsigned __int8 *)(v101 + 31);
    }
  }
  else
  {
    v13 = 0;
  }
  *(_DWORD *)(v11 + 16) = v13;
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_24;
  }
LABEL_23:
  v14 = sub_1838774(*(void *)(a1 + 64));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_25;
  }
LABEL_24:
  v15 = sub_1838BE8(*(void *)(a1 + 72));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
LABEL_25:
  v16 = *(void *)(a1 + 80);
  v17 = 2 * (*(_DWORD *)(v16 + 16) & 1);
  v18 = *(void *)(v16 + 8);
  if (v18)
  {
    v102 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v102 + 31) < 0) {
      v103 = *(void *)(v102 + 16);
    }
    else {
      v103 = *(unsigned __int8 *)(v102 + 31);
    }
    v17 += v103;
  }
  *(_DWORD *)(v16 + 20) = v17;
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_27:
    v19 = *(void *)(a1 + 88);
    v20 = *(void *)(v19 + 8);
    if (v20)
    {
      v104 = v20 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v104 + 31) < 0) {
        v21 = *(void *)(v104 + 16);
      }
      else {
        v21 = *(unsigned __int8 *)(v104 + 31);
      }
    }
    else
    {
      v21 = 0;
    }
    *(_DWORD *)(v19 + 16) = v21;
    v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_30:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_56;
  }
  if ((v2 & 0x100) != 0)
  {
    v22 = *(void *)(a1 + 96);
    v23 = *(void *)(v22 + 8);
    if (v23)
    {
      v105 = v23 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v105 + 31) < 0) {
        v24 = *(void *)(v105 + 16);
      }
      else {
        v24 = *(unsigned __int8 *)(v105 + 31);
      }
    }
    else
    {
      v24 = 0;
    }
    *(_DWORD *)(v22 + 16) = v24;
    v3 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_33:
      if ((v2 & 0x400) == 0) {
        goto LABEL_34;
      }
      goto LABEL_44;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_33;
  }
  v25 = sub_18398E8(*(void *)(a1 + 104));
  v3 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0)
  {
LABEL_34:
    if ((v2 & 0x800) == 0) {
      goto LABEL_35;
    }
    goto LABEL_47;
  }
LABEL_44:
  v26 = *(void *)(a1 + 112);
  v27 = *(void *)(v26 + 8);
  if (v27)
  {
    v106 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v106 + 31) < 0) {
      v28 = *(void *)(v106 + 16);
    }
    else {
      v28 = *(unsigned __int8 *)(v106 + 31);
    }
  }
  else
  {
    v28 = 0;
  }
  *(_DWORD *)(v26 + 16) = v28;
  v3 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x800) == 0)
  {
LABEL_35:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_50;
  }
LABEL_47:
  v29 = *(void *)(a1 + 120);
  v30 = *(void *)(v29 + 8);
  if (v30)
  {
    v107 = v30 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v107 + 31) < 0) {
      v31 = *(void *)(v107 + 16);
    }
    else {
      v31 = *(unsigned __int8 *)(v107 + 31);
    }
  }
  else
  {
    v31 = 0;
  }
  *(_DWORD *)(v29 + 16) = v31;
  v3 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_36:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_51;
  }
LABEL_50:
  v32 = sub_183B868(*(void *)(a1 + 128));
  v3 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x2000) == 0)
  {
LABEL_37:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_52;
  }
LABEL_51:
  v33 = sub_183C16C(*(void *)(a1 + 136));
  v3 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x4000) == 0)
  {
LABEL_38:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_53;
  }
LABEL_52:
  v34 = sub_183C580(*(void *)(a1 + 144));
  v3 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x8000) == 0) {
    goto LABEL_56;
  }
LABEL_53:
  v35 = *(void *)(a1 + 152);
  v36 = *(void *)(v35 + 8);
  if (v36)
  {
    v108 = v36 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v108 + 31) < 0) {
      v37 = *(void *)(v108 + 16);
    }
    else {
      v37 = *(unsigned __int8 *)(v108 + 31);
    }
  }
  else
  {
    v37 = 0;
  }
  *(_DWORD *)(v35 + 16) = v37;
  v3 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_56:
  if ((v2 & 0xFF0000) == 0) {
    goto LABEL_86;
  }
  if ((v2 & 0x10000) != 0)
  {
    v38 = *(void *)(a1 + 160);
    v39 = *(void *)(v38 + 8);
    if (v39)
    {
      v109 = v39 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v109 + 31) < 0) {
        v40 = *(void *)(v109 + 16);
      }
      else {
        v40 = *(unsigned __int8 *)(v109 + 31);
      }
    }
    else
    {
      v40 = 0;
    }
    *(_DWORD *)(v38 + 16) = v40;
    v3 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v2 & 0x20000) == 0)
    {
LABEL_59:
      if ((v2 & 0x40000) == 0) {
        goto LABEL_60;
      }
      goto LABEL_72;
    }
  }
  else if ((v2 & 0x20000) == 0)
  {
    goto LABEL_59;
  }
  v41 = *(void *)(a1 + 168);
  v42 = *(void *)(v41 + 8);
  if (v42)
  {
    v110 = v42 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v110 + 31) < 0) {
      v43 = *(void *)(v110 + 16);
    }
    else {
      v43 = *(unsigned __int8 *)(v110 + 31);
    }
  }
  else
  {
    v43 = 0;
  }
  *(_DWORD *)(v41 + 16) = v43;
  v3 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x40000) == 0)
  {
LABEL_60:
    if ((v2 & 0x80000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_75;
  }
LABEL_72:
  v44 = *(void *)(a1 + 176);
  v45 = *(void *)(v44 + 8);
  if (v45)
  {
    v111 = v45 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v111 + 31) < 0) {
      v46 = *(void *)(v111 + 16);
    }
    else {
      v46 = *(unsigned __int8 *)(v111 + 31);
    }
  }
  else
  {
    v46 = 0;
  }
  *(_DWORD *)(v44 + 16) = v46;
  v3 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x80000) == 0)
  {
LABEL_61:
    if ((v2 & 0x100000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_78;
  }
LABEL_75:
  v47 = *(void *)(a1 + 184);
  v48 = *(void *)(v47 + 8);
  if (v48)
  {
    v112 = v48 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v112 + 31) < 0) {
      v49 = *(void *)(v112 + 16);
    }
    else {
      v49 = *(unsigned __int8 *)(v112 + 31);
    }
  }
  else
  {
    v49 = 0;
  }
  *(_DWORD *)(v47 + 16) = v49;
  v3 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x100000) == 0)
  {
LABEL_62:
    if ((v2 & 0x200000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_81;
  }
LABEL_78:
  v50 = *(void *)(a1 + 192);
  v51 = *(void *)(v50 + 8);
  if (v51)
  {
    v113 = v51 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v113 + 31) < 0) {
      v52 = *(void *)(v113 + 16);
    }
    else {
      v52 = *(unsigned __int8 *)(v113 + 31);
    }
  }
  else
  {
    v52 = 0;
  }
  *(_DWORD *)(v50 + 16) = v52;
  v3 += v52 + ((9 * (__clz(v52 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x200000) == 0)
  {
LABEL_63:
    if ((v2 & 0x400000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_82;
  }
LABEL_81:
  v53 = sub_183E890(*(void *)(a1 + 200));
  v3 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x400000) == 0)
  {
LABEL_64:
    if ((v2 & 0x800000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_83;
  }
LABEL_82:
  v54 = sub_183EC98(*(void *)(a1 + 208));
  v3 += v54 + ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x800000) == 0) {
    goto LABEL_86;
  }
LABEL_83:
  v55 = *(void *)(a1 + 216);
  v56 = *(void *)(v55 + 8);
  if (v56)
  {
    v114 = v56 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v114 + 31) < 0) {
      v57 = *(void *)(v114 + 16);
    }
    else {
      v57 = *(unsigned __int8 *)(v114 + 31);
    }
  }
  else
  {
    v57 = 0;
  }
  *(_DWORD *)(v55 + 16) = v57;
  v3 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_86:
  if (!HIBYTE(v2)) {
    goto LABEL_118;
  }
  if ((v2 & 0x1000000) != 0)
  {
    v58 = *(void *)(a1 + 224);
    v59 = *(void *)(v58 + 8);
    if (v59)
    {
      v118 = v59 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v118 + 31) < 0) {
        v60 = *(void *)(v118 + 16);
      }
      else {
        v60 = *(unsigned __int8 *)(v118 + 31);
      }
    }
    else
    {
      v60 = 0;
    }
    *(_DWORD *)(v58 + 16) = v60;
    v3 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v2 & 0x2000000) == 0)
    {
LABEL_89:
      if ((v2 & 0x4000000) == 0) {
        goto LABEL_90;
      }
      goto LABEL_102;
    }
  }
  else if ((v2 & 0x2000000) == 0)
  {
    goto LABEL_89;
  }
  v61 = *(void *)(a1 + 232);
  v62 = *(void *)(v61 + 8);
  if (v62)
  {
    v119 = v62 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v119 + 31) < 0) {
      v63 = *(void *)(v119 + 16);
    }
    else {
      v63 = *(unsigned __int8 *)(v119 + 31);
    }
  }
  else
  {
    v63 = 0;
  }
  *(_DWORD *)(v61 + 16) = v63;
  v3 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x4000000) == 0)
  {
LABEL_90:
    if ((v2 & 0x8000000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_105;
  }
LABEL_102:
  v64 = *(void *)(a1 + 240);
  v65 = *(void *)(v64 + 8);
  if (v65)
  {
    v120 = v65 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v120 + 31) < 0) {
      v66 = *(void *)(v120 + 16);
    }
    else {
      v66 = *(unsigned __int8 *)(v120 + 31);
    }
  }
  else
  {
    v66 = 0;
  }
  *(_DWORD *)(v64 + 16) = v66;
  v3 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x8000000) == 0)
  {
LABEL_91:
    if ((v2 & 0x10000000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_108;
  }
LABEL_105:
  v67 = *(void *)(a1 + 248);
  v68 = *(void *)(v67 + 8);
  if (v68)
  {
    v121 = v68 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v121 + 31) < 0) {
      v69 = *(void *)(v121 + 16);
    }
    else {
      v69 = *(unsigned __int8 *)(v121 + 31);
    }
  }
  else
  {
    v69 = 0;
  }
  *(_DWORD *)(v67 + 16) = v69;
  v3 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x10000000) == 0)
  {
LABEL_92:
    if ((v2 & 0x20000000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_109;
  }
LABEL_108:
  v70 = sub_183DF58(*(void *)(a1 + 256));
  v3 += v70 + ((9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x20000000) == 0)
  {
LABEL_93:
    if ((v2 & 0x40000000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_112;
  }
LABEL_109:
  v71 = *(void *)(a1 + 264);
  v72 = *(void *)(v71 + 8);
  if (v72)
  {
    v122 = v72 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v122 + 31) < 0) {
      v73 = *(void *)(v122 + 16);
    }
    else {
      v73 = *(unsigned __int8 *)(v122 + 31);
    }
  }
  else
  {
    v73 = 0;
  }
  *(_DWORD *)(v71 + 16) = v73;
  v3 += v73 + ((9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x40000000) == 0)
  {
LABEL_94:
    if ((v2 & 0x80000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_115;
  }
LABEL_112:
  v74 = *(void *)(a1 + 272);
  v75 = *(void *)(v74 + 8);
  if (v75)
  {
    v123 = v75 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v123 + 31) < 0) {
      v76 = *(void *)(v123 + 16);
    }
    else {
      v76 = *(unsigned __int8 *)(v123 + 31);
    }
  }
  else
  {
    v76 = 0;
  }
  *(_DWORD *)(v74 + 16) = v76;
  v3 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x80000000) != 0)
  {
LABEL_115:
    v77 = *(void *)(a1 + 280);
    v78 = *(void *)(v77 + 8);
    if (v78)
    {
      v124 = v78 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v124 + 31) < 0) {
        v79 = *(void *)(v124 + 16);
      }
      else {
        v79 = *(unsigned __int8 *)(v124 + 31);
      }
    }
    else
    {
      v79 = 0;
    }
    *(_DWORD *)(v77 + 16) = v79;
    v3 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_118:
  v80 = *(_DWORD *)(a1 + 20);
  if ((v80 & 0x3F) == 0) {
    goto LABEL_144;
  }
  if (v80)
  {
    v81 = *(void *)(a1 + 288);
    v82 = *(void *)(v81 + 8);
    if (v82)
    {
      v115 = v82 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v115 + 31) < 0) {
        v83 = *(void *)(v115 + 16);
      }
      else {
        v83 = *(unsigned __int8 *)(v115 + 31);
      }
    }
    else
    {
      v83 = 0;
    }
    *(_DWORD *)(v81 + 16) = v83;
    v3 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v80 & 2) == 0)
    {
LABEL_121:
      if ((v80 & 4) == 0) {
        goto LABEL_122;
      }
      goto LABEL_132;
    }
  }
  else if ((v80 & 2) == 0)
  {
    goto LABEL_121;
  }
  v84 = *(void *)(a1 + 296);
  v85 = *(void *)(v84 + 8);
  if (v85)
  {
    v116 = v85 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v116 + 31) < 0) {
      v86 = *(void *)(v116 + 16);
    }
    else {
      v86 = *(unsigned __int8 *)(v116 + 31);
    }
  }
  else
  {
    v86 = 0;
  }
  *(_DWORD *)(v84 + 16) = v86;
  v3 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v80 & 4) == 0)
  {
LABEL_122:
    if ((v80 & 8) == 0) {
      goto LABEL_123;
    }
    goto LABEL_135;
  }
LABEL_132:
  v87 = *(void *)(a1 + 304);
  v88 = *(void *)(v87 + 8);
  if (v88)
  {
    v117 = v88 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v117 + 31) < 0) {
      v89 = *(void *)(v117 + 16);
    }
    else {
      v89 = *(unsigned __int8 *)(v117 + 31);
    }
  }
  else
  {
    v89 = 0;
  }
  *(_DWORD *)(v87 + 16) = v89;
  v3 += v89 + ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v80 & 8) == 0)
  {
LABEL_123:
    if ((v80 & 0x10) == 0) {
      goto LABEL_124;
    }
    goto LABEL_136;
  }
LABEL_135:
  v90 = sub_1843690(*(void *)(a1 + 312));
  v3 += v90 + ((9 * (__clz(v90 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v80 & 0x10) == 0)
  {
LABEL_124:
    if ((v80 & 0x20) == 0) {
      goto LABEL_144;
    }
    goto LABEL_140;
  }
LABEL_136:
  v91 = *(_DWORD *)(a1 + 320);
  if (v91 < 0) {
    v92 = 11;
  }
  else {
    v92 = ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v92;
  if ((v80 & 0x20) != 0)
  {
LABEL_140:
    v93 = *(_DWORD *)(a1 + 324);
    if (v93 < 0) {
      v94 = 12;
    }
    else {
      v94 = ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v3 += v94;
  }
LABEL_144:
  v95 = *(void *)(a1 + 8);
  if (v95)
  {
    v97 = v95 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v97 + 31) < 0) {
      v98 = *(void *)(v97 + 16);
    }
    else {
      v98 = *(unsigned __int8 *)(v97 + 31);
    }
    v3 += v98;
  }
  *(_DWORD *)(a1 + 24) = v3;
  return v3;
}

void sub_18442D4(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_75;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 32);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        v7 = (void *)*v7;
      }
      uint64_t v5 = sub_1848A68((uint64_t)v7);
      *(void *)(a1 + 32) = v5;
    }
    v8 = *(uint64_t (****)())(a2 + 32);
    if (!v8) {
      v8 = &off_254CC28;
    }
    unint64_t v9 = (unint64_t)v8[1];
    if (v9) {
      sub_188B4F8((uint64_t *)(v5 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 40);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1848AE0((uint64_t)v12);
      *(void *)(a1 + 40) = v10;
    }
    v13 = *(uint64_t (****)())(a2 + 40);
    if (!v13) {
      v13 = &off_254CC40;
    }
    unint64_t v14 = (unint64_t)v13[1];
    if (v14) {
      sub_188B4F8((uint64_t *)(v10 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 4) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 4u;
    v15 = *(std::string **)(a1 + 48);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        v17 = (void *)*v17;
      }
      v15 = (std::string *)sub_1848B58((uint64_t)v17);
      *(void *)(a1 + 48) = v15;
    }
    if (*(void *)(a2 + 48)) {
      v18 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      v18 = &off_254CC58;
    }
    sub_11A442C(v15, (uint64_t)v18);
  }
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v19 = *(void *)(a1 + 56);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        v21 = (void *)*v21;
      }
      uint64_t v19 = sub_1848BD0((uint64_t)v21);
      *(void *)(a1 + 56) = v19;
    }
    v22 = *(uint64_t (****)())(a2 + 56);
    if (!v22) {
      v22 = &off_254CC78;
    }
    unint64_t v23 = (unint64_t)v22[1];
    if (v23) {
      sub_188B4F8((uint64_t *)(v19 + 8), (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10u;
    v24 = *(std::string **)(a1 + 64);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        v26 = (void *)*v26;
      }
      v24 = (std::string *)sub_1848C48((uint64_t)v26);
      *(void *)(a1 + 64) = v24;
    }
    if (*(void *)(a2 + 64)) {
      v27 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      v27 = &off_254CC90;
    }
    sub_11E3E70(v24, (uint64_t)v27);
    if ((v4 & 0x20) == 0)
    {
LABEL_40:
      if ((v4 & 0x40) == 0) {
        goto LABEL_41;
      }
      goto LABEL_59;
    }
  }
  else if ((v4 & 0x20) == 0)
  {
    goto LABEL_40;
  }
  *(_DWORD *)(a1 + 16) |= 0x20u;
  v28 = *(std::string **)(a1 + 72);
  if (!v28)
  {
    uint64_t v29 = *(void *)(a1 + 8);
    v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      v30 = (void *)*v30;
    }
    v28 = (std::string *)sub_1848CE4((uint64_t)v30);
    *(void *)(a1 + 72) = v28;
  }
  if (*(void *)(a2 + 72)) {
    v31 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    v31 = &off_254CCC0;
  }
  sub_11A7934(v28, (uint64_t)v31);
  if ((v4 & 0x40) == 0)
  {
LABEL_41:
    if ((v4 & 0x80) == 0) {
      goto LABEL_75;
    }
    goto LABEL_67;
  }
LABEL_59:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  v32 = *(std::string **)(a1 + 80);
  if (!v32)
  {
    uint64_t v33 = *(void *)(a1 + 8);
    v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
    if (v33) {
      v34 = (void *)*v34;
    }
    v32 = (std::string *)sub_1848D60((uint64_t)v34);
    *(void *)(a1 + 80) = v32;
  }
  if (*(void *)(a2 + 80)) {
    v35 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    v35 = &off_254CCE0;
  }
  sub_13221BC(v32, (uint64_t)v35);
  if ((v4 & 0x80) != 0)
  {
LABEL_67:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v36 = *(void *)(a1 + 88);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        v38 = (void *)*v38;
      }
      uint64_t v36 = sub_1848DDC((uint64_t)v38);
      *(void *)(a1 + 88) = v36;
    }
    v39 = *(uint64_t (****)())(a2 + 88);
    if (!v39) {
      v39 = &off_254CD00;
    }
    unint64_t v40 = (unint64_t)v39[1];
    if (v40) {
      sub_188B4F8((uint64_t *)(v36 + 8), (v40 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_75:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_149;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v41 = *(void *)(a1 + 96);
    if (!v41)
    {
      uint64_t v42 = *(void *)(a1 + 8);
      v43 = (void *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
      if (v42) {
        v43 = (void *)*v43;
      }
      uint64_t v41 = sub_1848E54((uint64_t)v43);
      *(void *)(a1 + 96) = v41;
    }
    v44 = *(uint64_t (****)())(a2 + 96);
    if (!v44) {
      v44 = &off_254CD18;
    }
    unint64_t v45 = (unint64_t)v44[1];
    if (v45) {
      sub_188B4F8((uint64_t *)(v41 + 8), (v45 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x200) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x200u;
    v46 = *(std::string **)(a1 + 104);
    if (!v46)
    {
      uint64_t v47 = *(void *)(a1 + 8);
      v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
      if (v47) {
        v48 = (void *)*v48;
      }
      v46 = (std::string *)sub_1848ECC((uint64_t)v48);
      *(void *)(a1 + 104) = v46;
    }
    if (*(void *)(a2 + 104)) {
      v49 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      v49 = &off_254CD30;
    }
    sub_11A7934(v46, (uint64_t)v49);
  }
  if ((v4 & 0x400) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x400u;
    uint64_t v50 = *(void *)(a1 + 112);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        v52 = (void *)*v52;
      }
      uint64_t v50 = sub_1848F48((uint64_t)v52);
      *(void *)(a1 + 112) = v50;
    }
    v53 = *(uint64_t (****)())(a2 + 112);
    if (!v53) {
      v53 = &off_254CD50;
    }
    unint64_t v54 = (unint64_t)v53[1];
    if (v54) {
      sub_188B4F8((uint64_t *)(v50 + 8), (v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x800) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x800u;
    uint64_t v55 = *(void *)(a1 + 120);
    if (!v55)
    {
      uint64_t v56 = *(void *)(a1 + 8);
      v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
      if (v56) {
        v57 = (void *)*v57;
      }
      uint64_t v55 = sub_18490B0((uint64_t)v57);
      *(void *)(a1 + 120) = v55;
    }
    v58 = *(uint64_t (****)())(a2 + 120);
    if (!v58) {
      v58 = &off_254CD98;
    }
    unint64_t v59 = (unint64_t)v58[1];
    if (v59) {
      sub_188B4F8((uint64_t *)(v55 + 8), (v59 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x1000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x1000u;
    uint64_t v60 = *(void *)(a1 + 128);
    if (!v60)
    {
      uint64_t v61 = *(void *)(a1 + 8);
      v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
      if (v61) {
        v62 = (void *)*v62;
      }
      uint64_t v60 = sub_18491A8((uint64_t)v62);
      *(void *)(a1 + 128) = v60;
    }
    if (*(void *)(a2 + 128)) {
      v63 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      v63 = &off_254CDE0;
    }
    sub_183BACC(v60, (uint64_t)v63);
    if ((v4 & 0x2000) == 0)
    {
LABEL_114:
      if ((v4 & 0x4000) == 0) {
        goto LABEL_115;
      }
      goto LABEL_133;
    }
  }
  else if ((v4 & 0x2000) == 0)
  {
    goto LABEL_114;
  }
  *(_DWORD *)(a1 + 16) |= 0x2000u;
  v64 = *(std::string **)(a1 + 136);
  if (!v64)
  {
    uint64_t v65 = *(void *)(a1 + 8);
    v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
    if (v65) {
      v66 = (void *)*v66;
    }
    v64 = (std::string *)sub_1849264((uint64_t)v66);
    *(void *)(a1 + 136) = v64;
  }
  if (*(void *)(a2 + 136)) {
    v67 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    v67 = &off_254CE50;
  }
  sub_11A7934(v64, (uint64_t)v67);
  if ((v4 & 0x4000) == 0)
  {
LABEL_115:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_149;
    }
    goto LABEL_141;
  }
LABEL_133:
  *(_DWORD *)(a1 + 16) |= 0x4000u;
  v68 = *(std::string **)(a1 + 144);
  if (!v68)
  {
    uint64_t v69 = *(void *)(a1 + 8);
    v70 = (void *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
    if (v69) {
      v70 = (void *)*v70;
    }
    v68 = (std::string *)sub_18492E0((uint64_t)v70);
    *(void *)(a1 + 144) = v68;
  }
  if (*(void *)(a2 + 144)) {
    v71 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    v71 = &off_254CE70;
  }
  sub_11A7934(v68, (uint64_t)v71);
  if ((v4 & 0x8000) != 0)
  {
LABEL_141:
    *(_DWORD *)(a1 + 16) |= 0x8000u;
    uint64_t v72 = *(void *)(a1 + 152);
    if (!v72)
    {
      uint64_t v73 = *(void *)(a1 + 8);
      v74 = (void *)(v73 & 0xFFFFFFFFFFFFFFFCLL);
      if (v73) {
        v74 = (void *)*v74;
      }
      uint64_t v72 = sub_184935C((uint64_t)v74);
      *(void *)(a1 + 152) = v72;
    }
    v75 = *(uint64_t (****)())(a2 + 152);
    if (!v75) {
      v75 = &off_254CE90;
    }
    unint64_t v76 = (unint64_t)v75[1];
    if (v76) {
      sub_188B4F8((uint64_t *)(v72 + 8), (v76 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_149:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_223;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x10000u;
    uint64_t v77 = *(void *)(a1 + 160);
    if (!v77)
    {
      uint64_t v78 = *(void *)(a1 + 8);
      v79 = (void *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
      if (v78) {
        v79 = (void *)*v79;
      }
      uint64_t v77 = sub_18493D4((uint64_t)v79);
      *(void *)(a1 + 160) = v77;
    }
    v80 = *(uint64_t (****)())(a2 + 160);
    if (!v80) {
      v80 = &off_254CEA8;
    }
    unint64_t v81 = (unint64_t)v80[1];
    if (v81) {
      sub_188B4F8((uint64_t *)(v77 + 8), (v81 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x20000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x20000u;
    uint64_t v82 = *(void *)(a1 + 168);
    if (!v82)
    {
      uint64_t v83 = *(void *)(a1 + 8);
      v84 = (void *)(v83 & 0xFFFFFFFFFFFFFFFCLL);
      if (v83) {
        v84 = (void *)*v84;
      }
      uint64_t v82 = sub_184944C((uint64_t)v84);
      *(void *)(a1 + 168) = v82;
    }
    v85 = *(uint64_t (****)())(a2 + 168);
    if (!v85) {
      v85 = &off_254CEC0;
    }
    unint64_t v86 = (unint64_t)v85[1];
    if (v86) {
      sub_188B4F8((uint64_t *)(v82 + 8), (v86 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x40000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x40000u;
    uint64_t v87 = *(void *)(a1 + 176);
    if (!v87)
    {
      uint64_t v88 = *(void *)(a1 + 8);
      v89 = (void *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
      if (v88) {
        v89 = (void *)*v89;
      }
      uint64_t v87 = sub_18494C4((uint64_t)v89);
      *(void *)(a1 + 176) = v87;
    }
    v90 = *(uint64_t (****)())(a2 + 176);
    if (!v90) {
      v90 = &off_254CED8;
    }
    unint64_t v91 = (unint64_t)v90[1];
    if (v91) {
      sub_188B4F8((uint64_t *)(v87 + 8), (v91 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x80000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x80000u;
    uint64_t v92 = *(void *)(a1 + 184);
    if (!v92)
    {
      uint64_t v93 = *(void *)(a1 + 8);
      v94 = (void *)(v93 & 0xFFFFFFFFFFFFFFFCLL);
      if (v93) {
        v94 = (void *)*v94;
      }
      uint64_t v92 = sub_184953C((uint64_t)v94);
      *(void *)(a1 + 184) = v92;
    }
    v95 = *(uint64_t (****)())(a2 + 184);
    if (!v95) {
      v95 = &off_254CEF0;
    }
    unint64_t v96 = (unint64_t)v95[1];
    if (v96) {
      sub_188B4F8((uint64_t *)(v92 + 8), (v96 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x100000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100000u;
    uint64_t v97 = *(void *)(a1 + 192);
    if (!v97)
    {
      uint64_t v98 = *(void *)(a1 + 8);
      v99 = (void *)(v98 & 0xFFFFFFFFFFFFFFFCLL);
      if (v98) {
        v99 = (void *)*v99;
      }
      uint64_t v97 = sub_18495B4((uint64_t)v99);
      *(void *)(a1 + 192) = v97;
    }
    v100 = *(uint64_t (****)())(a2 + 192);
    if (!v100) {
      v100 = &off_254CF08;
    }
    unint64_t v101 = (unint64_t)v100[1];
    if (v101) {
      sub_188B4F8((uint64_t *)(v97 + 8), (v101 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 0x200000) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x200000u;
    v102 = *(std::string **)(a1 + 200);
    if (!v102)
    {
      uint64_t v103 = *(void *)(a1 + 8);
      v104 = (void *)(v103 & 0xFFFFFFFFFFFFFFFCLL);
      if (v103) {
        v104 = (void *)*v104;
      }
      v102 = (std::string *)sub_1849888((uint64_t)v104);
      *(void *)(a1 + 200) = v102;
    }
    if (*(void *)(a2 + 200)) {
      v105 = *(uint64_t (****)())(a2 + 200);
    }
    else {
      v105 = &off_254CFA0;
    }
    sub_12329D0(v102, (uint64_t)v105);
    if ((v4 & 0x400000) == 0)
    {
LABEL_197:
      if ((v4 & 0x800000) == 0) {
        goto LABEL_223;
      }
      goto LABEL_215;
    }
  }
  else if ((v4 & 0x400000) == 0)
  {
    goto LABEL_197;
  }
  *(_DWORD *)(a1 + 16) |= 0x400000u;
  v106 = *(std::string **)(a1 + 208);
  if (!v106)
  {
    uint64_t v107 = *(void *)(a1 + 8);
    v108 = (void *)(v107 & 0xFFFFFFFFFFFFFFFCLL);
    if (v107) {
      v108 = (void *)*v108;
    }
    v106 = (std::string *)sub_184990C((uint64_t)v108);
    *(void *)(a1 + 208) = v106;
  }
  if (*(void *)(a2 + 208)) {
    v109 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    v109 = &off_254CFC0;
  }
  sub_11A7934(v106, (uint64_t)v109);
  if ((v4 & 0x800000) != 0)
  {
LABEL_215:
    *(_DWORD *)(a1 + 16) |= 0x800000u;
    uint64_t v110 = *(void *)(a1 + 216);
    if (!v110)
    {
      uint64_t v111 = *(void *)(a1 + 8);
      v112 = (void *)(v111 & 0xFFFFFFFFFFFFFFFCLL);
      if (v111) {
        v112 = (void *)*v112;
      }
      uint64_t v110 = sub_1849988((uint64_t)v112);
      *(void *)(a1 + 216) = v110;
    }
    v113 = *(uint64_t (****)())(a2 + 216);
    if (!v113) {
      v113 = &off_254CFE0;
    }
    unint64_t v114 = (unint64_t)v113[1];
    if (v114) {
      sub_188B4F8((uint64_t *)(v110 + 8), (v114 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_223:
  if (HIBYTE(v4))
  {
    if ((v4 & 0x1000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x1000000u;
      uint64_t v115 = *(void *)(a1 + 224);
      if (!v115)
      {
        uint64_t v116 = *(void *)(a1 + 8);
        v117 = (void *)(v116 & 0xFFFFFFFFFFFFFFFCLL);
        if (v116) {
          v117 = (void *)*v117;
        }
        uint64_t v115 = sub_1848FC0((uint64_t)v117);
        *(void *)(a1 + 224) = v115;
      }
      v118 = *(uint64_t (****)())(a2 + 224);
      if (!v118) {
        v118 = &off_254CD68;
      }
      unint64_t v119 = (unint64_t)v118[1];
      if (v119) {
        sub_188B4F8((uint64_t *)(v115 + 8), (v119 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x2000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x2000000u;
      uint64_t v120 = *(void *)(a1 + 232);
      if (!v120)
      {
        uint64_t v121 = *(void *)(a1 + 8);
        v122 = (void *)(v121 & 0xFFFFFFFFFFFFFFFCLL);
        if (v121) {
          v122 = (void *)*v122;
        }
        uint64_t v120 = sub_1849038((uint64_t)v122);
        *(void *)(a1 + 232) = v120;
      }
      v123 = *(uint64_t (****)())(a2 + 232);
      if (!v123) {
        v123 = &off_254CD80;
      }
      unint64_t v124 = (unint64_t)v123[1];
      if (v124) {
        sub_188B4F8((uint64_t *)(v120 + 8), (v124 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x4000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x4000000u;
      uint64_t v125 = *(void *)(a1 + 240);
      if (!v125)
      {
        uint64_t v126 = *(void *)(a1 + 8);
        v127 = (void *)(v126 & 0xFFFFFFFFFFFFFFFCLL);
        if (v126) {
          v127 = (void *)*v127;
        }
        uint64_t v125 = sub_184962C((uint64_t)v127);
        *(void *)(a1 + 240) = v125;
      }
      v128 = *(uint64_t (****)())(a2 + 240);
      if (!v128) {
        v128 = &off_254CF20;
      }
      unint64_t v129 = (unint64_t)v128[1];
      if (v129) {
        sub_188B4F8((uint64_t *)(v125 + 8), (v129 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x8000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x8000000u;
      uint64_t v130 = *(void *)(a1 + 248);
      if (!v130)
      {
        uint64_t v131 = *(void *)(a1 + 8);
        v132 = (void *)(v131 & 0xFFFFFFFFFFFFFFFCLL);
        if (v131) {
          v132 = (void *)*v132;
        }
        uint64_t v130 = sub_18496A4((uint64_t)v132);
        *(void *)(a1 + 248) = v130;
      }
      v133 = *(uint64_t (****)())(a2 + 248);
      if (!v133) {
        v133 = &off_254CF38;
      }
      unint64_t v134 = (unint64_t)v133[1];
      if (v134) {
        sub_188B4F8((uint64_t *)(v130 + 8), (v134 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x10000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x10000000u;
      v135 = *(std::string **)(a1 + 256);
      if (!v135)
      {
        uint64_t v136 = *(void *)(a1 + 8);
        v137 = (void *)(v136 & 0xFFFFFFFFFFFFFFFCLL);
        if (v136) {
          v137 = (void *)*v137;
        }
        v135 = (std::string *)sub_184971C((uint64_t)v137);
        *(void *)(a1 + 256) = v135;
      }
      if (*(void *)(a2 + 256)) {
        v138 = *(uint64_t (****)())(a2 + 256);
      }
      else {
        v138 = &off_254CF50;
      }
      sub_11A7934(v135, (uint64_t)v138);
    }
    if ((v4 & 0x20000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x20000000u;
      uint64_t v139 = *(void *)(a1 + 264);
      if (!v139)
      {
        uint64_t v140 = *(void *)(a1 + 8);
        v141 = (void *)(v140 & 0xFFFFFFFFFFFFFFFCLL);
        if (v140) {
          v141 = (void *)*v141;
        }
        uint64_t v139 = sub_1849810((uint64_t)v141);
        *(void *)(a1 + 264) = v139;
      }
      v142 = *(uint64_t (****)())(a2 + 264);
      if (!v142) {
        v142 = &off_254CF88;
      }
      unint64_t v143 = (unint64_t)v142[1];
      if (v143) {
        sub_188B4F8((uint64_t *)(v139 + 8), (v143 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x40000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x40000000u;
      uint64_t v144 = *(void *)(a1 + 272);
      if (!v144)
      {
        uint64_t v145 = *(void *)(a1 + 8);
        v146 = (void *)(v145 & 0xFFFFFFFFFFFFFFFCLL);
        if (v145) {
          v146 = (void *)*v146;
        }
        uint64_t v144 = sub_1849798((uint64_t)v146);
        *(void *)(a1 + 272) = v144;
      }
      v147 = *(uint64_t (****)())(a2 + 272);
      if (!v147) {
        v147 = &off_254CF70;
      }
      unint64_t v148 = (unint64_t)v147[1];
      if (v148) {
        sub_188B4F8((uint64_t *)(v144 + 8), (v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v4 & 0x80000000) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 0x80000000;
      uint64_t v149 = *(void *)(a1 + 280);
      if (!v149)
      {
        uint64_t v150 = *(void *)(a1 + 8);
        v151 = (void *)(v150 & 0xFFFFFFFFFFFFFFFCLL);
        if (v150) {
          v151 = (void *)*v151;
        }
        uint64_t v149 = sub_1849A00((uint64_t)v151);
        *(void *)(a1 + 280) = v149;
      }
      v152 = *(uint64_t (****)())(a2 + 280);
      if (!v152) {
        v152 = &off_254CFF8;
      }
      unint64_t v153 = (unint64_t)v152[1];
      if (v153) {
        sub_188B4F8((uint64_t *)(v149 + 8), (v153 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
  }
  int v154 = *(_DWORD *)(a2 + 20);
  if ((v154 & 0x3F) != 0)
  {
    if (v154)
    {
      *(_DWORD *)(a1 + 20) |= 1u;
      uint64_t v155 = *(void *)(a1 + 288);
      if (!v155)
      {
        uint64_t v156 = *(void *)(a1 + 8);
        v157 = (void *)(v156 & 0xFFFFFFFFFFFFFFFCLL);
        if (v156) {
          v157 = (void *)*v157;
        }
        uint64_t v155 = sub_1849A78((uint64_t)v157);
        *(void *)(a1 + 288) = v155;
      }
      v158 = *(uint64_t (****)())(a2 + 288);
      if (!v158) {
        v158 = &off_254D010;
      }
      unint64_t v159 = (unint64_t)v158[1];
      if (v159) {
        sub_188B4F8((uint64_t *)(v155 + 8), (v159 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v154 & 2) != 0)
    {
      *(_DWORD *)(a1 + 20) |= 2u;
      uint64_t v160 = *(void *)(a1 + 296);
      if (!v160)
      {
        uint64_t v161 = *(void *)(a1 + 8);
        v162 = (void *)(v161 & 0xFFFFFFFFFFFFFFFCLL);
        if (v161) {
          v162 = (void *)*v162;
        }
        uint64_t v160 = sub_1849AF0((uint64_t)v162);
        *(void *)(a1 + 296) = v160;
      }
      v163 = *(uint64_t (****)())(a2 + 296);
      if (!v163) {
        v163 = &off_254D028;
      }
      unint64_t v164 = (unint64_t)v163[1];
      if (v164) {
        sub_188B4F8((uint64_t *)(v160 + 8), (v164 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v154 & 4) != 0)
    {
      *(_DWORD *)(a1 + 20) |= 4u;
      uint64_t v165 = *(void *)(a1 + 304);
      if (!v165)
      {
        uint64_t v166 = *(void *)(a1 + 8);
        v167 = (void *)(v166 & 0xFFFFFFFFFFFFFFFCLL);
        if (v166) {
          v167 = (void *)*v167;
        }
        uint64_t v165 = sub_1849B68((uint64_t)v167);
        *(void *)(a1 + 304) = v165;
      }
      v168 = *(uint64_t (****)())(a2 + 304);
      if (!v168) {
        v168 = &off_254D040;
      }
      unint64_t v169 = (unint64_t)v168[1];
      if (v169) {
        sub_188B4F8((uint64_t *)(v165 + 8), (v169 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
    }
    if ((v154 & 8) != 0)
    {
      *(_DWORD *)(a1 + 20) |= 8u;
      if (!*(void *)(a1 + 312))
      {
        uint64_t v171 = *(void *)(a1 + 8);
        v172 = (void *)(v171 & 0xFFFFFFFFFFFFFFFCLL);
        if (v171) {
          v172 = (void *)*v172;
        }
        sub_1849BE0((uint64_t)v172);
        *(void *)(a1 + 312) = v173;
      }
      sub_18442D4();
      if ((v154 & 0x10) == 0)
      {
LABEL_326:
        if ((v154 & 0x20) == 0)
        {
LABEL_328:
          *(_DWORD *)(a1 + 20) |= v154;
          goto LABEL_329;
        }
LABEL_327:
        *(_DWORD *)(a1 + 324) = *(_DWORD *)(a2 + 324);
        goto LABEL_328;
      }
    }
    else if ((v154 & 0x10) == 0)
    {
      goto LABEL_326;
    }
    *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
    if ((v154 & 0x20) == 0) {
      goto LABEL_328;
    }
    goto LABEL_327;
  }
LABEL_329:
  uint64_t v170 = *(void *)(a2 + 8);
  if (v170)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v170 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1845050(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 17) & 0x10) == 0 || (uint64_t result = sub_183BD18(*(void *)(a1 + 128)), result))
  {
    if ((*(unsigned char *)(a1 + 20) & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_1845050(*(void *)(a1 + 312));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_184509C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutUnit");
}

void *sub_18450AC(void *a1)
{
  v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_187AB20(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_184512C(void *a1)
{
  sub_18450AC(a1);

  operator delete();
}

uint64_t sub_1845164(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_184004C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_WORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_18451E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  v7 = (void *)(a1 + 8);
  while (1)
  {
    v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        v8 = v32 + 2;
      }
    }
    v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        v32 = v16;
        *(unsigned char *)(a1 + 49) = v17 != 0;
        goto LABEL_44;
      }
      v28 = (char *)sub_188C138((uint64_t)v8, v17);
      v32 = v28;
      *(unsigned char *)(a1 + 49) = v29 != 0;
      if (!v28) {
        goto LABEL_49;
      }
      goto LABEL_44;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 1u;
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      v32 = v19;
      *(unsigned char *)(a1 + 48) = v20 != 0;
      goto LABEL_44;
    }
    v30 = (char *)sub_188C138((uint64_t)v8, v20);
    v32 = v30;
    *(unsigned char *)(a1 + 48) = v31 != 0;
    if (!v30) {
      goto LABEL_49;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    v22 = v8 - 1;
    while (1)
    {
      unint64_t v23 = (unsigned __int8 *)(v22 + 1);
      v32 = v22 + 1;
      v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        sub_1849BE0(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, v27);
        unint64_t v23 = (unsigned __int8 *)v32;
      }
      v22 = sub_18425A8(a3, v26, v23);
      v32 = v22;
      if (!v22) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      v8 = v32;
    }
    v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1845490(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 24);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = (char *)sub_1842638(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v12 = *(unsigned char *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    __dst += 2;
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v13 = *(unsigned char *)(a1 + 49);
    *__dst = 24;
    __dst[1] = v13;
    __dst += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_1845648(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1843690(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  uint64_t v9 = v2 + 2;
  if ((v8 & 1) == 0) {
    uint64_t v9 = v2;
  }
  if ((v8 & 2) != 0) {
    v9 += 2;
  }
  if ((v8 & 3) != 0) {
    uint64_t result = v9;
  }
  else {
    uint64_t result = v2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1845718(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187AF38((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1845818(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1845050(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1845870@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutLine");
}

uint64_t sub_1845880(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_187ABA0((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_184592C(uint64_t a1)
{
  sub_1845880(a1);

  operator delete();
}

uint64_t sub_1845964(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1846138(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_1845A14(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 8);
    v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      v22 = (uint64_t *)*v22;
    }
    unint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 48), v22);
    uint64_t v14 = (void *)sub_188C244(v23, *(char **)v24, (uint64_t)a3);
LABEL_33:
    *(void *)v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    v15 = v7 - 1;
    while (1)
    {
      unint64_t v16 = (unsigned __int8 *)(v15 + 1);
      *(void *)v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_1849DC8(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        unint64_t v16 = *(unsigned __int8 **)v24;
      }
      v15 = sub_1845C14(a3, v19, v16);
      *(void *)v24 = v15;
      if (!v15) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_34;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)v24 = 0;
  return *(void *)v24;
}

char *sub_1845C14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18461CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1845CA4(uint64_t a1, unsigned char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_18466B8(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_1845E0C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1846994(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1845F04(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187AFC4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    unint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 48), v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_184600C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1846C5C(*(void *)(*(void *)(a1 + 40) + 8 * v2) + 24);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1846068@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutTemplate");
}

void *sub_1846078(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_187AC20(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1846100(void *a1)
{
  sub_1846078(a1);

  operator delete();
}

uint64_t sub_1846138(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1845164(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 64) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_18461CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v41 = a2;
  if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
    return v41;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v41 + 1;
    unsigned int v8 = *v41;
    if (*v41 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v41, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        int v7 = v41 + 2;
      }
    }
    uint64_t v41 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_59;
        }
        uint64_t v12 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v7, (v15 - 128));
          if (!v41) {
            return 0;
          }
          unint64_t v13 = v34;
        }
        else
        {
          uint64_t v12 = v7 + 2;
LABEL_13:
          uint64_t v41 = v12;
        }
        if (v13 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_67;
        }
        if (*v6) {
          v39 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v40 = 1;
        goto LABEL_75;
      case 2u:
        if (v8 != 18) {
          goto LABEL_59;
        }
        uint64_t v16 = v7 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v41 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_1849C88(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            uint64_t v17 = (unsigned __int8 *)v41;
          }
          uint64_t v16 = sub_1846628(a3, v20, v17);
          uint64_t v41 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_67;
          }
        }
      case 3u:
        if (v8 != 24) {
          goto LABEL_59;
        }
        v22 = v7 + 1;
        unint64_t v13 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v23 = *v22;
        int v24 = v13 + (v23 << 7);
        unint64_t v13 = (v24 - 128);
        if (v23 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
          if (!v41) {
            return 0;
          }
          unint64_t v13 = v35;
        }
        else
        {
          v22 = v7 + 2;
LABEL_30:
          uint64_t v41 = v22;
        }
        if (v13 > 0xB)
        {
          if (*v6) {
            v39 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v40 = 3;
LABEL_75:
          sub_188C020(v40, v13, v39);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 68) = v13;
        }
        goto LABEL_67;
      case 4u:
        if (v8 == 32)
        {
          uint64_t v25 = v7 - 1;
          while (1)
          {
            uint64_t v41 = v25 + 1;
            unint64_t v26 = v25[1];
            uint64_t v27 = v25 + 2;
            if (v25[1] < 0)
            {
              int v28 = *v27;
              int v29 = v26 + (v28 << 7);
              unint64_t v26 = (v29 - 128);
              if (v28 < 0)
              {
                uint64_t v41 = (char *)sub_188C138((uint64_t)(v25 + 1), (v29 - 128));
                if (!v41) {
                  return 0;
                }
                unint64_t v26 = v32;
                goto LABEL_39;
              }
              uint64_t v27 = v25 + 3;
            }
            uint64_t v41 = v27;
LABEL_39:
            if (v26 > 0xB)
            {
              if (*v6) {
                uint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v26, v33);
            }
            else
            {
              uint64_t v30 = *(unsigned int *)(a1 + 48);
              if (v30 == *(_DWORD *)(a1 + 52))
              {
                int v31 = v30 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v30 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v26;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v26;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 48) = v31;
            }
            uint64_t v25 = v41;
            if (*(void *)a3 <= (unint64_t)v41 || *v41 != 32) {
              goto LABEL_67;
            }
          }
        }
        if (v8 == 34)
        {
          *(void *)&long long v42 = a1 + 48;
          *((void *)&v42 + 1) = sub_18375AC;
          uint64_t v43 = a1 + 8;
          int v44 = 4;
          uint64_t v36 = sub_1112E88((uint64_t)a3, v7, &v42);
LABEL_66:
          uint64_t v41 = v36;
          if (!v36) {
            return 0;
          }
LABEL_67:
          if (sub_11947B8((uint64_t)a3, &v41, a3[11].i32[1])) {
            return v41;
          }
          continue;
        }
LABEL_59:
        if (v8) {
          BOOL v37 = (v8 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v6)
          {
            v38 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v7 = v41;
          }
          uint64_t v36 = (char *)sub_1885AC0(v8, v38, v7, a3);
          goto LABEL_66;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v41;
      default:
        goto LABEL_59;
    }
  }
}

char *sub_1846628(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18451E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18466B8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1845490(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 68);
    *uint64_t v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v18 = *(unsigned int *)(a1 + 48);
  if ((int)v18 >= 1)
  {
    for (uint64_t j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v20 = *(int *)(*(void *)(a1 + 56) + 4 * j);
      *uint64_t v4 = 32;
      v4[1] = v20;
      if (v20 > 0x7F)
      {
        v4[1] = v20 | 0x80;
        unint64_t v21 = v20 >> 7;
        v4[2] = v20 >> 7;
        v4 += 3;
        if (v20 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v22 = v21 >> 14;
            v21 >>= 7;
            *v4++ = v21;
          }
          while (v22);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    unint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    unint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_1846994(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1845648(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t result = v2 + v8 + v10;
  int v14 = *(_DWORD *)(a1 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      int v15 = *(_DWORD *)(a1 + 64);
      if (v15 < 0) {
        uint64_t v16 = 11;
      }
      else {
        uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v16;
    }
    if ((v14 & 2) != 0)
    {
      int v17 = *(_DWORD *)(a1 + 68);
      if (v17 < 0) {
        uint64_t v18 = 11;
      }
      else {
        uint64_t v18 = ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v18;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v20 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    result += v21;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1846B10(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187B050((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if ((v12 & 3) != 0)
  {
    if (v12) {
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    }
    if ((v12 & 2) != 0) {
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    }
    *(_DWORD *)(a1 + 16) |= v12;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1846C54(uint64_t a1)
{
  return sub_1846C5C(a1 + 24);
}

uint64_t sub_1846C5C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 32);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_1845050(*(void *)(*(void *)(v4 + 40) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_1846CE8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutTemplateEntry");
}

uint64_t sub_1846CF8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D1D8)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_1845880(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_12C45E8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1846DC4(uint64_t a1)
{
  sub_1846CF8(a1);

  operator delete();
}

uint64_t sub_1846DFC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  *(_DWORD *)(v1 + 48) = 0;
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1845964(*(void *)(v1 + 64));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1846E90(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        char v7 = v34 + 2;
      }
    }
    unint64_t v34 = v7;
    unsigned int v12 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24)
      {
        if (v8 == 26)
        {
          *(void *)&long long v35 = a1 + 48;
          *((void *)&v35 + 1) = sub_16BAF04;
          uint64_t v36 = a1 + 8;
          int v37 = 3;
          uint64_t v16 = sub_1112E88((uint64_t)a3, v7, &v35);
          goto LABEL_47;
        }
        goto LABEL_14;
      }
      int v17 = v7 - 1;
      while (1)
      {
        unint64_t v34 = v17 + 1;
        unint64_t v18 = v17[1];
        uint64_t v19 = v17 + 2;
        if (v17[1] < 0)
        {
          int v20 = *v19;
          int v21 = v18 + (v20 << 7);
          unint64_t v18 = (v21 - 128);
          if (v20 < 0)
          {
            unint64_t v34 = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
            if (!v34) {
              return 0;
            }
            unint64_t v18 = v24;
            goto LABEL_27;
          }
          uint64_t v19 = v17 + 3;
        }
        unint64_t v34 = v19;
LABEL_27:
        if (sub_16BAF04(v18))
        {
          uint64_t v22 = *(unsigned int *)(a1 + 48);
          if (v22 == *(_DWORD *)(a1 + 52))
          {
            int v23 = v22 + 1;
            sub_188C80C((unsigned int *)(a1 + 48), v22 + 1);
            *(_DWORD *)(*(void *)(a1 + 56) + 4 * v22) = v18;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 56) + 4 * v22) = v18;
            int v23 = v22 + 1;
          }
          *(_DWORD *)(a1 + 48) = v23;
        }
        else
        {
          if (*v6) {
            unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v25);
        }
        int v17 = v34;
        if (*(void *)a3 <= (unint64_t)v34 || *v34 != 24) {
          goto LABEL_48;
        }
      }
    }
    if (v12 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        unint64_t v26 = *(void **)(a1 + 64);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v27 = (void *)*v27;
          }
          unint64_t v26 = sub_1849D24((uint64_t)v27);
          *(void *)(a1 + 64) = v26;
          char v7 = v34;
        }
        uint64_t v16 = (char *)sub_18471E4(a3, (uint64_t)v26, (unsigned __int8 *)v7);
        goto LABEL_47;
      }
      goto LABEL_14;
    }
    if (v12 == 1 && v8 == 10) {
      break;
    }
LABEL_14:
    if (v8) {
      BOOL v14 = (v8 & 7) == 4;
    }
    else {
      BOOL v14 = 1;
    }
    if (v14)
    {
      if (!v7) {
        return 0;
      }
      a3[10].i32[0] = v8 - 1;
      return v34;
    }
    if (*v6)
    {
      int v15 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v34;
    }
    uint64_t v16 = (char *)sub_1885AC0(v8, v15, v7, a3);
LABEL_47:
    unint64_t v34 = v16;
    if (!v16) {
      return 0;
    }
LABEL_48:
    if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
      return v34;
    }
  }
  uint64_t v28 = v7 - 1;
  while (1)
  {
    int v29 = (unsigned __int8 *)(v28 + 1);
    unint64_t v34 = v28 + 1;
    uint64_t v30 = *(_DWORD **)(a1 + 40);
    if (v30 && (uint64_t v31 = *(int *)(a1 + 32), (int)v31 < *v30))
    {
      *(_DWORD *)(a1 + 32) = v31 + 1;
      uint64_t v32 = *(void *)&v30[2 * v31 + 2];
    }
    else
    {
      uint64_t v33 = sub_185089C(*(void *)(a1 + 24));
      uint64_t v32 = sub_188CDC8(a1 + 24, v33);
      int v29 = (unsigned __int8 *)v34;
    }
    uint64_t v28 = sub_12688D0(a3, v32, v29);
    unint64_t v34 = v28;
    if (!v28) {
      return 0;
    }
    if (*(void *)a3 <= (unint64_t)v28 || *v28 != 10) {
      goto LABEL_48;
    }
  }
}

uint64_t sub_18471E4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1845A14(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1847274(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v11 = *(void *)(a1 + 64);
    *__dst = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    __dst[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, __dst + 1);
    }
    else {
      uint64_t v13 = __dst + 2;
    }
    __dst = sub_1845CA4(v11, v13, a3);
  }
  uint64_t v14 = *(unsigned int *)(a1 + 48);
  if ((int)v14 >= 1)
  {
    for (uint64_t j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v16 = *(int *)(*(void *)(a1 + 56) + 4 * j);
      *__dst = 24;
      __dst[1] = v16;
      if (v16 > 0x7F)
      {
        __dst[1] = v16 | 0x80;
        unint64_t v17 = v16 >> 7;
        __dst[2] = v16 >> 7;
        __dst += 3;
        if (v16 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v18 = v17 >> 14;
            v17 >>= 7;
            *__dst++ = v17;
          }
          while (v18);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return __dst;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(__dst, v22, (int)v23);
    __dst += v24;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, __dst);
}

uint64_t sub_18474BC(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(unsigned int *)(a1 + 48);
  if (v8)
  {
    int v9 = 0;
    uint64_t v10 = 0;
    do
    {
      int v11 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v9);
      if (v11 < 0) {
        uint64_t v12 = 10;
      }
      else {
        uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
      }
      v10 += v12;
      ++v9;
    }
    while (v8 != v9);
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v13 = v2 + v8 + v10;
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v14 = sub_1845E0C(*(void *)(a1 + 64));
    v13 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v13 += v18;
  }
  *(_DWORD *)(a1 + 20) = v13;
  return v13;
}

void sub_18475FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C4B74((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v12 = *(uint64_t (****)())(a2 + 64);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_1849D24((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
      uint64_t v12 = *(uint64_t (****)())(a2 + 64);
    }
    if (v12) {
      unint64_t v16 = v12;
    }
    else {
      unint64_t v16 = &off_254D1A0;
    }
    sub_1845F04((uint64_t)v13, (uint64_t)v16);
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1847764(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(unsigned int *)(v6 + 32);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_1846C5C(*(void *)(*(void *)(v6 + 40) + 8 * v7) + 24);
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_18477FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryResultLayoutTemplatePair");
}

void *sub_184780C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_187ACA0(a1 + 5);
  sub_12C45E8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1847898(void *a1)
{
  sub_184780C(a1);

  operator delete();
}

uint64_t sub_18478D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_16CD894(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_183AED4(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_1847974(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      unint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            unint64_t v26 = v14 + 1;
            unint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_18491A8(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            uint64_t v14 = (char *)sub_18418B8(a3, v18, v15);
            unint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        int v20 = v7 - 1;
        while (1)
        {
          unint64_t v21 = (unsigned __int8 *)(v20 + 1);
          unint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_185089C(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            unint64_t v21 = (unsigned __int8 *)v26;
          }
          int v20 = sub_12688D0(a3, v24, v21);
          unint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      unint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_1847BBC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_184B3AC(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_183B55C(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1847D84(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_184B568(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_183B868(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_1847E84(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_12C4B74((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_187B0DC((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1847FB8(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16CE508(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    BOOL v8 = sub_183BD18(*(void *)(*(void *)(a1 + 56) + 8 * v6));
    uint64_t v6 = v7;
  }
  while (v8);
  return v5;
}

void *sub_1848038@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryDynamicContextServerOverride");
}

uint64_t sub_1848048(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24E2318;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  BOOL v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    BOOL v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_187B168(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    uint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B1F4((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void sub_18481AC(_Unwind_Exception *a1)
{
  sub_187ADA0(v4);
  sub_187AD20(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1848204(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_187ADA0(a1 + 6);
  sub_187AD20(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1848290(void *a1)
{
  sub_1848204(a1);

  operator delete();
}

char *sub_18482C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v33 + 2;
      }
    }
    uint64_t v33 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v15 = v7 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v33 = v15 + 1;
          unint64_t v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_1849F10(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            uint64_t v16 = (unsigned __int8 *)v33;
          }
          uint64_t v15 = sub_1848648(a3, v19, v16);
          uint64_t v33 = v15;
          if (!v15) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_48;
          }
        }
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v21 = v7 - 1;
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v33 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            unint64_t v26 = sub_1849E6C(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            uint64_t v22 = (unsigned __int8 *)v33;
          }
          uint64_t v21 = sub_18485B8(a3, v25, v22);
          uint64_t v33 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
            goto LABEL_48;
          }
        }
      }
    }
    else if (v11 == 1 && v8 == 8)
    {
      uint64_t v27 = v7 + 1;
      unint64_t v28 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_45;
      }
      int v29 = *v27;
      int v30 = v28 + (v29 << 7);
      unint64_t v28 = (v30 - 128);
      if (v29 < 0)
      {
        uint64_t v33 = (char *)sub_188C138((uint64_t)v7, (v30 - 128));
        if (!v33) {
          return 0;
        }
        unint64_t v28 = v31;
      }
      else
      {
        uint64_t v27 = v7 + 2;
LABEL_45:
        uint64_t v33 = v27;
      }
      if (v28 > 2)
      {
        if (*v6) {
          uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v28, v32);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 72) = v28;
      }
      goto LABEL_48;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v33;
    }
    uint64_t v33 = (char *)sub_1885AC0(v8, v14, v7, a3);
    if (!v33) {
      return 0;
    }
LABEL_48:
    if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
      return v33;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v33;
  }
  return 0;
}

char *sub_18485B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1846E90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1848648(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1847974(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18486D8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 72);
    *char v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *char v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      char v4 = sub_1847274(v11, v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *char v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 64);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      char v4 = sub_1847BBC(v16, v18, a3);
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1848920(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_18474BC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1847D84(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v15 = *(_DWORD *)(a1 + 72);
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v15 >= 0) {
      uint64_t v17 = v16;
    }
    else {
      uint64_t v17 = 11;
    }
    v9 += v17;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void *sub_1848A58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceSummaryLayoutMetadata");
}

uint64_t sub_1848A68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E0E18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1848AE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E0E98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1848B58(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E0F18;
  result[2] = 0;
  result[3] = 0;
  return result;
}

uint64_t sub_1848BD0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E0F98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1848C48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E1018;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = a1;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_1848CE4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1098;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1848D60(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1118;
  *(void *)(result + 16) = 0;
  *(unsigned char *)(result + 24) = 0;
  return result;
}

uint64_t sub_1848DDC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1198;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1848E54(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1218;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1848ECC(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1298;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1848F48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1318;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1848FC0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1398;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1849038(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1418;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18490B0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1498;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1849128(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1518;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_18491A8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E1598;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(void *)(result + 72) = &qword_2550250;
  *(void *)(result + 80) = &qword_2550250;
  *(void *)(result + 88) = &qword_2550250;
  *(void *)(result + 96) = &qword_2550250;
  *(_DWORD *)(result + 104) = 0;
  *(unsigned char *)(result + 108) = 0;
  return result;
}

uint64_t sub_1849264(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1618;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_18492E0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1698;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_184935C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1718;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18493D4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1798;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_184944C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1818;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18494C4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1898;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_184953C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1918;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18495B4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1998;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_184962C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1A18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_18496A4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1A98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_184971C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1B18;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1849798(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1B98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1849810(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1C18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1849888(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E1C98;
  result[2] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_184990C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1D18;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 24) = 0;
  return result;
}

uint64_t sub_1849988(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1D98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1849A00(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1E18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1849A78(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1E98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1849AF0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1F18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1849B68(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E1F98;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

double sub_1849BE0(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24E2018;
  *(void *)(v2 + 16) = 0;
  *(_DWORD *)(v2 + 24) = 0;
  double result = 0.0;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_OWORD *)(v2 + 128) = 0u;
  *(_OWORD *)(v2 + 144) = 0u;
  *(_OWORD *)(v2 + 160) = 0u;
  *(_OWORD *)(v2 + 176) = 0u;
  *(_OWORD *)(v2 + 192) = 0u;
  *(_OWORD *)(v2 + 208) = 0u;
  *(_OWORD *)(v2 + 224) = 0u;
  *(_OWORD *)(v2 + 240) = 0u;
  *(_OWORD *)(v2 + 256) = 0u;
  *(_OWORD *)(v2 + 272) = 0u;
  *(_OWORD *)(v2 + 288) = 0u;
  *(_OWORD *)(v2 + 304) = 0u;
  *(void *)(v2 + 320) = 0;
  return result;
}

uint64_t sub_1849C88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E2098;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(_WORD *)(result + 48) = 0;
  return result;
}

void *sub_1849D24(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24E2118;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = &qword_2550250;
  return result;
}

void *sub_1849DC8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24E2198;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  result[7] = a1;
  result[8] = 0;
  return result;
}

void *sub_1849E6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *uint64_t result = off_24E2218;
  result[1] = a1;
  result[2] = 0;
  result[3] = a1;
  result[4] = 0;
  result[5] = 0;
  result[6] = 0;
  result[7] = a1;
  result[8] = 0;
  return result;
}

uint64_t sub_1849F10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E2298;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = a1;
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0;
  *(_DWORD *)(result + 64) = 0;
  return result;
}

uint64_t sub_1849FB4(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)uint64_t result = off_24E2318;
  *(void *)(result + 8) = a1;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a1;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = a1;
  *(void *)(result + 56) = 0;
  *(void *)(result + 64) = 0;
  *(_DWORD *)(result + 72) = 0;
  return result;
}

uint64_t sub_184A060(unsigned int a1)
{
  return (a1 < 0x27) & (0x7FE0100DFFuLL >> a1);
}

BOOL sub_184A080(unsigned int a1)
{
  return a1 < 0x18;
}

uint64_t sub_184A08C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E2398;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  return a1;
}

void sub_184A140()
{
}

uint64_t sub_184A190(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_254D270 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_184A248(uint64_t a1)
{
  sub_184A190(a1);

  operator delete();
}

unsigned char *sub_184A280(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  if ((v2 & 0x7E) != 0)
  {
    *((void *)v1 + 4) = 0;
    *((void *)v1 + 5) = 0;
    v1[56] = 0;
    *((void *)v1 + 6) = 0;
    *((_DWORD *)v1 + 15) = 1;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_184A2F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v49 + 2;
      }
    }
    v49 = v8;
    unsigned int v12 = v9 >> 3;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_49;
        }
        v5 |= 2u;
        uint64_t v13 = v8 + 1;
        uint64_t v14 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        uint64_t v14 = v14 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          uint64_t v13 = v8 + 2;
LABEL_13:
          v49 = v13;
          *(void *)(a1 + 32) = v14;
          goto LABEL_57;
        }
        int v37 = (char *)sub_188C138((uint64_t)v8, v14);
        v49 = v37;
        *(void *)(a1 + 32) = v38;
        if (v37) {
          goto LABEL_57;
        }
        goto LABEL_78;
      case 2u:
        if (v9 != 18) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 24);
        if (!v19)
        {
          unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 24) = v19;
          uint64_t v8 = v49;
        }
        uint64_t v21 = sub_1198F14(a3, v19, (unsigned __int8 *)v8);
        goto LABEL_56;
      case 3u:
        if (v9 != 24) {
          goto LABEL_49;
        }
        v5 |= 8u;
        uint64_t v23 = v8 + 1;
        LODWORD(v22) = *v8;
        if ((v22 & 0x80) == 0) {
          goto LABEL_31;
        }
        int v24 = *v23;
        uint64_t v22 = v22 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v22);
          v49 = v41;
          *(_DWORD *)(a1 + 48) = v42;
          if (!v41) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_31:
          v49 = v23;
          *(_DWORD *)(a1 + 48) = v22;
        }
        goto LABEL_57;
      case 4u:
        if (v9 != 32) {
          goto LABEL_49;
        }
        v5 |= 4u;
        uint64_t v25 = v8 + 1;
        uint64_t v26 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v43 = (char *)sub_188C138((uint64_t)v8, v26);
          v49 = v43;
          *(void *)(a1 + 40) = v44;
          if (!v43) {
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_36:
          v49 = v25;
          *(void *)(a1 + 40) = v26;
        }
        goto LABEL_57;
      case 5u:
        if (v9 != 40) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        unint64_t v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          unint64_t v45 = (char *)sub_188C0D0((uint64_t)v8, v29);
          v49 = v45;
          *(_DWORD *)(a1 + 52) = v46;
          if (!v45) {
            goto LABEL_78;
          }
        }
        else
        {
          unint64_t v28 = v8 + 2;
LABEL_41:
          v49 = v28;
          *(_DWORD *)(a1 + 52) = v29;
        }
        goto LABEL_57;
      default:
        if (v12 != 50)
        {
          if (v12 != 51 || v9 != 152) {
            goto LABEL_49;
          }
          v5 |= 0x20u;
          uint64_t v16 = v8 + 1;
          uint64_t v17 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_20;
          }
          int v18 = *v16;
          uint64_t v17 = v17 + (v18 << 7) - 128;
          if ((v18 & 0x80000000) == 0)
          {
            uint64_t v16 = v8 + 2;
LABEL_20:
            v49 = v16;
            *(unsigned char *)(a1 + 56) = v17 != 0;
            goto LABEL_57;
          }
          v39 = (char *)sub_188C138((uint64_t)v8, v17);
          v49 = v39;
          *(unsigned char *)(a1 + 56) = v40 != 0;
          if (!v39) {
            goto LABEL_78;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9 == 144)
        {
          unint64_t v31 = v8 + 1;
          unint64_t v32 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_46;
          }
          int v33 = *v31;
          int v34 = v32 + (v33 << 7);
          unint64_t v32 = (v34 - 128);
          if (v33 < 0)
          {
            v49 = (char *)sub_188C138((uint64_t)v8, (v34 - 128));
            if (!v49) {
              goto LABEL_78;
            }
            unint64_t v32 = v47;
          }
          else
          {
            unint64_t v31 = v8 + 2;
LABEL_46:
            v49 = v31;
          }
          if (sub_1479AA4(v32))
          {
            *(_DWORD *)(a1 + 16) |= 0x40u;
            *(_DWORD *)(a1 + 60) = v32;
          }
          else
          {
            if (*v7) {
              v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(50, v32, v48);
          }
          goto LABEL_57;
        }
LABEL_49:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v7)
          {
            uint64_t v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v49;
          }
          uint64_t v21 = (char *)sub_1885AC0(v9, v36, v8, a3);
LABEL_56:
          v49 = v21;
          if (!v21) {
            goto LABEL_78;
          }
          goto LABEL_57;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_78:
        }
          v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v49;
    }
  }
}

unsigned char *sub_184A740(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 48);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 40);
    *char v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 52);
    *char v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 60);
    *(_WORD *)char v4 = 912;
    v4[2] = v22;
    if (v22 > 0x7F)
    {
      v4[2] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[3] = v22 >> 7;
      v4 += 4;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v25 = *(unsigned char *)(a1 + 56);
    *(_WORD *)char v4 = 920;
    v4[2] = v25;
    v4 += 3;
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    int v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    int v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_184AB00(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x7F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_20;
  }
  if (v2)
  {
    uint64_t v5 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0)
  {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  int v10 = *(_DWORD *)(a1 + 48);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
  if ((v2 & 0x10) != 0) {
LABEL_11:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_12:
  if ((v2 & 0x20) != 0) {
    uint64_t result = v3 + 3;
  }
  else {
    uint64_t result = v3;
  }
  if ((v2 & 0x40) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 60);
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v6 >= 0) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 12;
    }
    result += v8;
  }
LABEL_20:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_184AC8C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_25;
    }
LABEL_24:
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_25:
    *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_26:
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_10;
    }
LABEL_27:
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_184ADB4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_184ADE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsIdentifier.ShardedId");
}

uint64_t sub_184ADF0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E2418;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

void sub_184AE58(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_184AE88(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E2418;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_184AF60()
{
}

uint64_t sub_184AFBC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D2B0)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_184A190(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_184B07C(uint64_t a1)
{
  sub_184AFBC(a1);

  operator delete();
}

char *sub_184B0B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    unint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v19 = *(void *)(a1 + 48);
    if (!v19)
    {
      unsigned int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v20 = (void *)*v20;
      }
      sub_1850814((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 48) = v21;
      uint64_t v7 = v24;
    }
    unint64_t v14 = sub_184B31C(a3, v19, (unsigned __int8 *)v7);
LABEL_35:
    unint64_t v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    unint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        unint64_t v24 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v24) {
          return 0;
        }
        unint64_t v16 = v22;
        goto LABEL_27;
      }
      unint64_t v15 = v7 + 2;
    }
    unint64_t v24 = v15;
LABEL_27:
    if (v16 > 5)
    {
      if (*v6) {
        unint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      *(_DWORD *)(a1 + 56) = v16;
    }
    goto LABEL_36;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (v8 - 4000 < 0x640 || (v8 - 8000) >> 6 <= 0x7C)
    {
      unint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254D2B0, (uint64_t *)(a1 + 8), a3);
    }
    else
    {
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v24;
      }
      unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    }
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_184B31C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_184A2F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_184B3AC(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184A740(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 500, 2000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_184B568(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_184AB00(*(void *)(a1 + 48));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0)
    {
      int v5 = *(_DWORD *)(a1 + 56);
      if (v5 < 0) {
        uint64_t v6 = 11;
      }
      else {
        uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v6;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_184B640(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_16CD894(a1);
    sub_16CE3CC(a1, a2);
  }
}

void *sub_184B68C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsIdentifier");
}

uint64_t sub_184B69C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24E2498;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_184B718(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_184B748(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_184B7BC(void *a1)
{
  sub_184B748(a1);

  operator delete();
}

uint64_t sub_184B7F4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_184B80C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v14 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
    goto LABEL_22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v14 + 1;
    unsigned int v8 = *v14;
    if (*v14 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v14, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v14 + 2;
      }
    }
    unint64_t v14 = v7;
    if (v8 == 9)
    {
      *(void *)(a1 + 24) = *(void *)v7;
      unint64_t v14 = v7 + 8;
      int v5 = 1;
      goto LABEL_17;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v14;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v14) {
      goto LABEL_23;
    }
LABEL_17:
    if (sub_11947B8((uint64_t)a3, &v14, a3[11].i32[1])) {
      goto LABEL_22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_22;
  }
LABEL_23:
  unint64_t v14 = 0;
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v5;
  return v14;
}

_OWORD *sub_184B94C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v6;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    return (_OWORD *)((char *)v4 + v12);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_184BA30(uint64_t a1)
{
  uint64_t v1 = 9;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_184BA78()
{
  return 1;
}

void *sub_184BA80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MapsSuggestionsTouristInfo");
}

uint64_t sub_184BA90(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24E2518;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_11DB348(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v12 & 2) != 0)
  {
    unint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v12 & 4) != 0)
  {
    unint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v12 & 8) != 0)
  {
    unint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v12 & 0x10) != 0)
  {
    uint64_t v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v12 & 0x20) != 0)
  {
    uint64_t v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v18);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if ((v12 & 0x40) != 0)
  {
    uint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v12 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v12 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  long long v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
  return a1;
}

void sub_184BD84()
{
}

void *sub_184BE18(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_184BEA8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_11DB1BC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_184BEA8(uint64_t a1)
{
  int v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  uint64_t result = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_254D310)
  {
    if (*(void *)(a1 + 104))
    {
      sub_15B9F30();
      operator delete();
    }
    if (*(void *)(a1 + 112))
    {
      sub_15BF110();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 120);
    if (result)
    {
      sub_15BE960();
      operator delete();
    }
  }
  return result;
}

void sub_184BFE4(void *a1)
{
  sub_184BE18(a1);

  operator delete();
}

uint64_t sub_184C01C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v76 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v76, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v76 + 1);
    unsigned int v9 = **(unsigned char **)v76;
    if ((char)**(unsigned char **)v76 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v76, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v76 + 2);
      }
    }
    *(void *)unint64_t v76 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 48);
        goto LABEL_82;
      case 2u:
        if (v9 != 18) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 56);
        goto LABEL_82;
      case 3u:
        if (v9 != 26) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 64);
        goto LABEL_82;
      case 4u:
        if (v9 != 34) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 72);
        goto LABEL_82;
      case 5u:
        if (v9 != 42) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 80);
        goto LABEL_82;
      case 6u:
        if (v9 != 48) {
          goto LABEL_111;
        }
        v5 |= 0x2000u;
        uint64_t v19 = (char *)(v8 + 1);
        uint64_t v20 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v62 = sub_188C138((uint64_t)v8, v20);
          *(void *)unint64_t v76 = v62;
          *(unsigned char *)(a1 + 144) = v63 != 0;
          if (!v62) {
            goto LABEL_139;
          }
        }
        else
        {
          uint64_t v19 = (char *)(v8 + 2);
LABEL_33:
          *(void *)unint64_t v76 = v19;
          *(unsigned char *)(a1 + 144) = v20 != 0;
        }
        goto LABEL_84;
      case 7u:
        if (v9 != 56) {
          goto LABEL_111;
        }
        v5 |= 0x4000u;
        unint64_t v22 = (char *)(v8 + 1);
        uint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v64 = sub_188C138((uint64_t)v8, v23);
          *(void *)unint64_t v76 = v64;
          *(unsigned char *)(a1 + 145) = v65 != 0;
          if (!v64) {
            goto LABEL_139;
          }
        }
        else
        {
          unint64_t v22 = (char *)(v8 + 2);
LABEL_38:
          *(void *)unint64_t v76 = v22;
          *(unsigned char *)(a1 + 145) = v23 != 0;
        }
        goto LABEL_84;
      case 8u:
        if (v9 != 66) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        char v25 = *(void **)(a1 + 104);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          char v25 = sub_15C2014((uint64_t)v26);
          *(void *)(a1 + 104) = v25;
          unsigned int v8 = *(unsigned __int8 **)v76;
        }
        uint64_t v27 = (uint64_t)sub_11EAA5C(a3, (uint64_t)v25, v8);
        goto LABEL_83;
      case 9u:
        if (v9 != 72) {
          goto LABEL_111;
        }
        v5 |= 0x400u;
        unint64_t v28 = (char *)(v8 + 1);
        int v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v66 = sub_188C0D0((uint64_t)v8, v29);
          *(void *)unint64_t v76 = v66;
          *(_DWORD *)(a1 + 128) = v67;
          if (!v66) {
            goto LABEL_139;
          }
        }
        else
        {
          unint64_t v28 = (char *)(v8 + 2);
LABEL_49:
          *(void *)unint64_t v76 = v28;
          *(_DWORD *)(a1 + 128) = v29;
        }
        goto LABEL_84;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_111;
        }
        uint64_t v31 = (char *)(v8 + 1);
        unint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v33 = *v31;
        int v34 = v32 + (v33 << 7);
        unint64_t v32 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)unint64_t v76 = sub_188C138((uint64_t)v8, (v34 - 128));
          if (!*(void *)v76) {
            goto LABEL_139;
          }
          unint64_t v32 = v68;
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_54:
          *(void *)unint64_t v76 = v31;
        }
        if (v32 > 0x17)
        {
          if (*v7) {
            v75 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v75 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(10, v32, v75);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x800u;
          *(_DWORD *)(a1 + 132) = v32;
        }
        goto LABEL_84;
      case 0xBu:
        if (v9 != 89) {
          goto LABEL_111;
        }
        uint64_t v36 = *(void *)v8;
        BOOL v35 = v8 + 8;
        v5 |= 0x1000u;
        *(void *)(a1 + 136) = v36;
        goto LABEL_100;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_111;
        }
        v5 |= 0x8000u;
        int v37 = (char *)(v8 + 1);
        uint64_t v38 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v69 = sub_188C138((uint64_t)v8, v38);
          *(void *)unint64_t v76 = v69;
          *(unsigned char *)(a1 + 146) = v70 != 0;
          if (!v69) {
            goto LABEL_139;
          }
        }
        else
        {
          int v37 = (char *)(v8 + 2);
LABEL_63:
          *(void *)unint64_t v76 = v37;
          *(unsigned char *)(a1 + 146) = v38 != 0;
        }
        goto LABEL_84;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_111;
        }
        uint64_t v40 = v8 - 1;
        while (1)
        {
          uint64_t v41 = v40 + 1;
          *(void *)unint64_t v76 = v40 + 1;
          int v42 = *(_DWORD **)(a1 + 40);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 32), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 32) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            uint64_t v45 = sub_15C2114(*(void *)(a1 + 24));
            uint64_t v44 = sub_188CDC8(a1 + 24, v45);
            uint64_t v41 = *(unsigned __int8 **)v76;
          }
          uint64_t v40 = (unsigned __int8 *)sub_11A058C(a3, v44, v41);
          *(void *)unint64_t v76 = v40;
          if (!v40) {
            goto LABEL_139;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 106) {
            goto LABEL_84;
          }
        }
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v46 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
        if (v46) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 88);
        goto LABEL_82;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v47 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
        if (v47) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 96);
LABEL_82:
        v48 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v27 = (uint64_t)sub_188C244(v48, *(char **)v76, (uint64_t)a3);
        goto LABEL_83;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        v49 = *(void **)(a1 + 112);
        if (!v49)
        {
          uint64_t v50 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v50 = (void *)*v50;
          }
          v49 = sub_15C24B4((uint64_t)v50);
          *(void *)(a1 + 112) = v49;
          unsigned int v8 = *(unsigned __int8 **)v76;
        }
        uint64_t v27 = sub_145C8FC(a3, (uint64_t)v49, v8);
        goto LABEL_83;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_111;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v51 = *(void *)(a1 + 120);
        if (!v51)
        {
          v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v52 = (void *)*v52;
          }
          uint64_t v51 = sub_15C2458((uint64_t)v52);
          *(void *)(a1 + 120) = v51;
          unsigned int v8 = *(unsigned __int8 **)v76;
        }
        uint64_t v27 = (uint64_t)sub_145C98C(a3, v51, v8);
        goto LABEL_83;
      case 0x12u:
        if (v9 != 145) {
          goto LABEL_111;
        }
        uint64_t v53 = *(void *)v8;
        BOOL v35 = v8 + 8;
        v5 |= 0x40000u;
        *(void *)(a1 + 152) = v53;
LABEL_100:
        *(void *)unint64_t v76 = v35;
        goto LABEL_84;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_111;
        }
        v5 |= 0x10000u;
        unint64_t v54 = (char *)(v8 + 1);
        uint64_t v55 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_105;
        }
        int v56 = *v54;
        uint64_t v55 = v55 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v71 = sub_188C138((uint64_t)v8, v55);
          *(void *)unint64_t v76 = v71;
          *(unsigned char *)(a1 + 147) = v72 != 0;
          if (!v71) {
            goto LABEL_139;
          }
        }
        else
        {
          unint64_t v54 = (char *)(v8 + 2);
LABEL_105:
          *(void *)unint64_t v76 = v54;
          *(unsigned char *)(a1 + 147) = v55 != 0;
        }
        goto LABEL_84;
      case 0x14u:
        if (v9 != 160) {
          goto LABEL_111;
        }
        v5 |= 0x20000u;
        v57 = (char *)(v8 + 1);
        int v58 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v59 = *v57;
        int v58 = v58 + (v59 << 7) - 128;
        if (v59 < 0)
        {
          uint64_t v73 = sub_188C0D0((uint64_t)v8, v58);
          *(void *)unint64_t v76 = v73;
          *(_DWORD *)(a1 + 148) = v74;
          if (!v73) {
            goto LABEL_139;
          }
        }
        else
        {
          v57 = (char *)(v8 + 2);
LABEL_110:
          *(void *)unint64_t v76 = v57;
          *(_DWORD *)(a1 + 148) = v58;
        }
        goto LABEL_84;
      default:
LABEL_111:
        if (v9) {
          BOOL v60 = (v9 & 7) == 4;
        }
        else {
          BOOL v60 = 1;
        }
        if (!v60)
        {
          if (*v7)
          {
            uint64_t v61 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v61 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(unsigned __int8 **)v76;
          }
          uint64_t v27 = (uint64_t)sub_1885AC0(v9, v61, (char *)v8, a3);
LABEL_83:
          *(void *)unint64_t v76 = v27;
          if (!v27) {
            goto LABEL_139;
          }
LABEL_84:
          if (sub_11947B8((uint64_t)a3, (char **)v76, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_139:
        }
          *(void *)unint64_t v76 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v76;
    }
  }
}

unsigned char *sub_184C838(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x2000) == 0)
  {
LABEL_7:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 144);
  *unint64_t v4 = 48;
  v4[1] = v7;
  v4 += 2;
  if ((v6 & 0x4000) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 145);
  *unint64_t v4 = 56;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x400) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 104);
  *unint64_t v4 = 66;
  unsigned int v10 = *(_DWORD *)(v9 + 20);
  v4[1] = v10;
  if (v10 > 0x7F) {
    unsigned int v11 = sub_188A9CC(v10, v4 + 1);
  }
  else {
    unsigned int v11 = v4 + 2;
  }
  unint64_t v4 = sub_15BA180(v9, (unint64_t)v11, a3);
  if ((v6 & 0x400) != 0)
  {
LABEL_28:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 128);
    *unint64_t v4 = 72;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_34:
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 132);
    *unint64_t v4 = 80;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 136);
    *unint64_t v4 = 89;
    *(void *)(v4 + 1) = v18;
    v4 += 9;
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 146);
    *unint64_t v4 = 96;
    v4[1] = v19;
    v4 += 2;
  }
  int v20 = *(_DWORD *)(a1 + 32);
  if (v20)
  {
    for (int i = 0; i != v20; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *unint64_t v4 = 106;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        int v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        int v24 = v4 + 2;
      }
      unint64_t v4 = sub_15BAD4C(v22, (unint64_t)v24, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    unint64_t v4 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x40) == 0)
    {
LABEL_59:
      if ((v6 & 0x100) == 0) {
        goto LABEL_60;
      }
      goto LABEL_67;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_59;
  }
  unint64_t v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0)
  {
LABEL_60:
    if ((v6 & 0x200) == 0) {
      goto LABEL_61;
    }
    goto LABEL_73;
  }
LABEL_67:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 112);
  *(_WORD *)unint64_t v4 = 386;
  unsigned int v26 = *(_DWORD *)(v25 + 44);
  v4[2] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 2);
  }
  else {
    uint64_t v27 = v4 + 3;
  }
  unint64_t v4 = sub_15BF3F8(v25, v27, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_61:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_79;
  }
LABEL_73:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 120);
  *(_WORD *)unint64_t v4 = 394;
  unsigned int v29 = *(_DWORD *)(v28 + 44);
  v4[2] = v29;
  if (v29 > 0x7F) {
    int v30 = sub_188A9CC(v29, v4 + 2);
  }
  else {
    int v30 = v4 + 3;
  }
  unint64_t v4 = sub_15BEBF4(v28, v30, a3);
  if ((v6 & 0x40000) == 0)
  {
LABEL_62:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_82;
  }
LABEL_79:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 152);
  *(_WORD *)unint64_t v4 = 401;
  *(void *)(v4 + 2) = v31;
  v4 += 10;
  if ((v6 & 0x10000) == 0)
  {
LABEL_63:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_85;
  }
LABEL_82:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v32 = *(unsigned char *)(a1 + 147);
  *(_WORD *)unint64_t v4 = 408;
  v4[2] = v32;
  v4 += 3;
  if ((v6 & 0x20000) != 0)
  {
LABEL_85:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v33 = *(_DWORD *)(a1 + 148);
    *(_WORD *)unint64_t v4 = 416;
    v4[2] = v33;
    if (v33 > 0x7F)
    {
      v4[2] = v33 | 0x80;
      unsigned int v34 = v33 >> 7;
      v4[3] = v33 >> 7;
      v4 += 4;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_91:
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    int v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    int v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_184CE90(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15BAE94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_19;
  }
  if (v8)
  {
    unint64_t v10 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_31;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  unint64_t v13 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  v2 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_31:
  unint64_t v16 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  v2 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_34:
  unint64_t v19 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
  uint64_t v21 = *(void *)(v19 + 8);
  if ((v20 & 0x80u) == 0) {
    uint64_t v21 = v20;
  }
  v2 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_40:
    unint64_t v25 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
    uint64_t v27 = *(void *)(v25 + 8);
    if ((v26 & 0x80u) == 0) {
      uint64_t v27 = v26;
    }
    v2 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_17:
      if ((v8 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_43;
  }
LABEL_37:
  unint64_t v22 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
  uint64_t v24 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    uint64_t v24 = v23;
  }
  v2 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_40;
  }
LABEL_16:
  if ((v8 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_43:
  unint64_t v28 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
  uint64_t v30 = *(void *)(v28 + 8);
  if ((v29 & 0x80u) == 0) {
    uint64_t v30 = v29;
  }
  v2 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x80) != 0)
  {
LABEL_18:
    unint64_t v9 = sub_15BA324(*(void *)(a1 + 104));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_19:
  if ((v8 & 0xFF00) == 0) {
    goto LABEL_63;
  }
  if ((v8 & 0x100) != 0)
  {
    uint64_t v31 = sub_15BF564(*(void *)(a1 + 112));
    v2 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v8 & 0x200) == 0)
    {
LABEL_22:
      if ((v8 & 0x400) == 0) {
        goto LABEL_23;
      }
      goto LABEL_49;
    }
  }
  else if ((v8 & 0x200) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v32 = sub_15BED78(*(void *)(a1 + 120));
  v2 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v8 & 0x400) == 0)
  {
LABEL_23:
    if ((v8 & 0x800) == 0) {
      goto LABEL_54;
    }
LABEL_50:
    int v33 = *(_DWORD *)(a1 + 132);
    if (v33 < 0) {
      uint64_t v34 = 11;
    }
    else {
      uint64_t v34 = ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v34;
    goto LABEL_54;
  }
LABEL_49:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 128) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x800) != 0) {
    goto LABEL_50;
  }
LABEL_54:
  uint64_t v35 = v2 + 9;
  if ((v8 & 0x1000) == 0) {
    uint64_t v35 = v2;
  }
  if ((v8 & 0x2000) != 0) {
    v35 += 2;
  }
  if ((v8 & 0x4000) != 0) {
    v35 += 2;
  }
  if ((v8 & 0x8000) != 0) {
    uint64_t v2 = v35 + 2;
  }
  else {
    uint64_t v2 = v35;
  }
LABEL_63:
  if ((v8 & 0x70000) != 0)
  {
    uint64_t v36 = v2 + 3;
    if ((v8 & 0x10000) == 0) {
      uint64_t v36 = v2;
    }
    if ((v8 & 0x20000) != 0) {
      v36 += ((9 * (__clz(*(_DWORD *)(a1 + 148) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    if ((v8 & 0x40000) != 0) {
      uint64_t v2 = v36 + 10;
    }
    else {
      uint64_t v2 = v36;
    }
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if (v37)
  {
    unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v39 + 31) < 0) {
      uint64_t v40 = *(void *)(v39 + 16);
    }
    else {
      uint64_t v40 = *(unsigned __int8 *)(v39 + 31);
    }
    v2 += v40;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_184D2C4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnalyticMetadata");
}

uint64_t sub_184D2D4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E2598;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = a2;
  *(_DWORD *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = &qword_2550250;
  *(void *)(a1 + 216) = &qword_2550250;
  *(void *)(a1 + 224) = &qword_2550250;
  *(void *)(a1 + 232) = &qword_2550250;
  *(void *)(a1 + 240) = &qword_2550250;
  *(void *)(a1 + 248) = &qword_2550250;
  *(void *)(a1 + 256) = &qword_2550250;
  *(void *)(a1 + 264) = &qword_2550250;
  *(void *)(a1 + 336) = 0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_DWORD *)(a1 + 344) = 1;
  return a1;
}

void sub_184D3A0(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_184D3D4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v44 = a1 + 16;
  *(void *)a1 = off_24E2598;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v5 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v6 = *(_DWORD *)(a2 + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 64);
    int v8 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v9 = *(_DWORD *)(a1 + 56) + v6;
    *(_DWORD *)(a1 + 56) = v9;
    unint64_t v10 = *(int **)(a1 + 64);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v11 = *(_DWORD *)(a2 + 80);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 88);
    unint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C5340((uint64_t *)(a1 + 72), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v14 = *(_DWORD *)(a1 + 80) + v11;
    *(_DWORD *)(a1 + 80) = v14;
    uint64_t v15 = *(int **)(a1 + 88);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  int v16 = *(_DWORD *)(a2 + 96);
  if (v16)
  {
    sub_188C80C((unsigned int *)(a1 + 96), v16);
    uint64_t v17 = *(void **)(a1 + 104);
    *(_DWORD *)(a1 + 96) += *(_DWORD *)(a2 + 96);
    memcpy(v17, *(const void **)(a2 + 104), 4 * *(int *)(a2 + 96));
  }
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  int v18 = *(_DWORD *)(a2 + 112);
  if (v18)
  {
    sub_188C80C((unsigned int *)(a1 + 112), v18);
    unint64_t v19 = *(void **)(a1 + 120);
    *(_DWORD *)(a1 + 112) += *(_DWORD *)(a2 + 112);
    memcpy(v19, *(const void **)(a2 + 120), 4 * *(int *)(a2 + 112));
  }
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  int v20 = *(_DWORD *)(a2 + 136);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 144);
    unint64_t v22 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_188FB98(a1 + 128, v22, (const std::string **)(v21 + 8), v20, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v23 = *(_DWORD *)(a1 + 136) + v20;
    *(_DWORD *)(a1 + 136) = v23;
    uint64_t v24 = *(int **)(a1 + 144);
    if (*v24 < v23) {
      int *v24 = v23;
    }
  }
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v25 = *(_DWORD *)(a2 + 152);
  if (v25)
  {
    sub_188C80C((unsigned int *)(a1 + 152), v25);
    uint64_t v26 = *(void **)(a1 + 160);
    *(_DWORD *)(a1 + 152) += *(_DWORD *)(a2 + 152);
    memcpy(v26, *(const void **)(a2 + 160), 4 * *(int *)(a2 + 152));
  }
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  int v27 = *(_DWORD *)(a2 + 168);
  if (v27)
  {
    sub_188C80C((unsigned int *)(a1 + 168), v27);
    unint64_t v28 = *(void **)(a1 + 176);
    *(_DWORD *)(a1 + 168) += *(_DWORD *)(a2 + 168);
    memcpy(v28, *(const void **)(a2 + 176), 4 * *(int *)(a2 + 168));
  }
  *(void *)(a1 + 192) = 0;
  *(_DWORD *)(a1 + 184) = 0;
  *(void *)(a1 + 200) = 0;
  int v29 = *(_DWORD *)(a2 + 192);
  if (v29)
  {
    sub_188C80C((unsigned int *)(a1 + 192), v29);
    uint64_t v30 = *(void **)(a1 + 200);
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
    memcpy(v30, *(const void **)(a2 + 200), 4 * *(int *)(a2 + 192));
  }
  uint64_t v31 = *(void *)(a2 + 8);
  if (v31) {
    sub_188B4F8(v4, (v31 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v44, a2 + 16);
  *(void *)(a1 + 208) = &qword_2550250;
  int v32 = *(_DWORD *)(a2 + 40);
  if (v32)
  {
    int v33 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v33 = (uint64_t *)*v33;
    }
    sub_1881DF4((std::string **)(a1 + 208), (long long *)(*(void *)(a2 + 208) & 0xFFFFFFFFFFFFFFFELL), v33);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 216) = &qword_2550250;
  if ((v32 & 2) != 0)
  {
    uint64_t v34 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v34 = (uint64_t *)*v34;
    }
    sub_1881DF4((std::string **)(a1 + 216), (long long *)(*(void *)(a2 + 216) & 0xFFFFFFFFFFFFFFFELL), v34);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 224) = &qword_2550250;
  if ((v32 & 4) != 0)
  {
    uint64_t v35 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v35 = (uint64_t *)*v35;
    }
    sub_1881DF4((std::string **)(a1 + 224), (long long *)(*(void *)(a2 + 224) & 0xFFFFFFFFFFFFFFFELL), v35);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 232) = &qword_2550250;
  if ((v32 & 8) != 0)
  {
    uint64_t v36 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v36 = (uint64_t *)*v36;
    }
    sub_1881DF4((std::string **)(a1 + 232), (long long *)(*(void *)(a2 + 232) & 0xFFFFFFFFFFFFFFFELL), v36);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 240) = &qword_2550250;
  if ((v32 & 0x10) != 0)
  {
    uint64_t v37 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v37 = (uint64_t *)*v37;
    }
    sub_1881DF4((std::string **)(a1 + 240), (long long *)(*(void *)(a2 + 240) & 0xFFFFFFFFFFFFFFFELL), v37);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 248) = &qword_2550250;
  if ((v32 & 0x20) != 0)
  {
    unint64_t v38 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v38 = (uint64_t *)*v38;
    }
    sub_1881DF4((std::string **)(a1 + 248), (long long *)(*(void *)(a2 + 248) & 0xFFFFFFFFFFFFFFFELL), v38);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 256) = &qword_2550250;
  if ((v32 & 0x40) != 0)
  {
    unint64_t v39 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v39 = (uint64_t *)*v39;
    }
    sub_1881DF4((std::string **)(a1 + 256), (long long *)(*(void *)(a2 + 256) & 0xFFFFFFFFFFFFFFFELL), v39);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 264) = &qword_2550250;
  if ((v32 & 0x80) != 0)
  {
    uint64_t v40 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v40 = (uint64_t *)*v40;
    }
    sub_1881DF4((std::string **)(a1 + 264), (long long *)(*(void *)(a2 + 264) & 0xFFFFFFFFFFFFFFFELL), v40);
    int v32 = *(_DWORD *)(a2 + 40);
  }
  if ((v32 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 272) = 0;
  if ((v32 & 0x200) != 0) {
    operator new();
  }
  *(void *)(a1 + 280) = 0;
  if ((v32 & 0x400) != 0) {
    operator new();
  }
  *(void *)(a1 + 288) = 0;
  if ((v32 & 0x800) != 0) {
    operator new();
  }
  *(void *)(a1 + 296) = 0;
  if ((v32 & 0x1000) != 0) {
    operator new();
  }
  *(void *)(a1 + 304) = 0;
  long long v41 = *(_OWORD *)(a2 + 312);
  long long v42 = *(_OWORD *)(a2 + 328);
  *(_DWORD *)(a1 + 344) = *(_DWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 312) = v41;
  *(_OWORD *)(a1 + 328) = v42;
  return a1;
}

void sub_184D9BC()
{
}

void *sub_184DAF4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_184DBC4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 24));
  sub_1889DA8((uint64_t)(a1 + 21));
  sub_1889DA8((uint64_t)(a1 + 19));
  sub_1889DE8(a1 + 16);
  sub_1889DA8((uint64_t)(a1 + 14));
  sub_1889DA8((uint64_t)(a1 + 12));
  sub_12C5234(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_184DBC4(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 208);
  uint64_t v2 = (void ***)(a1 + 208);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 216) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 216));
  }
  if (*(uint64_t **)(a1 + 224) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 224));
  }
  if (*(uint64_t **)(a1 + 232) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 232));
  }
  if (*(uint64_t **)(a1 + 240) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 240));
  }
  uint64_t result = (void ***)(a1 + 248);
  if (*(uint64_t **)(a1 + 248) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if (*(uint64_t **)(a1 + 256) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 256));
  }
  if (*(uint64_t **)(a1 + 264) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 264));
  }
  if ((uint64_t (***)())a1 != &off_254D3B0)
  {
    if (*(void *)(a1 + 272))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 280))
    {
      sub_14775B0();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 288);
    if (v5)
    {
      sub_15B3DFC(v5);
      operator delete();
    }
    if (*(void *)(a1 + 296))
    {
      sub_15C05B4();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 304);
    if (result)
    {
      sub_184B748(result);
      operator delete();
    }
  }
  return result;
}

void sub_184DD54(void *a1)
{
  sub_184DAF4(a1);

  operator delete();
}

unsigned __int8 *sub_184DD8C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v152 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v152, a3[11].i32[1]) & 1) == 0)
  {
    int v150 = 0;
    unint64_t v148 = (uint64_t *)(a1 + 8);
    v151 = (uint64_t **)(a1 + 128);
    uint64_t v149 = (uint64_t *)(a1 + 72);
    uint64_t v7 = (uint64_t **)(a1 + 48);
    while (2)
    {
      uint64_t v5 = (unsigned __int8 *)(*(void *)v152 + 1);
      unsigned int v8 = **(unsigned char **)v152;
      if ((char)**(unsigned char **)v152 < 0)
      {
        int v9 = (char)*v5;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          uint64_t v5 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v152, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          uint64_t v5 = (unsigned __int8 *)(*(void *)v152 + 2);
        }
      }
      *(void *)v152 = v5;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v12 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
          if (v12) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 208);
          goto LABEL_258;
        case 2u:
          if (v8 != 18) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x100u;
          uint64_t v76 = *(void *)(a1 + 272);
          if (!v76)
          {
            uint64_t v77 = (void *)(*v148 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v148) {
              uint64_t v77 = (void *)*v77;
            }
            uint64_t v76 = sub_15C1918((uint64_t)v77);
            *(void *)(a1 + 272) = v76;
            uint64_t v5 = *(unsigned __int8 **)v152;
          }
          uint64_t v32 = (uint64_t)sub_1198F14(a3, v76, v5);
          goto LABEL_259;
        case 3u:
          if (v8 != 26) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v54 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
          if (v54) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 216);
          goto LABEL_258;
        case 4u:
          if (v8 != 34) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v90 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v90 & 0xFFFFFFFFFFFFFFFCLL);
          if (v90) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 224);
          goto LABEL_258;
        case 5u:
          if (v8 != 42) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v100 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v100 & 0xFFFFFFFFFFFFFFFCLL);
          if (v100) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 232);
          goto LABEL_258;
        case 6u:
          if (v8 != 50) {
            goto LABEL_301;
          }
          uint64_t v55 = (const std::string::value_type *)(v5 - 1);
          while (1)
          {
            int v56 = (char *)(v55 + 1);
            *(void *)v152 = v55 + 1;
            v57 = *(_DWORD **)(a1 + 64);
            if (v57 && (uint64_t v58 = *(int *)(a1 + 56), (int)v58 < *v57))
            {
              *(_DWORD *)(a1 + 56) = v58 + 1;
              int v59 = *(std::string **)&v57[2 * v58 + 2];
            }
            else
            {
              if (!*v7) {
                operator new();
              }
              *uint64_t v61 = v60;
              v61[1] = sub_3A6EDC;
              *BOOL v60 = 0;
              v60[1] = 0;
              v60[2] = 0;
              int v59 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v60);
              int v56 = *(char **)v152;
            }
            uint64_t v55 = sub_188C244(v59, v56, (uint64_t)a3);
            *(void *)v152 = v55;
            if (!v55) {
              goto LABEL_332;
            }
            if (*(void *)a3 <= (unint64_t)v55 || *v55 != 50) {
              goto LABEL_260;
            }
          }
        case 8u:
          if (v8 != 64) {
            goto LABEL_301;
          }
          v150 |= 0x2000u;
          uint64_t v78 = (char *)(v5 + 1);
          int v79 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_151;
          }
          int v80 = *v78;
          int v79 = v79 + (v80 << 7) - 128;
          if (v80 < 0)
          {
            uint64_t v133 = sub_188C0D0((uint64_t)v5, v79);
            *(void *)v152 = v133;
            *(_DWORD *)(a1 + 312) = v134;
            if (!v133) {
              goto LABEL_332;
            }
          }
          else
          {
            uint64_t v78 = (char *)(v5 + 2);
LABEL_151:
            *(void *)v152 = v78;
            *(_DWORD *)(a1 + 312) = v79;
          }
          goto LABEL_260;
        case 9u:
          if (v8 != 74) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x200u;
          uint64_t v91 = *(void *)(a1 + 280);
          if (!v91)
          {
            uint64_t v92 = (void *)(*v148 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v148) {
              uint64_t v92 = (void *)*v92;
            }
            uint64_t v91 = sub_1479978((uint64_t)v92);
            *(void *)(a1 + 280) = v91;
            uint64_t v5 = *(unsigned __int8 **)v152;
          }
          uint64_t v32 = sub_1352B04(a3, v91, v5);
          goto LABEL_259;
        case 0xAu:
          if (v8 != 80) {
            goto LABEL_301;
          }
          unint64_t v101 = (char *)(v5 + 1);
          unint64_t v43 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_208;
          }
          int v102 = *v101;
          int v103 = v43 + (v102 << 7);
          unint64_t v43 = (v103 - 128);
          if (v102 < 0)
          {
            *(void *)v152 = sub_188C138((uint64_t)v5, (v103 - 128));
            if (!*(void *)v152) {
              goto LABEL_332;
            }
            unint64_t v43 = v137;
          }
          else
          {
            unint64_t v101 = (char *)(v5 + 2);
LABEL_208:
            *(void *)v152 = v101;
          }
          if (v43 <= 1)
          {
            *(_DWORD *)(a1 + 40) |= 0x4000u;
            *(_DWORD *)(a1 + 316) = v43;
            goto LABEL_260;
          }
          if (*v148) {
            unint64_t v143 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v143 = (std::string *)sub_188DBD8(v148);
          }
          int v144 = 10;
          goto LABEL_287;
        case 0xBu:
          if (v8 != 88) {
            goto LABEL_301;
          }
          v150 |= 0x8000u;
          v104 = (char *)(v5 + 1);
          int v105 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_215;
          }
          int v106 = *v104;
          int v105 = v105 + (v106 << 7) - 128;
          if (v106 < 0)
          {
            uint64_t v138 = sub_188C0D0((uint64_t)v5, v105);
            *(void *)v152 = v138;
            *(_DWORD *)(a1 + 320) = v139;
            if (!v138) {
              goto LABEL_332;
            }
          }
          else
          {
            v104 = (char *)(v5 + 2);
LABEL_215:
            *(void *)v152 = v104;
            *(_DWORD *)(a1 + 320) = v105;
          }
          goto LABEL_260;
        case 0xCu:
          if (v8 != 96) {
            goto LABEL_301;
          }
          v150 |= 0x10000u;
          int v33 = (char *)(v5 + 1);
          int v34 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_55;
          }
          int v35 = *v33;
          int v34 = v34 + (v35 << 7) - 128;
          if (v35 < 0)
          {
            uint64_t v126 = sub_188C0D0((uint64_t)v5, v34);
            *(void *)v152 = v126;
            *(_DWORD *)(a1 + 324) = v127;
            if (!v126) {
              goto LABEL_332;
            }
          }
          else
          {
            int v33 = (char *)(v5 + 2);
LABEL_55:
            *(void *)v152 = v33;
            *(_DWORD *)(a1 + 324) = v34;
          }
          goto LABEL_260;
        case 0xDu:
          if (v8 != 106) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x400u;
          uint64_t v62 = *(void *)(a1 + 288);
          if (!v62)
          {
            uint64_t v63 = (void *)(*v148 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v148) {
              uint64_t v63 = (void *)*v63;
            }
            uint64_t v62 = sub_15C1CB4((uint64_t)v63);
            *(void *)(a1 + 288) = v62;
            uint64_t v5 = *(unsigned __int8 **)v152;
          }
          uint64_t v32 = (uint64_t)sub_11B3E48(a3, v62, v5);
          goto LABEL_259;
        case 0xEu:
          if (v8 != 112) {
            goto LABEL_301;
          }
          long long v42 = (char *)(v5 + 1);
          unint64_t v43 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_75;
          }
          int v44 = *v42;
          int v45 = v43 + (v44 << 7);
          unint64_t v43 = (v45 - 128);
          if (v44 < 0)
          {
            *(void *)v152 = sub_188C138((uint64_t)v5, (v45 - 128));
            if (!*(void *)v152) {
              goto LABEL_332;
            }
            unint64_t v43 = v130;
          }
          else
          {
            long long v42 = (char *)(v5 + 2);
LABEL_75:
            *(void *)v152 = v42;
          }
          if (v43 <= 1)
          {
            *(_DWORD *)(a1 + 40) |= 0x20000u;
            *(_DWORD *)(a1 + 328) = v43;
            goto LABEL_260;
          }
          if (*v148) {
            unint64_t v143 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v143 = (std::string *)sub_188DBD8(v148);
          }
          int v144 = 14;
          goto LABEL_287;
        case 0xFu:
          if (v8 != 122) {
            goto LABEL_301;
          }
          uint64_t v24 = (char *)(v5 - 1);
          while (1)
          {
            int v25 = (unsigned __int8 *)(v24 + 1);
            *(void *)v152 = v24 + 1;
            uint64_t v26 = *(_DWORD **)(a1 + 88);
            if (v26 && (uint64_t v27 = *(int *)(a1 + 80), (int)v27 < *v26))
            {
              *(_DWORD *)(a1 + 80) = v27 + 1;
              uint64_t v28 = *(void *)&v26[2 * v27 + 2];
            }
            else
            {
              uint64_t v29 = sub_15C1CB4(*v149);
              uint64_t v28 = sub_188CDC8((uint64_t)v149, v29);
              int v25 = *(unsigned __int8 **)v152;
            }
            uint64_t v24 = sub_11B3E48(a3, v28, v25);
            *(void *)v152 = v24;
            if (!v24) {
              goto LABEL_332;
            }
            if (*(void *)a3 <= (unint64_t)v24 || *v24 != 122) {
              goto LABEL_260;
            }
          }
        case 0x10u:
          if (v8 != 128) {
            goto LABEL_301;
          }
          uint64_t v93 = (char *)(v5 + 1);
          unint64_t v43 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_186;
          }
          int v94 = *v93;
          int v95 = v43 + (v94 << 7);
          unint64_t v43 = (v95 - 128);
          if (v94 < 0)
          {
            *(void *)v152 = sub_188C138((uint64_t)v5, (v95 - 128));
            if (!*(void *)v152) {
              goto LABEL_332;
            }
            unint64_t v43 = v135;
          }
          else
          {
            uint64_t v93 = (char *)(v5 + 2);
LABEL_186:
            *(void *)v152 = v93;
          }
          if (sub_145C85C(v43))
          {
            *(_DWORD *)(a1 + 40) |= 0x800000u;
            *(_DWORD *)(a1 + 344) = v43;
            goto LABEL_260;
          }
          if (*v148) {
            unint64_t v143 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v143 = (std::string *)sub_188DBD8(v148);
          }
          int v144 = 16;
          goto LABEL_287;
        case 0x11u:
          if (v8 != 138) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v96 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v96 & 0xFFFFFFFFFFFFFFFCLL);
          if (v96) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 240);
          goto LABEL_258;
        case 0x12u:
          if (v8 == 144)
          {
            uint64_t v110 = (uint64_t)(v5 - 2);
            while (1)
            {
              *(void *)v152 = v110 + 2;
              unint64_t v111 = *(unsigned __int8 *)(v110 + 2);
              v112 = (char *)(v110 + 3);
              if (*(char *)(v110 + 2) < 0)
              {
                int v113 = *v112;
                int v114 = v111 + (v113 << 7);
                unint64_t v111 = (v114 - 128);
                if (v113 < 0)
                {
                  *(void *)v152 = sub_188C138(v110 + 2, (v114 - 128));
                  if (!*(void *)v152) {
                    goto LABEL_332;
                  }
                  unint64_t v111 = v117;
                  goto LABEL_227;
                }
                v112 = (char *)(v110 + 4);
              }
              *(void *)v152 = v112;
LABEL_227:
              if (v111 > 6)
              {
                if (*v148) {
                  v118 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v118 = (std::string *)sub_188DBD8(v148);
                }
                sub_188C020(18, v111, v118);
              }
              else
              {
                uint64_t v115 = *(unsigned int *)(a1 + 96);
                if (v115 == *(_DWORD *)(a1 + 100))
                {
                  int v116 = v115 + 1;
                  sub_188C80C((unsigned int *)(a1 + 96), v115 + 1);
                  *(_DWORD *)(*(void *)(a1 + 104) + 4 * v115) = v111;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 104) + 4 * v115) = v111;
                  int v116 = v115 + 1;
                }
                *(_DWORD *)(a1 + 96) = v116;
              }
              uint64_t v110 = *(void *)v152;
              if (*(void *)a3 <= *(void *)v152 || **(_WORD **)v152 != 400) {
                goto LABEL_260;
              }
            }
          }
          if (v8 != 146) {
            goto LABEL_301;
          }
          *(void *)&long long v153 = a1 + 96;
          *((void *)&v153 + 1) = sub_1764FEC;
          uint64_t v154 = a1 + 8;
          int v123 = 18;
          goto LABEL_253;
        case 0x13u:
          if (v8 != 152) {
            goto LABEL_301;
          }
          v150 |= 0x80000u;
          uint64_t v107 = (char *)(v5 + 1);
          uint64_t v108 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_220;
          }
          int v109 = *v107;
          uint64_t v108 = v108 + (v109 << 7) - 128;
          if (v109 < 0)
          {
            uint64_t v140 = sub_188C138((uint64_t)v5, v108);
            *(void *)v152 = v140;
            *(unsigned char *)(a1 + 336) = v141 != 0;
            if (!v140) {
              goto LABEL_332;
            }
          }
          else
          {
            uint64_t v107 = (char *)(v5 + 2);
LABEL_220:
            *(void *)v152 = v107;
            *(unsigned char *)(a1 + 336) = v108 != 0;
          }
          goto LABEL_260;
        case 0x14u:
          if (v8 == 160)
          {
            uint64_t v15 = (uint64_t)(v5 - 2);
            while (1)
            {
              *(void *)v152 = v15 + 2;
              unint64_t v16 = *(unsigned __int8 *)(v15 + 2);
              uint64_t v17 = (char *)(v15 + 3);
              if (*(char *)(v15 + 2) < 0)
              {
                int v18 = *v17;
                int v19 = v16 + (v18 << 7);
                unint64_t v16 = (v19 - 128);
                if (v18 < 0)
                {
                  *(void *)v152 = sub_188C138(v15 + 2, (v19 - 128));
                  if (!*(void *)v152) {
                    goto LABEL_332;
                  }
                  unint64_t v16 = v22;
                  goto LABEL_21;
                }
                uint64_t v17 = (char *)(v15 + 4);
              }
              *(void *)v152 = v17;
LABEL_21:
              if (v16 > 6)
              {
                if (*v148) {
                  int v23 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  int v23 = (std::string *)sub_188DBD8(v148);
                }
                sub_188C020(20, v16, v23);
              }
              else
              {
                uint64_t v20 = *(unsigned int *)(a1 + 112);
                if (v20 == *(_DWORD *)(a1 + 116))
                {
                  int v21 = v20 + 1;
                  sub_188C80C((unsigned int *)(a1 + 112), v20 + 1);
                  *(_DWORD *)(*(void *)(a1 + 120) + 4 * v20) = v16;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 120) + 4 * v20) = v16;
                  int v21 = v20 + 1;
                }
                *(_DWORD *)(a1 + 112) = v21;
              }
              uint64_t v15 = *(void *)v152;
              if (*(void *)a3 <= *(void *)v152 || **(_WORD **)v152 != 416) {
                goto LABEL_260;
              }
            }
          }
          if (v8 != 162) {
            goto LABEL_301;
          }
          *(void *)&long long v153 = a1 + 112;
          *((void *)&v153 + 1) = sub_1764FEC;
          uint64_t v154 = a1 + 8;
          int v123 = 20;
          goto LABEL_253;
        case 0x15u:
          if (v8 != 170) {
            goto LABEL_301;
          }
          uint64_t v46 = (const std::string::value_type *)(v5 - 2);
          while (1)
          {
            uint64_t v47 = (char *)(v46 + 2);
            *(void *)v152 = v46 + 2;
            v48 = *(_DWORD **)(a1 + 144);
            if (v48 && (uint64_t v49 = *(int *)(a1 + 136), (int)v49 < *v48))
            {
              *(_DWORD *)(a1 + 136) = v49 + 1;
              uint64_t v50 = *(std::string **)&v48[2 * v49 + 2];
            }
            else
            {
              if (!*v151) {
                operator new();
              }
              void *v52 = v51;
              v52[1] = sub_3A6EDC;
              *uint64_t v51 = 0;
              v51[1] = 0;
              v51[2] = 0;
              uint64_t v50 = (std::string *)sub_188CDC8((uint64_t)v151, (uint64_t)v51);
              uint64_t v47 = *(char **)v152;
            }
            uint64_t v46 = sub_188C244(v50, v47, (uint64_t)a3);
            *(void *)v152 = v46;
            if (!v46) {
              goto LABEL_332;
            }
            if (*(void *)a3 <= (unint64_t)v46 || *(_WORD *)v46 != 426) {
              goto LABEL_260;
            }
          }
        case 0x16u:
          if (v8 != 176) {
            goto LABEL_301;
          }
          unint64_t v119 = (char *)(v5 + 1);
          unint64_t v43 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_245;
          }
          int v120 = *v119;
          int v121 = v43 + (v120 << 7);
          unint64_t v43 = (v121 - 128);
          if (v120 < 0)
          {
            *(void *)v152 = sub_188C138((uint64_t)v5, (v121 - 128));
            if (!*(void *)v152)
            {
LABEL_332:
              uint64_t v5 = 0;
              goto LABEL_4;
            }
            unint64_t v43 = v142;
          }
          else
          {
            unint64_t v119 = (char *)(v5 + 2);
LABEL_245:
            *(void *)v152 = v119;
          }
          if (v43 <= 0x26 && ((1 << v43) & 0x7FE0100DFFLL) != 0)
          {
            *(_DWORD *)(a1 + 40) |= 0x40000u;
            *(_DWORD *)(a1 + 332) = v43;
            goto LABEL_260;
          }
          if (*v148) {
            unint64_t v143 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v143 = (std::string *)sub_188DBD8(v148);
          }
          int v144 = 22;
          goto LABEL_287;
        case 0x17u:
          if (v8 != 186) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x800u;
          uint64_t v30 = *(void *)(a1 + 296);
          if (!v30)
          {
            uint64_t v31 = (void *)(*v148 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v148) {
              uint64_t v31 = (void *)*v31;
            }
            uint64_t v30 = sub_15C2608((uint64_t)v31);
            *(void *)(a1 + 296) = v30;
            uint64_t v5 = *(unsigned __int8 **)v152;
          }
          uint64_t v32 = (uint64_t)sub_145CA1C(a3, v30, v5);
          goto LABEL_259;
        case 0x18u:
          if (v8 != 194) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x20u;
          uint64_t v53 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
          if (v53) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 248);
          goto LABEL_258;
        case 0x19u:
          if (v8 != 200) {
            goto LABEL_301;
          }
          v150 |= 0x100000u;
          uint64_t v36 = (char *)(v5 + 1);
          uint64_t v37 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_60;
          }
          int v38 = *v36;
          uint64_t v37 = v37 + (v38 << 7) - 128;
          if (v38 < 0)
          {
            uint64_t v128 = sub_188C138((uint64_t)v5, v37);
            *(void *)v152 = v128;
            *(unsigned char *)(a1 + 337) = v129 != 0;
            if (!v128) {
              goto LABEL_332;
            }
          }
          else
          {
            uint64_t v36 = (char *)(v5 + 2);
LABEL_60:
            *(void *)v152 = v36;
            *(unsigned char *)(a1 + 337) = v37 != 0;
          }
          goto LABEL_260;
        case 0x1Au:
          if (v8 == 208)
          {
            uint64_t v81 = (uint64_t)(v5 - 2);
            while (1)
            {
              *(void *)v152 = v81 + 2;
              unint64_t v82 = *(unsigned __int8 *)(v81 + 2);
              uint64_t v83 = (char *)(v81 + 3);
              if (*(char *)(v81 + 2) < 0)
              {
                int v84 = *v83;
                int v85 = v82 + (v84 << 7);
                unint64_t v82 = (v85 - 128);
                if (v84 < 0)
                {
                  *(void *)v152 = sub_188C138(v81 + 2, (v85 - 128));
                  if (!*(void *)v152) {
                    goto LABEL_332;
                  }
                  unint64_t v82 = v88;
                  goto LABEL_158;
                }
                uint64_t v83 = (char *)(v81 + 4);
              }
              *(void *)v152 = v83;
LABEL_158:
              if (sub_1479AA4(v82))
              {
                uint64_t v86 = *(unsigned int *)(a1 + 152);
                if (v86 == *(_DWORD *)(a1 + 156))
                {
                  int v87 = v86 + 1;
                  sub_188C80C((unsigned int *)(a1 + 152), v86 + 1);
                  *(_DWORD *)(*(void *)(a1 + 160) + 4 * v86) = v82;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 160) + 4 * v86) = v82;
                  int v87 = v86 + 1;
                }
                *(_DWORD *)(a1 + 152) = v87;
              }
              else
              {
                if (*v148) {
                  v89 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  v89 = (std::string *)sub_188DBD8(v148);
                }
                sub_188C020(26, v82, v89);
              }
              uint64_t v81 = *(void *)v152;
              if (*(void *)a3 <= *(void *)v152 || **(_WORD **)v152 != 464) {
                goto LABEL_260;
              }
            }
          }
          if (v8 != 210) {
            goto LABEL_301;
          }
          *(void *)&long long v153 = a1 + 152;
          *((void *)&v153 + 1) = sub_1479AA4;
          uint64_t v154 = a1 + 8;
          int v123 = 26;
          goto LABEL_253;
        case 0x1Bu:
          if (v8 != 218) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x1000u;
          unint64_t v39 = *(void **)(a1 + 304);
          if (!v39)
          {
            uint64_t v40 = (void *)(*v148 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v148) {
              uint64_t v40 = (void *)*v40;
            }
            unint64_t v39 = sub_18508F8((uint64_t)v40);
            *(void *)(a1 + 304) = v39;
            uint64_t v5 = *(unsigned __int8 **)v152;
          }
          uint64_t v32 = (uint64_t)sub_184F0AC(a3, (uint64_t)v39, v5);
          goto LABEL_259;
        case 0x1Cu:
          if (v8 == 226)
          {
            *(void *)&long long v153 = a1 + 168;
            *((void *)&v153 + 1) = sub_184A060;
            uint64_t v154 = a1 + 8;
            int v123 = 28;
            goto LABEL_253;
          }
          if (v8 != 224) {
            goto LABEL_301;
          }
          uint64_t v145 = sub_110DB5C((uint64_t *)v152);
          uint64_t v5 = *(unsigned __int8 **)v152;
          if (!*(void *)v152) {
            goto LABEL_4;
          }
          unint64_t v43 = v145;
          if (v145 <= 0x26 && ((1 << v145) & 0x7FE0100DFFLL) != 0)
          {
            sub_13DD594(a1, v145);
          }
          else
          {
            if (*v148) {
              unint64_t v143 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              unint64_t v143 = (std::string *)sub_188DBD8(v148);
            }
            int v144 = 28;
LABEL_287:
            sub_188C020(v144, v43, v143);
          }
LABEL_260:
          if (sub_11947B8((uint64_t)a3, (char **)v152, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        case 0x1Du:
          if (v8 != 234) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x40u;
          uint64_t v124 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v124 & 0xFFFFFFFFFFFFFFFCLL);
          if (v124) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 256);
          goto LABEL_258;
        case 0x1Eu:
          if (v8 != 242) {
            goto LABEL_301;
          }
          *(_DWORD *)(a1 + 40) |= 0x80u;
          uint64_t v41 = *(void *)(a1 + 8);
          unint64_t v13 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
          if (v41) {
            unint64_t v13 = (uint64_t *)*v13;
          }
          int v14 = (void *)(a1 + 264);
LABEL_258:
          uint64_t v125 = (std::string *)sub_1880F84(v14, v13);
          uint64_t v32 = (uint64_t)sub_188C244(v125, *(char **)v152, (uint64_t)a3);
          goto LABEL_259;
        case 0x1Fu:
          if (v8 != 248) {
            goto LABEL_301;
          }
          v150 |= 0x200000u;
          uint64_t v64 = (char *)(v5 + 1);
          uint64_t v65 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_120;
          }
          int v66 = *v64;
          uint64_t v65 = v65 + (v66 << 7) - 128;
          if (v66 < 0)
          {
            uint64_t v131 = sub_188C138((uint64_t)v5, v65);
            *(void *)v152 = v131;
            *(unsigned char *)(a1 + 338) = v132 != 0;
            if (!v131) {
              goto LABEL_332;
            }
          }
          else
          {
            uint64_t v64 = (char *)(v5 + 2);
LABEL_120:
            *(void *)v152 = v64;
            *(unsigned char *)(a1 + 338) = v65 != 0;
          }
          goto LABEL_260;
        case 0x20u:
          if ((_BYTE)v8) {
            goto LABEL_301;
          }
          uint64_t v97 = (char *)(v5 + 1);
          unint64_t v43 = *v5;
          if (((char)*v5 & 0x80000000) == 0) {
            goto LABEL_197;
          }
          int v98 = *v97;
          int v99 = v43 + (v98 << 7);
          unint64_t v43 = (v99 - 128);
          if (v98 < 0)
          {
            *(void *)v152 = sub_188C138((uint64_t)v5, (v99 - 128));
            if (!*(void *)v152) {
              goto LABEL_332;
            }
            unint64_t v43 = v136;
          }
          else
          {
            uint64_t v97 = (char *)(v5 + 2);
LABEL_197:
            *(void *)v152 = v97;
          }
          if (v43 <= 2)
          {
            *(_DWORD *)(a1 + 40) |= 0x400000u;
            *(_DWORD *)(a1 + 340) = v43;
            goto LABEL_260;
          }
          if (*v148) {
            unint64_t v143 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v143 = (std::string *)sub_188DBD8(v148);
          }
          int v144 = 32;
          goto LABEL_287;
        case 0x21u:
          if (v8 != 8)
          {
            if (v8 == 10)
            {
              *(void *)&long long v153 = a1 + 192;
              *((void *)&v153 + 1) = sub_15B0788;
              uint64_t v154 = a1 + 8;
              int v123 = 33;
LABEL_253:
              int v155 = v123;
              uint64_t v32 = (uint64_t)sub_1112E88((uint64_t)a3, (char *)v5, &v153);
            }
            else
            {
LABEL_301:
              if (v8) {
                BOOL v146 = (v8 & 7) == 4;
              }
              else {
                BOOL v146 = 1;
              }
              if (v146)
              {
                if (v5) {
                  a3[10].i32[0] = v8 - 1;
                }
                goto LABEL_4;
              }
              if (v8 - 800 > 0x31F)
              {
                if (*v148)
                {
                  v147 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else
                {
                  v147 = (std::string *)sub_188DBD8(v148);
                  uint64_t v5 = *(unsigned __int8 **)v152;
                }
                uint64_t v32 = (uint64_t)sub_1885AC0(v8, v147, (char *)v5, a3);
              }
              else
              {
                uint64_t v32 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v5, (uint64_t)&off_254D3B0, v148, a3);
              }
            }
LABEL_259:
            *(void *)v152 = v32;
            if (!v32) {
              goto LABEL_332;
            }
            goto LABEL_260;
          }
          uint64_t v67 = (uint64_t)(v5 - 2);
          break;
        default:
          goto LABEL_301;
      }
      break;
    }
    while (1)
    {
      *(void *)v152 = v67 + 2;
      unint64_t v68 = *(unsigned __int8 *)(v67 + 2);
      uint64_t v69 = (char *)(v67 + 3);
      if (*(char *)(v67 + 2) < 0)
      {
        int v70 = *v69;
        int v71 = v68 + (v70 << 7);
        unint64_t v68 = (v71 - 128);
        if (v70 < 0)
        {
          *(void *)v152 = sub_188C138(v67 + 2, (v71 - 128));
          if (!*(void *)v152) {
            goto LABEL_332;
          }
          unint64_t v68 = v74;
          goto LABEL_127;
        }
        uint64_t v69 = (char *)(v67 + 4);
      }
      *(void *)v152 = v69;
LABEL_127:
      if (sub_15B0788(v68))
      {
        uint64_t v72 = *(unsigned int *)(a1 + 192);
        if (v72 == *(_DWORD *)(a1 + 196))
        {
          int v73 = v72 + 1;
          sub_188C80C((unsigned int *)(a1 + 192), v72 + 1);
          *(_DWORD *)(*(void *)(a1 + 200) + 4 * v72) = v68;
        }
        else
        {
          *(_DWORD *)(*(void *)(a1 + 200) + 4 * v72) = v68;
          int v73 = v72 + 1;
        }
        *(_DWORD *)(a1 + 192) = v73;
      }
      else
      {
        if (*v148) {
          v75 = (std::string *)((*v148 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v75 = (std::string *)sub_188DBD8(v148);
        }
        sub_188C020(33, v68, v75);
      }
      uint64_t v67 = *(void *)v152;
      if (*(void *)a3 <= *(void *)v152 || **(_WORD **)v152 != 648) {
        goto LABEL_260;
      }
    }
  }
  int v150 = 0;
LABEL_3:
  uint64_t v5 = *(unsigned __int8 **)v152;
LABEL_4:
  *(_DWORD *)(a1 + 40) |= v150;
  return v5;
}

char *sub_184F0AC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_184B80C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_184F13C(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 0x100) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 0x100) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 272);
  *unint64_t v4 = 18;
  unsigned int v15 = *(_DWORD *)(v14 + 44);
  v4[1] = v15;
  if (v15 > 0x7F) {
    unint64_t v16 = sub_188A9CC(v15, v4 + 1);
  }
  else {
    unint64_t v16 = v4 + 2;
  }
  unint64_t v4 = sub_15B0C0C(v14, v16, a3);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_39;
  }
LABEL_38:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_39:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_6:
  }
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  uint64_t v7 = *(unsigned int *)(a1 + 56);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 64) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_18;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v11)
      {
        *unint64_t v4 = 50;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        uint64_t v12 = v4 + 2;
        memcpy(v12, v10, v11);
        unint64_t v4 = &v12[v11];
        goto LABEL_16;
      }
LABEL_18:
      unint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v10, v4);
LABEL_16:
      v8 += 8;
    }
    while (v9 != v8);
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 312);
    *unint64_t v4 = 64;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v17 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 280);
    *unint64_t v4 = 74;
    unsigned int v20 = *(_DWORD *)(v19 + 64);
    v4[1] = v20;
    if (v20 > 0x7F) {
      int v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      int v21 = v4 + 2;
    }
    unint64_t v4 = sub_14778CC(v19, v21, a3);
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 316);
    *unint64_t v4 = 80;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v25 = *(_DWORD *)(a1 + 320);
    *unint64_t v4 = 88;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unsigned int v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 324);
    *unint64_t v4 = 96;
    v4[1] = v28;
    if (v28 > 0x7F)
    {
      v4[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      v4[2] = v28 >> 7;
      v4 += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *v4++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 288);
    *unint64_t v4 = 106;
    unsigned int v32 = *(_DWORD *)(v31 + 44);
    v4[1] = v32;
    if (v32 > 0x7F) {
      int v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      int v33 = v4 + 2;
    }
    unint64_t v4 = sub_15B43E4(v31, v33, a3);
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v34 = *(int *)(a1 + 328);
    *unint64_t v4 = 112;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unint64_t v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v37 = *(_DWORD *)(a1 + 80);
  if (v37)
  {
    for (int i = 0; i != v37; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v39 = *(void *)(*(void *)(a1 + 88) + 8 * i + 8);
      *unint64_t v4 = 122;
      unsigned int v40 = *(_DWORD *)(v39 + 44);
      v4[1] = v40;
      if (v40 > 0x7F) {
        uint64_t v41 = sub_188A9CC(v40, v4 + 1);
      }
      else {
        uint64_t v41 = v4 + 2;
      }
      unint64_t v4 = sub_15B43E4(v39, v41, a3);
    }
  }
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v42 = *(int *)(a1 + 344);
    *(_WORD *)unint64_t v4 = 384;
    v4[2] = v42;
    if (v42 > 0x7F)
    {
      v4[2] = v42 | 0x80;
      unint64_t v43 = v42 >> 7;
      v4[3] = v42 >> 7;
      v4 += 4;
      if (v42 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v44 = v43 >> 14;
          v43 >>= 7;
          *v4++ = v43;
        }
        while (v44);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v45 = *(unsigned int *)(a1 + 96);
  if ((int)v45 >= 1)
  {
    for (uint64_t j = 0; j != v45; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v47 = *(int *)(*(void *)(a1 + 104) + 4 * j);
      *(_WORD *)unint64_t v4 = 400;
      v4[2] = v47;
      if (v47 > 0x7F)
      {
        v4[2] = v47 | 0x80;
        unint64_t v48 = v47 >> 7;
        v4[3] = v47 >> 7;
        v4 += 4;
        if (v47 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v49 = v48 >> 14;
            v48 >>= 7;
            *v4++ = v48;
          }
          while (v49);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v50 = *(unsigned char *)(a1 + 336);
    *(_WORD *)unint64_t v4 = 408;
    v4[2] = v50;
    v4 += 3;
  }
  uint64_t v51 = *(unsigned int *)(a1 + 112);
  if ((int)v51 >= 1)
  {
    for (uint64_t k = 0; k != v51; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v53 = *(int *)(*(void *)(a1 + 120) + 4 * k);
      *(_WORD *)unint64_t v4 = 416;
      v4[2] = v53;
      if (v53 > 0x7F)
      {
        v4[2] = v53 | 0x80;
        unint64_t v54 = v53 >> 7;
        v4[3] = v53 >> 7;
        v4 += 4;
        if (v53 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v55 = v54 >> 14;
            v54 >>= 7;
            *v4++ = v54;
          }
          while (v55);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  uint64_t v56 = *(unsigned int *)(a1 + 136);
  if ((int)v56 >= 1)
  {
    uint64_t v57 = 0;
    uint64_t v58 = 8 * v56;
    do
    {
      int v59 = *(void **)(*(void *)(a1 + 144) + v57 + 8);
      if (*((char *)v59 + 23) < 0)
      {
        int64_t v60 = v59[1];
        if (v60 > 127) {
          goto LABEL_128;
        }
      }
      else
      {
        int64_t v60 = *((unsigned __int8 *)v59 + 23);
      }
      if (*a3 - (void)v4 + 13 >= v60)
      {
        *(_WORD *)unint64_t v4 = 426;
        v4[2] = v60;
        if (*((char *)v59 + 23) < 0) {
          int v59 = (void *)*v59;
        }
        uint64_t v61 = v4 + 3;
        memcpy(v61, v59, v60);
        unint64_t v4 = &v61[v60];
        goto LABEL_126;
      }
LABEL_128:
      unint64_t v4 = (char *)sub_188A868(a3, 21, (uint64_t)v59, v4);
LABEL_126:
      v57 += 8;
    }
    while (v58 != v57);
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v62 = *(int *)(a1 + 332);
    *(_WORD *)unint64_t v4 = 432;
    v4[2] = v62;
    if (v62 > 0x7F)
    {
      v4[2] = v62 | 0x80;
      unint64_t v63 = v62 >> 7;
      v4[3] = v62 >> 7;
      v4 += 4;
      if (v62 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v64 = v63 >> 14;
          v63 >>= 7;
          *v4++ = v63;
        }
        while (v64);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v65 = *(void *)(a1 + 296);
    *(_WORD *)unint64_t v4 = 442;
    unsigned int v66 = *(_DWORD *)(v65 + 20);
    v4[2] = v66;
    if (v66 > 0x7F) {
      uint64_t v67 = sub_188A9CC(v66, v4 + 2);
    }
    else {
      uint64_t v67 = v4 + 3;
    }
    unint64_t v4 = sub_15C08F4(v65, v67, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_138:
      if ((v6 & 0x100000) == 0) {
        goto LABEL_150;
      }
      goto LABEL_147;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_138;
  }
  unint64_t v4 = sub_117A0AC(a3, 24, (const void **)(*(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100000) == 0) {
    goto LABEL_150;
  }
LABEL_147:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v68 = *(unsigned char *)(a1 + 337);
  *(_WORD *)unint64_t v4 = 456;
  v4[2] = v68;
  v4 += 3;
LABEL_150:
  uint64_t v69 = *(unsigned int *)(a1 + 152);
  if ((int)v69 >= 1)
  {
    for (uint64_t m = 0; m != v69; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v71 = *(int *)(*(void *)(a1 + 160) + 4 * m);
      *(_WORD *)unint64_t v4 = 464;
      v4[2] = v71;
      if (v71 > 0x7F)
      {
        v4[2] = v71 | 0x80;
        unint64_t v72 = v71 >> 7;
        v4[3] = v71 >> 7;
        v4 += 4;
        if (v71 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v73 = v72 >> 14;
            v72 >>= 7;
            *v4++ = v72;
          }
          while (v73);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v74 = *(void *)(a1 + 304);
    *(_WORD *)unint64_t v4 = 474;
    unsigned int v75 = *(_DWORD *)(v74 + 20);
    v4[2] = v75;
    if (v75 > 0x7F) {
      uint64_t v76 = sub_188A9CC(v75, v4 + 2);
    }
    else {
      uint64_t v76 = v4 + 3;
    }
    unint64_t v4 = (char *)sub_184B94C(v74, (unint64_t)v76, a3);
  }
  unsigned int v77 = *(_DWORD *)(a1 + 184);
  if ((int)v77 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)unint64_t v4 = 482;
    uint64_t v78 = v4 + 2;
    if (v77 >= 0x80)
    {
      do
      {
        *v78++ = v77 | 0x80;
        unsigned int v79 = v77 >> 7;
        unsigned int v100 = v77 >> 14;
        v77 >>= 7;
      }
      while (v100);
    }
    else
    {
      LOBYTE(v79) = v77;
    }
    *uint64_t v78 = v79;
    unint64_t v4 = v78 + 1;
    int v80 = *(int **)(a1 + 176);
    uint64_t v81 = &v80[*(int *)(a1 + 168)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v83 = *v80++;
      unint64_t v82 = v83;
      *unint64_t v4 = v83;
      if (v83 > 0x7F)
      {
        *unint64_t v4 = v82 | 0x80;
        unint64_t v84 = v82 >> 7;
        v4[1] = v82 >> 7;
        v4 += 2;
        if (v82 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v85 = v84 >> 14;
            v84 >>= 7;
            *v4++ = v84;
          }
          while (v85);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v80 < v81);
  }
  if ((v6 & 0x40) != 0)
  {
    unint64_t v4 = sub_117A0AC(a3, 29, (const void **)(*(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x80) == 0)
    {
LABEL_181:
      if ((v6 & 0x200000) == 0) {
        goto LABEL_182;
      }
      goto LABEL_186;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_181;
  }
  unint64_t v4 = sub_117A0AC(a3, 30, (const void **)(*(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x200000) == 0)
  {
LABEL_182:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_195;
    }
    goto LABEL_189;
  }
LABEL_186:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v86 = *(unsigned char *)(a1 + 338);
  *(_WORD *)unint64_t v4 = 504;
  v4[2] = v86;
  v4 += 3;
  if ((v6 & 0x400000) != 0)
  {
LABEL_189:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v87 = *(int *)(a1 + 340);
    *(_WORD *)unint64_t v4 = 640;
    v4[2] = v87;
    if (v87 > 0x7F)
    {
      v4[2] = v87 | 0x80;
      unint64_t v88 = v87 >> 7;
      v4[3] = v87 >> 7;
      v4 += 4;
      if (v87 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v89 = v88 >> 14;
          v88 >>= 7;
          *v4++ = v88;
        }
        while (v89);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_195:
  uint64_t v90 = *(unsigned int *)(a1 + 192);
  if ((int)v90 >= 1)
  {
    for (uint64_t n = 0; n != v90; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v92 = *(int *)(*(void *)(a1 + 200) + 4 * n);
      *(_WORD *)unint64_t v4 = 648;
      v4[2] = v92;
      if (v92 > 0x7F)
      {
        v4[2] = v92 | 0x80;
        unint64_t v93 = v92 >> 7;
        v4[3] = v92 >> 7;
        v4 += 4;
        if (v92 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v94 = v93 >> 14;
            v93 >>= 7;
            *v4++ = v93;
          }
          while (v94);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 100, 200, v4, a3);
  }
  uint64_t v95 = *(void *)(a1 + 8);
  if ((v95 & 1) == 0) {
    return v4;
  }
  unint64_t v97 = v95 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v97 + 31) < 0)
  {
    int v98 = *(void **)(v97 + 8);
    uint64_t v99 = *(void *)(v97 + 16);
  }
  else
  {
    int v98 = (void *)(v97 + 8);
    LODWORD(v99) = *(unsigned __int8 *)(v97 + 31);
  }
  if (*a3 - (void)v4 >= (int)v99)
  {
    uint64_t v101 = (int)v99;
    memcpy(v4, v98, (int)v99);
    v4 += v101;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v98, v99, v4);
}

uint64_t sub_184FEFC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(int *)(a1 + 80);
  uint64_t v10 = v4 + v9;
  uint64_t v11 = *(void *)(a1 + 88);
  if (v11) {
    uint64_t v12 = (uint64_t *)(v11 + 8);
  }
  else {
    uint64_t v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_15B4924(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 96);
  if (v16)
  {
    int v17 = 0;
    uint64_t v18 = 0;
    do
    {
      int v19 = *(_DWORD *)(*(void *)(a1 + 104) + 4 * v17);
      if (v19 < 0) {
        uint64_t v20 = 10;
      }
      else {
        uint64_t v20 = (9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6;
      }
      v18 += v20;
      ++v17;
    }
    while (v16 != v17);
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 112);
  if (v21)
  {
    int v22 = 0;
    uint64_t v23 = 0;
    do
    {
      int v24 = *(_DWORD *)(*(void *)(a1 + 120) + 4 * v22);
      if (v24 < 0) {
        uint64_t v25 = 10;
      }
      else {
        uint64_t v25 = (9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6;
      }
      v23 += v25;
      ++v22;
    }
    while (v21 != v22);
  }
  else
  {
    uint64_t v23 = 0;
  }
  uint64_t v26 = *(unsigned int *)(a1 + 136);
  uint64_t v27 = v18 + v10 + v23 + 2 * (v21 + v16 + v26);
  if ((int)v26 >= 1)
  {
    unsigned int v28 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
      uint64_t v31 = *(void *)(v29 + 8);
      if ((v30 & 0x80u) == 0) {
        uint64_t v31 = v30;
      }
      v27 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6);
      --v26;
    }
    while (v26);
  }
  uint64_t v32 = *(unsigned int *)(a1 + 152);
  if (v32)
  {
    int v33 = 0;
    uint64_t v34 = 0;
    do
    {
      int v35 = *(_DWORD *)(*(void *)(a1 + 160) + 4 * v33);
      if (v35 < 0) {
        uint64_t v36 = 10;
      }
      else {
        uint64_t v36 = (9 * (__clz(v35 | 1) ^ 0x1F) + 73) >> 6;
      }
      v34 += v36;
      ++v33;
    }
    while (v32 != v33);
  }
  else
  {
    uint64_t v34 = 0;
  }
  uint64_t v37 = v27 + 2 * v32 + v34;
  int v38 = *(_DWORD *)(a1 + 168);
  if (v38)
  {
    int v39 = 0;
    uint64_t v40 = 0;
    do
    {
      int v41 = *(_DWORD *)(*(void *)(a1 + 176) + 4 * v39);
      if (v41 < 0) {
        uint64_t v42 = 10;
      }
      else {
        uint64_t v42 = (9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6;
      }
      v40 += v42;
      ++v39;
    }
    while (v38 != v39);
    if (v40)
    {
      if ((v40 & 0x80000000) != 0) {
        uint64_t v43 = 10;
      }
      else {
        uint64_t v43 = (9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6;
      }
      v37 += v43 + 2;
      int v38 = v40;
    }
    else
    {
      int v38 = 0;
    }
  }
  else
  {
    uint64_t v40 = 0;
  }
  *(_DWORD *)(a1 + 184) = v38;
  uint64_t v44 = *(unsigned int *)(a1 + 192);
  if (v44)
  {
    int v45 = 0;
    uint64_t v46 = 0;
    do
    {
      int v47 = *(_DWORD *)(*(void *)(a1 + 200) + 4 * v45);
      if (v47 < 0) {
        uint64_t v48 = 10;
      }
      else {
        uint64_t v48 = (9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6;
      }
      v46 += v48;
      ++v45;
    }
    while (v44 != v45);
  }
  else
  {
    uint64_t v46 = 0;
  }
  uint64_t v49 = v37 + v40 + 2 * v44 + v46;
  int v50 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v50) {
    goto LABEL_74;
  }
  if (v50)
  {
    unint64_t v54 = *(void *)(a1 + 208) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v55 = *(unsigned __int8 *)(v54 + 23);
    uint64_t v56 = *(void *)(v54 + 8);
    if ((v55 & 0x80u) == 0) {
      uint64_t v56 = v55;
    }
    v49 += v56 + ((9 * (__clz(v56 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v50 & 2) == 0)
    {
LABEL_65:
      if ((v50 & 4) == 0) {
        goto LABEL_66;
      }
      goto LABEL_95;
    }
  }
  else if ((v50 & 2) == 0)
  {
    goto LABEL_65;
  }
  unint64_t v57 = *(void *)(a1 + 216) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v58 = *(unsigned __int8 *)(v57 + 23);
  uint64_t v59 = *(void *)(v57 + 8);
  if ((v58 & 0x80u) == 0) {
    uint64_t v59 = v58;
  }
  v49 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 4) == 0)
  {
LABEL_66:
    if ((v50 & 8) == 0) {
      goto LABEL_67;
    }
    goto LABEL_98;
  }
LABEL_95:
  unint64_t v60 = *(void *)(a1 + 224) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v61 = *(unsigned __int8 *)(v60 + 23);
  uint64_t v62 = *(void *)(v60 + 8);
  if ((v61 & 0x80u) == 0) {
    uint64_t v62 = v61;
  }
  v49 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 8) == 0)
  {
LABEL_67:
    if ((v50 & 0x10) == 0) {
      goto LABEL_68;
    }
    goto LABEL_101;
  }
LABEL_98:
  unint64_t v63 = *(void *)(a1 + 232) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v64 = *(unsigned __int8 *)(v63 + 23);
  uint64_t v65 = *(void *)(v63 + 8);
  if ((v64 & 0x80u) == 0) {
    uint64_t v65 = v64;
  }
  v49 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 0x10) == 0)
  {
LABEL_68:
    if ((v50 & 0x20) == 0) {
      goto LABEL_69;
    }
LABEL_104:
    unint64_t v69 = *(void *)(a1 + 248) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v70 = *(unsigned __int8 *)(v69 + 23);
    uint64_t v71 = *(void *)(v69 + 8);
    if ((v70 & 0x80u) == 0) {
      uint64_t v71 = v70;
    }
    v49 += v71 + ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v50 & 0x40) == 0)
    {
LABEL_70:
      if ((v50 & 0x80) == 0) {
        goto LABEL_74;
      }
      goto LABEL_71;
    }
    goto LABEL_107;
  }
LABEL_101:
  unint64_t v66 = *(void *)(a1 + 240) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v67 = *(unsigned __int8 *)(v66 + 23);
  uint64_t v68 = *(void *)(v66 + 8);
  if ((v67 & 0x80u) == 0) {
    uint64_t v68 = v67;
  }
  v49 += v68 + ((9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v50 & 0x20) != 0) {
    goto LABEL_104;
  }
LABEL_69:
  if ((v50 & 0x40) == 0) {
    goto LABEL_70;
  }
LABEL_107:
  unint64_t v72 = *(void *)(a1 + 256) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v73 = *(unsigned __int8 *)(v72 + 23);
  uint64_t v74 = *(void *)(v72 + 8);
  if ((v73 & 0x80u) == 0) {
    uint64_t v74 = v73;
  }
  v49 += v74 + ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v50 & 0x80) != 0)
  {
LABEL_71:
    unint64_t v51 = *(void *)(a1 + 264) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
    uint64_t v53 = *(void *)(v51 + 8);
    if ((v52 & 0x80u) == 0) {
      uint64_t v53 = v52;
    }
    v49 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_74:
  if ((v50 & 0xFF00) == 0) {
    goto LABEL_84;
  }
  if ((v50 & 0x100) != 0)
  {
    uint64_t v75 = sub_15B0D90(*(void *)(a1 + 272));
    v49 += v75 + ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v50 & 0x200) == 0)
    {
LABEL_77:
      if ((v50 & 0x400) == 0) {
        goto LABEL_78;
      }
      goto LABEL_113;
    }
  }
  else if ((v50 & 0x200) == 0)
  {
    goto LABEL_77;
  }
  uint64_t v76 = sub_1477ADC(*(void *)(a1 + 280));
  v49 += v76 + ((9 * (__clz(v76 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 0x400) == 0)
  {
LABEL_78:
    if ((v50 & 0x800) == 0) {
      goto LABEL_79;
    }
    goto LABEL_114;
  }
LABEL_113:
  uint64_t v77 = sub_15B4924(*(void *)(a1 + 288));
  v49 += v77 + ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 0x800) == 0)
  {
LABEL_79:
    if ((v50 & 0x1000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_115;
  }
LABEL_114:
  uint64_t v78 = sub_15C0A80(*(void *)(a1 + 296));
  v49 += v78 + ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v50 & 0x1000) == 0)
  {
LABEL_80:
    if ((v50 & 0x2000) == 0) {
      goto LABEL_81;
    }
    goto LABEL_119;
  }
LABEL_115:
  uint64_t v79 = *(void *)(a1 + 304);
  uint64_t v80 = 9;
  if ((*(unsigned char *)(v79 + 16) & 1) == 0) {
    uint64_t v80 = 0;
  }
  uint64_t v81 = *(void *)(v79 + 8);
  if (v81)
  {
    unint64_t v99 = v81 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v99 + 31) < 0) {
      uint64_t v100 = *(void *)(v99 + 16);
    }
    else {
      uint64_t v100 = *(unsigned __int8 *)(v99 + 31);
    }
    v80 += v100;
  }
  *(_DWORD *)(v79 + 20) = v80;
  v49 += v80 + ((9 * (__clz(v80 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v50 & 0x2000) == 0)
  {
LABEL_81:
    if ((v50 & 0x4000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_120;
  }
LABEL_119:
  v49 += ((9 * (__clz(*(_DWORD *)(a1 + 312) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 0x4000) == 0)
  {
LABEL_82:
    if ((v50 & 0x8000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_83;
  }
LABEL_120:
  int v82 = *(_DWORD *)(a1 + 316);
  if (v82 < 0) {
    uint64_t v83 = 11;
  }
  else {
    uint64_t v83 = ((9 * (__clz(v82 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v49 += v83;
  if ((v50 & 0x8000) != 0) {
LABEL_83:
  }
    v49 += ((9 * (__clz(*(_DWORD *)(a1 + 320) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_84:
  if ((v50 & 0xFF0000) == 0) {
    goto LABEL_151;
  }
  if ((v50 & 0x10000) == 0)
  {
    if ((v50 & 0x20000) == 0) {
      goto LABEL_87;
    }
LABEL_123:
    int v84 = *(_DWORD *)(a1 + 328);
    if (v84 < 0) {
      uint64_t v85 = 11;
    }
    else {
      uint64_t v85 = ((9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v49 += v85;
    if ((v50 & 0x40000) == 0) {
      goto LABEL_134;
    }
    goto LABEL_130;
  }
  v49 += ((9 * (__clz(*(_DWORD *)(a1 + 324) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v50 & 0x20000) != 0) {
    goto LABEL_123;
  }
LABEL_87:
  if ((v50 & 0x40000) != 0)
  {
LABEL_130:
    int v86 = *(_DWORD *)(a1 + 332);
    if (v86 < 0) {
      uint64_t v87 = 12;
    }
    else {
      uint64_t v87 = ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    v49 += v87;
  }
LABEL_134:
  uint64_t v88 = v49 + 3;
  if ((v50 & 0x80000) == 0) {
    uint64_t v88 = v49;
  }
  if ((v50 & 0x100000) != 0) {
    v88 += 3;
  }
  if ((v50 & 0x200000) != 0) {
    uint64_t v49 = v88 + 3;
  }
  else {
    uint64_t v49 = v88;
  }
  if ((v50 & 0x400000) != 0)
  {
    int v89 = *(_DWORD *)(a1 + 340);
    uint64_t v90 = ((9 * (__clz(v89 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v89 >= 0) {
      uint64_t v91 = v90;
    }
    else {
      uint64_t v91 = 12;
    }
    v49 += v91;
  }
  if ((v50 & 0x800000) != 0)
  {
    int v92 = *(_DWORD *)(a1 + 344);
    uint64_t v93 = ((9 * (__clz(v92 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v92 >= 0) {
      uint64_t v94 = v93;
    }
    else {
      uint64_t v94 = 12;
    }
    v49 += v94;
  }
LABEL_151:
  uint64_t v95 = *(void *)(a1 + 8);
  if (v95)
  {
    unint64_t v97 = v95 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v97 + 31) < 0) {
      uint64_t v98 = *(void *)(v97 + 16);
    }
    else {
      uint64_t v98 = *(unsigned __int8 *)(v97 + 31);
    }
    v49 += v98;
  }
  *(_DWORD *)(a1 + 44) = v49;
  return v49;
}

void sub_18507B8(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_182A88C(a1);
    sub_182D0C4(a1, a2);
  }
}

void *sub_1850804@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ClientMetadata");
}

double sub_1850814(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(v2 + 8) = a1;
  *(void *)uint64_t v2 = off_24E2398;
  double result = 0.0;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 41) = 0u;
  *(_DWORD *)(v2 + 60) = 1;
  return result;
}

uint64_t sub_185089C(uint64_t a1)
{
  if (!a1)
  {
    sub_187B280();
  }

  return sub_184ADF0(v3, a1, 0);
}

void *sub_18508F8(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *double result = off_24E2498;
  result[2] = 0;
  result[3] = 0;
  return result;
}

double sub_1850970(uint64_t a1)
{
  if (!a1)
  {
    sub_187B2EC();
  }
  *(void *)uint64_t v3 = off_24E2518;
  *(void *)(v3 + 8) = a1;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = a1;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(void *)(v3 + 48) = &qword_2550250;
  *(void *)(v3 + 56) = &qword_2550250;
  *(void *)(v3 + 64) = &qword_2550250;
  *(void *)(v3 + 72) = &qword_2550250;
  *(void *)(v3 + 80) = &qword_2550250;
  *(void *)(v3 + 88) = &qword_2550250;
  *(void *)(v3 + 96) = &qword_2550250;
  double result = 0.0;
  *(_OWORD *)(v3 + 104) = 0u;
  *(_OWORD *)(v3 + 120) = 0u;
  *(_OWORD *)(v3 + 136) = 0u;
  *(void *)(v3 + 152) = 0;
  return result;
}

uint64_t sub_1850A04(uint64_t a1)
{
  if (!a1)
  {
    sub_187B364();
  }

  return sub_184D2D4(v3, a1, 0);
}

void *sub_1850A60(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1850AD4(void *a1)
{
  sub_1850A60(a1);

  operator delete();
}

uint64_t sub_1850B0C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1850B30(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1850D20(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_1850EC4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1850F64()
{
  return 1;
}

void *sub_1850F6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Storefront.StorefrontBundleId");
}

uint64_t sub_1850F7C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E2698;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_1850FF4(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1851024(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E2698;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B4D0(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  return a1;
}

void sub_18511AC()
{
}

uint64_t sub_1851238(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254D510)
  {
    uint64_t v5 = *(void **)(a1 + 72);
    if (v5)
    {
      sub_147BA48(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_147F230(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_187B3D0((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185131C(uint64_t a1)
{
  sub_1851238(a1);

  operator delete();
}

char *sub_1851354(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 72);
        if (!v12)
        {
          int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v13 = (void *)*v13;
          }
          sub_1481D2C((uint64_t)v13);
          uint64_t v12 = v14;
          *(void *)(a1 + 72) = v14;
          uint64_t v8 = v31;
        }
        unint64_t v15 = sub_147CDB8(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v16 = *(void *)(a1 + 80);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_148206C((uint64_t)v17);
          *(void *)(a1 + 80) = v16;
          uint64_t v8 = v31;
        }
        unint64_t v15 = sub_12E4C34(a3, v16, (unsigned __int8 *)v8);
        goto LABEL_45;
      case 3u:
        if (v9 != 24) {
          goto LABEL_36;
        }
        v5 |= 4u;
        uint64_t v19 = v8 + 1;
        LODWORD(v18) = *v8;
        if ((v18 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v20 = *v19;
        uint64_t v18 = v18 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v31 = v29;
          *(_DWORD *)(a1 + 88) = v30;
          if (!v29) {
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v31 = v19;
          *(_DWORD *)(a1 + 88) = v18;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 34) {
          goto LABEL_36;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v31 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_1854C48(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
            uint64_t v22 = (unsigned __int8 *)v31;
          }
          uint64_t v21 = sub_1851680(a3, v25, v22);
          uint64_t v31 = v21;
          if (!v21) {
            goto LABEL_53;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_46;
          }
        }
      default:
LABEL_36:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (v9 - 1600 > 0x647)
          {
            if (*v7)
            {
              unsigned int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v31;
            }
            unint64_t v15 = (char *)sub_1885AC0(v9, v28, v8, a3);
          }
          else
          {
            unint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254D510, (uint64_t *)(a1 + 8), a3);
          }
LABEL_45:
          uint64_t v31 = v15;
          if (!v15) {
            goto LABEL_53;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v31;
    }
  }
}

char *sub_1851680(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1850B30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1851710(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_147BCD0(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 80);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_147FC10(v10, (unint64_t)v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 88);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        int v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        int v20 = v4 + 2;
      }
      uint64_t v4 = sub_1850D20(v18, (unint64_t)v20, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 401, v4, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_18519CC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      unint64_t v9 = sub_1850EC4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 7) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_147BEE4(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_14;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v12 = sub_1480248(*(void *)(a1 + 80));
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0) {
      goto LABEL_18;
    }
LABEL_14:
    int v13 = *(_DWORD *)(a1 + 88);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v14;
  }
LABEL_18:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v4 += v18;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_1851B2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Storefront");
}

void *sub_1851B3C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1851BB0(void *a1)
{
  sub_1851B3C(a1);

  operator delete();
}

char *sub_1851BE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1851CE8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1851D80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1851DB4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1851DD0()
{
  return 1;
}

void *sub_1851DD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontFilter");
}

void *sub_1851DE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1851E5C(void *a1)
{
  sub_1851DE8(a1);

  operator delete();
}

char *sub_1851E94(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1851F94(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_185202C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1852060(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_185207C()
{
  return 1;
}

void *sub_1852084@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontPresentationFilter");
}

void *sub_1852094(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1852108(void *a1)
{
  sub_1852094(a1);

  operator delete();
}

char *sub_1852140(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1852240(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_18522D8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_185230C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1852328()
{
  return 1;
}

void *sub_1852330@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontFacesFilter");
}

uint64_t sub_1852340(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24E2898;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unsigned int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_185245C()
{
}

uint64_t sub_18524B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_254D5B8)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1853108(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_1853108(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185259C(uint64_t a1)
{
  sub_18524B0(a1);

  operator delete();
}

uint64_t sub_18525D4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    uint64_t result = sub_147BA84(*(void *)(a1 + 48));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t result = sub_147BA84(*(void *)(a1 + 64));
      if ((v3 & 8) == 0)
      {
LABEL_6:
        if ((v3 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_147F26C(*(void *)(a1 + 56));
  if ((v3 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_15:
  uint64_t result = sub_14152BC(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_14152BC(*(void *)(a1 + 80));
LABEL_8:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(void *)(v4 + 80) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1852688(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 != 6) {
      break;
    }
    if (v8 != 50) {
      goto LABEL_27;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    int v16 = (std::string *)sub_1880F84((void *)(a1 + 24), v15);
    unint64_t v17 = (void *)sub_188C244(v16, *(char **)v21, (uint64_t)a3);
LABEL_34:
    *(void *)uint64_t v21 = v17;
    if (!v17) {
      goto LABEL_40;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
      return *(void *)v21;
    }
  }
  if (v11 == 5)
  {
    if (v8 == 42)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v12 = *(void *)(a1 + 40);
      if (!v12)
      {
        uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v12 = sub_1854F10((uint64_t)v18);
        *(void *)(a1 + 40) = v12;
        goto LABEL_25;
      }
LABEL_26:
      unint64_t v17 = sub_1852898(a3, v12, v7);
      goto LABEL_34;
    }
  }
  else if (v11 == 4 && v8 == 34)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v12 = *(void *)(a1 + 32);
    if (!v12)
    {
      int v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v13 = (void *)*v13;
      }
      uint64_t v12 = sub_1854F10((uint64_t)v13);
      *(void *)(a1 + 32) = v12;
LABEL_25:
      uint64_t v7 = *(unsigned __int8 **)v21;
      goto LABEL_26;
    }
    goto LABEL_26;
  }
LABEL_27:
  if (v8) {
    BOOL v19 = (v8 & 7) == 4;
  }
  else {
    BOOL v19 = 1;
  }
  if (!v19)
  {
    if (*v6)
    {
      int v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v21;
    }
    unint64_t v17 = sub_1885AC0(v8, v20, (char *)v7, a3);
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v21;
  }
LABEL_40:
  *(void *)uint64_t v21 = 0;
  return *(void *)v21;
}

char *sub_1852898(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18532B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1852928(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v9 = *(void *)(a1 + 32);
    *uint64_t v4 = 34;
    unsigned int v10 = *(_DWORD *)(v9 + 44);
    v4[1] = v10;
    if (v10 > 0x7F) {
      unsigned int v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      unsigned int v11 = v4 + 2;
    }
    uint64_t v4 = sub_185363C(v9, v11, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 40);
  *uint64_t v4 = 42;
  unsigned int v13 = *(_DWORD *)(v12 + 44);
  v4[1] = v13;
  if (v13 > 0x7F) {
    uint64_t v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    uint64_t v14 = v4 + 2;
  }
  uint64_t v4 = sub_185363C(v12, v14, a3);
  if (v6) {
LABEL_4:
  }
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1852AD4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_18539A0(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = sub_18539A0(*(void *)(a1 + 40));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1852BF0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v5 = *(std::string **)(a1 + 48);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1481D2C((uint64_t)v7);
        *(void *)(a1 + 48) = v5;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v8 = &off_2539D48;
      }
      sub_147BF78(v5, (uint64_t)v8);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_30;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v9 = *(std::string **)(a1 + 56);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (void *)*v11;
      }
      uint64_t v9 = (std::string *)sub_148206C((uint64_t)v11);
      *(void *)(a1 + 56) = v9;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v12 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v12 = &off_2539ED0;
    }
    sub_1480504(v9, (uint64_t)v12);
    if ((v4 & 4) == 0)
    {
LABEL_30:
      if ((v4 & 8) != 0)
      {
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v18 = *(std::string **)(a1 + 72);
        if (!v18)
        {
          uint64_t v19 = *(void *)(a1 + 8);
          int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
          if (v19) {
            int v20 = (void *)*v20;
          }
          sub_1481CB0((uint64_t)v20);
          *(void *)(a1 + 72) = v18;
        }
        if (*(void *)(a2 + 72)) {
          uint64_t v21 = *(uint64_t (****)())(a2 + 72);
        }
        else {
          uint64_t v21 = &off_2539D18;
        }
        sub_1415F98(v18, (uint64_t)v21);
        if ((v4 & 0x10) == 0)
        {
LABEL_32:
          if ((v4 & 0x20) == 0)
          {
LABEL_34:
            *(_DWORD *)(a1 + 40) |= v4;
            goto LABEL_35;
          }
LABEL_33:
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          goto LABEL_34;
        }
      }
      else if ((v4 & 0x10) == 0)
      {
        goto LABEL_32;
      }
      *(_DWORD *)(a1 + 40) |= 0x10u;
      uint64_t v22 = *(std::string **)(a1 + 80);
      if (!v22)
      {
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (void *)*v24;
        }
        sub_1481CB0((uint64_t)v24);
        *(void *)(a1 + 80) = v22;
      }
      if (*(void *)(a2 + 80)) {
        uint64_t v25 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        uint64_t v25 = &off_2539D18;
      }
      sub_1415F98(v22, (uint64_t)v25);
      if ((v4 & 0x20) == 0) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }
LABEL_22:
    *(_DWORD *)(a1 + 40) |= 4u;
    unsigned int v13 = *(std::string **)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      sub_1481D2C((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      int v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v16 = &off_2539D48;
    }
    sub_147BF78(v13, (uint64_t)v16);
    goto LABEL_30;
  }
LABEL_35:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1852E04(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1852E0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontPresentation");
}

uint64_t sub_1852E1C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E2918;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 88) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_1852E90(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1852EC0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E2918;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = v7;
  return a1;
}

void sub_1853074()
{
}

uint64_t sub_1853108(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1853194((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1853194(uint64_t (***result)()))()
{
  if (result != &off_254D5E8)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[6];
    if (v2)
    {
      sub_147BA48(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[7];
    if (v3)
    {
      sub_147F230(v3);
      operator delete();
    }
    uint64_t v4 = v1[8];
    if (v4)
    {
      sub_147BA48(v4);
      operator delete();
    }
    uint64_t v5 = v1[9];
    if (v5)
    {
      sub_147B564(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[10];
    if (result)
    {
      sub_147B564(result);
      operator delete();
    }
  }
  return result;
}

void sub_1853280(uint64_t a1)
{
  sub_1853108(a1);

  operator delete();
}

char *sub_18532B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (v12) {
          goto LABEL_31;
        }
        unsigned int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v13 = (void *)*v13;
        }
        sub_1481D2C((uint64_t)v13);
        uint64_t v12 = v14;
        *(void *)(a1 + 48) = v14;
        goto LABEL_30;
      case 2u:
        if (v9 != 18) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 56);
        if (!v15)
        {
          int v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v16 = (void *)*v16;
          }
          uint64_t v15 = sub_148206C((uint64_t)v16);
          *(void *)(a1 + 56) = v15;
          uint64_t v8 = v32;
        }
        uint64_t v17 = sub_12E4C34(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_44;
      case 4u:
        if (v9 != 32) {
          goto LABEL_47;
        }
        v5 |= 0x20u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v30 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v32 = v30;
          *(void *)(a1 + 88) = v31;
          if (!v30) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_24:
          uint64_t v32 = v18;
          *(void *)(a1 + 88) = v19;
        }
        goto LABEL_45;
      case 5u:
        if (v9 != 42) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v12 = *(void *)(a1 + 64);
        if (!v12)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          sub_1481D2C((uint64_t)v21);
          uint64_t v12 = v22;
          *(void *)(a1 + 64) = v22;
LABEL_30:
          uint64_t v8 = v32;
        }
LABEL_31:
        uint64_t v17 = sub_147CDB8(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_44;
      case 6u:
        if (v9 != 50) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v23 = *(void *)(a1 + 72);
        if (v23) {
          goto LABEL_43;
        }
        uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v24 = (void *)*v24;
        }
        sub_1481CB0((uint64_t)v24);
        uint64_t v23 = v25;
        *(void *)(a1 + 72) = v25;
        goto LABEL_42;
      case 7u:
        if (v9 != 58) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v23 = *(void *)(a1 + 80);
        if (v23) {
          goto LABEL_43;
        }
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        sub_1481CB0((uint64_t)v26);
        uint64_t v23 = v27;
        *(void *)(a1 + 80) = v27;
LABEL_42:
        uint64_t v8 = v32;
LABEL_43:
        uint64_t v17 = sub_1415818(a3, v23, (unsigned __int8 *)v8);
        goto LABEL_44;
      default:
LABEL_47:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (v9 - 1600 > 0x327)
          {
            if (*v7)
            {
              uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v32;
            }
            uint64_t v17 = (char *)sub_1885AC0(v9, v29, v8, a3);
          }
          else
          {
            uint64_t v17 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254D5E8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_44:
          uint64_t v32 = v17;
          if (!v17) {
            goto LABEL_61;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v32;
    }
  }
}

char *sub_185363C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_147BCD0(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_147FC10(v10, (unint64_t)v12, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 88);
    *uint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 64);
    *uint64_t v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_147BCD0(v16, (unint64_t)v18, a3);
    if ((v6 & 8) == 0)
    {
LABEL_25:
      if ((v6 & 0x10) == 0) {
        goto LABEL_45;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_25;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  *uint64_t v4 = 50;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = (char *)sub_147B738(v19, (unint64_t)v21, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_39:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 80);
    *uint64_t v4 = 58;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    uint64_t v4 = (char *)sub_147B738(v22, (unint64_t)v24, a3);
  }
LABEL_45:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 301, v4, a3);
  }
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    BOOL v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    BOOL v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_18539A0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v3)
  {
    uint64_t v6 = sub_147BEE4(*(void *)(a1 + 48));
    v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v7 = sub_1480248(*(void *)(a1 + 56));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    uint64_t v9 = sub_147B898(*(void *)(a1 + 72));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x10) == 0)
    {
LABEL_7:
      if ((v3 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_13:
  uint64_t v8 = sub_147BEE4(*(void *)(a1 + 64));
  v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v3 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  uint64_t v10 = sub_147B898(*(void *)(a1 + 80));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v11 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_1853B40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontView");
}

uint64_t sub_1853B50(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D648)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_147CB00(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1853C08(uint64_t a1)
{
  sub_1853B50(a1);

  operator delete();
}

uint64_t sub_1853C40(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_147CB3C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1853CA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      sub_1481E2C((uint64_t)v16);
      uint64_t v15 = v17;
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v25;
    }
    unint64_t v14 = sub_1395DA8(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v25 = v14;
    if (!v14) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v19 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v21 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      uint64_t v25 = v18;
    }
    if (v19 > 5 || v19 == 3)
    {
      if (*v6) {
        unsigned int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v19;
    }
    goto LABEL_37;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v25;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_1853EB4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_147CE48(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1854040(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_147D01C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1854110(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1481E2C((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2539DC0;
      }
      uint64_t result = sub_147D0D8(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_18541E0()
{
  return 1;
}

void *sub_18541E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontBundle.StorefrontFace.StorefrontFeature");
}

uint64_t sub_18541F8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E2A18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_185426C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185429C(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D670)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_147CB00(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_187B450((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1854368(uint64_t a1)
{
  sub_185429C(a1);

  operator delete();
}

uint64_t sub_18543A0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1853C40(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_147CB3C(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(void *)(v6 + 72) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_185443C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      uint64_t v31 = v16;
      *(void *)(a1 + 80) = v17;
      goto LABEL_44;
    }
    uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v17);
    uint64_t v31 = v29;
    *(void *)(a1 + 80) = v30;
    if (!v29) {
      goto LABEL_51;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 == 18)
    {
      unint64_t v19 = v8 - 1;
      while (1)
      {
        int v20 = (unsigned __int8 *)(v19 + 1);
        uint64_t v31 = v19 + 1;
        int v21 = *(_DWORD **)(a1 + 64);
        if (v21 && (uint64_t v22 = *(int *)(a1 + 56), (int)v22 < *v21))
        {
          *(_DWORD *)(a1 + 56) = v22 + 1;
          uint64_t v23 = *(void *)&v21[2 * v22 + 2];
        }
        else
        {
          uint64_t v24 = sub_1854F6C(*(void *)(a1 + 48));
          uint64_t v23 = sub_188CDC8(a1 + 48, v24);
          int v20 = (unsigned __int8 *)v31;
        }
        unint64_t v19 = sub_18546F4(a3, v23, v20);
        uint64_t v31 = v19;
        if (!v19) {
          goto LABEL_51;
        }
        if (*(void *)a3 <= (unint64_t)v19 || *v19 != 18) {
          goto LABEL_44;
        }
      }
    }
  }
  else if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v25 = *(void *)(a1 + 72);
    if (!v25)
    {
      uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v26 = (void *)*v26;
      }
      sub_1481E2C((uint64_t)v26);
      uint64_t v25 = v27;
      *(void *)(a1 + 72) = v27;
      unint64_t v8 = v31;
    }
    unint64_t v15 = sub_1395DA8(a3, v25, (unsigned __int8 *)v8);
LABEL_43:
    uint64_t v31 = v15;
    if (!v15) {
      goto LABEL_51;
    }
    goto LABEL_44;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (v9 - 1600 > 0x327)
    {
      if (*v7)
      {
        BOOL v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        BOOL v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v8 = v31;
      }
      unint64_t v15 = (char *)sub_1885AC0(v9, v28, v8, a3);
    }
    else
    {
      unint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254D670, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_51:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v31;
}

char *sub_18546F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1853CA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1854784(uint64_t a1, char *a2, _DWORD *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_147CE48(v7, (unint64_t)v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        BOOL v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        BOOL v14 = v4 + 2;
      }
      int v4 = sub_1853EB4(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(void *)(a1 + 80);
    *int v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 200, 301, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_18549D0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1854040(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_147D01C(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      v4 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v4 += v15;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_1854AE4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B54C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      int v10 = *(std::string **)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        sub_1481E2C((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        unsigned int v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        unsigned int v13 = &off_2539DC0;
      }
      sub_147D0D8(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1854C30(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1854C38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StorefrontBundle.StorefrontFace");
}

void *sub_1854C48(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E2618;
  result[3] = 0;
  result[4] = 0;
  result[2] = 0;
  return result;
}

uint64_t sub_1854CC4(uint64_t a1)
{
  if (!a1)
  {
    sub_187B5D8();
  }

  return sub_1850F7C(v3, a1, 0);
}

uint64_t sub_1854D20(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E2718;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1854D98(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E2798;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_1854E10(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E2818;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

void *sub_1854E88(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  result[1] = a1;
  *uint64_t result = off_24E2898;
  result[2] = 0;
  result[4] = 0;
  result[5] = 0;
  result[3] = &qword_2550250;
  return result;
}

uint64_t sub_1854F10(uint64_t a1)
{
  if (!a1)
  {
    sub_187B644();
  }

  return sub_1852E1C(v3, a1, 0);
}

uint64_t sub_1854F6C(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E2998;
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 32) = 0;
  return result;
}

uint64_t sub_1854FE8(uint64_t a1)
{
  if (!a1)
  {
    sub_187B6B0();
  }

  return sub_18541F8(v3, a1, 0);
}

uint64_t sub_1855044(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E2A98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_DWORD *)(a1 + 128) = 0;
  return a1;
}

void sub_18550C4(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_18550F4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E2A98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B91C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_187B9A8((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *unint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v18 = *(_DWORD *)(a2 + 40);
  if (v18) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v18 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v18 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  uint64_t v19 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 120) = v19;
  return a1;
}

void sub_1855324()
{
}

uint64_t sub_18553D0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_254D6C8)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_1857F98(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_185ED14(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 112);
    if (v7)
    {
      sub_1856A44(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_187B79C((void *)(a1 + 72));
  sub_187B71C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_18554E0(uint64_t a1)
{
  sub_18553D0(a1);

  operator delete();
}

unsigned char *sub_1855518(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t result = sub_18580C8(*(void *)(a1 + 48));
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_1858188(*(void *)(a1 + 56));
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_1858234(*(void *)(a1 + 64));
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_18555A8(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

unsigned char *sub_1855634(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 3) != 0)
  {
    *(_DWORD *)(a1 + 56) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_185569C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v49 + 2;
      }
    }
    uint64_t v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_66;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v49 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1363A48(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = (unsigned __int8 *)v49;
          }
          int v12 = sub_129424C(a3, v16, v13);
          uint64_t v49 = v12;
          if (!v12) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_76;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_66;
        }
        int v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v49 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v49) {
            goto LABEL_96;
          }
          unint64_t v19 = v43;
        }
        else
        {
          int v18 = v8 + 2;
LABEL_23:
          uint64_t v49 = v18;
        }
        if (v19 <= 4)
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 120) = v19;
          goto LABEL_76;
        }
        if (*v7) {
          int v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v48 = 2;
        goto LABEL_90;
      case 3u:
        if (v9 != 26) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v22 = *(void *)(a1 + 96);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_185F4D8((uint64_t)v23);
          *(void *)(a1 + 96) = v22;
          uint64_t v8 = v49;
        }
        uint64_t v24 = sub_1855C00(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_75;
      case 4u:
        if (v9 != 34) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v25 = *(void **)(a1 + 104);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_185F814((uint64_t)v26);
          *(void *)(a1 + 104) = v25;
          uint64_t v8 = v49;
        }
        uint64_t v24 = (char *)sub_1855C90(a3, (uint64_t)v25, (unsigned __int8 *)v8);
        goto LABEL_75;
      case 5u:
        if (v9 != 40) {
          goto LABEL_66;
        }
        uint64_t v27 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v28 = *v27;
        int v29 = v19 + (v28 << 7);
        unint64_t v19 = (v29 - 128);
        if (v28 < 0)
        {
          uint64_t v49 = (char *)sub_188C138((uint64_t)v8, (v29 - 128));
          if (!v49) {
            goto LABEL_96;
          }
          unint64_t v19 = v44;
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_42:
          uint64_t v49 = v27;
        }
        if (v19 > 2)
        {
          if (*v7) {
            int v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v48 = 5;
LABEL_90:
          sub_188C020(v48, v19, v47);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x10u;
          *(_DWORD *)(a1 + 124) = v19;
        }
        goto LABEL_76;
      case 6u:
        if (v9 != 50) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v30 = *(void *)(a1 + 112);
        if (!v30)
        {
          uint64_t v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v31 = (void *)*v31;
          }
          uint64_t v30 = sub_185F3A8((uint64_t)v31);
          *(void *)(a1 + 112) = v30;
          uint64_t v8 = v49;
        }
        uint64_t v24 = sub_1855D20(a3, v30, (unsigned __int8 *)v8);
        goto LABEL_75;
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        uint64_t v32 = v8 - 1;
        while (1)
        {
          int v33 = (unsigned __int8 *)(v32 + 1);
          uint64_t v49 = v32 + 1;
          uint64_t v34 = *(_DWORD **)(a1 + 88);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 80), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 80) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_185F404(*(void *)(a1 + 72));
            uint64_t v36 = sub_188CDC8(a1 + 72, (uint64_t)v37);
            int v33 = (unsigned __int8 *)v49;
          }
          uint64_t v32 = sub_1855DB0(a3, v36, v33);
          uint64_t v49 = v32;
          if (!v32) {
            goto LABEL_96;
          }
          if (*(void *)a3 <= (unint64_t)v32 || *v32 != 58) {
            goto LABEL_76;
          }
        }
      case 8u:
        if (v9 != 64) {
          goto LABEL_66;
        }
        v5 |= 0x20u;
        int v39 = v8 + 1;
        LODWORD(v38) = *v8;
        if ((v38 & 0x80) == 0) {
          goto LABEL_65;
        }
        int v40 = *v39;
        uint64_t v38 = v38 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          int v45 = (char *)sub_188C138((uint64_t)v8, v38);
          uint64_t v49 = v45;
          *(_DWORD *)(a1 + 128) = v46;
          if (!v45) {
            goto LABEL_96;
          }
        }
        else
        {
          int v39 = v8 + 2;
LABEL_65:
          uint64_t v49 = v39;
          *(_DWORD *)(a1 + 128) = v38;
        }
        goto LABEL_76;
      default:
LABEL_66:
        if (v9) {
          BOOL v41 = (v9 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v42 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v42 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v49;
            }
            uint64_t v24 = (char *)sub_1885AC0(v9, v42, v8, a3);
          }
          else
          {
            uint64_t v24 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254D6C8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_75:
          uint64_t v49 = v24;
          if (!v24) {
            goto LABEL_96;
          }
LABEL_76:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_96:
        }
          uint64_t v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v49;
    }
  }
}

char *sub_1855C00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_18582F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1855C90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185EDFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1855D20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1856AF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1855DB0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185733C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1855E40(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1362F44(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(int *)(a1 + 120);
    *a2 = 16;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v15 = *(void *)(a1 + 96);
    *a2 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    a2[1] = v16;
    if (v16 > 0x7F) {
      uint64_t v17 = sub_188A9CC(v16, a2 + 1);
    }
    else {
      uint64_t v17 = a2 + 2;
    }
    a2 = sub_185870C(v15, v17, a3);
    if ((v11 & 2) == 0)
    {
LABEL_18:
      if ((v11 & 0x10) == 0) {
        goto LABEL_38;
      }
      goto LABEL_32;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_18;
  }
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v18 = *(void *)(a1 + 104);
  *a2 = 34;
  unsigned int v19 = *(_DWORD *)(v18 + 44);
  a2[1] = v19;
  if (v19 > 0x7F) {
    int v20 = sub_188A9CC(v19, a2 + 1);
  }
  else {
    int v20 = a2 + 2;
  }
  a2 = sub_185F094(v18, v20, a3);
  if ((v11 & 0x10) != 0)
  {
LABEL_32:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v21 = *(int *)(a1 + 124);
    *a2 = 40;
    a2[1] = v21;
    if (v21 > 0x7F)
    {
      a2[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      a2[2] = v21 >> 7;
      a2 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *a2++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      a2 += 2;
    }
  }
LABEL_38:
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v24 = *(void *)(a1 + 112);
    *a2 = 50;
    unsigned int v25 = *(_DWORD *)(v24 + 44);
    a2[1] = v25;
    if (v25 > 0x7F) {
      uint64_t v26 = sub_188A9CC(v25, a2 + 1);
    }
    else {
      uint64_t v26 = a2 + 2;
    }
    a2 = sub_1856D74(v24, v26, a3);
  }
  int v27 = *(_DWORD *)(a1 + 80);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 58;
      unsigned int v30 = *(_DWORD *)(v29 + 44);
      a2[1] = v30;
      if (v30 > 0x7F) {
        uint64_t v31 = sub_188A9CC(v30, a2 + 1);
      }
      else {
        uint64_t v31 = a2 + 2;
      }
      a2 = sub_1857618(v29, v31, a3);
    }
  }
  if ((v11 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v32 = *(int *)(a1 + 128);
    *a2 = 64;
    a2[1] = v32;
    if (v32 > 0x7F)
    {
      a2[1] = v32 | 0x80;
      unint64_t v33 = v32 >> 7;
      a2[2] = v32 >> 7;
      a2 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v34 = v33 >> 14;
          v33 >>= 7;
          *a2++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return a2;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    uint64_t v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    uint64_t v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(a2, v38, (int)v39);
    a2 += v40;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, a2);
}

uint64_t sub_18562DC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_136363C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_18577E8(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 0x3F) == 0) {
    goto LABEL_24;
  }
  if (v17)
  {
    uint64_t v23 = sub_1858920(*(void *)(a1 + 96));
    v11 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 2) == 0)
    {
LABEL_16:
      if ((v17 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_28;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v24 = sub_185F244(*(void *)(a1 + 104));
  v11 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 4) == 0)
  {
LABEL_17:
    if ((v17 & 8) == 0) {
      goto LABEL_18;
    }
LABEL_29:
    int v26 = *(_DWORD *)(a1 + 120);
    uint64_t v27 = ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v26 >= 0) {
      uint64_t v28 = v27;
    }
    else {
      uint64_t v28 = 11;
    }
    v11 += v28;
    if ((v17 & 0x10) == 0)
    {
LABEL_19:
      if ((v17 & 0x20) == 0) {
        goto LABEL_24;
      }
      goto LABEL_20;
    }
    goto LABEL_33;
  }
LABEL_28:
  uint64_t v25 = sub_1856F3C(*(void *)(a1 + 112));
  v11 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 8) != 0) {
    goto LABEL_29;
  }
LABEL_18:
  if ((v17 & 0x10) == 0) {
    goto LABEL_19;
  }
LABEL_33:
  int v29 = *(_DWORD *)(a1 + 124);
  uint64_t v30 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v29 >= 0) {
    uint64_t v31 = v30;
  }
  else {
    uint64_t v31 = 11;
  }
  v11 += v31;
  if ((v17 & 0x20) != 0)
  {
LABEL_20:
    int v18 = *(_DWORD *)(a1 + 128);
    uint64_t v19 = ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v18 >= 0) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 11;
    }
    v11 += v20;
  }
LABEL_24:
  uint64_t v21 = *(void *)(a1 + 8);
  if (v21)
  {
    unint64_t v32 = v21 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v11 += v33;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1856530(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) == 0) {
    goto LABEL_30;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void **)(a1 + 48);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_185F534((uint64_t)v7);
      *(void *)(a1 + 48) = v5;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v8 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v8 = &off_254D840;
    }
    sub_1858A30((uint64_t)v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v9 = *(void *)(a1 + 56);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_185F590((uint64_t)v11);
    *(void *)(a1 + 56) = v9;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v12 = &off_254D8A8;
  }
  sub_1858BC4(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void *)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_185F5EC((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v16 = &off_254D900;
    }
    sub_1858D44(v13, (uint64_t)v16);
  }
LABEL_30:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1856698(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 72), v9, v11);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_18567AC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4) {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 40) |= v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_185683C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_1858F1C(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_1858FB4(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_1859038(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_18568A8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

uint64_t sub_18568B0(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_18568B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueInfo");
}

uint64_t sub_18568C8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E2B18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

void sub_1856930(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1856960(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E2B18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  uint64_t v6 = *(void *)(a2 + 48);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(void *)(a1 + 48) = v6;
  return a1;
}

void sub_1856A08(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1856A44(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1856AC0(void *a1)
{
  sub_1856A44(a1);

  operator delete();
}

char *sub_1856AF8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v27 + 2;
      }
    }
    uint64_t v27 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      uint64_t v27 = v19;
      *(void *)(a1 + 48) = v20;
      int v5 = 1;
      goto LABEL_34;
    }
    uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v20);
    uint64_t v27 = v24;
    *(void *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_47;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        uint64_t v27 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v27) {
          goto LABEL_47;
        }
        unint64_t v16 = v23;
        goto LABEL_24;
      }
      uint64_t v15 = v8 + 2;
    }
    uint64_t v27 = v15;
LABEL_24:
    if (v16 > 4)
    {
      if (*v7) {
        int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      *(_DWORD *)(a1 + 56) = v16;
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        unint64_t v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v27;
      }
      uint64_t v14 = sub_1885AC0(v9, v22, v8, a3);
    }
    else
    {
      uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254D750, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v27 = (char *)v14;
    if (!v14) {
      goto LABEL_47;
    }
    goto LABEL_34;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v27;
}

char *sub_1856D74(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1856F3C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      result += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0)
    {
      int v4 = *(_DWORD *)(a1 + 56);
      if (v4 < 0) {
        uint64_t v5 = 11;
      }
      else {
        uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      result += v5;
    }
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_1856FF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LocatedInsideInfo");
}

void *sub_1857008(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24E2B98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_1857078(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_18570A8(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D790)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_185E510(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_187B71C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1857174(uint64_t a1)
{
  sub_18570A8(a1);

  operator delete();
}

unsigned char *sub_18571AC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13627B0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_1857244(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

unsigned char *sub_1857244(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
LABEL_17:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_185733C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    unint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v14 = *(void **)(a1 + 72);
    if (!v14)
    {
      unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v14 = sub_185F7B8((uint64_t)v15);
      *(void *)(a1 + 72) = v14;
      uint64_t v7 = v23;
    }
    uint64_t v13 = (char *)sub_1857588(a3, (uint64_t)v14, (unsigned __int8 *)v7);
LABEL_37:
    unint64_t v23 = v13;
    if (!v13) {
      return 0;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    unint64_t v16 = v7 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      unint64_t v23 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 64);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 56) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_1363A48(*(void *)(a1 + 48));
        uint64_t v20 = sub_188CDC8(a1 + 48, v21);
        uint64_t v17 = (unsigned __int8 *)v23;
      }
      unint64_t v16 = sub_129424C(a3, v20, v17);
      unint64_t v23 = v16;
      if (!v16) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 10) {
        goto LABEL_38;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        unint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v23;
      }
      uint64_t v13 = (char *)sub_1885AC0(v8, v22, v7, a3);
    }
    else
    {
      uint64_t v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254D790, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

uint64_t sub_1857588(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185E61C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1857618(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1362F44(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v11 = *(void *)(a1 + 72);
    *a2 = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 44);
    a2[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, a2 + 1);
    }
    else {
      uint64_t v13 = a2 + 2;
    }
    a2 = sub_185E850(v11, v13, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return a2;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(a2, v17, (int)v18);
    a2 += v19;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, a2);
}

uint64_t sub_18577E8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_136363C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v10 = sub_185E98C(*(void *)(a1 + 72));
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v4 += v14;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_18578D0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187B91C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 72);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v10 = *(void **)(a1 + 72);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = sub_185F7B8((uint64_t)v12);
      *(void *)(a1 + 72) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 72);
    }
    if (v9) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = &off_254DAB8;
    }
    sub_16F484C((uint64_t)v10, (uint64_t)v13);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1857A00(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_1363A30(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 72) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1857A74(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1857A7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FilterElementInfo");
}

void *sub_1857A8C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1857B00(void *a1)
{
  sub_1857A8C(a1);

  operator delete();
}

char *sub_1857B38(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1857C38(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1857CD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1857D04(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1857D20()
{
  return 1;
}

void *sub_1857D28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueInfoFilter");
}

uint64_t sub_1857D38(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E2C98;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_1857DA4(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1857DD4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E2C98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  return a1;
}

void sub_1857F14()
{
}

uint64_t sub_1857F98(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_254D7F8)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_18593B8(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_185A1B0(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_185AE08(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1858090(uint64_t a1)
{
  sub_1857F98(a1);

  operator delete();
}

unsigned char *sub_18580C8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_185A2CC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_185DB84(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_18594C8(*(void *)(a1 + 96));
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

unsigned char *sub_1858188(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_185DB84(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 3) != 0)
  {
    if (v6) {
      uint64_t result = sub_18594C8(*(void *)(a1 + 72));
    }
    if ((v6 & 2) != 0) {
      uint64_t result = sub_185A2CC(*(void *)(a1 + 80));
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

unsigned char *sub_1858234(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_185DB84(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t result = sub_18594C8(*(void *)(a1 + 72));
      if ((v6 & 2) == 0)
      {
LABEL_8:
        if ((v6 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_185A2CC(*(void *)(a1 + 80));
    if ((v6 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_185AF44(*(void *)(a1 + 88));
  }
LABEL_10:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_18582F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    return v22;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v22 + 1;
    unsigned int v8 = *v22;
    if (*v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v22 + 2;
      }
    }
    unint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 4)
    {
      if (v8 != 34) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 4u;
      uint64_t v15 = *(void *)(a1 + 64);
      if (!v15)
      {
        unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v16 = (void *)*v16;
        }
        uint64_t v15 = sub_185F5EC((uint64_t)v16);
        *(void *)(a1 + 64) = v15;
        uint64_t v7 = v22;
      }
      uint64_t v14 = sub_185867C(a3, v15, (unsigned __int8 *)v7);
      goto LABEL_40;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v17 = *(void *)(a1 + 56);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_185F590((uint64_t)v18);
      *(void *)(a1 + 56) = v17;
      uint64_t v7 = v22;
    }
    uint64_t v14 = sub_18585EC(a3, v17, (unsigned __int8 *)v7);
LABEL_40:
    unint64_t v22 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
      return v22;
    }
  }
  if (v11 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v19 = *(void **)(a1 + 48);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_185F534((uint64_t)v20);
      *(void *)(a1 + 48) = v19;
      uint64_t v7 = v22;
    }
    uint64_t v14 = sub_185855C(a3, (uint64_t)v19, (unsigned __int8 *)v7);
    goto LABEL_40;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v22;
      }
      uint64_t v14 = (char *)sub_1885AC0(v8, v21, v7, a3);
    }
    else
    {
      uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254D7F8, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v22;
  }
  return 0;
}

char *sub_185855C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1859540(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18585EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185A344(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_185867C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185AFB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_185870C(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_18599DC(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *uint64_t v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  uint64_t v4 = sub_185A5E8(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 64);
    *uint64_t v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_185B360(v13, v15, a3);
  }
LABEL_23:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1858920(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t v7 = sub_1859C30(*(void *)(a1 + 48));
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v8 = sub_185A81C(*(void *)(a1 + 56));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) != 0)
    {
LABEL_5:
      uint64_t v4 = sub_185B5F8(*(void *)(a1 + 64));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_6:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v9 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_1858A30(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187BA34((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_187BAC0((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    unsigned int v14 = *(uint64_t (****)())(a2 + 96);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v15 = *(void *)(a1 + 96);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v15 = sub_185F648((uint64_t)v17);
      *(void *)(a1 + 96) = v15;
      unsigned int v14 = *(uint64_t (****)())(a2 + 96);
    }
    if (v14) {
      unint64_t v18 = v14;
    }
    else {
      unint64_t v18 = &off_254D960;
    }
    sub_1859D68(v15, (uint64_t)v18);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1858BC4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187BAC0((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_185F648((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v13 = &off_254D960;
      }
      sub_1859D68(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      unsigned int v14 = *(void **)(a1 + 80);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (void *)*v16;
        }
        unsigned int v14 = sub_185F6A4((uint64_t)v16);
        *(void *)(a1 + 80) = v14;
      }
      if (*(void *)(a2 + 80)) {
        uint64_t v17 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        uint64_t v17 = &off_254D9C0;
      }
      sub_185A93C((uint64_t)v14, (uint64_t)v17);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1858D44(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187BAC0((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 72);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_185F648((uint64_t)v12);
        *(void *)(a1 + 72) = v10;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v13 = &off_254D960;
      }
      sub_1859D68(v10, (uint64_t)v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_33;
        }
        goto LABEL_25;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    unsigned int v14 = *(void **)(a1 + 80);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = sub_185F6A4((uint64_t)v16);
      *(void *)(a1 + 80) = v14;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v17 = &off_254D9C0;
    }
    sub_185A93C((uint64_t)v14, (uint64_t)v17);
    if ((v9 & 4) != 0)
    {
LABEL_25:
      *(_DWORD *)(a1 + 40) |= 4u;
      uint64_t v18 = *(void *)(a1 + 88);
      if (!v18)
      {
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = sub_185F700((uint64_t)v20);
        *(void *)(a1 + 88) = v18;
      }
      if (*(void *)(a2 + 88)) {
        uint64_t v21 = *(uint64_t (****)())(a2 + 88);
      }
      else {
        uint64_t v21 = &off_254DA28;
      }
      sub_185B754(v18, (uint64_t)v21);
    }
  }
LABEL_33:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1858F1C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_185AAB8(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_185E2A8(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_1859EB0(*(void *)(a1 + 96));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1858FB4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_185E2A8(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6)
    {
      uint64_t result = sub_1859EB0(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_185AAB8(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1859038(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_185E2A8(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6)
    {
      uint64_t result = sub_1859EB0(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 2) != 0)
    {
      uint64_t result = sub_185AAB8(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_185B848(*(void *)(a1 + 88));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_18590D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueFeatureValue");
}

void *sub_18590E0(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24E2D18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = 0;
  return a1;
}

void sub_1859154(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1859184(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E2D18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187BA34(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unsigned int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_187BAC0((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  return a1;
}

void sub_1859334()
{
}

uint64_t sub_18593B8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D840)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_185BAD4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_187B89C((void *)(a1 + 72));
  sub_187B81C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1859490(uint64_t a1)
{
  sub_18593B8(a1);

  operator delete();
}

unsigned char *sub_18594C8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1857244(*(void *)(a1 + 64));
  }
  if ((v3 & 0xE) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    *(_DWORD *)(a1 + 88) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_1859540(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v21 = v7 - 1;
        while (1)
        {
          uint64_t v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v30 = v21 + 1;
          unint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            int v26 = sub_185F6A4(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, (uint64_t)v26);
            uint64_t v22 = (unsigned __int8 *)v30;
          }
          uint64_t v21 = sub_18598BC(a3, v25, v22);
          uint64_t v30 = v21;
          if (!v21) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
            goto LABEL_49;
          }
        }
      }
      goto LABEL_14;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v27 = *(void *)(a1 + 96);
    if (!v27)
    {
      uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v28 = (void *)*v28;
      }
      uint64_t v27 = sub_185F648((uint64_t)v28);
      *(void *)(a1 + 96) = v27;
      int v7 = v30;
    }
    unsigned int v14 = sub_185982C(a3, v27, (unsigned __int8 *)v7);
LABEL_48:
    uint64_t v30 = v14;
    if (!v14) {
      return 0;
    }
LABEL_49:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 == 26)
  {
    int v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v30 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 88);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 80), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 80) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_185F75C(*(void *)(a1 + 72));
        uint64_t v19 = sub_188CDC8(a1 + 72, v20);
        uint64_t v16 = (unsigned __int8 *)v30;
      }
      int v15 = sub_185994C(a3, v19, v16);
      uint64_t v30 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
        goto LABEL_49;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v30;
      }
      unsigned int v14 = (char *)sub_1885AC0(v8, v29, v7, a3);
    }
    else
    {
      unsigned int v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254D840, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_48;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

char *sub_185982C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185BBD4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18598BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185C844(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_185994C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185DBF8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_18599DC(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v6 = *(void *)(a1 + 96);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_185C00C(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 56);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 44);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_185CCAC(v11, v13, a3);
    }
  }
  int v14 = *(_DWORD *)(a1 + 80);
  if (v14)
  {
    for (int j = 0; j != v14; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 26;
      unsigned int v17 = *(_DWORD *)(v16 + 44);
      v4[1] = v17;
      if (v17 > 0x7F) {
        uint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        uint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_185DE80(v16, v18, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1859C30(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    uint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_185D028(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    BOOL v13 = (uint64_t *)(v12 + 8);
  }
  else {
    BOOL v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_185E0AC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v17 = sub_185C368(*(void *)(a1 + 96));
    v11 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v11 += v21;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1859D68(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void **)(a1 + 64);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_185F7B8((uint64_t)v12);
        *(void *)(a1 + 64) = v10;
      }
      if (*(void *)(a2 + 64)) {
        BOOL v13 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        BOOL v13 = &off_254DAB8;
      }
      sub_16F484C((uint64_t)v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_23;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 40) |= v8;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
      goto LABEL_9;
    }
LABEL_23:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v8 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1859EB0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 64) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1859EF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FeatureVenue");
}

uint64_t sub_1859F08(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E2D98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_1859F7C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1859FAC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E2D98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187BAC0(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  return a1;
}

void sub_185A12C()
{
}

uint64_t sub_185A1B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_254D8A8)
  {
    uint64_t v5 = *(void *)(a1 + 72);
    if (v5)
    {
      sub_185BAD4(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_185C73C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_187B89C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185A294(uint64_t a1)
{
  sub_185A1B0(a1);

  operator delete();
}

unsigned char *sub_185A2CC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1857244(*(void *)(a1 + 80));
  }
  if ((v3 & 6) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_185A344(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v26 + 2;
      }
    }
    int v26 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v21 = *(void **)(a1 + 80);
      if (!v21)
      {
        uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v22 = (void *)*v22;
        }
        uint64_t v21 = sub_185F6A4((uint64_t)v22);
        *(void *)(a1 + 80) = v21;
        int v7 = v26;
      }
      uint64_t v14 = sub_18598BC(a3, (uint64_t)v21, (unsigned __int8 *)v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v23 = *(void *)(a1 + 72);
      if (!v23)
      {
        uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v23 = sub_185F648((uint64_t)v24);
        *(void *)(a1 + 72) = v23;
        int v7 = v26;
      }
      uint64_t v14 = sub_185982C(a3, v23, (unsigned __int8 *)v7);
    }
LABEL_44:
    int v26 = v14;
    if (!v14) {
      return 0;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v8 == 26)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      int v26 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 64);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 56) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_185F75C(*(void *)(a1 + 48));
        uint64_t v19 = sub_188CDC8(a1 + 48, v20);
        uint64_t v16 = (unsigned __int8 *)v26;
      }
      uint64_t v15 = sub_185994C(a3, v19, v16);
      int v26 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
        goto LABEL_45;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v26;
      }
      uint64_t v14 = (char *)sub_1885AC0(v8, v25, v7, a3);
    }
    else
    {
      uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254D8A8, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_44;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

char *sub_185A5E8(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_185C00C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_185CCAC(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_185DE80(v15, v17, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_185A81C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_185E0AC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_185C368(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0)
    {
      uint64_t v12 = sub_185D028(*(void *)(a1 + 80));
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_185A93C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 64);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 64);
    sub_188CA54((unsigned int *)(a1 + 64), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v10 + 8 * v9), *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  int v11 = *(_DWORD *)(a2 + 40);
  if ((v11 & 7) != 0)
  {
    if (v11)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v13 = *(void **)(a1 + 80);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_185F7B8((uint64_t)v15);
        *(void *)(a1 + 80) = v13;
      }
      if (*(void *)(a2 + 80)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        uint64_t v16 = &off_254DAB8;
      }
      sub_16F484C((uint64_t)v13, (uint64_t)v16);
      if ((v11 & 2) == 0)
      {
LABEL_8:
        if ((v11 & 4) == 0)
        {
LABEL_10:
          *(_DWORD *)(a1 + 40) |= v11;
          goto LABEL_11;
        }
LABEL_9:
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        goto LABEL_10;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_8;
    }
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v11 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_185AAB8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 80) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_185AB00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FeatureBuilding");
}

uint64_t sub_185AB10(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E2E18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0;
  return a1;
}

void sub_185AB88(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185ABB8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E2E18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187BAC0(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *int v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v13 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  return a1;
}

void sub_185AD70()
{
}

uint64_t sub_185AE08(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_254D900)
  {
    uint64_t v5 = *(void *)(a1 + 72);
    if (v5)
    {
      sub_185BAD4(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_185C73C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 88);
    if (v7)
    {
      sub_185D32C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_187B89C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185AF0C(uint64_t a1)
{
  sub_185AE08(a1);

  operator delete();
}

unsigned char *sub_185AF44(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1857244(*(void *)(a1 + 48));
  }
  if ((v3 & 6) != 0)
  {
    *(void *)(a1 + 56) = 0;
    *(void *)(a1 + 64) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_185AFB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    int v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 72);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_185F648((uint64_t)v12);
          *(void *)(a1 + 72) = v11;
          uint64_t v7 = v26;
        }
        int v13 = sub_185982C(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_46;
      case 2u:
        if (v8 != 18) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void **)(a1 + 80);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_185F6A4((uint64_t)v15);
          *(void *)(a1 + 80) = v14;
          uint64_t v7 = v26;
        }
        int v13 = sub_18598BC(a3, (uint64_t)v14, (unsigned __int8 *)v7);
        goto LABEL_46;
      case 3u:
        if (v8 != 26) {
          goto LABEL_37;
        }
        uint64_t v16 = v7 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          int v26 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_185F75C(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, v21);
            uint64_t v17 = (unsigned __int8 *)v26;
          }
          uint64_t v16 = sub_185994C(a3, v20, v17);
          int v26 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_47;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v22 = *(void *)(a1 + 88);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_185F700((uint64_t)v23);
          *(void *)(a1 + 88) = v22;
          uint64_t v7 = v26;
        }
        int v13 = sub_185B2D0(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_46;
      default:
LABEL_37:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = v26;
            }
            int v13 = (char *)sub_1885AC0(v8, v25, v7, a3);
          }
          else
          {
            int v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254D900, (uint64_t *)(a1 + 8), a3);
          }
LABEL_46:
          int v26 = v13;
          if (!v13) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
            return v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v26;
    }
  }
}

char *sub_185B2D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_185D424(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_185B360(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_185C00C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 80);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_185CCAC(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_185DE80(v15, v17, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 88);
    *uint64_t v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 44);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_185D6B0(v18, v20, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    BOOL v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    BOOL v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_185B5F8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_185E0AC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 7) != 0)
  {
    if (v10)
    {
      uint64_t v14 = sub_185C368(*(void *)(a1 + 72));
      v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v15 = sub_185D028(*(void *)(a1 + 80));
    v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) != 0)
    {
LABEL_11:
      uint64_t v11 = sub_185D8E8(*(void *)(a1 + 88));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_12:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v16 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v4 += v17;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_185B754(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      int v6 = *(void **)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        int v6 = sub_185F7B8((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_254DAB8;
      }
      sub_16F484C((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_185B848(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_185B890@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FeaturePOI");
}

uint64_t sub_185B8A0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24E2E98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_185B914(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185B944(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E2E98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188CA54((unsigned int *)(a1 + 48), v6);
    uint64_t v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8) {
    sub_188B4F8(v4, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  long long v9 = *(_OWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v9;
  return a1;
}

void sub_185BA68()
{
}

uint64_t sub_185BAD4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D960)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_185E510(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185BB9C(uint64_t a1)
{
  sub_185BAD4(a1);

  operator delete();
}

char *sub_185BBD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v39 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = v39 + 1;
      unsigned int v9 = *v39;
      if (*v39 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          uint64_t v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = v39 + 2;
        }
      }
      uint64_t v39 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_54;
          }
          v5 |= 2u;
          uint64_t v12 = v8 + 1;
          uint64_t v13 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            uint64_t v12 = v8 + 2;
LABEL_13:
            uint64_t v39 = v12;
            *(void *)(a1 + 72) = v13;
            goto LABEL_64;
          }
          uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v13);
          uint64_t v39 = v31;
          *(void *)(a1 + 72) = v32;
          if (!v31) {
            goto LABEL_73;
          }
          goto LABEL_64;
        case 2u:
          if (v9 == 16)
          {
            uint64_t v15 = v8 - 1;
            while (1)
            {
              uint64_t v39 = v15 + 1;
              uint64_t v16 = v15[1];
              if (v15[1] < 0)
              {
                int v17 = v16 + (v15[2] << 7);
                uint64_t v16 = (v17 - 128);
                if (v15[2] < 0)
                {
                  uint64_t v15 = (char *)sub_188C138((uint64_t)(v15 + 1), (v17 - 128));
                  uint64_t v16 = v18;
                }
                else
                {
                  v15 += 3;
                }
              }
              else
              {
                v15 += 2;
              }
              uint64_t v39 = v15;
              uint64_t v19 = *(unsigned int *)(a1 + 48);
              if (v19 == *(_DWORD *)(a1 + 52))
              {
                int v20 = v19 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v19 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v19) = v16;
                uint64_t v15 = v39;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v19) = v16;
                int v20 = v19 + 1;
              }
              *(_DWORD *)(a1 + 48) = v20;
              if (!v15) {
                goto LABEL_73;
              }
              if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
                goto LABEL_64;
              }
            }
          }
          if (v9 == 18)
          {
            unint64_t v23 = (char *)sub_188C2EC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_54:
            if (v9) {
              BOOL v36 = (v9 & 7) == 4;
            }
            else {
              BOOL v36 = 1;
            }
            if (v36)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_73:
              uint64_t v39 = 0;
              goto LABEL_2;
            }
            if ((v9 - 8000) >> 6 > 0x7C)
            {
              if (*v7)
              {
                unint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                unint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                uint64_t v8 = v39;
              }
              unint64_t v23 = (char *)sub_1885AC0(v9, v37, v8, a3);
            }
            else
            {
              unint64_t v23 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254D960, (uint64_t *)(a1 + 8), a3);
            }
          }
LABEL_63:
          uint64_t v39 = v23;
          if (!v23) {
            goto LABEL_73;
          }
LABEL_64:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 3u:
          if (v9 != 26) {
            goto LABEL_54;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v21 = *(void **)(a1 + 64);
          if (!v21)
          {
            uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v22 = (void *)*v22;
            }
            uint64_t v21 = sub_185F7B8((uint64_t)v22);
            *(void *)(a1 + 64) = v21;
            uint64_t v8 = v39;
          }
          unint64_t v23 = (char *)sub_1857588(a3, (uint64_t)v21, (unsigned __int8 *)v8);
          goto LABEL_63;
        case 4u:
          if (v9 != 32) {
            goto LABEL_54;
          }
          BOOL v24 = v8 + 1;
          unint64_t v25 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_38;
          }
          int v26 = *v24;
          int v27 = v25 + (v26 << 7);
          unint64_t v25 = (v27 - 128);
          if (v26 < 0)
          {
            uint64_t v39 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
            if (!v39) {
              goto LABEL_73;
            }
            unint64_t v25 = v33;
          }
          else
          {
            BOOL v24 = v8 + 2;
LABEL_38:
            uint64_t v39 = v24;
          }
          if (v25 > 2)
          {
            if (*v7) {
              uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(4, v25, v38);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 8u;
            *(_DWORD *)(a1 + 88) = v25;
          }
          goto LABEL_64;
        case 5u:
          if (v9 != 40) {
            goto LABEL_54;
          }
          v5 |= 4u;
          uint64_t v28 = v8 + 1;
          uint64_t v29 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_45;
          }
          int v30 = *v28;
          uint64_t v29 = v29 + (v30 << 7) - 128;
          if (v30 < 0)
          {
            unint64_t v34 = (char *)sub_188C138((uint64_t)v8, v29);
            uint64_t v39 = v34;
            *(void *)(a1 + 80) = v35;
            if (!v34) {
              goto LABEL_73;
            }
          }
          else
          {
            uint64_t v28 = v8 + 2;
LABEL_45:
            uint64_t v39 = v28;
            *(void *)(a1 + 80) = v29;
          }
          goto LABEL_64;
        default:
          goto LABEL_54;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v39;
}

char *sub_185C00C(uint64_t a1, char *a2, void *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 72);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 48);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      *int v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    *int v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    int v4 = sub_185E850(v15, v17, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 88);
    *int v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(void *)(a1 + 80);
    *int v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    int v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    int v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*a3 - (void)v4 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_185C368(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D5A8((unsigned int *)(a1 + 48)) + v2 + *(unsigned int *)(a1 + 48);
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_14;
  }
  if (v4)
  {
    uint64_t v5 = sub_185E98C(*(void *)(a1 + 64));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_9;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 72) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_10;
  }
LABEL_9:
  v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  int v6 = *(_DWORD *)(a1 + 88);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v7;
LABEL_14:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void *sub_185C4AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueContainer");
}

void *sub_185C4BC(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24E2F18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = a2;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = 0;
  return a1;
}

void sub_185C530(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185C560(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E2F18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188CA54((unsigned int *)(a1 + 48), v6);
    uint64_t v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  int v8 = *(_DWORD *)(a2 + 64);
  if (v8)
  {
    sub_188CA54((unsigned int *)(a1 + 64), v8);
    unint64_t v9 = *(void **)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy(v9, *(const void **)(a2 + 72), 8 * *(int *)(a2 + 64));
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10) {
    sub_188B4F8(v4, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  return a1;
}

void sub_185C6C0()
{
}

uint64_t sub_185C73C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254D9C0)
  {
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_185E510(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 64);
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185C80C(uint64_t a1)
{
  sub_185C73C(a1);

  operator delete();
}

char *sub_185C844(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v40 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = v40 + 1;
      unsigned int v9 = *v40;
      if (*v40 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          int v8 = (char *)sub_188C180((uint64_t)v40, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          int v8 = v40 + 2;
        }
      }
      uint64_t v40 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 8) {
            goto LABEL_62;
          }
          v5 |= 2u;
          unint64_t v12 = v8 + 1;
          uint64_t v13 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v14 = *v12;
          uint64_t v13 = v13 + (v14 << 7) - 128;
          if ((v14 & 0x80000000) == 0)
          {
            unint64_t v12 = v8 + 2;
LABEL_13:
            uint64_t v40 = v12;
            *(void *)(a1 + 88) = v13;
            goto LABEL_72;
          }
          unint64_t v33 = (char *)sub_188C138((uint64_t)v8, v13);
          uint64_t v40 = v33;
          *(void *)(a1 + 88) = v34;
          if (!v33) {
            goto LABEL_77;
          }
          goto LABEL_72;
        case 2u:
          if (v9 == 16)
          {
            uint64_t v15 = v8 - 1;
            while (1)
            {
              uint64_t v40 = v15 + 1;
              uint64_t v16 = v15[1];
              if (v15[1] < 0)
              {
                int v17 = v16 + (v15[2] << 7);
                uint64_t v16 = (v17 - 128);
                if (v15[2] < 0)
                {
                  uint64_t v15 = (char *)sub_188C138((uint64_t)(v15 + 1), (v17 - 128));
                  uint64_t v16 = v18;
                }
                else
                {
                  v15 += 3;
                }
              }
              else
              {
                v15 += 2;
              }
              uint64_t v40 = v15;
              uint64_t v19 = *(unsigned int *)(a1 + 48);
              if (v19 == *(_DWORD *)(a1 + 52))
              {
                int v20 = v19 + 1;
                sub_188CA54((unsigned int *)(a1 + 48), v19 + 1);
                *(void *)(*(void *)(a1 + 56) + 8 * v19) = v16;
                uint64_t v15 = v40;
              }
              else
              {
                *(void *)(*(void *)(a1 + 56) + 8 * v19) = v16;
                int v20 = v19 + 1;
              }
              *(_DWORD *)(a1 + 48) = v20;
              if (!v15) {
                goto LABEL_77;
              }
              if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
                goto LABEL_72;
              }
            }
          }
          if (v9 == 18)
          {
            unint64_t v37 = (unsigned int *)(a1 + 48);
LABEL_61:
            unint64_t v23 = (char *)sub_188C2EC(v37, (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_62:
            if (v9) {
              BOOL v38 = (v9 & 7) == 4;
            }
            else {
              BOOL v38 = 1;
            }
            if (v38)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_77:
              uint64_t v40 = 0;
              goto LABEL_2;
            }
            if ((v9 - 8000) >> 6 > 0x7C)
            {
              if (*v7)
              {
                uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                int v8 = v40;
              }
              unint64_t v23 = (char *)sub_1885AC0(v9, v39, v8, a3);
            }
            else
            {
              unint64_t v23 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254D9C0, (uint64_t *)(a1 + 8), a3);
            }
          }
LABEL_71:
          uint64_t v40 = v23;
          if (!v23) {
            goto LABEL_77;
          }
LABEL_72:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 3u:
          if (v9 != 26) {
            goto LABEL_62;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          unint64_t v21 = *(void **)(a1 + 80);
          if (!v21)
          {
            unint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              unint64_t v22 = (void *)*v22;
            }
            unint64_t v21 = sub_185F7B8((uint64_t)v22);
            *(void *)(a1 + 80) = v21;
            int v8 = v40;
          }
          unint64_t v23 = (char *)sub_1857588(a3, (uint64_t)v21, (unsigned __int8 *)v8);
          goto LABEL_71;
        case 4u:
          if (v9 != 32) {
            goto LABEL_62;
          }
          v5 |= 4u;
          uint64_t v24 = v8 + 1;
          uint64_t v25 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_38;
          }
          int v26 = *v24;
          uint64_t v25 = v25 + (v26 << 7) - 128;
          if (v26 < 0)
          {
            uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v25);
            uint64_t v40 = v35;
            *(void *)(a1 + 96) = v36;
            if (!v35) {
              goto LABEL_77;
            }
          }
          else
          {
            uint64_t v24 = v8 + 2;
LABEL_38:
            uint64_t v40 = v24;
            *(void *)(a1 + 96) = v25;
          }
          goto LABEL_72;
        case 5u:
          if (v9 == 40)
          {
            int v27 = v8 - 1;
            while (1)
            {
              uint64_t v40 = v27 + 1;
              uint64_t v28 = v27[1];
              if (v27[1] < 0)
              {
                int v29 = v28 + (v27[2] << 7);
                uint64_t v28 = (v29 - 128);
                if (v27[2] < 0)
                {
                  int v27 = (char *)sub_188C138((uint64_t)(v27 + 1), (v29 - 128));
                  uint64_t v28 = v30;
                }
                else
                {
                  v27 += 3;
                }
              }
              else
              {
                v27 += 2;
              }
              uint64_t v40 = v27;
              uint64_t v31 = *(unsigned int *)(a1 + 64);
              if (v31 == *(_DWORD *)(a1 + 68))
              {
                int v32 = v31 + 1;
                sub_188CA54((unsigned int *)(a1 + 64), v31 + 1);
                *(void *)(*(void *)(a1 + 72) + 8 * v31) = v28;
                int v27 = v40;
              }
              else
              {
                *(void *)(*(void *)(a1 + 72) + 8 * v31) = v28;
                int v32 = v31 + 1;
              }
              *(_DWORD *)(a1 + 64) = v32;
              if (!v27) {
                goto LABEL_77;
              }
              if (*(void *)a3 <= (unint64_t)v27 || *v27 != 40) {
                goto LABEL_72;
              }
            }
          }
          if (v9 != 42) {
            goto LABEL_62;
          }
          unint64_t v37 = (unsigned int *)(a1 + 64);
          goto LABEL_61;
        default:
          goto LABEL_62;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v40;
}

char *sub_185CCAC(uint64_t a1, char *a2, void *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 88);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(unsigned int *)(a1 + 48);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      *int v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unint64_t v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 80);
    *int v4 = 26;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    int v4 = sub_185E850(v15, v17, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(void *)(a1 + 96);
    *int v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 64);
  if ((int)v21 >= 1)
  {
    for (uint64_t j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v23 = *(void *)(*(void *)(a1 + 72) + 8 * j);
      *int v4 = 40;
      v4[1] = v23;
      if (v23 > 0x7F)
      {
        v4[1] = v23 | 0x80;
        unint64_t v24 = v23 >> 7;
        v4[2] = v23 >> 7;
        v4 += 3;
        if (v23 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v25 = v24 >> 14;
            v24 >>= 7;
            *v4++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    int v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    int v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*a3 - (void)v4 >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_185D028(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D5A8((unsigned int *)(a1 + 48));
  uint64_t v4 = *(unsigned int *)(a1 + 48);
  uint64_t v5 = v3 + v2 + sub_188D5A8((unsigned int *)(a1 + 64)) + v4 + *(unsigned int *)(a1 + 64);
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 7) != 0)
  {
    if (v6)
    {
      uint64_t v9 = sub_185E98C(*(void *)(a1 + 80));
      v5 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v6 & 2) == 0)
      {
LABEL_4:
        if ((v6 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_4;
    }
    v5 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v6 & 4) != 0) {
LABEL_5:
    }
      v5 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v5 += v11;
  }
  *(_DWORD *)(a1 + 44) = v5;
  return v5;
}

void *sub_185D14C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueBuilding");
}

uint64_t sub_185D15C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E2F98;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_185D1C8(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185D1F8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24E2F98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  return a1;
}

void sub_185D2D0()
{
}

uint64_t sub_185D32C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254DA28)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_185E510(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185D3EC(uint64_t a1)
{
  sub_185D32C(a1);

  operator delete();
}

char *sub_185D424(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v29 + 2;
      }
    }
    int v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_24;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_24:
        int v29 = v16;
        *(void *)(a1 + 64) = v17;
        goto LABEL_39;
      }
      unint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
      int v29 = v25;
      *(void *)(a1 + 64) = v26;
      if (!v25) {
        goto LABEL_48;
      }
      goto LABEL_39;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_34:
      int v29 = v21;
      *(void *)(a1 + 56) = v22;
      goto LABEL_39;
    }
    int v27 = (char *)sub_188C138((uint64_t)v8, v22);
    int v29 = v27;
    *(void *)(a1 + 56) = v28;
    if (!v27) {
      goto LABEL_48;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    unint64_t v19 = *(void **)(a1 + 48);
    if (!v19)
    {
      unint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        unint64_t v20 = (void *)*v20;
      }
      unint64_t v19 = sub_185F7B8((uint64_t)v20);
      *(void *)(a1 + 48) = v19;
      unint64_t v8 = v29;
    }
    uint64_t v15 = (char *)sub_1857588(a3, (uint64_t)v19, (unsigned __int8 *)v8);
LABEL_38:
    int v29 = v15;
    if (!v15) {
      goto LABEL_48;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v8 = v29;
      }
      uint64_t v15 = (char *)sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      uint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254DA28, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_48:
  int v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

char *sub_185D6B0(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    uint64_t v4 = sub_185E850(v10, v12, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(void *)(a1 + 64);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_185D8E8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t v6 = sub_185E98C(*(void *)(a1 + 48));
      v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      v2 += ((9 * (__clz(*(void *)(a1 + 64) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v7 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void *sub_185D9E0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueDirectoryGroup");
}

uint64_t sub_185D9F0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24E3018;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_185DA5C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185DA8C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_254DA70)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_185E510(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185DB4C(uint64_t a1)
{
  sub_185DA8C(a1);

  operator delete();
}

unsigned char *sub_185DB84(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_1857244(*(void *)(a1 + 48));
  }
  if ((v3 & 6) != 0)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_185DBF8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    int v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v19 = v8 + 1;
      LODWORD(v18) = *v8;
      if ((v18 & 0x80) == 0) {
        goto LABEL_30;
      }
      int v20 = *v19;
      uint64_t v18 = v18 + (v20 << 7) - 128;
      if ((v20 & 0x80000000) == 0)
      {
        unint64_t v19 = v8 + 2;
LABEL_30:
        int v29 = v19;
        *(_DWORD *)(a1 + 64) = v18;
        goto LABEL_39;
      }
      unint64_t v25 = (char *)sub_188C138((uint64_t)v8, v18);
      int v29 = v25;
      *(_DWORD *)(a1 + 64) = v26;
      if (!v25) {
        goto LABEL_48;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v21 = v8 + 1;
      uint64_t v22 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v23 = *v21;
      uint64_t v22 = v22 + (v23 << 7) - 128;
      if ((v23 & 0x80000000) == 0)
      {
        uint64_t v21 = v8 + 2;
LABEL_34:
        int v29 = v21;
        *(void *)(a1 + 56) = v22;
        goto LABEL_39;
      }
      int v27 = (char *)sub_188C138((uint64_t)v8, v22);
      int v29 = v27;
      *(void *)(a1 + 56) = v28;
      if (!v27) {
        goto LABEL_48;
      }
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v16 = *(void **)(a1 + 48);
    if (!v16)
    {
      uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v17 = (void *)*v17;
      }
      uint64_t v16 = sub_185F7B8((uint64_t)v17);
      *(void *)(a1 + 48) = v16;
      uint64_t v8 = v29;
    }
    unint64_t v15 = (char *)sub_1857588(a3, (uint64_t)v16, (unsigned __int8 *)v8);
LABEL_38:
    int v29 = v15;
    if (!v15) {
      goto LABEL_48;
    }
    goto LABEL_39;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        unint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v29;
      }
      unint64_t v15 = (char *)sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      unint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254DA70, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_48:
  int v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

char *sub_185DE80(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 64);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 48);
    *uint64_t v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      unint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      unint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_185E850(v13, v15, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_185E0AC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_12;
  }
  if (v3)
  {
    uint64_t v4 = sub_185E98C(*(void *)(a1 + 48));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_8;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0) {
    goto LABEL_12;
  }
LABEL_8:
  int v5 = *(_DWORD *)(a1 + 64);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v6;
LABEL_12:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_185E1B4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void **)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_185F7B8((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v9 = &off_254DAB8;
      }
      sub_16F484C((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_185E2A8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_185E2F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueLevel");
}

void *sub_185E300(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24E3098;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = &qword_2550250;
  return a1;
}

void sub_185E374(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185E3A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E3098;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    unint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    unint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v7 & 4) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v10);
  }
  return a1;
}

void sub_185E4D4(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185E510(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185E5E4(uint64_t a1)
{
  sub_185E510(a1);

  operator delete();
}

uint64_t sub_185E61C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 64);
        goto LABEL_31;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (void *)(a1 + 56);
        goto LABEL_31;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      uint64_t v17 = (void *)(a1 + 48);
LABEL_31:
      uint64_t v20 = (std::string *)sub_1880F84(v17, v16);
      unsigned int v14 = (void *)sub_188C244(v20, *(char **)v22, (uint64_t)a3);
      goto LABEL_32;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = *(char **)v22;
      }
      unsigned int v14 = sub_1885AC0(v8, v21, v7, a3);
    }
    else
    {
      unsigned int v14 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_254DAB8, (uint64_t *)(a1 + 8), a3);
    }
LABEL_32:
    *(void *)uint64_t v22 = v14;
    if (!v14) {
      goto LABEL_41;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_41:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_185E850(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_185E98C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_5;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0)
  {
LABEL_5:
    unint64_t v4 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_185EAC8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueLabel");
}

void *sub_185EAD8(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24E3118;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  return a1;
}

void sub_185EB50(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185EB80(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24E3118;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v13);
  }
  return a1;
}

void sub_185ECC8(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_185ED14(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_185EDC4(uint64_t a1)
{
  sub_185ED14(a1);

  operator delete();
}

uint64_t sub_185EDFC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  uint64_t v6 = (uint64_t **)(a1 + 48);
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)int v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      int v23 = (uint64_t *)*v23;
    }
    unint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 72), v23);
    unint64_t v14 = (void *)sub_188C244(v24, *(char **)v26, (uint64_t)a3);
LABEL_37:
    *(void *)int v26 = v14;
    if (!v14) {
      goto LABEL_43;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v15 = v8 - 1;
    while (1)
    {
      uint64_t v16 = (char *)(v15 + 1);
      *(void *)int v26 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 64);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 56) = v18 + 1;
        uint64_t v19 = *(std::string **)&v17[2 * v18 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        void *v21 = v20;
        v21[1] = sub_3A6EDC;
        *uint64_t v20 = 0;
        v20[1] = 0;
        v20[2] = 0;
        uint64_t v19 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v20);
        uint64_t v16 = *(char **)v26;
      }
      uint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
      *(void *)int v26 = v15;
      if (!v15) {
        goto LABEL_43;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_38;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(char **)v26;
      }
      unint64_t v14 = sub_1885AC0(v9, v25, v8, a3);
    }
    else
    {
      unint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_254DB00, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_43:
  *(void *)int v26 = 0;
  return *(void *)v26;
}

char *sub_185F094(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40)) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 64) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        *unint64_t v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        unint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      unint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_185F244(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t result = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      result += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    result += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    result += v14;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_185F33C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VenueItemList");
}

uint64_t sub_185F34C(uint64_t a1)
{
  if (!a1)
  {
    sub_187BB4C();
  }

  return sub_1855044(v3, a1, 0);
}

uint64_t sub_185F3A8(uint64_t a1)
{
  if (!a1)
  {
    sub_187BBB8();
  }

  return sub_18568C8(v3, a1, 0);
}

void *sub_185F404(uint64_t a1)
{
  if (!a1)
  {
    sub_187BC24();
  }

  return sub_1857008(v3, a1, 0);
}

uint64_t sub_185F460(uint64_t a1)
{
  if (!a1) {
    operator new();
  }
  *(void *)(result + 8) = a1;
  *(void *)uint64_t result = off_24E2C18;
  *(_DWORD *)(result + 16) = 0;
  return result;
}

uint64_t sub_185F4D8(uint64_t a1)
{
  if (!a1)
  {
    sub_187BC90();
  }

  return sub_1857D38(v3, a1, 0);
}

void *sub_185F534(uint64_t a1)
{
  if (!a1)
  {
    sub_187BCFC();
  }

  return sub_18590E0(v3, a1, 0);
}

uint64_t sub_185F590(uint64_t a1)
{
  if (!a1)
  {
    sub_187BD68();
  }

  return sub_1859F08(v3, a1, 0);
}

uint64_t sub_185F5EC(uint64_t a1)
{
  if (!a1)
  {
    sub_187BDD4();
  }

  return sub_185AB10(v3, a1, 0);
}

uint64_t sub_185F648(uint64_t a1)
{
  if (!a1)
  {
    sub_187BE40();
  }

  return sub_185B8A0(v3, a1, 0);
}

void *sub_185F6A4(uint64_t a1)
{
  if (!a1)
  {
    sub_187BEAC();
  }

  return sub_185C4BC(v3, a1, 0);
}

uint64_t sub_185F700(uint64_t a1)
{
  if (!a1)
  {
    sub_187BF18();
  }

  return sub_185D15C(v3, a1, 0);
}

uint64_t sub_185F75C(uint64_t a1)
{
  if (!a1)
  {
    sub_187BF84();
  }

  return sub_185D9F0(v3, a1, 0);
}

void *sub_185F7B8(uint64_t a1)
{
  if (!a1)
  {
    sub_187BFF0();
  }

  return sub_185E300(v3, a1, 0);
}

void *sub_185F814(uint64_t a1)
{
  if (!a1)
  {
    sub_187C05C();
  }

  return sub_185EAD8(v3, a1, 0);
}

void sub_185F870()
{
}

double sub_185F8D0(uint64_t a1, uint64_t a2)
{
  return sub_1791234(a2);
}

uint64_t sub_185F8D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_185F8E0()
{
}

uint64_t sub_185F930(uint64_t a1, uint64_t a2)
{
  return sub_17912C0(a2);
}

uint64_t sub_185F938(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_185F940()
{
}

uint64_t sub_185F994(uint64_t a1, uint64_t a2)
{
  return sub_179133C(a2);
}

uint64_t sub_185F99C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_185F9A4()
{
}

void sub_185F9EC()
{
}

uint64_t sub_185FA10(uint64_t a1, uint64_t a2)
{
  return sub_17913DC(a2);
}

uint64_t sub_185FA18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FA20()
{
}

void sub_185FA68()
{
}

uint64_t sub_185FA8C(uint64_t a1, uint64_t a2)
{
  return sub_1791CF0(a2);
}

uint64_t sub_185FA94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FA9C()
{
}

uint64_t sub_185FAE8(uint64_t a1, uint64_t a2)
{
  return sub_1791D4C(a2);
}

uint64_t sub_185FAF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_185FAF8()
{
}

double sub_185FB54(uint64_t a1, uint64_t a2)
{
  return sub_1850814(a2);
}

uint64_t sub_185FB5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_185FB64()
{
}

void sub_185FBAC()
{
}

uint64_t sub_185FBD0(uint64_t a1, uint64_t a2)
{
  return sub_185089C(a2);
}

uint64_t sub_185FBD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FBE0()
{
}

void *sub_185FC2C(uint64_t a1, uint64_t a2)
{
  return sub_18508F8(a2);
}

uint64_t sub_185FC34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_185FC3C()
{
}

double sub_185FCB4(uint64_t a1, uint64_t a2)
{
  return sub_1850970(a2);
}

uint64_t sub_185FCBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_185FCC4()
{
}

void sub_185FD0C()
{
}

uint64_t sub_185FD30(uint64_t a1, uint64_t a2)
{
  return sub_1850A04(a2);
}

uint64_t sub_185FD38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FD40()
{
}

void sub_185FD88()
{
}

uint64_t sub_185FDAC(uint64_t a1, uint64_t a2)
{
  return sub_185F34C(a2);
}

uint64_t sub_185FDB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FDBC()
{
}

void sub_185FE04()
{
}

uint64_t sub_185FE28(uint64_t a1, uint64_t a2)
{
  return sub_185F3A8(a2);
}

uint64_t sub_185FE30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FE38()
{
}

void sub_185FE80()
{
}

void *sub_185FEA4(uint64_t a1, uint64_t a2)
{
  return sub_185F404(a2);
}

uint64_t sub_185FEAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FEB4()
{
}

uint64_t sub_185FF00(uint64_t a1, uint64_t a2)
{
  return sub_185F460(a2);
}

uint64_t sub_185FF08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_185FF10()
{
}

void sub_185FF58()
{
}

uint64_t sub_185FF7C(uint64_t a1, uint64_t a2)
{
  return sub_185F4D8(a2);
}

uint64_t sub_185FF84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_185FF8C()
{
}

void sub_185FFD4()
{
}

void *sub_185FFF8(uint64_t a1, uint64_t a2)
{
  return sub_185F534(a2);
}

uint64_t sub_1860000(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1860008()
{
}

void sub_1860050()
{
}

uint64_t sub_1860074(uint64_t a1, uint64_t a2)
{
  return sub_185F590(a2);
}

uint64_t sub_186007C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1860084()
{
}

void sub_18600CC()
{
}

uint64_t sub_18600F0(uint64_t a1, uint64_t a2)
{
  return sub_185F5EC(a2);
}

uint64_t sub_18600F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1860100()
{
}

void sub_1860148()
{
}

uint64_t sub_186016C(uint64_t a1, uint64_t a2)
{
  return sub_185F648(a2);
}

uint64_t sub_1860174(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186017C()
{
}

void sub_18601C4()
{
}

void *sub_18601E8(uint64_t a1, uint64_t a2)
{
  return sub_185F6A4(a2);
}

uint64_t sub_18601F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18601F8()
{
}

void sub_1860240()
{
}

uint64_t sub_1860264(uint64_t a1, uint64_t a2)
{
  return sub_185F700(a2);
}

uint64_t sub_186026C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1860274()
{
}

void sub_18602BC()
{
}

uint64_t sub_18602E0(uint64_t a1, uint64_t a2)
{
  return sub_185F75C(a2);
}

uint64_t sub_18602E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18602F0()
{
}

void sub_1860338()
{
}

void *sub_186035C(uint64_t a1, uint64_t a2)
{
  return sub_185F7B8(a2);
}

uint64_t sub_1860364(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186036C()
{
}

void sub_18603B4()
{
}

void *sub_18603D8(uint64_t a1, uint64_t a2)
{
  return sub_185F814(a2);
}

uint64_t sub_18603E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18603E8()
{
}

void *sub_1860438(uint64_t a1, uint64_t a2)
{
  return sub_1854C48(a2);
}

uint64_t sub_1860440(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860448()
{
}

void sub_1860490()
{
}

uint64_t sub_18604B4(uint64_t a1, uint64_t a2)
{
  return sub_1854CC4(a2);
}

uint64_t sub_18604BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18604C4()
{
}

uint64_t sub_1860510(uint64_t a1, uint64_t a2)
{
  return sub_1854D20(a2);
}

uint64_t sub_1860518(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860520()
{
}

uint64_t sub_186056C(uint64_t a1, uint64_t a2)
{
  return sub_1854D98(a2);
}

uint64_t sub_1860574(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186057C()
{
}

uint64_t sub_18605C8(uint64_t a1, uint64_t a2)
{
  return sub_1854E10(a2);
}

uint64_t sub_18605D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18605D8()
{
}

void *sub_1860634(uint64_t a1, uint64_t a2)
{
  return sub_1854E88(a2);
}

uint64_t sub_186063C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860644()
{
}

void sub_186068C()
{
}

uint64_t sub_18606B0(uint64_t a1, uint64_t a2)
{
  return sub_1854F10(a2);
}

uint64_t sub_18606B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18606C0()
{
}

uint64_t sub_1860710(uint64_t a1, uint64_t a2)
{
  return sub_1854F6C(a2);
}

uint64_t sub_1860718(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860720()
{
}

void sub_1860768()
{
}

uint64_t sub_186078C(uint64_t a1, uint64_t a2)
{
  return sub_1854FE8(a2);
}

uint64_t sub_1860794(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186079C()
{
}

uint64_t sub_18607E8(uint64_t a1, uint64_t a2)
{
  return sub_1848A68(a2);
}

uint64_t sub_18607F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18607F8()
{
}

uint64_t sub_1860844(uint64_t a1, uint64_t a2)
{
  return sub_1848AE0(a2);
}

uint64_t sub_186084C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860854()
{
}

void *sub_18608A0(uint64_t a1, uint64_t a2)
{
  return sub_1848B58(a2);
}

uint64_t sub_18608A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18608B0()
{
}

uint64_t sub_18608FC(uint64_t a1, uint64_t a2)
{
  return sub_1848BD0(a2);
}

uint64_t sub_1860904(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186090C()
{
}

uint64_t sub_1860960(uint64_t a1, uint64_t a2)
{
  return sub_1848C48(a2);
}

uint64_t sub_1860968(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860970()
{
}

uint64_t sub_18609C0(uint64_t a1, uint64_t a2)
{
  return sub_1848CE4(a2);
}

uint64_t sub_18609C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18609D0()
{
}

uint64_t sub_1860A20(uint64_t a1, uint64_t a2)
{
  return sub_1848D60(a2);
}

uint64_t sub_1860A28(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860A30()
{
}

uint64_t sub_1860A7C(uint64_t a1, uint64_t a2)
{
  return sub_1848DDC(a2);
}

uint64_t sub_1860A84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860A8C()
{
}

uint64_t sub_1860AD8(uint64_t a1, uint64_t a2)
{
  return sub_1848E54(a2);
}

uint64_t sub_1860AE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860AE8()
{
}

uint64_t sub_1860B38(uint64_t a1, uint64_t a2)
{
  return sub_1848ECC(a2);
}

uint64_t sub_1860B40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860B48()
{
}

uint64_t sub_1860B94(uint64_t a1, uint64_t a2)
{
  return sub_1848F48(a2);
}

uint64_t sub_1860B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860BA4()
{
}

uint64_t sub_1860BF0(uint64_t a1, uint64_t a2)
{
  return sub_1848FC0(a2);
}

uint64_t sub_1860BF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860C00()
{
}

uint64_t sub_1860C4C(uint64_t a1, uint64_t a2)
{
  return sub_1849038(a2);
}

uint64_t sub_1860C54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860C5C()
{
}

uint64_t sub_1860CA8(uint64_t a1, uint64_t a2)
{
  return sub_18490B0(a2);
}

uint64_t sub_1860CB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860CB8()
{
}

uint64_t sub_1860D0C(uint64_t a1, uint64_t a2)
{
  return sub_1849128(a2);
}

uint64_t sub_1860D14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860D1C()
{
}

uint64_t sub_1860D8C(uint64_t a1, uint64_t a2)
{
  return sub_18491A8(a2);
}

uint64_t sub_1860D94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860D9C()
{
}

uint64_t sub_1860DEC(uint64_t a1, uint64_t a2)
{
  return sub_1849264(a2);
}

uint64_t sub_1860DF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860DFC()
{
}

uint64_t sub_1860E4C(uint64_t a1, uint64_t a2)
{
  return sub_18492E0(a2);
}

uint64_t sub_1860E54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1860E5C()
{
}

uint64_t sub_1860EA8(uint64_t a1, uint64_t a2)
{
  return sub_184935C(a2);
}

uint64_t sub_1860EB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860EB8()
{
}

uint64_t sub_1860F04(uint64_t a1, uint64_t a2)
{
  return sub_18493D4(a2);
}

uint64_t sub_1860F0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860F14()
{
}

uint64_t sub_1860F60(uint64_t a1, uint64_t a2)
{
  return sub_184944C(a2);
}

uint64_t sub_1860F68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860F70()
{
}

uint64_t sub_1860FBC(uint64_t a1, uint64_t a2)
{
  return sub_18494C4(a2);
}

uint64_t sub_1860FC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1860FCC()
{
}

uint64_t sub_1861018(uint64_t a1, uint64_t a2)
{
  return sub_184953C(a2);
}

uint64_t sub_1861020(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1861028()
{
}

uint64_t sub_1861074(uint64_t a1, uint64_t a2)
{
  return sub_18495B4(a2);
}

uint64_t sub_186107C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1861084()
{
}

uint64_t sub_18610D0(uint64_t a1, uint64_t a2)
{
  return sub_184962C(a2);
}

uint64_t sub_18610D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18610E0()
{
}

uint64_t sub_186112C(uint64_t a1, uint64_t a2)
{
  return sub_18496A4(a2);
}

uint64_t sub_1861134(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186113C()
{
}

uint64_t sub_186118C(uint64_t a1, uint64_t a2)
{
  return sub_184971C(a2);
}

uint64_t sub_1861194(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186119C()
{
}

uint64_t sub_18611E8(uint64_t a1, uint64_t a2)
{
  return sub_1849798(a2);
}

uint64_t sub_18611F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18611F8()
{
}

uint64_t sub_1861244(uint64_t a1, uint64_t a2)
{
  return sub_1849810(a2);
}

uint64_t sub_186124C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1861254()
{
}

void *sub_18612AC(uint64_t a1, uint64_t a2)
{
  return sub_1849888(a2);
}

uint64_t sub_18612B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18612BC()
{
}

uint64_t sub_186130C(uint64_t a1, uint64_t a2)
{
  return sub_184990C(a2);
}

uint64_t sub_1861314(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186131C()
{
}

uint64_t sub_1861368(uint64_t a1, uint64_t a2)
{
  return sub_1849988(a2);
}

uint64_t sub_1861370(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1861378()
{
}

uint64_t sub_18613C4(uint64_t a1, uint64_t a2)
{
  return sub_1849A00(a2);
}

uint64_t sub_18613CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18613D4()
{
}

uint64_t sub_1861420(uint64_t a1, uint64_t a2)
{
  return sub_1849A78(a2);
}

uint64_t sub_1861428(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1861430()
{
}

uint64_t sub_186147C(uint64_t a1, uint64_t a2)
{
  return sub_1849AF0(a2);
}

uint64_t sub_1861484(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186148C()
{
}

uint64_t sub_18614D8(uint64_t a1, uint64_t a2)
{
  return sub_1849B68(a2);
}

uint64_t sub_18614E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18614E8()
{
}

double sub_1861564(uint64_t a1, uint64_t a2)
{
  return sub_1849BE0(a2);
}

uint64_t sub_186156C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

void sub_1861574()
{
}

uint64_t sub_18615C8(uint64_t a1, uint64_t a2)
{
  return sub_1849C88(a2);
}

uint64_t sub_18615D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18615D8()
{
}

void *sub_1861634(uint64_t a1, uint64_t a2)
{
  return sub_1849D24(a2);
}

uint64_t sub_186163C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1861644()
{
}

void *sub_186169C(uint64_t a1, uint64_t a2)
{
  return sub_1849DC8(a2);
}

uint64_t sub_18616A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18616AC()
{
}

void *sub_1861704(uint64_t a1, uint64_t a2)
{
  return sub_1849E6C(a2);
}

uint64_t sub_186170C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1861714()
{
}

uint64_t sub_186176C(uint64_t a1, uint64_t a2)
{
  return sub_1849F10(a2);
}

uint64_t sub_1861774(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186177C()
{
}

uint64_t sub_18617D4(uint64_t a1, uint64_t a2)
{
  return sub_1849FB4(a2);
}

uint64_t sub_18617DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18617E4()
{
}

void *sub_1861834(uint64_t a1, uint64_t a2)
{
  return sub_1786034(a2);
}

uint64_t sub_186183C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1861844()
{
}

void *sub_1861890(uint64_t a1, uint64_t a2)
{
  return sub_17860B0(a2);
}

uint64_t sub_1861898(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18618A0()
{
}

void *sub_18618EC(uint64_t a1, uint64_t a2)
{
  return sub_1786128(a2);
}

uint64_t sub_18618F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18618FC()
{
}

uint64_t sub_186195C(uint64_t a1, uint64_t a2)
{
  return sub_17861A0(a2);
}

uint64_t sub_1861964(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186196C()
{
}

uint64_t sub_18619BC(uint64_t a1, uint64_t a2)
{
  return sub_1786248(a2);
}

uint64_t sub_18619C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18619CC()
{
}

void *sub_1861A24(uint64_t a1, uint64_t a2)
{
  return sub_17862C4(a2);
}

uint64_t sub_1861A2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1861A34()
{
}

void sub_1861A7C()
{
}

uint64_t sub_1861AA0(uint64_t a1, uint64_t a2)
{
  return sub_1786348(a2);
}

uint64_t sub_1861AA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861AB0()
{
}

void sub_1861AF8()
{
}

uint64_t sub_1861B1C(uint64_t a1, uint64_t a2)
{
  return sub_17863A4(a2);
}

uint64_t sub_1861B24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861B2C()
{
}

void *sub_1861B84(uint64_t a1, uint64_t a2)
{
  return sub_1786400(a2);
}

uint64_t sub_1861B8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1861B94()
{
}

void sub_1861BDC()
{
}

uint64_t sub_1861C00(uint64_t a1, uint64_t a2)
{
  return sub_1786484(a2);
}

uint64_t sub_1861C08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861C10()
{
}

void sub_1861C58()
{
}

uint64_t sub_1861C7C(uint64_t a1, uint64_t a2)
{
  return sub_17864E0(a2);
}

uint64_t sub_1861C84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861C8C()
{
}

void sub_1861CD4()
{
}

void *sub_1861CF8(uint64_t a1, uint64_t a2)
{
  return sub_178653C(a2);
}

uint64_t sub_1861D00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861D08()
{
}

double sub_1861D5C(uint64_t a1, uint64_t a2)
{
  return sub_1786598(a2);
}

uint64_t sub_1861D64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1861D6C()
{
}

void sub_1861DB4()
{
}

void *sub_1861DD8(uint64_t a1, uint64_t a2)
{
  return sub_1786618(a2);
}

uint64_t sub_1861DE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861DE8()
{
}

void sub_1861E30()
{
}

uint64_t sub_1861E54(uint64_t a1, uint64_t a2)
{
  return sub_1786674(a2);
}

uint64_t sub_1861E5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861E64()
{
}

void sub_1861EAC()
{
}

uint64_t sub_1861ED0(uint64_t a1, uint64_t a2)
{
  return sub_17866D0(a2);
}

uint64_t sub_1861ED8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1861EE0()
{
}

void sub_1861F28()
{
}

uint64_t sub_1861F4C(uint64_t a1, uint64_t a2)
{
  return sub_178672C(a2);
}

uint64_t sub_1861F54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1861F5C()
{
}

void sub_1861FA4()
{
}

uint64_t sub_1861FC8(uint64_t a1, uint64_t a2)
{
  return sub_1786788(a2);
}

uint64_t sub_1861FD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1861FD8()
{
}

uint64_t sub_186202C(uint64_t a1, uint64_t a2)
{
  return sub_17867E4(a2);
}

uint64_t sub_1862034(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186203C()
{
}

void sub_1862084()
{
}

uint64_t sub_18620A8(uint64_t a1, uint64_t a2)
{
  return sub_1786884(a2);
}

uint64_t sub_18620B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18620B8()
{
}

void sub_1862100()
{
}

uint64_t sub_1862124(uint64_t a1, uint64_t a2)
{
  return sub_17868E0(a2);
}

uint64_t sub_186212C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1862134()
{
}

void sub_186217C()
{
}

uint64_t sub_18621A0(uint64_t a1, uint64_t a2)
{
  return sub_178693C(a2);
}

uint64_t sub_18621A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18621B0()
{
}

void *sub_1862208(uint64_t a1, uint64_t a2)
{
  return sub_1786998(a2);
}

uint64_t sub_1862210(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862218()
{
}

void *sub_1862270(uint64_t a1, uint64_t a2)
{
  return sub_1786A1C(a2);
}

uint64_t sub_1862278(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862280()
{
}

void sub_18622C8()
{
}

uint64_t sub_18622EC(uint64_t a1, uint64_t a2)
{
  return sub_1786AA0(a2);
}

uint64_t sub_18622F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18622FC()
{
}

void sub_1862344()
{
}

uint64_t sub_1862368(uint64_t a1, uint64_t a2)
{
  return sub_1786AFC(a2);
}

uint64_t sub_1862370(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1862378()
{
}

void sub_18623C0()
{
}

void *sub_18623E4(uint64_t a1, uint64_t a2)
{
  return sub_1786B58(a2);
}

uint64_t sub_18623EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18623F4()
{
}

uint64_t sub_1862448(uint64_t a1, uint64_t a2)
{
  return sub_1786BB4(a2);
}

uint64_t sub_1862450(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862458()
{
}

void *sub_18624B4(uint64_t a1, uint64_t a2)
{
  return sub_1786C50(a2);
}

uint64_t sub_18624BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18624C4()
{
}

void sub_186250C()
{
}

uint64_t sub_1862530(uint64_t a1, uint64_t a2)
{
  return sub_1786CF4(a2);
}

uint64_t sub_1862538(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1862540()
{
}

uint64_t sub_186258C(uint64_t a1, uint64_t a2)
{
  return sub_1786D50(a2);
}

uint64_t sub_1862594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186259C()
{
}

void *sub_18625F8(uint64_t a1, uint64_t a2)
{
  return sub_1786DC8(a2);
}

uint64_t sub_1862600(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862608()
{
}

uint64_t sub_186265C(uint64_t a1, uint64_t a2)
{
  return sub_1786E6C(a2);
}

uint64_t sub_1862664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186266C()
{
}

uint64_t sub_18626B8(uint64_t a1, uint64_t a2)
{
  return sub_1786F0C(a2);
}

uint64_t sub_18626C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18626C8()
{
}

void *sub_186271C(uint64_t a1, uint64_t a2)
{
  return sub_1786F84(a2);
}

uint64_t sub_1862724(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186272C()
{
}

double sub_1862790(uint64_t a1, uint64_t a2)
{
  return sub_1787024(a2);
}

uint64_t sub_1862798(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18627A0()
{
}

double sub_18627FC(uint64_t a1, uint64_t a2)
{
  return sub_17870E8(a2);
}

uint64_t sub_1862804(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186280C()
{
}

void *sub_1862860(uint64_t a1, uint64_t a2)
{
  return sub_1787190(a2);
}

uint64_t sub_1862868(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862870()
{
}

uint64_t sub_18628C8(uint64_t a1, uint64_t a2)
{
  return sub_1787230(a2);
}

uint64_t sub_18628D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18628D8()
{
}

uint64_t sub_1862924(uint64_t a1, uint64_t a2)
{
  return sub_17872D4(a2);
}

uint64_t sub_186292C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1862934()
{
}

void sub_186297C()
{
}

uint64_t sub_18629A0(uint64_t a1, uint64_t a2)
{
  return sub_178734C(a2);
}

uint64_t sub_18629A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18629B0()
{
}

double sub_1862A04(uint64_t a1, uint64_t a2)
{
  return sub_17873A8(a2);
}

uint64_t sub_1862A0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862A14()
{
}

uint64_t sub_1862A78(uint64_t a1, uint64_t a2)
{
  return sub_1787428(a2);
}

uint64_t sub_1862A80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862A88()
{
}

void sub_1862AD0()
{
}

uint64_t sub_1862AF4(uint64_t a1, uint64_t a2)
{
  return sub_17874D8(a2);
}

uint64_t sub_1862AFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1862B04()
{
}

void sub_1862B4C()
{
}

uint64_t sub_1862B70(uint64_t a1, uint64_t a2)
{
  return sub_1787534(a2);
}

uint64_t sub_1862B78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1862B80()
{
}

double sub_1862BD0(uint64_t a1, uint64_t a2)
{
  return sub_1787590(a2);
}

uint64_t sub_1862BD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862BE0()
{
}

void sub_1862C28()
{
}

uint64_t sub_1862C4C(uint64_t a1, uint64_t a2)
{
  return sub_178760C(a2);
}

uint64_t sub_1862C54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1862C5C()
{
}

uint64_t sub_1862CA8(uint64_t a1, uint64_t a2)
{
  return sub_1787668(a2);
}

uint64_t sub_1862CB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1862CB8()
{
}

uint64_t sub_1862D0C(uint64_t a1, uint64_t a2)
{
  return sub_17876E0(a2);
}

uint64_t sub_1862D14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1862D1C()
{
}

void sub_1862D64()
{
}

void *sub_1862D88(uint64_t a1, uint64_t a2)
{
  return sub_1787760(a2);
}

uint64_t sub_1862D90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1862D98()
{
}

void sub_1862DE0()
{
}

void *sub_1862E04(uint64_t a1, uint64_t a2)
{
  return sub_17877BC(a2);
}

uint64_t sub_1862E0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1862E14()
{
}

void sub_1862E5C()
{
}

uint64_t sub_1862E80(uint64_t a1, uint64_t a2)
{
  return sub_1787818(a2);
}

uint64_t sub_1862E88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1862E90()
{
}

uint64_t sub_1862EDC(uint64_t a1, uint64_t a2)
{
  return sub_1787874(a2);
}

uint64_t sub_1862EE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1862EEC()
{
}

uint64_t sub_1862F40(uint64_t a1, uint64_t a2)
{
  return sub_17878EC(a2);
}

uint64_t sub_1862F48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1862F50()
{
}

uint64_t sub_1862F9C(uint64_t a1, uint64_t a2)
{
  return sub_178798C(a2);
}

uint64_t sub_1862FA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1862FAC()
{
}

void sub_1862FF4()
{
}

uint64_t sub_1863018(uint64_t a1, uint64_t a2)
{
  return sub_1787A04(a2);
}

uint64_t sub_1863020(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1863028()
{
}

uint64_t sub_1863074(uint64_t a1, uint64_t a2)
{
  return sub_1787A60(a2);
}

uint64_t sub_186307C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1863084()
{
}

void sub_18630CC()
{
}

uint64_t sub_18630F0(uint64_t a1, uint64_t a2)
{
  return sub_1787AD8(a2);
}

uint64_t sub_18630F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1863100()
{
}

void sub_1863148()
{
}

uint64_t sub_186316C(uint64_t a1, uint64_t a2)
{
  return sub_1787B34(a2);
}

uint64_t sub_1863174(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186317C()
{
}

void *sub_18631D4(uint64_t a1, uint64_t a2)
{
  return sub_1787B90(a2);
}

uint64_t sub_18631DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18631E4()
{
}

void sub_186322C()
{
}

uint64_t sub_1863250(uint64_t a1, uint64_t a2)
{
  return sub_1787C14(a2);
}

uint64_t sub_1863258(uint64_t a1)
{
  return *(unsigned int *)(a1 + 80);
}

void sub_1863260()
{
}

void sub_18632A8()
{
}

uint64_t sub_18632CC(uint64_t a1, uint64_t a2)
{
  return sub_1787C70(a2);
}

uint64_t sub_18632D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_18632DC()
{
}

void sub_1863324()
{
}

void *sub_1863348(uint64_t a1, uint64_t a2)
{
  return sub_1787CCC(a2);
}

uint64_t sub_1863350(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863358()
{
}

void sub_18633A0()
{
}

uint64_t sub_18633C4(uint64_t a1, uint64_t a2)
{
  return sub_1787D28(a2);
}

uint64_t sub_18633CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18633D4()
{
}

void sub_186341C()
{
}

void *sub_1863440(uint64_t a1, uint64_t a2)
{
  return sub_1787D84(a2);
}

uint64_t sub_1863448(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863450()
{
}

uint64_t sub_186349C(uint64_t a1, uint64_t a2)
{
  return sub_1787DE0(a2);
}

uint64_t sub_18634A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18634AC()
{
}

void sub_18634F4()
{
}

uint64_t sub_1863518(uint64_t a1, uint64_t a2)
{
  return sub_1787E58(a2);
}

uint64_t sub_1863520(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863528()
{
}

uint64_t sub_1863574(uint64_t a1, uint64_t a2)
{
  return sub_1787EB4(a2);
}

uint64_t sub_186357C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1863584()
{
}

uint64_t sub_18635D0(uint64_t a1, uint64_t a2)
{
  return sub_1787F2C(a2);
}

uint64_t sub_18635D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18635E0()
{
}

void sub_1863628()
{
}

uint64_t sub_186364C(uint64_t a1, uint64_t a2)
{
  return sub_1787FA4(a2);
}

uint64_t sub_1863654(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186365C()
{
}

uint64_t sub_18636A8(uint64_t a1, uint64_t a2)
{
  return sub_1788000(a2);
}

uint64_t sub_18636B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18636B8()
{
}

void sub_1863700()
{
}

uint64_t sub_1863724(uint64_t a1, uint64_t a2)
{
  return sub_1788078(a2);
}

uint64_t sub_186372C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863734()
{
}

void sub_186377C()
{
}

uint64_t sub_18637A0(uint64_t a1, uint64_t a2)
{
  return sub_17880D4(a2);
}

uint64_t sub_18637A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18637B0()
{
}

void *sub_1863808(uint64_t a1, uint64_t a2)
{
  return sub_1788130(a2);
}

uint64_t sub_1863810(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1863818()
{
}

void sub_1863860()
{
}

void *sub_1863884(uint64_t a1, uint64_t a2)
{
  return sub_17881B4(a2);
}

uint64_t sub_186388C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863894()
{
}

void sub_18638DC()
{
}

uint64_t sub_1863900(uint64_t a1, uint64_t a2)
{
  return sub_1788210(a2);
}

uint64_t sub_1863908(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863910()
{
}

void *sub_1863968(uint64_t a1, uint64_t a2)
{
  return sub_178826C(a2);
}

uint64_t sub_1863970(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1863978()
{
}

void sub_18639C0()
{
}

void *sub_18639E4(uint64_t a1, uint64_t a2)
{
  return sub_17882F0(a2);
}

uint64_t sub_18639EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18639F4()
{
}

void sub_1863A3C()
{
}

uint64_t sub_1863A60(uint64_t a1, uint64_t a2)
{
  return sub_178834C(a2);
}

uint64_t sub_1863A68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1863A70()
{
}

void sub_1863AB8()
{
}

void *sub_1863ADC(uint64_t a1, uint64_t a2)
{
  return sub_17883A8(a2);
}

uint64_t sub_1863AE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863AEC()
{
}

void sub_1863B34()
{
}

uint64_t sub_1863B58(uint64_t a1, uint64_t a2)
{
  return sub_1788404(a2);
}

uint64_t sub_1863B60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1863B68()
{
}

void *sub_1863BB4(uint64_t a1, uint64_t a2)
{
  return sub_1788460(a2);
}

uint64_t sub_1863BBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1863BC4()
{
}

uint64_t sub_1863C18(uint64_t a1, uint64_t a2)
{
  return sub_17884D8(a2);
}

uint64_t sub_1863C20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1863C28()
{
}

void sub_1863C70()
{
}

void *sub_1863C94(uint64_t a1, uint64_t a2)
{
  return sub_1788574(a2);
}

uint64_t sub_1863C9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863CA4()
{
}

void sub_1863CEC()
{
}

void *sub_1863D10(uint64_t a1, uint64_t a2)
{
  return sub_17885D0(a2);
}

uint64_t sub_1863D18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863D20()
{
}

void sub_1863D68()
{
}

uint64_t sub_1863D8C(uint64_t a1, uint64_t a2)
{
  return sub_178862C(a2);
}

uint64_t sub_1863D94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1863D9C()
{
}

uint64_t sub_1863DF8(uint64_t a1, uint64_t a2)
{
  return sub_1788688(a2);
}

uint64_t sub_1863E00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1863E08()
{
}

void sub_1863E50()
{
}

void *sub_1863E74(uint64_t a1, uint64_t a2)
{
  return sub_1788710(a2);
}

uint64_t sub_1863E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863E84()
{
}

void sub_1863ECC()
{
}

uint64_t sub_1863EF0(uint64_t a1, uint64_t a2)
{
  return sub_178876C(a2);
}

uint64_t sub_1863EF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1863F00()
{
}

void sub_1863F48()
{
}

uint64_t sub_1863F6C(uint64_t a1, uint64_t a2)
{
  return sub_17887C8(a2);
}

uint64_t sub_1863F74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1863F7C()
{
}

void sub_1863FC4()
{
}

uint64_t sub_1863FE8(uint64_t a1, uint64_t a2)
{
  return sub_1788824(a2);
}

uint64_t sub_1863FF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1863FF8()
{
}

void sub_1864040()
{
}

uint64_t sub_1864064(uint64_t a1, uint64_t a2)
{
  return sub_1788880(a2);
}

uint64_t sub_186406C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864074()
{
}

double sub_18640CC(uint64_t a1, uint64_t a2)
{
  return sub_17888DC(a2);
}

uint64_t sub_18640D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18640DC()
{
}

uint64_t sub_1864128(uint64_t a1, uint64_t a2)
{
  return sub_178898C(a2);
}

uint64_t sub_1864130(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1864138()
{
}

void sub_1864180()
{
}

void *sub_18641A4(uint64_t a1, uint64_t a2)
{
  return sub_1788A04(a2);
}

uint64_t sub_18641AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18641B4()
{
}

void sub_18641FC()
{
}

uint64_t sub_1864220(uint64_t a1, uint64_t a2)
{
  return sub_1788A60(a2);
}

uint64_t sub_1864228(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1864230()
{
}

void sub_1864278()
{
}

uint64_t sub_186429C(uint64_t a1, uint64_t a2)
{
  return sub_1788ABC(a2);
}

uint64_t sub_18642A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18642AC()
{
}

void sub_18642F4()
{
}

uint64_t sub_1864318(uint64_t a1, uint64_t a2)
{
  return sub_1788B18(a2);
}

uint64_t sub_1864320(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_1864328()
{
}

void sub_1864370()
{
}

uint64_t sub_1864394(uint64_t a1, uint64_t a2)
{
  return sub_1788B74(a2);
}

uint64_t sub_186439C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18643A4()
{
}

void sub_18643EC()
{
}

uint64_t sub_1864410(uint64_t a1, uint64_t a2)
{
  return sub_1788BD0(a2);
}

uint64_t sub_1864418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1864420()
{
}

uint64_t sub_186446C(uint64_t a1, uint64_t a2)
{
  return sub_1788C2C(a2);
}

uint64_t sub_1864474(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186447C()
{
}

void *sub_18644CC(uint64_t a1, uint64_t a2)
{
  return sub_1788CA4(a2);
}

uint64_t sub_18644D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18644DC()
{
}

void *sub_1864530(uint64_t a1, uint64_t a2)
{
  return sub_1788D20(a2);
}

uint64_t sub_1864538(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1864540()
{
}

uint64_t sub_186458C(uint64_t a1, uint64_t a2)
{
  return sub_1788DBC(a2);
}

uint64_t sub_1864594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186459C()
{
}

void sub_18645E4()
{
}

void *sub_1864608(uint64_t a1, uint64_t a2)
{
  return sub_1788E34(a2);
}

uint64_t sub_1864610(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864618()
{
}

uint64_t sub_1864664(uint64_t a1, uint64_t a2)
{
  return sub_1788E90(a2);
}

uint64_t sub_186466C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1864674()
{
}

void sub_18646BC()
{
}

uint64_t sub_18646E0(uint64_t a1, uint64_t a2)
{
  return sub_1788F08(a2);
}

uint64_t sub_18646E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_18646F0()
{
}

uint64_t sub_186473C(uint64_t a1, uint64_t a2)
{
  return sub_1788F64(a2);
}

uint64_t sub_1864744(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186474C()
{
}

void sub_1864794()
{
}

void *sub_18647B8(uint64_t a1, uint64_t a2)
{
  return sub_1788FDC(a2);
}

uint64_t sub_18647C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18647C8()
{
}

uint64_t sub_1864814(uint64_t a1, uint64_t a2)
{
  return sub_1789038(a2);
}

uint64_t sub_186481C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1864824()
{
}

uint64_t sub_1864878(uint64_t a1, uint64_t a2)
{
  return sub_17890B0(a2);
}

uint64_t sub_1864880(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1864888()
{
}

void sub_18648D0()
{
}

uint64_t sub_18648F4(uint64_t a1, uint64_t a2)
{
  return sub_1789150(a2);
}

uint64_t sub_18648FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864904()
{
}

uint64_t sub_1864950(uint64_t a1, uint64_t a2)
{
  return sub_17891AC(a2);
}

uint64_t sub_1864958(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1864960()
{
}

void sub_18649A8()
{
}

void *sub_18649CC(uint64_t a1, uint64_t a2)
{
  return sub_1789224(a2);
}

uint64_t sub_18649D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18649DC()
{
}

uint64_t sub_1864A28(uint64_t a1, uint64_t a2)
{
  return sub_1789280(a2);
}

uint64_t sub_1864A30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1864A38()
{
}

uint64_t sub_1864A88(uint64_t a1, uint64_t a2)
{
  return sub_17892F8(a2);
}

uint64_t sub_1864A90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1864A98()
{
}

void sub_1864AE0()
{
}

uint64_t sub_1864B04(uint64_t a1, uint64_t a2)
{
  return sub_1789374(a2);
}

uint64_t sub_1864B0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864B14()
{
}

uint64_t sub_1864B64(uint64_t a1, uint64_t a2)
{
  return sub_17893D0(a2);
}

uint64_t sub_1864B6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1864B74()
{
}

uint64_t sub_1864BD8(uint64_t a1, uint64_t a2)
{
  return sub_178944C(a2);
}

uint64_t sub_1864BE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1864BE8()
{
}

void sub_1864C30()
{
}

uint64_t sub_1864C54(uint64_t a1, uint64_t a2)
{
  return sub_17894DC(a2);
}

uint64_t sub_1864C5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864C64()
{
}

void sub_1864CAC()
{
}

uint64_t sub_1864CD0(uint64_t a1, uint64_t a2)
{
  return sub_1789538(a2);
}

uint64_t sub_1864CD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864CE0()
{
}

void *sub_1864D3C(uint64_t a1, uint64_t a2)
{
  return sub_1789594(a2);
}

uint64_t sub_1864D44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1864D4C()
{
}

void sub_1864D94()
{
}

uint64_t sub_1864DB8(uint64_t a1, uint64_t a2)
{
  return sub_1789638(a2);
}

uint64_t sub_1864DC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864DC8()
{
}

void sub_1864E10()
{
}

void *sub_1864E34(uint64_t a1, uint64_t a2)
{
  return sub_1789694(a2);
}

uint64_t sub_1864E3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1864E44()
{
}

uint64_t sub_1864E98(uint64_t a1, uint64_t a2)
{
  return sub_17896F0(a2);
}

uint64_t sub_1864EA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1864EA8()
{
}

uint64_t sub_1864F00(uint64_t a1, uint64_t a2)
{
  return sub_1789790(a2);
}

uint64_t sub_1864F08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1864F10()
{
}

void *sub_1864F6C(uint64_t a1, uint64_t a2)
{
  return sub_1789834(a2);
}

uint64_t sub_1864F74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1864F7C()
{
}

uint64_t sub_1864FC8(uint64_t a1, uint64_t a2)
{
  return sub_17898BC(a2);
}

uint64_t sub_1864FD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1864FD8()
{
}

void *sub_1865034(uint64_t a1, uint64_t a2)
{
  return sub_1789934(a2);
}

uint64_t sub_186503C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865044()
{
}

uint64_t sub_1865098(uint64_t a1, uint64_t a2)
{
  return sub_17899BC(a2);
}

uint64_t sub_18650A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18650A8()
{
}

uint64_t sub_18650F8(uint64_t a1, uint64_t a2)
{
  return sub_1789A58(a2);
}

uint64_t sub_1865100(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1865108()
{
}

void *sub_1865164(uint64_t a1, uint64_t a2)
{
  return sub_1789AEC(a2);
}

uint64_t sub_186516C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865174()
{
}

double sub_18651C8(uint64_t a1, uint64_t a2)
{
  return sub_1789B90(a2);
}

uint64_t sub_18651D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18651D8()
{
}

void sub_1865220()
{
}

void *sub_1865244(uint64_t a1, uint64_t a2)
{
  return sub_1789C3C(a2);
}

uint64_t sub_186524C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1865254()
{
}

uint64_t sub_18652A0(uint64_t a1, uint64_t a2)
{
  return sub_1789C98(a2);
}

uint64_t sub_18652A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18652B0()
{
}

uint64_t sub_18652FC(uint64_t a1, uint64_t a2)
{
  return sub_1789D10(a2);
}

uint64_t sub_1865304(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186530C()
{
}

void *sub_1865358(uint64_t a1, uint64_t a2)
{
  return sub_1789D88(a2);
}

uint64_t sub_1865360(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865368()
{
}

void *sub_18653B4(uint64_t a1, uint64_t a2)
{
  return sub_1789E00(a2);
}

uint64_t sub_18653BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18653C4()
{
}

uint64_t sub_1865410(uint64_t a1, uint64_t a2)
{
  return sub_1789E78(a2);
}

uint64_t sub_1865418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1865420()
{
}

double sub_1865478(uint64_t a1, uint64_t a2)
{
  return sub_1789EF0(a2);
}

uint64_t sub_1865480(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865488()
{
}

uint64_t sub_18654DC(uint64_t a1, uint64_t a2)
{
  return sub_1789F74(a2);
}

uint64_t sub_18654E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18654EC()
{
}

void sub_1865534()
{
}

uint64_t sub_1865558(uint64_t a1, uint64_t a2)
{
  return sub_1789FF4(a2);
}

uint64_t sub_1865560(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1865568()
{
}

double sub_18655C4(uint64_t a1, uint64_t a2)
{
  return sub_178A050(a2);
}

uint64_t sub_18655CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18655D4()
{
}

void sub_186561C()
{
}

uint64_t sub_1865640(uint64_t a1, uint64_t a2)
{
  return sub_178A0F4(a2);
}

uint64_t sub_1865648(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1865650()
{
}

void sub_1865698()
{
}

uint64_t sub_18656BC(uint64_t a1, uint64_t a2)
{
  return sub_178A150(a2);
}

uint64_t sub_18656C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18656CC()
{
}

void sub_1865714()
{
}

uint64_t sub_1865738(uint64_t a1, uint64_t a2)
{
  return sub_178A1AC(a2);
}

uint64_t sub_1865740(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1865748()
{
}

uint64_t sub_1865798(uint64_t a1, uint64_t a2)
{
  return sub_178A208(a2);
}

uint64_t sub_18657A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18657A8()
{
}

void sub_18657F0()
{
}

uint64_t sub_1865814(uint64_t a1, uint64_t a2)
{
  return sub_178A284(a2);
}

uint64_t sub_186581C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1865824()
{
}

void *sub_186587C(uint64_t a1, uint64_t a2)
{
  return sub_178A2E0(a2);
}

uint64_t sub_1865884(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186588C()
{
}

uint64_t sub_18658D8(uint64_t a1, uint64_t a2)
{
  return sub_178A364(a2);
}

uint64_t sub_18658E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18658E8()
{
}

void *sub_1865944(uint64_t a1, uint64_t a2)
{
  return sub_178A3DC(a2);
}

uint64_t sub_186594C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865954()
{
}

uint64_t sub_18659A0(uint64_t a1, uint64_t a2)
{
  return sub_178A480(a2);
}

uint64_t sub_18659A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_18659B0()
{
}

void sub_18659F8()
{
}

void *sub_1865A1C(uint64_t a1, uint64_t a2)
{
  return sub_178A4F8(a2);
}

uint64_t sub_1865A24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1865A2C()
{
}

uint64_t sub_1865A78(uint64_t a1, uint64_t a2)
{
  return sub_178A554(a2);
}

uint64_t sub_1865A80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1865A88()
{
}

void sub_1865AD0()
{
}

void *sub_1865AF4(uint64_t a1, uint64_t a2)
{
  return sub_178A5CC(a2);
}

uint64_t sub_1865AFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1865B04()
{
}

void sub_1865B4C()
{
}

uint64_t sub_1865B70(uint64_t a1, uint64_t a2)
{
  return sub_178A628(a2);
}

uint64_t sub_1865B78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_1865B80()
{
}

uint64_t sub_1865BD0(uint64_t a1, uint64_t a2)
{
  return sub_178A684(a2);
}

uint64_t sub_1865BD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865BE0()
{
}

uint64_t sub_1865C34(uint64_t a1, uint64_t a2)
{
  return sub_178A700(a2);
}

uint64_t sub_1865C3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865C44()
{
}

uint64_t sub_1865C90(uint64_t a1, uint64_t a2)
{
  return sub_178A79C(a2);
}

uint64_t sub_1865C98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1865CA0()
{
}

uint64_t sub_1865CF4(uint64_t a1, uint64_t a2)
{
  return sub_178A814(a2);
}

uint64_t sub_1865CFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1865D04()
{
}

uint64_t sub_1865D50(uint64_t a1, uint64_t a2)
{
  return sub_178A8B4(a2);
}

uint64_t sub_1865D58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1865D60()
{
}

uint64_t sub_1865DB0(uint64_t a1, uint64_t a2)
{
  return sub_178A92C(a2);
}

uint64_t sub_1865DB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865DC0()
{
}

uint64_t sub_1865E0C(uint64_t a1, uint64_t a2)
{
  return sub_178A9A8(a2);
}

uint64_t sub_1865E14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1865E1C()
{
}

uint64_t sub_1865E74(uint64_t a1, uint64_t a2)
{
  return sub_178AA20(a2);
}

uint64_t sub_1865E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1865E84()
{
}

uint64_t sub_1865ED0(uint64_t a1, uint64_t a2)
{
  return sub_178AAC4(a2);
}

uint64_t sub_1865ED8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1865EE0()
{
}

void *sub_1865F3C(uint64_t a1, uint64_t a2)
{
  return sub_178AB3C(a2);
}

uint64_t sub_1865F44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1865F4C()
{
}

uint64_t sub_1865F98(uint64_t a1, uint64_t a2)
{
  return sub_178ABC4(a2);
}

uint64_t sub_1865FA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1865FA8()
{
}

void *sub_1865FF4(uint64_t a1, uint64_t a2)
{
  return sub_178AC3C(a2);
}

uint64_t sub_1865FFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866004()
{
}

uint64_t sub_1866050(uint64_t a1, uint64_t a2)
{
  return sub_178ACB4(a2);
}

uint64_t sub_1866058(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1866060()
{
}

void *sub_18660BC(uint64_t a1, uint64_t a2)
{
  return sub_178AD2C(a2);
}

uint64_t sub_18660C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18660CC()
{
}

uint64_t sub_1866118(uint64_t a1, uint64_t a2)
{
  return sub_178ADB4(a2);
}

uint64_t sub_1866120(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1866128()
{
}

uint64_t sub_1866174(uint64_t a1, uint64_t a2)
{
  return sub_178AE2C(a2);
}

uint64_t sub_186617C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1866184()
{
}

void *sub_18661E4(uint64_t a1, uint64_t a2)
{
  return sub_178AEA4(a2);
}

uint64_t sub_18661EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18661F4()
{
}

void *sub_1866248(uint64_t a1, uint64_t a2)
{
  return sub_178AF30(a2);
}

uint64_t sub_1866250(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866258()
{
}

void *sub_18662B4(uint64_t a1, uint64_t a2)
{
  return sub_178AFCC(a2);
}

uint64_t sub_18662BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18662C4()
{
}

uint64_t sub_1866318(uint64_t a1, uint64_t a2)
{
  return sub_178B054(a2);
}

uint64_t sub_1866320(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866328()
{
}

void sub_1866370()
{
}

uint64_t sub_1866394(uint64_t a1, uint64_t a2)
{
  return sub_178B0F0(a2);
}

uint64_t sub_186639C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18663A4()
{
}

void sub_18663EC()
{
}

uint64_t sub_1866410(uint64_t a1, uint64_t a2)
{
  return sub_178B14C(a2);
}

uint64_t sub_1866418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866420()
{
}

void sub_1866468()
{
}

void *sub_186648C(uint64_t a1, uint64_t a2)
{
  return sub_178B1A8(a2);
}

uint64_t sub_1866494(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186649C()
{
}

uint64_t sub_18664F8(uint64_t a1, uint64_t a2)
{
  return sub_178B204(a2);
}

uint64_t sub_1866500(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866508()
{
}

void sub_1866550()
{
}

void *sub_1866574(uint64_t a1, uint64_t a2)
{
  return sub_178B28C(a2);
}

uint64_t sub_186657C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866584()
{
}

void sub_18665CC()
{
}

void *sub_18665F0(uint64_t a1, uint64_t a2)
{
  return sub_178B2E8(a2);
}

uint64_t sub_18665F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866600()
{
}

void sub_1866648()
{
}

uint64_t sub_186666C(uint64_t a1, uint64_t a2)
{
  return sub_178B344(a2);
}

uint64_t sub_1866674(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186667C()
{
}

void sub_18666C4()
{
}

uint64_t sub_18666E8(uint64_t a1, uint64_t a2)
{
  return sub_178B3A0(a2);
}

uint64_t sub_18666F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_18666F8()
{
}

void sub_1866740()
{
}

uint64_t sub_1866764(uint64_t a1, uint64_t a2)
{
  return sub_178B3FC(a2);
}

uint64_t sub_186676C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_1866774()
{
}

void sub_18667BC()
{
}

uint64_t sub_18667E0(uint64_t a1, uint64_t a2)
{
  return sub_178B458(a2);
}

uint64_t sub_18667E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18667F0()
{
}

double sub_1866844(uint64_t a1, uint64_t a2)
{
  return sub_178B4B4(a2);
}

uint64_t sub_186684C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866854()
{
}

void sub_186689C()
{
}

uint64_t sub_18668C0(uint64_t a1, uint64_t a2)
{
  return sub_178B534(a2);
}

uint64_t sub_18668C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18668D0()
{
}

void sub_1866918()
{
}

uint64_t sub_186693C(uint64_t a1, uint64_t a2)
{
  return sub_178B590(a2);
}

uint64_t sub_1866944(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186694C()
{
}

void sub_1866994()
{
}

uint64_t sub_18669B8(uint64_t a1, uint64_t a2)
{
  return sub_178B5EC(a2);
}

uint64_t sub_18669C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18669C8()
{
}

void sub_1866A10()
{
}

uint64_t sub_1866A34(uint64_t a1, uint64_t a2)
{
  return sub_178B648(a2);
}

uint64_t sub_1866A3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866A44()
{
}

uint64_t sub_1866A94(uint64_t a1, uint64_t a2)
{
  return sub_178B6A4(a2);
}

uint64_t sub_1866A9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866AA4()
{
}

void sub_1866AEC()
{
}

uint64_t sub_1866B10(uint64_t a1, uint64_t a2)
{
  return sub_178B720(a2);
}

uint64_t sub_1866B18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866B20()
{
}

void *sub_1866B78(uint64_t a1, uint64_t a2)
{
  return sub_178B77C(a2);
}

uint64_t sub_1866B80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866B88()
{
}

void sub_1866BD0()
{
}

uint64_t sub_1866BF4(uint64_t a1, uint64_t a2)
{
  return sub_178B800(a2);
}

uint64_t sub_1866BFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1866C04()
{
}

uint64_t sub_1866C60(uint64_t a1, uint64_t a2)
{
  return sub_178B85C(a2);
}

uint64_t sub_1866C68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1866C70()
{
}

void sub_1866CB8()
{
}

uint64_t sub_1866CDC(uint64_t a1, uint64_t a2)
{
  return sub_178B8E4(a2);
}

uint64_t sub_1866CE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866CEC()
{
}

void sub_1866D34()
{
}

uint64_t sub_1866D58(uint64_t a1, uint64_t a2)
{
  return sub_178B940(a2);
}

uint64_t sub_1866D60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866D68()
{
}

void sub_1866DB0()
{
}

uint64_t sub_1866DD4(uint64_t a1, uint64_t a2)
{
  return sub_178B99C(a2);
}

uint64_t sub_1866DDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866DE4()
{
}

void sub_1866E2C()
{
}

void *sub_1866E50(uint64_t a1, uint64_t a2)
{
  return sub_178B9F8(a2);
}

uint64_t sub_1866E58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866E60()
{
}

void sub_1866EA8()
{
}

uint64_t sub_1866ECC(uint64_t a1, uint64_t a2)
{
  return sub_178BA54(a2);
}

uint64_t sub_1866ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1866EDC()
{
}

void sub_1866F24()
{
}

void *sub_1866F48(uint64_t a1, uint64_t a2)
{
  return sub_178BAB0(a2);
}

uint64_t sub_1866F50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1866F58()
{
}

void sub_1866FA0()
{
}

uint64_t sub_1866FC4(uint64_t a1, uint64_t a2)
{
  return sub_178BB0C(a2);
}

uint64_t sub_1866FCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1866FD4()
{
}

void sub_186701C()
{
}

void *sub_1867040(uint64_t a1, uint64_t a2)
{
  return sub_178BB68(a2);
}

uint64_t sub_1867048(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1867050()
{
}

void sub_1867098()
{
}

uint64_t sub_18670BC(uint64_t a1, uint64_t a2)
{
  return sub_178BBC4(a2);
}

uint64_t sub_18670C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18670CC()
{
}

void sub_1867114()
{
}

uint64_t sub_1867138(uint64_t a1, uint64_t a2)
{
  return sub_178BC20(a2);
}

uint64_t sub_1867140(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1867148()
{
}

void sub_1867190()
{
}

uint64_t sub_18671B4(uint64_t a1, uint64_t a2)
{
  return sub_178BC7C(a2);
}

uint64_t sub_18671BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18671C4()
{
}

void sub_186720C()
{
}

void *sub_1867230(uint64_t a1, uint64_t a2)
{
  return sub_178BCD8(a2);
}

uint64_t sub_1867238(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1867240()
{
}

void sub_1867288()
{
}

uint64_t sub_18672AC(uint64_t a1, uint64_t a2)
{
  return sub_178BD34(a2);
}

uint64_t sub_18672B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18672BC()
{
}

void *sub_1867314(uint64_t a1, uint64_t a2)
{
  return sub_178BD90(a2);
}

uint64_t sub_186731C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867324()
{
}

void sub_186736C()
{
}

uint64_t sub_1867390(uint64_t a1, uint64_t a2)
{
  return sub_178BE14(a2);
}

uint64_t sub_1867398(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

void sub_18673A0()
{
}

void sub_18673E8()
{
}

uint64_t sub_186740C(uint64_t a1, uint64_t a2)
{
  return sub_178BE70(a2);
}

uint64_t sub_1867414(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186741C()
{
}

uint64_t sub_1867470(uint64_t a1, uint64_t a2)
{
  return sub_178BECC(a2);
}

uint64_t sub_1867478(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1867480()
{
}

double sub_18674DC(uint64_t a1, uint64_t a2)
{
  return sub_178BF6C(a2);
}

uint64_t sub_18674E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18674EC()
{
}

void sub_1867534()
{
}

void *sub_1867558(uint64_t a1, uint64_t a2)
{
  return sub_178C028(a2);
}

uint64_t sub_1867560(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1867568()
{
}

void sub_18675B0()
{
}

uint64_t sub_18675D4(uint64_t a1, uint64_t a2)
{
  return sub_178C084(a2);
}

uint64_t sub_18675DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18675E4()
{
}

void *sub_1867640(uint64_t a1, uint64_t a2)
{
  return sub_178C0E0(a2);
}

uint64_t sub_1867648(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867650()
{
}

uint64_t sub_18676A4(uint64_t a1, uint64_t a2)
{
  return sub_178C184(a2);
}

uint64_t sub_18676AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18676B4()
{
}

void *sub_1867700(uint64_t a1, uint64_t a2)
{
  return sub_178C224(a2);
}

uint64_t sub_1867708(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867710()
{
}

void *sub_186775C(uint64_t a1, uint64_t a2)
{
  return sub_178C29C(a2);
}

uint64_t sub_1867764(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186776C()
{
}

uint64_t sub_18677C0(uint64_t a1, uint64_t a2)
{
  return sub_178C314(a2);
}

uint64_t sub_18677C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18677D0()
{
}

double sub_1867828(uint64_t a1, uint64_t a2)
{
  return sub_178C3B4(a2);
}

uint64_t sub_1867830(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867838()
{
}

uint64_t sub_1867894(uint64_t a1, uint64_t a2)
{
  return sub_178C438(a2);
}

uint64_t sub_186789C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18678A4()
{
}

void *sub_18678F0(uint64_t a1, uint64_t a2)
{
  return sub_178C4DC(a2);
}

uint64_t sub_18678F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867900()
{
}

void sub_1867948()
{
}

uint64_t sub_186796C(uint64_t a1, uint64_t a2)
{
  return sub_178C554(a2);
}

uint64_t sub_1867974(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186797C()
{
}

void sub_18679C4()
{
}

uint64_t sub_18679E8(uint64_t a1, uint64_t a2)
{
  return sub_178C5B0(a2);
}

uint64_t sub_18679F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18679F8()
{
}

void *sub_1867A44(uint64_t a1, uint64_t a2)
{
  return sub_178C60C(a2);
}

uint64_t sub_1867A4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867A54()
{
}

void sub_1867A9C()
{
}

uint64_t sub_1867AC0(uint64_t a1, uint64_t a2)
{
  return sub_178C684(a2);
}

uint64_t sub_1867AC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_1867AD0()
{
}

void sub_1867B18()
{
}

void *sub_1867B3C(uint64_t a1, uint64_t a2)
{
  return sub_178C6E0(a2);
}

uint64_t sub_1867B44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1867B4C()
{
}

void sub_1867B94()
{
}

uint64_t sub_1867BB8(uint64_t a1, uint64_t a2)
{
  return sub_178C73C(a2);
}

uint64_t sub_1867BC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1867BC8()
{
}

void *sub_1867C24(uint64_t a1, uint64_t a2)
{
  return sub_178C798(a2);
}

uint64_t sub_1867C2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867C34()
{
}

uint64_t sub_1867C88(uint64_t a1, uint64_t a2)
{
  return sub_178C820(a2);
}

uint64_t sub_1867C90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867C98()
{
}

uint64_t sub_1867CE8(uint64_t a1, uint64_t a2)
{
  return sub_178C8C4(a2);
}

uint64_t sub_1867CF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1867CF8()
{
}

void *sub_1867D60(uint64_t a1, uint64_t a2)
{
  return sub_178C958(a2);
}

uint64_t sub_1867D68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867D70()
{
}

uint64_t sub_1867DDC(uint64_t a1, uint64_t a2)
{
  return sub_178CA08(a2);
}

uint64_t sub_1867DE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867DEC()
{
}

double sub_1867E40(uint64_t a1, uint64_t a2)
{
  return sub_178CAC0(a2);
}

uint64_t sub_1867E48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867E50()
{
}

double sub_1867EA8(uint64_t a1, uint64_t a2)
{
  return sub_178CB40(a2);
}

uint64_t sub_1867EB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867EB8()
{
}

uint64_t sub_1867F0C(uint64_t a1, uint64_t a2)
{
  return sub_178CBC4(a2);
}

uint64_t sub_1867F14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867F1C()
{
}

uint64_t sub_1867F70(uint64_t a1, uint64_t a2)
{
  return sub_178CC68(a2);
}

uint64_t sub_1867F78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867F80()
{
}

void *sub_1867FD4(uint64_t a1, uint64_t a2)
{
  return sub_178CD0C(a2);
}

uint64_t sub_1867FDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1867FE4()
{
}

void sub_186802C()
{
}

uint64_t sub_1868050(uint64_t a1, uint64_t a2)
{
  return sub_178CDA8(a2);
}

uint64_t sub_1868058(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868060()
{
}

uint64_t sub_18680B4(uint64_t a1, uint64_t a2)
{
  return sub_178CE04(a2);
}

uint64_t sub_18680BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18680C4()
{
}

void *sub_186811C(uint64_t a1, uint64_t a2)
{
  return sub_178CE84(a2);
}

uint64_t sub_1868124(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186812C()
{
}

uint64_t sub_1868180(uint64_t a1, uint64_t a2)
{
  return sub_178CF08(a2);
}

uint64_t sub_1868188(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868190()
{
}

uint64_t sub_18681E0(uint64_t a1, uint64_t a2)
{
  return sub_178CF88(a2);
}

uint64_t sub_18681E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18681F0()
{
}

uint64_t sub_1868248(uint64_t a1, uint64_t a2)
{
  return sub_178D004(a2);
}

uint64_t sub_1868250(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1868258()
{
}

void sub_18682A0()
{
}

void *sub_18682C4(uint64_t a1, uint64_t a2)
{
  return sub_178D0A8(a2);
}

uint64_t sub_18682CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18682D4()
{
}

void sub_186831C()
{
}

uint64_t sub_1868340(uint64_t a1, uint64_t a2)
{
  return sub_178D104(a2);
}

uint64_t sub_1868348(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868350()
{
}

void *sub_18683A4(uint64_t a1, uint64_t a2)
{
  return sub_178D160(a2);
}

uint64_t sub_18683AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18683B4()
{
}

uint64_t sub_1868404(uint64_t a1, uint64_t a2)
{
  return sub_178D1FC(a2);
}

uint64_t sub_186840C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868414()
{
}

double sub_1868470(uint64_t a1, uint64_t a2)
{
  return sub_178D278(a2);
}

uint64_t sub_1868478(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868480()
{
}

void *sub_18684D8(uint64_t a1, uint64_t a2)
{
  return sub_178D300(a2);
}

uint64_t sub_18684E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18684E8()
{
}

uint64_t sub_1868538(uint64_t a1, uint64_t a2)
{
  return sub_178D384(a2);
}

uint64_t sub_1868540(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868548()
{
}

uint64_t sub_18685A0(uint64_t a1, uint64_t a2)
{
  return sub_178D400(a2);
}

uint64_t sub_18685A8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18685B0()
{
}

uint64_t sub_186860C(uint64_t a1, uint64_t a2)
{
  return sub_178D4A0(a2);
}

uint64_t sub_1868614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186861C()
{
}

void *sub_1868668(uint64_t a1, uint64_t a2)
{
  return sub_178D54C(a2);
}

uint64_t sub_1868670(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868678()
{
}

uint64_t sub_18686C8(uint64_t a1, uint64_t a2)
{
  return sub_178D5C4(a2);
}

uint64_t sub_18686D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18686D8()
{
}

uint64_t sub_1868728(uint64_t a1, uint64_t a2)
{
  return sub_178D640(a2);
}

uint64_t sub_1868730(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1868738()
{
}

uint64_t sub_186878C(uint64_t a1, uint64_t a2)
{
  return sub_178D6D4(a2);
}

uint64_t sub_1868794(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186879C()
{
}

uint64_t sub_18687F0(uint64_t a1, uint64_t a2)
{
  return sub_178D754(a2);
}

uint64_t sub_18687F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1868800()
{
}

uint64_t sub_1868850(uint64_t a1, uint64_t a2)
{
  return sub_178D7F4(a2);
}

uint64_t sub_1868858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868860()
{
}

void *sub_18688AC(uint64_t a1, uint64_t a2)
{
  return sub_178D870(a2);
}

uint64_t sub_18688B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_18688BC()
{
}

uint64_t sub_1868910(uint64_t a1, uint64_t a2)
{
  return sub_178D8E8(a2);
}

uint64_t sub_1868918(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1868920()
{
}

uint64_t sub_1868974(uint64_t a1, uint64_t a2)
{
  return sub_178D988(a2);
}

uint64_t sub_186897C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868984()
{
}

uint64_t sub_18689D4(uint64_t a1, uint64_t a2)
{
  return sub_178DA08(a2);
}

uint64_t sub_18689DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_18689E4()
{
}

uint64_t sub_1868A38(uint64_t a1, uint64_t a2)
{
  return sub_178DA9C(a2);
}

uint64_t sub_1868A40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1868A48()
{
}

uint64_t sub_1868A9C(uint64_t a1, uint64_t a2)
{
  return sub_178DB3C(a2);
}

uint64_t sub_1868AA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1868AAC()
{
}

void sub_1868AF4()
{
}

void *sub_1868B18(uint64_t a1, uint64_t a2)
{
  return sub_178DBDC(a2);
}

uint64_t sub_1868B20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868B28()
{
}

void sub_1868B70()
{
}

void *sub_1868B94(uint64_t a1, uint64_t a2)
{
  return sub_178DC38(a2);
}

uint64_t sub_1868B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868BA4()
{
}

void *sub_1868C04(uint64_t a1, uint64_t a2)
{
  return sub_178DC94(a2);
}

uint64_t sub_1868C0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868C14()
{
}

void sub_1868C5C()
{
}

uint64_t sub_1868C80(uint64_t a1, uint64_t a2)
{
  return sub_178DD3C(a2);
}

uint64_t sub_1868C88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868C90()
{
}

void sub_1868CD8()
{
}

uint64_t sub_1868CFC(uint64_t a1, uint64_t a2)
{
  return sub_178DD98(a2);
}

uint64_t sub_1868D04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868D0C()
{
}

void sub_1868D54()
{
}

void *sub_1868D78(uint64_t a1, uint64_t a2)
{
  return sub_178DDF4(a2);
}

uint64_t sub_1868D80(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868D88()
{
}

void sub_1868DD0()
{
}

void *sub_1868DF4(uint64_t a1, uint64_t a2)
{
  return sub_178DE50(a2);
}

uint64_t sub_1868DFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1868E04()
{
}

uint64_t sub_1868E54(uint64_t a1, uint64_t a2)
{
  return sub_178DEAC(a2);
}

uint64_t sub_1868E5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_1868E64()
{
}

uint64_t sub_1868EB4(uint64_t a1, uint64_t a2)
{
  return sub_178DF40(a2);
}

uint64_t sub_1868EBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868EC4()
{
}

void *sub_1868F24(uint64_t a1, uint64_t a2)
{
  return sub_178DFBC(a2);
}

uint64_t sub_1868F2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868F34()
{
}

void *sub_1868F84(uint64_t a1, uint64_t a2)
{
  return sub_178E06C(a2);
}

uint64_t sub_1868F8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868F94()
{
}

uint64_t sub_1868FE8(uint64_t a1, uint64_t a2)
{
  return sub_178E0E8(a2);
}

uint64_t sub_1868FF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1868FF8()
{
}

void *sub_1869050(uint64_t a1, uint64_t a2)
{
  return sub_178E168(a2);
}

uint64_t sub_1869058(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869060()
{
}

void sub_18690A8()
{
}

void *sub_18690CC(uint64_t a1, uint64_t a2)
{
  return sub_178E1EC(a2);
}

uint64_t sub_18690D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18690DC()
{
}

uint64_t sub_1869140(uint64_t a1, uint64_t a2)
{
  return sub_178E248(a2);
}

uint64_t sub_1869148(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869150()
{
}

void sub_1869198()
{
}

uint64_t sub_18691BC(uint64_t a1, uint64_t a2)
{
  return sub_178E2FC(a2);
}

uint64_t sub_18691C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_18691CC()
{
}

void sub_1869214()
{
}

uint64_t sub_1869238(uint64_t a1, uint64_t a2)
{
  return sub_178E358(a2);
}

uint64_t sub_1869240(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1869248()
{
}

void sub_1869290()
{
}

void *sub_18692B4(uint64_t a1, uint64_t a2)
{
  return sub_178E3B4(a2);
}

uint64_t sub_18692BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_18692C4()
{
}

void sub_186930C()
{
}

uint64_t sub_1869330(uint64_t a1, uint64_t a2)
{
  return sub_178E410(a2);
}

uint64_t sub_1869338(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_1869340()
{
}

uint64_t sub_1869394(uint64_t a1, uint64_t a2)
{
  return sub_178E46C(a2);
}

uint64_t sub_186939C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18693A4()
{
}

void sub_18693EC()
{
}

uint64_t sub_1869410(uint64_t a1, uint64_t a2)
{
  return sub_178E50C(a2);
}

uint64_t sub_1869418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1869420()
{
}

void sub_1869468()
{
}

uint64_t sub_186948C(uint64_t a1, uint64_t a2)
{
  return sub_178E568(a2);
}

uint64_t sub_1869494(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186949C()
{
}

void sub_18694E4()
{
}

uint64_t sub_1869508(uint64_t a1, uint64_t a2)
{
  return sub_178E5C4(a2);
}

uint64_t sub_1869510(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1869518()
{
}

void sub_1869560()
{
}

uint64_t sub_1869584(uint64_t a1, uint64_t a2)
{
  return sub_178E620(a2);
}

uint64_t sub_186958C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1869594()
{
}

void sub_18695DC()
{
}

uint64_t sub_1869600(uint64_t a1, uint64_t a2)
{
  return sub_178E67C(a2);
}

uint64_t sub_1869608(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1869610()
{
}

void sub_1869658()
{
}

uint64_t sub_186967C(uint64_t a1, uint64_t a2)
{
  return sub_178E6D8(a2);
}

uint64_t sub_1869684(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186968C()
{
}

uint64_t sub_18696E0(uint64_t a1, uint64_t a2)
{
  return sub_178E734(a2);
}

uint64_t sub_18696E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18696F0()
{
}

void sub_1869738()
{
}

uint64_t sub_186975C(uint64_t a1, uint64_t a2)
{
  return sub_178E7D4(a2);
}

uint64_t sub_1869764(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186976C()
{
}

void sub_18697B4()
{
}

uint64_t sub_18697D8(uint64_t a1, uint64_t a2)
{
  return sub_178E830(a2);
}

uint64_t sub_18697E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18697E8()
{
}

void sub_1869830()
{
}

void *sub_1869854(uint64_t a1, uint64_t a2)
{
  return sub_178E88C(a2);
}

uint64_t sub_186985C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1869864()
{
}

void sub_18698AC()
{
}

uint64_t sub_18698D0(uint64_t a1, uint64_t a2)
{
  return sub_178E8E8(a2);
}

uint64_t sub_18698D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18698E0()
{
}

void sub_1869928()
{
}

uint64_t sub_186994C(uint64_t a1, uint64_t a2)
{
  return sub_178E944(a2);
}

uint64_t sub_1869954(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186995C()
{
}

void sub_18699A4()
{
}

uint64_t sub_18699C8(uint64_t a1, uint64_t a2)
{
  return sub_178E9A0(a2);
}

uint64_t sub_18699D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_18699D8()
{
}

void sub_1869A20()
{
}

uint64_t sub_1869A44(uint64_t a1, uint64_t a2)
{
  return sub_178E9FC(a2);
}

uint64_t sub_1869A4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1869A54()
{
}

void sub_1869A9C()
{
}

uint64_t sub_1869AC0(uint64_t a1, uint64_t a2)
{
  return sub_178EA58(a2);
}

uint64_t sub_1869AC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1869AD0()
{
}

void *sub_1869B28(uint64_t a1, uint64_t a2)
{
  return sub_178EAB4(a2);
}

uint64_t sub_1869B30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869B38()
{
}

void *sub_1869B84(uint64_t a1, uint64_t a2)
{
  return sub_178EB38(a2);
}

uint64_t sub_1869B8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869B94()
{
}

void *sub_1869BF4(uint64_t a1, uint64_t a2)
{
  return sub_178EBB0(a2);
}

uint64_t sub_1869BFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869C04()
{
}

uint64_t sub_1869C50(uint64_t a1, uint64_t a2)
{
  return sub_178EC58(a2);
}

uint64_t sub_1869C58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1869C60()
{
}

void sub_1869CA8()
{
}

uint64_t sub_1869CCC(uint64_t a1, uint64_t a2)
{
  return sub_178ECD0(a2);
}

uint64_t sub_1869CD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1869CDC()
{
}

double sub_1869D30(uint64_t a1, uint64_t a2)
{
  return sub_178ED2C(a2);
}

uint64_t sub_1869D38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869D40()
{
}

void *sub_1869D90(uint64_t a1, uint64_t a2)
{
  return sub_178EDAC(a2);
}

uint64_t sub_1869D98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869DA0()
{
}

uint64_t sub_1869DF4(uint64_t a1, uint64_t a2)
{
  return sub_178EE28(a2);
}

uint64_t sub_1869DFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_1869E04()
{
}

uint64_t sub_1869E50(uint64_t a1, uint64_t a2)
{
  return sub_178EEC8(a2);
}

uint64_t sub_1869E58(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1869E60()
{
}

void sub_1869EA8()
{
}

uint64_t sub_1869ECC(uint64_t a1, uint64_t a2)
{
  return sub_178EF40(a2);
}

uint64_t sub_1869ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_1869EDC()
{
}

void *sub_1869F38(uint64_t a1, uint64_t a2)
{
  return sub_178EF9C(a2);
}

uint64_t sub_1869F40(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_1869F48()
{
}

uint64_t sub_1869F94(uint64_t a1, uint64_t a2)
{
  return sub_178F040(a2);
}

uint64_t sub_1869F9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_1869FA4()
{
}

void *sub_1869FF4(uint64_t a1, uint64_t a2)
{
  return sub_18302C8(a2);
}

uint64_t sub_1869FFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A004()
{
}

uint64_t sub_186A058(uint64_t a1, uint64_t a2)
{
  return sub_1830344(a2);
}

uint64_t sub_186A060(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186A068()
{
}

uint64_t sub_186A0D0(uint64_t a1, uint64_t a2)
{
  return sub_18303E4(a2);
}

uint64_t sub_186A0D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A0E0()
{
}

void sub_186A128()
{
}

void *sub_186A14C(uint64_t a1, uint64_t a2)
{
  return sub_1830494(a2);
}

uint64_t sub_186A154(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186A15C()
{
}

void sub_186A1A4()
{
}

uint64_t sub_186A1C8(uint64_t a1, uint64_t a2)
{
  return sub_18304F0(a2);
}

uint64_t sub_186A1D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_186A1D8()
{
}

uint64_t sub_186A234(uint64_t a1, uint64_t a2)
{
  return sub_183054C(a2);
}

uint64_t sub_186A23C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A244()
{
}

uint64_t sub_186A294(uint64_t a1, uint64_t a2)
{
  return sub_18305D4(a2);
}

uint64_t sub_186A29C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A2A4()
{
}

uint64_t sub_186A300(uint64_t a1, uint64_t a2)
{
  return sub_1830650(a2);
}

uint64_t sub_186A308(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A310()
{
}

void sub_186A358()
{
}

uint64_t sub_186A37C(uint64_t a1, uint64_t a2)
{
  return sub_18306D8(a2);
}

uint64_t sub_186A384(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186A38C()
{
}

void *sub_186A3E8(uint64_t a1, uint64_t a2)
{
  return sub_1830734(a2);
}

uint64_t sub_186A3F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A3F8()
{
}

uint64_t sub_186A458(uint64_t a1, uint64_t a2)
{
  return sub_18307BC(a2);
}

uint64_t sub_186A460(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A468()
{
}

uint64_t sub_186A4BC(uint64_t a1, uint64_t a2)
{
  return sub_1830868(a2);
}

uint64_t sub_186A4C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186A4CC()
{
}

uint64_t sub_186A524(uint64_t a1, uint64_t a2)
{
  return sub_1830908(a2);
}

uint64_t sub_186A52C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A534()
{
}

void *sub_186A588(uint64_t a1, uint64_t a2)
{
  return sub_18309B4(a2);
}

uint64_t sub_186A590(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A598()
{
}

void *sub_186A5E8(uint64_t a1, uint64_t a2)
{
  return sub_1830A50(a2);
}

uint64_t sub_186A5F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A5F8()
{
}

uint64_t sub_186A64C(uint64_t a1, uint64_t a2)
{
  return sub_1830ACC(a2);
}

uint64_t sub_186A654(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186A65C()
{
}

void *sub_186A6B0(uint64_t a1, uint64_t a2)
{
  return sub_1830B6C(a2);
}

uint64_t sub_186A6B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A6C0()
{
}

uint64_t sub_186A714(uint64_t a1, uint64_t a2)
{
  return sub_1830C10(a2);
}

uint64_t sub_186A71C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186A724()
{
}

void *sub_186A770(uint64_t a1, uint64_t a2)
{
  return sub_1830CB0(a2);
}

uint64_t sub_186A778(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A780()
{
}

void *sub_186A7DC(uint64_t a1, uint64_t a2)
{
  return sub_1830D28(a2);
}

uint64_t sub_186A7E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A7EC()
{
}

double sub_186A840(uint64_t a1, uint64_t a2)
{
  return sub_1830DCC(a2);
}

uint64_t sub_186A848(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A850()
{
}

void *sub_186A89C(uint64_t a1, uint64_t a2)
{
  return sub_1830E4C(a2);
}

uint64_t sub_186A8A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A8AC()
{
}

void *sub_186A8F8(uint64_t a1, uint64_t a2)
{
  return sub_1830EC4(a2);
}

uint64_t sub_186A900(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A908()
{
}

uint64_t sub_186A95C(uint64_t a1, uint64_t a2)
{
  return sub_1830F3C(a2);
}

uint64_t sub_186A964(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A96C()
{
}

void *sub_186A9C0(uint64_t a1, uint64_t a2)
{
  return sub_1830FBC(a2);
}

uint64_t sub_186A9C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186A9D0()
{
}

double sub_186AA24(uint64_t a1, uint64_t a2)
{
  return sub_1831060(a2);
}

uint64_t sub_186AA2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AA34()
{
}

void *sub_186AA80(uint64_t a1, uint64_t a2)
{
  return sub_18310E0(a2);
}

uint64_t sub_186AA88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AA90()
{
}

void *sub_186AADC(uint64_t a1, uint64_t a2)
{
  return sub_1831158(a2);
}

uint64_t sub_186AAE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AAEC()
{
}

uint64_t sub_186AB40(uint64_t a1, uint64_t a2)
{
  return sub_18311D0(a2);
}

uint64_t sub_186AB48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AB50()
{
}

uint64_t sub_186ABA8(uint64_t a1, uint64_t a2)
{
  return sub_1831250(a2);
}

uint64_t sub_186ABB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186ABB8()
{
}

double sub_186AC10(uint64_t a1, uint64_t a2)
{
  return sub_18312F4(a2);
}

uint64_t sub_186AC18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AC20()
{
}

double sub_186AC84(uint64_t a1, uint64_t a2)
{
  return sub_18313A4(a2);
}

uint64_t sub_186AC8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AC94()
{
}

uint64_t sub_186ACE8(uint64_t a1, uint64_t a2)
{
  return sub_1831434(a2);
}

uint64_t sub_186ACF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186ACF8()
{
}

uint64_t sub_186AD48(uint64_t a1, uint64_t a2)
{
  return sub_18314D4(a2);
}

uint64_t sub_186AD50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AD58()
{
}

uint64_t sub_186ADB4(uint64_t a1, uint64_t a2)
{
  return sub_1831550(a2);
}

uint64_t sub_186ADBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186ADC4()
{
}

void *sub_186AE18(uint64_t a1, uint64_t a2)
{
  return sub_18315D8(a2);
}

uint64_t sub_186AE20(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AE28()
{
}

void *sub_186AE84(uint64_t a1, uint64_t a2)
{
  return sub_1831674(a2);
}

uint64_t sub_186AE8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AE94()
{
}

void *sub_186AEE0(uint64_t a1, uint64_t a2)
{
  return sub_1831718(a2);
}

uint64_t sub_186AEE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AEF0()
{
}

uint64_t sub_186AF44(uint64_t a1, uint64_t a2)
{
  return sub_1831790(a2);
}

uint64_t sub_186AF4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AF54()
{
}

double sub_186AFAC(uint64_t a1, uint64_t a2)
{
  return sub_1831834(a2);
}

uint64_t sub_186AFB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186AFBC()
{
}

uint64_t sub_186B024(uint64_t a1, uint64_t a2)
{
  return sub_18318E4(a2);
}

uint64_t sub_186B02C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B034()
{
}

void *sub_186B098(uint64_t a1, uint64_t a2)
{
  return sub_18319A0(a2);
}

uint64_t sub_186B0A0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B0A8()
{
}

uint64_t sub_186B100(uint64_t a1, uint64_t a2)
{
  return sub_1831A58(a2);
}

uint64_t sub_186B108(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B110()
{
}

uint64_t sub_186B160(uint64_t a1, uint64_t a2)
{
  return sub_1831AF8(a2);
}

uint64_t sub_186B168(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B170()
{
}

uint64_t sub_186B1D0(uint64_t a1, uint64_t a2)
{
  return sub_1831B74(a2);
}

uint64_t sub_186B1D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B1E0()
{
}

uint64_t sub_186B234(uint64_t a1, uint64_t a2)
{
  return sub_1831C00(a2);
}

uint64_t sub_186B23C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186B244()
{
}

uint64_t sub_186B2A4(uint64_t a1, uint64_t a2)
{
  return sub_1831CA0(a2);
}

uint64_t sub_186B2AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B2B4()
{
}

uint64_t sub_186B30C(uint64_t a1, uint64_t a2)
{
  return sub_1831D48(a2);
}

uint64_t sub_186B314(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186B31C()
{
}

double sub_186B378(uint64_t a1, uint64_t a2)
{
  return sub_1831DEC(a2);
}

uint64_t sub_186B380(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B388()
{
}

void sub_186B3D0()
{
}

uint64_t sub_186B3F4(uint64_t a1, uint64_t a2)
{
  return sub_1831E74(a2);
}

uint64_t sub_186B3FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186B404()
{
}

void *sub_186B454(uint64_t a1, uint64_t a2)
{
  return sub_1831ED0(a2);
}

uint64_t sub_186B45C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B464()
{
}

uint64_t sub_186B4B4(uint64_t a1, uint64_t a2)
{
  return sub_1831F4C(a2);
}

uint64_t sub_186B4BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B4C4()
{
}

double sub_186B51C(uint64_t a1, uint64_t a2)
{
  return sub_1831FC8(a2);
}

uint64_t sub_186B524(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B52C()
{
}

void *sub_186B588(uint64_t a1, uint64_t a2)
{
  return sub_183204C(a2);
}

uint64_t sub_186B590(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B598()
{
}

uint64_t sub_186B60C(uint64_t a1, uint64_t a2)
{
  return sub_18320D0(a2);
}

uint64_t sub_186B614(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B61C()
{
}

void *sub_186B674(uint64_t a1, uint64_t a2)
{
  return sub_1832190(a2);
}

uint64_t sub_186B67C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B684()
{
}

double sub_186B704(uint64_t a1, uint64_t a2)
{
  return sub_1832214(a2);
}

uint64_t sub_186B70C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B714()
{
}

uint64_t sub_186B768(uint64_t a1, uint64_t a2)
{
  return sub_18322F8(a2);
}

uint64_t sub_186B770(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186B778()
{
}

uint64_t sub_186B7CC(uint64_t a1, uint64_t a2)
{
  return sub_1832398(a2);
}

uint64_t sub_186B7D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B7DC()
{
}

uint64_t sub_186B830(uint64_t a1, uint64_t a2)
{
  return sub_1832418(a2);
}

uint64_t sub_186B838(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186B840()
{
}

void *sub_186B894(uint64_t a1, uint64_t a2)
{
  return sub_18324B8(a2);
}

uint64_t sub_186B89C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B8A4()
{
}

double sub_186B900(uint64_t a1, uint64_t a2)
{
  return sub_1832554(a2);
}

uint64_t sub_186B908(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B910()
{
}

uint64_t sub_186B968(uint64_t a1, uint64_t a2)
{
  return sub_18325DC(a2);
}

uint64_t sub_186B970(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186B978()
{
}

void *sub_186B9C8(uint64_t a1, uint64_t a2)
{
  return sub_1832680(a2);
}

uint64_t sub_186B9D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186B9D8()
{
}

void *sub_186BA28(uint64_t a1, uint64_t a2)
{
  return sub_1832718(a2);
}

uint64_t sub_186BA30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BA38()
{
}

uint64_t sub_186BA8C(uint64_t a1, uint64_t a2)
{
  return sub_1832794(a2);
}

uint64_t sub_186BA94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186BA9C()
{
}

void *sub_186BAEC(uint64_t a1, uint64_t a2)
{
  return sub_1832834(a2);
}

uint64_t sub_186BAF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BAFC()
{
}

double sub_186BB40(uint64_t a1, uint64_t a2)
{
  return sub_18328CC(a2);
}

uint64_t sub_186BB48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BB50()
{
}

void sub_186BB98()
{
}

uint64_t sub_186BBBC(uint64_t a1, uint64_t a2)
{
  return sub_183292C(a2);
}

uint64_t sub_186BBC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186BBCC()
{
}

void *sub_186BC28(uint64_t a1, uint64_t a2)
{
  return sub_1832988(a2);
}

uint64_t sub_186BC30(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BC38()
{
}

uint64_t sub_186BC94(uint64_t a1, uint64_t a2)
{
  return sub_1832A10(a2);
}

uint64_t sub_186BC9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BCA4()
{
}

uint64_t sub_186BCFC(uint64_t a1, uint64_t a2)
{
  return sub_1832A98(a2);
}

uint64_t sub_186BD04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BD0C()
{
}

uint64_t sub_186BD5C(uint64_t a1, uint64_t a2)
{
  return sub_1832B38(a2);
}

uint64_t sub_186BD64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BD6C()
{
}

void *sub_186BDCC(uint64_t a1, uint64_t a2)
{
  return sub_1832BB4(a2);
}

uint64_t sub_186BDD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BDDC()
{
}

uint64_t sub_186BE30(uint64_t a1, uint64_t a2)
{
  return sub_1832C64(a2);
}

uint64_t sub_186BE38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186BE40()
{
}

void *sub_186BE90(uint64_t a1, uint64_t a2)
{
  return sub_1832D04(a2);
}

uint64_t sub_186BE98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BEA0()
{
}

void *sub_186BEF8(uint64_t a1, uint64_t a2)
{
  return sub_1832D80(a2);
}

uint64_t sub_186BF00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BF08()
{
}

void *sub_186BF60(uint64_t a1, uint64_t a2)
{
  return sub_1832E04(a2);
}

uint64_t sub_186BF68(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186BF70()
{
}

uint64_t sub_186BFBC(uint64_t a1, uint64_t a2)
{
  return sub_1832E88(a2);
}

uint64_t sub_186BFC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186BFCC()
{
}

void sub_186C014()
{
}

uint64_t sub_186C038(uint64_t a1, uint64_t a2)
{
  return sub_1832F00(a2);
}

uint64_t sub_186C040(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186C048()
{
}

void sub_186C090()
{
}

uint64_t sub_186C0B4(uint64_t a1, uint64_t a2)
{
  return sub_1832F5C(a2);
}

uint64_t sub_186C0BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186C0C4()
{
}

void sub_186C10C()
{
}

uint64_t sub_186C130(uint64_t a1, uint64_t a2)
{
  return sub_1832FB8(a2);
}

uint64_t sub_186C138(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186C140()
{
}

void sub_186C188()
{
}

uint64_t sub_186C1AC(uint64_t a1, uint64_t a2)
{
  return sub_1833014(a2);
}

uint64_t sub_186C1B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186C1BC()
{
}

void sub_186C204()
{
}

void *sub_186C228(uint64_t a1, uint64_t a2)
{
  return sub_1833070(a2);
}

uint64_t sub_186C230(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186C238()
{
}

void sub_186C280()
{
}

uint64_t sub_186C2A4(uint64_t a1, uint64_t a2)
{
  return sub_18330CC(a2);
}

uint64_t sub_186C2AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186C2B4()
{
}

void sub_186C2FC()
{
}

void *sub_186C320(uint64_t a1, uint64_t a2)
{
  return sub_1833128(a2);
}

uint64_t sub_186C328(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186C330()
{
}

void sub_186C378()
{
}

uint64_t sub_186C39C(uint64_t a1, uint64_t a2)
{
  return sub_1833184(a2);
}

uint64_t sub_186C3A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186C3AC()
{
}

uint64_t sub_186C3F8(uint64_t a1, uint64_t a2)
{
  return sub_18331E0(a2);
}

uint64_t sub_186C400(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186C408()
{
}

void sub_186C450()
{
}

uint64_t sub_186C474(uint64_t a1, uint64_t a2)
{
  return sub_1833258(a2);
}

uint64_t sub_186C47C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186C484()
{
}

uint64_t sub_186C4D0(uint64_t a1, uint64_t a2)
{
  return sub_18332B4(a2);
}

uint64_t sub_186C4D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186C4E0()
{
}

void sub_186C528()
{
}

void *sub_186C54C(uint64_t a1, uint64_t a2)
{
  return sub_183332C(a2);
}

uint64_t sub_186C554(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186C55C()
{
}

uint64_t sub_186C5A8(uint64_t a1, uint64_t a2)
{
  return sub_1833388(a2);
}

uint64_t sub_186C5B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186C5B8()
{
}

double sub_186C61C(uint64_t a1, uint64_t a2)
{
  return sub_1833400(a2);
}

uint64_t sub_186C624(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186C62C()
{
}

uint64_t sub_186C678(uint64_t a1, uint64_t a2)
{
  return sub_18334B0(a2);
}

uint64_t sub_186C680(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186C688()
{
}

uint64_t sub_186C6EC(uint64_t a1, uint64_t a2)
{
  return sub_1833528(a2);
}

uint64_t sub_186C6F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186C6FC()
{
}

uint64_t sub_186C748(uint64_t a1, uint64_t a2)
{
  return sub_18335B8(a2);
}

uint64_t sub_186C750(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186C758()
{
}

uint64_t sub_186C7AC(uint64_t a1, uint64_t a2)
{
  return sub_1833630(a2);
}

uint64_t sub_186C7B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186C7BC()
{
}

uint64_t sub_186C808(uint64_t a1, uint64_t a2)
{
  return sub_18336D0(a2);
}

uint64_t sub_186C810(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186C818()
{
}

double sub_186C880(uint64_t a1, uint64_t a2)
{
  return sub_1833748(a2);
}

uint64_t sub_186C888(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186C890()
{
}

void *sub_186C8E8(uint64_t a1, uint64_t a2)
{
  return sub_18337F8(a2);
}

uint64_t sub_186C8F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186C8F8()
{
}

double sub_186C960(uint64_t a1, uint64_t a2)
{
  return sub_183387C(a2);
}

uint64_t sub_186C968(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186C970()
{
}

uint64_t sub_186C9BC(uint64_t a1, uint64_t a2)
{
  return sub_1833930(a2);
}

uint64_t sub_186C9C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186C9CC()
{
}

double sub_186CA40(uint64_t a1, uint64_t a2)
{
  return sub_18339A8(a2);
}

uint64_t sub_186CA48(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CA50()
{
}

void *sub_186CAAC(uint64_t a1, uint64_t a2)
{
  return sub_1833A34(a2);
}

uint64_t sub_186CAB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CABC()
{
}

void *sub_186CB14(uint64_t a1, uint64_t a2)
{
  return sub_1833ABC(a2);
}

uint64_t sub_186CB1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CB24()
{
}

void *sub_186CB7C(uint64_t a1, uint64_t a2)
{
  return sub_1833B40(a2);
}

uint64_t sub_186CB84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CB8C()
{
}

uint64_t sub_186CC00(uint64_t a1, uint64_t a2)
{
  return sub_1833BC4(a2);
}

uint64_t sub_186CC08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CC10()
{
}

void *sub_186CC5C(uint64_t a1, uint64_t a2)
{
  return sub_1833C50(a2);
}

uint64_t sub_186CC64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CC6C()
{
}

void *sub_186CCCC(uint64_t a1, uint64_t a2)
{
  return sub_1833CC8(a2);
}

uint64_t sub_186CCD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CCDC()
{
}

void *sub_186CD34(uint64_t a1, uint64_t a2)
{
  return sub_1833D70(a2);
}

uint64_t sub_186CD3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CD44()
{
}

uint64_t sub_186CD98(uint64_t a1, uint64_t a2)
{
  return sub_1833DF4(a2);
}

uint64_t sub_186CDA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CDA8()
{
}

uint64_t sub_186CE08(uint64_t a1, uint64_t a2)
{
  return sub_1833E98(a2);
}

uint64_t sub_186CE10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CE18()
{
}

double sub_186CE90(uint64_t a1, uint64_t a2)
{
  return sub_1833F40(a2);
}

uint64_t sub_186CE98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CEA0()
{
}

uint64_t sub_186CEF8(uint64_t a1, uint64_t a2)
{
  return sub_1834008(a2);
}

uint64_t sub_186CF00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CF08()
{
}

uint64_t sub_186CF58(uint64_t a1, uint64_t a2)
{
  return sub_18340B4(a2);
}

uint64_t sub_186CF60(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CF68()
{
}

double sub_186CFD4(uint64_t a1, uint64_t a2)
{
  return sub_1834130(a2);
}

uint64_t sub_186CFDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186CFE4()
{
}

uint64_t sub_186D038(uint64_t a1, uint64_t a2)
{
  return sub_18341C8(a2);
}

uint64_t sub_186D040(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D048()
{
}

uint64_t sub_186D09C(uint64_t a1, uint64_t a2)
{
  return sub_1834264(a2);
}

uint64_t sub_186D0A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D0AC()
{
}

double sub_186D108(uint64_t a1, uint64_t a2)
{
  return sub_1834300(a2);
}

uint64_t sub_186D110(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D118()
{
}

void sub_186D160()
{
}

uint64_t sub_186D184(uint64_t a1, uint64_t a2)
{
  return sub_1834388(a2);
}

uint64_t sub_186D18C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186D194()
{
}

void sub_186D1DC()
{
}

uint64_t sub_186D200(uint64_t a1, uint64_t a2)
{
  return sub_18343E4(a2);
}

uint64_t sub_186D208(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186D210()
{
}

void sub_186D258()
{
}

uint64_t sub_186D27C(uint64_t a1, uint64_t a2)
{
  return sub_1834440(a2);
}

uint64_t sub_186D284(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186D28C()
{
}

uint64_t sub_186D2E0(uint64_t a1, uint64_t a2)
{
  return sub_183449C(a2);
}

uint64_t sub_186D2E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D2F0()
{
}

uint64_t sub_186D33C(uint64_t a1, uint64_t a2)
{
  return sub_1834538(a2);
}

uint64_t sub_186D344(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186D34C()
{
}

uint64_t sub_186D3A4(uint64_t a1, uint64_t a2)
{
  return sub_18345B0(a2);
}

uint64_t sub_186D3AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

void sub_186D3B4()
{
}

uint64_t sub_186D400(uint64_t a1, uint64_t a2)
{
  return sub_1834660(a2);
}

uint64_t sub_186D408(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186D410()
{
}

uint64_t sub_186D464(uint64_t a1, uint64_t a2)
{
  return sub_18346D8(a2);
}

uint64_t sub_186D46C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D474()
{
}

uint64_t sub_186D4C8(uint64_t a1, uint64_t a2)
{
  return sub_1834774(a2);
}

uint64_t sub_186D4D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186D4D8()
{
}

uint64_t sub_186D52C(uint64_t a1, uint64_t a2)
{
  return sub_1834814(a2);
}

uint64_t sub_186D534(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186D53C()
{
}

uint64_t sub_186D588(uint64_t a1, uint64_t a2)
{
  return sub_18348B4(a2);
}

uint64_t sub_186D590(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186D598()
{
}

uint64_t sub_186D5E8(uint64_t a1, uint64_t a2)
{
  return sub_183492C(a2);
}

uint64_t sub_186D5F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D5F8()
{
}

uint64_t sub_186D664(uint64_t a1, uint64_t a2)
{
  return sub_18349A8(a2);
}

uint64_t sub_186D66C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D674()
{
}

void sub_186D6BC()
{
}

uint64_t sub_186D6E0(uint64_t a1, uint64_t a2)
{
  return sub_1834A78(a2);
}

uint64_t sub_186D6E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186D6F0()
{
}

uint64_t sub_186D754(uint64_t a1, uint64_t a2)
{
  return sub_1834AD4(a2);
}

uint64_t sub_186D75C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D764()
{
}

uint64_t sub_186D7C8(uint64_t a1, uint64_t a2)
{
  return sub_1834B64(a2);
}

uint64_t sub_186D7D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D7D8()
{
}

uint64_t sub_186D83C(uint64_t a1, uint64_t a2)
{
  return sub_1834BF4(a2);
}

uint64_t sub_186D844(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D84C()
{
}

uint64_t sub_186D89C(uint64_t a1, uint64_t a2)
{
  return sub_1834C84(a2);
}

uint64_t sub_186D8A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D8AC()
{
}

void *sub_186D8FC(uint64_t a1, uint64_t a2)
{
  return sub_1834D00(a2);
}

uint64_t sub_186D904(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D90C()
{
}

double sub_186D994(uint64_t a1, uint64_t a2)
{
  return sub_1834D7C(a2);
}

uint64_t sub_186D99C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186D9A4()
{
}

uint64_t sub_186DA0C(uint64_t a1, uint64_t a2)
{
  return sub_1834E34(a2);
}

uint64_t sub_186DA14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DA1C()
{
}

uint64_t sub_186DA80(uint64_t a1, uint64_t a2)
{
  return sub_1834EC8(a2);
}

uint64_t sub_186DA88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DA90()
{
}

double sub_186DB00(uint64_t a1, uint64_t a2)
{
  return sub_1834F58(a2);
}

uint64_t sub_186DB08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DB10()
{
}

uint64_t sub_186DB74(uint64_t a1, uint64_t a2)
{
  return sub_1835014(a2);
}

uint64_t sub_186DB7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DB84()
{
}

uint64_t sub_186DBE8(uint64_t a1, uint64_t a2)
{
  return sub_18350A4(a2);
}

uint64_t sub_186DBF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DBF8()
{
}

uint64_t sub_186DC5C(uint64_t a1, uint64_t a2)
{
  return sub_1835134(a2);
}

uint64_t sub_186DC64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DC6C()
{
}

void *sub_186DCC8(uint64_t a1, uint64_t a2)
{
  return sub_18351C4(a2);
}

uint64_t sub_186DCD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DCD8()
{
}

double sub_186DD30(uint64_t a1, uint64_t a2)
{
  return sub_1835268(a2);
}

uint64_t sub_186DD38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DD40()
{
}

void sub_186DD88()
{
}

uint64_t sub_186DDAC(uint64_t a1, uint64_t a2)
{
  return sub_1835324(a2);
}

uint64_t sub_186DDB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186DDBC()
{
}

uint64_t sub_186DE10(uint64_t a1, uint64_t a2)
{
  return sub_1835380(a2);
}

uint64_t sub_186DE18(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

void sub_186DE20()
{
}

uint64_t sub_186DE6C(uint64_t a1, uint64_t a2)
{
  return sub_1835424(a2);
}

uint64_t sub_186DE74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186DE7C()
{
}

uint64_t sub_186DED4(uint64_t a1, uint64_t a2)
{
  return sub_183549C(a2);
}

uint64_t sub_186DEDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186DEE4()
{
}

uint64_t sub_186DF30(uint64_t a1, uint64_t a2)
{
  return sub_1835540(a2);
}

uint64_t sub_186DF38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186DF40()
{
}

void *sub_186DF98(uint64_t a1, uint64_t a2)
{
  return sub_18355B8(a2);
}

uint64_t sub_186DFA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186DFA8()
{
}

uint64_t sub_186DFF4(uint64_t a1, uint64_t a2)
{
  return sub_183563C(a2);
}

uint64_t sub_186DFFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186E004()
{
}

uint64_t sub_186E058(uint64_t a1, uint64_t a2)
{
  return sub_18356B4(a2);
}

uint64_t sub_186E060(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186E068()
{
}

void *sub_186E0CC(uint64_t a1, uint64_t a2)
{
  return sub_1835754(a2);
}

uint64_t sub_186E0D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E0DC()
{
}

uint64_t sub_186E148(uint64_t a1, uint64_t a2)
{
  return sub_18357E4(a2);
}

uint64_t sub_186E150(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E158()
{
}

uint64_t sub_186E1AC(uint64_t a1, uint64_t a2)
{
  return sub_18358B4(a2);
}

uint64_t sub_186E1B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E1BC()
{
}

uint64_t sub_186E210(uint64_t a1, uint64_t a2)
{
  return sub_1835950(a2);
}

uint64_t sub_186E218(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E220()
{
}

void *sub_186E278(uint64_t a1, uint64_t a2)
{
  return sub_18359EC(a2);
}

uint64_t sub_186E280(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E288()
{
}

uint64_t sub_186E2D4(uint64_t a1, uint64_t a2)
{
  return sub_1835A70(a2);
}

uint64_t sub_186E2DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186E2E4()
{
}

uint64_t sub_186E340(uint64_t a1, uint64_t a2)
{
  return sub_1835AE8(a2);
}

uint64_t sub_186E348(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E350()
{
}

double sub_186E3A8(uint64_t a1, uint64_t a2)
{
  return sub_1835B70(a2);
}

uint64_t sub_186E3B0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E3B8()
{
}

uint64_t sub_186E410(uint64_t a1, uint64_t a2)
{
  return sub_1835C20(a2);
}

uint64_t sub_186E418(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E420()
{
}

uint64_t sub_186E46C(uint64_t a1, uint64_t a2)
{
  return sub_1835CC0(a2);
}

uint64_t sub_186E474(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186E47C()
{
}

void *sub_186E4C8(uint64_t a1, uint64_t a2)
{
  return sub_1835D38(a2);
}

uint64_t sub_186E4D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E4D8()
{
}

uint64_t sub_186E524(uint64_t a1, uint64_t a2)
{
  return sub_1835DB0(a2);
}

uint64_t sub_186E52C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186E534()
{
}

void *sub_186E58C(uint64_t a1, uint64_t a2)
{
  return sub_1835E28(a2);
}

uint64_t sub_186E594(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E59C()
{
}

uint64_t sub_186E5FC(uint64_t a1, uint64_t a2)
{
  return sub_1835EAC(a2);
}

uint64_t sub_186E604(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E60C()
{
}

void *sub_186E65C(uint64_t a1, uint64_t a2)
{
  return sub_1835F38(a2);
}

uint64_t sub_186E664(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E66C()
{
}

uint64_t sub_186E6B8(uint64_t a1, uint64_t a2)
{
  return sub_1835FB4(a2);
}

uint64_t sub_186E6C0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186E6C8()
{
}

uint64_t sub_186E720(uint64_t a1, uint64_t a2)
{
  return sub_183602C(a2);
}

uint64_t sub_186E728(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

void sub_186E730()
{
}

uint64_t sub_186E784(uint64_t a1, uint64_t a2)
{
  return sub_18360D0(a2);
}

uint64_t sub_186E78C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E794()
{
}

uint64_t sub_186E7E8(uint64_t a1, uint64_t a2)
{
  return sub_1836174(a2);
}

uint64_t sub_186E7F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E7F8()
{
}

uint64_t sub_186E850(uint64_t a1, uint64_t a2)
{
  return sub_1836218(a2);
}

uint64_t sub_186E858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E860()
{
}

uint64_t sub_186E8B0(uint64_t a1, uint64_t a2)
{
  return sub_18362C4(a2);
}

uint64_t sub_186E8B8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

void sub_186E8C0()
{
}

void *sub_186E914(uint64_t a1, uint64_t a2)
{
  return sub_1836358(a2);
}

uint64_t sub_186E91C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E924()
{
}

uint64_t sub_186E978(uint64_t a1, uint64_t a2)
{
  return sub_18363F4(a2);
}

uint64_t sub_186E980(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186E988()
{
}

void *sub_186E9D4(uint64_t a1, uint64_t a2)
{
  return sub_1836494(a2);
}

uint64_t sub_186E9DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186E9E4()
{
}

uint64_t sub_186EA34(uint64_t a1, uint64_t a2)
{
  return sub_183650C(a2);
}

uint64_t sub_186EA3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EA44()
{
}

void *sub_186EA90(uint64_t a1, uint64_t a2)
{
  return sub_1836588(a2);
}

uint64_t sub_186EA98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EAA0()
{
}

uint64_t sub_186EAEC(uint64_t a1, uint64_t a2)
{
  return sub_1836600(a2);
}

uint64_t sub_186EAF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186EAFC()
{
}

void *sub_186EB48(uint64_t a1, uint64_t a2)
{
  return sub_1836678(a2);
}

uint64_t sub_186EB50(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EB58()
{
}

void *sub_186EBA8(uint64_t a1, uint64_t a2)
{
  return sub_18366F0(a2);
}

uint64_t sub_186EBB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EBB8()
{
}

uint64_t sub_186EC0C(uint64_t a1, uint64_t a2)
{
  return sub_183676C(a2);
}

uint64_t sub_186EC14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186EC1C()
{
}

void *sub_186EC70(uint64_t a1, uint64_t a2)
{
  return sub_183680C(a2);
}

uint64_t sub_186EC78(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EC80()
{
}

void *sub_186ECCC(uint64_t a1, uint64_t a2)
{
  return sub_18368A8(a2);
}

uint64_t sub_186ECD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186ECDC()
{
}

uint64_t sub_186ED30(uint64_t a1, uint64_t a2)
{
  return sub_1836920(a2);
}

uint64_t sub_186ED38(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186ED40()
{
}

void *sub_186ED8C(uint64_t a1, uint64_t a2)
{
  return sub_18369C0(a2);
}

uint64_t sub_186ED94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186ED9C()
{
}

uint64_t sub_186EDF0(uint64_t a1, uint64_t a2)
{
  return sub_1836A38(a2);
}

uint64_t sub_186EDF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EE00()
{
}

uint64_t sub_186EE4C(uint64_t a1, uint64_t a2)
{
  return sub_1836ADC(a2);
}

uint64_t sub_186EE54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

void sub_186EE5C()
{
}

void *sub_186EEA8(uint64_t a1, uint64_t a2)
{
  return sub_1836B54(a2);
}

uint64_t sub_186EEB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EEB8()
{
}

void *sub_186EF04(uint64_t a1, uint64_t a2)
{
  return sub_1836BCC(a2);
}

uint64_t sub_186EF0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186EF14()
{
}

void sub_186EF5C()
{
}

void *sub_186EF80(uint64_t a1, uint64_t a2)
{
  return sub_1836C44(a2);
}

uint64_t sub_186EF88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186EF90()
{
}

void sub_186EFD8()
{
}

uint64_t sub_186EFFC(uint64_t a1, uint64_t a2)
{
  return sub_1836CA0(a2);
}

uint64_t sub_186F004(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186F00C()
{
}

void sub_186F054()
{
}

uint64_t sub_186F078(uint64_t a1, uint64_t a2)
{
  return sub_1836CFC(a2);
}

uint64_t sub_186F080(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_186F088()
{
}

uint64_t sub_186F0DC(uint64_t a1, uint64_t a2)
{
  return sub_1836D58(a2);
}

uint64_t sub_186F0E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186F0EC()
{
}

void sub_186F134()
{
}

uint64_t sub_186F158(uint64_t a1, uint64_t a2)
{
  return sub_1836DF8(a2);
}

uint64_t sub_186F160(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

void sub_186F168()
{
}

void sub_186F1B0()
{
}

uint64_t sub_186F1D4(uint64_t a1, uint64_t a2)
{
  return sub_1836E54(a2);
}

uint64_t sub_186F1DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186F1E4()
{
}

void sub_186F22C()
{
}

uint64_t sub_186F250(uint64_t a1, uint64_t a2)
{
  return sub_1836EB0(a2);
}

uint64_t sub_186F258(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

void sub_186F260()
{
}

void sub_186F2A8()
{
}

uint64_t sub_186F2CC(uint64_t a1, uint64_t a2)
{
  return sub_1836F0C(a2);
}

uint64_t sub_186F2D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

void sub_186F2DC()
{
}

void *sub_186F32C(uint64_t a1, uint64_t a2)
{
  return sub_1837524(a2);
}

uint64_t sub_186F334(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

void sub_186F33C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16B7028(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F3BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16BEF24(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F43C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16C0D70(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F4BC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16B6B08(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F53C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16C62B0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F5BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16C8A7C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F63C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16C9C24(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F6BC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16E8C50(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F73C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D2068(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F7BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D1538(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F83C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D38F4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F8BC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D4624(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F93C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16B660C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186F9BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D9068(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FA3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D6BE0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FABC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16D5464(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FB3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16DCD7C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FBBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16DEA90(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FC3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16DF47C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FCBC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16E8730(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FD3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16EAE60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FDBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16F2E38(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FE3C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16F6C74(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FEBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1701A88(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FF3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17484E0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_186FFBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1704DD0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187003C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1707894(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18700BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_170A62C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187013C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_170FB28(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18701BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_162632C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187023C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1625B2C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18702BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1716360(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187033C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1717D98(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18703BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_171747C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187043C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_171EFFC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18704BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_171A51C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187053C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1742F68(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18705BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1747570(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187063C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_15B31C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18706BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1781BA8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187073C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16F9368(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18707BC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1751DA0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187083C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16E340C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18708BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1756B04(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187093C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17590E8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18709BC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1766B44(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870A3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1768AE8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870ABC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_176DB1C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870B3C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_176ED98(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870BBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1777850(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870C3C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17736FC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870CBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1774798(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870D3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_177862C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870DBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17790C4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870E3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_177B52C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870EBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1781134(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870F3C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16EB850(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1870FBC(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1784998(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_187103C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_17861A0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      unint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_18710B8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18710B8(uint64_t a1, std::string *a2)
{
  return sub_16B7874(a2, a1);
}

void sub_18710C8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_17864E0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871144(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871144(uint64_t a1, uint64_t a2)
{
}

void sub_1871154(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1786618(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18711D0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18711D0(uint64_t a1, uint64_t a2)
{
}

std::string *sub_18711E0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1786128(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_187125C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1786A1C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_18712D8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18712D8(uint64_t a1, std::string *a2)
{
  return sub_16C681C(a2, a1);
}

std::string *sub_18712E8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1786C50(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122E2C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1871364(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1786DC8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_18713E0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18713E0(uint64_t a1, std::string *a2)
{
  return sub_16CA340(a2, a1);
}

uint64_t *sub_18713F0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_17884D8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_187146C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_187146C(uint64_t a1, std::string *a2)
{
  return sub_16E93F4(a2, a1);
}

void sub_187147C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_17874D8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18714F8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18714F8(uint64_t a1, uint64_t a2)
{
}

void sub_1871508(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1787428(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871584(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871584(uint64_t a1, uint64_t a2)
{
}

void sub_1871594(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1787534(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871610(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871610(uint64_t a1, uint64_t a2)
{
}

void sub_1871620(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1787590(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_187169C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_187169C(uint64_t a1, std::string *a2)
{
  return sub_16D4F24(a2, a1);
}

std::string *sub_18716AC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_17860B0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1871728(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_17877BC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18717A4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18717A4(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_18717B4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_17876E0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1871830(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1871830(uint64_t a1, std::string *a2)
{
  return sub_16D7274(a2, a1);
}

void sub_1871840(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178760C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18718BC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18718BC(uint64_t a1, uint64_t a2)
{
}

std::string *sub_18718CC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1787B90(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1871948(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1871948(uint64_t a1, std::string *a2)
{
  return sub_11B0BDC(a2, a1);
}

void sub_1871958(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1787CCC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18719D4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18719D4(uint64_t a1, uint64_t a2)
{
}

void sub_18719E4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1787D28(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871A60(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871A60(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1871A70(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1788460(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1871AEC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1788688(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_11DCA10(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1871B68(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1788CA4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871BE4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871BE4(uint64_t a1, uint64_t a2)
{
}

void sub_1871BF4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_17890B0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_16B4734(v11, v13);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1871C70(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1789934(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_124D810(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1871CEC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178B6A4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871D68(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871D68(uint64_t a1, uint64_t a2)
{
}

void sub_1871D78(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1789C3C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871DF4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871DF4(uint64_t a1, uint64_t a2)
{
}

void sub_1871E04(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1789F74(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871E80(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871E80(uint64_t a1, uint64_t a2)
{
}

void sub_1871E90(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178A0F4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871F0C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871F0C(uint64_t a1, uint64_t a2)
{
}

void sub_1871F1C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178A5CC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1871F98(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1871F98(uint64_t a1, uint64_t a2)
{
}

void sub_1871FA8(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1626D70(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1872024(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1872024(uint64_t a1, std::string *a2)
{
  return sub_1626904(a2, a1);
}

void sub_1872034(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1626CF0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_18720B0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_18720B0(uint64_t a1, std::string *a2)
{
  return sub_1625828(a2, a1);
}

std::string *sub_18720C0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_178AEA4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_187213C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_187213C(uint64_t a1, std::string *a2)
{
  return sub_1716A58(a2, a1);
}

uint64_t *sub_187214C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_178B054(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_18721C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18721C8(uint64_t a1, std::string *a2)
{
  return sub_17183D8(a2, a1);
}

std::string *sub_18721D8(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_178AFCC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1872254(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1872254(uint64_t a1, std::string *a2)
{
  return sub_1717C1C(a2, a1);
}

void sub_1872264(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178B3A0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18722E0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18722E0(uint64_t a1, uint64_t a2)
{
}

void sub_18722F0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178B1A8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187236C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187236C(uint64_t a1, uint64_t a2)
{
}

void sub_187237C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178B590(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18723F8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18723F8(uint64_t a1, uint64_t a2)
{
}

void sub_1872408(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178B648(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872484(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872484(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1872494(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_15C1BB4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1872510(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_178EBB0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_187258C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_187258C(uint64_t a1, std::string *a2)
{
  return sub_17827EC(a2, a1);
}

void sub_187259C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1789374(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872618(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872618(uint64_t a1, uint64_t a2)
{
}

void sub_1872628(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_178BF6C(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_18726A4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_18726A4(uint64_t a1, uint64_t a2)
{
}

void sub_18726B4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1788078(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872730(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872730(uint64_t a1, uint64_t a2)
{
}

void sub_1872740(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178C438(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18727BC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18727BC(uint64_t a1, uint64_t a2)
{
}

void sub_18727CC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178C60C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872848(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872848(uint64_t a1, uint64_t a2)
{
}

void sub_1872858(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178D0A8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18728D4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18728D4(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_18728E4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_178D1FC(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1872960(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1872960(uint64_t a1, std::string *a2)
{
  return sub_1769244(a2, a1);
}

uint64_t *sub_1872970(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_178D6D4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_18729EC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18729EC(uint64_t a1, std::string *a2)
{
  return sub_176E344(a2, a1);
}

std::string *sub_18729FC(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_178D870(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11DC498(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1872A78(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_178E0E8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1872AF4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1872AF4(uint64_t a1, std::string *a2)
{
  return sub_177806C(a2, a1);
}

void sub_1872B04(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178DD98(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872B80(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872B80(uint64_t a1, uint64_t a2)
{
}

void sub_1872B90(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178DDF4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872C0C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872C0C(uint64_t a1, uint64_t a2)
{
}

void sub_1872C1C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178E1EC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872C98(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872C98(uint64_t a1, uint64_t a2)
{
}

void sub_1872CA8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178E248(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872D24(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872D24(uint64_t a1, uint64_t a2)
{
}

void sub_1872D34(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178E3B4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872DB0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872DB0(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1872DC0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_178EAB4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B1A4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1872E3C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1788710(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872EB8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872EB8(uint64_t a1, uint64_t a2)
{
}

void sub_1872EC8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_178EF40(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1872F44(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1872F44(uint64_t a1, uint64_t a2)
{
}

void sub_1872F54()
{
}

void sub_1872F9C()
{
}

void sub_1872FC0()
{
}

void sub_1873008()
{
}

void sub_187302C()
{
}

void sub_1873074()
{
}

void sub_1873098()
{
}

void sub_18730E0()
{
}

void sub_1873104()
{
}

void sub_187314C()
{
}

void sub_1873170()
{
}

void sub_18731B8()
{
}

void sub_18731DC()
{
}

void sub_1873224()
{
}

void sub_1873248()
{
}

void sub_1873290()
{
}

void sub_18732B4()
{
}

void sub_18732FC()
{
}

void sub_1873320()
{
}

void sub_1873368()
{
}

void sub_187338C()
{
}

void sub_18733D4()
{
}

void sub_18733F8()
{
}

void sub_1873440()
{
}

void sub_1873464()
{
}

void sub_18734AC()
{
}

void sub_18734D0()
{
}

void sub_1873518()
{
}

void sub_187353C()
{
}

void sub_1873584()
{
}

void sub_18735A8()
{
}

void sub_18735F0()
{
}

void sub_1873614()
{
}

void sub_187365C()
{
}

void sub_1873680()
{
}

void sub_18736C8()
{
}

void sub_18736EC()
{
}

void sub_1873734()
{
}

void sub_1873758()
{
}

void sub_18737A0()
{
}

void sub_18737C4()
{
}

void sub_187380C()
{
}

void sub_1873830()
{
}

void sub_1873878()
{
}

void sub_187389C()
{
}

void sub_18738E4()
{
}

void sub_1873908()
{
}

void sub_1873950()
{
}

void sub_1873974()
{
}

void sub_18739BC()
{
}

void sub_18739E0()
{
}

void sub_1873A28()
{
}

void sub_1873A4C()
{
}

void sub_1873A94()
{
}

void sub_1873AB8()
{
}

void sub_1873B00()
{
}

void sub_1873B24()
{
}

void sub_1873B6C()
{
}

void sub_1873B90()
{
}

void sub_1873BD8()
{
}

void sub_1873BFC()
{
}

void sub_1873C44()
{
}

void sub_1873C68()
{
}

void sub_1873CB0()
{
}

void sub_1873CD4()
{
}

void sub_1873D1C()
{
}

void sub_1873D40()
{
}

void sub_1873D88()
{
}

void sub_1873DAC()
{
}

void sub_1873DF4()
{
}

void sub_1873E18()
{
}

void sub_1873E60()
{
}

void sub_1873E84()
{
}

void sub_1873ECC()
{
}

void sub_1873EF0()
{
}

void sub_1873F38()
{
}

void sub_1873F5C()
{
}

void sub_1873FA4()
{
}

void sub_1873FC8()
{
}

void sub_1874010()
{
}

void sub_1874034()
{
}

void sub_187407C()
{
}

void sub_18740A0()
{
}

void sub_18740E8()
{
}

void sub_187410C()
{
}

void sub_1874154()
{
}

void sub_1874178()
{
}

void sub_18741C0()
{
}

void sub_18741E4()
{
}

void sub_187422C()
{
}

void sub_1874250()
{
}

void sub_1874298()
{
}

void sub_18742BC()
{
}

void sub_1874304()
{
}

void sub_1874328()
{
}

void sub_1874370()
{
}

void sub_1874394()
{
}

void sub_18743DC()
{
}

void sub_1874400()
{
}

void sub_1874448()
{
}

void sub_187446C()
{
}

void sub_18744B4()
{
}

void sub_18744D8()
{
}

void sub_1874520()
{
}

void sub_1874544()
{
}

void sub_187458C()
{
}

void sub_18745B0()
{
}

void sub_18745F8()
{
}

void sub_187461C()
{
}

void sub_1874664()
{
}

void sub_1874688()
{
}

void sub_18746D0()
{
}

void sub_18746F4()
{
}

void sub_187473C()
{
}

void sub_1874760()
{
}

void sub_18747A8()
{
}

void sub_18747CC()
{
}

void sub_1874814()
{
}

void sub_1874838()
{
}

void sub_1874880()
{
}

void sub_18748A4()
{
}

void sub_18748EC()
{
}

void sub_1874910()
{
}

void sub_1874958()
{
}

void sub_187497C()
{
}

void sub_18749C4()
{
}

void sub_18749E8()
{
}

void sub_1874A30()
{
}

void sub_1874A54()
{
}

void sub_1874A9C()
{
}

void sub_1874AC0()
{
}

void sub_1874B08()
{
}

void sub_1874B2C()
{
}

void sub_1874B74()
{
}

void sub_1874B98()
{
}

void sub_1874BE0()
{
}

void sub_1874C04()
{
}

void sub_1874C4C()
{
}

void sub_1874C70()
{
}

void sub_1874CB8()
{
}

void sub_1874CDC()
{
}

void sub_1874D24()
{
}

void sub_1874D48()
{
}

void sub_1874D90()
{
}

void sub_1874DB4()
{
}

void sub_1874DFC()
{
}

void sub_1874E20()
{
}

void sub_1874E68()
{
}

void sub_1874E8C()
{
}

void sub_1874ED4()
{
}

void sub_1874EF8()
{
}

void sub_1874F40()
{
}

void sub_1874F64()
{
}

void sub_1874FAC()
{
}

void sub_1874FD0()
{
}

void sub_1875018()
{
}

void sub_187503C()
{
}

void sub_1875084()
{
}

void sub_18750A8()
{
}

void sub_18750F0()
{
}

void sub_1875114()
{
}

void sub_187515C()
{
}

void sub_1875180()
{
}

void sub_18751C8()
{
}

void sub_18751EC()
{
}

void sub_1875234()
{
}

void sub_1875258()
{
}

void sub_18752A0()
{
}

void sub_18752C4()
{
}

void sub_187530C()
{
}

void sub_1875330()
{
}

void sub_1875378()
{
}

void sub_187539C()
{
}

void sub_18753E4()
{
}

void sub_1875408()
{
}

void sub_1875450()
{
}

void sub_1875474()
{
}

void sub_18754BC()
{
}

void sub_18754E0()
{
}

void sub_1875528()
{
}

void sub_187554C()
{
}

void sub_1875594()
{
}

void sub_18755B8()
{
}

void sub_1875600()
{
}

void sub_1875624()
{
}

void sub_187566C()
{
}

void sub_1875690()
{
}

void sub_18756D8()
{
}

void sub_18756FC()
{
}

void sub_1875744()
{
}

void sub_1875768()
{
}

void sub_18757B0()
{
}

void sub_18757D4()
{
}

void sub_187581C()
{
}

void sub_1875840()
{
}

void sub_1875888()
{
}

void sub_18758AC()
{
}

void sub_18758F4()
{
}

void sub_1875918()
{
}

void sub_1875960()
{
}

void sub_1875984()
{
}

void sub_18759CC()
{
}

void sub_18759F0()
{
}

void sub_1875A38()
{
}

void sub_1875A5C()
{
}

void sub_1875AA4()
{
}

void sub_1875AC8()
{
}

void sub_1875B10()
{
}

void sub_1875B34()
{
}

void sub_1875B7C()
{
}

void sub_1875BA0()
{
}

void sub_1875BE8()
{
}

void sub_1875C0C()
{
}

void sub_1875C54()
{
}

void sub_1875C78()
{
}

void sub_1875CC0()
{
}

void sub_1875CE4()
{
}

void sub_1875D2C()
{
}

void sub_1875D50()
{
}

void sub_1875D98()
{
}

void sub_1875DBC()
{
}

void sub_1875E04()
{
}

void sub_1875E28()
{
}

void sub_1875E70()
{
}

void sub_1875E94()
{
}

void sub_1875EDC()
{
}

void sub_1875F00()
{
}

void sub_1875F48()
{
}

void sub_1875F6C()
{
}

void sub_1875FB4()
{
}

void sub_1875FD8()
{
}

void sub_1876020()
{
}

void sub_1876044()
{
}

void sub_187608C()
{
}

void sub_18760B0()
{
}

void sub_18760F8()
{
}

void sub_187611C()
{
}

void sub_1876164()
{
}

void sub_1876188()
{
}

void sub_18761D0()
{
}

void sub_18761F4()
{
}

void sub_187623C()
{
}

void sub_1876260()
{
}

void sub_18762A8()
{
}

void sub_18762CC()
{
}

void sub_1876314()
{
}

void sub_1876338()
{
}

void sub_1876380()
{
}

void sub_18763A4()
{
}

void sub_18763EC()
{
}

void sub_1876410()
{
}

void sub_1876458()
{
}

void sub_187647C()
{
}

void sub_18764C4()
{
}

void sub_18764E8()
{
}

void sub_1876530()
{
}

void sub_1876554()
{
}

void sub_187659C()
{
}

void sub_18765C0()
{
}

void sub_1876608()
{
}

void sub_187662C()
{
}

void sub_1876674()
{
}

void sub_1876698()
{
}

void sub_18766E0()
{
}

void sub_1876704()
{
}

void sub_187674C()
{
}

void sub_1876770()
{
}

void sub_18767B8()
{
}

void sub_18767DC()
{
}

void sub_1876824()
{
}

void sub_1876848()
{
}

void sub_1876890()
{
}

void sub_18768B4()
{
}

void sub_18768FC()
{
}

void sub_1876920()
{
}

void sub_1876968()
{
}

void sub_187698C()
{
}

void sub_18769D4()
{
}

void sub_18769F8()
{
}

void sub_1876A40()
{
}

void sub_1876A64()
{
}

void sub_1876AAC()
{
}

void sub_1876AD0()
{
}

void sub_1876B18()
{
}

void sub_1876B3C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_178F184(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1876BBC(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_178F91C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1876C3C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_178FE6C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1876CBC(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1791234(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1876D38(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1876D38(uint64_t a1, std::string *a2)
{
  return sub_1701678(a2, a1);
}

uint64_t *sub_1876D48(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_17912C0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1876DC4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1876DC4(uint64_t a1, std::string *a2)
{
  return sub_178FDF0(a2, a1);
}

uint64_t *sub_1876DD4(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_179133C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1876E50(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1876E50(uint64_t a1, std::string *a2)
{
  return sub_15374C8(a2, a1);
}

void sub_1876E60()
{
}

void sub_1876EA8()
{
}

void sub_1876ECC()
{
}

void sub_1876F14()
{
}

void sub_1876F38(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12B84E0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1876FB8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17928A0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877038(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_12A17E0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18770B8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1793F3C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877138(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_179A4C4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18771B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1296FC0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877238(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1703DA0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18772B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17A83B4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877338(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17AB208(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18773B8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17AD8BC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877438(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17B019C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18774B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17B1A30(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877538(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17B45C8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18775B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17B69D4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877638(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17BBD58(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18776B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17BC424(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877738(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17BDBD8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18777B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17C01F8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877838(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17C33BC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18778B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17C4A6C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877938(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17CD928(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18779B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17CDE54(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877A38(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17E4518(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877AB8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17E3A74(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877B38(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1624464(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877BB8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_162509C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877C38(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_17F0450(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877CB8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1804CF0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877D38(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1805A50(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877DB8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1806AB0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877E38(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_18084EC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877EB8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1808E50(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877F38(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16CB9B0(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1877FB8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16CCC8C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1878038(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16CD900(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18780B8(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16CE568(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1878138(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_180D69C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18781B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_180E06C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1878238(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_171C28C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18782B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1812738(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1878338(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1814004(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18783B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1814C88(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1878438(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_16F5B20(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_18784B8(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_174162C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_1878538(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_175FC24(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t *sub_18785B8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_12BCF44(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1878634(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1878634(uint64_t a1, std::string *a2)
{
  return sub_11A7934(a2, a1);
}

uint64_t *sub_1878644(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1830344(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1876E50(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18786C0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_12BBBC8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_122B604(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_187873C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1830494(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18787B8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18787B8(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_18787C8(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1830650(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1878844(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1878844(uint64_t a1, std::string *a2)
{
  return sub_179AB94(a2, a1);
}

void sub_1878854(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_129E4E4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18788D0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18788D0(uint64_t a1, uint64_t a2)
{
}

void sub_18788E0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1789B90(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_187895C(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_187895C(uint64_t a1, uint64_t a2)
{
}

void sub_187896C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1830F3C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18789E8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18789E8(uint64_t a1, uint64_t a2)
{
}

void sub_18789F8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_18311D0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1878A74(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1878A74(uint64_t a1, uint64_t a2)
{
}

void sub_1878A84(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_18313A4(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1878B00(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1878B00(uint64_t a1, uint64_t a2)
{
}

void sub_1878B10(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_18315D8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1878B8C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1878B8C(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1878B9C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1831790(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1878C18(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1878C18(uint64_t a1, std::string *a2)
{
  return sub_17B22D4(a2, a1);
}

void sub_1878C28(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_18319A0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1878CA4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1878CA4(uint64_t a1, uint64_t a2)
{
}

void sub_1878CB4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1831B74(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1878D30(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1878D30(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1878D40(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_183204C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1492370(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_1878DBC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_18320D0(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1878E38(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1878E38(uint64_t a1, std::string *a2)
{
  return sub_17BD444(a2, a1);
}

void sub_1878E48(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1832214(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1878EC4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

std::string *sub_1878EC4(uint64_t a1, std::string *a2)
{
  return sub_17BF614(a2, a1);
}

void sub_1878ED4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1832398(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1878F50(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1878F50(uint64_t a1, uint64_t a2)
{
}

std::string *sub_1878F60(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1832680(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_12C32C0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_1878FDC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1832834(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879058(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879058(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1879068(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1832B38(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1301598(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

void sub_18790E4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1832BB4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879160(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879160(uint64_t a1, uint64_t a2)
{
}

uint64_t *sub_1879170(uint64_t *result, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1833E98(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_18791EC(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_18791EC(uint64_t a1, uint64_t a2)
{
  return sub_17E4E20(a2, a1);
}

uint64_t *sub_18791FC(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1833DF4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_12C2F98(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1879278(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1626B70(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_18792F4(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18792F4(uint64_t a1, std::string *a2)
{
  return sub_1624A58(a2, a1);
}

void sub_1879304(uint64_t *a1, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1626C70(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_18720B0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1879380(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_18349A8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18793FC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18793FC(uint64_t a1, uint64_t a2)
{
}

std::string *sub_187940C(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1835754(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_1879488(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1879488(uint64_t a1, std::string *a2)
{
  return sub_18057FC(a2, a1);
}

uint64_t *sub_1879498(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_18357E4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_1879514(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_1879514(uint64_t a1, std::string *a2)
{
  return sub_180687C(a2, a1);
}

uint64_t *sub_1879524(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_18358B4(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_18795A0(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_18795A0(uint64_t a1, std::string *a2)
{
  return sub_1807184(a2, a1);
}

uint64_t *sub_18795B0(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1835AE8(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_187962C(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_187962C(uint64_t a1, std::string *a2)
{
  return sub_1808D48(a2, a1);
}

void sub_187963C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1835B70(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_18796B8(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_18796B8(uint64_t a1, uint64_t a2)
{
}

void sub_18796C8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1787024(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1879744(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1879744(uint64_t a1, uint64_t a2)
{
}

void sub_1879754(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_17870E8(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_18797D0(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_18797D0(uint64_t a1, uint64_t a2)
{
}

void sub_18797E0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1787190(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187985C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187985C(uint64_t a1, uint64_t a2)
{
}

void sub_187986C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1787230(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_18798E8(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_18798E8(uint64_t a1, uint64_t a2)
{
}

void sub_18798F8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_18360D0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879974(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879974(uint64_t a1, uint64_t a2)
{
}

void sub_1879984(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1836174(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879A00(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879A00(uint64_t a1, uint64_t a2)
{
}

void sub_1879A10(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_178B2E8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879A8C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879A8C(uint64_t a1, uint64_t a2)
{
}

void sub_1879A9C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_18366F0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879B18(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879B18(uint64_t a1, uint64_t a2)
{
}

void sub_1879B28(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_18368A8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879BA4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879BA4(uint64_t a1, uint64_t a2)
{
}

void sub_1879BB4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_18369C0(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879BA4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879C30(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1788FDC(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_1879CAC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_1879CAC(uint64_t a1, uint64_t a2)
{
}

void sub_1879CBC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_178B4B4(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1879D38(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1879D38(uint64_t a1, uint64_t a2)
{
}

void sub_1879D48(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_178CB40(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_1879DC4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_1879DC4(uint64_t a1, uint64_t a2)
{
}

void sub_1879DD4()
{
}

void sub_1879E1C()
{
}

void sub_1879E40()
{
}

void sub_1879E88()
{
}

void sub_1879EAC()
{
}

void sub_1879EF4()
{
}

void sub_1879F18()
{
}

void sub_1879F60()
{
}

void sub_1879F84()
{
}

void sub_1879FCC()
{
}

void sub_1879FF0()
{
}

void sub_187A038()
{
}

void sub_187A05C()
{
}

void sub_187A0A4()
{
}

void sub_187A0C8()
{
}

void sub_187A110()
{
}

void sub_187A134()
{
}

void sub_187A17C()
{
}

void sub_187A1A0()
{
}

void sub_187A1E8()
{
}

void sub_187A20C()
{
}

void sub_187A254()
{
}

void sub_187A278()
{
}

void sub_187A2C0()
{
}

void sub_187A2E4()
{
}

void sub_187A32C()
{
}

void sub_187A350()
{
}

void sub_187A398()
{
}

void sub_187A3BC()
{
}

void sub_187A404()
{
}

void sub_187A428()
{
}

void sub_187A49C()
{
}

void sub_187A510()
{
}

void sub_187A558()
{
}

void sub_187A57C()
{
}

void sub_187A5C4()
{
}

void sub_187A5E8()
{
}

void sub_187A630()
{
}

void sub_187A654()
{
}

void sub_187A69C()
{
}

void sub_187A6C0()
{
}

void sub_187A708()
{
}

void sub_187A72C()
{
}

void sub_187A774()
{
}

void sub_187A798()
{
}

void sub_187A7E0()
{
}

void sub_187A804()
{
}

void sub_187A84C()
{
}

void sub_187A870()
{
}

void sub_187A8B8()
{
}

void sub_187A8DC()
{
}

void sub_187A924()
{
}

void sub_187A948()
{
}

void sub_187A990()
{
}

void sub_187A9B4()
{
}

void sub_187A9FC()
{
}

void sub_187AA20(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_183A458(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187AAA0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_145FE08();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187AB20(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_183FAC4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187ABA0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1846078(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187AC20(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_18450AC(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187ACA0(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_183ADA4(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187AD20(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1846CF8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187ADA0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_184780C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187AE20(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1849128(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187AE9C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187AE9C(uint64_t a1, uint64_t a2)
{
}

void sub_187AEAC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1478C60(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187AF28(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187AF28(uint64_t a1, uint64_t a2)
{
}

void sub_187AF38(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      sub_1849BE0(v9);
      *v10++ = v11;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v13 = *a3++;
      uint64_t v12 = v13;
      uint64_t v14 = *v7++;
      sub_187AFB4(v12, v14);
      --v5;
    }
    while (v5);
  }
}

void sub_187AFB4(uint64_t a1, uint64_t a2)
{
}

void sub_187AFC4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1849DC8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187B040(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187B040(uint64_t a1, uint64_t a2)
{
}

void sub_187B050(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1849C88(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187B0CC(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187B0CC(uint64_t a1, uint64_t a2)
{
}

void sub_187B0DC(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_18491A8(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187B158(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187B158(uint64_t a1, uint64_t a2)
{
}

void sub_187B168(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_1849E6C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187B1E4(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187B1E4(uint64_t a1, uint64_t a2)
{
}

void sub_187B1F4(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1849F10(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187B270(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187B270(uint64_t a1, uint64_t a2)
{
}

void sub_187B280()
{
}

void sub_187B2C8()
{
}

void sub_187B2EC()
{
}

void sub_187B364()
{
}

void sub_187B3AC()
{
}

void sub_187B3D0(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (void **)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1850A60(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187B450(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1853B50(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

std::string *sub_187B4D0(std::string *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = result->__r_.__value_.__r.__words[0];
    uint64_t v10 = &a2[a5];
    do
    {
      uint64_t result = (std::string *)sub_1854C48(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = sub_11131F8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t *sub_187B54C(uint64_t *result, std::string **a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *result;
    uint64_t v10 = (uint64_t **)&a2[a5];
    do
    {
      uint64_t result = (uint64_t *)sub_1854F6C(v9);
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      uint64_t result = (uint64_t *)sub_187B5C8(v11, v13);
      --v5;
    }
    while (v5);
  }
  return result;
}

std::string *sub_187B5C8(uint64_t a1, std::string *a2)
{
  return sub_1854110(a2, a1);
}

void sub_187B5D8()
{
}

void sub_187B620()
{
}

void sub_187B644()
{
}

void sub_187B68C()
{
}

void sub_187B6B0()
{
}

void sub_187B6F8()
{
}

void sub_187B71C(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_1362774();
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187B79C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_18570A8(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187B81C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_185C73C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187B89C(void *a1)
{
  uint64_t v2 = (uint64_t *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 1;
    uint64_t v4 = *(unsigned int *)v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3)
        {
          sub_185DA8C(*v3);
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (uint64_t *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

void sub_187B91C(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_1363A48(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187B998(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187B998(uint64_t a1, uint64_t a2)
{
}

void sub_187B9A8(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_185F404(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187BA24(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187BA24(uint64_t a1, uint64_t a2)
{
}

void sub_187BA34(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = (uint64_t)sub_185F6A4(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187BAB0(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187BAB0(uint64_t a1, uint64_t a2)
{
}

void sub_187BAC0(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  uint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    uint64_t v9 = *a1;
    uint64_t v10 = &a2[a5];
    do
    {
      *v10++ = sub_185F75C(v9);
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      uint64_t v12 = *a3++;
      uint64_t v11 = v12;
      uint64_t v13 = *v7++;
      sub_187BB3C(v11, v13);
      --v5;
    }
    while (v5);
  }
}

void sub_187BB3C(uint64_t a1, uint64_t a2)
{
}

void sub_187BB4C()
{
}

void sub_187BB94()
{
}

void sub_187BBB8()
{
}

void sub_187BC00()
{
}

void sub_187BC24()
{
}

void sub_187BC6C()
{
}

void sub_187BC90()
{
}

void sub_187BCD8()
{
}

void sub_187BCFC()
{
}

void sub_187BD44()
{
}

void sub_187BD68()
{
}

void sub_187BDB0()
{
}

void sub_187BDD4()
{
}

void sub_187BE1C()
{
}

void sub_187BE40()
{
}

void sub_187BE88()
{
}

void sub_187BEAC()
{
}

void sub_187BEF4()
{
}

void sub_187BF18()
{
}

void sub_187BF60()
{
}

void sub_187BF84()
{
}

void sub_187BFCC()
{
}

void sub_187BFF0()
{
}

void sub_187C038()
{
}

void sub_187C05C()
{
}

void sub_187C0A4()
{
}

void sub_187C0C8()
{
  dword_25501E0 = 500;
  byte_25501E4 = 0;
  sub_1882224((unint64_t)&off_25393B0, 500, 8, 0, 0);
  dword_25501E8 = 500;
  qword_25501F0 = (uint64_t)&off_25486C0;
  sub_1882AC4((unint64_t)&off_2539B90, 500, 11, 1, 0, (uint64_t)&off_25486C0);
  dword_25501F8 = 1000;
  byte_25501FC = 0;
  sub_1882224((unint64_t)&off_254CA18, 1000, 8, 0, 0);
  dword_2550200 = 1001;
  qword_2550208 = (uint64_t)&unk_216FBC0;
  sub_1882224((unint64_t)&off_254CA18, 1001, 12, 0, 0);
  dword_2550210 = 1000;
  qword_2550218 = 0;
  sub_1882224((unint64_t)&off_254CB28, 1000, 4, 0, 0);
  dword_2550220 = 200;
  qword_2550228 = (uint64_t)&off_254CC00;

  sub_1882AC4((unint64_t)&off_254AF08, 200, 11, 1, 0, (uint64_t)&off_254CC00);
}

uint64_t sub_187C220()
{
  qword_261F4C8 = (uint64_t)"TERRITORY_TYPE_COASTAL_WATERTERRITORY_TYPE_COUNTRYTERRITORY_TYPE_DISPUTED_AREATERRITORY_TYPE_UNKNOWN";
  unk_261F4D0 = 28;
  dword_261F4D8 = 3;
  qword_261F4E0 = (uint64_t)"TERRITORY_TYPE_COUNTRYTERRITORY_TYPE_DISPUTED_AREATERRITORY_TYPE_UNKNOWN";
  unk_261F4E8 = 22;
  dword_261F4F0 = 1;
  qword_261F4F8 = (uint64_t)"TERRITORY_TYPE_DISPUTED_AREATERRITORY_TYPE_UNKNOWN";
  unk_261F500 = 28;
  dword_261F508 = 2;
  qword_261F510 = (uint64_t)"TERRITORY_TYPE_UNKNOWN";
  unk_261F518 = 22;
  dword_261F520 = 0;
  qword_261F528 = (uint64_t)"PLACE_DISPLAY_STYLE_FULLPLACE_DISPLAY_STYLE_SHORTPLACE_DISPLAY_STYLE_UNKNOWN";
  unk_261F530 = 24;
  dword_261F538 = 1;
  qword_261F540 = (uint64_t)"PLACE_DISPLAY_STYLE_SHORTPLACE_DISPLAY_STYLE_UNKNOWN";
  unk_261F548 = 25;
  dword_261F550 = 2;
  qword_261F558 = (uint64_t)"PLACE_DISPLAY_STYLE_UNKNOWN";
  unk_261F560 = 27;
  dword_261F568 = 0;
  qword_261F570 = (uint64_t)"PLACE_SEARCH_SECTION_BUSINESSPLACE_SEARCH_SECTION_MAPSPLACE_SEARCH_SECTION_UNKNOWN";
  *(void *)algn_261F578 = 29;
  dword_261F580 = 2;
  qword_261F588 = (uint64_t)"PLACE_SEARCH_SECTION_MAPSPLACE_SEARCH_SECTION_UNKNOWN";
  unk_261F590 = 25;
  dword_261F598 = 1;
  qword_261F5A0 = (uint64_t)"PLACE_SEARCH_SECTION_UNKNOWN";
  unk_261F5A8 = 28;
  dword_261F5B0 = 0;
  qword_261F5B8 = (uint64_t)"ADDRESSBRANDBUSINESSREGIONTRANSITUNKNOWN";
  unk_261F5C0 = 7;
  dword_261F5C8 = 3;
  qword_261F5D0 = (uint64_t)"BRANDBUSINESSREGIONTRANSITUNKNOWN";
  unk_261F5D8 = 5;
  dword_261F5E0 = 5;
  qword_261F5E8 = (uint64_t)"BUSINESSREGIONTRANSITUNKNOWN";
  unk_261F5F0 = 8;
  dword_261F5F8 = 1;
  qword_261F600 = (uint64_t)"REGIONTRANSITUNKNOWN";
  unk_261F608 = 6;
  dword_261F610 = 2;
  qword_261F618 = (uint64_t)"TRANSITUNKNOWN";
  unk_261F620 = 7;
  dword_261F628 = 4;
  qword_261F630 = (uint64_t)"UNKNOWN";
  unk_261F638 = 7;
  dword_261F640 = 0;
  qword_261F648 = (uint64_t)"PHOTO_ITEM_TYPE_BLUR_PUNCHOUTPHOTO_ITEM_TYPE_PHOTOPHOTO_ITEM_TYPE_SOLID_PUNCHOUTPHOTO_ITEM_TYPE_UNKNOWN";
  unk_261F650 = 29;
  dword_261F658 = 2;
  qword_261F660 = (uint64_t)"PHOTO_ITEM_TYPE_PHOTOPHOTO_ITEM_TYPE_SOLID_PUNCHOUTPHOTO_ITEM_TYPE_UNKNOWN";
  unk_261F668 = 21;
  dword_261F670 = 1;
  qword_261F678 = (uint64_t)"PHOTO_ITEM_TYPE_SOLID_PUNCHOUTPHOTO_ITEM_TYPE_UNKNOWN";
  unk_261F680 = 30;
  dword_261F688 = 3;
  qword_261F690 = (uint64_t)"PHOTO_ITEM_TYPE_UNKNOWN";
  unk_261F698 = 23;
  dword_261F6A0 = 0;
  qword_261F6A8 = (uint64_t)"ANNOTATED_ITEM_STYLE_RESTAURANT_MENUANNOTATED_ITEM_STYLE_UNKNOWN";
  unk_261F6B0 = 36;
  dword_261F6B8 = 1;
  qword_261F6C0 = (uint64_t)"ANNOTATED_ITEM_STYLE_UNKNOWN";
  unk_261F6C8 = 28;
  dword_261F6D0 = 0;
  qword_261F6D8 = (uint64_t)"RESTAURANT_RESERVATION_TYPE_QUEUINGRESTAURANT_RESERVATION_TYPE_RESERVATIONRESTAURANT_RESERVAT"
                           "ION_TYPE_UNKNOWN";
  unk_261F6E0 = 35;
  dword_261F6E8 = 2;
  qword_261F6F0 = (uint64_t)"RESTAURANT_RESERVATION_TYPE_RESERVATIONRESTAURANT_RESERVATION_TYPE_UNKNOWN";
  unk_261F6F8 = 39;
  dword_261F700 = 1;
  qword_261F708 = (uint64_t)"RESTAURANT_RESERVATION_TYPE_UNKNOWN";
  unk_261F710 = 35;
  dword_261F718 = 0;
  qword_261F720 = (uint64_t)"DELAYSON_TIMESCHEDULEDUNKNOWN";
  *(void *)algn_261F728 = 6;
  dword_261F730 = 3;
  qword_261F738 = (uint64_t)"ON_TIMESCHEDULEDUNKNOWN";
  unk_261F740 = 7;
  dword_261F748 = 2;
  qword_261F750 = (uint64_t)"SCHEDULEDUNKNOWN";
  unk_261F758 = 9;
  dword_261F760 = 1;
  qword_261F768 = (uint64_t)"UNKNOWN";
  unk_261F770 = 7;
  dword_261F778 = 0;
  qword_261F780 = (uint64_t)"TRANSIT_POI_HALLTRANSIT_POI_LINETRANSIT_POI_STATIONTRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  *(void *)algn_261F788 = 16;
  dword_261F790 = 2;
  qword_261F798 = (uint64_t)"TRANSIT_POI_LINETRANSIT_POI_STATIONTRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  unk_261F7A0 = 16;
  dword_261F7A8 = 4;
  qword_261F7B0 = (uint64_t)"TRANSIT_POI_STATIONTRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  unk_261F7B8 = 19;
  dword_261F7C0 = 1;
  qword_261F7C8 = (uint64_t)"TRANSIT_POI_STOPTRANSIT_POI_UNKNOWN";
  unk_261F7D0 = 16;
  dword_261F7D8 = 3;
  qword_261F7E0 = (uint64_t)"TRANSIT_POI_UNKNOWN";
  unk_261F7E8 = 19;
  dword_261F7F0 = 0;
  qword_261F7F8 = (uint64_t)"TRANSIT_LABEL_TYPE_ARTWORKTRANSIT_LABEL_TYPE_SEPARATORTRANSIT_LABEL_TYPE_SHIELDTRANSIT_LABEL_"
                           "TYPE_STRINGTRANSIT_LABEL_TYPE_UNKNOWN";
  unk_261F800 = 26;
  dword_261F808 = 3;
  qword_261F810 = (uint64_t)"TRANSIT_LABEL_TYPE_SEPARATORTRANSIT_LABEL_TYPE_SHIELDTRANSIT_LABEL_TYPE_STRINGTRANSIT_LABEL_TYPE_UNKNOWN";
  unk_261F818 = 28;
  dword_261F820 = 4;
  qword_261F828 = (uint64_t)"TRANSIT_LABEL_TYPE_SHIELDTRANSIT_LABEL_TYPE_STRINGTRANSIT_LABEL_TYPE_UNKNOWN";
  unk_261F830 = 25;
  dword_261F838 = 2;
  qword_261F840 = (uint64_t)"TRANSIT_LABEL_TYPE_STRINGTRANSIT_LABEL_TYPE_UNKNOWN";
  unk_261F848 = 25;
  dword_261F850 = 1;
  qword_261F858 = (uint64_t)"TRANSIT_LABEL_TYPE_UNKNOWN";
  unk_261F860 = 26;
  dword_261F868 = 0;
  qword_261F870 = (uint64_t)"HALLLINE_LOCALIZED_TRANSIT_TYPESTATIONSTOPUNKNOWN";
  *(void *)algn_261F878 = 4;
  dword_261F880 = 2;
  qword_261F888 = (uint64_t)"LINE_LOCALIZED_TRANSIT_TYPESTATIONSTOPUNKNOWN";
  unk_261F890 = 27;
  dword_261F898 = 4;
  qword_261F8A0 = (uint64_t)"STATIONSTOPUNKNOWN";
  unk_261F8A8 = 7;
  dword_261F8B0 = 1;
  qword_261F8B8 = (uint64_t)"STOPUNKNOWN";
  unk_261F8C0 = 4;
  dword_261F8C8 = 3;
  qword_261F8D0 = (uint64_t)"UNKNOWN";
  unk_261F8D8 = 7;
  dword_261F8E0 = 0;
  qword_261F8E8 = (uint64_t)"APPLE_RATINGPRICE_RANGEQUALITY_RATINGUNKNOWNUSER_RATING";
  unk_261F8F0 = 12;
  dword_261F8F8 = 4;
  qword_261F900 = (uint64_t)"PRICE_RANGEQUALITY_RATINGUNKNOWNUSER_RATING";
  unk_261F908 = 11;
  dword_261F910 = 3;
  qword_261F918 = (uint64_t)"QUALITY_RATINGUNKNOWNUSER_RATING";
  unk_261F920 = 14;
  dword_261F928 = 2;
  qword_261F930 = (uint64_t)"UNKNOWNUSER_RATING";
  unk_261F938 = 7;
  dword_261F940 = 0;
  qword_261F948 = (uint64_t)"USER_RATING";
  unk_261F950 = 11;
  dword_261F958 = 1;
  qword_261F960 = (uint64_t)"EVERYDAYFRIDAYMONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  *(void *)algn_261F968 = 8;
  dword_261F970 = 0;
  qword_261F978 = (uint64_t)"FRIDAYMONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  qword_261F980 = 6;
  dword_261F988 = 6;
  qword_261F990 = (uint64_t)"MONDAYSATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_261F998 = 6;
  dword_261F9A0 = 2;
  qword_261F9A8 = (uint64_t)"SATURDAYSUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_261F9B0 = 8;
  dword_261F9B8 = 7;
  qword_261F9C0 = (uint64_t)"SUNDAYTHURSDAYTUESDAYWEDNESDAY";
  unk_261F9C8 = 6;
  dword_261F9D0 = 1;
  qword_261F9D8 = (uint64_t)"THURSDAYTUESDAYWEDNESDAY";
  unk_261F9E0 = 8;
  dword_261F9E8 = 5;
  qword_261F9F0 = (uint64_t)"TUESDAYWEDNESDAY";
  unk_261F9F8 = 7;
  dword_261FA00 = 3;
  qword_261FA08 = (uint64_t)"WEDNESDAY";
  unk_261FA10 = 9;
  dword_261FA18 = 4;
  qword_261FA20 = (uint64_t)"URL_TYPE_AMP_TEMPLATEURL_TYPE_REGULAR";
  *(void *)algn_261FA28 = 21;
  dword_261FA30 = 1;
  qword_261FA38 = (uint64_t)"URL_TYPE_REGULAR";
  unk_261FA40 = 16;
  dword_261FA48 = 0;
  qword_261FA50 = (uint64_t)"ICON_TYPE_AVATARICON_TYPE_HEROICON_TYPE_NAVBARICON_TYPE_UNKNOWN";
  *(void *)algn_261FA58 = 16;
  dword_261FA60 = 1;
  qword_261FA68 = (uint64_t)"ICON_TYPE_HEROICON_TYPE_NAVBARICON_TYPE_UNKNOWN";
  unk_261FA70 = 14;
  dword_261FA78 = 3;
  qword_261FA80 = (uint64_t)"ICON_TYPE_NAVBARICON_TYPE_UNKNOWN";
  unk_261FA88 = 16;
  dword_261FA90 = 2;
  qword_261FA98 = (uint64_t)"ICON_TYPE_UNKNOWN";
  unk_261FAA0 = 17;
  dword_261FAA8 = 0;
  qword_261FAB0 = (uint64_t)"CYANDEFAULTGREENMAPS_HIKING_DIFFICULTY_EASYMAPS_HIKING_DIFFICULTY_HARDMAPS_HIKING_DIFFICULTY_MEDIUM";
  *(void *)algn_261FAB8 = 4;
  dword_261FAC0 = 1;
  qword_261FAC8 = (uint64_t)"DEFAULTGREENMAPS_HIKING_DIFFICULTY_EASYMAPS_HIKING_DIFFICULTY_HARDMAPS_HIKING_DIFFICULTY_MEDIUM";
  unk_261FAD0 = 7;
  dword_261FAD8 = 0;
  qword_261FAE0 = (uint64_t)"GREENMAPS_HIKING_DIFFICULTY_EASYMAPS_HIKING_DIFFICULTY_HARDMAPS_HIKING_DIFFICULTY_MEDIUM";
  unk_261FAE8 = 5;
  dword_261FAF0 = 2;
  qword_261FAF8 = (uint64_t)"MAPS_HIKING_DIFFICULTY_EASYMAPS_HIKING_DIFFICULTY_HARDMAPS_HIKING_DIFFICULTY_MEDIUM";
  unk_261FB00 = 27;
  dword_261FB08 = 3;
  qword_261FB10 = (uint64_t)"MAPS_HIKING_DIFFICULTY_HARDMAPS_HIKING_DIFFICULTY_MEDIUM";
  unk_261FB18 = 27;
  dword_261FB20 = 5;
  qword_261FB28 = (uint64_t)"MAPS_HIKING_DIFFICULTY_MEDIUM";
  unk_261FB30 = 29;
  dword_261FB38 = 4;
  qword_261FB58 = (uint64_t)"HIKING_DIFFICULTYHIKING_LENGTHHIKING_POINT_TO_POINTNUM_PORTSUNKNOWN";
  unk_261FB60 = 17;
  qword_261FB70 = (uint64_t)"HIKING_LENGTHHIKING_POINT_TO_POINTNUM_PORTSUNKNOWN";
  unk_261FB78 = 13;
  qword_261FB88 = (uint64_t)"HIKING_POINT_TO_POINTNUM_PORTSUNKNOWN";
  unk_261FB90 = 21;
  qword_261FBA0 = (uint64_t)"NUM_PORTSUNKNOWN";
  unk_261FBA8 = 9;
  qword_261FB40 = (uint64_t)"ELEVATIONHIKING_DIFFICULTYHIKING_LENGTHHIKING_POINT_TO_POINTNUM_PORTSUNKNOWN";
  *(void *)algn_261FB48 = 9;
  dword_261FB50 = 5;
  dword_261FB68 = 2;
  dword_261FB80 = 4;
  dword_261FB98 = 3;
  dword_261FBB0 = 1;
  qword_261FBB8 = (uint64_t)"UNKNOWN";
  unk_261FBC0 = 7;
  dword_261FBC8 = 0;
  qword_261FBE8 = (uint64_t)"GUIDES_LOCATION_ENTRY_TYPE_UNKNOWNGUIDES_LOCATION_ENTRY_TYPE_WORLDWIDE";
  unk_261FBF0 = 34;
  qword_261FC00 = (uint64_t)"GUIDES_LOCATION_ENTRY_TYPE_WORLDWIDE";
  unk_261FC08 = 36;
  qword_261FBD0 = (uint64_t)"GUIDES_LOCATION_ENTRY_TYPE_PLACEGUIDES_LOCATION_ENTRY_TYPE_UNKNOWNGUIDES_LOCATION_ENTRY_TYPE_WORLDWIDE";
  *(void *)algn_261FBD8 = 32;
  dword_261FBE0 = 1;
  dword_261FBF8 = 0;
  dword_261FC10 = 2;
  qword_261FC30 = (uint64_t)"CHILD_ITEM_TYPE_PLACECHILD_ITEM_TYPE_UNKNOWN";
  unk_261FC38 = 21;
  qword_261FC48 = (uint64_t)"CHILD_ITEM_TYPE_UNKNOWN";
  unk_261FC50 = 23;
  qword_261FC18 = (uint64_t)"CHILD_ITEM_TYPE_ACTIONCHILD_ITEM_TYPE_PLACECHILD_ITEM_TYPE_UNKNOWN";
  unk_261FC20 = 22;
  dword_261FC28 = 2;
  dword_261FC40 = 1;
  dword_261FC58 = 0;
  qword_261FC78 = (uint64_t)"POI_LABELUNKNOWN_LABEL";
  qword_261FC90 = (uint64_t)"UNKNOWN_LABEL";
  unk_261FC98 = 13;
  qword_261FC60 = (uint64_t)"AOI_LABELPOI_LABELUNKNOWN_LABEL";
  qword_261FC68 = 9;
  dword_261FC70 = 2;
  qword_261FC80 = 9;
  dword_261FC88 = 1;
  dword_261FCA0 = 0;
  qword_261FCC0 = (uint64_t)"LINK_TYPE_QUICK_LINKUNKNOWN";
  unk_261FCC8 = 20;
  qword_261FCD8 = (uint64_t)"UNKNOWN";
  unk_261FCE0 = 7;
  qword_261FCA8 = (uint64_t)"LINK_TYPE_APP_CLIP_LINKLINK_TYPE_QUICK_LINKUNKNOWN";
  unk_261FCB0 = 23;
  dword_261FCB8 = 2;
  dword_261FCD0 = 1;
  dword_261FCE8 = 0;
  qword_261FD08 = (uint64_t)"RELATIONSHIP_OTHERRELATIONSHIP_OWNER";
  qword_261FCF0 = (uint64_t)"RELATIONSHIP_AUTHORIZEDRELATIONSHIP_OTHERRELATIONSHIP_OWNER";
  *(void *)algn_261FCF8 = 23;
  dword_261FD00 = 2;
  qword_261FD10 = 18;
  dword_261FD18 = 3;
  qword_261FD20 = (uint64_t)"RELATIONSHIP_OWNER";
  unk_261FD28 = 18;
  dword_261FD30 = 1;
  qword_261FD50 = (uint64_t)"SUBTLEUNKNOWN";
  qword_261FD68 = (uint64_t)"UNKNOWN";
  unk_261FD70 = 7;
  qword_261FD38 = (uint64_t)"PROMINENTSUBTLEUNKNOWN";
  unk_261FD40 = 9;
  dword_261FD48 = 1;
  qword_261FD58 = 6;
  dword_261FD60 = 2;
  dword_261FD78 = 0;
  qword_261FD98 = (uint64_t)"UNCACHEABLEUNKNOWN_CACHEABILITY";
  unk_261FDA0 = 11;
  qword_261FDB0 = (uint64_t)"UNKNOWN_CACHEABILITY";
  unk_261FDB8 = 20;
  qword_261FD80 = (uint64_t)"CACHEABLEUNCACHEABLEUNKNOWN_CACHEABILITY";
  *(void *)algn_261FD88 = 9;
  dword_261FD90 = 2;
  dword_261FDA8 = 1;
  dword_261FDC0 = 0;
  qword_261FDE0 = (uint64_t)"DYNAMIC";
  unk_261FDE8 = 7;
  qword_261FDC8 = (uint64_t)"CACHEDDYNAMIC";
  unk_261FDD0 = 6;
  dword_261FDD8 = 0;
  dword_261FDF0 = 1;
  qword_261FE10 = (uint64_t)"PERMANENT_CLOSURESPECIALTEMPORARY_CLOSUREUNKNOWN";
  qword_261FE28 = (uint64_t)"SPECIALTEMPORARY_CLOSUREUNKNOWN";
  qword_261FE58 = (uint64_t)"UNKNOWN";
  qword_2620500 = (uint64_t)"RIBBON_ITEM_TYPE_CALL_TO_ACTIONRIBBON_ITEM_TYPE_CURATED_GUIDESRIBBON_ITEM_TYPE_DISTANCE_FROM_CURRENT_LOCATIONRIBBON_ITEM_TYPE_FACTOIDRIBBON_ITEM_TYPE_HOURSRIBBON_ITEM_TYPE_PLUGS_AVAILABILITYRIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  dword_26205E8 = 2;
  qword_2620F80 = (uint64_t)"ALLOWS_PETSAPPLE_AUTHORIZED_DROPOFF_LOCATIONAPPLE_AUTHORIZED_SERVICE_PROVIDERBY_APPOINTMENT_ONLYDEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621550 = (uint64_t)"CHILD_ACTION_TYPE_DOWNLOAD_OFFLINE_MAPCHILD_ACTION_TYPE_FLYOVERCHILD_ACTION_TYPE_GUIDESCHILD_ACTION_TYPE_LOOK_AROUNDCHILD_ACTION_TYPE_SEARCHCHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  qword_2621520 = (uint64_t)"CHILD_ACTION_TYPE_CALLCHILD_ACTION_TYPE_DIRECTIONSCHILD_ACTION_TYPE_DOWNLOAD_OFFLINE_MAPCHILD"
                           "_ACTION_TYPE_FLYOVERCHILD_ACTION_TYPE_GUIDESCHILD_ACTION_TYPE_LOOK_AROUNDCHILD_ACTION_TYPE_SE"
                           "ARCHCHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  *(void *)algn_2621528 = 22;
  dword_2621530 = 5;
  qword_2621538 = (uint64_t)"CHILD_ACTION_TYPE_DIRECTIONSCHILD_ACTION_TYPE_DOWNLOAD_OFFLINE_MAPCHILD_ACTION_TYPE_FLYOVERCHILD_ACTION_TYPE_GUIDESCHILD_ACTION_TYPE_LOOK_AROUNDCHILD_ACTION_TYPE_SEARCHCHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  unk_2621540 = 28;
  dword_2621548 = 1;
  qword_26214F0 = (uint64_t)"WALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621510 = 21;
  dword_2621518 = 2;
  qword_2621508 = (uint64_t)"WHEELCHAIR_ACCESSIBLE";
  dword_26214E8 = 0;
  qword_26214F8 = 15;
  dword_2621500 = 61;
  qword_26214D8 = (uint64_t)"UNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26214C8 = 18;
  dword_26214D0 = 20;
  qword_26214E0 = 7;
  qword_2621448 = (uint64_t)"NON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26214C0 = (uint64_t)"TAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26214B0 = 15;
  dword_26214B8 = 19;
  qword_2621490 = (uint64_t)"SMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26214A8 = (uint64_t)"SMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621498 = 24;
  dword_26214A0 = 56;
  qword_2621478 = (uint64_t)"OPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_2621470 = 60;
  qword_2621480 = 13;
  dword_2621488 = 6;
  qword_2621460 = (uint64_t)"OFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621450 = 22;
  dword_2621458 = 40;
  qword_2621468 = 36;
  qword_2621430 = (uint64_t)"HAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_2621428 = 28;
  qword_2621438 = 8;
  dword_2621440 = 11;
  qword_2621418 = (uint64_t)"HAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621408 = 22;
  dword_2621410 = 33;
  qword_2621420 = 14;
  qword_26213E8 = (uint64_t)"HAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621400 = (uint64_t)"HAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26213F0 = 17;
  dword_26213F8 = 34;
  qword_26213D0 = (uint64_t)"HAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_26213C8 = 10;
  qword_26213D8 = 12;
  dword_26213E0 = 23;
  qword_2621310 = (uint64_t)"HAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26213B8 = (uint64_t)"HAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26213A8 = 7;
  dword_26213B0 = 9;
  qword_26213C0 = 17;
  qword_2621388 = (uint64_t)"HAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26213A0 = (uint64_t)"HAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621390 = 20;
  dword_2621398 = 36;
  qword_2621370 = (uint64_t)"HAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_2621368 = 49;
  qword_2621378 = 15;
  dword_2621380 = 14;
  qword_2621358 = (uint64_t)"HAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621348 = 23;
  dword_2621350 = 51;
  qword_2621360 = 24;
  qword_2621328 = (uint64_t)"HAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621340 = (uint64_t)"HAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621330 = 15;
  dword_2621338 = 26;
  dword_2621308 = 47;
  qword_2621318 = 14;
  dword_2621320 = 44;
  qword_26211F0 = (uint64_t)"HAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26212F8 = (uint64_t)"HAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26212E8 = 18;
  dword_26212F0 = 17;
  qword_2621300 = 17;
  qword_26212C8 = (uint64_t)"HAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26212E0 = (uint64_t)"HAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26212D0 = 11;
  dword_26212D8 = 16;
  qword_26212B0 = (uint64_t)"HAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_26212A8 = 50;
  qword_26212B8 = 19;
  dword_26212C0 = 27;
  qword_2621298 = (uint64_t)"HAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621288 = 21;
  dword_2621290 = 41;
  qword_26212A0 = 18;
  qword_2621268 = (uint64_t)"HAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621280 = (uint64_t)"HAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621270 = 17;
  dword_2621278 = 39;
  qword_2621250 = (uint64_t)"HAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621258 = 19;
  dword_2621260 = 45;
  qword_2621238 = (uint64_t)"HAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_2621230 = 53;
  qword_2621240 = 16;
  dword_2621248 = 46;
  qword_2621220 = (uint64_t)"HAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621210 = 15;
  dword_2621218 = 48;
  qword_2621228 = 8;
  qword_2621208 = (uint64_t)"HAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_26211E8 = 35;
  qword_26211F8 = 17;
  dword_2621200 = 37;
  qword_26211D8 = (uint64_t)"HAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26211C8 = 27;
  dword_26211D0 = 22;
  qword_26211E0 = 22;
  qword_26211A8 = (uint64_t)"HAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_26211C0 = (uint64_t)"HAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_26211A0 = 12;
  qword_26211B0 = 12;
  dword_26211B8 = 32;
  qword_2621190 = (uint64_t)"HAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621180 = 16;
  dword_2621188 = 18;
  qword_2621198 = 13;
  qword_2621160 = (uint64_t)"HAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621178 = (uint64_t)"HAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2621168 = 17;
  dword_2621170 = 13;
  qword_2621130 = (uint64_t)"HAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621138 = 18;
  qword_2621148 = (uint64_t)"HAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  dword_2621140 = 7;
  qword_2621150 = 18;
  dword_2621158 = 8;
  qword_2621118 = (uint64_t)"HAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621120 = 16;
  dword_2621128 = 42;
  qword_2621100 = (uint64_t)"HAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621108 = 17;
  dword_26210F8 = 4;
  dword_2621110 = 31;
  qword_26210E8 = (uint64_t)"HAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_26210F0 = 12;
  qword_26210D0 = (uint64_t)"HAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_26210D8 = 22;
  dword_26210E0 = 38;
  qword_26210B8 = (uint64_t)"HAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_26210C0 = 21;
  dword_26210C8 = 52;
  dword_2621098 = 43;
  qword_26210A0 = (uint64_t)"HAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_26210A8 = 14;
  dword_26210B0 = 29;
  qword_2621088 = (uint64_t)"HAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621090 = 14;
  qword_2621070 = (uint64_t)"HAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621078 = 26;
  dword_2621080 = 15;
  qword_2621058 = (uint64_t)"HARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621060 = 28;
  dword_2621068 = 57;
  qword_2621028 = (uint64_t)"GOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621030 = 15;
  qword_2621040 = (uint64_t)"GOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621048 = 13;
  dword_2621038 = 25;
  dword_2621050 = 3;
  qword_2621010 = (uint64_t)"GENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621018 = 19;
  dword_2621020 = 58;
  qword_2620FF8 = (uint64_t)"FREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2621000 = 28;
  dword_2621008 = 55;
  qword_2620FB0 = (uint64_t)"APPLE_AUTHORIZED_SERVICE_PROVIDERBY_APPOINTMENT_ONLYDEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  qword_2620FE0 = (uint64_t)"DEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2620FE8 = 26;
  dword_2620FF0 = 54;
  qword_2620FC8 = (uint64_t)"BY_APPOINTMENT_ONLYDEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2620FD0 = 19;
  dword_2620FC0 = 59;
  dword_2620FD8 = 24;
  qword_2620F98 = (uint64_t)"APPLE_AUTHORIZED_DROPOFF_LOCATIONAPPLE_AUTHORIZED_SERVICE_PROVIDERBY_APPOINTMENT_ONLYDEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2620FA0 = 33;
  dword_2620FA8 = 62;
  qword_2620FB8 = 33;
  qword_2620F68 = (uint64_t)"ALLOWS_DOGSALLOWS_PETSAPPLE_AUTHORIZED_DROPOFF_LOCATIONAPPLE_AUTHORIZED_SERVICE_PROVIDERBY_APPOINTMENT_ONLYDEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2620F70 = 11;
  dword_2620F78 = 30;
  qword_2620F88 = 11;
  dword_2620F90 = 5;
  qword_2620F38 = (uint64_t)"ACCEPTS_APPLE_PAYACCEPTS_CREDIT_CARDSALLOWS_DOGSALLOWS_PETSAPPLE_AUTHORIZED_DROPOFF_LOCATIONA"
                           "PPLE_AUTHORIZED_SERVICE_PROVIDERBY_APPOINTMENT_ONLYDEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_AP"
                           "PLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AI"
                           "RPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHA"
                           "S_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTER"
                           "NETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONS"
                           "HAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSH"
                           "AS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRI"
                           "VATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHU"
                           "TTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARI"
                           "AN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPE"
                           "N_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEE"
                           "LCHAIR_ACCESSIBLE";
  unk_2620F40 = 17;
  qword_2620F50 = (uint64_t)"ACCEPTS_CREDIT_CARDSALLOWS_DOGSALLOWS_PETSAPPLE_AUTHORIZED_DROPOFF_LOCATIONAPPLE_AUTHORIZED_SERVICE_PROVIDERBY_APPOINTMENT_ONLYDEVICE_TRADE_IN_FOR_CREDITFREE_TODAY_AT_APPLE_SESSIONSGENIUS_BAR_WALK_INSGOOD_FOR_GROUPSGOOD_FOR_KIDSHARDWARE_REPAIRS_AND_SUPPORTHAS_AIRPORT_TRANSPORTATIONHAS_BAR_LOUNGEHAS_BEACHFRONTHAS_CHILDREN_DISCOUNTHAS_DAIRY_FREE_OPTIONSHAS_DELIVERYHAS_DRIVE_THROUGHHAS_FAMILY_ROOMSHAS_FITNESS_CENTERHAS_FREE_BREAKFASTHAS_FREE_INTERNETHAS_FREE_PARKINGHAS_FREE_WIFIHAS_FULL_BARHAS_GENDER_NEUTRAL_RESTROOMHAS_GLUTENFREE_OPTIONSHAS_HALAL_OPTIONSHAS_HIGH_CHAIRSHAS_IMAXHAS_LARGE_TABLESHAS_LAUNDRY_SERVICEHAS_MEETING_ROOMSHAS_NON_SMOKING_ROOMSHAS_ONLINE_QUEUINGHAS_OUTDOOR_SEATINGHAS_PARKINGHAS_PARKING_GARAGEHAS_PRIVATE_ROOMSHAS_RESTAURANTHAS_SCENIC_VIEWHAS_SEATING_FOR_COUPLESHAS_SELF_ORDERING_ONLINEHAS_SHUTTLE_BUSHAS_SOY_FREE_OPTIONSHAS_SPAHAS_SWIMMING_POOLHAS_TAKE_OUTHAS_VEGAN_OPTIONSHAS_VEGETARIAN_OPTIONSHAS_WATERFRONTHAS_WIFINON_SMOKING_THROUGHOUTOFFERS_SAME_DAY_IPHONE_SCREEN_REPAIROPEN_24_HOURSSMALL_BUSINESS_SOLUTIONSSMOKING_ALLOWEDTAKES_RESERVATIONSUNKNOWNWALK_IN_REPAIRSWHEELCHAIR_ACCESSIBLE";
  unk_2620F58 = 20;
  dword_2620F60 = 1;
  dword_2620F48 = 21;
  qword_2620F08 = (uint64_t)"SPATIAL_PLACE_LOOKUP_REQUEST_VERSION_V1SPATIAL_PLACE_LOOKUP_REQUEST_VERSION_V2";
  dword_2620F18 = 1;
  qword_2620F20 = (uint64_t)"SPATIAL_PLACE_LOOKUP_REQUEST_VERSION_V2";
  unk_2620F28 = 39;
  dword_2620F30 = 2;
  qword_2620EF0 = (uint64_t)"SPATIAL_PLACE_LOOKUP_REQUEST_VERSION_UNKNOWNSPATIAL_PLACE_LOOKUP_REQUEST_VERSION_V1SPATIAL_PL"
                           "ACE_LOOKUP_REQUEST_VERSION_V2";
  *(void *)algn_2620EF8 = 44;
  qword_2620F10 = 39;
  dword_2620F00 = 0;
  qword_2620ED8 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620EE0 = 63;
  dword_2620EE8 = 7;
  qword_2620DE8 = (uint64_t)"MEDIA_LINK_POSITION_UNKNOWN";
  qword_2620EC0 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620EC8 = 47;
  dword_2620ED0 = 0;
  qword_2620EA8 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620EB0 = 64;
  dword_2620EA0 = 6;
  dword_2620EB8 = 5;
  qword_2620E90 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_MESSAGE_URL_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620E98 = 63;
  qword_2620E78 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_DIRECTIONS_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_MESSAGE_URL_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620E80 = 62;
  dword_2620E88 = 1;
  qword_2620E60 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_RATING_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_DIRECTIONS_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_MESSAGE_URL_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620E68 = 62;
  dword_2620E70 = 8;
  qword_2620E30 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_APP_QUICK_LINK_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_PHOTOS_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_RATING_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_DIRECTIONS_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_MESSAGE_URL_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620E38 = 66;
  qword_2620E48 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_PHOTOS_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_RATING_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_DIRECTIONS_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_MESSAGE_URL_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620E50 = 62;
  dword_2620E40 = 4;
  dword_2620E58 = 9;
  qword_2620E18 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_APP_EXTENSION_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_APP_QUICK_LINK_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_PHOTOS_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_RATING_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_DIRECTIONS_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_MESSAGE_URL_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECARD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  unk_2620E20 = 65;
  dword_2620E28 = 2;
  qword_2620E00 = (uint64_t)"PLACECARD_ENRICHMENT_SUPPRESSION_REASON_APP_CLIP_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_"
                           "REASON_APP_EXTENSION_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_APP_QUICK_LINK_UNAVAI"
                           "LABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_ARP_PHOTOS_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPR"
                           "ESSION_REASON_ARP_RATING_UNSUPPORTEDPLACECARD_ENRICHMENT_SUPPRESSION_REASON_DIRECTIONS_UNAVAI"
                           "LABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_MESSAGE_URL_UNAVAILABLEPLACECARD_ENRICHMENT_SUPP"
                           "RESSION_REASON_PHONE_NUMBER_UNAVAILABLEPLACECARD_ENRICHMENT_SUPPRESSION_REASON_UNKNOWNPLACECA"
                           "RD_ENRICHMENT_SUPPRESSION_REASON_WEBSITE_URL_UNAVAILABLE";
  *(void *)algn_2620E08 = 60;
  dword_2620E10 = 3;
  dword_2620DF8 = 0;
  qword_26205C0 = (uint64_t)"RIBBON_ITEM_TYPE_UNKNOWN";
  unk_26205C8 = 24;
  dword_26205D0 = 0;
  qword_26205D8 = (uint64_t)"ADDRESSLOCATIONNONEUNKNOWN";
  qword_2620DF0 = 27;
  qword_26205A8 = (uint64_t)"RIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_26205B0 = 24;
  dword_26205A0 = 4;
  dword_26205B8 = 2;
  qword_2620590 = (uint64_t)"RIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_2620598 = 22;
  qword_2620578 = (uint64_t)"RIBBON_ITEM_TYPE_PLUGS_AVAILABILITYRIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_2620580 = 35;
  dword_2620588 = 9;
  qword_2620560 = (uint64_t)"RIBBON_ITEM_TYPE_HOURSRIBBON_ITEM_TYPE_PLUGS_AVAILABILITYRIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_2620568 = 22;
  dword_2620558 = 6;
  dword_2620570 = 1;
  qword_2620548 = (uint64_t)"RIBBON_ITEM_TYPE_FACTOIDRIBBON_ITEM_TYPE_HOURSRIBBON_ITEM_TYPE_PLUGS_AVAILABILITYRIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_2620550 = 24;
  qword_2620530 = (uint64_t)"RIBBON_ITEM_TYPE_DISTANCE_FROM_CURRENT_LOCATIONRIBBON_ITEM_TYPE_FACTOIDRIBBON_ITEM_TYPE_HOURSRIBBON_ITEM_TYPE_PLUGS_AVAILABILITYRIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_2620538 = 47;
  dword_2620540 = 8;
  qword_26204E8 = (uint64_t)"RIBBON_ITEM_TYPE_AMENITIESRIBBON_ITEM_TYPE_CALL_TO_ACTIONRIBBON_ITEM_TYPE_CURATED_GUIDESRIBBO"
                           "N_ITEM_TYPE_DISTANCE_FROM_CURRENT_LOCATIONRIBBON_ITEM_TYPE_FACTOIDRIBBON_ITEM_TYPE_HOURSRIBBO"
                           "N_ITEM_TYPE_PLUGS_AVAILABILITYRIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_26204F0 = 26;
  dword_2620510 = 7;
  qword_2620518 = (uint64_t)"RIBBON_ITEM_TYPE_CURATED_GUIDESRIBBON_ITEM_TYPE_DISTANCE_FROM_CURRENT_LOCATIONRIBBON_ITEM_TYPE_FACTOIDRIBBON_ITEM_TYPE_HOURSRIBBON_ITEM_TYPE_PLUGS_AVAILABILITYRIBBON_ITEM_TYPE_PRICERIBBON_ITEM_TYPE_RATINGSRIBBON_ITEM_TYPE_UNKNOWN";
  unk_2620520 = 31;
  dword_2620528 = 5;
  dword_26204F8 = 3;
  qword_2620508 = 31;
  qword_26204D0 = (uint64_t)"LAYOUT_TYPE_UNKNOWN";
  unk_26204D8 = 19;
  dword_26204E0 = 0;
  qword_26204B8 = (uint64_t)"LAYOUT_TYPE_TEXT_ONLYLAYOUT_TYPE_UNKNOWN";
  qword_26204A0 = (uint64_t)"LAYOUT_TYPE_IMAGE_TEXTLAYOUT_TYPE_TEXT_ONLYLAYOUT_TYPE_UNKNOWN";
  unk_26204A8 = 22;
  qword_26204C0 = 21;
  dword_26204C8 = 4;
  dword_26204B0 = 1;
  qword_2620440 = (uint64_t)"ORIENTATION_UNKNOWNORIENTATION_VERTICAL";
  unk_2620448 = 19;
  qword_2620488 = (uint64_t)"LAYOUT_TYPE_IMAGE_ICON_TEXTLAYOUT_TYPE_IMAGE_TEXTLAYOUT_TYPE_TEXT_ONLYLAYOUT_TYPE_UNKNOWN";
  unk_2620490 = 27;
  dword_2620480 = 3;
  dword_2620498 = 2;
  qword_2620470 = (uint64_t)"LAYOUT_TYPE_ICON_TEXTLAYOUT_TYPE_IMAGE_ICON_TEXTLAYOUT_TYPE_IMAGE_TEXTLAYOUT_TYPE_TEXT_ONLYLA"
                           "YOUT_TYPE_UNKNOWN";
  *(void *)algn_2620478 = 21;
  qword_2620458 = (uint64_t)"ORIENTATION_VERTICAL";
  unk_2620460 = 20;
  dword_2620468 = 2;
  dword_2620450 = 0;
  dword_2620438 = 1;
  qword_2620320 = (uint64_t)"MODULE_CONFIGURATION_TYPE_BUSINESS_INFOSMODULE_CONFIGURATION_TYPE_HEADER_BUTTONSMODULE_CONFIGURATION_TYPE_HIKING_ASSOCIATIONMODULE_CONFIGURATION_TYPE_PLACE_INFOSMODULE_CONFIGURATION_TYPE_PLACE_RIBBONMODULE_CONFIGURATION_TYPE_RELATED_PLACEMODULE_CONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  qword_2620410 = (uint64_t)"WEB_MODULE_TYPE_GENERIC";
  *(void *)algn_2620418 = 23;
  dword_2620420 = 0;
  qword_2620428 = (uint64_t)"ORIENTATION_HORIZONTALORIENTATION_UNKNOWNORIENTATION_VERTICAL";
  unk_2620430 = 22;
  dword_26203F0 = 0;
  qword_26203F8 = (uint64_t)"MODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  unk_2620400 = 37;
  dword_2620408 = 4;
  qword_26203E0 = (uint64_t)"MODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  qword_26203C8 = (uint64_t)"MODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  unk_26203D0 = 41;
  dword_26203D8 = 9;
  qword_26203E8 = 33;
  qword_26203B0 = (uint64_t)"MODULE_CONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  dword_26203A8 = 3;
  qword_26203B8 = 40;
  dword_26203C0 = 5;
  qword_2620398 = (uint64_t)"MODULE_CONFIGURATION_TYPE_RELATED_PLACEMODULE_CONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  qword_2620380 = (uint64_t)"MODULE_CONFIGURATION_TYPE_PLACE_RIBBONMODULE_CONFIGURATION_TYPE_RELATED_PLACEMODULE_CONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  qword_2620388 = 38;
  dword_2620390 = 1;
  qword_26203A0 = 39;
  qword_2620368 = (uint64_t)"MODULE_CONFIGURATION_TYPE_PLACE_INFOSMODULE_CONFIGURATION_TYPE_PLACE_RIBBONMODULE_CONFIGURATION_TYPE_RELATED_PLACEMODULE_CONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  unk_2620370 = 37;
  dword_2620360 = 10;
  dword_2620378 = 6;
  qword_2620350 = (uint64_t)"MODULE_CONFIGURATION_TYPE_HIKING_ASSOCIATIONMODULE_CONFIGURATION_TYPE_PLACE_INFOSMODULE_CONFIGURATION_TYPE_PLACE_RIBBONMODULE_CONFIGURATION_TYPE_RELATED_PLACEMODULE_CONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  unk_2620358 = 44;
  qword_2620338 = (uint64_t)"MODULE_CONFIGURATION_TYPE_HEADER_BUTTONSMODULE_CONFIGURATION_TYPE_HIKING_ASSOCIATIONMODULE_CONFIGURATION_TYPE_PLACE_INFOSMODULE_CONFIGURATION_TYPE_PLACE_RIBBONMODULE_CONFIGURATION_TYPE_RELATED_PLACEMODULE_CONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  qword_2620340 = 40;
  dword_2620348 = 8;
  qword_2620308 = (uint64_t)"MODULE_CONFIGURATION_TYPE_ACTIONSMODULE_CONFIGURATION_TYPE_BUSINESS_INFOSMODULE_CONFIGURATION"
                           "_TYPE_HEADER_BUTTONSMODULE_CONFIGURATION_TYPE_HIKING_ASSOCIATIONMODULE_CONFIGURATION_TYPE_PLA"
                           "CE_INFOSMODULE_CONFIGURATION_TYPE_PLACE_RIBBONMODULE_CONFIGURATION_TYPE_RELATED_PLACEMODULE_C"
                           "ONFIGURATION_TYPE_TEMPLATE_PLACEMODULE_CONFIGURATION_TYPE_UNIFIED_ACTIONSMODULE_CONFIGURATION"
                           "_TYPE_UNKNOWNMODULE_CONFIGURATION_TYPE_WEB_CONTENT";
  unk_2620310 = 33;
  qword_2620328 = 40;
  dword_2620330 = 7;
  dword_2620318 = 2;
  qword_26202F0 = (uint64_t)"PLUGS_AVAILABLE";
  unk_26202F8 = 15;
  dword_2620300 = 1;
  qword_2620278 = (uint64_t)"LEVEL_THREELEVEL_TWOLEVEL_UNKNOWN";
  qword_26202D8 = (uint64_t)"NO_STATUSPLUGS_AVAILABLE";
  dword_26202D0 = 2;
  qword_26202E0 = 9;
  dword_26202E8 = 0;
  qword_26202C0 = (uint64_t)"NO_PLUGS_AVAILABLENO_STATUSPLUGS_AVAILABLE";
  qword_26202C8 = 18;
  qword_26202A8 = (uint64_t)"LEVEL_UNKNOWN";
  unk_26202B0 = 13;
  dword_26202B8 = 0;
  qword_2620260 = (uint64_t)"LEVEL_ONELEVEL_THREELEVEL_TWOLEVEL_UNKNOWN";
  *(void *)algn_2620268 = 9;
  qword_2620290 = (uint64_t)"LEVEL_TWOLEVEL_UNKNOWN";
  unk_2620298 = 9;
  dword_2620288 = 3;
  dword_26202A0 = 2;
  dword_2620270 = 1;
  qword_2620280 = 11;
  qword_2620248 = (uint64_t)"CONNECTOR_TYPE_UNKNOWN";
  unk_2620250 = 22;
  dword_2620258 = 0;
  qword_2620218 = (uint64_t)"CONNECTOR_TYPE_MENNEKESCONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  unk_2620220 = 23;
  dword_2620228 = 8;
  qword_2620230 = (uint64_t)"CONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  unk_2620238 = 20;
  dword_2620240 = 3;
  qword_2620200 = (uint64_t)"CONNECTOR_TYPE_J1772CONNECTOR_TYPE_MENNEKESCONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  unk_2620208 = 20;
  dword_2620210 = 2;
  qword_26201E8 = (uint64_t)"CONNECTOR_TYPE_GBT2CONNECTOR_TYPE_J1772CONNECTOR_TYPE_MENNEKESCONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  qword_26201D0 = (uint64_t)"CONNECTOR_TYPE_GBT1CONNECTOR_TYPE_GBT2CONNECTOR_TYPE_J1772CONNECTOR_TYPE_MENNEKESCONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  unk_26201D8 = 19;
  qword_26201F0 = 19;
  dword_26201F8 = 7;
  dword_26201E0 = 6;
  qword_2620158 = (uint64_t)"PLACE_CONTEXT_METADATA_SEARCHPLACE_CONTEXT_METADATA_UNKNOWN";
  qword_26201B8 = (uint64_t)"CONNECTOR_TYPE_CHADEMOCONNECTOR_TYPE_GBT1CONNECTOR_TYPE_GBT2CONNECTOR_TYPE_J1772CONNECTOR_TYPE_MENNEKESCONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  unk_26201C0 = 22;
  dword_26201B0 = 5;
  dword_26201C8 = 1;
  qword_26201A0 = (uint64_t)"CONNECTOR_TYPE_CCS2CONNECTOR_TYPE_CHADEMOCONNECTOR_TYPE_GBT1CONNECTOR_TYPE_GBT2CONNECTOR_TYPE_J1772CONNECTOR_TYPE_MENNEKESCONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  unk_26201A8 = 19;
  qword_2620188 = (uint64_t)"CONNECTOR_TYPE_CCS1CONNECTOR_TYPE_CCS2CONNECTOR_TYPE_CHADEMOCONNECTOR_TYPE_GBT1CONNECTOR_TYPE"
                           "_GBT2CONNECTOR_TYPE_J1772CONNECTOR_TYPE_MENNEKESCONNECTOR_TYPE_TESLACONNECTOR_TYPE_UNKNOWN";
  unk_2620190 = 19;
  dword_2620198 = 4;
  qword_2620140 = (uint64_t)"PLACE_CONTEXT_METADATA_AUTOCOMPLETEPLACE_CONTEXT_METADATA_SEARCHPLACE_CONTEXT_METADATA_UNKNOWN";
  *(void *)algn_2620148 = 35;
  dword_2620168 = 1;
  qword_2620170 = (uint64_t)"PLACE_CONTEXT_METADATA_UNKNOWN";
  unk_2620178 = 30;
  dword_2620180 = 0;
  dword_2620150 = 2;
  qword_2620160 = 29;
  qword_26200E0 = (uint64_t)"CLIENTIZATION_FEATURE_SUMMARY_EXPERIENCECLIENTIZATION_FEATURE_UNKNOWN";
  unk_26200E8 = 40;
  qword_2620128 = (uint64_t)"CATEGORY_TAXONOMY_TYPE_MODERN";
  unk_2620130 = 29;
  dword_2620120 = 0;
  dword_2620138 = 1;
  qword_2620110 = (uint64_t)"CATEGORY_TAXONOMY_TYPE_DEFAULTCATEGORY_TAXONOMY_TYPE_MODERN";
  *(void *)algn_2620118 = 30;
  qword_26200F8 = (uint64_t)"CLIENTIZATION_FEATURE_UNKNOWN";
  unk_2620100 = 29;
  dword_2620108 = 0;
  qword_26200C8 = (uint64_t)"CLIENTIZATION_FEATURE_IS_POPULARCLIENTIZATION_FEATURE_SUMMARY_EXPERIENCECLIENTIZATION_FEATURE_UNKNOWN";
  unk_26200D0 = 32;
  dword_26200D8 = 3;
  dword_26200F0 = 4;
  qword_26200B0 = (uint64_t)"CLIENTIZATION_FEATURE_IS_LANDMARKCLIENTIZATION_FEATURE_IS_POPULARCLIENTIZATION_FEATURE_SUMMARY_EXPERIENCECLIENTIZATION_FEATURE_UNKNOWN";
  unk_26200B8 = 33;
  qword_2620098 = (uint64_t)"CLIENTIZATION_FEATURE_IS_AIRPORTCLIENTIZATION_FEATURE_IS_LANDMARKCLIENTIZATION_FEATURE_IS_POP"
                           "ULARCLIENTIZATION_FEATURE_SUMMARY_EXPERIENCECLIENTIZATION_FEATURE_UNKNOWN";
  unk_26200A0 = 32;
  dword_26200C0 = 2;
  dword_26200A8 = 1;
  qword_2620080 = (uint64_t)"DATA_TYPE_UNKNOWN";
  unk_2620088 = 17;
  qword_2620068 = (uint64_t)"DATA_TYPE_NEARBY_PLACESDATA_TYPE_UNKNOWN";
  unk_2620070 = 23;
  dword_2620090 = 0;
  dword_2620078 = 1;
  qword_2620050 = (uint64_t)"REQUEST_TYPE_UNKNOWN";
  unk_2620058 = 20;
  dword_2620060 = 0;
  qword_2620020 = (uint64_t)"ITEM_TYPE_UNKNOWN";
  unk_2620028 = 17;
  qword_2620038 = (uint64_t)"REQUEST_TYPE_SEARCHREQUEST_TYPE_UNKNOWN";
  unk_2620040 = 19;
  dword_2620048 = 1;
  dword_2620030 = 0;
  qword_2620008 = (uint64_t)"ITEM_TYPE_RATINGITEM_TYPE_UNKNOWN";
  unk_2620010 = 16;
  dword_2620018 = 1;
  qword_261FFD8 = (uint64_t)"ITEM_TYPE_HIKESITEM_TYPE_LOCATIONITEM_TYPE_RATINGITEM_TYPE_UNKNOWN";
  unk_261FFE0 = 15;
  qword_261FFF0 = (uint64_t)"ITEM_TYPE_LOCATIONITEM_TYPE_RATINGITEM_TYPE_UNKNOWN";
  unk_261FFF8 = 18;
  dword_2620000 = 5;
  dword_261FFE8 = 6;
  qword_261FF78 = (uint64_t)"HIKING_DISPLAY_TYPE_TRAIL_HEAD";
  unk_261FF80 = 30;
  qword_261FFC0 = (uint64_t)"ITEM_TYPE_FACTOIDITEM_TYPE_HIKESITEM_TYPE_LOCATIONITEM_TYPE_RATINGITEM_TYPE_UNKNOWN";
  unk_261FFC8 = 17;
  dword_261FFB8 = 2;
  dword_261FFD0 = 3;
  qword_261FFA8 = (uint64_t)"ITEM_TYPE_CATEGORYITEM_TYPE_FACTOIDITEM_TYPE_HIKESITEM_TYPE_LOCATIONITEM_TYPE_RATINGITEM_TYPE_UNKNOWN";
  unk_261FFB0 = 18;
  qword_261FF90 = (uint64_t)"ITEM_TYPE_BUSINESS_HOURSITEM_TYPE_CATEGORYITEM_TYPE_FACTOIDITEM_TYPE_HIKESITEM_TYPE_LOCATIONI"
                           "TEM_TYPE_RATINGITEM_TYPE_UNKNOWN";
  *(void *)algn_261FF98 = 24;
  dword_261FFA0 = 4;
  qword_261FF60 = (uint64_t)"HIKING_DISPLAY_TYPE_TRAILHIKING_DISPLAY_TYPE_TRAIL_HEAD";
  *(void *)algn_261FF68 = 25;
  dword_261FF88 = 0;
  dword_261FF70 = 1;
  qword_261FF48 = (uint64_t)"HIKE_SUGGESTION";
  unk_261FF50 = 15;
  dword_261FF58 = 1;
  qword_261FED0 = (uint64_t)"RELATED_PLACE_AT_POIRELATED_PLACE_SIMILARRELATED_PLACE_TEMPLATERELATED_PLACE_TYPE_UNKNOWN";
  qword_261FF30 = (uint64_t)"DEFAULTHIKE_SUGGESTION";
  *(void *)algn_261FF38 = 7;
  dword_261FF40 = 0;
  dword_261FF28 = 0;
  qword_261FF00 = (uint64_t)"RELATED_PLACE_TEMPLATERELATED_PLACE_TYPE_UNKNOWN";
  unk_261FF08 = 22;
  dword_261FF10 = 4;
  qword_261FF18 = (uint64_t)"RELATED_PLACE_TYPE_UNKNOWN";
  unk_261FF20 = 26;
  qword_261FEB8 = (uint64_t)"RELATED_PLACE_AT_ADDRESSRELATED_PLACE_AT_POIRELATED_PLACE_SIMILARRELATED_PLACE_TEMPLATERELATE"
                           "D_PLACE_TYPE_UNKNOWN";
  unk_261FEC0 = 24;
  dword_261FEE0 = 3;
  qword_261FEE8 = (uint64_t)"RELATED_PLACE_SIMILARRELATED_PLACE_TEMPLATERELATED_PLACE_TYPE_UNKNOWN";
  unk_261FEF0 = 21;
  dword_261FEF8 = 1;
  dword_261FEC8 = 2;
  qword_261FED8 = 20;
  qword_261FEA0 = (uint64_t)"IMAGE_TYPE_UNKNOWN";
  unk_261FEA8 = 18;
  dword_261FEB0 = 0;
  qword_261FE88 = (uint64_t)"IMAGE_TYPE_PORTRAITIMAGE_TYPE_UNKNOWN";
  unk_261FE90 = 19;
  qword_261FE70 = (uint64_t)"IMAGE_TYPE_LANDSCAPEIMAGE_TYPE_PORTRAITIMAGE_TYPE_UNKNOWN";
  *(void *)algn_261FE78 = 20;
  dword_261FE80 = 1;
  dword_261FE98 = 2;
  qword_261FE40 = (uint64_t)"TEMPORARY_CLOSUREUNKNOWN";
  qword_261FE48 = 17;
  dword_261FE50 = 3;
  qword_261FE60 = 7;
  dword_261FE68 = 0;
  qword_261FDF8 = (uint64_t)"NORMALPERMANENT_CLOSURESPECIALTEMPORARY_CLOSUREUNKNOWN";
  unk_261FE00 = 6;
  dword_261FE08 = 1;
  qword_261FE18 = 17;
  qword_261FE30 = 7;
  dword_261FE38 = 2;
  dword_261FE20 = 4;
  qword_26205F0 = (uint64_t)"LOCATIONNONEUNKNOWN";
  qword_2620608 = (uint64_t)"NONEUNKNOWN";
  unk_2620610 = 4;
  qword_2620620 = (uint64_t)"UNKNOWN";
  unk_2620628 = 7;
  qword_26205E0 = 7;
  qword_26205F8 = 8;
  dword_2620600 = 1;
  dword_2620618 = 3;
  dword_2620630 = 0;
  qword_2620650 = (uint64_t)"FACTOID_STYLE_DIRECTIONSFACTOID_STYLE_LINK";
  unk_2620658 = 24;
  qword_2620668 = (uint64_t)"FACTOID_STYLE_LINK";
  unk_2620670 = 18;
  qword_2620638 = (uint64_t)"FACTOID_STYLE_DEFAULTFACTOID_STYLE_DIRECTIONSFACTOID_STYLE_LINK";
  unk_2620640 = 21;
  dword_2620648 = 0;
  dword_2620660 = 1;
  dword_2620678 = 2;
  qword_2620698 = (uint64_t)"ATTRIBUTION_TYPE_VENDOR";
  unk_26206A0 = 23;
  qword_2620680 = (uint64_t)"ATTRIBUTION_TYPE_INDIGENOUS_ACKNOWLEDGEMENTATTRIBUTION_TYPE_VENDOR";
  *(void *)algn_2620688 = 43;
  dword_2620690 = 1;
  dword_26206A8 = 0;
  qword_26206C8 = (uint64_t)"EXTENSION_TYPE_RESERVATIONEXTENSION_TYPE_UNKNOWN";
  unk_26206D0 = 26;
  qword_26206E0 = (uint64_t)"EXTENSION_TYPE_UNKNOWN";
  unk_26206E8 = 22;
  qword_26206B0 = (uint64_t)"EXTENSION_TYPE_QUEUINGEXTENSION_TYPE_RESERVATIONEXTENSION_TYPE_UNKNOWN";
  *(void *)algn_26206B8 = 22;
  dword_26206C0 = 2;
  dword_26206D8 = 1;
  dword_26206F0 = 0;
  qword_2620710 = (uint64_t)"LINK_TYPE_EXTENSIONLINK_TYPE_QUICK_LINKLINK_TYPE_UNKNOWNLINK_TYPE_WEB_LINK";
  unk_2620718 = 19;
  qword_2620728 = (uint64_t)"LINK_TYPE_QUICK_LINKLINK_TYPE_UNKNOWNLINK_TYPE_WEB_LINK";
  qword_2620740 = (uint64_t)"LINK_TYPE_UNKNOWNLINK_TYPE_WEB_LINK";
  unk_2620748 = 17;
  qword_2620758 = (uint64_t)"LINK_TYPE_WEB_LINK";
  qword_26206F8 = (uint64_t)"LINK_TYPE_APP_CLIPLINK_TYPE_EXTENSIONLINK_TYPE_QUICK_LINKLINK_TYPE_UNKNOWNLINK_TYPE_WEB_LINK";
  unk_2620700 = 18;
  dword_2620708 = 2;
  dword_2620720 = 3;
  qword_2620730 = 20;
  dword_2620738 = 1;
  dword_2620750 = 0;
  qword_2620760 = 18;
  dword_2620768 = 4;
  qword_2620788 = (uint64_t)"BUTTON_TYPE_ADD_PHOTOSBUTTON_TYPE_ADD_TO_FAVORITESBUTTON_TYPE_ADD_TO_GUIDESBUTTON_TYPE_CALLBUTTON_TYPE_DIRECTIONSBUTTON_TYPE_DOWNLOADBUTTON_TYPE_FLYOVERBUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_26207A0 = (uint64_t)"BUTTON_TYPE_ADD_TO_FAVORITESBUTTON_TYPE_ADD_TO_GUIDESBUTTON_TYPE_CALLBUTTON_TYPE_DIRECTIONSBUTTON_TYPE_DOWNLOADBUTTON_TYPE_FLYOVERBUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_26207B8 = (uint64_t)"BUTTON_TYPE_ADD_TO_GUIDESBUTTON_TYPE_CALLBUTTON_TYPE_DIRECTIONSBUTTON_TYPE_DOWNLOADBUTTON_TYPE_FLYOVERBUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_26207D0 = (uint64_t)"BUTTON_TYPE_CALLBUTTON_TYPE_DIRECTIONSBUTTON_TYPE_DOWNLOADBUTTON_TYPE_FLYOVERBUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_26207E8 = (uint64_t)"BUTTON_TYPE_DIRECTIONSBUTTON_TYPE_DOWNLOADBUTTON_TYPE_FLYOVERBUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_2620800 = (uint64_t)"BUTTON_TYPE_DOWNLOADBUTTON_TYPE_FLYOVERBUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_2620818 = (uint64_t)"BUTTON_TYPE_FLYOVERBUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_2620830 = (uint64_t)"BUTTON_TYPE_GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_2620848 = (uint64_t)"BUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_2620860 = (uint64_t)"BUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_2620878 = (uint64_t)"BUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_2620890 = (uint64_t)"BUTTON_TYPE_SAVE_TO_LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_26208A8 = (uint64_t)"BUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_26208C0 = (uint64_t)"BUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  qword_26208D8 = (uint64_t)"BUTTON_TYPE_WEBSITE";
  qword_2620770 = (uint64_t)"BUTTON_TYPE_ADD_A_NOTEBUTTON_TYPE_ADD_PHOTOSBUTTON_TYPE_ADD_TO_FAVORITESBUTTON_TYPE_ADD_TO_GU"
                           "IDESBUTTON_TYPE_CALLBUTTON_TYPE_DIRECTIONSBUTTON_TYPE_DOWNLOADBUTTON_TYPE_FLYOVERBUTTON_TYPE_"
                           "GROUPBUTTON_TYPE_MESSAGEBUTTON_TYPE_QUICK_LINKBUTTON_TYPE_REPORT_AN_ISSUEBUTTON_TYPE_SAVE_TO_"
                           "LIBRARYBUTTON_TYPE_SHAREBUTTON_TYPE_UNKNOWNBUTTON_TYPE_WEBSITE";
  *(void *)algn_2620778 = 22;
  dword_2620780 = 15;
  qword_2620790 = 22;
  dword_2620798 = 12;
  qword_26207A8 = 28;
  dword_26207B0 = 13;
  qword_26207C0 = 25;
  dword_26207C8 = 1;
  qword_26207D8 = 16;
  dword_26207E0 = 4;
  qword_26207F0 = 22;
  dword_26207F8 = 9;
  qword_2620808 = 20;
  dword_2620810 = 11;
  qword_2620820 = 19;
  dword_2620828 = 10;
  qword_2620838 = 17;
  dword_2620840 = 8;
  qword_2620850 = 19;
  dword_2620858 = 5;
  qword_2620868 = 22;
  dword_2620870 = 7;
  qword_2620880 = 27;
  dword_2620888 = 2;
  qword_2620898 = 27;
  dword_26208A0 = 14;
  qword_26208B0 = 17;
  dword_26208B8 = 3;
  qword_26208C8 = 19;
  dword_26208D0 = 0;
  qword_26208E0 = 19;
  dword_26208E8 = 6;
  qword_2620908 = (uint64_t)"GROUP_BUTTON_TYPE_GROUP";
  unk_2620910 = 23;
  qword_26208F0 = (uint64_t)"GROUP_BUTTON_TYPE_ACTIONGROUP_BUTTON_TYPE_GROUP";
  *(void *)algn_26208F8 = 24;
  dword_2620900 = 0;
  dword_2620918 = 1;
  qword_2620938 = (uint64_t)"PLATFORM_TYPE_MACOSPLATFORM_TYPE_UNKNOWN";
  unk_2620940 = 19;
  qword_2620950 = (uint64_t)"PLATFORM_TYPE_UNKNOWN";
  unk_2620958 = 21;
  qword_2620920 = (uint64_t)"PLATFORM_TYPE_IOSPLATFORM_TYPE_MACOSPLATFORM_TYPE_UNKNOWN";
  *(void *)algn_2620928 = 17;
  dword_2620930 = 1;
  dword_2620948 = 2;
  dword_2620960 = 0;
  qword_2620980 = (uint64_t)"MODULE_TYPE_ACTIONS_ROWMODULE_TYPE_ACTION_FOOTERMODULE_TYPE_ANNOTATED_LISTMODULE_TYPE_ANNOTATED_PICTUREMODULE_TYPE_APPLE_RATINGSMODULE_TYPE_ATTRIBUTIONMODULE_TYPE_BUSINESS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620998 = (uint64_t)"MODULE_TYPE_ACTION_FOOTERMODULE_TYPE_ANNOTATED_LISTMODULE_TYPE_ANNOTATED_PICTUREMODULE_TYPE_APPLE_RATINGSMODULE_TYPE_ATTRIBUTIONMODULE_TYPE_BUSINESS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_26209B0 = (uint64_t)"MODULE_TYPE_ANNOTATED_LISTMODULE_TYPE_ANNOTATED_PICTUREMODULE_TYPE_APPLE_RATINGSMODULE_TYPE_ATTRIBUTIONMODULE_TYPE_BUSINESS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_26209C8 = (uint64_t)"MODULE_TYPE_ANNOTATED_PICTUREMODULE_TYPE_APPLE_RATINGSMODULE_TYPE_ATTRIBUTIONMODULE_TYPE_BUSINESS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_26209E0 = (uint64_t)"MODULE_TYPE_APPLE_RATINGSMODULE_TYPE_ATTRIBUTIONMODULE_TYPE_BUSINESS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_26209F8 = (uint64_t)"MODULE_TYPE_ATTRIBUTIONMODULE_TYPE_BUSINESS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620A10 = (uint64_t)"MODULE_TYPE_BUSINESS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620A28 = (uint64_t)"MODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620A40 = (uint64_t)"MODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620A58 = (uint64_t)"MODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620A70 = (uint64_t)"MODULE_TYPE_ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620A88 = (uint64_t)"MODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620AA0 = (uint64_t)"MODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620AB8 = (uint64_t)"MODULE_TYPE_HIKING_ASSOCIATIONMODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620AD0 = (uint64_t)"MODULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620AE8 = (uint64_t)"MODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620B00 = (uint64_t)"MODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620B18 = (uint64_t)"MODULE_TYPE_INLINE_MAPMODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620B30 = (uint64_t)"MODULE_TYPE_MESSAGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620B48 = (uint64_t)"MODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620B60 = (uint64_t)"MODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620B78 = (uint64_t)"MODULE_TYPE_NOTEMODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620B90 = (uint64_t)"MODULE_TYPE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620BA8 = (uint64_t)"MODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620BC0 = (uint64_t)"MODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620BD8 = (uint64_t)"MODULE_TYPE_PLACE_BROWSE_CATEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620BF0 = (uint64_t)"MODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620C08 = (uint64_t)"MODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620C20 = (uint64_t)"MODULE_TYPE_QUESTIONNAIRE_SUGGESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620C38 = (uint64_t)"MODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620C50 = (uint64_t)"MODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620C68 = (uint64_t)"MODULE_TYPE_RESERVATIONSMODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620C80 = (uint64_t)"MODULE_TYPE_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620C98 = (uint64_t)"MODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620CB0 = (uint64_t)"MODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620CC8 = (uint64_t)"MODULE_TYPE_TEMPLATE_PLACEMODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620CE0 = (uint64_t)"MODULE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620CF8 = (uint64_t)"MODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620D10 = (uint64_t)"MODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620D28 = (uint64_t)"MODULE_TYPE_TRANSIT_LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620D40 = (uint64_t)"MODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620D58 = (uint64_t)"MODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620D70 = (uint64_t)"MODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620D88 = (uint64_t)"MODULE_TYPE_VENUE_INFOMODULE_TYPE_WEB_CONTENT";
  qword_2620DA0 = (uint64_t)"MODULE_TYPE_WEB_CONTENT";
  qword_2620968 = (uint64_t)"MODULE_TYPE_ABOUTMODULE_TYPE_ACTIONS_ROWMODULE_TYPE_ACTION_FOOTERMODULE_TYPE_ANNOTATED_LISTMO"
                           "DULE_TYPE_ANNOTATED_PICTUREMODULE_TYPE_APPLE_RATINGSMODULE_TYPE_ATTRIBUTIONMODULE_TYPE_BUSINE"
                           "SS_INFOSMODULE_TYPE_BUTTONSMODULE_TYPE_COLLECTIONSMODULE_TYPE_CURATED_COLLECTIONSMODULE_TYPE_"
                           "ENCYCLOPEDICMODULE_TYPE_EV_CHARGERMODULE_TYPE_HIKE_SUGGESTIONMODULE_TYPE_HIKING_ASSOCIATIONMO"
                           "DULE_TYPE_HOURSMODULE_TYPE_INFOSMODULE_TYPE_INFO_PARENTMODULE_TYPE_INLINE_MAPMODULE_TYPE_MESS"
                           "AGEMODULE_TYPE_MESSAGE_HOURSMODULE_TYPE_MINI_PLACE_BROWSE_CATEGORIESMODULE_TYPE_NOTEMODULE_TY"
                           "PE_OFFICIAL_APPSMODULE_TYPE_PHOTOSMODULE_TYPE_PLACECARD_ENRICHMENTMODULE_TYPE_PLACE_BROWSE_CA"
                           "TEGORIESMODULE_TYPE_PLACE_QUESTIONNAIREMODULE_TYPE_PLACE_RIBBONMODULE_TYPE_QUESTIONNAIRE_SUGG"
                           "ESTIONMODULE_TYPE_QUICK_LINKSMODULE_TYPE_RELATED_PLACE_LISTMODULE_TYPE_RESERVATIONSMODULE_TYP"
                           "E_REVIEWSMODULE_TYPE_REVIEW_AND_RATINGMODULE_TYPE_SERVICE_HOURSMODULE_TYPE_TEMPLATE_PLACEMODU"
                           "LE_TYPE_TITLEMODULE_TYPE_TRANSIT_ATTRIBUTIONMODULE_TYPE_TRANSIT_DEPARTUREMODULE_TYPE_TRANSIT_"
                           "LABELSMODULE_TYPE_UNIFIED_ACTION_ROWMODULE_TYPE_UNKNOWNMODULE_TYPE_VENUE_BROWSEMODULE_TYPE_VE"
                           "NUE_INFOMODULE_TYPE_WEB_CONTENT";
  unk_2620970 = 17;
  dword_2620978 = 37;
  qword_2620988 = 23;
  dword_2620990 = 12;
  qword_26209A0 = 25;
  dword_26209A8 = 23;
  qword_26209B8 = 26;
  dword_26209C0 = 19;
  qword_26209D0 = 29;
  dword_26209D8 = 20;
  qword_26209E8 = 25;
  dword_26209F0 = 34;
  qword_2620A00 = 23;
  dword_2620A08 = 24;
  qword_2620A18 = 26;
  dword_2620A20 = 10;
  qword_2620A30 = 19;
  dword_2620A38 = 2;
  qword_2620A48 = 23;
  dword_2620A50 = 29;
  qword_2620A60 = 31;
  dword_2620A68 = 32;
  qword_2620A78 = 24;
  dword_2620A80 = 8;
  qword_2620A90 = 22;
  dword_2620A98 = 43;
  qword_2620AA8 = 27;
  dword_2620AB0 = 46;
  qword_2620AC0 = 30;
  dword_2620AC8 = 44;
  qword_2620AD8 = 17;
  dword_2620AE0 = 9;
  qword_2620AF0 = 17;
  dword_2620AF8 = 5;
  qword_2620B08 = 23;
  dword_2620B10 = 18;
  qword_2620B20 = 22;
  dword_2620B28 = 3;
  qword_2620B38 = 19;
  dword_2620B40 = 21;
  qword_2620B50 = 25;
  dword_2620B58 = 22;
  qword_2620B68 = 40;
  dword_2620B70 = 31;
  qword_2620B80 = 16;
  dword_2620B88 = 45;
  qword_2620B98 = 25;
  dword_2620BA0 = 15;
  qword_2620BB0 = 18;
  dword_2620BB8 = 4;
  qword_2620BC8 = 32;
  dword_2620BD0 = 40;
  qword_2620BE0 = 35;
  dword_2620BE8 = 30;
  qword_2620BF8 = 31;
  dword_2620C00 = 33;
  qword_2620C10 = 24;
  dword_2620C18 = 35;
  qword_2620C28 = 36;
  dword_2620C30 = 42;
  qword_2620C40 = 23;
  dword_2620C48 = 28;
  qword_2620C58 = 30;
  dword_2620C60 = 26;
  qword_2620C70 = 24;
  dword_2620C78 = 14;
  qword_2620C88 = 19;
  dword_2620C90 = 11;
  qword_2620CA0 = 29;
  dword_2620CA8 = 36;
  qword_2620CB8 = 25;
  dword_2620CC0 = 27;
  qword_2620CD0 = 26;
  dword_2620CD8 = 38;
  qword_2620CE8 = 17;
  dword_2620CF0 = 1;
  qword_2620D00 = 31;
  dword_2620D08 = 7;
  qword_2620D18 = 29;
  dword_2620D20 = 6;
  qword_2620D30 = 26;
  dword_2620D38 = 39;
  qword_2620D48 = 30;
  dword_2620D50 = 41;
  qword_2620D60 = 19;
  dword_2620D68 = 0;
  qword_2620D78 = 24;
  dword_2620D80 = 16;
  qword_2620D90 = 22;
  dword_2620D98 = 17;
  qword_2620DA8 = 23;
  dword_2620DB0 = 25;
  qword_2620DD0 = (uint64_t)"MEDIA_LINK_POSITION_BELOWMEDIA_LINK_POSITION_UNKNOWN";
  qword_2620DB8 = (uint64_t)"MEDIA_LINK_POSITION_ABOVEMEDIA_LINK_POSITION_BELOWMEDIA_LINK_POSITION_UNKNOWN";
  unk_2620DC0 = 25;
  dword_2620DC8 = 1;
  qword_2620DD8 = 25;
  dword_2620DE0 = 2;
  qword_2621568 = (uint64_t)"CHILD_ACTION_TYPE_FLYOVERCHILD_ACTION_TYPE_GUIDESCHILD_ACTION_TYPE_LOOK_AROUNDCHILD_ACTION_TYPE_SEARCHCHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  qword_2621580 = (uint64_t)"CHILD_ACTION_TYPE_GUIDESCHILD_ACTION_TYPE_LOOK_AROUNDCHILD_ACTION_TYPE_SEARCHCHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  unk_2621588 = 24;
  qword_2621598 = (uint64_t)"CHILD_ACTION_TYPE_LOOK_AROUNDCHILD_ACTION_TYPE_SEARCHCHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  unk_26215A0 = 29;
  qword_26215B0 = (uint64_t)"CHILD_ACTION_TYPE_SEARCHCHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  unk_26215B8 = 24;
  qword_26215C8 = (uint64_t)"CHILD_ACTION_TYPE_UNKNOWNCHILD_ACTION_TYPE_WEBSITE";
  qword_26215E0 = (uint64_t)"CHILD_ACTION_TYPE_WEBSITE";
  qword_2621558 = 38;
  dword_2621560 = 8;
  qword_2621570 = 25;
  dword_2621578 = 2;
  dword_2621590 = 7;
  dword_26215A8 = 4;
  dword_26215C0 = 3;
  qword_26215D0 = 25;
  dword_26215D8 = 0;
  qword_26215E8 = 25;
  dword_26215F0 = 6;
  dword_2621608 = 86;
  qword_2621610 = (uint64_t)"COMPONENT_TYPE_ACTION_DATACOMPONENT_TYPE_ADDRESSCOMPONENT_TYPE_ADDRESS_COMPONENTSCOMPONENT_TYPE_ADDRESS_OBJECTCOMPONENT_TYPE_AMENITIESCOMPONENT_TYPE_ANNOTATED_ITEM_LISTCOMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621620 = 94;
  qword_2621628 = (uint64_t)"COMPONENT_TYPE_ADDRESSCOMPONENT_TYPE_ADDRESS_COMPONENTSCOMPONENT_TYPE_ADDRESS_OBJECTCOMPONENT_TYPE_AMENITIESCOMPONENT_TYPE_ANNOTATED_ITEM_LISTCOMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621640 = (uint64_t)"COMPONENT_TYPE_ADDRESS_COMPONENTSCOMPONENT_TYPE_ADDRESS_OBJECTCOMPONENT_TYPE_AMENITIESCOMPONENT_TYPE_ANNOTATED_ITEM_LISTCOMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621650 = 101;
  qword_2621658 = (uint64_t)"COMPONENT_TYPE_ADDRESS_OBJECTCOMPONENT_TYPE_AMENITIESCOMPONENT_TYPE_ANNOTATED_ITEM_LISTCOMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621670 = (uint64_t)"COMPONENT_TYPE_AMENITIESCOMPONENT_TYPE_ANNOTATED_ITEM_LISTCOMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621688 = (uint64_t)"COMPONENT_TYPE_ANNOTATED_ITEM_LISTCOMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26216A0 = (uint64_t)"COMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26216B8 = (uint64_t)"COMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26216D0 = (uint64_t)"COMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26216E8 = (uint64_t)"COMPONENT_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_26216F8 = 92;
  qword_2621700 = (uint64_t)"COMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621718 = (uint64_t)"COMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621730 = (uint64_t)"COMPONENT_TYPE_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621748 = (uint64_t)"COMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621758 = 84;
  qword_2621760 = (uint64_t)"COMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621778 = (uint64_t)"COMPONENT_TYPE_COLLECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621788 = 76;
  qword_2621790 = (uint64_t)"COMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26217A8 = (uint64_t)"COMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_26217B8 = 83;
  qword_26217C0 = (uint64_t)"COMPONENT_TYPE_ENHANCED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_26217D0 = 88;
  qword_26217D8 = (uint64_t)"COMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_26217E8 = 95;
  qword_26217F0 = (uint64_t)"COMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621800 = 93;
  qword_2621808 = (uint64_t)"COMPONENT_TYPE_ENTITYCOMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621820 = (uint64_t)"COMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621838 = (uint64_t)"COMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621848 = 97;
  qword_2621850 = (uint64_t)"COMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621860 = 85;
  qword_2621868 = (uint64_t)"COMPONENT_TYPE_EXTERNAL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621880 = (uint64_t)"COMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621898 = (uint64_t)"COMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26218B0 = (uint64_t)"COMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_26218C0 = 103;
  qword_26218C8 = (uint64_t)"COMPONENT_TYPE_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26218E0 = (uint64_t)"COMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26218F8 = (uint64_t)"COMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621908 = 82;
  qword_2621910 = (uint64_t)"COMPONENT_TYPE_HIKE_ASSOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621920 = 104;
  qword_2621928 = (uint64_t)"COMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621938 = 106;
  qword_2621940 = (uint64_t)"COMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621950 = 105;
  qword_2621958 = (uint64_t)"COMPONENT_TYPE_HOURSCOMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621970 = (uint64_t)"COMPONENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621988 = (uint64_t)"COMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621998 = 77;
  qword_26219A0 = (uint64_t)"COMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_26219B0 = 87;
  qword_26219B8 = (uint64_t)"COMPONENT_TYPE_LINKED_SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26219D0 = (uint64_t)"COMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_26219E8 = (uint64_t)"COMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621A00 = (uint64_t)"COMPONENT_TYPE_MINI_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621A10 = 72;
  qword_2621A18 = (uint64_t)"COMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621A30 = (uint64_t)"COMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621A48 = (uint64_t)"COMPONENT_TYPE_OFFLINE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621A60 = (uint64_t)"COMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621A78 = (uint64_t)"COMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621A90 = (uint64_t)"COMPONENT_TYPE_PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621AA8 = (uint64_t)"COMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621AC0 = (uint64_t)"COMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621AD8 = (uint64_t)"COMPONENT_TYPE_PLACE_BROWSE_CATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621AF0 = (uint64_t)"COMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621B00 = 74;
  qword_2621B08 = (uint64_t)"COMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621B20 = (uint64_t)"COMPONENT_TYPE_PLACE_QUESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621B30 = 73;
  qword_2621B38 = (uint64_t)"COMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621B48 = 96;
  qword_2621B50 = (uint64_t)"COMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621B68 = (uint64_t)"COMPONENT_TYPE_PRICE_DESCRIPTIONCOMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621B80 = (uint64_t)"COMPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621B98 = (uint64_t)"COMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621BA8 = 71;
  qword_2621BB0 = (uint64_t)"COMPONENT_TYPE_QUICK_LINKCOMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621BC8 = (uint64_t)"COMPONENT_TYPE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621BE0 = (uint64_t)"COMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621BF8 = (uint64_t)"COMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621C10 = (uint64_t)"COMPONENT_TYPE_REFRESH_IDCOMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621C20 = 100;
  qword_2621C28 = (uint64_t)"COMPONENT_TYPE_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621C38 = 66;
  qword_2621C40 = (uint64_t)"COMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621C58 = (uint64_t)"COMPONENT_TYPE_RESULT_SNIPPETCOMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621C70 = (uint64_t)"COMPONENT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621C88 = (uint64_t)"COMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621CA0 = (uint64_t)"COMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621CB0 = 90;
  qword_2621CB8 = (uint64_t)"COMPONENT_TYPE_SEARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621CC8 = 102;
  qword_2621CD0 = (uint64_t)"COMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621CE8 = (uint64_t)"COMPONENT_TYPE_SPATIAL_LOOKUP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621D00 = (uint64_t)"COMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621D18 = (uint64_t)"COMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621D28 = 81;
  qword_2621D30 = (uint64_t)"COMPONENT_TYPE_STOREFRONT_PRESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621D48 = (uint64_t)"COMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621D60 = (uint64_t)"COMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621D78 = (uint64_t)"COMPONENT_TYPE_TEMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621D88 = 89;
  qword_2621D90 = (uint64_t)"COMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621DA8 = (uint64_t)"COMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621DC0 = (uint64_t)"COMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621DD0 = 99;
  qword_2621DD8 = (uint64_t)"COMPONENT_TYPE_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621DE8 = 98;
  qword_2621DF0 = (uint64_t)"COMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621E08 = (uint64_t)"COMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621E20 = (uint64_t)"COMPONENT_TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621E38 = (uint64_t)"COMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621E50 = (uint64_t)"COMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621E68 = (uint64_t)"COMPONENT_TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621E78 = 79;
  qword_2621E80 = (uint64_t)"COMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621E90 = 91;
  qword_2621E98 = (uint64_t)"COMPONENT_TYPE_TRANSIT_SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621EB0 = (uint64_t)"COMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621EC8 = (uint64_t)"COMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621ED8 = 67;
  qword_2621EE0 = (uint64_t)"COMPONENT_TYPE_TRANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621EF0 = 68;
  qword_2621EF8 = (uint64_t)"COMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621F10 = (uint64_t)"COMPONENT_TYPE_UNKNOWNCOMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621F28 = (uint64_t)"COMPONENT_TYPE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  dword_2621F38 = 78;
  qword_2621F40 = (uint64_t)"COMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621F58 = (uint64_t)"COMPONENT_TYPE_WIFI_FINGERPRINT";
  qword_2621F88 = (uint64_t)"BROOKLYN_ERROR_STATE_SUPPRESSEDBROOKLYN_ERROR_STATE_UNKNOWN";
  unk_2621F90 = 31;
  qword_2621F70 = (uint64_t)"BROOKLYN_ERROR_STATE_BLOCKEDBROOKLYN_ERROR_STATE_SUPPRESSEDBROOKLYN_ERROR_STATE_UNKNOWN";
  qword_2621F78 = 28;
  dword_2621F80 = 2;
  dword_2621F98 = 1;
  qword_2621FA0 = (uint64_t)"BROOKLYN_ERROR_STATE_UNKNOWN";
  unk_2621FA8 = 28;
  dword_2621FB0 = 0;
  qword_2621FD0 = (uint64_t)"RAP_FLOW_EVRAP_FLOW_HIKING_TRAILRAP_FLOW_HIKING_TRAILHEADRAP_FLOW_LOCALITYRAP_FLOW_POIRAP_FLOW_TRANSITRAP_FLOW_UNKNOWN";
  unk_2621FD8 = 11;
  qword_2621FE8 = (uint64_t)"RAP_FLOW_HIKING_TRAILRAP_FLOW_HIKING_TRAILHEADRAP_FLOW_LOCALITYRAP_FLOW_POIRAP_FLOW_TRANSITRAP_FLOW_UNKNOWN";
  qword_2622000 = (uint64_t)"RAP_FLOW_HIKING_TRAILHEADRAP_FLOW_LOCALITYRAP_FLOW_POIRAP_FLOW_TRANSITRAP_FLOW_UNKNOWN";
  unk_2622008 = 25;
  qword_2622018 = (uint64_t)"RAP_FLOW_LOCALITYRAP_FLOW_POIRAP_FLOW_TRANSITRAP_FLOW_UNKNOWN";
  unk_2622020 = 17;
  qword_2622030 = (uint64_t)"RAP_FLOW_POIRAP_FLOW_TRANSITRAP_FLOW_UNKNOWN";
  qword_2622048 = (uint64_t)"RAP_FLOW_TRANSITRAP_FLOW_UNKNOWN";
  qword_2621FB8 = (uint64_t)"RAP_FLOW_ADDRESSRAP_FLOW_EVRAP_FLOW_HIKING_TRAILRAP_FLOW_HIKING_TRAILHEADRAP_FLOW_LOCALITYRAP"
                           "_FLOW_POIRAP_FLOW_TRANSITRAP_FLOW_UNKNOWN";
  qword_2621FC0 = 16;
  dword_2621FC8 = 6;
  dword_2621FE0 = 3;
  qword_2621FF0 = 21;
  dword_2621FF8 = 4;
  dword_2622010 = 5;
  dword_2622028 = 2;
  qword_2622038 = 12;
  dword_2622040 = 1;
  qword_2622050 = 16;
  dword_2622058 = 7;
  qword_2622060 = (uint64_t)"RAP_FLOW_UNKNOWN";
  unk_2622068 = 16;
  dword_2622070 = 0;
  qword_2622090 = (uint64_t)"UNIT_TYPE_CUBIC_KILOMETERSUNIT_TYPE_CUBIC_METERSUNIT_TYPE_KILOMETERSUNIT_TYPE_METERSUNIT_TYPE_MILLISECONDSUNIT_TYPE_NONEUNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  unk_2622098 = 26;
  qword_26220A8 = (uint64_t)"UNIT_TYPE_CUBIC_METERSUNIT_TYPE_KILOMETERSUNIT_TYPE_METERSUNIT_TYPE_MILLISECONDSUNIT_TYPE_NONEUNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  qword_26220C0 = (uint64_t)"UNIT_TYPE_KILOMETERSUNIT_TYPE_METERSUNIT_TYPE_MILLISECONDSUNIT_TYPE_NONEUNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  qword_26220D8 = (uint64_t)"UNIT_TYPE_METERSUNIT_TYPE_MILLISECONDSUNIT_TYPE_NONEUNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  qword_26220F0 = (uint64_t)"UNIT_TYPE_MILLISECONDSUNIT_TYPE_NONEUNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  qword_2622108 = (uint64_t)"UNIT_TYPE_NONEUNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  qword_2622120 = (uint64_t)"UNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  qword_2622138 = (uint64_t)"UNIT_TYPE_SQUARE_METERS";
  qword_2622078 = (uint64_t)"UNIT_TYPE_COUNTUNIT_TYPE_CUBIC_KILOMETERSUNIT_TYPE_CUBIC_METERSUNIT_TYPE_KILOMETERSUNIT_TYPE_"
                           "METERSUNIT_TYPE_MILLISECONDSUNIT_TYPE_NONEUNIT_TYPE_SQUARE_KILOMETERSUNIT_TYPE_SQUARE_METERS";
  unk_2622080 = 15;
  dword_2622088 = 1;
  dword_26220A0 = 7;
  qword_26220B0 = 22;
  dword_26220B8 = 4;
  qword_26220C8 = 20;
  dword_26220D0 = 5;
  qword_26220E0 = 16;
  dword_26220E8 = 2;
  qword_26220F8 = 22;
  dword_2622100 = 8;
  qword_2622110 = 14;
  dword_2622118 = 0;
  qword_2622128 = 27;
  dword_2622130 = 6;
  qword_2622140 = 23;
  dword_2622148 = 3;
  qword_2622168 = (uint64_t)"SUGGEST_EDITUNKNOWN";
  unk_2622170 = 12;
  qword_2622180 = (uint64_t)"UNKNOWN";
  unk_2622188 = 7;
  qword_2622150 = (uint64_t)"REPORT_AN_ISSUESUGGEST_EDITUNKNOWN";
  *(void *)algn_2622158 = 15;
  dword_2622160 = 1;
  dword_2622178 = 2;
  dword_2622190 = 0;
  qword_26221B0 = (uint64_t)"SEARCH_TYPE_BEACH_AND_RELATED_CONCEPTSEARCH_TYPE_BRAND_PROFILESEARCH_TYPE_DEFAULTSEARCH_TYPE_REDOSEARCH_TYPE_UNKNOWN";
  qword_26221C8 = (uint64_t)"SEARCH_TYPE_BRAND_PROFILESEARCH_TYPE_DEFAULTSEARCH_TYPE_REDOSEARCH_TYPE_UNKNOWN";
  unk_26221D0 = 25;
  qword_26221E0 = (uint64_t)"SEARCH_TYPE_DEFAULTSEARCH_TYPE_REDOSEARCH_TYPE_UNKNOWN";
  qword_26221F8 = (uint64_t)"SEARCH_TYPE_REDOSEARCH_TYPE_UNKNOWN";
  unk_2622200 = 16;
  qword_2622198 = (uint64_t)"SEARCH_TYPE_AUTO_REDOSEARCH_TYPE_BEACH_AND_RELATED_CONCEPTSEARCH_TYPE_BRAND_PROFILESEARCH_TYP"
                           "E_DEFAULTSEARCH_TYPE_REDOSEARCH_TYPE_UNKNOWN";
  unk_26221A0 = 21;
  dword_26221A8 = 4;
  qword_26221B8 = 37;
  dword_26221C0 = 5;
  dword_26221D8 = 3;
  qword_26221E8 = 19;
  dword_26221F0 = 1;
  dword_2622208 = 2;
  qword_2622210 = (uint64_t)"SEARCH_TYPE_UNKNOWN";
  unk_2622218 = 19;
  dword_2622220 = 0;
  qword_2622240 = (uint64_t)"SUBSTITUTE_TYPE_RELATED_SEARCH_SUGGESTIONSUBSTITUTE_TYPE_UNKNOWN";
  unk_2622248 = 41;
  qword_2622258 = (uint64_t)"SUBSTITUTE_TYPE_UNKNOWN";
  unk_2622260 = 23;
  qword_2622228 = (uint64_t)"SUBSTITUTE_TYPE_INTERPRETED_QUERYSUBSTITUTE_TYPE_RELATED_SEARCH_SUGGESTIONSUBSTITUTE_TYPE_UNKNOWN";
  unk_2622230 = 33;
  dword_2622238 = 1;
  dword_2622250 = 2;
  dword_2622268 = 0;
  qword_2622288 = (uint64_t)"SEARCH_RESULT_TYPE_DYMSEARCH_RESULT_TYPE_NO_RESULTSEARCH_RESULT_TYPE_UNKNOWNSEARCH_RESULT_TYPE_WITH_HINT";
  qword_26222B8 = (uint64_t)"SEARCH_RESULT_TYPE_UNKNOWNSEARCH_RESULT_TYPE_WITH_HINT";
  qword_2622498 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_UNKNOWN";
  qword_2622528 = (uint64_t)"SIGNIFICANCE_DEFAULTSIGNIFICANCE_EXTRA_EXTRA_HIGHSIGNIFICANCE_EXTRA_EXTRA_LOWSIGNIFICANCE_EXT"
                           "RA_HIGHSIGNIFICANCE_EXTRA_LOWSIGNIFICANCE_HIGHSIGNIFICANCE_LOWSIGNIFICANCE_MEDIUM";
  qword_26230E0 = (uint64_t)"MAPS_SEARCH_HOME_SECTION_TYPE_SEARCH_BROWSE_CATEGORY_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_UNKNOWN";
  qword_2623230 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_CONTENT_TYPE_EDITORS_PICKS_GUIDESGUIDES_HOME_REPEATABLE_SECTION_CONTENT_TYPE_UNKNOWN";
  dword_2623498 = 22;
  qword_2623488 = (uint64_t)"REQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623470 = (uint64_t)"REQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623478 = 36;
  dword_2623480 = 21;
  qword_2623490 = 33;
  dword_2623450 = 24;
  qword_2623458 = (uint64_t)"REQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623460 = 32;
  dword_2623468 = 54;
  qword_2623440 = (uint64_t)"REQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623448 = 33;
  qword_2623428 = (uint64_t)"REQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623430 = 34;
  dword_2623438 = 43;
  qword_2623410 = (uint64_t)"REQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623418 = 43;
  dword_2623408 = 12;
  dword_2623420 = 42;
  qword_26233F8 = (uint64_t)"REQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623400 = 28;
  qword_26233E0 = (uint64_t)"REQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26233E8 = 38;
  dword_26233F0 = 3;
  dword_26233C0 = 30;
  qword_26233C8 = (uint64_t)"REQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26233D0 = 39;
  dword_26233D8 = 11;
  qword_26233B0 = (uint64_t)"REQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623398 = (uint64_t)"REQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26233A0 = 33;
  dword_26233A8 = 36;
  qword_26233B8 = 25;
  qword_2623380 = (uint64_t)"REQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623388 = 36;
  dword_2623378 = 16;
  dword_2623390 = 26;
  qword_2623368 = (uint64_t)"REQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623350 = (uint64_t)"REQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDREQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623358 = 40;
  dword_2623360 = 41;
  qword_2623370 = 40;
  qword_2623338 = (uint64_t)"REQUEST_TYPE_BATCH_CATEGORY_LOOKUPREQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDREQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623340 = 34;
  dword_2623330 = 10;
  dword_2623348 = 40;
  qword_2623320 = (uint64_t)"REQUEST_TYPE_AUTOCOMPLETEREQUEST_TYPE_BATCH_CATEGORY_LOOKUPREQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDREQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623328 = 25;
  qword_2623308 = (uint64_t)"REQUEST_TYPE_ALL_GUIDES_LOCATIONSREQUEST_TYPE_AUTOCOMPLETEREQUEST_TYPE_BATCH_CATEGORY_LOOKUPREQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDREQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_2623310 = 33;
  dword_2623318 = 52;
  qword_26232F0 = (uint64_t)"REQUEST_TYPE_ALL_COLLECTIONS_VIEWREQUEST_TYPE_ALL_GUIDES_LOCATIONSREQUEST_TYPE_AUTOCOMPLETEREQUEST_TYPE_BATCH_CATEGORY_LOOKUPREQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDREQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26232F8 = 33;
  dword_26232E8 = 48;
  dword_2623300 = 47;
  qword_26232D8 = (uint64_t)"REQUEST_TYPE_AIRPORT_ENTITY_PLACE_LOOKUPREQUEST_TYPE_ALL_COLLECTIONS_VIEWREQUEST_TYPE_ALL_GUIDES_LOCATIONSREQUEST_TYPE_AUTOCOMPLETEREQUEST_TYPE_BATCH_CATEGORY_LOOKUPREQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDREQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26232E0 = 40;
  qword_26232C0 = (uint64_t)"REQUEST_TYPE_ADDRESS_RECOMMENDATIONREQUEST_TYPE_AIRPORT_ENTITY_PLACE_LOOKUPREQUEST_TYPE_ALL_COLLECTIONS_VIEWREQUEST_TYPE_ALL_GUIDES_LOCATIONSREQUEST_TYPE_AUTOCOMPLETEREQUEST_TYPE_BATCH_CATEGORY_LOOKUPREQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDREQUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CANONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGORYREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26232C8 = 35;
  dword_26232D0 = 62;
  qword_26232A8 = (uint64_t)"REQUEST_TYPE_ADDRESS_OBJECT_GEOCODINGREQUEST_TYPE_ADDRESS_RECOMMENDATIONREQUEST_TYPE_AIRPORT_"
                           "ENTITY_PLACE_LOOKUPREQUEST_TYPE_ALL_COLLECTIONS_VIEWREQUEST_TYPE_ALL_GUIDES_LOCATIONSREQUEST_"
                           "TYPE_AUTOCOMPLETEREQUEST_TYPE_BATCH_CATEGORY_LOOKUPREQUEST_TYPE_BATCH_MERCHANT_LOOKUP_BRANDRE"
                           "QUEST_TYPE_BATCH_POPULAR_NEARBY_SEARCHREQUEST_TYPE_BATCH_REVERSE_GEOCODINGREQUEST_TYPE_BATCH_"
                           "SPATIAL_LOOKUPREQUEST_TYPE_BRAND_LOOKUPREQUEST_TYPE_BROWSE_CATEGORY_SUGGESTIONREQUEST_TYPE_CA"
                           "NONICAL_LOCATION_SEARCHREQUEST_TYPE_CATEGORY_SEARCHREQUEST_TYPE_CHILD_PLACE_LOOKUP_BY_CATEGOR"
                           "YREQUEST_TYPE_COLLECTION_SUGGESTIONREQUEST_TYPE_DATASET_STATUS_CHECKREQUEST_TYPE_EXTENDED_GEO"
                           "_LOOKUPREQUEST_TYPE_EXTERNAL_TRANSIT_LOOKUPREQUEST_TYPE_FEATURE_ID_GEOCODINGREQUEST_TYPE_GEOC"
                           "ODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGE"
                           "STIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQ"
                           "UEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOK"
                           "UPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD"
                           "_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFL"
                           "INE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQ"
                           "UEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LO"
                           "OKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARB"
                           "Y_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LO"
                           "OKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_"
                           "TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYP"
                           "E_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE"
                           "_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE"
                           "_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWOR"
                           "D_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26232B0 = 37;
  dword_26232B8 = 19;
  qword_2623290 = (uint64_t)"QUERY_UNDERSTANDING_TAXONOMY_TYPE_UNKNOWN";
  unk_2623298 = 41;
  dword_2623288 = 1;
  dword_26232A0 = 0;
  qword_2623278 = (uint64_t)"QUERY_UNDERSTANDING_TAXONOMY_TYPE_CATEGORYQUERY_UNDERSTANDING_TAXONOMY_TYPE_UNKNOWN";
  unk_2623280 = 42;
  qword_2623260 = (uint64_t)"QUERY_UNDERSTANDING_TAXONOMY_TYPE_BRANDQUERY_UNDERSTANDING_TAXONOMY_TYPE_CATEGORYQUERY_UNDERS"
                           "TANDING_TAXONOMY_TYPE_UNKNOWN";
  *(void *)algn_2623268 = 39;
  dword_2623270 = 2;
  qword_2623218 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_CONTENT_TYPE_EDITORIAL_GUIDESGUIDES_HOME_REPEATABLE_SECTION_CO"
                           "NTENT_TYPE_EDITORS_PICKS_GUIDESGUIDES_HOME_REPEATABLE_SECTION_CONTENT_TYPE_UNKNOWN";
  dword_2623240 = 1;
  qword_2623248 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_CONTENT_TYPE_UNKNOWN";
  unk_2623250 = 51;
  dword_2623258 = 0;
  dword_2623228 = 2;
  qword_2623238 = 64;
  qword_2623220 = 60;
  qword_2623200 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_TYPE_UNKNOWN";
  unk_2623208 = 43;
  dword_2623210 = 0;
  qword_26231D0 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_TYPE_LOCATIONSGUIDES_HOME_REPEATABLE_SECTION_TYPE_PUBLISHERGUIDES_HOME_REPEATABLE_SECTION_TYPE_UNKNOWN";
  qword_26231D8 = 45;
  qword_26231E8 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_TYPE_PUBLISHERGUIDES_HOME_REPEATABLE_SECTION_TYPE_UNKNOWN";
  unk_26231F0 = 45;
  dword_26231F8 = 2;
  dword_26231E0 = 4;
  qword_2623158 = (uint64_t)"GUIDES_HOME_FIXED_SECTION_TYPE_FILTERED_GUIDESGUIDES_HOME_FIXED_SECTION_TYPE_FILTERSGUIDES_HOME_FIXED_SECTION_TYPE_UNKNOWN";
  qword_26231B8 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_TYPE_GUIDES_VERTICAL_CAROUSELGUIDES_HOME_REPEATABLE_SECTION_TYPE_LOCATIONSGUIDES_HOME_REPEATABLE_SECTION_TYPE_PUBLISHERGUIDES_HOME_REPEATABLE_SECTION_TYPE_UNKNOWN";
  unk_26231C0 = 60;
  dword_26231B0 = 1;
  dword_26231C8 = 3;
  qword_26231A0 = (uint64_t)"GUIDES_HOME_REPEATABLE_SECTION_TYPE_GUIDES_HORIZONTAL_CAROUSELGUIDES_HOME_REPEATABLE_SECTION_"
                           "TYPE_GUIDES_VERTICAL_CAROUSELGUIDES_HOME_REPEATABLE_SECTION_TYPE_LOCATIONSGUIDES_HOME_REPEATA"
                           "BLE_SECTION_TYPE_PUBLISHERGUIDES_HOME_REPEATABLE_SECTION_TYPE_UNKNOWN";
  *(void *)algn_26231A8 = 62;
  qword_2623188 = (uint64_t)"GUIDES_HOME_FIXED_SECTION_TYPE_UNKNOWN";
  unk_2623190 = 38;
  dword_2623198 = 0;
  qword_2623170 = (uint64_t)"GUIDES_HOME_FIXED_SECTION_TYPE_FILTERSGUIDES_HOME_FIXED_SECTION_TYPE_UNKNOWN";
  unk_2623178 = 38;
  dword_2623168 = 3;
  dword_2623180 = 2;
  dword_2623150 = 1;
  qword_2623160 = 46;
  qword_2623140 = (uint64_t)"GUIDES_HOME_FIXED_SECTION_TYPE_FEATURED_GUIDESGUIDES_HOME_FIXED_SECTION_TYPE_FILTERED_GUIDESG"
                           "UIDES_HOME_FIXED_SECTION_TYPE_FILTERSGUIDES_HOME_FIXED_SECTION_TYPE_UNKNOWN";
  *(void *)algn_2623148 = 46;
  qword_2623110 = (uint64_t)"GUIDES_HOME_RESULT_FILTER_TYPE_CONCEPTGUIDES_HOME_RESULT_FILTER_TYPE_UNKNOWN";
  *(void *)algn_2623118 = 38;
  qword_2623128 = (uint64_t)"GUIDES_HOME_RESULT_FILTER_TYPE_UNKNOWN";
  unk_2623130 = 38;
  dword_2623138 = 0;
  dword_2623120 = 1;
  qword_26230F8 = (uint64_t)"MAPS_SEARCH_HOME_SECTION_TYPE_UNKNOWN";
  unk_2623100 = 37;
  dword_2623108 = 0;
  dword_2621AE8 = 70;
  qword_26230E8 = 70;
  qword_26230C8 = (uint64_t)"MAPS_SEARCH_HOME_SECTION_TYPE_PUBLISHER_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_SEARCH_BROWSE_CATEGORY_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_UNKNOWN";
  qword_26230D0 = 57;
  dword_26230F0 = 1;
  dword_26230D8 = 3;
  qword_2623050 = (uint64_t)"PUBLISHER_VIEW_RESULT_FILTER_TYPE_KEYWORDPUBLISHER_VIEW_RESULT_FILTER_TYPE_UNKNOWN";
  dword_26230A8 = 5;
  qword_26230B0 = (uint64_t)"MAPS_SEARCH_HOME_SECTION_TYPE_PLACE_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_PUBLISHER_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_SEARCH_BROWSE_CATEGORY_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_UNKNOWN";
  unk_26230B8 = 53;
  dword_26230C0 = 4;
  qword_2623098 = (uint64_t)"MAPS_SEARCH_HOME_SECTION_TYPE_GUIDE_LOCATION_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_PLACE_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_PUBLISHER_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_SEARCH_BROWSE_CATEGORY_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_UNKNOWN";
  unk_26230A0 = 62;
  qword_2623080 = (uint64_t)"MAPS_SEARCH_HOME_SECTION_TYPE_COLLECTION_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_GUIDE"
                           "_LOCATION_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_PLACE_SUGGESTION_RESULTMAPS_SEARCH_H"
                           "OME_SECTION_TYPE_PUBLISHER_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_SEARCH_BROWSE_CATEG"
                           "ORY_SUGGESTION_RESULTMAPS_SEARCH_HOME_SECTION_TYPE_UNKNOWN";
  qword_2623088 = 58;
  dword_2623090 = 2;
  qword_2623038 = (uint64_t)"PUBLISHER_VIEW_RESULT_FILTER_TYPE_ADDRESSPUBLISHER_VIEW_RESULT_FILTER_TYPE_KEYWORDPUBLISHER_V"
                           "IEW_RESULT_FILTER_TYPE_UNKNOWN";
  dword_2623060 = 2;
  qword_2623068 = (uint64_t)"PUBLISHER_VIEW_RESULT_FILTER_TYPE_UNKNOWN";
  unk_2623070 = 41;
  dword_2623078 = 0;
  dword_2623048 = 1;
  qword_2623058 = 41;
  qword_2623040 = 41;
  qword_2622FD8 = (uint64_t)"RELEVANCE";
  dword_2623018 = 2;
  qword_2623020 = (uint64_t)"ALL_COLLECTIONS_VIEW_RESULT_FILTER_TYPE_UNKNOWN";
  unk_2623028 = 47;
  dword_2623030 = 0;
  qword_2623008 = (uint64_t)"ALL_COLLECTIONS_VIEW_RESULT_FILTER_TYPE_KEYWORDALL_COLLECTIONS_VIEW_RESULT_FILTER_TYPE_UNKNOWN";
  unk_2623010 = 47;
  qword_2622FF0 = (uint64_t)"ALL_COLLECTIONS_VIEW_RESULT_FILTER_TYPE_ADDRESSALL_COLLECTIONS_VIEW_RESULT_FILTER_TYPE_KEYWOR"
                           "DALL_COLLECTIONS_VIEW_RESULT_FILTER_TYPE_UNKNOWN";
  *(void *)algn_2622FF8 = 47;
  dword_2623000 = 1;
  qword_2622FC0 = (uint64_t)"RATINGRELEVANCE";
  unk_2622FC8 = 6;
  dword_2622FD0 = 1;
  qword_2622FE0 = 9;
  dword_2622FE8 = 0;
  qword_2622FA8 = (uint64_t)"PRICERATINGRELEVANCE";
  unk_2622FB0 = 5;
  qword_2622F90 = (uint64_t)"DISTANCEPRICERATINGRELEVANCE";
  *(void *)algn_2622F98 = 8;
  dword_2622FB8 = 3;
  dword_2622FA0 = 2;
  qword_2622F78 = (uint64_t)"UNKNOWN";
  qword_2622F60 = (uint64_t)"SECTION_ONLY_FOR_QUERYUNKNOWN";
  qword_2622F68 = 22;
  qword_2622F80 = 7;
  dword_2622F88 = 0;
  dword_2622F70 = 2;
  qword_2622E58 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_ALL_ENTRIESAUTOCOMPLETE_PARAMETERS_ALL_ENTRIES_WITH_BROWSEAUTOCOMPLETE_PARAMETERS_BRAND_PROFILE_SEARCHAUTOCOMPLETE_PARAMETERS_COLLECTIONS_ONLYAUTOCOMPLETE_PARAMETERS_FULL_ENTRIES_ONLYAUTOCOMPLETE_PARAMETERS_LOCALITIES_AND_LANDMARKSAUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  qword_2622F48 = (uint64_t)"INTERLEAVEDSECTION_ONLY_FOR_QUERYUNKNOWN";
  qword_2622F50 = 11;
  dword_2622F58 = 1;
  dword_2622F40 = 6;
  qword_2622F30 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  qword_2622F18 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622F20 = 35;
  dword_2622F28 = 4;
  qword_2622F38 = 36;
  qword_2622F00 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622F08 = 40;
  dword_2622EF8 = 8;
  dword_2622F10 = 9;
  qword_2622EE8 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622EF0 = 45;
  qword_2622ED0 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_LOCALITIES_AND_LANDMARKSAUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622ED8 = 48;
  dword_2622EE0 = 2;
  qword_2622EB8 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_FULL_ENTRIES_ONLYAUTOCOMPLETE_PARAMETERS_LOCALITIES_AND_LANDMARKSAUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622EC0 = 41;
  dword_2622EB0 = 10;
  dword_2622EC8 = 0;
  qword_2622EA0 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_COLLECTIONS_ONLYAUTOCOMPLETE_PARAMETERS_FULL_ENTRIES_ONLYAUTOCOMPLETE_PARAMETERS_LOCALITIES_AND_LANDMARKSAUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622EA8 = 40;
  qword_2622E88 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_BRAND_PROFILE_SEARCHAUTOCOMPLETE_PARAMETERS_COLLECTIONS_ONLYAUTOCOMPLETE_PARAMETERS_FULL_ENTRIES_ONLYAUTOCOMPLETE_PARAMETERS_LOCALITIES_AND_LANDMARKSAUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622E90 = 44;
  dword_2622E98 = 7;
  qword_2622E40 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_ALL_ENTRIESAUTOCOMPLETE_PARAMETER"
                           "S_ALL_ENTRIES_WITH_BROWSEAUTOCOMPLETE_PARAMETERS_BRAND_PROFILE_SEARCHAUTOCOMPLETE_PARAMETERS_"
                           "COLLECTIONS_ONLYAUTOCOMPLETE_PARAMETERS_FULL_ENTRIES_ONLYAUTOCOMPLETE_PARAMETERS_LOCALITIES_A"
                           "ND_LANDMARKSAUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_"
                           "ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  *(void *)algn_2622E48 = 36;
  qword_2622E70 = (uint64_t)"AUTOCOMPLETE_PARAMETERS_ALL_ENTRIES_WITH_BROWSEAUTOCOMPLETE_PARAMETERS_BRAND_PROFILE_SEARCHAUTOCOMPLETE_PARAMETERS_COLLECTIONS_ONLYAUTOCOMPLETE_PARAMETERS_FULL_ENTRIES_ONLYAUTOCOMPLETE_PARAMETERS_LOCALITIES_AND_LANDMARKSAUTOCOMPLETE_PARAMETERS_OFFLINE_REGION_SEARCHAUTOCOMPLETE_PARAMETERS_POI_ADDRESS_ONLYAUTOCOMPLETE_PARAMETERS_SIRI_SEARCHAUTOCOMPLETE_PARAMETERS_VENUE_SEARCH";
  unk_2622E78 = 47;
  dword_2622E68 = 1;
  dword_2622E80 = 3;
  dword_2622E50 = 5;
  qword_2622E60 = 35;
  qword_2622E28 = (uint64_t)"AUTOCOMPLETE_ORIGINATION_TYPE_SEARCH_ALONG_ROUTE";
  unk_2622E30 = 48;
  dword_2622E38 = 2;
  qword_2622E10 = (uint64_t)"AUTOCOMPLETE_ORIGINATION_TYPE_ROUTE_PLANNINGAUTOCOMPLETE_ORIGINATION_TYPE_SEARCH_ALONG_ROUTE";
  unk_2622E18 = 44;
  qword_2622DF8 = (uint64_t)"AUTOCOMPLETE_ORIGINATION_TYPE_DEFAULTAUTOCOMPLETE_ORIGINATION_TYPE_ROUTE_PLANNINGAUTOCOMPLETE_ORIGINATION_TYPE_SEARCH_ALONG_ROUTE";
  unk_2622E00 = 37;
  dword_2622E20 = 1;
  dword_2622E08 = 0;
  qword_2622D20 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622DE0 = (uint64_t)"AUTOCOMPLETE_ORIGINATION_TYPE_ADD_FAVORITESAUTOCOMPLETE_ORIGINATION_TYPE_DEFAULTAUTOCOMPLETE_"
                           "ORIGINATION_TYPE_ROUTE_PLANNINGAUTOCOMPLETE_ORIGINATION_TYPE_SEARCH_ALONG_ROUTE";
  *(void *)algn_2622DE8 = 43;
  dword_2622DF0 = 3;
  dword_2622DD8 = 0;
  qword_2622DB0 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622DC8 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622DB8 = 44;
  dword_2622DC0 = 15;
  qword_2622DD0 = 35;
  qword_2622D98 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  dword_2622D90 = 29;
  qword_2622DA0 = 53;
  dword_2622DA8 = 28;
  qword_2622D68 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622D80 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622D70 = 51;
  dword_2622D78 = 22;
  qword_2622D88 = 54;
  qword_2622D50 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  dword_2622D48 = 21;
  qword_2622D58 = 52;
  dword_2622D60 = 24;
  qword_2622D38 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  dword_2621F08 = 62;
  qword_2622D40 = 62;
  dword_2622D30 = 18;
  dword_2622508 = 1;
  dword_2622D18 = 20;
  qword_2622D28 = 54;
  qword_26224F8 = (uint64_t)"TREE_DISPLAY_TYPE_NONETREE_DISPLAY_TYPE_SPARSE";
  unk_2622500 = 22;
  qword_26224E0 = (uint64_t)"TREE_DISPLAY_TYPE_DENSETREE_DISPLAY_TYPE_NONETREE_DISPLAY_TYPE_SPARSE";
  unk_26224E8 = 23;
  dword_26224F0 = 3;
  qword_26224B0 = (uint64_t)"TREE_DISPLAY_TYPE_ALLTREE_DISPLAY_TYPE_DEFAULTTREE_DISPLAY_TYPE_DENSETREE_DISPLAY_TYPE_NONETR"
                           "EE_DISPLAY_TYPE_SPARSE";
  *(void *)algn_26224B8 = 21;
  dword_26224C0 = 2;
  qword_26224C8 = (uint64_t)"TREE_DISPLAY_TYPE_DEFAULTTREE_DISPLAY_TYPE_DENSETREE_DISPLAY_TYPE_NONETREE_DISPLAY_TYPE_SPARSE";
  unk_26224D0 = 25;
  dword_26224D8 = 0;
  qword_2622480 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_PROCESSING_WORKFLOW_TYPE_UNKNOWN";
  unk_2622488 = 38;
  qword_26224A0 = 38;
  dword_26224A8 = 0;
  dword_2622490 = 2;
  qword_26223D8 = (uint64_t)"QUERY_UNDERSTANDING_TYPE_CORE_SEARCHQUERY_UNDERSTANDING_TYPE_TAXONOMY_LOOKUPQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHQUERY_UNDERSTANDING_TYPE_UNKNOWN";
  qword_2622468 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_PROCESSING_WORKFLOW_TYPE_UNKNOWN";
  unk_2622470 = 40;
  dword_2622460 = 4;
  dword_2622478 = 1;
  qword_2622438 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_ENRICHMENTSQUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY"
                           "_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_PROCESSING_WOR"
                           "KFLOW_TYPE_UNKNOWN";
  qword_2622440 = 42;
  dword_2622448 = 3;
  qword_2622450 = (uint64_t)"QUERY_PROCESSING_WORKFLOW_TYPE_FULL_PROCESSINGQUERY_PROCESSING_WORKFLOW_TYPE_NORMALIZEQUERY_PROCESSING_WORKFLOW_TYPE_REWRITEQUERY_PROCESSING_WORKFLOW_TYPE_UNKNOWN";
  unk_2622458 = 46;
  dword_2622418 = 3;
  qword_2622420 = (uint64_t)"QUERY_UNDERSTANDING_TYPE_UNKNOWN";
  unk_2622428 = 32;
  dword_2622430 = 0;
  qword_26223F0 = (uint64_t)"QUERY_UNDERSTANDING_TYPE_TAXONOMY_LOOKUPQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHQUERY_UNDERSTANDING_TYPE_UNKNOWN";
  unk_26223F8 = 40;
  dword_2622400 = 4;
  qword_2622408 = (uint64_t)"QUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHQUERY_UNDERSTANDING_TYPE_UNKNOWN";
  unk_2622410 = 40;
  qword_26223E0 = 36;
  dword_26223E8 = 2;
  qword_26223C0 = (uint64_t)"QUERY_UNDERSTANDING_TYPE_AUTOCOMPLETEQUERY_UNDERSTANDING_TYPE_CORE_SEARCHQUERY_UNDERSTANDING_"
                           "TYPE_TAXONOMY_LOOKUPQUERY_UNDERSTANDING_TYPE_TAXONOMY_SEARCHQUERY_UNDERSTANDING_TYPE_UNKNOWN";
  *(void *)algn_26223C8 = 37;
  dword_26223D0 = 1;
  dword_26223B8 = 0;
  qword_2622390 = (uint64_t)"MAPS_HOME_SECTION_TYPE_CURATED_GUIDESMAPS_HOME_SECTION_TYPE_UNKNOWN";
  *(void *)algn_2622398 = 37;
  dword_26223A0 = 1;
  qword_26223A8 = (uint64_t)"MAPS_HOME_SECTION_TYPE_UNKNOWN";
  unk_26223B0 = 30;
  qword_2622378 = (uint64_t)"ALL_GUIDES_LOCATIONS_SECTION_HEADER_TYPE_UNKNOWN";
  unk_2622380 = 48;
  dword_2622388 = 0;
  qword_2622348 = (uint64_t)"ALL_GUIDES_LOCATIONS_SECTION_HEADER_TYPE_PLACEALL_GUIDES_LOCATIONS_SECTION_HEADER_TYPE_STRING"
                           "ALL_GUIDES_LOCATIONS_SECTION_HEADER_TYPE_UNKNOWN";
  unk_2622350 = 46;
  qword_2622360 = (uint64_t)"ALL_GUIDES_LOCATIONS_SECTION_HEADER_TYPE_STRINGALL_GUIDES_LOCATIONS_SECTION_HEADER_TYPE_UNKNOWN";
  unk_2622368 = 47;
  dword_2622370 = 1;
  dword_2622358 = 2;
  qword_2622330 = (uint64_t)"SEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_UNKNOWN";
  unk_2622338 = 46;
  dword_2622328 = 2;
  dword_2622340 = 0;
  qword_26222E8 = (uint64_t)"SEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_DEFAULTSEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_DFRSEARC"
                           "H_BROWSE_CATEGORY_SUGGESTION_TYPE_NAVSEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_UNKNOWN";
  unk_26222F0 = 46;
  qword_2622300 = (uint64_t)"SEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_DFRSEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_NAVSEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_UNKNOWN";
  qword_2622308 = 42;
  dword_2622310 = 3;
  qword_2622318 = (uint64_t)"SEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_NAVSEARCH_BROWSE_CATEGORY_SUGGESTION_TYPE_UNKNOWN";
  unk_2622320 = 42;
  dword_26222F8 = 1;
  qword_26222D0 = (uint64_t)"SEARCH_RESULT_TYPE_WITH_HINT";
  unk_26222D8 = 28;
  dword_26222E0 = 3;
  qword_26222A0 = (uint64_t)"SEARCH_RESULT_TYPE_NO_RESULTSEARCH_RESULT_TYPE_UNKNOWNSEARCH_RESULT_TYPE_WITH_HINT";
  unk_26222A8 = 28;
  dword_26222B0 = 2;
  qword_26222C0 = 26;
  dword_26222C8 = 0;
  qword_2622270 = (uint64_t)"SEARCH_RESULT_TYPE_DEFAULTSEARCH_RESULT_TYPE_DYMSEARCH_RESULT_TYPE_NO_RESULTSEARCH_RESULT_TYP"
                           "E_UNKNOWNSEARCH_RESULT_TYPE_WITH_HINT";
  *(void *)algn_2622278 = 26;
  dword_2622280 = 1;
  qword_2622290 = 22;
  dword_2622298 = 4;
  qword_26215F8 = (uint64_t)"COMPONENT_TYPE_ABOUTCOMPONENT_TYPE_ACTION_DATACOMPONENT_TYPE_ADDRESSCOMPONENT_TYPE_ADDRESS_CO"
                           "MPONENTSCOMPONENT_TYPE_ADDRESS_OBJECTCOMPONENT_TYPE_AMENITIESCOMPONENT_TYPE_ANNOTATED_ITEM_LI"
                           "STCOMPONENT_TYPE_ASSOCIATED_APPCOMPONENT_TYPE_BOUNDSCOMPONENT_TYPE_BROWSE_CATEGORIESCOMPONENT"
                           "_TYPE_BUSINESS_ASSETSCOMPONENT_TYPE_BUSINESS_CLAIMCOMPONENT_TYPE_BUSINESS_HOURSCOMPONENT_TYPE"
                           "_CAPTIONED_PHOTOCOMPONENT_TYPE_CATEGORIZED_PHOTOSCOMPONENT_TYPE_COLLECTIONCOMPONENT_TYPE_COLL"
                           "ECTION_IDSCOMPONENT_TYPE_CONTAINED_PLACECOMPONENT_TYPE_CONTAINMENT_PLACECOMPONENT_TYPE_ENHANC"
                           "ED_PLACEMENTCOMPONENT_TYPE_ENRICHMENT_DATACOMPONENT_TYPE_ENRICHMENT_INFOCOMPONENT_TYPE_ENTITY"
                           "COMPONENT_TYPE_ETACOMPONENT_TYPE_EV_CHARGERCOMPONENT_TYPE_EXPLORE_GUIDESCOMPONENT_TYPE_EXTERN"
                           "AL_ACTIONCOMPONENT_TYPE_FACTOIDCOMPONENT_TYPE_FLYOVERCOMPONENT_TYPE_FORWARD_INFOCOMPONENT_TYP"
                           "E_GROUND_VIEWCOMPONENT_TYPE_GROUND_VIEW_LABELCOMPONENT_TYPE_GUIDE_GROUPCOMPONENT_TYPE_HIKE_AS"
                           "SOCIATED_INFOCOMPONENT_TYPE_HIKE_GEOMETRYCOMPONENT_TYPE_HIKE_SUMMARYCOMPONENT_TYPE_HOURSCOMPO"
                           "NENT_TYPE_ICONCOMPONENT_TYPE_ISO_3166_CODECOMPONENT_TYPE_LABEL_GEOMETRYCOMPONENT_TYPE_LINKED_"
                           "SERVICECOMPONENT_TYPE_LOCATION_EVENTCOMPONENT_TYPE_MESSAGE_LINKCOMPONENT_TYPE_MINI_PLACE_BROW"
                           "SE_CATEGORIESCOMPONENT_TYPE_OFFLINE_AREACOMPONENT_TYPE_OFFLINE_IDENTIFIERCOMPONENT_TYPE_OFFLI"
                           "NE_QUAD_NODESCOMPONENT_TYPE_OFFLINE_SIZECOMPONENT_TYPE_OFFLINE_UPDATE_MANIFESTCOMPONENT_TYPE_"
                           "PHOTOCOMPONENT_TYPE_PLACECARD_LAYOUTCOMPONENT_TYPE_PLACECARD_URLCOMPONENT_TYPE_PLACE_BROWSE_C"
                           "ATEGORIESCOMPONENT_TYPE_PLACE_COLLECTION_ITEMCOMPONENT_TYPE_PLACE_INFOCOMPONENT_TYPE_PLACE_QU"
                           "ESTIONNAIRECOMPONENT_TYPE_POI_CLAIMCOMPONENT_TYPE_POI_EVENTCOMPONENT_TYPE_PRICE_DESCRIPTIONCO"
                           "MPONENT_TYPE_PROTOTYPE_CONTAINERCOMPONENT_TYPE_PUBLISHERCOMPONENT_TYPE_QUICK_LINKCOMPONENT_TY"
                           "PE_RAPCOMPONENT_TYPE_RATINGCOMPONENT_TYPE_RAW_ATTRIBUTECOMPONENT_TYPE_REFRESH_IDCOMPONENT_TYP"
                           "E_RELATED_PLACECOMPONENT_TYPE_RESTAURANT_RESERVATION_LINKCOMPONENT_TYPE_RESULT_SNIPPETCOMPONE"
                           "NT_TYPE_REVIEWCOMPONENT_TYPE_ROAD_ACCESS_INFOCOMPONENT_TYPE_SEARCH_ENRICHMENTCOMPONENT_TYPE_S"
                           "EARCH_RESULT_PLACE_PHOTOCOMPONENT_TYPE_SIMPLE_RESTAURANT_MENU_TEXTCOMPONENT_TYPE_SPATIAL_LOOK"
                           "UP_RESULTCOMPONENT_TYPE_STOREFRONTCOMPONENT_TYPE_STOREFRONT_FACESCOMPONENT_TYPE_STOREFRONT_PR"
                           "ESENTATIONCOMPONENT_TYPE_STYLE_ATTRIBUTESCOMPONENT_TYPE_SUPPORTS_OFFLINE_MAPSCOMPONENT_TYPE_T"
                           "EMPLATE_PLACECOMPONENT_TYPE_TEXT_BLOCKCOMPONENT_TYPE_TIPCOMPONENT_TYPE_TOOL_TIPCOMPONENT_TYPE"
                           "_TRAIL_HEADCOMPONENT_TYPE_TRANSIT_ASSOCIATED_INFOCOMPONENT_TYPE_TRANSIT_ATTRIBUTIONCOMPONENT_"
                           "TYPE_TRANSIT_INCIDENTCOMPONENT_TYPE_TRANSIT_INFOCOMPONENT_TYPE_TRANSIT_INFO_SNIPPETCOMPONENT_"
                           "TYPE_TRANSIT_NEARBY_SCHEDULECOMPONENT_TYPE_TRANSIT_PAYMENT_METHOD_INFOCOMPONENT_TYPE_TRANSIT_"
                           "SCHEDULECOMPONENT_TYPE_TRANSIT_TRIP_GEOMETRYCOMPONENT_TYPE_TRANSIT_TRIP_STOPCOMPONENT_TYPE_TR"
                           "ANSIT_TRIP_STOP_TIMECOMPONENT_TYPE_TRANSIT_VEHICLE_POSITIONCOMPONENT_TYPE_UNKNOWNCOMPONENT_TY"
                           "PE_VENDOR_AMENITIESCOMPONENT_TYPE_VENUE_INFOCOMPONENT_TYPE_WIFI_FINGERPRINT";
  unk_2621600 = 20;
  qword_2621618 = 26;
  qword_2621630 = 22;
  dword_2621638 = 5;
  qword_2621648 = 33;
  qword_2621660 = 29;
  dword_2621668 = 31;
  qword_2621678 = 24;
  dword_2621680 = 15;
  qword_2621690 = 34;
  dword_2621698 = 57;
  qword_26216A8 = 29;
  dword_26216B0 = 38;
  qword_26216C0 = 21;
  dword_26216C8 = 4;
  qword_26216D8 = 32;
  dword_26216E0 = 54;
  qword_26216F0 = 30;
  qword_2621708 = 29;
  dword_2621710 = 25;
  qword_2621720 = 29;
  dword_2621728 = 64;
  qword_2621738 = 30;
  dword_2621740 = 26;
  qword_2621750 = 33;
  qword_2621768 = 25;
  dword_2621770 = 65;
  qword_2621780 = 29;
  qword_2621798 = 30;
  dword_26217A0 = 50;
  qword_26217B0 = 32;
  qword_26217C8 = 33;
  qword_26217E0 = 30;
  qword_26217F8 = 30;
  qword_2621810 = 21;
  dword_2621818 = 1;
  qword_2621828 = 18;
  dword_2621830 = 12;
  qword_2621840 = 25;
  qword_2621858 = 29;
  qword_2621870 = 30;
  dword_2621878 = 29;
  qword_2621888 = 22;
  dword_2621890 = 23;
  qword_26218A0 = 22;
  dword_26218A8 = 13;
  qword_26218B8 = 27;
  qword_26218D0 = 26;
  dword_26218D8 = 28;
  qword_26218E8 = 32;
  dword_26218F0 = 56;
  qword_2621900 = 26;
  qword_2621918 = 35;
  qword_2621930 = 28;
  qword_2621948 = 27;
  qword_2621960 = 20;
  dword_2621968 = 9;
  qword_2621978 = 19;
  dword_2621980 = 52;
  qword_2621990 = 28;
  qword_26219A8 = 29;
  qword_26219C0 = 29;
  dword_26219C8 = 63;
  qword_26219D8 = 29;
  dword_26219E0 = 43;
  qword_26219F0 = 27;
  dword_26219F8 = 39;
  qword_2621A08 = 43;
  qword_2621A20 = 27;
  dword_2621A28 = 42;
  qword_2621A38 = 33;
  dword_2621A40 = 45;
  qword_2621A50 = 33;
  dword_2621A58 = 46;
  qword_2621A68 = 27;
  dword_2621A70 = 47;
  qword_2621A80 = 38;
  dword_2621A88 = 49;
  qword_2621A98 = 20;
  dword_2621AA0 = 8;
  qword_2621AB0 = 31;
  dword_2621AB8 = 60;
  qword_2621AC8 = 28;
  dword_2621AD0 = 37;
  qword_2621AE0 = 38;
  qword_2621AF8 = 36;
  qword_2621B10 = 25;
  dword_2621B18 = 2;
  qword_2621B28 = 34;
  qword_2621B40 = 24;
  qword_2621B58 = 24;
  dword_2621B60 = 58;
  qword_2621B70 = 32;
  dword_2621B78 = 53;
  qword_2621B88 = 34;
  dword_2621B90 = 61;
  qword_2621BA0 = 24;
  qword_2621BB8 = 25;
  qword_2621F48 = 25;
  dword_2621F50 = 48;
  qword_2621F60 = 31;
  dword_2621F68 = 51;
  dword_2621BC0 = 40;
  qword_2621BD0 = 18;
  dword_2621BD8 = 41;
  qword_2621F18 = 22;
  dword_2621F20 = 0;
  qword_2621F30 = 31;
  qword_2621BE8 = 21;
  dword_2621BF0 = 6;
  qword_2621C00 = 28;
  dword_2621C08 = 14;
  qword_2621C18 = 25;
  qword_2621F00 = 39;
  qword_2621C30 = 28;
  qword_2621C48 = 42;
  dword_2621EC0 = 69;
  qword_2621ED0 = 32;
  qword_2621EE8 = 37;
  dword_2621C50 = 33;
  qword_2621C60 = 29;
  dword_2621C68 = 30;
  qword_2621EA0 = 31;
  dword_2621EA8 = 11;
  qword_2621EB8 = 36;
  qword_2621C78 = 21;
  dword_2621C80 = 7;
  qword_2621C90 = 31;
  dword_2621E60 = 27;
  qword_2621E70 = 38;
  qword_2621E88 = 42;
  dword_2621C98 = 3;
  qword_2621CA8 = 32;
  dword_2621E30 = 20;
  qword_2621E40 = 27;
  dword_2621E48 = 10;
  qword_2621E58 = 35;
  qword_2621CC0 = 40;
  qword_2621CD8 = 42;
  dword_2621E00 = 21;
  qword_2621E10 = 34;
  dword_2621E18 = 24;
  qword_2621E28 = 31;
  dword_2621CE0 = 32;
  qword_2621CF0 = 36;
  dword_2621CF8 = 34;
  qword_2621D08 = 25;
  qword_2621DE0 = 25;
  qword_2621DF8 = 38;
  dword_2621D10 = 55;
  qword_2621D20 = 31;
  dword_2621DA0 = 22;
  qword_2621DB0 = 18;
  dword_2621DB8 = 36;
  qword_2621DC8 = 23;
  qword_2621D38 = 38;
  dword_2621D40 = 59;
  qword_2621D50 = 31;
  dword_2621D58 = 16;
  qword_2621D80 = 29;
  qword_2621D98 = 25;
  qword_2621D68 = 36;
  dword_2621D70 = 44;
  qword_2622510 = (uint64_t)"TREE_DISPLAY_TYPE_SPARSE";
  unk_2622518 = 24;
  dword_2622520 = 4;
  dword_2622538 = -9;
  qword_2622558 = (uint64_t)"SIGNIFICANCE_EXTRA_EXTRA_LOWSIGNIFICANCE_EXTRA_HIGHSIGNIFICANCE_EXTRA_LOWSIGNIFICANCE_HIGHSIGNIFICANCE_LOWSIGNIFICANCE_MEDIUM";
  dword_2622568 = -3;
  qword_2622570 = (uint64_t)"SIGNIFICANCE_EXTRA_HIGHSIGNIFICANCE_EXTRA_LOWSIGNIFICANCE_HIGHSIGNIFICANCE_LOWSIGNIFICANCE_MEDIUM";
  unk_2622578 = 23;
  qword_2622588 = (uint64_t)"SIGNIFICANCE_EXTRA_LOWSIGNIFICANCE_HIGHSIGNIFICANCE_LOWSIGNIFICANCE_MEDIUM";
  unk_2622590 = 22;
  dword_2622598 = -2;
  qword_26225A0 = (uint64_t)"SIGNIFICANCE_HIGHSIGNIFICANCE_LOWSIGNIFICANCE_MEDIUM";
  qword_26225B8 = (uint64_t)"SIGNIFICANCE_LOWSIGNIFICANCE_MEDIUM";
  unk_26225C0 = 16;
  dword_26225C8 = -1;
  qword_26225D0 = (uint64_t)"SIGNIFICANCE_MEDIUM";
  qword_2622540 = (uint64_t)"SIGNIFICANCE_EXTRA_EXTRA_HIGHSIGNIFICANCE_EXTRA_EXTRA_LOWSIGNIFICANCE_EXTRA_HIGHSIGNIFICANCE_EXTRA_LOWSIGNIFICANCE_HIGHSIGNIFICANCE_LOWSIGNIFICANCE_MEDIUM";
  unk_2622548 = 29;
  qword_2622530 = 20;
  dword_2622550 = 3;
  qword_2622560 = 28;
  dword_2622580 = 2;
  qword_26225A8 = 17;
  dword_26225B0 = 1;
  qword_26225D8 = 19;
  dword_26225E0 = 0;
  qword_2622600 = (uint64_t)"CATEGORY_SEARCH_TYPE_DEFAULTCATEGORY_SEARCH_TYPE_NAVCATEGORY_SEARCH_TYPE_REDOCATEGORY_SEARCH_TYPE_REDO_NAVCATEGORY_SEARCH_TYPE_UNKNOWN";
  qword_2622618 = (uint64_t)"CATEGORY_SEARCH_TYPE_NAVCATEGORY_SEARCH_TYPE_REDOCATEGORY_SEARCH_TYPE_REDO_NAVCATEGORY_SEARCH_TYPE_UNKNOWN";
  unk_2622620 = 24;
  qword_2622630 = (uint64_t)"CATEGORY_SEARCH_TYPE_REDOCATEGORY_SEARCH_TYPE_REDO_NAVCATEGORY_SEARCH_TYPE_UNKNOWN";
  unk_2622638 = 25;
  qword_2622648 = (uint64_t)"CATEGORY_SEARCH_TYPE_REDO_NAVCATEGORY_SEARCH_TYPE_UNKNOWN";
  unk_2622650 = 29;
  qword_26225E8 = (uint64_t)"CATEGORY_SEARCH_TYPE_AUTO_REDOCATEGORY_SEARCH_TYPE_DEFAULTCATEGORY_SEARCH_TYPE_NAVCATEGORY_SE"
                           "ARCH_TYPE_REDOCATEGORY_SEARCH_TYPE_REDO_NAVCATEGORY_SEARCH_TYPE_UNKNOWN";
  unk_26225F0 = 30;
  dword_26225F8 = 5;
  qword_2622608 = 28;
  dword_2622610 = 1;
  dword_2622628 = 3;
  dword_2622640 = 2;
  dword_2622658 = 4;
  qword_2622660 = (uint64_t)"CATEGORY_SEARCH_TYPE_UNKNOWN";
  unk_2622668 = 28;
  dword_2622670 = 0;
  qword_2622690 = (uint64_t)"POPULAR_NEARBY_SEARCH_TYPE_REDOPOPULAR_NEARBY_SEARCH_TYPE_UNKNOWN";
  unk_2622698 = 31;
  qword_2622678 = (uint64_t)"POPULAR_NEARBY_SEARCH_TYPE_DEFAULTPOPULAR_NEARBY_SEARCH_TYPE_REDOPOPULAR_NEARBY_SEARCH_TYPE_UNKNOWN";
  unk_2622680 = 34;
  dword_2622688 = 1;
  dword_26226A0 = 2;
  qword_26226A8 = (uint64_t)"POPULAR_NEARBY_SEARCH_TYPE_UNKNOWN";
  unk_26226B0 = 34;
  dword_26226B8 = 0;
  qword_26226C0 = (uint64_t)"VERSION_1VERSION_2";
  *(void *)algn_26226C8 = 9;
  dword_26226D0 = 0;
  qword_26226D8 = (uint64_t)"VERSION_2";
  unk_26226E0 = 9;
  dword_26226E8 = 1;
  qword_2622708 = (uint64_t)"BOARDING_GATETERMINAL";
  qword_2622720 = (uint64_t)"TERMINAL";
  qword_26226F0 = (uint64_t)"AIRPORTBOARDING_GATETERMINAL";
  *(void *)algn_26226F8 = 7;
  dword_2622700 = 0;
  qword_2622710 = 13;
  dword_2622718 = 2;
  qword_2622728 = 8;
  dword_2622730 = 1;
  qword_2622750 = (uint64_t)"EXTENDED_GEO_LOOKUP_RESULTS_STATUS_SUCCESSEXTENDED_GEO_LOOKUP_RESULTS_STATUS_UNDEFINED";
  unk_2622758 = 42;
  qword_2622768 = (uint64_t)"EXTENDED_GEO_LOOKUP_RESULTS_STATUS_UNDEFINED";
  unk_2622770 = 44;
  qword_2622738 = (uint64_t)"EXTENDED_GEO_LOOKUP_RESULTS_STATUS_NO_CACHE_MATCHEXTENDED_GEO_LOOKUP_RESULTS_STATUS_SUCCESSEX"
                           "TENDED_GEO_LOOKUP_RESULTS_STATUS_UNDEFINED";
  unk_2622740 = 49;
  dword_2622748 = 2;
  dword_2622760 = 1;
  dword_2622778 = 0;
  qword_2622798 = (uint64_t)"IDENTITYINAPPPHYSICALUNKNOWNVIRTUALWEB";
  qword_26227B0 = (uint64_t)"INAPPPHYSICALUNKNOWNVIRTUALWEB";
  qword_26227C8 = (uint64_t)"PHYSICALUNKNOWNVIRTUALWEB";
  qword_26227E0 = (uint64_t)"UNKNOWNVIRTUALWEB";
  qword_26227F8 = (uint64_t)"VIRTUALWEB";
  qword_2622810 = (uint64_t)"WEB";
  qword_2622780 = (uint64_t)"CONTACTLESSIDENTITYINAPPPHYSICALUNKNOWNVIRTUALWEB";
  *(void *)algn_2622788 = 11;
  dword_2622790 = 1;
  qword_26227A0 = 8;
  dword_26227A8 = 6;
  qword_26227B8 = 5;
  dword_26227C0 = 2;
  qword_26227D0 = 8;
  dword_26227D8 = 4;
  qword_26227E8 = 7;
  dword_26227F0 = 0;
  qword_2622800 = 7;
  dword_2622808 = 5;
  qword_2622818 = 3;
  dword_2622820 = 3;
  qword_2622840 = (uint64_t)"TRANSACTION_STATUS_REFUNDTRANSACTION_STATUS_SETTLEMENTTRANSACTION_STATUS_UNKNOWN";
  unk_2622848 = 25;
  qword_2622858 = (uint64_t)"TRANSACTION_STATUS_SETTLEMENTTRANSACTION_STATUS_UNKNOWN";
  unk_2622860 = 29;
  qword_2622828 = (uint64_t)"TRANSACTION_STATUS_AUTHORIZATIONTRANSACTION_STATUS_REFUNDTRANSACTION_STATUS_SETTLEMENTTRANSAC"
                           "TION_STATUS_UNKNOWN";
  unk_2622830 = 32;
  dword_2622838 = 1;
  dword_2622850 = 3;
  dword_2622868 = 2;
  qword_2622870 = (uint64_t)"TRANSACTION_STATUS_UNKNOWN";
  unk_2622878 = 26;
  dword_2622880 = 0;
  qword_26228B8 = (uint64_t)"CATEGORYIGNOREPLACE";
  qword_26228D0 = (uint64_t)"IGNOREPLACE";
  unk_26228D8 = 6;
  qword_26228E8 = (uint64_t)"PLACE";
  unk_26228F0 = 5;
  qword_2622888 = (uint64_t)"ATTRIBUTEBUSINESSCATEGORYIGNOREPLACE";
  unk_2622890 = 9;
  dword_2622898 = 4;
  qword_26228A0 = (uint64_t)"BUSINESSCATEGORYIGNOREPLACE";
  unk_26228A8 = 8;
  dword_26228B0 = 1;
  qword_26228C0 = 8;
  dword_26228C8 = 2;
  dword_26228E0 = 3;
  dword_26228F8 = 0;
  qword_2622918 = (uint64_t)"INDEX_QUERY_NEGATIVE_TERMINDEX_QUERY_ORINDEX_QUERY_TERM";
  unk_2622920 = 25;
  qword_2622930 = (uint64_t)"INDEX_QUERY_ORINDEX_QUERY_TERM";
  qword_2622900 = (uint64_t)"INDEX_QUERY_ANDINDEX_QUERY_NEGATIVE_TERMINDEX_QUERY_ORINDEX_QUERY_TERM";
  *(void *)algn_2622908 = 15;
  dword_2622910 = 0;
  dword_2622928 = 3;
  qword_2622938 = 14;
  dword_2622940 = 1;
  qword_2622948 = (uint64_t)"INDEX_QUERY_TERM";
  unk_2622950 = 16;
  dword_2622958 = 2;
  qword_2622960 = (uint64_t)"SEARCH_TYPE_DEFAULTSEARCH_TYPE_NEAREST_TRANSITSEARCH_TYPE_UNKNOWN";
  qword_2622968 = 19;
  dword_2622970 = 1;
  qword_2622978 = (uint64_t)"SEARCH_TYPE_NEAREST_TRANSITSEARCH_TYPE_UNKNOWN";
  unk_2622980 = 27;
  dword_2622988 = 2;
  qword_2622990 = (uint64_t)"SEARCH_TYPE_UNKNOWN";
  unk_2622998 = 19;
  dword_26229A0 = 0;
  qword_26229C0 = (uint64_t)"POI_AGE_FILTER_LAST_MONTHPOI_AGE_FILTER_NONEPOI_AGE_FILTER_SERVER";
  unk_26229C8 = 25;
  qword_26229D8 = (uint64_t)"POI_AGE_FILTER_NONEPOI_AGE_FILTER_SERVER";
  unk_26229E0 = 19;
  qword_26229A8 = (uint64_t)"POI_AGE_FILTER_LAST_6_MONTHSPOI_AGE_FILTER_LAST_MONTHPOI_AGE_FILTER_NONEPOI_AGE_FILTER_SERVER";
  unk_26229B0 = 28;
  dword_26229B8 = 2;
  dword_26229D0 = 1;
  dword_26229E8 = 0;
  qword_26229F0 = (uint64_t)"POI_AGE_FILTER_SERVER";
  unk_26229F8 = 21;
  dword_2622A00 = 10;
  qword_2622A20 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_CALENDARAUTOCOMPLETE_RESULT_TYPE_COLLECTIONAUTOCOMPLETE_RESULT_TYPE_CONTACTSAUTOCOMPLETE_RESULT_TYPE_CORE_RECENTSAUTOCOMPLETE_RESULT_TYPE_CORE_ROUTINEAUTOCOMPLETE_RESULT_TYPE_HISTORYAUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622A38 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_COLLECTIONAUTOCOMPLETE_RESULT_TYPE_CONTACTSAUTOCOMPLETE_RESULT_TYPE_CORE_RECENTSAUTOCOMPLETE_RESULT_TYPE_CORE_ROUTINEAUTOCOMPLETE_RESULT_TYPE_HISTORYAUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622A50 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_CONTACTSAUTOCOMPLETE_RESULT_TYPE_CORE_RECENTSAUTOCOMPLETE_RESULT_TYPE_CORE_ROUTINEAUTOCOMPLETE_RESULT_TYPE_HISTORYAUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622A68 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_CORE_RECENTSAUTOCOMPLETE_RESULT_TYPE_CORE_ROUTINEAUTOCOMPLETE_RESULT_TYPE_HISTORYAUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622A80 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_CORE_ROUTINEAUTOCOMPLETE_RESULT_TYPE_HISTORYAUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622A98 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_HISTORYAUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622AB0 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622AC8 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622AE0 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622AF8 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  qword_2622A08 = (uint64_t)"AUTOCOMPLETE_RESULT_TYPE_ANYAUTOCOMPLETE_RESULT_TYPE_CALENDARAUTOCOMPLETE_RESULT_TYPE_COLLECT"
                           "IONAUTOCOMPLETE_RESULT_TYPE_CONTACTSAUTOCOMPLETE_RESULT_TYPE_CORE_RECENTSAUTOCOMPLETE_RESULT_"
                           "TYPE_CORE_ROUTINEAUTOCOMPLETE_RESULT_TYPE_HISTORYAUTOCOMPLETE_RESULT_TYPE_SERVERAUTOCOMPLETE_"
                           "RESULT_TYPE_SIRI_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_SUGGESTIONSAUTOCOMPLETE_RESULT_TYPE_UNKNOWN";
  unk_2622A10 = 28;
  dword_2622A18 = 1;
  qword_2622A28 = 33;
  dword_2622A30 = 3;
  qword_2622A40 = 35;
  dword_2622A48 = 4;
  qword_2622A58 = 33;
  dword_2622A60 = 5;
  qword_2622A70 = 37;
  dword_2622A78 = 6;
  qword_2622A88 = 37;
  dword_2622A90 = 7;
  qword_2622AA0 = 32;
  dword_2622AA8 = 8;
  qword_2622AB8 = 31;
  dword_2622AC0 = 2;
  qword_2622AD0 = 41;
  dword_2622AD8 = 9;
  qword_2622AE8 = 36;
  dword_2622AF0 = 10;
  qword_2622B00 = 32;
  dword_2622B08 = 0;
  qword_2622B28 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_COLLECTION_FAVORITESAUTOCOMPLETE_RESULT_SUBTYPE_COLLECTION_MARKED_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_CONTACTS_ME_CARDAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MAILAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MESSAGESAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622B40 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_COLLECTION_MARKED_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_CONTACTS_ME_CARDAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MAILAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MESSAGESAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622B58 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_CONTACTS_ME_CARDAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MAILAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MESSAGESAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622B70 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MAILAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MESSAGESAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622B88 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MESSAGESAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622BA0 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622BB8 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622BD0 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622BE8 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622C00 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622C18 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622C30 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622C48 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622C60 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622C78 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_ENERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622C90 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622CA8 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622CC0 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622CD8 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622CF0 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622D08 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESUME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  qword_2622B10 = (uint64_t)"AUTOCOMPLETE_RESULT_SUBTYPE_ANYAUTOCOMPLETE_RESULT_SUBTYPE_COLLECTION_FAVORITESAUTOCOMPLETE_R"
                           "ESULT_SUBTYPE_COLLECTION_MARKED_LOCATIONAUTOCOMPLETE_RESULT_SUBTYPE_CONTACTS_ME_CARDAUTOCOMPL"
                           "ETE_RESULT_SUBTYPE_CORERECENTS_MAILAUTOCOMPLETE_RESULT_SUBTYPE_CORERECENTS_MESSAGESAUTOCOMPLE"
                           "TE_RESULT_SUBTYPE_COREROUTINE_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_COREROUTINE_PARKED_CARAUTOCOMPL"
                           "ETE_RESULT_SUBTYPE_COREROUTINE_WORKAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_DIRECTIONSAUTOCOMPLETE"
                           "_RESULT_SUBTYPE_HISTORY_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_HISTORY_QUERYAUTOCOMPLETE_RESULT_SUB"
                           "TYPE_HISTORY_TRANSIT_LINEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_APP_CONNECTIONAUTOCOMPLETE_R"
                           "ESULT_SUBTYPE_SUGGESTIONS_CALENDAR_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CARPLAY_LOW_E"
                           "NERGYAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_CAR_RENTALAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTION"
                           "S_FAVORITE_PLACEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_FREQUENT_LOCATIONAUTOCOMPLETE_RESULT_"
                           "SUBTYPE_SUGGESTIONS_HOMEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_HOTELAUTOCOMPLETE_RESULT_SUBT"
                           "YPE_SUGGESTIONS_PARKED_CARAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RECENT_HISTORYAUTOCOMPLETE_"
                           "RESULT_SUBTYPE_SUGGESTIONS_RESTAURANT_RESERVATIONAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RESU"
                           "ME_ROUTEAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_RIDESHARINGAUTOCOMPLETE_RESULT_SUBTYPE_SUGGES"
                           "TIONS_TICKETED_EVENTAUTOCOMPLETE_RESULT_SUBTYPE_SUGGESTIONS_TRAVEL_FLIGHTAUTOCOMPLETE_RESULT_"
                           "SUBTYPE_SUGGESTIONS_WORKAUTOCOMPLETE_RESULT_SUBTYPE_UNKNOWN";
  *(void *)algn_2622B18 = 31;
  dword_2622B20 = 1;
  qword_2622B30 = 48;
  dword_2622B38 = 2;
  qword_2622B48 = 54;
  dword_2622B50 = 3;
  qword_2622B60 = 44;
  dword_2622B68 = 4;
  qword_2622B78 = 44;
  dword_2622B80 = 5;
  qword_2622B90 = 48;
  dword_2622B98 = 6;
  qword_2622BA8 = 44;
  dword_2622BB0 = 7;
  qword_2622BC0 = 50;
  dword_2622BC8 = 8;
  qword_2622BD8 = 44;
  dword_2622BE0 = 9;
  qword_2622BF0 = 46;
  dword_2622BF8 = 10;
  qword_2622C08 = 41;
  dword_2622C10 = 11;
  qword_2622C20 = 41;
  dword_2622C28 = 12;
  qword_2622C38 = 48;
  dword_2622C40 = 13;
  qword_2622C50 = 54;
  dword_2622C58 = 25;
  qword_2622C68 = 54;
  dword_2622C70 = 16;
  qword_2622C80 = 58;
  dword_2622C88 = 23;
  qword_2622C98 = 50;
  dword_2622CA0 = 27;
  qword_2622CB0 = 54;
  dword_2622CB8 = 19;
  qword_2622CC8 = 57;
  dword_2622CD0 = 17;
  qword_2622D10 = 50;
  qword_2622CE0 = 44;
  dword_2622CE8 = 14;
  qword_2622CF8 = 45;
  dword_2622D00 = 26;
  qword_26234B8 = (uint64_t)"REQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  dword_26234C8 = 35;
  qword_26234D0 = (uint64_t)"REQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26234E8 = (uint64_t)"REQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623500 = (uint64_t)"REQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623518 = (uint64_t)"REQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623530 = (uint64_t)"REQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623548 = (uint64_t)"REQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623560 = (uint64_t)"REQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623578 = (uint64_t)"REQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623590 = (uint64_t)"REQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26235A8 = (uint64_t)"REQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26235C0 = (uint64_t)"REQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26235D8 = (uint64_t)"REQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26235F0 = (uint64_t)"REQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623608 = (uint64_t)"REQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623620 = (uint64_t)"REQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623638 = (uint64_t)"REQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  dword_2623648 = 58;
  qword_2623650 = (uint64_t)"REQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623668 = (uint64_t)"REQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623680 = (uint64_t)"REQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623698 = (uint64_t)"REQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26236B0 = (uint64_t)"REQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26236C8 = (uint64_t)"REQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26236E0 = (uint64_t)"REQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26236F8 = (uint64_t)"REQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623710 = (uint64_t)"REQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623728 = (uint64_t)"REQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623740 = (uint64_t)"REQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623758 = (uint64_t)"REQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  dword_2623768 = 60;
  qword_2623770 = (uint64_t)"REQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623788 = (uint64_t)"REQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26237A0 = (uint64_t)"REQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26237B8 = (uint64_t)"REQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26237D0 = (uint64_t)"REQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26237E8 = (uint64_t)"REQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623800 = (uint64_t)"REQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623818 = (uint64_t)"REQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623830 = (uint64_t)"REQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623848 = (uint64_t)"REQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623860 = (uint64_t)"REQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_2623878 = (uint64_t)"REQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  qword_26234A0 = (uint64_t)"REQUEST_TYPE_GEOCODINGREQUEST_TYPE_GROUND_VIEW_LABELREQUEST_TYPE_GUIDES_HOMEREQUEST_TYPE_INITIAL_OFFLINE_SUGGESTIONREQUEST_TYPE_IP_GEO_LOOKUPREQUEST_TYPE_LOCATION_DIRECTED_SEARCHREQUEST_TYPE_MAPS_HOMEREQUEST_TYPE_MAPS_IDENTIFIER_PLACE_LOOKUPREQUEST_TYPE_MAPS_SEARCH_HOMEREQUEST_TYPE_MERCHANT_LOOKUPREQUEST_TYPE_NEARBY_SEARCHREQUEST_TYPE_OFFLINE_AREA_LOOKUPREQUEST_TYPE_OFFLINE_POLYGON_QUAD_NODESREQUEST_TYPE_OFFLINE_PROACTIVE_REGIONSREQUEST_TYPE_OFFLINE_REGION_NAMEREQUEST_TYPE_OFFLINE_SUGGESTED_REGIONSREQUEST_TYPE_OFFLINE_UPDATE_MANIFESTREQUEST_TYPE_PLACECARD_ENRICHMENTREQUEST_TYPE_PLACE_COLLECTION_LOOKUPREQUEST_TYPE_PLACE_LOOKUPREQUEST_TYPE_PLACE_QUESTIONNAIRE_LOOKUPREQUEST_TYPE_PLACE_REFINEMENTREQUEST_TYPE_POI_AT_ADDRESS_LOOKUPREQUEST_TYPE_POPULAR_NEARBY_SEARCHREQUEST_TYPE_PUBLISHER_VIEWREQUEST_TYPE_QUERY_UNDERSTANDINGREQUEST_TYPE_REFRESH_ID_LOOKUPREQUEST_TYPE_REVERSE_GEOCODINGREQUEST_TYPE_SEARCHREQUEST_TYPE_SEARCH_CAPABILITIESREQUEST_TYPE_SEARCH_FIELD_PLACEHOLDERREQUEST_TYPE_SIRI_SEARCHREQUEST_TYPE_TERRITORY_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_PAYMENT_METHOD_LOOKUPREQUEST_TYPE_TRANSIT_NEARBY_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_SCHEDULE_LOOKUPREQUEST_TYPE_TRANSIT_VEHICLE_POSITIONREQUEST_TYPE_UNKNOWNREQUEST_TYPE_VENDOR_SPECIFIC_PLACE_REFINEMENTREQUEST_TYPE_WIFI_FINGERPRINT_LOOKUPREQUEST_TYPE_ZERO_KEYWORD_CATEGORY_SUGGESTIONREQUEST_TYPE_ZERO_KEYWORD_WITH_SEARCH_RESULTS_SUGGESTION";
  unk_26234A8 = 22;
  dword_26234B0 = 2;
  qword_26234C0 = 30;
  qword_26234D8 = 24;
  dword_26234E0 = 53;
  qword_26234F0 = 39;
  dword_26234F8 = 33;
  qword_2623508 = 26;
  dword_2623510 = 34;
  qword_2623520 = 37;
  dword_2623528 = 9;
  qword_2623538 = 22;
  dword_2623540 = 51;
  qword_2623550 = 41;
  dword_2623558 = 23;
  qword_2623568 = 29;
  dword_2623570 = 44;
  qword_2623580 = 28;
  dword_2623588 = 6;
  qword_2623598 = 26;
  dword_26235A0 = 18;
  qword_26235B0 = 32;
  dword_26235B8 = 25;
  qword_26235C8 = 39;
  dword_26235D0 = 28;
  qword_26235E0 = 38;
  dword_26235E8 = 29;
  qword_26235F8 = 32;
  dword_2623600 = 59;
  qword_2623610 = 38;
  dword_2623618 = 27;
  qword_2623628 = 36;
  dword_2623630 = 31;
  qword_2623640 = 33;
  qword_2623658 = 36;
  dword_2623660 = 38;
  qword_2623670 = 25;
  dword_2623678 = 5;
  qword_2623688 = 39;
  dword_2623690 = 45;
  qword_26236A0 = 29;
  dword_26236A8 = 7;
  qword_26236B8 = 34;
  dword_26236C0 = 56;
  qword_26236D0 = 34;
  dword_26236D8 = 13;
  qword_26236E8 = 27;
  dword_26236F0 = 46;
  qword_2623700 = 32;
  dword_2623708 = 55;
  qword_2623718 = 30;
  dword_2623720 = 61;
  qword_2623730 = 30;
  dword_2623738 = 4;
  qword_2623748 = 19;
  dword_2623750 = 1;
  qword_2623760 = 32;
  qword_2623778 = 37;
  dword_2623780 = 15;
  qword_2623790 = 24;
  dword_2623798 = 8;
  qword_26237A8 = 29;
  dword_26237B0 = 49;
  qword_26237C0 = 49;
  dword_26237C8 = 57;
  qword_26237D8 = 43;
  dword_26237E0 = 50;
  qword_26237F0 = 36;
  dword_26237F8 = 39;
  qword_2623808 = 37;
  dword_2623810 = 37;
  qword_2623820 = 20;
  dword_2623828 = 0;
  qword_2623838 = 45;
  dword_2623840 = 17;
  qword_2623850 = 36;
  dword_2623858 = 32;
  qword_2623868 = 45;
  dword_2623870 = 14;
  qword_2623880 = 56;
  dword_2623888 = 20;
  qword_2623EA0 = (uint64_t)"AUTOCOMPLETE_RESULT_HIGHLIGHT_TYPE_GRAYSCALE_DARKER_GRAYAUTOCOMPLETE_RESULT_HIGHLIGHT_TYPE_GRAYSCALE_DARKER_GRAY_INVERSE";
  unk_2623EA8 = 56;
  qword_2623E88 = (uint64_t)"AUTOCOMPLETE_RESULT_HIGHLIGHT_TYPE_BOLD_HIGHLIGHTAUTOCOMPLETE_RESULT_HIGHLIGHT_TYPE_GRAYSCALE"
                           "_DARKER_GRAYAUTOCOMPLETE_RESULT_HIGHLIGHT_TYPE_GRAYSCALE_DARKER_GRAY_INVERSE";
  unk_2623E90 = 49;
  dword_2623E98 = 0;
  dword_2623EB0 = 1;
  qword_2623EB8 = (uint64_t)"AUTOCOMPLETE_RESULT_HIGHLIGHT_TYPE_GRAYSCALE_DARKER_GRAY_INVERSE";
  unk_2623EC0 = 64;
  dword_2623EC8 = 2;
  qword_2623EE8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_HOURS_TYPE_STATE_IF_NOT_OPENPLACE_SUMMARY_LAYOUT_UNIT_HOURS_TYPE_UNKNOWN";
  qword_2623F00 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_HOURS_TYPE_UNKNOWN";
  unk_2623F08 = 44;
  qword_2623ED0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_HOURS_TYPE_STATE_AND_HOURSPLACE_SUMMARY_LAYOUT_UNIT_HOURS_TYPE_STAT"
                           "E_IF_NOT_OPENPLACE_SUMMARY_LAYOUT_UNIT_HOURS_TYPE_UNKNOWN";
  *(void *)algn_2623ED8 = 52;
  dword_2623EE0 = 1;
  qword_2623EF0 = 54;
  dword_2623EF8 = 2;
  dword_2623F10 = 0;
  qword_2623F30 = (uint64_t)"HOURS_STATE_CLOSING_SOONHOURS_STATE_CURRENTLY_CLOSEDHOURS_STATE_CURRENTLY_OPENHOURS_STATE_OPENING_SOONHOURS_STATE_PERMANENTLY_CLOSEDHOURS_STATE_TEMPORARILY_CLOSEDHOURS_STATE_UNKNOWN";
  qword_2623F48 = (uint64_t)"HOURS_STATE_CURRENTLY_CLOSEDHOURS_STATE_CURRENTLY_OPENHOURS_STATE_OPENING_SOONHOURS_STATE_PERMANENTLY_CLOSEDHOURS_STATE_TEMPORARILY_CLOSEDHOURS_STATE_UNKNOWN";
  unk_2623F50 = 28;
  qword_2623F60 = (uint64_t)"HOURS_STATE_CURRENTLY_OPENHOURS_STATE_OPENING_SOONHOURS_STATE_PERMANENTLY_CLOSEDHOURS_STATE_TEMPORARILY_CLOSEDHOURS_STATE_UNKNOWN";
  unk_2623F68 = 26;
  qword_2623F78 = (uint64_t)"HOURS_STATE_OPENING_SOONHOURS_STATE_PERMANENTLY_CLOSEDHOURS_STATE_TEMPORARILY_CLOSEDHOURS_STATE_UNKNOWN";
  qword_2623F90 = (uint64_t)"HOURS_STATE_PERMANENTLY_CLOSEDHOURS_STATE_TEMPORARILY_CLOSEDHOURS_STATE_UNKNOWN";
  qword_2623FA8 = (uint64_t)"HOURS_STATE_TEMPORARILY_CLOSEDHOURS_STATE_UNKNOWN";
  qword_2623F18 = (uint64_t)"HOURS_STATE_ANYHOURS_STATE_CLOSING_SOONHOURS_STATE_CURRENTLY_CLOSEDHOURS_STATE_CURRENTLY_OPEN"
                           "HOURS_STATE_OPENING_SOONHOURS_STATE_PERMANENTLY_CLOSEDHOURS_STATE_TEMPORARILY_CLOSEDHOURS_STATE_UNKNOWN";
  unk_2623F20 = 15;
  dword_2623F28 = 7;
  qword_2623F38 = 24;
  dword_2623F40 = 6;
  dword_2623F58 = 1;
  dword_2623F70 = 4;
  qword_2623F80 = 24;
  dword_2623F88 = 5;
  qword_2623F98 = 30;
  dword_2623FA0 = 3;
  qword_2623FB0 = 30;
  dword_2623FB8 = 2;
  qword_2623FC0 = (uint64_t)"HOURS_STATE_UNKNOWN";
  unk_2623FC8 = 19;
  dword_2623FD0 = 0;
  qword_2623FF0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_CLIENT_RESOLVEDPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_SHORT_ADDRESSPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_UNKNOWN";
  unk_2623FF8 = 54;
  qword_2624008 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_SHORT_ADDRESSPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_UNKNOWN";
  qword_2624020 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_SHORT_ADDRESSPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_UNKNOWN";
  unk_2624028 = 52;
  qword_2624038 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_UNKNOWN";
  unk_2624040 = 46;
  qword_2623FD8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_CITYPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_CLIENT_RESO"
                           "LVEDPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_SHORT_A"
                           "DDRESSPLACE_SUMMARY_LAYOUT_UNIT_ADDRESS_TYPE_UNKNOWN";
  unk_2623FE0 = 43;
  dword_2623FE8 = 2;
  dword_2624000 = 4;
  qword_2624010 = 43;
  dword_2624018 = 1;
  dword_2624030 = 3;
  dword_2624048 = 0;
  qword_2624068 = (uint64_t)"CONTAINMENT_TYPE_GEOCONTAINMENT_TYPE_PARENTCONTAINMENT_TYPE_SUMMARYCONTAINMENT_TYPE_UNKNOWN";
  unk_2624070 = 20;
  qword_2624080 = (uint64_t)"CONTAINMENT_TYPE_PARENTCONTAINMENT_TYPE_SUMMARYCONTAINMENT_TYPE_UNKNOWN";
  qword_2624098 = (uint64_t)"CONTAINMENT_TYPE_SUMMARYCONTAINMENT_TYPE_UNKNOWN";
  qword_26240B0 = (uint64_t)"CONTAINMENT_TYPE_UNKNOWN";
  qword_2624050 = (uint64_t)"CONTAINMENT_TYPE_CAT_GEOCONTAINMENT_TYPE_GEOCONTAINMENT_TYPE_PARENTCONTAINMENT_TYPE_SUMMARYCO"
                           "NTAINMENT_TYPE_UNKNOWN";
  qword_2624058 = 24;
  dword_2624060 = 4;
  dword_2624078 = 3;
  qword_2624088 = 23;
  dword_2624090 = 1;
  qword_26240A0 = 24;
  dword_26240A8 = 2;
  qword_26240B8 = 24;
  dword_26240C0 = 0;
  qword_26240E0 = (uint64_t)"PLATFORM_TYPE_IOSPLATFORM_TYPE_MACOSPLATFORM_TYPE_UNKNOWN";
  qword_26240F8 = (uint64_t)"PLATFORM_TYPE_MACOSPLATFORM_TYPE_UNKNOWN";
  unk_2624100 = 19;
  qword_26240C8 = (uint64_t)"PLATFORM_TYPE_ANYPLATFORM_TYPE_IOSPLATFORM_TYPE_MACOSPLATFORM_TYPE_UNKNOWN";
  qword_26240D0 = 17;
  dword_26240D8 = 3;
  qword_26240E8 = 17;
  dword_26240F0 = 1;
  dword_2624108 = 2;
  qword_2624110 = (uint64_t)"PLATFORM_TYPE_UNKNOWN";
  unk_2624118 = 21;
  dword_2624120 = 0;
  qword_2624140 = (uint64_t)"PLACE_SUMMARY_USE_CASE_TYPE_SEARCHPLACE_SUMMARY_USE_CASE_TYPE_UNKNONWN";
  unk_2624148 = 34;
  qword_2624158 = (uint64_t)"PLACE_SUMMARY_USE_CASE_TYPE_UNKNONWN";
  unk_2624160 = 36;
  qword_2624128 = (uint64_t)"PLACE_SUMMARY_USE_CASE_TYPE_AUTOCOMPLETEPLACE_SUMMARY_USE_CASE_TYPE_SEARCHPLACE_SUMMARY_USE_C"
                           "ASE_TYPE_UNKNONWN";
  qword_2624130 = 40;
  dword_2624138 = 1;
  dword_2624150 = 2;
  dword_2624168 = 0;
  qword_2624188 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_APP_CLIPPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_CALLPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONSPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONS_NO_ETAPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_FLYOVERPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_HIKE_ROUTE_SNAPSHOTPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_26241A0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_CALLPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONSPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONS_NO_ETAPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_FLYOVERPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_HIKE_ROUTE_SNAPSHOTPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_26241B8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONSPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONS_NO_ETAPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_FLYOVERPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_HIKE_ROUTE_SNAPSHOTPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_26241E8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_FLYOVERPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_HIKE_ROUTE_SNAPSHOTPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_2624200 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_HIKE_ROUTE_SNAPSHOTPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_2624218 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  unk_2624220 = 53;
  qword_2624230 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_26241D0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONS_NO_ETAPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_FLYOVERPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_HIKE_ROUTE_SNAPSHOTPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUERY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_26241D8 = 59;
  qword_2624238 = 59;
  qword_2624248 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_2624260 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_2624278 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_2624170 = (uint64_t)"PLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_ADD_STOPPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_A"
                           "PP_CLIPPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_CALLPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYP"
                           "E_DIRECTIONSPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_DIRECTIONS_NO_ETAPLACE_SUMMARY_LAYOUT_T"
                           "RAILING_ENTITY_TYPE_FLYOVERPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_HIKE_ROUTE_SNAPSHOTPLACE"
                           "_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_LOOK_AROUNDPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_QUE"
                           "RY_ACCELERATORPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_THUMBNAILPLACE_SUMMARY_LAYOUT_TRAILIN"
                           "G_ENTITY_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_TRAILING_ENTITY_TYPE_WEBSITE";
  qword_2624178 = 50;
  dword_2624180 = 10;
  qword_2624190 = 50;
  dword_2624198 = 7;
  qword_26241A8 = 46;
  dword_26241B0 = 5;
  qword_26241C0 = 52;
  dword_26241C8 = 2;
  dword_26241E0 = 9;
  qword_26241F0 = 49;
  dword_26241F8 = 3;
  qword_2624208 = 61;
  dword_2624210 = 11;
  dword_2624228 = 4;
  dword_2624240 = 8;
  qword_2624250 = 51;
  dword_2624258 = 1;
  qword_2624268 = 49;
  dword_2624270 = 0;
  qword_2624280 = 49;
  dword_2624288 = 6;
  qword_26242D8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_CONTAINMENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_CURATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DETOUR_TIMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DISTANCEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624A60 = 17;
  qword_26251C0 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_26251C8 = 34;
  qword_26251F0 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  dword_26251D0 = 10;
  qword_26251D8 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_26251E0 = 32;
  dword_26251E8 = 14;
  qword_26251A8 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_26251B0 = 35;
  dword_26251B8 = 21;
  qword_2625178 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  dword_2625188 = 11;
  qword_2625190 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625198 = 28;
  dword_26251A0 = 12;
  qword_2625160 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625168 = 30;
  dword_2625170 = 9;
  qword_2625180 = 33;
  qword_2625130 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  qword_2625148 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625150 = 32;
  dword_2625140 = 8;
  dword_2625158 = 16;
  qword_2625118 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625120 = 32;
  dword_2625128 = 22;
  qword_2625138 = 32;
  qword_26250E8 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  qword_2625100 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625108 = 30;
  dword_26250F8 = 17;
  dword_2625110 = 20;
  qword_26250D0 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_26250D8 = 37;
  dword_26250E0 = 1;
  qword_26250F0 = 31;
  qword_26250A0 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_CULTURESPATIAL_LOOKUP_CATEGORY_DIVINGSPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_26250A8 = 31;
  qword_26250B8 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_DIVINGSPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_26250C0 = 30;
  dword_26250B0 = 7;
  dword_26250C8 = 19;
  qword_2625088 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_BEACHSPATIAL_LOOKUP_CATEGORY_CULTURESPATIAL_LOOKUP_CATEGORY_DIVINGSPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625090 = 29;
  dword_2625098 = 15;
  qword_2625070 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_AQUARIUMSPATIAL_LOOKUP_CATEGORY_BEACHSPATIAL_LOOKUP_CATEGORY_CULTURESPATIAL_LOOKUP_CATEGORY_DIVINGSPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625078 = 32;
  qword_2625058 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_AMUSEMENTPARKSPATIAL_LOOKUP_CATEGORY_AQUARIUMSPATIAL_LOOKUP_CATEGORY_BEACHSPATIAL_LOOKUP_CATEGORY_CULTURESPATIAL_LOOKUP_CATEGORY_DIVINGSPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625060 = 37;
  dword_2625080 = 3;
  dword_2625068 = 2;
  qword_2624FB0 = (uint64_t)"INTERPOLATIONPARCELPOINTPOSTAL_ZIPSUBPREMISE";
  qword_2625040 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_AIRPORTSPATIAL_LOOKUP_CATEGORY_AMUSEMENTPARKSPATIAL_LOOKUP_CATEGORY_AQUARIUMSPATIAL_LOOKUP_CATEGORY_BEACHSPATIAL_LOOKUP_CATEGORY_CULTURESPATIAL_LOOKUP_CATEGORY_DIVINGSPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEGORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEGORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_CATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625048 = 31;
  dword_2625038 = 18;
  dword_2625050 = 13;
  qword_2625010 = (uint64_t)"SUBPREMISE";
  unk_2625018 = 10;
  dword_2625020 = 5;
  qword_2625028 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_ACTIVITYSPATIAL_LOOKUP_CATEGORY_AIRPORTSPATIAL_LOOKUP_CATEGORY_AMUSEM"
                           "ENTPARKSPATIAL_LOOKUP_CATEGORY_AQUARIUMSPATIAL_LOOKUP_CATEGORY_BEACHSPATIAL_LOOKUP_CATEGORY_C"
                           "ULTURESPATIAL_LOOKUP_CATEGORY_DIVINGSPATIAL_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_LOOKUP_CATEG"
                           "ORY_FITNESSSPATIAL_LOOKUP_CATEGORY_HIKINGSPATIAL_LOOKUP_CATEGORY_HOSPITALSPATIAL_LOOKUP_CATEG"
                           "ORY_LANDMARKSPATIAL_LOOKUP_CATEGORY_MOUNTAINSPATIAL_LOOKUP_CATEGORY_MUSEUMSPATIAL_LOOKUP_CATE"
                           "GORY_NIGHTLIFESPATIAL_LOOKUP_CATEGORY_PARKSPATIAL_LOOKUP_CATEGORY_PERFORMANCESPATIAL_LOOKUP_C"
                           "ATEGORY_RESTAURANTSPATIAL_LOOKUP_CATEGORY_SHOPPINGSPATIAL_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_L"
                           "OOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  unk_2625030 = 32;
  qword_2624FF8 = (uint64_t)"POSTAL_ZIPSUBPREMISE";
  unk_2625000 = 10;
  dword_2624FF0 = 0;
  dword_2625008 = 3;
  qword_2624FE0 = (uint64_t)"POINTPOSTAL_ZIPSUBPREMISE";
  unk_2624FE8 = 5;
  qword_2624FC8 = (uint64_t)"PARCELPOINTPOSTAL_ZIPSUBPREMISE";
  unk_2624FD0 = 6;
  dword_2624FD8 = 4;
  qword_2624FB8 = 13;
  dword_2624FC0 = 1;
  qword_2624F80 = (uint64_t)"UNKNOWN_PLACE_TYPE";
  unk_2624F88 = 18;
  qword_2624F98 = (uint64_t)"APPROXIMATEINTERPOLATIONPARCELPOINTPOSTAL_ZIPSUBPREMISE";
  unk_2624FA0 = 11;
  dword_2624FA8 = 2;
  dword_2624F90 = 0;
  qword_2624F68 = (uint64_t)"TIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624F70 = 9;
  dword_2624F78 = 35;
  qword_2624F38 = (uint64_t)"SUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  dword_2624F48 = 4;
  qword_2624F50 = (uint64_t)"SUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624F58 = 12;
  dword_2624F60 = 43;
  qword_2624F20 = (uint64_t)"STREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624F28 = 6;
  dword_2624F30 = 49;
  qword_2624F40 = 23;
  qword_2624EF0 = (uint64_t)"POSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624EF8 = 6;
  qword_2624F08 = (uint64_t)"REGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624F10 = 6;
  dword_2624F00 = 51;
  dword_2624F18 = 63;
  qword_2624ED8 = (uint64_t)"PHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624EE0 = 16;
  dword_2624EE8 = 65;
  qword_2624EA8 = (uint64_t)"LOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  qword_2624EC0 = (uint64_t)"OCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624EC8 = 5;
  dword_2624EB8 = 16;
  dword_2624ED0 = 44;
  qword_2624E90 = (uint64_t)"ISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624E98 = 6;
  dword_2624EA0 = 48;
  qword_2624EB0 = 8;
  qword_2624E60 = (uint64_t)"INLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624E68 = 12;
  dword_2624E88 = 54;
  qword_2624E78 = (uint64_t)"INTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624E80 = 12;
  dword_2624E70 = 46;
  qword_2624E48 = (uint64_t)"DIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624E50 = 8;
  dword_2624E58 = 64;
  qword_2624E18 = (uint64_t)"CONTINENTCOUNTRYDIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624E20 = 9;
  dword_2624E28 = 61;
  qword_2624E30 = (uint64_t)"COUNTRYDIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624E38 = 7;
  dword_2624E40 = 1;
  qword_2624E00 = (uint64_t)"BUSINESSCONTINENTCOUNTRYDIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624E08 = 8;
  dword_2624E10 = 47;
  qword_2624DE8 = (uint64_t)"BUILDINGBUSINESSCONTINENTCOUNTRYDIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624DF0 = 8;
  qword_2624DD0 = (uint64_t)"AOIBUILDINGBUSINESSCONTINENTCOUNTRYDIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624DD8 = 3;
  dword_2624DF8 = 55;
  dword_2624DE0 = 45;
  qword_2624D28 = (uint64_t)"POI_ENTRYPOI_OTHER_BUILDING_FACEPOI_SIGNPOI_UNSPECIFIED";
  qword_2624DB8 = (uint64_t)"ADMINISTRATIVE_AREAAOIBUILDINGBUSINESSCONTINENTCOUNTRYDIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624DC0 = 19;
  dword_2624DB0 = 50;
  dword_2624DC8 = 2;
  dword_2624D98 = 57;
  qword_2624D88 = (uint64_t)"ADDRESSADMINADMINISTRATIVE_AREAAOIBUILDINGBUSINESSCONTINENTCOUNTRYDIVISIONINLAND_WATERINTERSE"
                           "CTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITY"
                           "TIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624D90 = 7;
  qword_2624DA0 = (uint64_t)"ADMINADMINISTRATIVE_AREAAOIBUILDINGBUSINESSCONTINENTCOUNTRYDIVISIONINLAND_WATERINTERSECTIONISLANDLOCALITYOCEANPHYSICAL_FEATUREPOSTALREGIONSTREETSUB_ADMINISTRATIVE_AREASUB_LOCALITYTIME_ZONEUNKNOWN_PLACE_TYPE";
  unk_2624DA8 = 5;
  qword_2624D70 = (uint64_t)"POI_UNSPECIFIED";
  unk_2624D78 = 15;
  dword_2624D68 = 1;
  dword_2624D80 = 0;
  qword_2624D58 = (uint64_t)"POI_SIGNPOI_UNSPECIFIED";
  unk_2624D60 = 8;
  qword_2624D40 = (uint64_t)"POI_OTHER_BUILDING_FACEPOI_SIGNPOI_UNSPECIFIED";
  unk_2624D48 = 23;
  dword_2624D50 = 4;
  qword_2624D30 = 9;
  dword_2624D38 = 5;
  qword_2624CC8 = (uint64_t)"AUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_RESULTAUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_RESULT_TWO_LINEAUTOCOMPLETE_RESULT_CELL_TYPE_TWO_LINE";
  unk_2624CD0 = 46;
  qword_2624D10 = (uint64_t)"POI_BUILDING_FACE_WITH_ENTRYPOI_ENTRYPOI_OTHER_BUILDING_FACEPOI_SIGNPOI_UNSPECIFIED";
  *(void *)algn_2624D18 = 28;
  dword_2624D20 = 2;
  qword_2624CE0 = (uint64_t)"AUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_RESULT_TWO_LINEAUTOCOMPLETE_RESULT_CELL_TYPE_TWO_LINE";
  unk_2624CE8 = 55;
  qword_2624CF8 = (uint64_t)"AUTOCOMPLETE_RESULT_CELL_TYPE_TWO_LINE";
  dword_2624CF0 = 4;
  qword_2624D00 = 38;
  dword_2624D08 = 3;
  dword_2624CD8 = 2;
  qword_2624A70 = (uint64_t)"ADD_TO_FAVORITESAUTOCOMPLETE_NAV_FROMAUTOCOMPLETE_NAV_TOAUTOCOMPLETE_SEARCHBOOKMARK_REFRESHHINT_COMPLETIONHINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  qword_2624CB0 = (uint64_t)"AUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_QUERYAUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_RESULTAUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_RESULT_TWO_LINEAUTOCOMPLETE_RESULT_CELL_TYPE_TWO_LINE";
  unk_2624CB8 = 45;
  dword_2624CA8 = 0;
  dword_2624CC0 = 1;
  qword_2624C80 = (uint64_t)"USER_NO_TYPING";
  qword_2624C98 = (uint64_t)"AUTOCOMPLETE_RESULT_CELL_TYPE_DEFAULTAUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_QUERYAUTOCOMPLET"
                           "E_RESULT_CELL_TYPE_PROMINENT_RESULTAUTOCOMPLETE_RESULT_CELL_TYPE_PROMINENT_RESULT_TWO_LINEAUT"
                           "OCOMPLETE_RESULT_CELL_TYPE_TWO_LINE";
  unk_2624CA0 = 37;
  qword_2624C88 = 14;
  dword_2624C90 = 20;
  qword_2624C68 = (uint64_t)"USERUSER_NO_TYPING";
  dword_2624C60 = 1;
  qword_2624C70 = 4;
  dword_2624C78 = 2;
  qword_2624C50 = (uint64_t)"URLUSERUSER_NO_TYPING";
  unk_2624C58 = 3;
  qword_2624C38 = (uint64_t)"UNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624C40 = 14;
  dword_2624C48 = 0;
  dword_2624C18 = 10;
  qword_2624C20 = (uint64_t)"STARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624C28 = 10;
  dword_2624C30 = 6;
  qword_2624C08 = (uint64_t)"STARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  qword_2624BF0 = (uint64_t)"STARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624BF8 = 21;
  dword_2624C00 = 8;
  qword_2624C10 = 18;
  qword_2624BD8 = (uint64_t)"STARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  dword_2624BD0 = 4;
  qword_2624BE0 = 25;
  dword_2624BE8 = 12;
  qword_2624BC0 = (uint64_t)"SPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624BC8 = 8;
  qword_2624BA8 = (uint64_t)"ROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624BB0 = 7;
  dword_2624BB8 = 18;
  qword_2624B90 = (uint64_t)"REFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624B98 = 10;
  dword_2624B88 = 23;
  dword_2624BA0 = 3;
  qword_2624B78 = (uint64_t)"RAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  qword_2624B60 = (uint64_t)"PRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624B68 = 9;
  dword_2624B70 = 19;
  qword_2624B80 = 19;
  qword_2624B48 = (uint64_t)"NAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624B50 = 6;
  dword_2624B40 = 15;
  dword_2624B58 = 16;
  qword_2624B30 = (uint64_t)"NAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624B38 = 8;
  qword_2624B18 = (uint64_t)"HINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624B20 = 12;
  dword_2624B28 = 9;
  dword_2624AF8 = 7;
  qword_2624B00 = (uint64_t)"HINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624B08 = 13;
  dword_2624B10 = 5;
  qword_2624AE8 = (uint64_t)"HINT_COMPLETIONHINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624AF0 = 15;
  qword_2624AD0 = (uint64_t)"BOOKMARK_REFRESHHINT_COMPLETIONHINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624AD8 = 16;
  dword_2624AE0 = 17;
  qword_2624AB8 = (uint64_t)"AUTOCOMPLETE_SEARCHBOOKMARK_REFRESHHINT_COMPLETIONHINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624AC0 = 19;
  dword_2624AB0 = 14;
  dword_2624AC8 = 11;
  qword_2624AA0 = (uint64_t)"AUTOCOMPLETE_NAV_TOAUTOCOMPLETE_SEARCHBOOKMARK_REFRESHHINT_COMPLETIONHINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  unk_2624AA8 = 19;
  qword_2624A88 = (uint64_t)"AUTOCOMPLETE_NAV_FROMAUTOCOMPLETE_NAV_TOAUTOCOMPLETE_SEARCHBOOKMARK_REFRESHHINT_COMPLETIONHINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLETIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORYSTARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  qword_2624A90 = 21;
  dword_2624A98 = 13;
  qword_2624A78 = 16;
  dword_2624A80 = 21;
  qword_26249C8 = (uint64_t)"RESOLVED_ITEM_TYPE_HOMERESOLVED_ITEM_TYPE_PARKED_CARRESOLVED_ITEM_TYPE_SCHOOLRESOLVED_ITEM_TYPE_SERVERRESOLVED_ITEM_TYPE_UNKNOWNRESOLVED_ITEM_TYPE_WORK";
  qword_2624A58 = (uint64_t)"ADD_TO_COLLECTIONADD_TO_FAVORITESAUTOCOMPLETE_NAV_FROMAUTOCOMPLETE_NAV_TOAUTOCOMPLETE_SEARCHB"
                           "OOKMARK_REFRESHHINT_COMPLETIONHINT_CONTACTSHINT_HISTORYNAV_FROMNAV_TOPRELOADERRAP_HINT_COMPLE"
                           "TIONREFINEMENTROUTINGSPELLINGSTARK_AUTOCOMPLETE_SEARCHSTARK_HINT_COMPLETIONSTARK_HINT_HISTORY"
                           "STARK_USERUNKNOWN_SOURCEURLUSERUSER_NO_TYPING";
  dword_2624A68 = 22;
  dword_2624A50 = 2;
  qword_2624A40 = (uint64_t)"RESOLVED_ITEM_TYPE_WORK";
  qword_2624A28 = (uint64_t)"RESOLVED_ITEM_TYPE_UNKNOWNRESOLVED_ITEM_TYPE_WORK";
  qword_2624A30 = 26;
  dword_2624A38 = 0;
  qword_2624A48 = 23;
  dword_2624A08 = 6;
  qword_2624A10 = (uint64_t)"RESOLVED_ITEM_TYPE_SERVERRESOLVED_ITEM_TYPE_UNKNOWNRESOLVED_ITEM_TYPE_WORK";
  unk_2624A18 = 25;
  dword_2624A20 = 5;
  qword_26249F8 = (uint64_t)"RESOLVED_ITEM_TYPE_SCHOOLRESOLVED_ITEM_TYPE_SERVERRESOLVED_ITEM_TYPE_UNKNOWNRESOLVED_ITEM_TYPE_WORK";
  unk_2624A00 = 25;
  qword_26249E0 = (uint64_t)"RESOLVED_ITEM_TYPE_PARKED_CARRESOLVED_ITEM_TYPE_SCHOOLRESOLVED_ITEM_TYPE_SERVERRESOLVED_ITEM_TYPE_UNKNOWNRESOLVED_ITEM_TYPE_WORK";
  unk_26249E8 = 29;
  dword_26249F0 = 3;
  qword_26249B0 = (uint64_t)"RESOLVED_ITEM_TYPE_CURRENT_LOCATIONRESOLVED_ITEM_TYPE_HOMERESOLVED_ITEM_TYPE_PARKED_CARRESOLV"
                           "ED_ITEM_TYPE_SCHOOLRESOLVED_ITEM_TYPE_SERVERRESOLVED_ITEM_TYPE_UNKNOWNRESOLVED_ITEM_TYPE_WORK";
  *(void *)algn_26249B8 = 35;
  qword_26249D0 = 23;
  dword_26249D8 = 1;
  dword_26249C0 = 4;
  qword_2624998 = (uint64_t)"PREFERRED_DISTANCE_UNIT_UNKNOWN";
  unk_26249A0 = 31;
  dword_26249A8 = 0;
  qword_2624770 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_ADDRESS_CLUSTERCLIENT_REVISION_CAN_HANDLE_APPCLIPSCLIENT_REVISION_CAN_HANDLE_APPLE_RATINGS_PHOTOSCLIENT_REVISION_CAN_HANDLE_BASEMAP_IDCLIENT_REVISION_CAN_HANDLE_COARSE_LOCATIONCLIENT_REVISION_CAN_HANDLE_ENHANCED_PLACEMENTSCLIENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  qword_2624980 = (uint64_t)"PREFERRED_DISTANCE_UNIT_METRICPREFERRED_DISTANCE_UNIT_UNKNOWN";
  dword_2624978 = 2;
  qword_2624988 = 30;
  dword_2624990 = 1;
  qword_2624968 = (uint64_t)"PREFERRED_DISTANCE_UNIT_IMPERIALPREFERRED_DISTANCE_UNIT_METRICPREFERRED_DISTANCE_UNIT_UNKNOWN";
  unk_2624970 = 32;
  qword_2624950 = (uint64_t)"CLIENT_REVISION_UNKNOWN";
  unk_2624958 = 23;
  dword_2624960 = 0;
  qword_2624938 = (uint64_t)"CLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624940 = 30;
  dword_2624930 = 20;
  dword_2624948 = 30;
  qword_2624920 = (uint64_t)"CLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  qword_2624908 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624910 = 47;
  dword_2624918 = 31;
  qword_2624928 = 27;
  dword_26248E8 = 11;
  qword_26248F0 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_26248F8 = 45;
  dword_2624900 = 29;
  qword_26248D8 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  qword_26248C0 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  qword_26248C8 = 49;
  dword_26248D0 = 8;
  qword_26248E0 = 52;
  qword_26248A8 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  dword_26248A0 = 33;
  qword_26248B0 = 38;
  dword_26248B8 = 36;
  qword_2624890 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624898 = 47;
  qword_2624878 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624880 = 45;
  dword_2624888 = 1;
  dword_2624858 = 35;
  qword_2624860 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624868 = 39;
  dword_2624870 = 34;
  qword_2624848 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624850 = 63;
  qword_2624830 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624838 = 38;
  dword_2624840 = 32;
  qword_2624818 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  dword_2624810 = 37;
  qword_2624820 = 37;
  dword_2624828 = 38;
  qword_2624800 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624808 = 47;
  qword_26247E8 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_ENHANCED_PLACEMENTSCLIENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  qword_26247F0 = 46;
  dword_26247F8 = 5;
  dword_26247C8 = 2;
  qword_26247D0 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_COARSE_LOCATIONCLIENT_REVISION_CAN_HANDLE_ENHANCED_PLACEMENTSCLIENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_26247D8 = 42;
  dword_26247E0 = 7;
  qword_26247B8 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_BASEMAP_IDCLIENT_REVISION_CAN_HANDLE_COARSE_LOCATIONCLIENT_REVISION_CAN_HANDLE_ENHANCED_PLACEMENTSCLIENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_26247C0 = 37;
  qword_26247A0 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_APPLE_RATINGS_PHOTOSCLIENT_REVISION_CAN_HANDLE_BASEMAP_IDCLIENT_REVISION_CAN_HANDLE_COARSE_LOCATIONCLIENT_REVISION_CAN_HANDLE_ENHANCED_PLACEMENTSCLIENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_26247A8 = 47;
  dword_26247B0 = 4;
  qword_2624788 = (uint64_t)"CLIENT_REVISION_CAN_HANDLE_APPCLIPSCLIENT_REVISION_CAN_HANDLE_APPLE_RATINGS_PHOTOSCLIENT_REVISION_CAN_HANDLE_BASEMAP_IDCLIENT_REVISION_CAN_HANDLE_COARSE_LOCATIONCLIENT_REVISION_CAN_HANDLE_ENHANCED_PLACEMENTSCLIENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVISION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLIENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVISION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVISION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISION_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624790 = 35;
  dword_2624780 = 6;
  dword_2624798 = 3;
  dword_2624768 = 10;
  qword_2624778 = 42;
  qword_2624758 = (uint64_t)"CLIENT_REVISION_AZUL_RELEASECLIENT_REVISION_CAN_HANDLE_ADDRESS_CLUSTERCLIENT_REVISION_CAN_HAN"
                           "DLE_APPCLIPSCLIENT_REVISION_CAN_HANDLE_APPLE_RATINGS_PHOTOSCLIENT_REVISION_CAN_HANDLE_BASEMAP"
                           "_IDCLIENT_REVISION_CAN_HANDLE_COARSE_LOCATIONCLIENT_REVISION_CAN_HANDLE_ENHANCED_PLACEMENTSCL"
                           "IENT_REVISION_CAN_HANDLE_FLEXIBLE_ACTION_LINKCLIENT_REVISION_CAN_HANDLE_HIKE_ROUTECLIENT_REVI"
                           "SION_CAN_HANDLE_HIKING_DATACLIENT_REVISION_CAN_HANDLE_INTERLEAVED_GUIDES_IN_SEARCH_RESULTSCLI"
                           "ENT_REVISION_CAN_HANDLE_OFFLINE_DATACLIENT_REVISION_CAN_HANDLE_PERMANENTLY_CLOSEDCLIENT_REVIS"
                           "ION_CAN_HANDLE_REALTIME_EV_CHARGINGCLIENT_REVISION_CAN_HANDLE_SAVE_BUTTONCLIENT_REVISION_CAN_"
                           "HANDLE_SIRI_TRAFFIC_INCIDENTSCLIENT_REVISION_CAN_HANDLE_SMART_CARD_DYNAMIC_LAYOUTCLIENT_REVIS"
                           "ION_CAN_HANDLE_UNIFIED_ACTION_ROWCLIENT_REVISION_CAN_HANDLE_YELP_PHOTO_COMMINGLECLIENT_REVISI"
                           "ON_SKY_RELEASECLIENT_REVISION_SYDNEY_RELEASECLIENT_REVISION_UNKNOWN";
  unk_2624760 = 28;
  qword_2624728 = (uint64_t)"BASIC_TRANSITFARE_BASED";
  unk_2624730 = 13;
  qword_2624740 = (uint64_t)"FARE_BASED";
  unk_2624748 = 10;
  dword_2624750 = 1;
  dword_2624738 = 0;
  qword_26246F8 = (uint64_t)"MULTIPLE_ATTRIBUTIONSSINGLE_ATTRIBUTION";
  unk_2624700 = 21;
  qword_2624710 = (uint64_t)"SINGLE_ATTRIBUTION";
  unk_2624718 = 18;
  dword_2624720 = 0;
  dword_2624708 = 1;
  qword_26246C8 = (uint64_t)"TRANSITUNKNOWN";
  dword_26246D8 = 4;
  qword_26246E0 = (uint64_t)"UNKNOWN";
  unk_26246E8 = 7;
  dword_26246F0 = 0;
  qword_26246B0 = (uint64_t)"SETTLEMENTTRANSITUNKNOWN";
  unk_26246B8 = 10;
  dword_26246C0 = 2;
  qword_26246D0 = 7;
  qword_2624698 = (uint64_t)"BUSINESSSETTLEMENTTRANSITUNKNOWN";
  unk_26246A0 = 8;
  qword_2624680 = (uint64_t)"BRANDBUSINESSSETTLEMENTTRANSITUNKNOWN";
  unk_2624688 = 5;
  dword_26246A8 = 1;
  dword_2624690 = 5;
  qword_2624620 = (uint64_t)"PLACE_SUMMARY_FORMAT_TYPE_STRIKETHROUGHPLACE_SUMMARY_FORMAT_TYPE_TAPPABLE_ENTITYPLACE_SUMMARY_FORMAT_TYPE_UNKNOWN";
  unk_2624628 = 39;
  qword_2624668 = (uint64_t)"ADDRESSBRANDBUSINESSSETTLEMENTTRANSITUNKNOWN";
  unk_2624670 = 7;
  dword_2624678 = 3;
  dword_2624660 = 0;
  qword_2624650 = (uint64_t)"PLACE_SUMMARY_FORMAT_TYPE_UNKNOWN";
  qword_2624638 = (uint64_t)"PLACE_SUMMARY_FORMAT_TYPE_TAPPABLE_ENTITYPLACE_SUMMARY_FORMAT_TYPE_UNKNOWN";
  qword_2624640 = 41;
  dword_2624648 = 4;
  qword_2624658 = 33;
  qword_2624608 = (uint64_t)"PLACE_SUMMARY_FORMAT_TYPE_ITALICSPLACE_SUMMARY_FORMAT_TYPE_STRIKETHROUGHPLACE_SUMMARY_FORMAT_TYPE_TAPPABLE_ENTITYPLACE_SUMMARY_FORMAT_TYPE_UNKNOWN";
  unk_2624610 = 33;
  dword_2624618 = 2;
  dword_2624630 = 3;
  qword_2624470 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_26245F0 = (uint64_t)"PLACE_SUMMARY_FORMAT_TYPE_BOLDPLACE_SUMMARY_FORMAT_TYPE_ITALICSPLACE_SUMMARY_FORMAT_TYPE_STRI"
                           "KETHROUGHPLACE_SUMMARY_FORMAT_TYPE_TAPPABLE_ENTITYPLACE_SUMMARY_FORMAT_TYPE_UNKNOWN";
  *(void *)algn_26245F8 = 30;
  dword_2624600 = 1;
  dword_26245E8 = 31;
  qword_26245D8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_26245C8 = 52;
  dword_26245D0 = 9;
  qword_26245E0 = 40;
  qword_26245A8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_26245C0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  dword_26245A0 = 12;
  qword_26245B0 = 38;
  dword_26245B8 = 0;
  qword_2624590 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624598 = 65;
  qword_2624580 = 46;
  dword_2624588 = 8;
  qword_2624560 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624578 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  dword_2624558 = 14;
  qword_2624568 = 37;
  dword_2624570 = 13;
  qword_2624548 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624538 = 45;
  dword_2624540 = 22;
  qword_2624550 = 46;
  qword_2624518 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624530 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  dword_2624510 = 25;
  qword_2624520 = 37;
  dword_2624528 = 16;
  qword_2624500 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624508 = 64;
  qword_26244F0 = 38;
  dword_26244F8 = 7;
  qword_26244D0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_26244D8 = 55;
  qword_26244E8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  dword_26244C8 = 21;
  dword_26244E0 = 19;
  qword_26244B8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_26244C0 = 52;
  qword_26244A8 = 36;
  dword_26244B0 = 4;
  qword_26244A0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624488 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624490 = 45;
  dword_2624480 = 20;
  dword_2624498 = 29;
  qword_2624458 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624460 = 35;
  dword_2624468 = 1;
  qword_2624478 = 50;
  qword_2624428 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624430 = 36;
  qword_2624440 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624448 = 46;
  dword_2624438 = 5;
  dword_2624450 = 30;
  qword_2624410 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624418 = 50;
  dword_2624420 = 28;
  qword_26243E0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_26243E8 = 46;
  dword_26243F0 = 33;
  qword_26243F8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624400 = 48;
  dword_2624408 = 27;
  qword_26243C8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_26243D0 = 48;
  dword_26243D8 = 35;
  qword_26243B0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_26243B8 = 69;
  qword_2624398 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_26243A0 = 50;
  dword_26243A8 = 34;
  dword_26243C0 = 32;
  qword_2624380 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624388 = 45;
  dword_2624390 = 17;
  qword_2624368 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624370 = 46;
  qword_2624338 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  dword_2624360 = 23;
  dword_2624378 = 18;
  qword_2624340 = 49;
  qword_2624350 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_2624358 = 38;
  dword_2624348 = 11;
  qword_2624308 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_DETOUR_TIMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DISTANCEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  qword_2624320 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_DISTANCEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  dword_2624318 = 26;
  qword_2624328 = 39;
  dword_2624330 = 3;
  qword_26242F0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_CURATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DETOUR_TIMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DISTANCEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_26242F8 = 45;
  dword_2624300 = 10;
  qword_2624310 = 42;
  qword_26242C0 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_CATEGORYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_CONTAINMENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_CURATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DETOUR_TIMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DISTANCEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_26242C8 = 39;
  dword_26242D0 = 2;
  qword_26242E0 = 42;
  dword_26242E8 = 15;
  qword_26242A8 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_ARP_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_CATEGORYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_CONTAINMENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_CURATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DETOUR_TIMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DISTANCEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTOIDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAINPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_FACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PLACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRICEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STRINGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBMITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  unk_26242B0 = 42;
  qword_2624290 = (uint64_t)"PLACE_SUMMARY_LAYOUT_UNIT_TYPE_ADDRESSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_ARP_RATINGSPLACE_SUMMARY"
                           "_LAYOUT_UNIT_TYPE_CATEGORYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_CONTAINMENTPLACE_SUMMARY_LAYOUT_UNIT"
                           "_TYPE_CURATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_DETOUR_TIMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_"
                           "DISTANCEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_EV_CHARGERS_NUMBERPLACE_SUMMARY_LAYOUT_UNIT_TYPE_FACTO"
                           "IDPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_EXTRAPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIGHLIGHT_MAIN"
                           "PLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_DURATIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_F"
                           "ACTOID_ELEVATION_GAIN_LOSSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKE_ROUTE_LENGTHPLACE_SUMMARY_LAYOU"
                           "T_UNIT_TYPE_HIKE_ROUTE_TYPEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HIKING_DIFFICULTYPLACE_SUMMARY_LAYO"
                           "UT_UNIT_TYPE_HIKING_TRAIL_LENGTHPLACE_SUMMARY_LAYOUT_UNIT_TYPE_HOURSPLACE_SUMMARY_LAYOUT_UNIT"
                           "_TYPE_IN_USER_LIBRARYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_NUM_PL"
                           "ACES_IN_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PHOTO_CAROUSELPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PRIC"
                           "EPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER_DESCRIPTIONPLACE_SUMMARY_LAYOUT_UNIT_TYPE_PUBLISHER"
                           "_NAME_FOR_GUIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RATINGSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_REAL_TIME"
                           "_EV_CHARGER_AVAILABILITYPLACE_SUMMARY_LAYOUT_UNIT_TYPE_RECENTPLACE_SUMMARY_LAYOUT_UNIT_TYPE_S"
                           "ECONDARY_NAMEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_SERVER_OVERRIDEPLACE_SUMMARY_LAYOUT_UNIT_TYPE_STR"
                           "INGPLACE_SUMMARY_LAYOUT_UNIT_TYPE_TRANSIT_SHIELDSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UGC_USER_SUBM"
                           "ITTED_RECOMMENDATIONSPLACE_SUMMARY_LAYOUT_UNIT_TYPE_UNKNOWNPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USE"
                           "R_GENERATED_GUIDESPLACE_SUMMARY_LAYOUT_UNIT_TYPE_USER_NOTE";
  *(void *)algn_2624298 = 38;
  dword_26242A0 = 6;
  dword_26242B8 = 24;
  qword_2625208 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_STADIUMSPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  qword_2625220 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_UNKNOWNSPATIAL_LOOKUP_CATEGORY_ZOO";
  qword_2625238 = (uint64_t)"SPATIAL_LOOKUP_CATEGORY_ZOO";
  qword_26251F8 = 34;
  dword_2625200 = 6;
  qword_2625210 = 31;
  dword_2625218 = 5;
  qword_2625228 = 31;
  dword_2625230 = 0;
  qword_2625240 = 27;
  dword_2625248 = 4;
  qword_2625280 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_AMUSEMENTPARKSPATIAL_PLACE_LOOKUP_CATEGORY_AMUSEMENTPARK_RIDESPATIAL_PLACE_LOOKUP_CATEGORY_AQUARIUMSPATIAL_PLACE_LOOKUP_CATEGORY_BEACHSPATIAL_PLACE_LOOKUP_CATEGORY_CULTURESPATIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625298 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_AMUSEMENTPARK_RIDESPATIAL_PLACE_LOOKUP_CATEGORY_AQUARIUMSPATIAL_PLACE_LOOKUP_CATEGORY_BEACHSPATIAL_PLACE_LOOKUP_CATEGORY_CULTURESPATIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  unk_26252A0 = 48;
  qword_26252B0 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_AQUARIUMSPATIAL_PLACE_LOOKUP_CATEGORY_BEACHSPATIAL_PLACE_LOOKUP_CATEGORY_CULTURESPATIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_26252C8 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_BEACHSPATIAL_PLACE_LOOKUP_CATEGORY_CULTURESPATIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_26252E0 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_CULTURESPATIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_26252F8 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625310 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625328 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625340 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625358 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625370 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625388 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_26253A0 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_26253B8 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_26253D0 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  unk_26253D8 = 34;
  qword_26253E8 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625400 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625418 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625250 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_ACTIVITYSPATIAL_PLACE_LOOKUP_CATEGORY_AIRPORTSPATIAL_PLACE_LOOK"
                           "UP_CATEGORY_AMUSEMENTPARKSPATIAL_PLACE_LOOKUP_CATEGORY_AMUSEMENTPARK_RIDESPATIAL_PLACE_LOOKUP"
                           "_CATEGORY_AQUARIUMSPATIAL_PLACE_LOOKUP_CATEGORY_BEACHSPATIAL_PLACE_LOOKUP_CATEGORY_CULTURESPA"
                           "TIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOO"
                           "KUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITA"
                           "LSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LO"
                           "OKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARK"
                           "SPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLAC"
                           "E_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGO"
                           "RY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  *(void *)algn_2625258 = 38;
  qword_26252B8 = 38;
  qword_2625360 = 38;
  qword_2625378 = 38;
  qword_2625390 = 38;
  qword_2625420 = 38;
  qword_2625430 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625448 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625460 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  qword_2625478 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  dword_2625260 = 18;
  qword_2625268 = (uint64_t)"SPATIAL_PLACE_LOOKUP_CATEGORY_AIRPORTSPATIAL_PLACE_LOOKUP_CATEGORY_AMUSEMENTPARKSPATIAL_PLACE_LOOKUP_CATEGORY_AMUSEMENTPARK_RIDESPATIAL_PLACE_LOOKUP_CATEGORY_AQUARIUMSPATIAL_PLACE_LOOKUP_CATEGORY_BEACHSPATIAL_PLACE_LOOKUP_CATEGORY_CULTURESPATIAL_PLACE_LOOKUP_CATEGORY_DIVINGSPATIAL_PLACE_LOOKUP_CATEGORY_ENTERTAINMENTSPATIAL_PLACE_LOOKUP_CATEGORY_FITNESSSPATIAL_PLACE_LOOKUP_CATEGORY_HIKINGSPATIAL_PLACE_LOOKUP_CATEGORY_HOSPITALSPATIAL_PLACE_LOOKUP_CATEGORY_LANDMARKSPATIAL_PLACE_LOOKUP_CATEGORY_MOUNTAINSPATIAL_PLACE_LOOKUP_CATEGORY_MUSEUMSPATIAL_PLACE_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_PLACE_LOOKUP_CATEGORY_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_PERFORMANCESPATIAL_PLACE_LOOKUP_CATEGORY_RESTAURANTSPATIAL_PLACE_LOOKUP_CATEGORY_SHOPPINGSPATIAL_PLACE_LOOKUP_CATEGORY_SKATE_PARKSPATIAL_PLACE_LOOKUP_CATEGORY_STADIUMSPATIAL_PLACE_LOOKUP_CATEGORY_UNKNOWNSPATIAL_PLACE_LOOKUP_CATEGORY_ZOO";
  unk_2625270 = 37;
  dword_2625278 = 13;
  qword_2625288 = 43;
  dword_2625290 = 2;
  dword_26252A8 = 23;
  dword_26252C0 = 3;
  qword_26252D0 = 35;
  dword_26252D8 = 15;
  qword_26252E8 = 37;
  dword_26252F0 = 7;
  qword_2625300 = 36;
  dword_2625308 = 19;
  qword_2625318 = 43;
  dword_2625320 = 1;
  qword_2625330 = 37;
  dword_2625338 = 17;
  qword_2625348 = 36;
  dword_2625350 = 20;
  dword_2625368 = 22;
  dword_2625380 = 8;
  dword_2625398 = 16;
  qword_26253A8 = 36;
  dword_26253B0 = 9;
  qword_26253C0 = 39;
  dword_26253C8 = 11;
  dword_26253E0 = 12;
  qword_26253F0 = 41;
  dword_26253F8 = 21;
  qword_2625408 = 40;
  dword_2625410 = 10;
  dword_2625428 = 14;
  qword_2625438 = 40;
  dword_2625440 = 6;
  qword_2625450 = 37;
  dword_2625458 = 5;
  qword_2625468 = 37;
  dword_2625470 = 0;
  qword_2625480 = 33;
  dword_2625488 = 4;
  qword_2625498 = 40;
  qword_26254C0 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_BUSINESSANDTECHNOLOGYSPATIAL_EVENT_LOOKUP_CATEGORY_COMMUNITYSPATIAL_EVENT_LOOKUP_CATEGORY_DANCESPATIAL_EVENT_LOOKUP_CATEGORY_EDUCATIONALSPATIAL_EVENT_LOOKUP_CATEGORY_FAMILYEVENTSSPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  qword_26254C8 = 51;
  qword_26254F0 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_DANCESPATIAL_EVENT_LOOKUP_CATEGORY_EDUCATIONALSPATIAL_EVENT_LOOKUP_CATEGORY_FAMILYEVENTSSPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  qword_2625508 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_EDUCATIONALSPATIAL_EVENT_LOOKUP_CATEGORY_FAMILYEVENTSSPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_2625510 = 41;
  qword_2625520 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_FAMILYEVENTSSPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_2625528 = 42;
  qword_2625538 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  qword_2625540 = 47;
  qword_2625550 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_2625558 = 43;
  qword_2625568 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_2625570 = 39;
  qword_26254D8 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_COMMUNITYSPATIAL_EVENT_LOOKUP_CATEGORY_DANCESPATIAL_EVENT_LOOKUP_CATEGORY_EDUCATIONALSPATIAL_EVENT_LOOKUP_CATEGORY_FAMILYEVENTSSPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_26254E0 = 39;
  qword_2625580 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_2625588 = 36;
  qword_26255B0 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  qword_26255C8 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_26255D0 = 37;
  qword_2625598 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_26255A0 = 37;
  qword_2625490 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_APPLEEVENTSPATIAL_EVENT_LOOKUP_CATEGORY_ARTSANDMUSEUMSSPATIAL_E"
                           "VENT_LOOKUP_CATEGORY_BUSINESSANDTECHNOLOGYSPATIAL_EVENT_LOOKUP_CATEGORY_COMMUNITYSPATIAL_EVEN"
                           "T_LOOKUP_CATEGORY_DANCESPATIAL_EVENT_LOOKUP_CATEGORY_EDUCATIONALSPATIAL_EVENT_LOOKUP_CATEGORY"
                           "_FAMILYEVENTSSPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUS"
                           "ICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_"
                           "EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  dword_26254A0 = 13;
  qword_26254A8 = (uint64_t)"SPATIAL_EVENT_LOOKUP_CATEGORY_ARTSANDMUSEUMSSPATIAL_EVENT_LOOKUP_CATEGORY_BUSINESSANDTECHNOLOGYSPATIAL_EVENT_LOOKUP_CATEGORY_COMMUNITYSPATIAL_EVENT_LOOKUP_CATEGORY_DANCESPATIAL_EVENT_LOOKUP_CATEGORY_EDUCATIONALSPATIAL_EVENT_LOOKUP_CATEGORY_FAMILYEVENTSSPATIAL_EVENT_LOOKUP_CATEGORY_FESTIVALSANDFAIRSSPATIAL_EVENT_LOOKUP_CATEGORY_MUSICCONCERTSSPATIAL_EVENT_LOOKUP_CATEGORY_NIGHTLIFESPATIAL_EVENT_LOOKUP_CATEGORY_SPORTSSPATIAL_EVENT_LOOKUP_CATEGORY_THEATERSPATIAL_EVENT_LOOKUP_CATEGORY_TOURSSPATIAL_EVENT_LOOKUP_CATEGORY_UNKNOWN";
  unk_26254B0 = 44;
  dword_26254B8 = 1;
  dword_26254D0 = 2;
  dword_26254E8 = 3;
  qword_26254F8 = 35;
  dword_2625500 = 4;
  dword_2625518 = 5;
  dword_2625530 = 6;
  dword_2625548 = 7;
  dword_2625560 = 8;
  dword_2625578 = 9;
  dword_2625590 = 10;
  dword_26255A8 = 11;
  qword_26255B8 = 35;
  dword_26255C0 = 12;
  uint64_t result = 12;
  dword_26255D8 = 0;
  qword_26255F8 = (uint64_t)"PLACE_CATEGORY_TYPE_PHYSICAL_FEATURE_VOLCANOPLACE_CATEGORY_TYPE_TRAILPLACE_CATEGORY_TYPE_TRAIL_HEADPLACE_CATEGORY_TYPE_UNKNOWN";
  unk_2625600 = 44;
  qword_2625628 = (uint64_t)"PLACE_CATEGORY_TYPE_TRAIL_HEADPLACE_CATEGORY_TYPE_UNKNOWN";
  qword_26255E0 = (uint64_t)"PLACE_CATEGORY_TYPE_PHYSICAL_FEATURE_MOUNTAINPLACE_CATEGORY_TYPE_PHYSICAL_FEATURE_VOLCANOPLAC"
                           "E_CATEGORY_TYPE_TRAILPLACE_CATEGORY_TYPE_TRAIL_HEADPLACE_CATEGORY_TYPE_UNKNOWN";
  *(void *)algn_26255E8 = 45;
  dword_26255F0 = 3;
  dword_2625608 = 4;
  qword_2625610 = (uint64_t)"PLACE_CATEGORY_TYPE_TRAILPLACE_CATEGORY_TYPE_TRAIL_HEADPLACE_CATEGORY_TYPE_UNKNOWN";
  unk_2625618 = 25;
  dword_2625620 = 1;
  qword_2625630 = 30;
  dword_2625638 = 2;
  qword_2625640 = (uint64_t)"PLACE_CATEGORY_TYPE_UNKNOWN";
  unk_2625648 = 27;
  dword_2625650 = 0;
  qword_2625670 = (uint64_t)"LOCATION_TAG_PRE_SECURITYLOCATION_TAG_UNKNOWN";
  unk_2625678 = 25;
  qword_2625658 = (uint64_t)"LOCATION_TAG_POST_SECURITYLOCATION_TAG_PRE_SECURITYLOCATION_TAG_UNKNOWN";
  unk_2625660 = 26;
  dword_2625668 = 1;
  dword_2625680 = 2;
  qword_2625688 = (uint64_t)"LOCATION_TAG_UNKNOWN";
  unk_2625690 = 20;
  dword_2625698 = 0;
  qword_26256D0 = (uint64_t)"VENUE_FEATURE_TYPE_POIVENUE_FEATURE_TYPE_UNKNOWNVENUE_FEATURE_TYPE_VENUE";
  unk_26256D8 = 22;
  qword_26256E8 = (uint64_t)"VENUE_FEATURE_TYPE_UNKNOWNVENUE_FEATURE_TYPE_VENUE";
  unk_26256F0 = 26;
  qword_26256A0 = (uint64_t)"VENUE_FEATURE_TYPE_BUILDINGVENUE_FEATURE_TYPE_LEVELVENUE_FEATURE_TYPE_POIVENUE_FEATURE_TYPE_U"
                           "NKNOWNVENUE_FEATURE_TYPE_VENUE";
  *(void *)algn_26256A8 = 27;
  qword_26256B8 = (uint64_t)"VENUE_FEATURE_TYPE_LEVELVENUE_FEATURE_TYPE_POIVENUE_FEATURE_TYPE_UNKNOWNVENUE_FEATURE_TYPE_VENUE";
  dword_26256B0 = 2;
  qword_26256C0 = 24;
  dword_26256C8 = 3;
  dword_26256E0 = 4;
  dword_26256F8 = 0;
  qword_2625700 = (uint64_t)"VENUE_FEATURE_TYPE_VENUE";
  unk_2625708 = 24;
  dword_2625710 = 1;
  qword_2625730 = (uint64_t)"CATEGORY_BROWSE_TYPE_SUBCATEGORYCATEGORY_BROWSE_TYPE_UNKNOWN";
  qword_2625748 = (uint64_t)"CATEGORY_BROWSE_TYPE_UNKNOWN";
  qword_2625750 = 28;
  qword_2625718 = (uint64_t)"CATEGORY_BROWSE_TYPE_BUILDINGCATEGORY_BROWSE_TYPE_SUBCATEGORYCATEGORY_BROWSE_TYPE_UNKNOWN";
  qword_2625720 = 29;
  dword_2625728 = 1;
  qword_2625738 = 32;
  dword_2625740 = 2;
  dword_2625758 = 0;
  qword_2625778 = (uint64_t)"LIST_TYPE_MAPS_WIDGETLIST_TYPE_SEARCH_TRAYLIST_TYPE_UNKNOWNLIST_TYPE_WATCH";
  qword_2625790 = (uint64_t)"LIST_TYPE_SEARCH_TRAYLIST_TYPE_UNKNOWNLIST_TYPE_WATCH";
  qword_26257A8 = (uint64_t)"LIST_TYPE_UNKNOWNLIST_TYPE_WATCH";
  qword_2625760 = (uint64_t)"LIST_TYPE_CAR_PLAYLIST_TYPE_MAPS_WIDGETLIST_TYPE_SEARCH_TRAYLIST_TYPE_UNKNOWNLIST_TYPE_WATCH";
  *(void *)algn_2625768 = 18;
  dword_2625770 = 3;
  qword_2625780 = 21;
  dword_2625788 = 1;
  qword_2625798 = 21;
  dword_26257A0 = 2;
  qword_26257B0 = 17;
  dword_26257B8 = 0;
  qword_26257C0 = (uint64_t)"LIST_TYPE_WATCH";
  unk_26257C8 = 15;
  dword_26257D0 = 4;
  dword_26257E8 = 1;
  dword_2625800 = 8;
  dword_2625818 = 5;
  dword_2625830 = 4;
  qword_2625838 = (uint64_t)"PROACTIVE_TYPE_FAVORITEPROACTIVE_TYPE_FAVORITE_BUTTONPROACTIVE_TYPE_FIM_CAR_RENTALPROACTIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  dword_2625848 = 2;
  qword_2625850 = (uint64_t)"PROACTIVE_TYPE_FAVORITE_BUTTONPROACTIVE_TYPE_FIM_CAR_RENTALPROACTIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  unk_2625858 = 30;
  qword_2625868 = (uint64_t)"PROACTIVE_TYPE_FIM_CAR_RENTALPROACTIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  dword_2625878 = 15;
  qword_2625880 = (uint64_t)"PROACTIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  dword_2625890 = 16;
  dword_26258A8 = 14;
  qword_26258B0 = (uint64_t)"PROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  unk_26258B8 = 33;
  dword_26258C0 = 17;
  qword_26258C8 = (uint64_t)"PROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  dword_26258D8 = 12;
  qword_26258E0 = (uint64_t)"PROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  dword_26258F0 = 3;
  qword_26258F8 = (uint64_t)"PROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_2625820 = (uint64_t)"PROACTIVE_TYPE_CALENDARPROACTIVE_TYPE_FAVORITEPROACTIVE_TYPE_FAVORITE_BUTTONPROACTIVE_TYPE_FIM_CAR_RENTALPROACTIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_2625828 = 23;
  qword_2625840 = 23;
  qword_2625900 = 23;
  dword_2625908 = 18;
  qword_2625910 = (uint64_t)"PROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_26257F0 = (uint64_t)"PROACTIVE_TYPE_APP_CONNECTIONPROACTIVE_TYPE_BOOKED_CARPROACTIVE_TYPE_CALENDARPROACTIVE_TYPE_FAVORITEPROACTIVE_TYPE_FAVORITE_BUTTONPROACTIVE_TYPE_FIM_CAR_RENTALPROACTIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_26257F8 = 29;
  qword_2625870 = 29;
  qword_2625918 = 29;
  qword_2625928 = (uint64_t)"PROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_2625930 = 31;
  dword_2625938 = 11;
  qword_2625940 = (uint64_t)"PROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_2625808 = (uint64_t)"PROACTIVE_TYPE_BOOKED_CARPROACTIVE_TYPE_CALENDARPROACTIVE_TYPE_FAVORITEPROACTIVE_TYPE_FAVORITE_BUTTONPROACTIVE_TYPE_FIM_CAR_RENTALPROACTIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_2625810 = 25;
  qword_2625888 = 25;
  qword_26258E8 = 25;
  qword_2625948 = 25;
  dword_2625950 = 9;
  dword_2625968 = 7;
  qword_2625970 = (uint64_t)"PROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  unk_2625978 = 32;
  dword_2625980 = 6;
  qword_2625988 = (uint64_t)"PROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_2625958 = (uint64_t)"PROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_2625960 = 26;
  qword_2625990 = 26;
  dword_2625998 = 10;
  qword_26259A0 = (uint64_t)"PROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  qword_26257D8 = (uint64_t)"PROACTIVE_TYPE_ADDRESSPROACTIVE_TYPE_APP_CONNECTIONPROACTIVE_TYPE_BOOKED_CARPROACTIVE_TYPE_CA"
                           "LENDARPROACTIVE_TYPE_FAVORITEPROACTIVE_TYPE_FAVORITE_BUTTONPROACTIVE_TYPE_FIM_CAR_RENTALPROAC"
                           "TIVE_TYPE_FIM_FLIGHTPROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_L"
                           "OW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_"
                           "TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_"
                           "RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_"
                           "TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  unk_26257E0 = 22;
  dword_2625860 = 22;
  qword_26258D0 = 22;
  qword_26259A8 = 22;
  qword_26259B8 = (uint64_t)"PROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  unk_26259C0 = 24;
  qword_2625898 = (uint64_t)"PROACTIVE_TYPE_FIM_HOTELPROACTIVE_TYPE_FIM_TICKETED_EVENTPROACTIVE_TYPE_LOW_GASPROACTIVE_TYPE_PARKED_CARPROACTIVE_TYPE_PORTRAITPROACTIVE_TYPE_RATING_REQUESTPROACTIVE_TYPE_RECENTS_AND_PINSPROACTIVE_TYPE_RESUME_NAVPROACTIVE_TYPE_TABLE_QUEUEPROACTIVE_TYPE_TABLE_RESERVATIONPROACTIVE_TYPE_TRANSIT_NAVPROACTIVE_TYPE_UNKNOWNPROACTIVE_TYPE_USERPLACEPROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  unk_26258A0 = 24;
  dword_26259C8 = 19;
  qword_26259D0 = (uint64_t)"PROACTIVE_TYPE_VEHICLEADVERTISEMENTPROACTIVE_TYPE_VENUES";
  unk_26259D8 = 35;
  dword_26259E0 = 20;
  qword_26259E8 = (uint64_t)"PROACTIVE_TYPE_VENUES";
  dword_2625920 = 21;
  qword_26259F0 = 21;
  dword_26259F8 = 13;
  dword_26259B0 = 0;
  return result;
}

void sub_1880DBC(uint64_t a1@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  uint64_t v5 = a3;
  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  std::string::resize(a3, *(void *)(a2 + 8) + *(void *)(a1 + 8), 0);
  if ((v5->__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    uint64_t v5 = (std::string *)v5->__r_.__value_.__r.__words[0];
  }
  size_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    memcpy(v5, *(const void **)a1, v6);
    uint64_t v5 = (std::string *)((char *)v5 + *(void *)(a1 + 8));
  }
  size_t v7 = *(void *)(a2 + 8);
  if (v7)
  {
    int v8 = *(const void **)a2;
    memcpy(v5, v8, v7);
  }
}

void sub_1880E68(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1880E84(uint64_t *a1, uint64_t a2, long long *a3, uint64_t *a4)
{
  uint64_t v5 = *a1;
  if (*a1 == a2)
  {
    if (!a4) {
      operator new();
    }
    *uint64_t v9 = v8;
    v9[1] = (uint64_t)sub_3A6EDC;
    uint64_t v10 = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v8 = *a3;
    *(void *)(v8 + 16) = v10;
    *((void *)a3 + 1) = 0;
    *((void *)a3 + 2) = 0;
    *(void *)a3 = 0;
    *a1 = v8;
  }
  else
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    long long v6 = *a3;
    *(void *)(v5 + 16) = *((void *)a3 + 2);
    *(_OWORD *)uint64_t v5 = v6;
    *((unsigned char *)a3 + 23) = 0;
    *(unsigned char *)a3 = 0;
  }
}

BOOL sub_1880F60(uint64_t a1, std::string *a2)
{
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0)
  {
    *a2->__r_.__value_.__l.__data_ = 0;
    a2->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    a2->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&a2->__r_.__value_.__s + 23) = 0;
  }
  return sub_188AFB4(a1, a2);
}

uint64_t *sub_1880F84(void *a1, uint64_t *a2)
{
  if ((uint64_t *)*a1 == &qword_2550250) {
    return sub_1881E3C(a1, a2);
  }
  else {
    return (uint64_t *)*a1;
  }
}

uint64_t sub_1880FC4(uint64_t result, int a2, uint64_t a3, int a4)
{
  *(_DWORD *)uint64_t result = a2;
  *(void *)(result + 8) = a3;
  *(_DWORD *)(result + 16) = a4;
  *(void *)(result + 32) = 0;
  *(void *)(result + 40) = 0;
  *(void *)(result + 24) = 0;
  return result;
}

std::string *sub_1880FDC(std::string *a1, char *__s)
{
  uint64_t v4 = a1 + 1;
  size_t v5 = strlen(__s);
  std::string::append(v4, __s, v5);
  return a1;
}

const char **sub_1881028(uint64_t a1, const char **a2)
{
  return sub_188CF08(a2);
}

uint64_t sub_1881030(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  return a1;
}

uint64_t sub_1881064(void *a1, uint64_t a2, uint64_t *a3)
{
  sub_18810B8(a1, a2 + 16, a3);

  return sub_1881134(a1, a2, a3);
}

void *sub_18810B8(void *a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[5];
  *(void *)(v4 + 16) = a1[6];
  a1[3] = v5 - v4 + a1[3] - 24;
  uint64_t result = sub_18811D4(a3, *(void *)(v4 + 8), a2);
  a1[4] += v7;
  *uint64_t result = a1[1];
  result[1] = v7;
  result[2] = 0;
  a1[1] = result;
  a1[5] = result + 3;
  a1[6] = (char *)result + v7;
  return result;
}

uint64_t sub_1881134(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  if (v4 - v3 < (unint64_t)(a2 + 16)) {
    return sub_1881064(a1, a2, a3);
  }
  a1[5] = v3 + a2;
  a1[6] = v4 - 16;
  return v3;
}

uint64_t sub_1881160(void *a1, unint64_t a2, uint64_t *a3)
{
  sub_18810B8(a1, a2, a3);

  return sub_18811B0((uint64_t)a1, a2);
}

uint64_t sub_18811B0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 40);
  if (*(void *)(a1 + 48) - v2 < a2) {
    return sub_1881160();
  }
  *(void *)(a1 + 40) = v2 + a2;
  return v2;
}

void *sub_18811D4(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    uint64_t v4 = *a1;
    unint64_t v5 = a1[1];
    long long v6 = (uint64_t (*)(size_t))a1[2];
  }
  else
  {
    long long v6 = 0;
    unint64_t v5 = 0x2000;
    uint64_t v4 = 256;
  }
  if (v5 >= 2 * a2) {
    unint64_t v5 = 2 * a2;
  }
  if (a2) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = v4;
  }
  if (a3 >= 0xFFFFFFFFFFFFFFE8)
  {
    LODWORD(v10[0]) = 3;
    v10[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodul"
             "es/protobuf-mirror/src/google/protobuf/arena.cc";
    int v11 = 67;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - SerialArena::kBlockHeaderSize): ", 0x63uLL);
    sub_188CF08(v10);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (v7 <= a3 + 24) {
    size_t v8 = a3 + 24;
  }
  else {
    size_t v8 = v7;
  }
  if (v6) {
    return (void *)v6(v8);
  }
  else {
    return operator new(v8);
  }
}

void sub_18812B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_18812F0(uint64_t result)
{
  uint64_t v1 = *(void **)(result + 8);
  v1[2] = *(void *)(result + 48);
  do
  {
    uint64_t v2 = (char *)v1[2];
    uint64_t v3 = (char *)v1 + (v1[1] & 0xFFFFFFFFFFFFFFF8);
    if (v3 - v2 >= 1 && v2 < v3)
    {
      do
      {
        uint64_t v5 = *(void *)v2;
        long long v6 = (uint64_t (*)(uint64_t))*((void *)v2 + 1);
        v2 += 16;
        uint64_t result = v6(v5);
      }
      while (v2 < v3);
    }
    uint64_t v1 = (void *)*v1;
  }
  while (v1);
  return result;
}

void *sub_1881354()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2625A08, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2625A08))
  {
    operator new();
  }
  v0 = (pthread_key_t *)qword_2625A00;

  return sub_1881424(v0);
}

void sub_18813EC()
{
}

void *sub_1881424(pthread_key_t *a1)
{
  uint64_t v2 = pthread_getspecific(*a1);
  if (!v2)
  {
    uint64_t v2 = operator new(0x40uLL, (std::align_val_t)0x40uLL);
    *(_OWORD *)uint64_t v2 = xmmword_20B93F0;
    v2[2] = 0;
    pthread_setspecific(*a1, v2);
  }
  return v2;
}

uint64_t sub_188149C(uint64_t a1)
{
  for (uint64_t i = *(void *)(a1 + 16); i; uint64_t i = *(void *)(i + 16))
    sub_18812F0(i);
  uint64_t v11 = 0;
  uint64_t v3 = sub_1881578(a1, &v11);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) != 0)
  {
    size_t v8 = *(void (****)(void))(v7 + 32);
    if (v6) {
      goto LABEL_10;
    }
    uint64_t v9 = *(void (**)(void *, uint64_t))(v7 + 24);
    if (v9)
    {
      v9(v3, v4);
      goto LABEL_10;
    }
  }
  else
  {
    if (v6) {
      return a1;
    }
    size_t v8 = 0;
  }
  operator delete(v3);
LABEL_10:
  v11 += v5;
  if (v8) {
    (**v8)(v8);
  }
  return a1;
}

void *sub_1881578(uint64_t a1, void *a2)
{
  if ((*(void *)(a1 + 8) & 0xFFFFFFFFFFFFFFF8) != 0) {
    uint64_t v3 = *(void (**)(void))((*(void *)(a1 + 8) & 0xFFFFFFFFFFFFFFF8) + 24);
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v6 = 0;
  do
  {
    if (result)
    {
      if (v3) {
        v3();
      }
      else {
        operator delete(result);
      }
      *a2 += v6;
    }
    uint64_t result = sub_188DCAC(v4, v3, a2);
    uint64_t v6 = v7;
    uint64_t v4 = *(void *)(v4 + 16);
  }
  while (v4);
  return result;
}

uint64_t sub_1881630(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = sub_1881354();
  if (v7[1] == v6)
  {
    explicit = (void *)v7[2];
    goto LABEL_3;
  }
  if ((v6 & 1) == 0)
  {
    uint64_t v11 = sub_1881354();
    explicit = (void *)atomic_load_explicit(a1 + 3, memory_order_acquire);
    if (explicit)
    {
      if ((void *)*explicit == v11)
      {
LABEL_3:
        uint64_t v9 = (uint64_t *)(a1[1] & 0xFFFFFFFFFFFFFFF8);
        return sub_1881134(explicit, a2, v9);
      }
    }
  }

  return sub_18816E4(a1, a2, a3);
}

uint64_t sub_18816E4(void *a1, uint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)a1 & 1) == 0) {
    goto LABEL_2;
  }
  uint64_t v7 = a1 + 1;
  uint64_t v8 = *(void *)((a1[1] & 0xFFFFFFFFFFFFFFF8) + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)v8 + 16))(v8, a3, a2);
  unint64_t v9 = *a1 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v10 = sub_1881354();
  if (v10[1] == v9)
  {
    explicit = (void *)v10[2];
  }
  else
  {
    uint64_t v13 = sub_1881354();
    explicit = (void *)atomic_load_explicit(a1 + 3, memory_order_acquire);
    if (!explicit || (void *)*explicit != v13)
    {
LABEL_2:
      uint64_t v5 = sub_1881354();
      explicit = sub_1881A08(a1, (uint64_t)v5);
      uint64_t v7 = a1 + 1;
    }
  }
  uint64_t v11 = (uint64_t *)(*v7 & 0xFFFFFFFFFFFFFFF8);

  return sub_1881134(explicit, a2, v11);
}

void *sub_18817C8(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *a1 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v7 = sub_1881354();
  if (v7[1] == v6)
  {
    uint64_t result = (void *)v7[2];
    goto LABEL_3;
  }
  uint64_t v11 = sub_1881354();
  uint64_t result = (void *)atomic_load_explicit(a1 + 3, memory_order_acquire);
  if (result && (void *)*result == v11)
  {
LABEL_3:
    uint64_t v9 = result[6];
    if ((unint64_t)(v9 - result[5]) <= 0xF)
    {
      uint64_t result = (void *)sub_1881064(result, 0, (uint64_t *)(a1[1] & 0xFFFFFFFFFFFFFFF8));
    }
    else
    {
      uint64_t v10 = (uint64_t *)(v9 - 16);
      result[6] = v9 - 16;
    }
    *uint64_t v10 = a2;
    v10[1] = a3;
    return result;
  }

  return sub_1881890(a1, a2, a3);
}

void *sub_1881890(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1881354();
  uint64_t result = sub_1881A08(a1, (uint64_t)v6);
  uint64_t v8 = result[6];
  if ((unint64_t)(v8 - result[5]) <= 0xF)
  {
    uint64_t result = (void *)sub_1881064(result, 0, (uint64_t *)(a1[1] & 0xFFFFFFFFFFFFFFF8));
  }
  else
  {
    uint64_t v9 = (void *)(v8 - 16);
    result[6] = v8 - 16;
  }
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t sub_1881900(void *a1, unint64_t a2, uint64_t a3)
{
  if ((*(unsigned char *)a1 & 1) == 0) {
    goto LABEL_2;
  }
  uint64_t v7 = *(void *)((a1[1] & 0xFFFFFFFFFFFFFFF8) + 32);
  (*(void (**)(uint64_t, uint64_t, unint64_t))(*(void *)v7 + 16))(v7, a3, a2);
  unint64_t v8 = *a1 & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = sub_1881354();
  if (v9[1] == v8)
  {
    explicit = (void *)v9[2];
  }
  else
  {
    uint64_t v13 = sub_1881354();
    explicit = (void *)atomic_load_explicit(a1 + 3, memory_order_acquire);
    if (!explicit || (void *)*explicit != v13)
    {
LABEL_2:
      uint64_t v5 = sub_1881354();
      explicit = sub_1881A08(a1, (uint64_t)v5);
    }
  }
  uint64_t v10 = explicit[5];
  if (explicit[6] - v10 < a2)
  {
    uint64_t v12 = (uint64_t *)(a1[1] & 0xFFFFFFFFFFFFFFF8);
    return sub_1881160(explicit, a2, v12);
  }
  else
  {
    explicit[5] = v10 + a2;
    return v10;
  }
}

void *sub_1881A08(void *a1, uint64_t a2)
{
  uint64_t v4 = a1 + 2;
  explicit = (void *)atomic_load_explicit(a1 + 2, memory_order_acquire);
  if (explicit)
  {
    while (*explicit != a2)
    {
      explicit = (void *)explicit[2];
      if (!explicit) {
        goto LABEL_4;
      }
    }
  }
  else
  {
LABEL_4:
    unint64_t v6 = sub_18811D4((uint64_t *)(a1[1] & 0xFFFFFFFFFFFFFFF8), 0, 0x38uLL);
    *unint64_t v6 = 0;
    v6[1] = v7;
    v6[2] = 0;
    v6[3] = a2;
    explicit = v6 + 3;
    v6[6] = 0;
    v6[7] = v7;
    v6[4] = v6;
    v6[8] = v6 + 10;
    v6[9] = (char *)v6 + (v7 & 0xFFFFFFFFFFFFFFF8);
    uint64_t v8 = a1[2];
    v6[5] = v8;
    uint64_t v9 = v8;
    atomic_compare_exchange_strong_explicit(v4, (unint64_t *)&v9, (unint64_t)(v6 + 3), memory_order_release, memory_order_relaxed);
    if (v9 != v8)
    {
      uint64_t v10 = v9;
      do
      {
        v6[5] = v9;
        atomic_compare_exchange_strong_explicit(a1 + 2, (unint64_t *)&v10, (unint64_t)explicit, memory_order_release, memory_order_relaxed);
        BOOL v11 = v10 == v9;
        uint64_t v9 = v10;
      }
      while (!v11);
    }
  }
  sub_1881354()[2] = explicit;
  unint64_t v12 = *a1 & 0xFFFFFFFFFFFFFFFELL;
  sub_1881354()[1] = v12;
  atomic_store((unint64_t)explicit, a1 + 3);
  return explicit;
}

uint64_t sub_1881AE8(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = sub_1881354();
  if (v7[1] == v6)
  {
    explicit = (void *)v7[2];
    goto LABEL_3;
  }
  if ((v6 & 1) == 0)
  {
    BOOL v11 = sub_1881354();
    explicit = (void *)atomic_load_explicit(a1 + 3, memory_order_acquire);
    if (explicit)
    {
      if ((void *)*explicit == v11)
      {
LABEL_3:
        uint64_t v9 = explicit[5];
        if (explicit[6] - v9 < a2)
        {
          unint64_t v12 = (uint64_t *)(a1[1] & 0xFFFFFFFFFFFFFFF8);
          return sub_1881160(explicit, a2, v12);
        }
        else
        {
          explicit[5] = v9 + a2;
          return v9;
        }
      }
    }
  }

  return sub_1881900(a1, a2, a3);
}

unint64_t sub_1881C04(void *a1)
{
  std::mutex::lock(&stru_254DB50);
  unint64_t explicit = atomic_load_explicit(a1 + 3, memory_order_acquire);
  if (!explicit)
  {
    sub_111E930(a1, (void *)*a1, a1[1]);
    atomic_store((unint64_t)a1, a1 + 3);
    unint64_t explicit = (unint64_t)a1;
  }
  std::mutex::unlock(&stru_254DB50);
  return explicit;
}

void sub_1881C6C(void ***a1)
{
  if (*((char *)*a1 + 23) < 0) {
    operator delete(**a1);
  }

  operator delete();
}

std::string *sub_1881CC0(std::string **a1, std::string *a2, long long *a3, uint64_t *a4)
{
  uint64_t v6 = *a1;
  if (v6 == a2)
  {
    if (!a4) {
      operator new();
    }
    BOOL v11 = result;
    uint64_t *v12 = result;
    v12[1] = (std::string *)sub_3A6EDC;
    if (*((char *)a3 + 23) < 0)
    {
      uint64_t result = (std::string *)sub_4200(result, *(void **)a3, *((void *)a3 + 1));
    }
    else
    {
      long long v13 = *a3;
      result->__r_.__value_.__r.__words[2] = *((void *)a3 + 2);
      *(_OWORD *)&result->__r_.__value_.__l.__data_ = v13;
    }
    *a1 = v11;
  }
  else
  {
    char v7 = *((unsigned char *)a3 + 23);
    if (v7 >= 0) {
      size_t v8 = *((unsigned __int8 *)a3 + 23);
    }
    else {
      size_t v8 = *((void *)a3 + 1);
    }
    if (v7 >= 0) {
      uint64_t v9 = (const std::string::value_type *)a3;
    }
    else {
      uint64_t v9 = *(const std::string::value_type **)a3;
    }
    return sub_188D74C(v6, v9, v8);
  }
  return result;
}

void sub_1881DD0()
{
}

std::string *sub_1881DF4(std::string **a1, long long *a2, uint64_t *a3)
{
  return sub_1881CC0(a1, (std::string *)&qword_2550250, a2, a3);
}

void sub_1881E08(uint64_t *a1, long long *a2, uint64_t *a3)
{
}

std::string *sub_1881E1C(std::string **a1, long long *a2, uint64_t *a3)
{
  return sub_1881CC0(a1, 0, a2, a3);
}

void sub_1881E2C(uint64_t *a1, long long *a2, uint64_t *a3)
{
}

void *sub_1881E3C(void *a1, uint64_t *a2)
{
  if (!a2) {
    operator new();
  }
  *uint64_t v4 = result;
  v4[1] = sub_3A6EDC;
  *uint64_t result = 0;
  result[1] = 0;
  result[2] = 0;
  *a1 = result;
  return result;
}

uint64_t sub_1881EAC(uint64_t *a1, void *a2, uint64_t *a3)
{
  if (*a1) {
    return *a1;
  }
  else {
    return sub_1881ECC(a1, a3, a2);
  }
}

uint64_t sub_1881ECC(uint64_t *a1, uint64_t *a2, void *a3)
{
  unint64_t explicit = atomic_load_explicit(a3 + 3, memory_order_acquire);
  if (explicit)
  {
    if (a2) {
      goto LABEL_3;
    }
LABEL_6:
    operator new();
  }
  unint64_t explicit = sub_1881C04(a3);
  if (!a2) {
    goto LABEL_6;
  }
LABEL_3:
  uint64_t v7 = v6;
  uint64_t *v8 = v6;
  v8[1] = (uint64_t)sub_3A6EDC;
  if (*(char *)(explicit + 23) < 0)
  {
    sub_4200((unsigned char *)v6, *(void **)explicit, *(void *)(explicit + 8));
  }
  else
  {
    long long v9 = *(_OWORD *)explicit;
    *(void *)(v6 + 16) = *(void *)(explicit + 16);
    *(_OWORD *)uint64_t v6 = v9;
  }
  *a1 = v7;
  return v7;
}

void sub_1881FA4()
{
}

void *sub_1881FE4(void *result)
{
  if ((uint64_t *)*result != &qword_2550250)
  {
    unint64_t v1 = *result & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  return result;
}

std::string *sub_1882020(std::string *result, void *a2)
{
  uint64_t v2 = (std::string *)result->__r_.__value_.__r.__words[0];
  if (result->__r_.__value_.__r.__words[0])
  {
    unint64_t explicit = (const std::string *)atomic_load_explicit(a2 + 3, memory_order_acquire);
    if (!explicit) {
      unint64_t explicit = (const std::string *)sub_1881C04(a2);
    }
    return std::string::operator=(v2, explicit);
  }
  return result;
}

const std::string::value_type *sub_1882098(uint64_t a1, std::string::value_type *__src, int a3, std::string *__dst)
{
  if (*(void *)(a1 + 8) - (void)__src + 16 >= a3)
  {
    uint64_t v6 = a3;
    sub_188D74C(__dst, __src, a3);
    return &__src[v6];
  }
  else
  {
    return sub_188BCBC(a1, __src, a3, __dst);
  }
}

uint64_t sub_1882110(uint64_t a1, int a2, _OWORD *a3)
{
  if (qword_2625A20)
  {
    int8x8_t v3 = *(int8x8_t *)(qword_2625A20 + 8);
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 8);
      unint64_t v5 = 0x9DDFEA08EB382D69 * (((8 * v4) + 8) ^ HIDWORD(v4));
      unint64_t v6 = 0x9DDFEA08EB382D69 * (HIDWORD(v4) ^ (v5 >> 47) ^ v5);
      unint64_t v7 = (0x9DDFEA08EB382D69 * (v6 ^ (v6 >> 47))) ^ a2;
      uint8x8_t v8 = (uint8x8_t)vcnt_s8(v3);
      v8.i16[0] = vaddlv_u8(v8);
      if (v8.u32[0] > 1uLL)
      {
        unint64_t v9 = v7;
        if (v7 >= *(void *)&v3) {
          unint64_t v9 = v7 % *(void *)&v3;
        }
      }
      else
      {
        unint64_t v9 = (*(void *)&v3 - 1) & v7;
      }
      uint64_t v10 = *(uint64_t ***)(*(void *)qword_2625A20 + 8 * v9);
      if (v10)
      {
        for (uint64_t i = *v10; i; uint64_t i = (uint64_t *)*i)
        {
          unint64_t v12 = i[1];
          if (v7 == v12)
          {
            if (i[2] == v4 && *((_DWORD *)i + 6) == a2)
            {
              long long v14 = *((_OWORD *)i + 3);
              *a3 = *((_OWORD *)i + 2);
              a3[1] = v14;
              return 1;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v12 >= *(void *)&v3) {
                v12 %= *(void *)&v3;
              }
            }
            else
            {
              v12 &= *(void *)&v3 - 1;
            }
            if (v12 != v9) {
              return 0;
            }
          }
        }
      }
    }
  }
  return 0;
}

void sub_1882224(unint64_t a1, signed int a2, int a3, char a4, char a5)
{
  char v7 = a3;
  switch(a3)
  {
    case 10:
      LODWORD(v12) = 3;
      long long v13 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodule"
            "s/protobuf-mirror/src/google/protobuf/extension_set.cc";
      int v14 = 142;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (type) != (WireFormatLite::TYPE_GROUP): ", 0x36uLL);
      sub_188CF08(&v12);
      break;
    case 11:
      LODWORD(v12) = 3;
      long long v13 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodule"
            "s/protobuf-mirror/src/google/protobuf/extension_set.cc";
      int v14 = 141;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (type) != (WireFormatLite::TYPE_MESSAGE): ", 0x38uLL);
      sub_188CF08(&v12);
      break;
    case 14:
      LODWORD(v12) = 3;
      long long v13 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodule"
            "s/protobuf-mirror/src/google/protobuf/extension_set.cc";
      int v14 = 140;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "CHECK failed: (type) != (WireFormatLite::TYPE_ENUM): ", 0x35uLL);
      sub_188CF08(&v12);
      break;
    default:
      goto LABEL_9;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
LABEL_9:
  LOBYTE(v10) = v7;
  BYTE1(v10) = a4;
  BYTE2(v10) = a5;
  uint64_t v11 = 0;
  sub_18823B8(a1, a2, &v10);
}

void sub_1882388(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_18823B8(unint64_t a1, signed int a2, _OWORD *a3)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2625A30, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2625A30))
  {
    operator new();
  }
  uint64_t v7 = qword_2625A28;
  qword_2625A20 = qword_2625A28;
  unint64_t v8 = 0x9DDFEA08EB382D69 * (((8 * a1) + 8) ^ HIDWORD(a1));
  unint64_t v9 = 0x9DDFEA08EB382D69 * (HIDWORD(a1) ^ (v8 >> 47) ^ v8);
  unint64_t v10 = (0x9DDFEA08EB382D69 * (v9 ^ (v9 >> 47))) ^ a2;
  unint64_t v11 = *(void *)(qword_2625A28 + 8);
  if (!v11) {
    goto LABEL_23;
  }
  uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    unint64_t v3 = (0x9DDFEA08EB382D69 * (v9 ^ (v9 >> 47))) ^ a2;
    if (v10 >= v11) {
      unint64_t v3 = v10 % v11;
    }
  }
  else
  {
    unint64_t v3 = (v11 - 1) & v10;
  }
  long long v13 = *(uint64_t ***)(*(void *)qword_2625A28 + 8 * v3);
  if (!v13 || (int v14 = *v13) == 0)
  {
LABEL_23:
    uint64_t v17 = operator new(0x40uLL);
    void *v17 = 0;
    v17[1] = v10;
    v17[2] = a1;
    *((_DWORD *)v17 + 6) = a2;
    *((_DWORD *)v17 + 7) = 0;
    long long v18 = a3[1];
    *((_OWORD *)v17 + 2) = *a3;
    *((_OWORD *)v17 + 3) = v18;
    float v19 = (float)(unint64_t)(*(void *)(v7 + 24) + 1);
    float v20 = *(float *)(v7 + 32);
    if (v11 && (float)(v20 * (float)v11) >= v19)
    {
LABEL_69:
      uint64_t v36 = *(void **)v7;
      unint64_t v37 = *(void **)(*(void *)v7 + 8 * v3);
      if (v37)
      {
        void *v17 = *v37;
      }
      else
      {
        void *v17 = *(void *)(v7 + 16);
        *(void *)(v7 + 16) = v17;
        v36[v3] = v7 + 16;
        if (!*v17)
        {
LABEL_78:
          ++*(void *)(v7 + 24);
          return;
        }
        unint64_t v38 = *(void *)(*v17 + 8);
        if ((v11 & (v11 - 1)) != 0)
        {
          if (v38 >= v11) {
            v38 %= v11;
          }
        }
        else
        {
          v38 &= v11 - 1;
        }
        unint64_t v37 = (void *)(*(void *)v7 + 8 * v38);
      }
      *unint64_t v37 = v17;
      goto LABEL_78;
    }
    BOOL v21 = (v11 & (v11 - 1)) == 0;
    if (v11 < 3) {
      BOOL v21 = 0;
    }
    unint64_t v22 = (2 * v11) | !v21;
    unint64_t v23 = vcvtps_u32_f32(v19 / v20);
    if (v22 <= v23) {
      int8x8_t prime = (int8x8_t)v23;
    }
    else {
      int8x8_t prime = (int8x8_t)v22;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v11 = *(void *)(v7 + 8);
    }
    if (*(void *)&prime > v11) {
      goto LABEL_35;
    }
    if (*(void *)&prime < v11)
    {
      unint64_t v31 = vcvtps_u32_f32((float)*(unint64_t *)(v7 + 24) / *(float *)(v7 + 32));
      if (v11 < 3 || (uint8x8_t v32 = (uint8x8_t)vcnt_s8((int8x8_t)v11), v32.i16[0] = vaddlv_u8(v32), v32.u32[0] > 1uLL))
      {
        unint64_t v31 = std::__next_prime(v31);
      }
      else
      {
        uint64_t v33 = 1 << -(char)__clz(v31 - 1);
        if (v31 >= 2) {
          unint64_t v31 = v33;
        }
      }
      if (*(void *)&prime <= v31) {
        int8x8_t prime = (int8x8_t)v31;
      }
      if (*(void *)&prime >= v11)
      {
        unint64_t v11 = *(void *)(v7 + 8);
      }
      else
      {
        if (prime)
        {
LABEL_35:
          if (*(void *)&prime >> 61) {
            sub_188D718();
          }
          unint64_t v25 = operator new(8 * *(void *)&prime);
          int v26 = *(void **)v7;
          *(void *)uint64_t v7 = v25;
          if (v26) {
            operator delete(v26);
          }
          uint64_t v27 = 0;
          *(int8x8_t *)(v7 + 8) = prime;
          do
            *(void *)(*(void *)v7 + 8 * v27++) = 0;
          while (*(void *)&prime != v27);
          uint64_t v28 = *(void **)(v7 + 16);
          if (v28)
          {
            unint64_t v29 = v28[1];
            uint8x8_t v30 = (uint8x8_t)vcnt_s8(prime);
            v30.i16[0] = vaddlv_u8(v30);
            if (v30.u32[0] > 1uLL)
            {
              if (v29 >= *(void *)&prime) {
                v29 %= *(void *)&prime;
              }
            }
            else
            {
              v29 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)v7 + 8 * v29) = v7 + 16;
            uint64_t v34 = (void *)*v28;
            if (*v28)
            {
              do
              {
                unint64_t v35 = v34[1];
                if (v30.u32[0] > 1uLL)
                {
                  if (v35 >= *(void *)&prime) {
                    v35 %= *(void *)&prime;
                  }
                }
                else
                {
                  v35 &= *(void *)&prime - 1;
                }
                if (v35 != v29)
                {
                  if (!*(void *)(*(void *)v7 + 8 * v35))
                  {
                    *(void *)(*(void *)v7 + 8 * v35) = v28;
                    goto LABEL_60;
                  }
                  void *v28 = *v34;
                  void *v34 = **(void **)(*(void *)v7 + 8 * v35);
                  **(void **)(*(void *)v7 + 8 * v35) = v34;
                  uint64_t v34 = v28;
                }
                unint64_t v35 = v29;
LABEL_60:
                uint64_t v28 = v34;
                uint64_t v34 = (void *)*v34;
                unint64_t v29 = v35;
              }
              while (v34);
            }
          }
          unint64_t v11 = (unint64_t)prime;
          goto LABEL_64;
        }
        BOOL v41 = *(void **)v7;
        *(void *)uint64_t v7 = 0;
        if (v41) {
          operator delete(v41);
        }
        unint64_t v11 = 0;
        *(void *)(v7 + 8) = 0;
      }
    }
LABEL_64:
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v3 = v10 % v11;
      }
      else {
        unint64_t v3 = v10;
      }
    }
    else
    {
      unint64_t v3 = (v11 - 1) & v10;
    }
    goto LABEL_69;
  }
  while (1)
  {
    unint64_t v15 = v14[1];
    if (v15 == v10) {
      break;
    }
    if (v12.u32[0] > 1uLL)
    {
      if (v15 >= v11) {
        v15 %= v11;
      }
    }
    else
    {
      v15 &= v11 - 1;
    }
    if (v15 != v3) {
      goto LABEL_23;
    }
LABEL_22:
    int v14 = (uint64_t *)*v14;
    if (!v14) {
      goto LABEL_23;
    }
  }
  if (v14[2] != a1 || *((_DWORD *)v14 + 6) != a2) {
    goto LABEL_22;
  }
  LODWORD(v44.__r_.__value_.__l.__data_) = 3;
  v44.__r_.__value_.__l.__size_ = (std::string::size_type)"/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/subm"
                                                          "odules/offline-geo-protobuf-internal/submodules/protobuf-mirro"
                                                          "r/src/google/protobuf/extension_set.cc";
  LODWORD(v44.__r_.__value_.__r.__words[2]) = 108;
  memset(&v45, 0, sizeof(v45));
  std::string::append(&v45, "Multiple extension registrations for type \"", 0x2BuLL);
  (*(void (**)(void **__return_ptr, unint64_t))(*(void *)a1 + 16))(__p, a1);
  if ((v43 & 0x80u) == 0) {
    uint64_t v39 = __p;
  }
  else {
    uint64_t v39 = (void **)__p[0];
  }
  if ((v43 & 0x80u) == 0) {
    std::string::size_type v40 = v43;
  }
  else {
    std::string::size_type v40 = (std::string::size_type)__p[1];
  }
  std::string::append(&v45, (const std::string::value_type *)v39, v40);
  std::string::append(&v45, "\", field number ", 0x10uLL);
  sub_1889FDC(&v44, a2);
  std::string::append(&v45, ".", 1uLL);
  sub_188CF08((const char **)&v44.__r_.__value_.__l.__data_);
  if ((char)v43 < 0) {
    operator delete(__p[0]);
  }
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }
}

void sub_1882964(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
}

void sub_18829C0(unint64_t a1, signed int a2, int a3, char a4, char a5, uint64_t a6)
{
  char v9 = a3;
  if (a3 != 14)
  {
    LODWORD(v15[0]) = 3;
    v15[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodul"
             "es/protobuf-mirror/src/google/protobuf/extension_set.cc";
    int v16 = 164;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (type) == (WireFormatLite::TYPE_ENUM): ", 0x35uLL);
    sub_188CF08(v15);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  LOBYTE(v12) = v9;
  BYTE1(v12) = a4;
  BYTE2(v12) = a5;
  *((void *)&v12 + 1) = sub_1882AB8;
  uint64_t v13 = a6;
  uint64_t v14 = 0;
  sub_18823B8(a1, a2, &v12);
}

void sub_1882A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1882AB8(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return a1(a2);
}

void sub_1882AC4(unint64_t a1, signed int a2, char a3, char a4, char a5, uint64_t a6)
{
  if ((a3 & 0xFE) != 0xA)
  {
    LODWORD(v14[0]) = 3;
    v14[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodul"
             "es/protobuf-mirror/src/google/protobuf/extension_set.cc";
    int v15 = 177;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: type == WireFormatLite::TYPE_MESSAGE || type == WireFormatLite::TYPE_GROUP: ", 0x5AuLL);
    sub_188CF08(v14);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  LOBYTE(v12) = a3;
  BYTE1(v12) = a4;
  BYTE2(v12) = a5;
  *((void *)&v12 + 1) = a6;
  uint64_t v13 = 0;
  sub_18823B8(a1, a2, &v12);
}

void sub_1882B94(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1882BC4(uint64_t result, uint64_t a2)
{
  *(void *)uint64_t result = a2;
  *(_DWORD *)(result + 8) = 0;
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t sub_1882BD4(uint64_t a1)
{
  if (!*(void *)a1)
  {
    uint64_t v2 = *(uint64_t **)(a1 + 16);
    if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
    {
      sub_188DD40(*v2, v2 + 1);
    }
    else if (*(_WORD *)(a1 + 10))
    {
      uint64_t v3 = 32 * *(unsigned __int16 *)(a1 + 10);
      uint64_t v4 = (uint64_t)(v2 + 1);
      do
      {
        sub_1885398(v4);
        v4 += 32;
        v3 -= 32;
      }
      while (v3);
    }
    uint64_t v5 = *(void *)(a1 + 16);
    if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
    {
      if (v5)
      {
        sub_22EFF4(v5, *(void **)(v5 + 8));
        operator delete();
      }
    }
    else if (v5)
    {
      operator delete[]();
    }
  }
  return a1;
}

_DWORD *sub_1882CC4(uint64_t a1, int a2)
{
  uint64_t result = sub_1882CEC(a1, a2);
  if (result) {
    return (_DWORD *)((*((unsigned char *)result + 10) & 1) == 0);
  }
  return result;
}

_DWORD *sub_1882CEC(uint64_t a1, int a2)
{
  uint64_t v2 = *(_DWORD **)(a1 + 16);
  if (*(unsigned __int16 *)(a1 + 8) < 0x101u)
  {
    unint64_t v3 = *(unsigned __int16 *)(a1 + 10);
    if (*(_WORD *)(a1 + 10))
    {
      uint64_t v4 = &v2[8 * v3];
      do
      {
        unint64_t v5 = v3 >> 1;
        unint64_t v6 = &v2[8 * (v3 >> 1)];
        int v8 = *v6;
        uint64_t v7 = v6 + 8;
        v3 += ~(v3 >> 1);
        if (v8 < a2) {
          uint64_t v2 = v7;
        }
        else {
          unint64_t v3 = v5;
        }
      }
      while (v3);
      if (v2 != v4)
      {
        int v10 = *v2;
        char v9 = v2 + 2;
        if (v10 == a2) {
          return v9;
        }
        else {
          return 0;
        }
      }
    }
    return 0;
  }
  uint64_t v14 = (_DWORD *)*((void *)v2 + 1);
  long long v12 = v2 + 2;
  uint64_t v13 = v14;
  if (!v14) {
    return 0;
  }
  int v15 = v12;
  do
  {
    int v16 = v13[8];
    BOOL v17 = v16 < a2;
    if (v16 >= a2) {
      long long v18 = v13;
    }
    else {
      long long v18 = v13 + 2;
    }
    if (!v17) {
      int v15 = v13;
    }
    uint64_t v13 = (_DWORD *)*v18;
  }
  while (*v18);
  if (v15 == v12) {
    return 0;
  }
  int v19 = v15[8];
  float v20 = v15 + 10;
  if (v19 <= a2) {
    return v20;
  }
  else {
    return 0;
  }
}

unsigned char *sub_1882DB0(uint64_t a1, int a2)
{
  uint64_t result = sub_1882CEC(a1, a2);
  if (result)
  {
    return (unsigned char *)sub_1882DE4(result);
  }
  return result;
}

uint64_t sub_1882DE4(unsigned char *a1)
{
  switch(a1[8])
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 0xD:
    case 0xE:
    case 0xF:
    case 0x10:
    case 0x11:
    case 0x12:
      uint64_t result = **(unsigned int **)a1;
      break;
    case 9:
    case 0xA:
    case 0xB:
    case 0xC:
      uint64_t result = *(unsigned int *)(*(void *)a1 + 8);
      break;
    default:
      LODWORD(v2[0]) = 3;
      v2[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodu"
              "les/protobuf-mirror/src/google/protobuf/extension_set.cc";
      int v3 = 1738;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't get here.", 0xFuLL);
      sub_188CF08(v2);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_1882EB4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1882F10(uint64_t a1, int a2)
{
  uint64_t result = sub_1882CEC(a1, a2);
  if (result)
  {
    return sub_1882F4C(result);
  }
  return result;
}

unsigned char *sub_1882F4C(unsigned char *result)
{
  unint64_t v1 = result;
  if (result[9])
  {
    switch(result[8])
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        **(_DWORD **)uint64_t result = 0;
        break;
      case 9:
      case 0xC:
        unint64_t v5 = *(_DWORD **)result;
        uint64_t result = (unsigned char *)sub_188CC00((uint64_t)v5);
        break;
      case 0xA:
      case 0xB:
        unint64_t v6 = *(_DWORD **)result;
        uint64_t v7 = *(unsigned int *)(*(void *)result + 8);
        if ((int)v7 >= 1)
        {
          int v8 = (uint64_t *)(*((void *)v6 + 2) + 8);
          do
          {
            uint64_t v9 = *v8++;
            uint64_t result = (unsigned char *)(*(uint64_t (**)(uint64_t))(*(void *)v9 + 40))(v9);
            --v7;
          }
          while (v7);
          v6[2] = 0;
        }
        break;
      default:
        return result;
    }
  }
  else if ((result[10] & 1) == 0)
  {
    int v2 = dword_216FCD0[result[8]];
    if (v2 == 10)
    {
      uint64_t v4 = **(void **)result;
      if ((result[10] & 0x10) != 0) {
        uint64_t result = (unsigned char *)(*(uint64_t (**)(void))(v4 + 112))();
      }
      else {
        uint64_t result = (unsigned char *)(*(uint64_t (**)(void))(v4 + 40))();
      }
    }
    else if (v2 == 9)
    {
      int v3 = *(void **)result;
      if (*(char *)(*(void *)result + 23) < 0)
      {
        *(unsigned char *)void *v3 = 0;
        v3[1] = 0;
      }
      else
      {
        *(unsigned char *)int v3 = 0;
        *((unsigned char *)v3 + 23) = 0;
      }
    }
    v1[10] = v1[10] & 0xF0 | 1;
  }
  return result;
}

void sub_1883120(uint64_t **a1, uint64_t a2, char a3, char a4, int a5, uint64_t *a6)
{
  unint64_t v11 = sub_1885580((uint64_t)a1, a2);
  long long v12 = v11;
  v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *a1;
    if (!v14) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_188DDC4;
    *(void *)int v15 = 0;
    *((void *)v15 + 1) = v14;
    _DWORD *v12 = (uint64_t *)v15;
  }
  else
  {
    int v15 = (unsigned int *)*v11;
  }
  uint64_t v17 = *v15;
  if (v17 == v15[1])
  {
    unsigned int v18 = v17 + 1;
    sub_188C80C(v15, v17 + 1);
    *(_DWORD *)(*((void *)v15 + 1) + 4 * v17) = a5;
  }
  else
  {
    *(_DWORD *)(*((void *)v15 + 1) + 4 * v17) = a5;
    unsigned int v18 = v17 + 1;
  }
  unsigned int *v15 = v18;
}

uint64_t sub_1883224(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = sub_1882CEC(a1, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *(void *)v4;
  }
  return a3;
}

void sub_188325C(uint64_t **a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t *a6)
{
  unint64_t v11 = sub_1885580((uint64_t)a1, a2);
  long long v12 = v11;
  v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *a1;
    if (!v14) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_188DDE4;
    *(void *)int v15 = 0;
    *((void *)v15 + 1) = v14;
    _DWORD *v12 = (uint64_t *)v15;
  }
  else
  {
    int v15 = (unsigned int *)*v11;
  }
  uint64_t v17 = *v15;
  if (v17 == v15[1])
  {
    unsigned int v18 = v17 + 1;
    sub_188CA54(v15, v17 + 1);
    *(void *)(*((void *)v15 + 1) + 8 * v17) = a5;
  }
  else
  {
    *(void *)(*((void *)v15 + 1) + 8 * v17) = a5;
    unsigned int v18 = v17 + 1;
  }
  unsigned int *v15 = v18;
}

uint64_t **sub_1883378(uint64_t a1, uint64_t a2, char a3, int a4, uint64_t *a5)
{
  uint64_t result = sub_1885580(a1, a2);
  result[2] = a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *(_DWORD *)uint64_t result = a4;
  return result;
}

void sub_18833D8(uint64_t **a1, uint64_t a2, char a3, char a4, int a5, uint64_t *a6)
{
  unint64_t v11 = sub_1885580((uint64_t)a1, a2);
  long long v12 = v11;
  v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *a1;
    if (!v14) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_188DE04;
    *(void *)int v15 = 0;
    *((void *)v15 + 1) = v14;
    _DWORD *v12 = (uint64_t *)v15;
  }
  else
  {
    int v15 = (unsigned int *)*v11;
  }
  uint64_t v17 = *v15;
  if (v17 == v15[1])
  {
    unsigned int v18 = v17 + 1;
    sub_188C80C(v15, v17 + 1);
    *(_DWORD *)(*((void *)v15 + 1) + 4 * v17) = a5;
  }
  else
  {
    *(_DWORD *)(*((void *)v15 + 1) + 4 * v17) = a5;
    unsigned int v18 = v17 + 1;
  }
  unsigned int *v15 = v18;
}

uint64_t **sub_18834F4(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t result = sub_1885580(a1, a2);
  result[2] = a5;
  if (v9)
  {
    *((unsigned char *)result + 8) = a3;
    *((unsigned char *)result + 9) = 0;
  }
  *((unsigned char *)result + 10) &= 0xF0u;
  *uint64_t result = a4;
  return result;
}

void sub_1883554(uint64_t **a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t *a6)
{
  unint64_t v11 = sub_1885580((uint64_t)a1, a2);
  long long v12 = v11;
  v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *a1;
    if (!v14) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_188DE24;
    *(void *)int v15 = 0;
    *((void *)v15 + 1) = v14;
    _DWORD *v12 = (uint64_t *)v15;
  }
  else
  {
    int v15 = (unsigned int *)*v11;
  }
  uint64_t v17 = *v15;
  if (v17 == v15[1])
  {
    unsigned int v18 = v17 + 1;
    sub_188CA54(v15, v17 + 1);
    *(void *)(*((void *)v15 + 1) + 8 * v17) = a5;
  }
  else
  {
    *(void *)(*((void *)v15 + 1) + 8 * v17) = a5;
    unsigned int v18 = v17 + 1;
  }
  unsigned int *v15 = v18;
}

void sub_1883658(uint64_t **a1, uint64_t a2, char a3, char a4, uint64_t *a5, float a6)
{
  unint64_t v11 = sub_1885580((uint64_t)a1, a2);
  long long v12 = v11;
  v11[2] = a5;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *a1;
    if (!v14) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_188DE44;
    *(void *)int v15 = 0;
    *((void *)v15 + 1) = v14;
    _DWORD *v12 = (uint64_t *)v15;
  }
  else
  {
    int v15 = (unsigned int *)*v11;
  }
  uint64_t v17 = *v15;
  if (v17 == v15[1])
  {
    unsigned int v18 = v17 + 1;
    sub_188C80C(v15, v17 + 1);
    *(float *)(*((void *)v15 + 1) + 4 * v17) = a6;
  }
  else
  {
    *(float *)(*((void *)v15 + 1) + 4 * v17) = a6;
    unsigned int v18 = v17 + 1;
  }
  unsigned int *v15 = v18;
}

void sub_188376C(uint64_t **a1, uint64_t a2, char a3, char a4, uint64_t *a5, double a6)
{
  unint64_t v11 = sub_1885580((uint64_t)a1, a2);
  long long v12 = v11;
  v11[2] = a5;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *a1;
    if (!v14) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_188DE64;
    *(void *)int v15 = 0;
    *((void *)v15 + 1) = v14;
    _DWORD *v12 = (uint64_t *)v15;
  }
  else
  {
    int v15 = (unsigned int *)*v11;
  }
  uint64_t v17 = *v15;
  if (v17 == v15[1])
  {
    unsigned int v18 = v17 + 1;
    sub_188CA54(v15, v17 + 1);
    *(double *)(*((void *)v15 + 1) + 8 * v17) = a6;
  }
  else
  {
    *(double *)(*((void *)v15 + 1) + 8 * v17) = a6;
    unsigned int v18 = v17 + 1;
  }
  unsigned int *v15 = v18;
}

BOOL sub_1883880(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = sub_1882CEC(a1, a2);
  if (v4 && (v4[10] & 1) == 0) {
    return *v4 != 0;
  }
  return a3;
}

void sub_18838C0(uint64_t **a1, uint64_t a2, char a3, char a4, char a5, uint64_t *a6)
{
  unint64_t v11 = sub_1885580((uint64_t)a1, a2);
  long long v12 = v11;
  v11[2] = a6;
  if (v13)
  {
    *((unsigned char *)v11 + 8) = a3;
    *((unsigned char *)v11 + 9) = 1;
    *((unsigned char *)v11 + 11) = a4;
    uint64_t v14 = *a1;
    if (!v14) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_188DE84;
    *(void *)int v15 = 0;
    *((void *)v15 + 1) = v14;
    _DWORD *v12 = (uint64_t *)v15;
  }
  else
  {
    int v15 = (unsigned int *)*v11;
  }
  uint64_t v17 = *v15;
  if (v17 == v15[1])
  {
    unsigned int v18 = v17 + 1;
    sub_188C6F4(v15, v17 + 1);
    *(unsigned char *)(*((void *)v15 + 1) + v17) = a5;
  }
  else
  {
    *(unsigned char *)(*((void *)v15 + 1) + v17) = a5;
    unsigned int v18 = v17 + 1;
  }
  unsigned int *v15 = v18;
}

uint64_t sub_18839C4(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = sub_1882CEC(a1, a2);
  if (v4) {
    return *(void *)v4;
  }
  return a3;
}

uint64_t *sub_18839F4(uint64_t **a1, uint64_t a2, int a3, char a4, uint64_t *a5)
{
  char v9 = sub_1885580((uint64_t)a1, a2);
  int v10 = v9;
  v9[2] = a5;
  if (v11)
  {
    *((unsigned char *)v9 + 9) = 1;
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 11) = a4;
    switch(a3)
    {
      case 1:
        long long v12 = *a1;
        if (!v12) {
          goto LABEL_18;
        }
        *uint64_t v14 = v13;
        int v15 = sub_188DE64;
        goto LABEL_17;
      case 2:
        long long v12 = *a1;
        if (!v12) {
          goto LABEL_18;
        }
        *uint64_t v14 = v13;
        int v15 = sub_188DE44;
        goto LABEL_17;
      case 3:
      case 16:
      case 18:
        long long v12 = *a1;
        if (!v12) {
          goto LABEL_18;
        }
        *uint64_t v14 = v13;
        int v15 = sub_188DDE4;
        goto LABEL_17;
      case 4:
      case 6:
        long long v12 = *a1;
        if (!v12) {
          goto LABEL_18;
        }
        *uint64_t v14 = v13;
        int v15 = sub_188DE24;
        goto LABEL_17;
      case 5:
      case 14:
      case 15:
      case 17:
        long long v12 = *a1;
        if (!v12) {
          goto LABEL_18;
        }
        *uint64_t v14 = v13;
        int v15 = sub_188DDC4;
        goto LABEL_17;
      case 7:
      case 13:
        long long v12 = *a1;
        if (!v12) {
          goto LABEL_18;
        }
        *uint64_t v14 = v13;
        int v15 = sub_188DE04;
        goto LABEL_17;
      case 8:
        long long v12 = *a1;
        if (!v12) {
LABEL_18:
        }
          operator new();
        *uint64_t v14 = v13;
        int v15 = sub_188DE84;
LABEL_17:
        v14[1] = (uint64_t *)v15;
        *char v13 = 0;
        v13[1] = (uint64_t)v12;
        goto LABEL_25;
      case 9:
      case 12:
        int v16 = *a1;
        if (!v16) {
          goto LABEL_24;
        }
        void *v17 = v13;
        unsigned int v18 = (uint64_t (*)())sub_188DEA4;
        goto LABEL_23;
      case 10:
      case 11:
        int v16 = *a1;
        if (!v16) {
LABEL_24:
        }
          operator new();
        void *v17 = v13;
        unsigned int v18 = sub_188DEC0;
LABEL_23:
        v17[1] = (uint64_t *)v18;
        *char v13 = (uint64_t)v16;
        v13[1] = 0;
        v13[2] = 0;
LABEL_25:
        *int v10 = v13;
        break;
      default:
        return *v10;
    }
  }
  return *v10;
}

uint64_t sub_1883CC0(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = sub_1882CEC(a1, a2);
  if (v4 && (*((unsigned char *)v4 + 10) & 1) == 0) {
    return *v4;
  }
  return a3;
}

uint64_t *sub_1883D14(uint64_t **a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v7 = sub_1885580((uint64_t)a1, a2);
  int v8 = v7;
  v7[2] = a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    *((unsigned char *)v7 + 9) = 0;
    if (!*a1) {
      operator new();
    }
    *char v11 = result;
    v11[1] = (uint64_t *)sub_3A6EDC;
    *uint64_t result = 0;
    result[1] = 0;
    result[2] = 0;
    uint64_t *v8 = result;
  }
  else
  {
    uint64_t result = *v7;
  }
  *((unsigned char *)v8 + 10) &= 0xF0u;
  return result;
}

void *sub_1883DD4(uint64_t **a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v7 = sub_1885580((uint64_t)a1, a2);
  int v8 = v7;
  v7[2] = a4;
  if (v9)
  {
    *((unsigned char *)v7 + 8) = a3;
    *((unsigned char *)v7 + 9) = 1;
    *((unsigned char *)v7 + 11) = 0;
    int v10 = *a1;
    if (!*a1) {
      operator new();
    }
    uint64_t *v12 = v11;
    v12[1] = (uint64_t)sub_188DEA4;
    *(void *)uint64_t v11 = v10;
    *(void *)(v11 + 8) = 0;
    *(void *)(v11 + 16) = 0;
    void *v8 = v11;
  }
  else
  {
    uint64_t v11 = (uint64_t)*v7;
  }
  char v13 = *(_DWORD **)(v11 + 16);
  if (v13 && (uint64_t v14 = *(int *)(v11 + 8), (int)v14 < *v13))
  {
    *(_DWORD *)(v11 + 8) = v14 + 1;
    return *(void **)&v13[2 * v14 + 2];
  }
  else
  {
    if (!*(void *)v11) {
      operator new();
    }
    *int v16 = v15;
    v16[1] = sub_3A6EDC;
    void *v15 = 0;
    v15[1] = 0;
    v15[2] = 0;
    sub_188CDC8(v11, (uint64_t)v15);
  }
  return v15;
}

uint64_t sub_1883F34(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4 = sub_1882CEC(a1, a2);
  if (!v4) {
    return a3;
  }
  char v5 = *((unsigned char *)v4 + 10);
  uint64_t v6 = *(void *)v4;
  if ((v5 & 0x10) == 0) {
    return v6;
  }
  int v8 = *(uint64_t (**)(void))(*(void *)v6 + 24);

  return v8();
}

uint64_t sub_1883FB0(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  char v9 = sub_1885580((uint64_t)a1, a2);
  int v10 = v9;
  v9[2] = a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 9) = 0;
    *((unsigned char *)v9 + 10) &= 0xFu;
    uint64_t result = (*(uint64_t (**)(uint64_t, void))(*(void *)a4 + 32))(a4, *a1);
    *int v10 = (uint64_t *)result;
    *((unsigned char *)v10 + 10) &= 0xF0u;
  }
  else
  {
    char v13 = *((unsigned char *)v9 + 10);
    *((unsigned char *)v9 + 10) = v13 & 0xF0;
    uint64_t result = (uint64_t)*v9;
    if ((v13 & 0x10) != 0)
    {
      uint64_t v14 = *(uint64_t (**)(void))(*(void *)result + 32);
      return v14();
    }
  }
  return result;
}

uint64_t sub_18840C4(uint64_t a1, int a2, int a3)
{
  uint64_t v4 = sub_1882CEC(a1, a2);
  if (!v4)
  {
    LODWORD(v6[0]) = 3;
    v6[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodule"
            "s/protobuf-mirror/src/google/protobuf/extension_set.cc";
    int v7 = 747;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ", 0x21uLL);
    std::string::append(&__p, "Index out-of-bounds (field is empty).", 0x25uLL);
    sub_188CF08(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_188417C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_188419C(uint64_t a1, int a2, int a3)
{
  uint64_t v4 = sub_1882CEC(a1, a2);
  if (!v4)
  {
    LODWORD(v6[0]) = 3;
    v6[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodule"
            "s/protobuf-mirror/src/google/protobuf/extension_set.cc";
    int v7 = 754;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: extension != NULL: ", 0x21uLL);
    std::string::append(&__p, "Index out-of-bounds (field is empty).", 0x25uLL);
    sub_188CF08(v6);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(*(void *)(*(void *)v4 + 16) + 8 * a3 + 8);
}

void sub_1884254(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1884274(uint64_t **a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  char v9 = sub_1885580((uint64_t)a1, a2);
  int v10 = (uint64_t *)v9;
  v9[2] = a5;
  if (v11)
  {
    *((unsigned char *)v9 + 8) = a3;
    *((unsigned char *)v9 + 9) = 1;
    long long v12 = *a1;
    if (!*a1) {
      operator new();
    }
    *uint64_t v14 = v13;
    v14[1] = sub_188DEC0;
    *char v13 = v12;
    v13[1] = 0;
    v13[2] = 0;
    *int v10 = (uint64_t)v13;
  }
  else
  {
    char v13 = *v9;
  }
  int v15 = (_DWORD *)v13[2];
  if (!v15
    || (uint64_t v16 = *((int *)v13 + 2), (int)v16 >= *v15)
    || (*((_DWORD *)v13 + 2) = v16 + 1, (uint64_t v17 = *(void *)&v15[2 * v16 + 2]) == 0))
  {
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)a4 + 32))(a4, *a1);
    sub_188DEF0(*v10, v17);
  }
  return v17;
}

unsigned char *sub_18843A4(unsigned char *result)
{
  unint64_t v1 = (void *)*((void *)result + 2);
  if (*((unsigned __int16 *)result + 4) >= 0x101u)
  {
    uint64_t v6 = (void *)*v1;
    uint64_t v4 = v1 + 1;
    char v5 = v6;
    if (v6 != v4)
    {
      do
      {
        uint64_t result = sub_1882F4C((unsigned char *)v5 + 40);
        int v7 = (void *)v5[1];
        if (v7)
        {
          do
          {
            int v8 = v7;
            int v7 = (void *)*v7;
          }
          while (v7);
        }
        else
        {
          do
          {
            int v8 = (void *)v5[2];
            BOOL v9 = *v8 == (void)v5;
            char v5 = v8;
          }
          while (!v9);
        }
        char v5 = v8;
      }
      while (v8 != v4);
    }
  }
  else if (*((_WORD *)result + 5))
  {
    uint64_t v2 = 32 * *((unsigned __int16 *)result + 5);
    int v3 = v1 + 1;
    do
    {
      uint64_t result = sub_1882F4C(v3);
      v3 += 32;
      v2 -= 32;
    }
    while (v2);
  }
  return result;
}

void sub_1884444(uint64_t a1, uint64_t a2)
{
  if (*(unsigned __int16 *)(a1 + 8) <= 0x100u)
  {
    unsigned int v4 = *(unsigned __int16 *)(a2 + 8);
    char v5 = *(char **)(a1 + 16);
    uint64_t v6 = *(unsigned __int16 *)(a1 + 10);
    int v7 = &v5[32 * v6];
    uint64_t v8 = *(void *)(a2 + 16);
    if (v4 > 0x100)
    {
      size_t v14 = sub_1884704(v5, v7, *(void **)v8, (void *)(v8 + 8));
    }
    else
    {
      uint64_t v9 = *(unsigned __int16 *)(a2 + 10);
      uint64_t v10 = v8 + 32 * v9;
      BOOL v12 = v6 == 0;
      uint64_t v11 = 0;
      BOOL v12 = v12 || v9 == 0;
      if (!v12)
      {
        do
        {
          if (*(_DWORD *)v5 == *(_DWORD *)v8) {
            char v13 = v5 + 32;
          }
          else {
            char v13 = v5;
          }
          if (*(_DWORD *)v5 < *(_DWORD *)v8)
          {
            v5 += 32;
          }
          else
          {
            v8 += 32;
            char v5 = v13;
          }
          ++v11;
        }
        while (v5 != v7 && v8 != v10);
      }
      size_t v14 = v11 + ((v10 - v8) >> 5) + ((v7 - v5) >> 5);
    }
    sub_1884574((void *)a1, v14);
  }
  int v15 = *(int ***)(a2 + 16);
  if (*(unsigned __int16 *)(a2 + 8) >= 0x101u)
  {
    int v19 = (int **)*v15;
    sub_188E03C(v19, v15 + 1, (uint64_t **)a1);
  }
  else if (*(_WORD *)(a2 + 10))
  {
    uint64_t v16 = (int *)&v15[4 * *(unsigned __int16 *)(a2 + 10)];
    do
    {
      uint64_t v17 = v15 + 1;
      unsigned int v18 = *(_DWORD *)v15;
      v15 += 4;
      sub_188480C((uint64_t **)a1, v18, v17);
    }
    while (v15 != (int **)v16);
  }
}

void *sub_1884574(void *result, size_t __sz)
{
  size_t v2 = *((unsigned __int16 *)result + 4);
  if (v2 <= 0x100 && v2 < __sz)
  {
    unsigned int v4 = result;
    do
    {
      if ((_WORD)v2) {
        LOWORD(v2) = 4 * v2;
      }
      else {
        LOWORD(v2) = 1;
      }
    }
    while ((unsigned __int16)v2 < __sz);
    char v5 = (char *)result[2];
    uint64_t v6 = *((unsigned __int16 *)result + 5);
    int v7 = (uint64_t *)*result;
    if ((unsigned __int16)v2 < 0x101u)
    {
      if (v7) {
      else
      }
        uint64_t result = operator new[](32 * (unsigned __int16)v2);
      uint64_t v8 = (uint64_t **)result;
      if (v6) {
        uint64_t result = memmove(result, v5, 32 * v6);
      }
    }
    else
    {
      if (!v7) {
        operator new();
      }
      uint64_t v8 = (uint64_t **)result;
      *uint64_t v9 = result;
      v9[1] = sub_188E55C;
      result[1] = 0;
      uint64_t v10 = result + 1;
      result[2] = 0;
      *uint64_t result = result + 1;
      if (v6)
      {
        uint64_t v11 = &v5[32 * v6];
        BOOL v12 = v5;
        do
        {
          int v15 = *(_DWORD *)v12;
          long long v13 = *(_OWORD *)(v12 + 8);
          uint64_t v17 = *((void *)v12 + 3);
          long long v16 = v13;
          uint64_t result = sub_188E564(v8, v10, &v15, &v15);
          uint64_t v10 = result;
          v12 += 32;
        }
        while (v12 != v11);
      }
    }
    if (*v4) {
      BOOL v14 = 1;
    }
    else {
      BOOL v14 = v5 == 0;
    }
    if (!v14) {
      operator delete[]();
    }
    *((_WORD *)v4 + 4) = v2;
    v4[2] = v8;
  }
  return result;
}

uint64_t sub_1884704(char *a1, char *a2, void *a3, void *a4)
{
  uint64_t v4 = 0;
  if (a1 != a2 && a3 != a4)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *((_DWORD *)a3 + 8);
      if (*(_DWORD *)a1 >= v5)
      {
        if (*(_DWORD *)a1 == v5)
        {
          a1 += 32;
          uint64_t v6 = (void *)a3[1];
          if (v6)
          {
            do
            {
              a3 = v6;
              uint64_t v6 = (void *)*v6;
            }
            while (v6);
          }
          else
          {
            do
            {
              int v7 = a3;
              a3 = (void *)a3[2];
            }
            while ((void *)*a3 != v7);
          }
        }
        else
        {
          uint64_t v8 = (void *)a3[1];
          if (v8)
          {
            do
            {
              a3 = v8;
              uint64_t v8 = (void *)*v8;
            }
            while (v8);
          }
          else
          {
            do
            {
              uint64_t v9 = a3;
              a3 = (void *)a3[2];
            }
            while ((void *)*a3 != v9);
          }
        }
      }
      else
      {
        a1 += 32;
      }
      ++v4;
    }
    while (a1 != a2 && a3 != a4);
  }
  if (a3 == a4)
  {
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = (void *)a3[1];
      if (v11)
      {
        do
        {
          BOOL v12 = v11;
          uint64_t v11 = (void *)*v11;
        }
        while (v11);
      }
      else
      {
        do
        {
          BOOL v12 = (void *)a3[2];
          BOOL v13 = *v12 == (void)a3;
          a3 = v12;
        }
        while (!v13);
      }
      ++v10;
      a3 = v12;
    }
    while (v12 != a4);
  }
  return v4 + ((a2 - a1) >> 5) + v10;
}

void sub_188480C(uint64_t **a1, uint64_t a2, int **a3)
{
  if (!*((unsigned char *)a3 + 9))
  {
    if (*((unsigned char *)a3 + 10)) {
      return;
    }
    char v13 = *((unsigned char *)a3 + 8);
    switch(v13)
    {
      case 1:
        int v48 = (uint64_t *)*a3;
        uint64_t v49 = (uint64_t *)a3[2];
        int v50 = sub_1885580((uint64_t)a1, a2);
        v50[2] = v49;
        if (v51)
        {
          *((unsigned char *)v50 + 8) = v13;
          *((unsigned char *)v50 + 9) = 0;
        }
        *((unsigned char *)v50 + 10) &= 0xF0u;
        *int v50 = v48;
        return;
      case 2:
        int v52 = *(_DWORD *)a3;
        uint64_t v53 = (uint64_t *)a3[2];
        unint64_t v54 = sub_1885580((uint64_t)a1, a2);
        v54[2] = v53;
        if (v55)
        {
          *((unsigned char *)v54 + 8) = v13;
          *((unsigned char *)v54 + 9) = 0;
        }
        *((unsigned char *)v54 + 10) &= 0xF0u;
        *(_DWORD *)unint64_t v54 = v52;
        return;
      case 3:
      case 4:
      case 6:
      case 16:
      case 18:
        uint64_t v42 = (uint64_t *)*a3;
        unsigned __int8 v43 = (uint64_t *)a3[2];
        std::string v44 = sub_1885580((uint64_t)a1, a2);
        v44[2] = v43;
        if (v45)
        {
          *((unsigned char *)v44 + 8) = v13;
          *((unsigned char *)v44 + 9) = 0;
        }
        *((unsigned char *)v44 + 10) &= 0xF0u;
        *std::string v44 = v42;
        return;
      case 5:
      case 7:
      case 13:
      case 14:
      case 15:
      case 17:
        int v14 = *(_DWORD *)a3;
        int v15 = (uint64_t *)a3[2];
        long long v16 = sub_1885580((uint64_t)a1, a2);
        v16[2] = v15;
        if (v17)
        {
          *((unsigned char *)v16 + 8) = v13;
          *((unsigned char *)v16 + 9) = 0;
        }
        *((unsigned char *)v16 + 10) &= 0xF0u;
        *(_DWORD *)long long v16 = v14;
        return;
      case 8:
        char v56 = *(unsigned char *)a3;
        unint64_t v57 = (uint64_t *)a3[2];
        uint64_t v58 = sub_1885580((uint64_t)a1, a2);
        v58[2] = v57;
        if (v59)
        {
          *((unsigned char *)v58 + 8) = v13;
          *((unsigned char *)v58 + 9) = 0;
        }
        *((unsigned char *)v58 + 10) &= 0xF0u;
        *(unsigned char *)uint64_t v58 = v56;
        return;
      case 9:
      case 12:
        unint64_t v66 = *a3;
        if (*((char *)*a3 + 23) < 0)
        {
          sub_4200(__p, *(void **)v66, *((void *)v66 + 1));
        }
        else
        {
          long long v67 = *(_OWORD *)v66;
          uint64_t v103 = *((void *)v66 + 2);
          *(_OWORD *)std::string __p = v67;
        }
        sub_18852D4(a1, a2, v13, (__n128 *)__p, (uint64_t *)a3[2]);
        if (SHIBYTE(v103) < 0) {
          operator delete(__p[0]);
        }
        return;
      case 10:
      case 11:
        unint64_t v60 = (uint64_t *)a3[2];
        uint64_t v61 = sub_1885580((uint64_t)a1, a2);
        uint64_t v62 = v61;
        v61[2] = v60;
        if (v63)
        {
          *((unsigned char *)v61 + 8) = *((unsigned char *)a3 + 8);
          *((unsigned char *)v61 + 11) = *((unsigned char *)a3 + 11);
          *((unsigned char *)v61 + 9) = 0;
          char v64 = *((unsigned char *)v61 + 10) & 0xF;
          if ((*((unsigned char *)a3 + 10) & 0x10) != 0)
          {
            *((unsigned char *)v61 + 10) = v64 | 0x10;
            uint64_t v101 = (*(uint64_t (**)(int *, uint64_t *))(*(void *)*a3 + 16))(*a3, *a1);
            void *v62 = (uint64_t *)v101;
            (*(void (**)(uint64_t, int *))(*(void *)v101 + 104))(v101, *a3);
            goto LABEL_103;
          }
          *((unsigned char *)v61 + 10) = v64;
          uint64_t v65 = (*(uint64_t (**)(int *, uint64_t *))(*(void *)*a3 + 32))(*a3, *a1);
          void *v62 = (uint64_t *)v65;
LABEL_94:
          (*(void (**)(uint64_t, int *))(*(void *)v65 + 64))(v65, *a3);
LABEL_103:
          *((unsigned char *)v62 + 10) &= 0xF0u;
          return;
        }
        uint64_t v98 = *v61;
        uint64_t v99 = (uint64_t)*a3;
        if ((*((unsigned char *)a3 + 10) & 0x10) != 0)
        {
          if ((*((unsigned char *)v61 + 10) & 0x10) != 0)
          {
            (*(void (**)(uint64_t *, uint64_t))(*v98 + 104))(*v61, v99);
            goto LABEL_103;
          }
          uint64_t v99 = (*(uint64_t (**)(int *, uint64_t *))(*(void *)v99 + 24))(*a3, *v61);
          uint64_t v100 = *v98;
        }
        else
        {
          uint64_t v100 = *v98;
          if ((*((unsigned char *)v61 + 10) & 0x10) != 0)
          {
            uint64_t v65 = (*(uint64_t (**)(uint64_t *, uint64_t))(v100 + 32))(*v61, v99);
            goto LABEL_94;
          }
        }
        (*(void (**)(uint64_t *, uint64_t))(v100 + 64))(v98, v99);
        goto LABEL_103;
      default:
        return;
    }
  }
  uint64_t v6 = (uint64_t *)a3[2];
  int v7 = sub_1885580((uint64_t)a1, a2);
  uint64_t v9 = (uint64_t *)v7;
  v7[2] = v6;
  if (v8)
  {
    *((unsigned char *)v7 + 8) = *((unsigned char *)a3 + 8);
    *((unsigned char *)v7 + 11) = *((unsigned char *)a3 + 11);
    *((unsigned char *)v7 + 9) = 1;
  }
  switch(*((unsigned char *)a3 + 8))
  {
    case 1:
      if (v8)
      {
        uint64_t v27 = *a1;
        if (!v27) {
          operator new();
        }
        *unint64_t v29 = v28;
        v29[1] = sub_188DE64;
        void *v28 = 0;
        v28[1] = v27;
        *uint64_t v9 = (uint64_t)v28;
      }
      uint64_t v68 = *a3;
      int v69 = **a3;
      if (v69) {
        goto LABEL_68;
      }
      break;
    case 2:
      if (v8)
      {
        uint8x8_t v30 = *a1;
        if (!v30) {
          operator new();
        }
        void *v32 = v31;
        v32[1] = sub_188DE44;
        *unint64_t v31 = 0;
        v31[1] = v30;
        *uint64_t v9 = (uint64_t)v31;
      }
      int v46 = *a3;
      int v47 = **a3;
      if (v47) {
        goto LABEL_71;
      }
      break;
    case 3:
    case 0x10:
    case 0x12:
      if (v8)
      {
        unsigned int v18 = *a1;
        if (!v18) {
          operator new();
        }
        *float v20 = v19;
        v20[1] = sub_188DDE4;
        *int v19 = 0;
        v19[1] = v18;
        *uint64_t v9 = (uint64_t)v19;
      }
      uint64_t v68 = *a3;
      int v69 = **a3;
      if (v69) {
        goto LABEL_68;
      }
      break;
    case 4:
    case 6:
      if (v8)
      {
        unint64_t v24 = *a1;
        if (!v24) {
          operator new();
        }
        void *v26 = v25;
        v26[1] = sub_188DE24;
        *unint64_t v25 = 0;
        v25[1] = v24;
        *uint64_t v9 = (uint64_t)v25;
      }
      uint64_t v68 = *a3;
      int v69 = **a3;
      if (v69)
      {
LABEL_68:
        uint64_t v70 = *v9;
        uint64_t v71 = *(int *)*v9;
        sub_188CA54((unsigned int *)v70, v71 + v69);
        uint64_t v72 = *(void *)(v70 + 8);
        *(_DWORD *)v70 += *v68;
        uint64_t v73 = (void *)(v72 + 8 * v71);
        uint64_t v74 = (const void *)*((void *)v68 + 1);
        size_t v75 = 8 * *v68;
        goto LABEL_75;
      }
      break;
    case 5:
    case 0xE:
    case 0xF:
    case 0x11:
      if (v8)
      {
        uint64_t v10 = *a1;
        if (!v10) {
          operator new();
        }
        void *v12 = v11;
        v12[1] = sub_188DDC4;
        *uint64_t v11 = 0;
        v11[1] = v10;
        *uint64_t v9 = (uint64_t)v11;
      }
      int v46 = *a3;
      int v47 = **a3;
      if (v47) {
        goto LABEL_71;
      }
      break;
    case 7:
    case 0xD:
      if (v8)
      {
        BOOL v21 = *a1;
        if (!v21) {
          operator new();
        }
        *unint64_t v23 = v22;
        v23[1] = sub_188DE04;
        void *v22 = 0;
        v22[1] = v21;
        *uint64_t v9 = (uint64_t)v22;
      }
      int v46 = *a3;
      int v47 = **a3;
      if (v47)
      {
LABEL_71:
        uint64_t v76 = *v9;
        uint64_t v77 = *(int *)*v9;
        sub_188C80C((unsigned int *)v76, v77 + v47);
        uint64_t v78 = *(void *)(v76 + 8);
        *(_DWORD *)v76 += *v46;
        uint64_t v73 = (void *)(v78 + 4 * v77);
        uint64_t v74 = (const void *)*((void *)v46 + 1);
        size_t v75 = 4 * *v46;
        goto LABEL_75;
      }
      break;
    case 8:
      if (v8)
      {
        uint64_t v33 = *a1;
        if (!v33) {
          operator new();
        }
        *unint64_t v35 = v34;
        v35[1] = sub_188DE84;
        void *v34 = 0;
        v34[1] = v33;
        *uint64_t v9 = (uint64_t)v34;
      }
      uint64_t v79 = *a3;
      int v80 = **a3;
      if (v80)
      {
        uint64_t v81 = *v9;
        uint64_t v82 = *(int *)*v9;
        sub_188C6F4((unsigned int *)v81, v82 + v80);
        uint64_t v83 = *(void *)(v81 + 8);
        *(_DWORD *)v81 += *v79;
        uint64_t v73 = (void *)(v83 + v82);
        uint64_t v74 = (const void *)*((void *)v79 + 1);
        size_t v75 = *v79;
LABEL_75:
        memcpy(v73, v74, v75);
      }
      break;
    case 9:
    case 0xC:
      if (v8)
      {
        uint64_t v36 = *a1;
        if (!v36) {
          operator new();
        }
        void *v38 = v37;
        v38[1] = sub_188DEA4;
        *unint64_t v37 = v36;
        v37[1] = 0;
        v37[2] = 0;
        *uint64_t v9 = (uint64_t)v37;
      }
      uint64_t v91 = *a3;
      int v92 = (*a3)[2];
      if (v92)
      {
        uint64_t v93 = *v9;
        uint64_t v94 = (const std::string **)(*((void *)v91 + 2) + 8);
        uint64_t v95 = (std::string **)sub_188CCE4(v93, v92);
        sub_188FB98(v93, v95, v94, v92, **(_DWORD **)(v93 + 16) - *(_DWORD *)(v93 + 8));
        int v96 = *(_DWORD *)(v93 + 8) + v92;
        *(_DWORD *)(v93 + 8) = v96;
        unint64_t v97 = *(int **)(v93 + 16);
        if (*v97 < v96) {
          *unint64_t v97 = v96;
        }
      }
      break;
    case 0xA:
    case 0xB:
      if (v8)
      {
        uint64_t v39 = *a1;
        if (!*a1) {
          operator new();
        }
        *BOOL v41 = v40;
        v41[1] = sub_188DEC0;
        *std::string::size_type v40 = v39;
        v40[1] = 0;
        v40[2] = 0;
        *uint64_t v9 = (uint64_t)v40;
      }
      int v84 = *a3;
      if ((*a3)[2] >= 1)
      {
        uint64_t v85 = 0;
        do
        {
          uint64_t v86 = *(void *)(*((void *)v84 + 2) + 8 * v85 + 8);
          uint64_t v87 = *v9;
          uint64_t v88 = *(_DWORD **)(*v9 + 16);
          if (!v88
            || (uint64_t v89 = *(int *)(v87 + 8), (int)v89 >= *v88)
            || (*(_DWORD *)(v87 + 8) = v89 + 1, (uint64_t v90 = *(void *)&v88[2 * v89 + 2]) == 0))
          {
            uint64_t v90 = (*(uint64_t (**)(uint64_t, uint64_t *))(*(void *)v86 + 32))(v86, *a1);
            sub_188DEF0(*v9, v90);
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)v90 + 64))(v90, v86);
          ++v85;
        }
        while (v85 < v84[2]);
      }
      break;
    default:
      return;
  }
}

void sub_188524C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

__n128 sub_18852D4(uint64_t **a1, uint64_t a2, char a3, __n128 *a4, uint64_t *a5)
{
  uint64_t v6 = sub_1883D14(a1, a2, a3, a5);
  int v7 = (__n128 *)v6;
  if (*((char *)v6 + 23) < 0) {
    operator delete((void *)*v6);
  }
  __n128 result = *a4;
  v7[1].n128_u64[0] = a4[1].n128_u64[0];
  __n128 *v7 = result;
  a4[1].n128_u8[7] = 0;
  a4->n128_u8[0] = 0;
  return result;
}

uint64_t *sub_1885338(uint64_t *result, uint64_t *a2)
{
  uint64_t v2 = *result;
  *__n128 result = *a2;
  *a2 = v2;
  LOWORD(v2) = *((_WORD *)result + 4);
  *((_WORD *)result + 4) = *((_WORD *)a2 + 4);
  *((_WORD *)a2 + 4) = v2;
  LOWORD(v2) = *((_WORD *)result + 5);
  *((_WORD *)result + 5) = *((_WORD *)a2 + 5);
  *((_WORD *)a2 + 5) = v2;
  uint64_t v3 = result[2];
  result[2] = a2[2];
  a2[2] = v3;
  return result;
}

uint64_t sub_1885398(uint64_t result)
{
  int v1 = dword_216FCD0[*(unsigned __int8 *)(result + 8)];
  if (*(unsigned char *)(result + 9))
  {
    switch(*(unsigned char *)(result + 8))
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
        uint64_t v2 = *(void *)result;
        if (!*(void *)result) {
          return result;
        }
        if (*(int *)(v2 + 4) >= 1)
        {
          uint64_t v3 = *(void *)(v2 + 8);
          uint64_t v5 = *(void *)(v3 - 8);
          uint64_t v4 = (void *)(v3 - 8);
          if (!v5) {
            operator delete(v4);
          }
        }
        break;
      case 9:
      case 0xC:
        if (!*(void *)result) {
          return result;
        }
        sub_188CB6C(*(void **)result);
        break;
      case 0xA:
      case 0xB:
        if (!*(void *)result) {
          return result;
        }
        sub_188E404(*(void **)result);
        break;
      default:
        return result;
    }
    goto LABEL_27;
  }
  if (v1 == 10)
  {
    char v7 = *(unsigned char *)(result + 10);
    __n128 result = *(void *)result;
    if ((v7 & 0x10) != 0)
    {
      if (!result) {
        return result;
      }
      char v8 = *(uint64_t (**)(void))(*(void *)result + 8);
    }
    else
    {
      if (!result) {
        return result;
      }
      char v8 = *(uint64_t (**)(void))(*(void *)result + 8);
    }
    return v8();
  }
  if (v1 == 9)
  {
    uint64_t v6 = *(void *)result;
    if (*(void *)result)
    {
      if (*(char *)(v6 + 23) < 0) {
        operator delete(*(void **)v6);
      }
LABEL_27:
      operator delete();
    }
  }
  return result;
}

uint64_t **sub_1885580(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int16 *)(a1 + 8);
  uint64_t v4 = *(uint64_t ***)(a1 + 16);
  if (v3 >= 0x101)
  {
    *((void *)&v14 + 1) = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    LODWORD(v14) = a2;
    return sub_188E490(v4, (int *)&v14, &v14) + 5;
  }
  uint64_t v6 = *(unsigned __int16 *)(a1 + 10);
  char v7 = &v4[4 * v6];
  if (!*(_WORD *)(a1 + 10))
  {
    if (!*(_WORD *)(a1 + 8)) {
      goto LABEL_18;
    }
    LOWORD(v6) = 0;
LABEL_17:
    *(_WORD *)(a1 + 10) = v6 + 1;
    *(_DWORD *)char v7 = a2;
    v7[1] = 0;
    __n128 result = v7 + 1;
    v7[2] = 0;
    v7[3] = 0;
    return result;
  }
  unint64_t v8 = *(unsigned __int16 *)(a1 + 10);
  do
  {
    unint64_t v9 = v8 >> 1;
    uint64_t v10 = (int *)&v4[4 * (v8 >> 1)];
    int v12 = *v10;
    uint64_t v11 = (uint64_t **)(v10 + 8);
    v8 += ~(v8 >> 1);
    if (v12 < (int)a2) {
      uint64_t v4 = v11;
    }
    else {
      unint64_t v8 = v9;
    }
  }
  while (v8);
  if (v4 != v7)
  {
    if (*(_DWORD *)v4 == a2) {
      return v4 + 1;
    }
    if (v6 < v3)
    {
      memmove(v4 + 4, v4, (char *)v7 - (char *)v4);
      LOWORD(v6) = *(_WORD *)(a1 + 10);
      char v7 = v4;
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  if (v6 < v3) {
    goto LABEL_17;
  }
LABEL_18:
  sub_1884574((void *)a1, v6 + 1);
  return (uint64_t **)sub_1885580(a1, a2);
}

uint64_t sub_18856CC(uint64_t a1)
{
  if (*(unsigned __int16 *)(a1 + 8) < 0x101u)
  {
    if (*(_WORD *)(a1 + 10))
    {
      uint64_t v2 = *(void *)(a1 + 16);
      do
      {
        uint64_t result = sub_1885788((unsigned __int8 *)(v2 + 8));
        if ((result & 1) == 0) {
          break;
        }
        v2 += 32;
      }
      while (v2 != *(void *)(a1 + 16) + 32 * *(unsigned __int16 *)(a1 + 10));
      return result;
    }
    return 1;
  }
  uint64_t v4 = *(void **)(a1 + 16);
  char v7 = (unsigned __int8 *)*v4;
  uint64_t v5 = (unsigned __int8 *)(v4 + 1);
  uint64_t v6 = v7;
  if (v7 == v5) {
    return 1;
  }
  do
  {
    uint64_t result = sub_1885788(v6 + 40);
    if (!result) {
      break;
    }
    unint64_t v8 = (unsigned __int8 *)*((void *)v6 + 1);
    if (v8)
    {
      do
      {
        unint64_t v9 = v8;
        unint64_t v8 = *(unsigned __int8 **)v8;
      }
      while (v8);
    }
    else
    {
      do
      {
        unint64_t v9 = (unsigned __int8 *)*((void *)v6 + 2);
        BOOL v10 = *(void *)v9 == (void)v6;
        uint64_t v6 = v9;
      }
      while (!v10);
    }
    uint64_t v6 = v9;
  }
  while (v9 != v5);
  return result;
}

uint64_t sub_1885788(unsigned __int8 *a1)
{
  if (dword_216FCD0[a1[8]] != 10) {
    return 1;
  }
  if (a1[9])
  {
    uint64_t v2 = *(uint64_t **)a1;
    if (*(int *)(*(void *)a1 + 8) >= 1)
    {
      uint64_t v3 = 0;
      while (1)
      {
        uint64_t v4 = *(void *)(v2[2] + 8 * v3 + 8);
        if (((*(uint64_t (**)(uint64_t))(*(void *)v4 + 48))(v4) & 1) == 0) {
          break;
        }
        ++v3;
        uint64_t v2 = *(uint64_t **)a1;
        if (v3 >= *(int *)(*(void *)a1 + 8)) {
          return 1;
        }
      }
      return 0;
    }
    return 1;
  }
  if (a1[10]) {
    return 1;
  }
  uint64_t v5 = **(void **)a1;
  if ((a1[10] & 0x10) != 0) {
    return ((*(uint64_t (**)(void))(v5 + 72))() & 1) != 0;
  }
  uint64_t result = (*(uint64_t (**)(void))(v5 + 48))();
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_18858AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, unsigned char *a6)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, unsigned __int8 *))(*(void *)a4 + 16))(a4, a3, a5);
  if (result)
  {
    unsigned int v10 = dword_216FD1C[*a5];
    *a6 = 0;
    if (a2 != 2 || !a5[1]) {
      return v10 == a2;
    }
    if (v10 > 5)
    {
      LODWORD(v11[0]) = 3;
      v11[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submod"
               "ules/protobuf-mirror/src/google/protobuf/extension_set.cc";
      int v12 = 82;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "can't reach here.", 0x11uLL);
      sub_188CF08(v11);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      return v10 == a2;
    }
    uint64_t result = 1;
    if (((1 << v10) & 0x1C) != 0) {
      return v10 == a2;
    }
    *a6 = 1;
  }
  return result;
}

void sub_18859BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned __int8 *sub_18859DC(uint64_t **a1, unint64_t a2, char *a3, uint64_t a4, uint64_t *a5, int32x2_t *a6)
{
  unsigned int v9 = a2;
  v16[0] = off_24E6A40;
  v16[1] = a4;
  uint64_t v11 = a2 >> 3;
  unsigned __int8 v15 = 0;
  if (sub_18858AC((uint64_t)a1, a2 & 7, a2 >> 3, (uint64_t)v16, v14, &v15)) {
    return sub_1885AEC(a1, v11, v15, (uint64_t)v14, a5, a3, a6);
  }
  if (*a5) {
    char v13 = (std::string *)((*a5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  else {
    char v13 = (std::string *)sub_188DBD8(a5);
  }
  char v17 = v13;
  return sub_188C558(v9, &v17, a3, a6);
}

unsigned __int8 *sub_1885AC0(unsigned int a1, std::string *a2, char *a3, int32x2_t *a4)
{
  uint64_t v5 = a2;
  return sub_188C558(a1, &v5, a3, a4);
}

unsigned __int8 *sub_1885AEC(uint64_t **a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, char *a6, int32x2_t *a7)
{
  unint64_t v8 = (unsigned __int8 *)a6;
  uint64_t v11 = a2;
  int v12 = a1;
  if (a3)
  {
    switch(*(unsigned char *)a4)
    {
      case 1:
        uint64_t v34 = sub_18839F4(a1, a2, 1, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        unint64_t v35 = (char *)v8;
        uint64_t v36 = (uint64_t)a7;
        goto LABEL_37;
      case 2:
        unsigned int v18 = sub_18839F4(a1, a2, 2, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        int v19 = (char *)v8;
        uint64_t v20 = (uint64_t)a7;
        goto LABEL_16;
      case 3:
        unint64_t v37 = sub_18839F4(a1, a2, 3, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        return sub_188EAF8((uint64_t)a7, v8, (unsigned int *)v37);
      case 4:
        unint64_t v38 = sub_18839F4(a1, a2, 4, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        return sub_188ECF0((uint64_t)a7, v8, (unsigned int *)v38);
      case 5:
        unsigned __int8 v15 = sub_18839F4(a1, a2, 5, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        return sub_188E7A8((uint64_t)a7, v8, (unsigned int *)v15);
      case 6:
        uint64_t v34 = sub_18839F4(a1, a2, 6, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        unint64_t v35 = (char *)v8;
        uint64_t v36 = (uint64_t)a7;
        goto LABEL_37;
      case 7:
        unsigned int v18 = sub_18839F4(a1, a2, 7, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        int v19 = (char *)v8;
        uint64_t v20 = (uint64_t)a7;
        goto LABEL_16;
      case 8:
        uint64_t v39 = sub_18839F4(a1, a2, 8, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        return sub_188F250((uint64_t)a7, v8, (unsigned int *)v39);
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
        v102[0] = 3;
        *(void *)&long long v103 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-int"
                           "ernal/submodules/protobuf-mirror/src/google/protobuf/extension_set_inl.h";
        DWORD2(v103) = 79;
        memset(&__p, 0, sizeof(__p));
        std::string::append(&__p, "Non-primitive types can't be packed.", 0x24uLL);
        sub_188CF08((const char **)v102);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
        goto LABEL_151;
      case 0xD:
        char v17 = sub_18839F4(a1, a2, 13, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        return sub_188E9A0((uint64_t)a7, v8, (unsigned int *)v17);
      case 0xE:
        *(void *)int v102 = sub_18839F4(a1, a2, 14, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        long long v103 = *(_OWORD *)(a4 + 8);
        __p.__r_.__value_.__r.__words[0] = (std::string::size_type)a5;
        LODWORD(__p.__r_.__value_.__r.__words[1]) = v11;
        unint64_t v8 = sub_188E0C0((uint64_t)a7, v8, (uint64_t)v102);
        goto LABEL_151;
      case 0xF:
        unsigned int v18 = sub_18839F4(a1, a2, 15, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        int v19 = (char *)v8;
        uint64_t v20 = (uint64_t)a7;
LABEL_16:
        uint64_t result = (unsigned __int8 *)sub_188C340((unsigned int *)v18, v19, v20);
        break;
      case 0x10:
        uint64_t v34 = sub_18839F4(a1, a2, 16, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        unint64_t v35 = (char *)v8;
        uint64_t v36 = (uint64_t)a7;
LABEL_37:
        uint64_t result = (unsigned __int8 *)sub_188C3D8((unsigned int *)v34, v35, v36);
        break;
      case 0x11:
        BOOL v21 = sub_18839F4(a1, a2, 17, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        uint64_t result = sub_188EE48((uint64_t)a7, v8, (unsigned int *)v21);
        break;
      case 0x12:
        std::string::size_type v40 = sub_18839F4(a1, a2, 18, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24));
        uint64_t result = sub_188F04C((uint64_t)a7, v8, (unsigned int *)v40);
        break;
      default:
        goto LABEL_151;
    }
  }
  else
  {
    switch(*(unsigned char *)a4)
    {
      case 1:
        unint64_t v8 = (unsigned __int8 *)(a6 + 8);
        double v41 = *(double *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          sub_188376C(a1, a2, 1, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24), v41);
        }
        else
        {
          char v64 = *(uint64_t **)(a4 + 24);
          uint64_t v65 = sub_1885580((uint64_t)a1, a2);
          v65[2] = v64;
          if (v66) {
            *((_WORD *)v65 + 4) = 1;
          }
          *((unsigned char *)v65 + 10) &= 0xF0u;
          *(double *)uint64_t v65 = v41;
        }
        goto LABEL_151;
      case 2:
        unint64_t v8 = (unsigned __int8 *)(a6 + 4);
        float v42 = *(float *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          sub_1883658(a1, a2, 2, *(unsigned char *)(a4 + 2), *(uint64_t **)(a4 + 24), v42);
        }
        else
        {
          long long v67 = *(uint64_t **)(a4 + 24);
          uint64_t v68 = sub_1885580((uint64_t)a1, a2);
          v68[2] = v67;
          if (v69) {
            *((_WORD *)v68 + 4) = 2;
          }
          *((unsigned char *)v68 + 10) &= 0xF0u;
          *(float *)uint64_t v68 = v42;
        }
        goto LABEL_151;
      case 3:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (!v8) {
          goto LABEL_151;
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v43 = *(unsigned char *)(a4 + 2);
          uint64_t v44 = *(void *)v102;
          char v45 = *(uint64_t **)(a4 + 24);
          a1 = v12;
          a2 = v11;
          char v46 = 3;
          goto LABEL_94;
        }
        uint64_t v51 = *(void *)v102;
        uint64_t v90 = *(uint64_t **)(a4 + 24);
        uint64_t v71 = sub_1885580((uint64_t)v12, v11);
        v71[2] = v90;
        if (!v91) {
          goto LABEL_146;
        }
        __int16 v73 = 3;
        goto LABEL_145;
      case 4:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (!v8) {
          goto LABEL_151;
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v47 = *(unsigned char *)(a4 + 2);
          uint64_t v48 = *(void *)v102;
          uint64_t v49 = *(uint64_t **)(a4 + 24);
          a1 = v12;
          a2 = v11;
          char v50 = 4;
          goto LABEL_75;
        }
        uint64_t v51 = *(void *)v102;
        int v92 = *(uint64_t **)(a4 + 24);
        uint64_t v71 = sub_1885580((uint64_t)v12, v11);
        v71[2] = v92;
        if (!v93) {
          goto LABEL_146;
        }
        __int16 v73 = 4;
        goto LABEL_145;
      case 5:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (!v8) {
          goto LABEL_151;
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v22 = *(unsigned char *)(a4 + 2);
          int v23 = v102[0];
          unint64_t v24 = *(uint64_t **)(a4 + 24);
          a1 = v12;
          a2 = v11;
          char v25 = 5;
          goto LABEL_34;
        }
        int v33 = v102[0];
        int v84 = *(uint64_t **)(a4 + 24);
        uint64_t v61 = sub_1885580((uint64_t)v12, v11);
        v61[2] = v84;
        if (!v85) {
          goto LABEL_150;
        }
        __int16 v63 = 5;
        goto LABEL_149;
      case 6:
        unint64_t v8 = (unsigned __int8 *)(a6 + 8);
        uint64_t v51 = *(void *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v47 = *(unsigned char *)(a4 + 2);
          uint64_t v49 = *(uint64_t **)(a4 + 24);
          char v50 = 6;
          uint64_t v48 = v51;
LABEL_75:
          sub_1883554(a1, a2, v50, v47, v48, v49);
          goto LABEL_151;
        }
        uint64_t v70 = *(uint64_t **)(a4 + 24);
        uint64_t v71 = sub_1885580((uint64_t)a1, a2);
        v71[2] = v70;
        if (!v72) {
          goto LABEL_146;
        }
        __int16 v73 = 6;
        goto LABEL_145;
      case 7:
        unint64_t v8 = (unsigned __int8 *)(a6 + 4);
        int v33 = *(_DWORD *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v29 = *(unsigned char *)(a4 + 2);
          unint64_t v31 = *(uint64_t **)(a4 + 24);
          char v32 = 7;
          int v30 = v33;
          goto LABEL_78;
        }
        uint64_t v74 = *(uint64_t **)(a4 + 24);
        uint64_t v61 = sub_1885580((uint64_t)a1, a2);
        v61[2] = v74;
        if (!v75) {
          goto LABEL_150;
        }
        __int16 v63 = 7;
        goto LABEL_149;
      case 8:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (v8)
        {
          if (*(unsigned char *)(a4 + 1))
          {
            sub_18838C0(v12, v11, 8, *(unsigned char *)(a4 + 2), *(void *)v102 != 0, *(uint64_t **)(a4 + 24));
          }
          else
          {
            uint64_t v94 = *(void *)v102;
            uint64_t v95 = *(uint64_t **)(a4 + 24);
            int v96 = sub_1885580((uint64_t)v12, v11);
            v96[2] = v95;
            if (v97) {
              *((_WORD *)v96 + 4) = 8;
            }
            *((unsigned char *)v96 + 10) &= 0xF0u;
            *(unsigned char *)int v96 = v94 != 0;
          }
        }
        goto LABEL_151;
      case 9:
      case 0xC:
        char v13 = *(uint64_t **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          long long v14 = (std::string *)sub_1883DD4(a1, a2, 9, v13);
        }
        else {
          long long v14 = (std::string *)sub_1883D14(a1, a2, 9, v13);
        }
        char v55 = v14;
        int v56 = *v8;
        if ((char)*v8 < 0)
        {
          uint64_t v58 = sub_188C1C4((uint64_t)v8, *v8);
          if (!v58)
          {
LABEL_124:
            unint64_t v8 = 0;
            goto LABEL_151;
          }
          unint64_t v57 = (std::string::value_type *)v58;
          int v56 = v59;
        }
        else
        {
          unint64_t v57 = (std::string::value_type *)(v8 + 1);
        }
        return (unsigned __int8 *)sub_1882098((uint64_t)a7, v57, v56, v55);
      case 0xA:
        uint64_t v52 = *(void *)(a4 + 8);
        uint64_t v53 = *(uint64_t **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          uint64_t v54 = sub_1884274(a1, a2, 10, v52, v53);
        }
        else {
          uint64_t v54 = sub_1883FB0(a1, a2, 10, v52, v53);
        }
        int v76 = a7[11].i32[0];
        BOOL v77 = __OFSUB__(v76--, 1);
        a7[11].i32[0] = v76;
        if (v76 < 0 != v77) {
          goto LABEL_124;
        }
        ++a7[11].i32[1];
        uint64_t v78 = (*(uint64_t (**)(uint64_t, unsigned __int8 *, int32x2_t *))(*(void *)v54 + 88))(v54, v8, a7);
        a7[11] = vadd_s32(a7[11], (int32x2_t)0xFFFFFFFF00000001);
        __int32 v79 = a7[10].i32[0];
        a7[10].i32[0] = 0;
        if (v79 == ((8 * v11) | 3)) {
          unint64_t v8 = (unsigned __int8 *)v78;
        }
        else {
          unint64_t v8 = 0;
        }
        goto LABEL_151;
      case 0xB:
        uint64_t v26 = *(void *)(a4 + 8);
        uint64_t v27 = *(uint64_t **)(a4 + 24);
        if (*(unsigned char *)(a4 + 1)) {
          uint64_t v28 = sub_1884274(a1, a2, 11, v26, v27);
        }
        else {
          uint64_t v28 = sub_1883FB0(a1, a2, 11, v26, v27);
        }
        return (unsigned __int8 *)sub_188BF6C((uint64_t)a7, v28, v8);
      case 0xD:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (!v8) {
          goto LABEL_151;
        }
        if (*(unsigned char *)(a4 + 1))
        {
          char v29 = *(unsigned char *)(a4 + 2);
          int v30 = v102[0];
          unint64_t v31 = *(uint64_t **)(a4 + 24);
          a1 = v12;
          a2 = v11;
          char v32 = 13;
LABEL_78:
          sub_18833D8(a1, a2, v32, v29, v30, v31);
          goto LABEL_151;
        }
        int v33 = v102[0];
        uint64_t v86 = *(uint64_t **)(a4 + 24);
        uint64_t v61 = sub_1885580((uint64_t)v12, v11);
        v61[2] = v86;
        if (!v87) {
          goto LABEL_150;
        }
        __int16 v63 = 13;
        goto LABEL_149;
      case 0xE:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (!v8) {
          goto LABEL_151;
        }
        int v33 = v102[0];
        if (((*(uint64_t (**)(void, void))(a4 + 8))(*(void *)(a4 + 16), v102[0]) & 1) == 0)
        {
          unint64_t v82 = *(void *)v102;
          if (*a5) {
            uint64_t v83 = (std::string *)((*a5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v83 = (std::string *)sub_188DBD8(a5);
          }
          sub_188C020(v11, v82, v83);
          goto LABEL_151;
        }
        if (*(unsigned char *)(a4 + 1))
        {
          sub_1883120(v12, v11, 14, *(unsigned char *)(a4 + 2), v33, *(uint64_t **)(a4 + 24));
          goto LABEL_151;
        }
        uint64_t v100 = *(uint64_t **)(a4 + 24);
        uint64_t v61 = sub_1885580((uint64_t)v12, v11);
        v61[2] = v100;
        if (v101)
        {
          __int16 v63 = 14;
          goto LABEL_149;
        }
        goto LABEL_150;
      case 0xF:
        unint64_t v8 = (unsigned __int8 *)(a6 + 4);
        int v33 = *(_DWORD *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v22 = *(unsigned char *)(a4 + 2);
          unint64_t v24 = *(uint64_t **)(a4 + 24);
          char v25 = 15;
          goto LABEL_33;
        }
        unint64_t v60 = *(uint64_t **)(a4 + 24);
        uint64_t v61 = sub_1885580((uint64_t)a1, a2);
        v61[2] = v60;
        if (!v62) {
          goto LABEL_150;
        }
        __int16 v63 = 15;
        goto LABEL_149;
      case 0x10:
        unint64_t v8 = (unsigned __int8 *)(a6 + 8);
        uint64_t v51 = *(void *)a6;
        if (*(unsigned char *)(a4 + 1))
        {
          char v43 = *(unsigned char *)(a4 + 2);
          char v45 = *(uint64_t **)(a4 + 24);
          char v46 = 16;
          goto LABEL_93;
        }
        int v80 = *(uint64_t **)(a4 + 24);
        uint64_t v71 = sub_1885580((uint64_t)a1, a2);
        v71[2] = v80;
        if (!v81) {
          goto LABEL_146;
        }
        __int16 v73 = 16;
        goto LABEL_145;
      case 0x11:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (!v8) {
          goto LABEL_151;
        }
        int v33 = -(v102[0] & 1) ^ (v102[0] >> 1);
        if (*(unsigned char *)(a4 + 1))
        {
          char v22 = *(unsigned char *)(a4 + 2);
          unint64_t v24 = *(uint64_t **)(a4 + 24);
          a1 = v12;
          a2 = v11;
          char v25 = 17;
LABEL_33:
          int v23 = v33;
LABEL_34:
          sub_1883120(a1, a2, v25, v22, v23, v24);
        }
        else
        {
          uint64_t v88 = *(uint64_t **)(a4 + 24);
          uint64_t v61 = sub_1885580((uint64_t)v12, v11);
          v61[2] = v88;
          if (v89)
          {
            __int16 v63 = 17;
LABEL_149:
            *((_WORD *)v61 + 4) = v63;
          }
LABEL_150:
          *((unsigned char *)v61 + 10) &= 0xF0u;
          *(_DWORD *)uint64_t v61 = v33;
        }
        goto LABEL_151;
      case 0x12:
        *(void *)int v102 = 0;
        unint64_t v8 = sub_188D8D8(a6, v102);
        if (!v8) {
          goto LABEL_151;
        }
        uint64_t v51 = -(uint64_t)(v102[0] & 1) ^ (*(void *)v102 >> 1);
        if (*(unsigned char *)(a4 + 1))
        {
          char v43 = *(unsigned char *)(a4 + 2);
          char v45 = *(uint64_t **)(a4 + 24);
          a1 = v12;
          a2 = v11;
          char v46 = 18;
LABEL_93:
          uint64_t v44 = v51;
LABEL_94:
          sub_188325C(a1, a2, v46, v43, v44, v45);
        }
        else
        {
          uint64_t v98 = *(uint64_t **)(a4 + 24);
          uint64_t v71 = sub_1885580((uint64_t)v12, v11);
          v71[2] = v98;
          if (v99)
          {
            __int16 v73 = 18;
LABEL_145:
            *((_WORD *)v71 + 4) = v73;
          }
LABEL_146:
          *((unsigned char *)v71 + 10) &= 0xF0u;
          *uint64_t v71 = (uint64_t *)v51;
        }
LABEL_151:
        uint64_t result = v8;
        break;
      default:
        goto LABEL_151;
    }
  }
  return result;
}

void sub_1886790(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1886844(uint64_t a1, int a2, signed int a3, char *a4, _DWORD *a5)
{
  char v7 = *(signed int **)(a1 + 16);
  if (*(unsigned __int16 *)(a1 + 8) >= 0x101u)
  {
    uint64_t v17 = *((void *)v7 + 1);
    uint64_t v16 = v7 + 2;
    uint64_t v15 = v17;
    if (v17)
    {
      unsigned int v18 = v16;
      do
      {
        int v19 = *(_DWORD *)(v15 + 32);
        BOOL v20 = v19 < a2;
        if (v19 >= a2) {
          BOOL v21 = (uint64_t *)v15;
        }
        else {
          BOOL v21 = (uint64_t *)(v15 + 8);
        }
        if (!v20) {
          unsigned int v18 = (void *)v15;
        }
        uint64_t v15 = *v21;
      }
      while (*v21);
      if (v18 != v16)
      {
        do
        {
          signed int v22 = *((_DWORD *)v18 + 8);
          if (v22 >= a3) {
            break;
          }
          a4 = sub_1886974((unsigned char *)v18 + 40, v22, a4, a5);
          int v23 = (void *)v18[1];
          if (v23)
          {
            do
            {
              unint64_t v24 = v23;
              int v23 = (void *)*v23;
            }
            while (v23);
          }
          else
          {
            do
            {
              unint64_t v24 = (void *)v18[2];
              BOOL v25 = *v24 == (void)v18;
              unsigned int v18 = v24;
            }
            while (!v25);
          }
          unsigned int v18 = v24;
        }
        while (v24 != v16);
      }
    }
  }
  else
  {
    unint64_t v8 = *(unsigned __int16 *)(a1 + 10);
    if (*(_WORD *)(a1 + 10))
    {
      unsigned int v9 = &v7[8 * v8];
      do
      {
        unint64_t v10 = v8 >> 1;
        uint64_t v11 = &v7[8 * (v8 >> 1)];
        int v13 = *v11;
        int v12 = v11 + 8;
        v8 += ~(v8 >> 1);
        if (v13 < a2) {
          char v7 = v12;
        }
        else {
          unint64_t v8 = v10;
        }
      }
      while (v8);
      while (v7 != v9 && *v7 < a3)
      {
        a4 = sub_1886974((unsigned char *)v7 + 8, *v7, a4, a5);
        v7 += 8;
      }
    }
  }
  return a4;
}

char *sub_1886974(unsigned char *a1, unsigned int a2, char *a3, _DWORD *a4)
{
  uint64_t v5 = a3;
  if (a1[9])
  {
    if (a1[11])
    {
      if (*((_DWORD *)a1 + 3))
      {
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        unsigned int v8 = (8 * a2) | 2;
        *uint64_t v5 = (8 * a2) | 2;
        if (v8 > 0x7F)
        {
          *uint64_t v5 = (8 * a2) | 0x82;
          unsigned int v25 = (8 * a2) >> 7;
          v5[1] = v25;
          unsigned int v9 = v5 + 2;
          if (v8 >= 0x4000)
          {
            do
            {
              *(v9 - 1) |= 0x80u;
              unsigned int v26 = v25 >> 14;
              v25 >>= 7;
              *v9++ = v25;
            }
            while (v26);
          }
        }
        else
        {
          unsigned int v9 = v5 + 1;
        }
        unint64_t v27 = *((int *)a1 + 3);
        *unsigned int v9 = v27;
        if (v27 > 0x7F)
        {
          *unsigned int v9 = v27 | 0x80;
          unint64_t v28 = v27 >> 7;
          v9[1] = v27 >> 7;
          uint64_t v5 = v9 + 2;
          if (v27 >= 0x4000)
          {
            do
            {
              *(v5 - 1) |= 0x80u;
              unint64_t v29 = v28 >> 14;
              v28 >>= 7;
              *v5++ = v28;
            }
            while (v29);
          }
        }
        else
        {
          uint64_t v5 = v9 + 1;
        }
        switch(a1[8])
        {
          case 1:
            uint64_t v48 = *(int **)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v49 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v48 = *(int **)a1;
                }
                *(void *)uint64_t v5 = *(void *)(*((void *)v48 + 1) + 8 * v49);
                v5 += 8;
                ++v49;
                uint64_t v48 = *(int **)a1;
              }
              while (v49 < **(int **)a1);
            }
            break;
          case 2:
            uint64_t v50 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v51 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v50 = *(void *)a1;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*(void *)(v50 + 8) + 4 * v51);
                v5 += 4;
                ++v51;
                uint64_t v50 = *(void *)a1;
              }
              while (v51 < **(int **)a1);
            }
            break;
          case 3:
            uint64_t v52 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v53 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v52 = *(void *)a1;
                }
                unint64_t v54 = *(void *)(*(void *)(v52 + 8) + 8 * v53);
                *uint64_t v5 = v54;
                if (v54 > 0x7F)
                {
                  *uint64_t v5 = v54 | 0x80;
                  unint64_t v55 = v54 >> 7;
                  v5[1] = v54 >> 7;
                  v5 += 2;
                  if (v54 >= 0x4000)
                  {
                    do
                    {
                      *(v5 - 1) |= 0x80u;
                      unint64_t v56 = v55 >> 14;
                      v55 >>= 7;
                      *v5++ = v55;
                    }
                    while (v56);
                  }
                }
                else
                {
                  ++v5;
                }
                ++v53;
                uint64_t v52 = *(void *)a1;
              }
              while (v53 < **(int **)a1);
            }
            break;
          case 4:
            uint64_t v57 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v58 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v57 = *(void *)a1;
                }
                unint64_t v59 = *(void *)(*(void *)(v57 + 8) + 8 * v58);
                *uint64_t v5 = v59;
                if (v59 > 0x7F)
                {
                  *uint64_t v5 = v59 | 0x80;
                  unint64_t v60 = v59 >> 7;
                  v5[1] = v59 >> 7;
                  v5 += 2;
                  if (v59 >= 0x4000)
                  {
                    do
                    {
                      *(v5 - 1) |= 0x80u;
                      unint64_t v61 = v60 >> 14;
                      v60 >>= 7;
                      *v5++ = v60;
                    }
                    while (v61);
                  }
                }
                else
                {
                  ++v5;
                }
                ++v58;
                uint64_t v57 = *(void *)a1;
              }
              while (v58 < **(int **)a1);
            }
            break;
          case 5:
            uint64_t v30 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v31 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v30 = *(void *)a1;
                }
                unint64_t v32 = *(int *)(*(void *)(v30 + 8) + 4 * v31);
                *uint64_t v5 = v32;
                if (v32 > 0x7F)
                {
                  *uint64_t v5 = v32 | 0x80;
                  unint64_t v33 = v32 >> 7;
                  v5[1] = v32 >> 7;
                  v5 += 2;
                  if (v32 >= 0x4000)
                  {
                    do
                    {
                      *(v5 - 1) |= 0x80u;
                      unint64_t v34 = v33 >> 14;
                      v33 >>= 7;
                      *v5++ = v33;
                    }
                    while (v34);
                  }
                }
                else
                {
                  ++v5;
                }
                ++v31;
                uint64_t v30 = *(void *)a1;
              }
              while (v31 < **(int **)a1);
            }
            break;
          case 6:
            uint64_t v62 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v63 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v62 = *(void *)a1;
                }
                *(void *)uint64_t v5 = *(void *)(*(void *)(v62 + 8) + 8 * v63);
                v5 += 8;
                ++v63;
                uint64_t v62 = *(void *)a1;
              }
              while (v63 < **(int **)a1);
            }
            break;
          case 7:
            uint64_t v64 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v65 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v64 = *(void *)a1;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*(void *)(v64 + 8) + 4 * v65);
                v5 += 4;
                ++v65;
                uint64_t v64 = *(void *)a1;
              }
              while (v65 < **(int **)a1);
            }
            break;
          case 8:
            uint64_t v66 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v67 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v66 = *(void *)a1;
                }
                *v5++ = *(unsigned char *)(*(void *)(v66 + 8) + v67++);
                uint64_t v66 = *(void *)a1;
              }
              while (v67 < **(int **)a1);
            }
            break;
          case 9:
          case 0xA:
          case 0xB:
          case 0xC:
            LODWORD(v386[0]) = 3;
            v386[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal"
                      "/submodules/protobuf-mirror/src/google/protobuf/extension_set.cc";
            int v387 = 1982;
            memset(&__p, 0, sizeof(__p));
            std::string::append(&__p, "Non-primitive types can't be packed.", 0x24uLL);
            sub_188CF08(v386);
            if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(__p.__r_.__value_.__l.__data_);
            }
            break;
          case 0xD:
            uint64_t v35 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v36 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v35 = *(void *)a1;
                }
                unsigned int v37 = *(_DWORD *)(*(void *)(v35 + 8) + 4 * v36);
                *uint64_t v5 = v37;
                if (v37 > 0x7F)
                {
                  *uint64_t v5 = v37 | 0x80;
                  unsigned int v38 = v37 >> 7;
                  v5[1] = v37 >> 7;
                  v5 += 2;
                  if (v37 >= 0x4000)
                  {
                    do
                    {
                      *(v5 - 1) |= 0x80u;
                      unsigned int v39 = v38 >> 14;
                      v38 >>= 7;
                      *v5++ = v38;
                    }
                    while (v39);
                  }
                }
                else
                {
                  ++v5;
                }
                ++v36;
                uint64_t v35 = *(void *)a1;
              }
              while (v36 < **(int **)a1);
            }
            break;
          case 0xE:
            uint64_t v68 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v69 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v68 = *(void *)a1;
                }
                unint64_t v70 = *(int *)(*(void *)(v68 + 8) + 4 * v69);
                *uint64_t v5 = v70;
                if (v70 > 0x7F)
                {
                  *uint64_t v5 = v70 | 0x80;
                  unint64_t v71 = v70 >> 7;
                  v5[1] = v70 >> 7;
                  v5 += 2;
                  if (v70 >= 0x4000)
                  {
                    do
                    {
                      *(v5 - 1) |= 0x80u;
                      unint64_t v72 = v71 >> 14;
                      v71 >>= 7;
                      *v5++ = v71;
                    }
                    while (v72);
                  }
                }
                else
                {
                  ++v5;
                }
                ++v69;
                uint64_t v68 = *(void *)a1;
              }
              while (v69 < **(int **)a1);
            }
            break;
          case 0xF:
            uint64_t v40 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v41 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v40 = *(void *)a1;
                }
                *(_DWORD *)uint64_t v5 = *(_DWORD *)(*(void *)(v40 + 8) + 4 * v41);
                v5 += 4;
                ++v41;
                uint64_t v40 = *(void *)a1;
              }
              while (v41 < **(int **)a1);
            }
            break;
          case 0x10:
            uint64_t v73 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v74 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v73 = *(void *)a1;
                }
                *(void *)uint64_t v5 = *(void *)(*(void *)(v73 + 8) + 8 * v74);
                v5 += 8;
                ++v74;
                uint64_t v73 = *(void *)a1;
              }
              while (v74 < **(int **)a1);
            }
            break;
          case 0x11:
            uint64_t v42 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v43 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v42 = *(void *)a1;
                }
                int v44 = *(_DWORD *)(*(void *)(v42 + 8) + 4 * v43);
                unsigned int v45 = (2 * v44) ^ (v44 >> 31);
                *uint64_t v5 = (2 * v44) ^ (v44 >> 31);
                if (v45 > 0x7F)
                {
                  *uint64_t v5 = v45 | 0x80;
                  unsigned int v46 = v45 >> 7;
                  v5[1] = v45 >> 7;
                  v5 += 2;
                  if (v45 >= 0x4000)
                  {
                    do
                    {
                      *(v5 - 1) |= 0x80u;
                      unsigned int v47 = v46 >> 14;
                      v46 >>= 7;
                      *v5++ = v46;
                    }
                    while (v47);
                  }
                }
                else
                {
                  ++v5;
                }
                ++v43;
                uint64_t v42 = *(void *)a1;
              }
              while (v43 < **(int **)a1);
            }
            break;
          case 0x12:
            uint64_t v75 = *(void *)a1;
            if (**(int **)a1 >= 1)
            {
              uint64_t v76 = 0;
              do
              {
                if (*(void *)a4 <= (unint64_t)v5)
                {
                  uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
                  uint64_t v75 = *(void *)a1;
                }
                uint64_t v77 = *(void *)(*(void *)(v75 + 8) + 8 * v76);
                unint64_t v78 = (2 * v77) ^ (v77 >> 63);
                *uint64_t v5 = v78;
                if (v78 > 0x7F)
                {
                  *uint64_t v5 = v78 | 0x80;
                  unint64_t v79 = v78 >> 7;
                  v5[1] = v78 >> 7;
                  v5 += 2;
                  if (v78 >= 0x4000)
                  {
                    do
                    {
                      *(v5 - 1) |= 0x80u;
                      unint64_t v80 = v79 >> 14;
                      v79 >>= 7;
                      *v5++ = v79;
                    }
                    while (v80);
                  }
                }
                else
                {
                  ++v5;
                }
                ++v76;
                uint64_t v75 = *(void *)a1;
              }
              while (v76 < **(int **)a1);
            }
            break;
          default:
            return v5;
        }
      }
      return v5;
    }
    switch(a1[8])
    {
      case 1:
        uint64_t v15 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v16 = 0;
          unsigned int v17 = (8 * a2) | 1;
          char v18 = (8 * a2) | 0x81;
          int v19 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v20 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v15 = *(void *)a1;
            }
            uint64_t v21 = *(void *)(*(void *)(v15 + 8) + 8 * v16);
            *uint64_t v5 = v17;
            if (v17 > 0x7F)
            {
              *uint64_t v5 = v18;
              v5[1] = v20;
              signed int v22 = v5 + 2;
              if (v17 >= 0x4000)
              {
                unsigned int v23 = v19;
                do
                {
                  *((unsigned char *)v22 - 1) |= 0x80u;
                  unsigned int v24 = v23 >> 14;
                  v23 >>= 7;
                  *(unsigned char *)signed int v22 = v23;
                  signed int v22 = (void *)((char *)v22 + 1);
                }
                while (v24);
              }
            }
            else
            {
              signed int v22 = v5 + 1;
            }
            void *v22 = v21;
            uint64_t v5 = (char *)(v22 + 1);
            ++v16;
            uint64_t v15 = *(void *)a1;
          }
          while (v16 < **(int **)a1);
        }
        return v5;
      case 2:
        uint64_t v81 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v82 = 0;
          unsigned int v83 = (8 * a2) | 5;
          int v84 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v85 = (8 * a2) >> 7;
          char v86 = (8 * a2) | 0x85;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v81 = *(void *)a1;
            }
            int v87 = *(_DWORD *)(*(void *)(v81 + 8) + 4 * v82);
            *uint64_t v5 = v83;
            if (v83 > 0x7F)
            {
              *uint64_t v5 = v86;
              v5[1] = v85;
              uint64_t v88 = v5 + 2;
              if (v83 >= 0x4000)
              {
                unsigned int v89 = v84;
                do
                {
                  *((unsigned char *)v88 - 1) |= 0x80u;
                  unsigned int v90 = v89 >> 14;
                  v89 >>= 7;
                  *(unsigned char *)uint64_t v88 = v89;
                  uint64_t v88 = (_DWORD *)((char *)v88 + 1);
                }
                while (v90);
              }
            }
            else
            {
              uint64_t v88 = v5 + 1;
            }
            *uint64_t v88 = v87;
            uint64_t v5 = (char *)(v88 + 1);
            ++v82;
            uint64_t v81 = *(void *)a1;
          }
          while (v82 < **(int **)a1);
        }
        return v5;
      case 3:
        uint64_t v91 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v92 = 0;
          unsigned int v93 = 8 * a2;
          char v94 = (8 * a2) | 0x80;
          int v95 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v91 = *(void *)a1;
            }
            unint64_t v96 = *(void *)(*(void *)(v91 + 8) + 8 * v92);
            *uint64_t v5 = v93;
            if (v93 > 0x7F)
            {
              *uint64_t v5 = v94;
              v5[1] = v93 >> 7;
              char v97 = v5 + 2;
              if (v93 >= 0x4000)
              {
                unsigned int v98 = v95;
                do
                {
                  *(v97 - 1) |= 0x80u;
                  unsigned int v99 = v98 >> 14;
                  v98 >>= 7;
                  *v97++ = v98;
                }
                while (v99);
              }
            }
            else
            {
              char v97 = v5 + 1;
            }
            *char v97 = v96;
            if (v96 > 0x7F)
            {
              *char v97 = v96 | 0x80;
              unint64_t v100 = v96 >> 7;
              v97[1] = v96 >> 7;
              uint64_t v5 = v97 + 2;
              if (v96 >= 0x4000)
              {
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unint64_t v101 = v100 >> 14;
                  v100 >>= 7;
                  *v5++ = v100;
                }
                while (v101);
              }
            }
            else
            {
              uint64_t v5 = v97 + 1;
            }
            ++v92;
            uint64_t v91 = *(void *)a1;
          }
          while (v92 < **(int **)a1);
        }
        return v5;
      case 4:
        uint64_t v102 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v103 = 0;
          unsigned int v104 = 8 * a2;
          char v105 = (8 * a2) | 0x80;
          int v106 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v102 = *(void *)a1;
            }
            unint64_t v107 = *(void *)(*(void *)(v102 + 8) + 8 * v103);
            *uint64_t v5 = v104;
            if (v104 > 0x7F)
            {
              *uint64_t v5 = v105;
              v5[1] = v104 >> 7;
              uint64_t v108 = v5 + 2;
              if (v104 >= 0x4000)
              {
                unsigned int v109 = v106;
                do
                {
                  *(v108 - 1) |= 0x80u;
                  unsigned int v110 = v109 >> 14;
                  v109 >>= 7;
                  *v108++ = v109;
                }
                while (v110);
              }
            }
            else
            {
              uint64_t v108 = v5 + 1;
            }
            unsigned char *v108 = v107;
            if (v107 > 0x7F)
            {
              unsigned char *v108 = v107 | 0x80;
              unint64_t v111 = v107 >> 7;
              v108[1] = v107 >> 7;
              uint64_t v5 = v108 + 2;
              if (v107 >= 0x4000)
              {
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unint64_t v112 = v111 >> 14;
                  v111 >>= 7;
                  *v5++ = v111;
                }
                while (v112);
              }
            }
            else
            {
              uint64_t v5 = v108 + 1;
            }
            ++v103;
            uint64_t v102 = *(void *)a1;
          }
          while (v103 < **(int **)a1);
        }
        return v5;
      case 5:
        uint64_t v113 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v114 = 0;
          unsigned int v115 = 8 * a2;
          char v116 = (8 * a2) | 0x80;
          int v117 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v113 = *(void *)a1;
            }
            unint64_t v118 = *(int *)(*(void *)(v113 + 8) + 4 * v114);
            *uint64_t v5 = v115;
            if (v115 > 0x7F)
            {
              *uint64_t v5 = v116;
              v5[1] = v115 >> 7;
              unint64_t v119 = v5 + 2;
              if (v115 >= 0x4000)
              {
                unsigned int v120 = v117;
                do
                {
                  *(v119 - 1) |= 0x80u;
                  unsigned int v121 = v120 >> 14;
                  v120 >>= 7;
                  *v119++ = v120;
                }
                while (v121);
              }
            }
            else
            {
              unint64_t v119 = v5 + 1;
            }
            *unint64_t v119 = v118;
            if (v118 > 0x7F)
            {
              *unint64_t v119 = v118 | 0x80;
              unint64_t v122 = v118 >> 7;
              v119[1] = v118 >> 7;
              uint64_t v5 = v119 + 2;
              if (v118 >= 0x4000)
              {
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unint64_t v123 = v122 >> 14;
                  v122 >>= 7;
                  *v5++ = v122;
                }
                while (v123);
              }
            }
            else
            {
              uint64_t v5 = v119 + 1;
            }
            ++v114;
            uint64_t v113 = *(void *)a1;
          }
          while (v114 < **(int **)a1);
        }
        return v5;
      case 6:
        uint64_t v124 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v125 = 0;
          unsigned int v126 = (8 * a2) | 1;
          char v127 = (8 * a2) | 0x81;
          int v128 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v129 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v124 = *(void *)a1;
            }
            uint64_t v130 = *(void *)(*(void *)(v124 + 8) + 8 * v125);
            *uint64_t v5 = v126;
            if (v126 > 0x7F)
            {
              *uint64_t v5 = v127;
              v5[1] = v129;
              uint64_t v131 = v5 + 2;
              if (v126 >= 0x4000)
              {
                unsigned int v132 = v128;
                do
                {
                  *((unsigned char *)v131 - 1) |= 0x80u;
                  unsigned int v133 = v132 >> 14;
                  v132 >>= 7;
                  *(unsigned char *)uint64_t v131 = v132;
                  uint64_t v131 = (void *)((char *)v131 + 1);
                }
                while (v133);
              }
            }
            else
            {
              uint64_t v131 = v5 + 1;
            }
            *uint64_t v131 = v130;
            uint64_t v5 = (char *)(v131 + 1);
            ++v125;
            uint64_t v124 = *(void *)a1;
          }
          while (v125 < **(int **)a1);
        }
        return v5;
      case 7:
        uint64_t v134 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v135 = 0;
          unsigned int v136 = (8 * a2) | 5;
          int v137 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v138 = (8 * a2) >> 7;
          char v139 = (8 * a2) | 0x85;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v134 = *(void *)a1;
            }
            int v140 = *(_DWORD *)(*(void *)(v134 + 8) + 4 * v135);
            *uint64_t v5 = v136;
            if (v136 > 0x7F)
            {
              *uint64_t v5 = v139;
              v5[1] = v138;
              uint64_t v141 = v5 + 2;
              if (v136 >= 0x4000)
              {
                unsigned int v142 = v137;
                do
                {
                  *((unsigned char *)v141 - 1) |= 0x80u;
                  unsigned int v143 = v142 >> 14;
                  v142 >>= 7;
                  *(unsigned char *)uint64_t v141 = v142;
                  uint64_t v141 = (_DWORD *)((char *)v141 + 1);
                }
                while (v143);
              }
            }
            else
            {
              uint64_t v141 = v5 + 1;
            }
            _DWORD *v141 = v140;
            uint64_t v5 = (char *)(v141 + 1);
            ++v135;
            uint64_t v134 = *(void *)a1;
          }
          while (v135 < **(int **)a1);
        }
        return v5;
      case 8:
        uint64_t v144 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v145 = 0;
          unsigned int v146 = 8 * a2;
          char v147 = (8 * a2) | 0x80;
          int v148 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v149 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v144 = *(void *)a1;
            }
            char v150 = *(unsigned char *)(*(void *)(v144 + 8) + v145);
            *uint64_t v5 = v146;
            if (v146 > 0x7F)
            {
              *uint64_t v5 = v147;
              v5[1] = v149;
              v151 = v5 + 2;
              if (v146 >= 0x4000)
              {
                unsigned int v152 = v148;
                do
                {
                  *(v151 - 1) |= 0x80u;
                  unsigned int v153 = v152 >> 14;
                  v152 >>= 7;
                  *v151++ = v152;
                }
                while (v153);
              }
            }
            else
            {
              v151 = v5 + 1;
            }
            unsigned char *v151 = v150;
            uint64_t v5 = v151 + 1;
            ++v145;
            uint64_t v144 = *(void *)a1;
          }
          while (v145 < **(int **)a1);
        }
        return v5;
      case 9:
        uint64_t v154 = *(void *)a1;
        if (*(int *)(*(void *)a1 + 8) < 1) {
          return v5;
        }
        uint64_t v155 = 0;
        unsigned int v156 = 8 * a2;
        uint64_t v157 = 4;
        if (((a2 >> 25) & 0xF) != 0) {
          uint64_t v157 = 5;
        }
        unsigned int v158 = (8 * a2) | 2;
        char v159 = (8 * a2) | 0x82;
        uint64_t v160 = 1;
        if (v156 >= 0x80) {
          uint64_t v160 = 2;
        }
        if (v156 < 0x200000) {
          uint64_t v157 = 3;
        }
        int v384 = (a2 >> 4) & 0x1FFFFFF;
        if (v156 >= 0x4000) {
          uint64_t v161 = v157;
        }
        else {
          uint64_t v161 = v160;
        }
        unsigned int v162 = v156 >> 7;
        while (1)
        {
          if (*(void *)a4 <= (unint64_t)v5)
          {
            uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
            uint64_t v154 = *(void *)a1;
          }
          v163 = *(void **)(*(void *)(v154 + 16) + 8 * v155 + 8);
          if (*((char *)v163 + 23) < 0)
          {
            int64_t v164 = v163[1];
            if (v164 > 127) {
              goto LABEL_265;
            }
          }
          else
          {
            int64_t v164 = *((unsigned __int8 *)v163 + 23);
          }
          if ((uint64_t)(*(void *)a4 + ~(unint64_t)&v5[v161] + 16) >= v164)
          {
            *uint64_t v5 = v158;
            if (v158 > 0x7F)
            {
              *uint64_t v5 = v159;
              v5[1] = v162;
              uint64_t v165 = v5 + 2;
              if (v158 >= 0x4000)
              {
                unsigned int v166 = v384;
                do
                {
                  *(v165 - 1) |= 0x80u;
                  unsigned int v167 = v166 >> 14;
                  v166 >>= 7;
                  *v165++ = v166;
                }
                while (v167);
              }
            }
            else
            {
              uint64_t v165 = v5 + 1;
            }
            *uint64_t v165 = v164;
            v168 = v165 + 1;
            if (*((char *)v163 + 23) < 0) {
              v163 = (void *)*v163;
            }
            memcpy(v168, v163, v164);
            uint64_t v5 = &v168[v164];
            goto LABEL_263;
          }
LABEL_265:
          uint64_t v5 = (char *)sub_188A868(a4, a2, (uint64_t)v163, v5);
LABEL_263:
          ++v155;
          uint64_t v154 = *(void *)a1;
          if (v155 >= *(int *)(*(void *)a1 + 8)) {
            return v5;
          }
        }
      case 0xA:
        uint64_t v169 = *(void *)a1;
        if (*(int *)(*(void *)a1 + 8) >= 1)
        {
          uint64_t v170 = 0;
          unsigned int v171 = (8 * a2) | 3;
          char v172 = (8 * a2) | 0x83;
          int v173 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v174 = (8 * a2) | 4;
          unsigned int v175 = (8 * a2) >> 7;
          char v176 = (8 * a2) | 0x84;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v169 = *(void *)a1;
            }
            uint64_t v177 = *(void *)(*(void *)(v169 + 16) + 8 * v170 + 8);
            *uint64_t v5 = v171;
            if (v171 > 0x7F)
            {
              *uint64_t v5 = v172;
              v5[1] = v175;
              v178 = v5 + 2;
              if (v171 >= 0x4000)
              {
                unsigned int v179 = v173;
                do
                {
                  *(v178 - 1) |= 0x80u;
                  unsigned int v180 = v179 >> 14;
                  v179 >>= 7;
                  *v178++ = v179;
                }
                while (v180);
              }
            }
            else
            {
              v178 = v5 + 1;
            }
            v181 = (unsigned char *)(*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(*(void *)v177 + 96))(v177, v178, a4);
            if (*(void *)a4 <= (unint64_t)v181) {
              v181 = sub_188A3FC((uint64_t)a4, (int)v181);
            }
            unsigned char *v181 = v174;
            if (v174 > 0x7F)
            {
              unsigned char *v181 = v176;
              v181[1] = v175;
              uint64_t v5 = v181 + 2;
              if (v174 >= 0x4000)
              {
                unsigned int v182 = v173;
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unsigned int v183 = v182 >> 14;
                  v182 >>= 7;
                  *v5++ = v182;
                }
                while (v183);
              }
            }
            else
            {
              uint64_t v5 = v181 + 1;
            }
            ++v170;
            uint64_t v169 = *(void *)a1;
          }
          while (v170 < *(int *)(*(void *)a1 + 8));
        }
        return v5;
      case 0xB:
        uint64_t v184 = *(void *)a1;
        if (*(int *)(*(void *)a1 + 8) >= 1)
        {
          uint64_t v185 = 0;
          unsigned int v186 = (8 * a2) | 2;
          int v187 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v188 = (8 * a2) >> 7;
          char v189 = (8 * a2) | 0x82;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v184 = *(void *)a1;
            }
            uint64_t v190 = *(void *)(*(void *)(v184 + 16) + 8 * v185 + 8);
            *uint64_t v5 = v186;
            if (v186 > 0x7F)
            {
              *uint64_t v5 = v189;
              v5[1] = v188;
              v191 = v5 + 2;
              if (v186 >= 0x4000)
              {
                unsigned int v192 = v187;
                do
                {
                  *(v191 - 1) |= 0x80u;
                  unsigned int v193 = v192 >> 14;
                  v192 >>= 7;
                  *v191++ = v192;
                }
                while (v193);
              }
            }
            else
            {
              v191 = v5 + 1;
            }
            unsigned int v194 = (*(uint64_t (**)(uint64_t))(*(void *)v190 + 80))(v190);
            unsigned char *v191 = v194;
            if (v194 > 0x7F)
            {
              unsigned char *v191 = v194 | 0x80;
              unsigned int v196 = v194 >> 7;
              v191[1] = v194 >> 7;
              v195 = v191 + 2;
              if (v194 >= 0x4000)
              {
                do
                {
                  *(v195 - 1) |= 0x80u;
                  unsigned int v197 = v196 >> 14;
                  v196 >>= 7;
                  *v195++ = v196;
                }
                while (v197);
              }
            }
            else
            {
              v195 = v191 + 1;
            }
            uint64_t v5 = (char *)(*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(*(void *)v190 + 96))(v190, v195, a4);
            ++v185;
            uint64_t v184 = *(void *)a1;
          }
          while (v185 < *(int *)(*(void *)a1 + 8));
        }
        return v5;
      case 0xC:
        uint64_t v198 = *(void *)a1;
        if (*(int *)(*(void *)a1 + 8) < 1) {
          return v5;
        }
        uint64_t v199 = 0;
        unsigned int v200 = 8 * a2;
        uint64_t v201 = 4;
        if (((a2 >> 25) & 0xF) != 0) {
          uint64_t v201 = 5;
        }
        unsigned int v202 = (8 * a2) | 2;
        char v203 = (8 * a2) | 0x82;
        uint64_t v204 = 1;
        if (v200 >= 0x80) {
          uint64_t v204 = 2;
        }
        if (v200 < 0x200000) {
          uint64_t v201 = 3;
        }
        int v385 = (a2 >> 4) & 0x1FFFFFF;
        if (v200 >= 0x4000) {
          uint64_t v205 = v201;
        }
        else {
          uint64_t v205 = v204;
        }
        unsigned int v206 = v200 >> 7;
        break;
      case 0xD:
        uint64_t v213 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v214 = 0;
          unsigned int v215 = 8 * a2;
          char v216 = (8 * a2) | 0x80;
          int v217 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v213 = *(void *)a1;
            }
            unsigned int v218 = *(_DWORD *)(*(void *)(v213 + 8) + 4 * v214);
            *uint64_t v5 = v215;
            if (v215 > 0x7F)
            {
              *uint64_t v5 = v216;
              v5[1] = v215 >> 7;
              v219 = v5 + 2;
              if (v215 >= 0x4000)
              {
                unsigned int v220 = v217;
                do
                {
                  *(v219 - 1) |= 0x80u;
                  unsigned int v221 = v220 >> 14;
                  v220 >>= 7;
                  *v219++ = v220;
                }
                while (v221);
              }
            }
            else
            {
              v219 = v5 + 1;
            }
            unsigned char *v219 = v218;
            if (v218 > 0x7F)
            {
              unsigned char *v219 = v218 | 0x80;
              unsigned int v222 = v218 >> 7;
              v219[1] = v218 >> 7;
              uint64_t v5 = v219 + 2;
              if (v218 >= 0x4000)
              {
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unsigned int v223 = v222 >> 14;
                  v222 >>= 7;
                  *v5++ = v222;
                }
                while (v223);
              }
            }
            else
            {
              uint64_t v5 = v219 + 1;
            }
            ++v214;
            uint64_t v213 = *(void *)a1;
          }
          while (v214 < **(int **)a1);
        }
        return v5;
      case 0xE:
        uint64_t v224 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v225 = 0;
          unsigned int v226 = 8 * a2;
          char v227 = (8 * a2) | 0x80;
          int v228 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v224 = *(void *)a1;
            }
            unint64_t v229 = *(int *)(*(void *)(v224 + 8) + 4 * v225);
            *uint64_t v5 = v226;
            if (v226 > 0x7F)
            {
              *uint64_t v5 = v227;
              v5[1] = v226 >> 7;
              v230 = v5 + 2;
              if (v226 >= 0x4000)
              {
                unsigned int v231 = v228;
                do
                {
                  *(v230 - 1) |= 0x80u;
                  unsigned int v232 = v231 >> 14;
                  v231 >>= 7;
                  *v230++ = v231;
                }
                while (v232);
              }
            }
            else
            {
              v230 = v5 + 1;
            }
            unsigned char *v230 = v229;
            if (v229 > 0x7F)
            {
              unsigned char *v230 = v229 | 0x80;
              unint64_t v233 = v229 >> 7;
              v230[1] = v229 >> 7;
              uint64_t v5 = v230 + 2;
              if (v229 >= 0x4000)
              {
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unint64_t v234 = v233 >> 14;
                  v233 >>= 7;
                  *v5++ = v233;
                }
                while (v234);
              }
            }
            else
            {
              uint64_t v5 = v230 + 1;
            }
            ++v225;
            uint64_t v224 = *(void *)a1;
          }
          while (v225 < **(int **)a1);
        }
        return v5;
      case 0xF:
        uint64_t v235 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v236 = 0;
          unsigned int v237 = (8 * a2) | 5;
          int v238 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v239 = (8 * a2) >> 7;
          char v240 = (8 * a2) | 0x85;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v235 = *(void *)a1;
            }
            int v241 = *(_DWORD *)(*(void *)(v235 + 8) + 4 * v236);
            *uint64_t v5 = v237;
            if (v237 > 0x7F)
            {
              *uint64_t v5 = v240;
              v5[1] = v239;
              v242 = v5 + 2;
              if (v237 >= 0x4000)
              {
                unsigned int v243 = v238;
                do
                {
                  *((unsigned char *)v242 - 1) |= 0x80u;
                  unsigned int v244 = v243 >> 14;
                  v243 >>= 7;
                  *(unsigned char *)v242 = v243;
                  v242 = (_DWORD *)((char *)v242 + 1);
                }
                while (v244);
              }
            }
            else
            {
              v242 = v5 + 1;
            }
            _DWORD *v242 = v241;
            uint64_t v5 = (char *)(v242 + 1);
            ++v236;
            uint64_t v235 = *(void *)a1;
          }
          while (v236 < **(int **)a1);
        }
        return v5;
      case 0x10:
        uint64_t v245 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v246 = 0;
          unsigned int v247 = (8 * a2) | 1;
          char v248 = (8 * a2) | 0x81;
          int v249 = (a2 >> 4) & 0x1FFFFFF;
          unsigned int v250 = (8 * a2) >> 7;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v245 = *(void *)a1;
            }
            uint64_t v251 = *(void *)(*(void *)(v245 + 8) + 8 * v246);
            *uint64_t v5 = v247;
            if (v247 > 0x7F)
            {
              *uint64_t v5 = v248;
              v5[1] = v250;
              v252 = v5 + 2;
              if (v247 >= 0x4000)
              {
                unsigned int v253 = v249;
                do
                {
                  *((unsigned char *)v252 - 1) |= 0x80u;
                  unsigned int v254 = v253 >> 14;
                  v253 >>= 7;
                  *(unsigned char *)v252 = v253;
                  v252 = (void *)((char *)v252 + 1);
                }
                while (v254);
              }
            }
            else
            {
              v252 = v5 + 1;
            }
            void *v252 = v251;
            uint64_t v5 = (char *)(v252 + 1);
            ++v246;
            uint64_t v245 = *(void *)a1;
          }
          while (v246 < **(int **)a1);
        }
        return v5;
      case 0x11:
        uint64_t v255 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v256 = 0;
          unsigned int v257 = 8 * a2;
          char v258 = (8 * a2) | 0x80;
          int v259 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v255 = *(void *)a1;
            }
            int v260 = *(_DWORD *)(*(void *)(v255 + 8) + 4 * v256);
            *uint64_t v5 = v257;
            if (v257 > 0x7F)
            {
              *uint64_t v5 = v258;
              v5[1] = v257 >> 7;
              v261 = v5 + 2;
              if (v257 >= 0x4000)
              {
                unsigned int v262 = v259;
                do
                {
                  *(v261 - 1) |= 0x80u;
                  unsigned int v263 = v262 >> 14;
                  v262 >>= 7;
                  *v261++ = v262;
                }
                while (v263);
              }
            }
            else
            {
              v261 = v5 + 1;
            }
            unsigned int v264 = (2 * v260) ^ (v260 >> 31);
            unsigned char *v261 = (2 * v260) ^ (v260 >> 31);
            if (v264 > 0x7F)
            {
              unsigned char *v261 = v264 | 0x80;
              unsigned int v265 = v264 >> 7;
              v261[1] = v264 >> 7;
              uint64_t v5 = v261 + 2;
              if (v264 >= 0x4000)
              {
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unsigned int v266 = v265 >> 14;
                  v265 >>= 7;
                  *v5++ = v265;
                }
                while (v266);
              }
            }
            else
            {
              uint64_t v5 = v261 + 1;
            }
            ++v256;
            uint64_t v255 = *(void *)a1;
          }
          while (v256 < **(int **)a1);
        }
        return v5;
      case 0x12:
        uint64_t v267 = *(void *)a1;
        if (**(int **)a1 >= 1)
        {
          uint64_t v268 = 0;
          unsigned int v269 = 8 * a2;
          char v270 = (8 * a2) | 0x80;
          int v271 = (a2 >> 4) & 0x1FFFFFF;
          do
          {
            if (*(void *)a4 <= (unint64_t)v5)
            {
              uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
              uint64_t v267 = *(void *)a1;
            }
            uint64_t v272 = *(void *)(*(void *)(v267 + 8) + 8 * v268);
            *uint64_t v5 = v269;
            if (v269 > 0x7F)
            {
              *uint64_t v5 = v270;
              v5[1] = v269 >> 7;
              v273 = v5 + 2;
              if (v269 >= 0x4000)
              {
                unsigned int v274 = v271;
                do
                {
                  *(v273 - 1) |= 0x80u;
                  unsigned int v275 = v274 >> 14;
                  v274 >>= 7;
                  *v273++ = v274;
                }
                while (v275);
              }
            }
            else
            {
              v273 = v5 + 1;
            }
            unint64_t v276 = (2 * v272) ^ (v272 >> 63);
            unsigned char *v273 = v276;
            if (v276 > 0x7F)
            {
              unsigned char *v273 = v276 | 0x80;
              unint64_t v277 = v276 >> 7;
              v273[1] = v276 >> 7;
              uint64_t v5 = v273 + 2;
              if (v276 >= 0x4000)
              {
                do
                {
                  *(v5 - 1) |= 0x80u;
                  unint64_t v278 = v277 >> 14;
                  v277 >>= 7;
                  *v5++ = v277;
                }
                while (v278);
              }
            }
            else
            {
              uint64_t v5 = v273 + 1;
            }
            ++v268;
            uint64_t v267 = *(void *)a1;
          }
          while (v268 < **(int **)a1);
        }
        return v5;
      default:
        return v5;
    }
    while (1)
    {
      if (*(void *)a4 <= (unint64_t)v5)
      {
        uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)v5);
        uint64_t v198 = *(void *)a1;
      }
      v207 = *(void **)(*(void *)(v198 + 16) + 8 * v199 + 8);
      if (*((char *)v207 + 23) < 0)
      {
        int64_t v208 = v207[1];
        if (v208 > 127) {
          goto LABEL_326;
        }
      }
      else
      {
        int64_t v208 = *((unsigned __int8 *)v207 + 23);
      }
      if ((uint64_t)(*(void *)a4 + ~(unint64_t)&v5[v205] + 16) >= v208)
      {
        *uint64_t v5 = v202;
        if (v202 > 0x7F)
        {
          *uint64_t v5 = v203;
          v5[1] = v206;
          v209 = v5 + 2;
          if (v202 >= 0x4000)
          {
            unsigned int v210 = v385;
            do
            {
              *(v209 - 1) |= 0x80u;
              unsigned int v211 = v210 >> 14;
              v210 >>= 7;
              *v209++ = v210;
            }
            while (v211);
          }
        }
        else
        {
          v209 = v5 + 1;
        }
        unsigned char *v209 = v208;
        v212 = v209 + 1;
        if (*((char *)v207 + 23) < 0) {
          v207 = (void *)*v207;
        }
        memcpy(v212, v207, v208);
        uint64_t v5 = &v212[v208];
        goto LABEL_324;
      }
LABEL_326:
      uint64_t v5 = (char *)sub_188A868(a4, a2, (uint64_t)v207, v5);
LABEL_324:
      ++v199;
      uint64_t v198 = *(void *)a1;
      if (v199 >= *(int *)(*(void *)a1 + 8)) {
        return v5;
      }
    }
  }
  if ((a1[10] & 1) == 0)
  {
    switch(a1[8])
    {
      case 1:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        uint64_t v10 = *(void *)a1;
        unsigned int v11 = (8 * a2) | 1;
        *uint64_t v5 = (8 * a2) | 1;
        if (v11 <= 0x7F) {
          goto LABEL_478;
        }
        *uint64_t v5 = (8 * a2) | 0x81;
        unsigned int v12 = (8 * a2) >> 7;
        v5[1] = v12;
        int v13 = v5 + 2;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v13 - 1) |= 0x80u;
            unsigned int v14 = v12 >> 14;
            v12 >>= 7;
            *v13++ = v12;
          }
          while (v14);
        }
        goto LABEL_479;
      case 2:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        int v279 = *(_DWORD *)a1;
        unsigned int v280 = (8 * a2) | 5;
        *uint64_t v5 = (8 * a2) | 5;
        if (v280 <= 0x7F) {
          goto LABEL_473;
        }
        *uint64_t v5 = (8 * a2) | 0x85;
        unsigned int v281 = (8 * a2) >> 7;
        v5[1] = v281;
        v282 = v5 + 2;
        if (v280 >= 0x4000)
        {
          do
          {
            *(v282 - 1) |= 0x80u;
            unsigned int v283 = v281 >> 14;
            v281 >>= 7;
            *v282++ = v281;
          }
          while (v283);
        }
        goto LABEL_474;
      case 3:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        unint64_t v284 = *(void *)a1;
        unsigned int v285 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *uint64_t v5 = v285 | 0x80;
          unsigned int v323 = v285 >> 7;
          v5[1] = v285 >> 7;
          v286 = v5 + 2;
          if (v285 >= 0x4000)
          {
            do
            {
              *(v286 - 1) |= 0x80u;
              unsigned int v324 = v323 >> 14;
              v323 >>= 7;
              *v286++ = v323;
            }
            while (v324);
          }
        }
        else
        {
          v286 = v5 + 1;
        }
        unsigned char *v286 = v284;
        if (v284 <= 0x7F) {
          return v286 + 1;
        }
        unsigned char *v286 = v284 | 0x80;
        unint64_t v325 = v284 >> 7;
        v286[1] = v284 >> 7;
        uint64_t v5 = v286 + 2;
        if (v284 >= 0x4000)
        {
          do
          {
            *(v5 - 1) |= 0x80u;
            unint64_t v326 = v325 >> 14;
            v325 >>= 7;
            *v5++ = v325;
          }
          while (v326);
        }
        return v5;
      case 4:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        unint64_t v287 = *(void *)a1;
        unsigned int v288 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *uint64_t v5 = v288 | 0x80;
          unsigned int v327 = v288 >> 7;
          v5[1] = v288 >> 7;
          v286 = v5 + 2;
          if (v288 >= 0x4000)
          {
            do
            {
              *(v286 - 1) |= 0x80u;
              unsigned int v328 = v327 >> 14;
              v327 >>= 7;
              *v286++ = v327;
            }
            while (v328);
          }
        }
        else
        {
          v286 = v5 + 1;
        }
        unsigned char *v286 = v287;
        if (v287 <= 0x7F) {
          return v286 + 1;
        }
        unsigned char *v286 = v287 | 0x80;
        unint64_t v329 = v287 >> 7;
        v286[1] = v287 >> 7;
        uint64_t v5 = v286 + 2;
        if (v287 >= 0x4000)
        {
          do
          {
            *(v5 - 1) |= 0x80u;
            unint64_t v330 = v329 >> 14;
            v329 >>= 7;
            *v5++ = v329;
          }
          while (v330);
        }
        return v5;
      case 5:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        unsigned int v289 = *(_DWORD *)a1;
        unsigned int v290 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 <= 0x7F) {
          goto LABEL_469;
        }
        *uint64_t v5 = v290 | 0x80;
        unsigned int v291 = v290 >> 7;
        v5[1] = v290 >> 7;
        v292 = v5 + 2;
        if (v290 >= 0x4000)
        {
          do
          {
            *(v292 - 1) |= 0x80u;
            unsigned int v293 = v291 >> 14;
            v291 >>= 7;
            *v292++ = v291;
          }
          while (v293);
        }
        goto LABEL_521;
      case 6:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        uint64_t v10 = *(void *)a1;
        unsigned int v294 = (8 * a2) | 1;
        *uint64_t v5 = (8 * a2) | 1;
        if (v294 <= 0x7F) {
          goto LABEL_478;
        }
        *uint64_t v5 = (8 * a2) | 0x81;
        unsigned int v295 = (8 * a2) >> 7;
        v5[1] = v295;
        int v13 = v5 + 2;
        if (v294 >= 0x4000)
        {
          do
          {
            *(v13 - 1) |= 0x80u;
            unsigned int v296 = v295 >> 14;
            v295 >>= 7;
            *v13++ = v295;
          }
          while (v296);
        }
        goto LABEL_479;
      case 7:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        int v279 = *(_DWORD *)a1;
        unsigned int v297 = (8 * a2) | 5;
        *uint64_t v5 = (8 * a2) | 5;
        if (v297 <= 0x7F) {
          goto LABEL_473;
        }
        *uint64_t v5 = (8 * a2) | 0x85;
        unsigned int v298 = (8 * a2) >> 7;
        v5[1] = v298;
        v282 = v5 + 2;
        if (v297 >= 0x4000)
        {
          do
          {
            *(v282 - 1) |= 0x80u;
            unsigned int v299 = v298 >> 14;
            v298 >>= 7;
            *v282++ = v298;
          }
          while (v299);
        }
        goto LABEL_474;
      case 8:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        char v300 = *a1;
        unsigned int v301 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *uint64_t v5 = v301 | 0x80;
          unsigned int v331 = v301 >> 7;
          v5[1] = v301 >> 7;
          v302 = v5 + 2;
          if (v301 >= 0x4000)
          {
            do
            {
              *(v302 - 1) |= 0x80u;
              unsigned int v332 = v331 >> 14;
              v331 >>= 7;
              *v302++ = v331;
            }
            while (v332);
          }
        }
        else
        {
          v302 = v5 + 1;
        }
        unsigned char *v302 = v300;
        return v302 + 1;
      case 9:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        v303 = *(void **)a1;
        if (*(char *)(*(void *)a1 + 23) < 0)
        {
          int64_t v304 = v303[1];
          if (v304 > 127) {
            goto LABEL_589;
          }
        }
        else
        {
          int64_t v304 = *(unsigned __int8 *)(*(void *)a1 + 23);
        }
        unsigned int v359 = 8 * a2;
        uint64_t v360 = 1;
        uint64_t v361 = 2;
        uint64_t v362 = 3;
        uint64_t v363 = 4;
        if ((8 * a2) >> 28) {
          uint64_t v363 = 5;
        }
        if (v359 >= 0x200000) {
          uint64_t v362 = v363;
        }
        if (v359 >= 0x4000) {
          uint64_t v361 = v362;
        }
        if (v359 >= 0x80) {
          uint64_t v360 = v361;
        }
        if ((uint64_t)(*(void *)a4 + ~(unint64_t)&v5[v360] + 16) < v304) {
          goto LABEL_589;
        }
        unsigned int v364 = v359 | 2;
        *uint64_t v5 = v359 | 2;
        if ((v359 | 2) <= 0x7F) {
          goto LABEL_572;
        }
        *uint64_t v5 = v359 | 0x82;
        unsigned int v365 = v359 >> 7;
        v5[1] = v365;
        v366 = v5 + 2;
        if (v364 >= 0x4000)
        {
          do
          {
            *(v366 - 1) |= 0x80u;
            unsigned int v367 = v365 >> 14;
            v365 >>= 7;
            *v366++ = v365;
          }
          while (v367);
        }
        goto LABEL_573;
      case 0xA:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        uint64_t v305 = *(void *)a1;
        unsigned int v306 = 8 * a2;
        unsigned int v307 = (8 * a2) | 3;
        *uint64_t v5 = (8 * a2) | 3;
        unsigned int v308 = (8 * a2) >> 7;
        if (v307 > 0x7F)
        {
          *uint64_t v5 = (8 * a2) | 0x83;
          v5[1] = v308;
          v309 = v5 + 2;
          if (v307 >= 0x4000)
          {
            unsigned int v333 = v306 >> 7;
            do
            {
              *(v309 - 1) |= 0x80u;
              unsigned int v334 = v333 >> 14;
              v333 >>= 7;
              *v309++ = v333;
            }
            while (v334);
          }
        }
        else
        {
          v309 = v5 + 1;
        }
        v335 = (unsigned char *)(*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(*(void *)v305 + 96))(v305, v309, a4);
        if (*(void *)a4 <= (unint64_t)v335) {
          v335 = sub_188A3FC((uint64_t)a4, (int)v335);
        }
        unsigned char *v335 = v306 | 4;
        if ((v306 | 4) <= 0x7F) {
          return v335 + 1;
        }
        unsigned char *v335 = v306 | 0x84;
        v335[1] = v308;
        uint64_t v5 = v335 + 2;
        if ((v306 | 4) >= 0x4000)
        {
          do
          {
            *(v5 - 1) |= 0x80u;
            unsigned int v354 = v308 >> 14;
            v308 >>= 7;
            *v5++ = v308;
          }
          while (v354);
        }
        return v5;
      case 0xB:
        if ((a1[10] & 0x10) != 0)
        {
          v336 = *(uint64_t (**)(void))(**(void **)a1 + 136);
          return (char *)v336();
        }
        else
        {
          if (*(void *)a4 <= (unint64_t)a3) {
            uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
          }
          uint64_t v310 = *(void *)a1;
          unsigned int v311 = (8 * a2) | 2;
          *uint64_t v5 = (8 * a2) | 2;
          if (v311 > 0x7F)
          {
            *uint64_t v5 = (8 * a2) | 0x82;
            unsigned int v377 = (8 * a2) >> 7;
            v5[1] = v377;
            v312 = v5 + 2;
            if (v311 >= 0x4000)
            {
              do
              {
                *(v312 - 1) |= 0x80u;
                unsigned int v378 = v377 >> 14;
                v377 >>= 7;
                *v312++ = v377;
              }
              while (v378);
            }
          }
          else
          {
            v312 = v5 + 1;
          }
          unsigned int v379 = (*(uint64_t (**)(uint64_t))(*(void *)v310 + 80))(v310);
          unsigned char *v312 = v379;
          if (v379 > 0x7F)
          {
            unsigned char *v312 = v379 | 0x80;
            unsigned int v381 = v379 >> 7;
            v312[1] = v379 >> 7;
            v380 = v312 + 2;
            if (v379 >= 0x4000)
            {
              do
              {
                *(v380 - 1) |= 0x80u;
                unsigned int v382 = v381 >> 14;
                v381 >>= 7;
                *v380++ = v381;
              }
              while (v382);
            }
          }
          else
          {
            v380 = v312 + 1;
          }
          v383 = *(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(*(void *)v310 + 96);
          return (char *)v383(v310, v380, a4);
        }
      case 0xC:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        v303 = *(void **)a1;
        if (*(char *)(*(void *)a1 + 23) < 0)
        {
          int64_t v304 = v303[1];
          if (v304 > 127) {
            goto LABEL_589;
          }
        }
        else
        {
          int64_t v304 = *(unsigned __int8 *)(*(void *)a1 + 23);
        }
        unsigned int v368 = 8 * a2;
        uint64_t v369 = 1;
        uint64_t v370 = 2;
        uint64_t v371 = 3;
        uint64_t v372 = 4;
        if ((8 * a2) >> 28) {
          uint64_t v372 = 5;
        }
        if (v368 >= 0x200000) {
          uint64_t v371 = v372;
        }
        if (v368 >= 0x4000) {
          uint64_t v370 = v371;
        }
        if (v368 >= 0x80) {
          uint64_t v369 = v370;
        }
        if ((uint64_t)(*(void *)a4 + ~(unint64_t)&v5[v369] + 16) >= v304)
        {
          unsigned int v373 = v368 | 2;
          *uint64_t v5 = v368 | 2;
          if ((v368 | 2) > 0x7F)
          {
            *uint64_t v5 = v368 | 0x82;
            unsigned int v375 = v368 >> 7;
            v5[1] = v375;
            v366 = v5 + 2;
            if (v373 >= 0x4000)
            {
              do
              {
                *(v366 - 1) |= 0x80u;
                unsigned int v376 = v375 >> 14;
                v375 >>= 7;
                *v366++ = v375;
              }
              while (v376);
            }
          }
          else
          {
LABEL_572:
            v366 = v5 + 1;
          }
LABEL_573:
          unsigned char *v366 = v304;
          v374 = v366 + 1;
          if (*((char *)v303 + 23) < 0) {
            v303 = (void *)*v303;
          }
          memcpy(v374, v303, v304);
          return &v374[v304];
        }
LABEL_589:
        return (char *)sub_188A868(a4, a2, (uint64_t)v303, v5);
      case 0xD:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        unsigned int v313 = *(_DWORD *)a1;
        unsigned int v314 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *uint64_t v5 = v314 | 0x80;
          unsigned int v338 = v314 >> 7;
          v5[1] = v314 >> 7;
          v286 = v5 + 2;
          if (v314 >= 0x4000)
          {
            do
            {
              *(v286 - 1) |= 0x80u;
              unsigned int v339 = v338 >> 14;
              v338 >>= 7;
              *v286++ = v338;
            }
            while (v339);
          }
        }
        else
        {
          v286 = v5 + 1;
        }
        unsigned char *v286 = v313;
        if (v313 <= 0x7F) {
          return v286 + 1;
        }
        unsigned char *v286 = v313 | 0x80;
        unsigned int v340 = v313 >> 7;
        v286[1] = v313 >> 7;
        uint64_t v5 = v286 + 2;
        if (v313 >= 0x4000)
        {
          do
          {
            *(v5 - 1) |= 0x80u;
            unsigned int v341 = v340 >> 14;
            v340 >>= 7;
            *v5++ = v340;
          }
          while (v341);
        }
        return v5;
      case 0xE:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        unsigned int v289 = *(_DWORD *)a1;
        unsigned int v315 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *uint64_t v5 = v315 | 0x80;
          unsigned int v342 = v315 >> 7;
          v5[1] = v315 >> 7;
          v292 = v5 + 2;
          if (v315 >= 0x4000)
          {
            do
            {
              *(v292 - 1) |= 0x80u;
              unsigned int v343 = v342 >> 14;
              v342 >>= 7;
              *v292++ = v342;
            }
            while (v343);
          }
        }
        else
        {
LABEL_469:
          v292 = v5 + 1;
        }
LABEL_521:
        return sub_188D880(v289, v292);
      case 0xF:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        int v279 = *(_DWORD *)a1;
        unsigned int v316 = (8 * a2) | 5;
        *uint64_t v5 = (8 * a2) | 5;
        if (v316 > 0x7F)
        {
          *uint64_t v5 = (8 * a2) | 0x85;
          unsigned int v344 = (8 * a2) >> 7;
          v5[1] = v344;
          v282 = v5 + 2;
          if (v316 >= 0x4000)
          {
            do
            {
              *(v282 - 1) |= 0x80u;
              unsigned int v345 = v344 >> 14;
              v344 >>= 7;
              *v282++ = v344;
            }
            while (v345);
          }
        }
        else
        {
LABEL_473:
          v282 = v5 + 1;
        }
LABEL_474:
        *(_DWORD *)v282 = v279;
        return v282 + 4;
      case 0x10:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        uint64_t v10 = *(void *)a1;
        unsigned int v317 = (8 * a2) | 1;
        *uint64_t v5 = (8 * a2) | 1;
        if (v317 > 0x7F)
        {
          *uint64_t v5 = (8 * a2) | 0x81;
          unsigned int v346 = (8 * a2) >> 7;
          v5[1] = v346;
          int v13 = v5 + 2;
          if (v317 >= 0x4000)
          {
            do
            {
              *(v13 - 1) |= 0x80u;
              unsigned int v347 = v346 >> 14;
              v346 >>= 7;
              *v13++ = v346;
            }
            while (v347);
          }
        }
        else
        {
LABEL_478:
          int v13 = v5 + 1;
        }
LABEL_479:
        *(void *)int v13 = v10;
        return v13 + 8;
      case 0x11:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        int v318 = *(_DWORD *)a1;
        unsigned int v319 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *uint64_t v5 = v319 | 0x80;
          unsigned int v348 = v319 >> 7;
          v5[1] = v319 >> 7;
          v286 = v5 + 2;
          if (v319 >= 0x4000)
          {
            do
            {
              *(v286 - 1) |= 0x80u;
              unsigned int v349 = v348 >> 14;
              v348 >>= 7;
              *v286++ = v348;
            }
            while (v349);
          }
        }
        else
        {
          v286 = v5 + 1;
        }
        unsigned int v350 = (2 * v318) ^ (v318 >> 31);
        unsigned char *v286 = (2 * v318) ^ (v318 >> 31);
        if (v350 <= 0x7F) {
          return v286 + 1;
        }
        unsigned char *v286 = v350 | 0x80;
        unsigned int v355 = v350 >> 7;
        v286[1] = v350 >> 7;
        uint64_t v5 = v286 + 2;
        if (v350 >= 0x4000)
        {
          do
          {
            *(v5 - 1) |= 0x80u;
            unsigned int v356 = v355 >> 14;
            v355 >>= 7;
            *v5++ = v355;
          }
          while (v356);
        }
        return v5;
      case 0x12:
        if (*(void *)a4 <= (unint64_t)a3) {
          uint64_t v5 = (char *)sub_188A3FC((uint64_t)a4, (int)a3);
        }
        uint64_t v320 = *(void *)a1;
        unsigned int v321 = 8 * a2;
        *uint64_t v5 = 8 * a2;
        if (8 * a2 > 0x7F)
        {
          *uint64_t v5 = v321 | 0x80;
          unsigned int v351 = v321 >> 7;
          v5[1] = v321 >> 7;
          v322 = v5 + 2;
          if (v321 >= 0x4000)
          {
            do
            {
              *(v322 - 1) |= 0x80u;
              unsigned int v352 = v351 >> 14;
              v351 >>= 7;
              *v322++ = v351;
            }
            while (v352);
          }
        }
        else
        {
          v322 = v5 + 1;
        }
        unint64_t v353 = (2 * v320) ^ (v320 >> 63);
        unsigned char *v322 = v353;
        if (v353 <= 0x7F) {
          return v322 + 1;
        }
        unsigned char *v322 = v353 | 0x80;
        unint64_t v357 = v353 >> 7;
        v322[1] = v353 >> 7;
        uint64_t v5 = v322 + 2;
        if (v353 >= 0x4000)
        {
          do
          {
            *(v5 - 1) |= 0x80u;
            unint64_t v358 = v357 >> 14;
            v357 >>= 7;
            *v5++ = v357;
          }
          while (v358);
        }
        return v5;
      default:
        return v5;
    }
  }
  return v5;
}

void sub_1889184(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1889280(uint64_t a1)
{
  int v1 = *(int **)(a1 + 16);
  if (*(unsigned __int16 *)(a1 + 8) < 0x101u)
  {
    if (*(_WORD *)(a1 + 10))
    {
      uint64_t v2 = 0;
      uint64_t v3 = &v1[8 * *(unsigned __int16 *)(a1 + 10)];
      do
      {
        uint64_t v4 = v1 + 2;
        int v5 = *v1;
        v1 += 8;
        v2 += sub_1889360(v4, v5);
      }
      while (v1 != v3);
      return v2;
    }
    return 0;
  }
  unsigned int v8 = *(int **)v1;
  uint64_t v6 = v1 + 2;
  char v7 = v8;
  if (v8 == v6) {
    return 0;
  }
  uint64_t v2 = 0;
  do
  {
    unint64_t v9 = sub_1889360((unsigned char *)v7 + 40, v7[8]);
    uint64_t v10 = (int *)*((void *)v7 + 1);
    if (v10)
    {
      do
      {
        unsigned int v11 = v10;
        uint64_t v10 = *(int **)v10;
      }
      while (v10);
    }
    else
    {
      do
      {
        unsigned int v11 = (int *)*((void *)v7 + 2);
        BOOL v12 = *(void *)v11 == (void)v7;
        char v7 = v11;
      }
      while (!v12);
    }
    v2 += v9;
    char v7 = v11;
  }
  while (v11 != v6);
  return v2;
}

unint64_t sub_1889360(unsigned char *a1, int a2)
{
  if (a1[9])
  {
    if (a1[11])
    {
      switch(a1[8])
      {
        case 1:
        case 6:
        case 0x10:
          uint64_t v6 = 8 * **(unsigned int **)a1;
          goto LABEL_51;
        case 2:
        case 7:
        case 0xF:
          uint64_t v6 = 4 * **(unsigned int **)a1;
          goto LABEL_51;
        case 3:
          uint64_t v13 = **(unsigned int **)a1;
          if ((int)v13 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v14 = *(uint64_t **)(*(void *)a1 + 8);
          do
          {
            uint64_t v15 = *v14++;
            v6 += (9 * (__clz(v15 | 1) ^ 0x3F) + 73) >> 6;
            --v13;
          }
          while (v13);
          goto LABEL_51;
        case 4:
          uint64_t v16 = **(unsigned int **)a1;
          if ((int)v16 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v17 = *(uint64_t **)(*(void *)a1 + 8);
          do
          {
            uint64_t v18 = *v17++;
            v6 += (9 * (__clz(v18 | 1) ^ 0x3F) + 73) >> 6;
            --v16;
          }
          while (v16);
          goto LABEL_51;
        case 5:
          uint64_t v19 = **(unsigned int **)a1;
          if ((int)v19 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v20 = *(int **)(*(void *)a1 + 8);
          do
          {
            int v22 = *v20++;
            int v21 = v22;
            if (v22 < 0) {
              uint64_t v23 = 10;
            }
            else {
              uint64_t v23 = (9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6;
            }
            v6 += v23;
            --v19;
          }
          while (v19);
          goto LABEL_51;
        case 8:
          uint64_t v6 = **(unsigned int **)a1;
          goto LABEL_51;
        case 9:
        case 0xA:
        case 0xB:
        case 0xC:
          LODWORD(v85[0]) = 3;
          v85[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/su"
                   "bmodules/protobuf-mirror/src/google/protobuf/extension_set.cc";
          int v86 = 1618;
          memset(&__p, 0, sizeof(__p));
          std::string::append(&__p, "Non-primitive types can't be packed.", 0x24uLL);
          sub_188CF08(v85);
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
          goto LABEL_54;
        case 0xD:
          uint64_t v7 = **(unsigned int **)a1;
          if ((int)v7 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v8 = *(int **)(*(void *)a1 + 8);
          do
          {
            int v9 = *v8++;
            v6 += (9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6;
            --v7;
          }
          while (v7);
          goto LABEL_51;
        case 0xE:
          uint64_t v24 = **(unsigned int **)a1;
          if ((int)v24 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v25 = *(int **)(*(void *)a1 + 8);
          do
          {
            int v27 = *v25++;
            int v26 = v27;
            if (v27 < 0) {
              uint64_t v28 = 10;
            }
            else {
              uint64_t v28 = (9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6;
            }
            v6 += v28;
            --v24;
          }
          while (v24);
          goto LABEL_51;
        case 0x11:
          uint64_t v10 = **(unsigned int **)a1;
          if ((int)v10 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          unsigned int v11 = *(int **)(*(void *)a1 + 8);
          do
          {
            int v12 = *v11++;
            v6 += (9 * (__clz((2 * v12) ^ (v12 >> 31) | 1) ^ 0x1F) + 73) >> 6;
            --v10;
          }
          while (v10);
          goto LABEL_51;
        case 0x12:
          uint64_t v29 = **(unsigned int **)a1;
          if ((int)v29 < 1) {
            goto LABEL_54;
          }
          uint64_t v6 = 0;
          uint64_t v30 = *(uint64_t **)(*(void *)a1 + 8);
          do
          {
            uint64_t v31 = *v30++;
            v6 += (9 * (__clz((2 * v31) ^ (v31 >> 63) | 1) ^ 0x3F) + 73) >> 6;
            --v29;
          }
          while (v29);
LABEL_51:
          *((_DWORD *)a1 + 3) = v6;
          unint64_t v32 = v6 + ((9 * (__clz((8 * a2) | 3) ^ 0x1F) + 73) >> 6) + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
          if (v6) {
            unint64_t v3 = v32;
          }
          else {
            unint64_t v3 = 0;
          }
          break;
        default:
LABEL_54:
          unint64_t v3 = 0;
          *((_DWORD *)a1 + 3) = 0;
          break;
      }
    }
    else
    {
      unint64_t v4 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (a1[8] == 10);
      switch(a1[8])
      {
        case 1:
        case 6:
        case 0x10:
          unsigned int v5 = v4 + 8;
          goto LABEL_15;
        case 2:
        case 7:
        case 0xF:
          unsigned int v5 = v4 + 4;
LABEL_15:
          unint64_t v3 = v5 * (unint64_t)**(unsigned int **)a1;
          break;
        case 3:
          uint64_t v38 = **(unsigned int **)a1;
          unint64_t v3 = v4 * (unint64_t)v38;
          if ((int)v38 >= 1)
          {
            unsigned int v39 = *(uint64_t **)(*(void *)a1 + 8);
            do
            {
              uint64_t v40 = *v39++;
              v3 += (9 * (__clz(v40 | 1) ^ 0x3F) + 73) >> 6;
              --v38;
            }
            while (v38);
          }
          break;
        case 4:
          uint64_t v41 = **(unsigned int **)a1;
          unint64_t v3 = v4 * (unint64_t)v41;
          if ((int)v41 >= 1)
          {
            uint64_t v42 = *(uint64_t **)(*(void *)a1 + 8);
            do
            {
              uint64_t v43 = *v42++;
              v3 += (9 * (__clz(v43 | 1) ^ 0x3F) + 73) >> 6;
              --v41;
            }
            while (v41);
          }
          break;
        case 5:
          uint64_t v44 = **(unsigned int **)a1;
          unint64_t v3 = v4 * (unint64_t)v44;
          if ((int)v44 >= 1)
          {
            unsigned int v45 = *(int **)(*(void *)a1 + 8);
            do
            {
              int v47 = *v45++;
              int v46 = v47;
              if (v47 < 0) {
                uint64_t v48 = 10;
              }
              else {
                uint64_t v48 = (9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6;
              }
              v3 += v48;
              --v44;
            }
            while (v44);
          }
          break;
        case 8:
          unint64_t v3 = **(unsigned int **)a1 + **(unsigned int **)a1 * (unint64_t)v4;
          break;
        case 9:
          uint64_t v49 = *(unsigned int *)(*(void *)a1 + 8);
          unint64_t v3 = v4 * (unint64_t)v49;
          if ((int)v49 >= 1)
          {
            uint64_t v50 = (uint64_t *)(*(void *)(*(void *)a1 + 16) + 8);
            do
            {
              uint64_t v51 = *v50++;
              uint64_t v52 = *(unsigned __int8 *)(v51 + 23);
              uint64_t v53 = *(void *)(v51 + 8);
              if ((v52 & 0x80u) == 0) {
                uint64_t v53 = v52;
              }
              v3 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6);
              --v49;
            }
            while (v49);
          }
          break;
        case 0xA:
          uint64_t v54 = *(void *)a1;
          int v55 = *(_DWORD *)(*(void *)a1 + 8);
          unint64_t v3 = v4 * (unint64_t)v55;
          if (v55 >= 1)
          {
            uint64_t v56 = 0;
            do
            {
              uint64_t v57 = *(void *)(*(void *)(v54 + 16) + 8 * v56 + 8);
              v3 += (*(uint64_t (**)(uint64_t))(*(void *)v57 + 72))(v57);
              ++v56;
              uint64_t v54 = *(void *)a1;
            }
            while (v56 < *(int *)(*(void *)a1 + 8));
          }
          break;
        case 0xB:
          uint64_t v58 = *(void *)a1;
          int v59 = *(_DWORD *)(*(void *)a1 + 8);
          unint64_t v3 = v4 * (unint64_t)v59;
          if (v59 >= 1)
          {
            uint64_t v60 = 0;
            do
            {
              uint64_t v61 = *(void *)(*(void *)(v58 + 16) + 8 * v60 + 8);
              uint64_t v62 = (*(uint64_t (**)(uint64_t))(*(void *)v61 + 72))(v61);
              v3 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6);
              ++v60;
              uint64_t v58 = *(void *)a1;
            }
            while (v60 < *(int *)(*(void *)a1 + 8));
          }
          break;
        case 0xC:
          uint64_t v63 = *(unsigned int *)(*(void *)a1 + 8);
          unint64_t v3 = v4 * (unint64_t)v63;
          if ((int)v63 >= 1)
          {
            uint64_t v64 = (uint64_t *)(*(void *)(*(void *)a1 + 16) + 8);
            do
            {
              uint64_t v65 = *v64++;
              uint64_t v66 = *(unsigned __int8 *)(v65 + 23);
              uint64_t v67 = *(void *)(v65 + 8);
              if ((v66 & 0x80u) == 0) {
                uint64_t v67 = v66;
              }
              v3 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6);
              --v63;
            }
            while (v63);
          }
          break;
        case 0xD:
          uint64_t v68 = **(unsigned int **)a1;
          unint64_t v3 = v4 * (unint64_t)v68;
          if ((int)v68 >= 1)
          {
            uint64_t v69 = *(int **)(*(void *)a1 + 8);
            do
            {
              int v70 = *v69++;
              v3 += (9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6;
              --v68;
            }
            while (v68);
          }
          break;
        case 0xE:
          uint64_t v71 = **(unsigned int **)a1;
          unint64_t v3 = v4 * (unint64_t)v71;
          if ((int)v71 >= 1)
          {
            unint64_t v72 = *(int **)(*(void *)a1 + 8);
            do
            {
              int v74 = *v72++;
              int v73 = v74;
              if (v74 < 0) {
                uint64_t v75 = 10;
              }
              else {
                uint64_t v75 = (9 * (__clz(v73 | 1) ^ 0x1F) + 73) >> 6;
              }
              v3 += v75;
              --v71;
            }
            while (v71);
          }
          break;
        case 0x11:
          uint64_t v76 = **(unsigned int **)a1;
          unint64_t v3 = v4 * (unint64_t)v76;
          if ((int)v76 >= 1)
          {
            uint64_t v77 = *(int **)(*(void *)a1 + 8);
            do
            {
              int v78 = *v77++;
              v3 += (9 * (__clz((2 * v78) ^ (v78 >> 31) | 1) ^ 0x1F) + 73) >> 6;
              --v76;
            }
            while (v76);
          }
          break;
        case 0x12:
          uint64_t v79 = **(unsigned int **)a1;
          unint64_t v3 = v4 * (unint64_t)v79;
          if ((int)v79 >= 1)
          {
            unint64_t v80 = *(uint64_t **)(*(void *)a1 + 8);
            do
            {
              uint64_t v81 = *v80++;
              v3 += (9 * (__clz((2 * v81) ^ (v81 >> 63) | 1) ^ 0x3F) + 73) >> 6;
              --v79;
            }
            while (v79);
          }
          break;
        default:
          return 0;
      }
    }
  }
  else if (a1[10])
  {
    return 0;
  }
  else
  {
    unint64_t v3 = (unint64_t)((9 * (__clz((8 * a2) | 1) ^ 0x1F) + 73) >> 6) << (a1[8] == 10);
    switch(a1[8])
    {
      case 1:
      case 6:
      case 0x10:
        v3 += 8;
        return v3;
      case 2:
      case 7:
      case 0xF:
        v3 += 4;
        return v3;
      case 3:
      case 4:
        uint64_t v34 = *(void *)a1;
        goto LABEL_127;
      case 5:
      case 0xE:
        uint64_t v35 = (9 * (__clz(*(_DWORD *)a1 | 1) ^ 0x1F) + 73) >> 6;
        if (*(int *)a1 >= 0) {
          uint64_t v36 = v35;
        }
        else {
          uint64_t v36 = 10;
        }
        v3 += v36;
        return v3;
      case 8:
        return ++v3;
      case 9:
      case 0xC:
        uint64_t v37 = *(void *)(*(void *)a1 + 8);
        if (*(char *)(*(void *)a1 + 23) >= 0) {
          uint64_t v37 = *(unsigned __int8 *)(*(void *)a1 + 23);
        }
        v3 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
        return v3;
      case 0xA:
        v3 += (*(uint64_t (**)(void))(**(void **)a1 + 72))();
        return v3;
      case 0xB:
        uint64_t v82 = **(void **)a1;
        if ((a1[10] & 0x10) != 0) {
          uint64_t v83 = (*(uint64_t (**)(void))(v82 + 88))();
        }
        else {
          uint64_t v83 = (*(uint64_t (**)(void))(v82 + 72))();
        }
        v3 += v83 + ((9 * (__clz(v83 | 1) ^ 0x1F) + 73) >> 6);
        return v3;
      case 0xD:
        int v84 = *(_DWORD *)a1;
        goto LABEL_125;
      case 0x11:
        int v84 = (2 * *(_DWORD *)a1) ^ (*(int *)a1 >> 31);
LABEL_125:
        v3 += (9 * (__clz(v84 | 1) ^ 0x1F) + 73) >> 6;
        break;
      case 0x12:
        uint64_t v34 = (2 * *(void *)a1) ^ (*(uint64_t *)a1 >> 63);
LABEL_127:
        v3 += (9 * (__clz(v34 | 1) ^ 0x3F) + 73) >> 6;
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_1889CB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1889DA8(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v2 = *(void *)(a1 + 8);
    uint64_t v4 = *(void *)(v2 - 8);
    unint64_t v3 = (void *)(v2 - 8);
    if (!v4) {
      operator delete(v3);
    }
  }
  return a1;
}

void *sub_1889DE8(void *a1)
{
  return a1;
}

uint64_t sub_1889E18(uint64_t a1, int *a2, unint64_t a3, int a4)
{
  if (!a3) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v4 = &a2[a3];
  unsigned int v5 = a2;
  do
  {
    uint64_t v6 = &v5[a3 >> 1];
    int v7 = a4;
    if (*v6 != -1) {
      int v7 = *(_DWORD *)(a1 + 24 * *v6 + 16);
    }
    unsigned int v8 = v6 + 1;
    if (v7 >= a4) {
      a3 >>= 1;
    }
    else {
      a3 += ~(a3 >> 1);
    }
    if (v7 < a4) {
      unsigned int v5 = v8;
    }
  }
  while (a3);
  if (v5 != v4 && *(_DWORD *)(a1 + 24 * *v5 + 16) == a4) {
    return (unint64_t)((char *)v5 - (char *)a2) >> 2;
  }
  else {
    return 0xFFFFFFFFLL;
  }
}

uint64_t sub_1889E98(uint64_t a1, int *a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v5 = a3;
    do
    {
      int v8 = *a2++;
      sub_188CECC(a1 + 24 * v8, a4);
      sub_188B570((uint64_t)sub_1889F1C, (uint64_t)a4);
      a4 += 3;
      --v5;
    }
    while (v5);
  }
  return 1;
}

void sub_1889F1C(uint64_t a1)
{
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

void sub_1889F30()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_2625A10, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_2625A10))
  {
    qword_2550250 = 0;
    *(void *)algn_2550258 = 0;
    qword_2550260 = 0;
    sub_188B570((uint64_t)sub_1889F1C, (uint64_t)&qword_2550250);
    atomic_store(1u, byte_2550268);
    __cxa_guard_release(&qword_2625A10);
  }
}

void sub_1889FC4(_Unwind_Exception *a1)
{
}

std::string *sub_1889FDC(std::string *a1, unsigned int a2)
{
  unsigned int v2 = a2;
  if ((a2 & 0x80000000) != 0)
  {
    uint64_t v4 = v8;
    std::string::value_type v7 = 45;
    unsigned int v2 = -v2;
  }
  else
  {
    uint64_t v4 = &v7;
  }
  std::string::size_type v6 = sub_188D1E8(v2, v4) - &v7;
  std::string::append(a1 + 1, &v7, v6);
  return a1;
}

uint64_t sub_188A09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)v4 + 64))(v4, a1);
  (*(void (**)(uint64_t))(*(void *)a1 + 40))(a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a1 + 64))(a1, a2);
  (*(void (**)(uint64_t))(*(void *)a2 + 40))(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)a2 + 64))(a2, v4);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)v4 + 8);

  return v5(v4);
}

void sub_188A1F4(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_188A240(uint64_t a1, char *a2)
{
  uint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = a1 + 32;
LABEL_2:
  std::string::value_type v7 = *(char **)a1;
  std::string::size_type v6 = *(void **)(a1 + 8);
  if (v6)
  {
    int v8 = a2 - v7;
    if (a2 <= v7)
    {
      memcpy(v6, v4, a2 - (char *)v4);
      int v12 = *(char **)a1;
      *(void *)(a1 + 8) += a2 - (char *)v4;
      return v12 - a2;
    }
    else
    {
      if (*(void *)(a1 + 48))
      {
        memcpy(v6, v4, v7 - (char *)v4);
        int v15 = 0;
        while (1)
        {
          unsigned int v14 = 0;
          if (((*(uint64_t (**)(void, _OWORD **, int *))(**(void **)(a1 + 48) + 16))(*(void *)(a1 + 48), &v14, &v15) & 1) == 0)break; {
          uint64_t v9 = v15;
          }
          if (v15)
          {
            uint64_t v10 = v14;
            unsigned int v11 = *(char **)a1;
            if (v15 < 17)
            {
              *uint64_t v4 = *(_OWORD *)v11;
              *(void *)a1 = (char *)v4 + (int)v9;
              *(void *)(a1 + 8) = v10;
              uint64_t v10 = v4;
            }
            else
            {
              *unsigned int v14 = *(_OWORD *)v11;
              *(void *)a1 = (char *)v10 + v9 - 16;
              *(void *)(a1 + 8) = 0;
            }
            a2 = (char *)v10 + v8;
            if (*(unsigned char *)(a1 + 56)) {
              return 0;
            }
            goto LABEL_2;
          }
        }
      }
      uint64_t result = 0;
      *(unsigned char *)(a1 + 56) = 1;
      *(void *)a1 = v5;
    }
  }
  else
  {
    uint64_t result = v7 - a2 + 16;
    *(void *)(a1 + 8) = a2;
  }
  return result;
}

char *sub_188A384(uint64_t a1, char *a2)
{
  if (!*(unsigned char *)(a1 + 56))
  {
    uint64_t v3 = sub_188A240(a1, a2);
    if (v3) {
      (*(void (**)(void, uint64_t))(**(void **)(a1 + 48) + 24))(*(void *)(a1 + 48), v3);
    }
    a2 = (char *)(a1 + 16);
    *(void *)a1 = a1 + 16;
    *(void *)(a1 + 8) = a1 + 16;
  }
  return a2;
}

_OWORD *sub_188A3FC(uint64_t a1, int a2)
{
  LODWORD(v2) = a2;
  uint64_t v4 = (_OWORD *)(a1 + 16);
  unint64_t v5 = a1 + 32;
  while (!*(unsigned char *)(a1 + 56))
  {
    std::string::size_type v6 = *(char **)a1;
    if (*(void *)(a1 + 48))
    {
      std::string::value_type v7 = *(void **)(a1 + 8);
      if (!v7)
      {
        *uint64_t v4 = *(_OWORD *)v6;
        *(void *)(a1 + 8) = v6;
        goto LABEL_11;
      }
      memcpy(v7, v4, v6 - (char *)v4);
      int v14 = 0;
      while (1)
      {
        uint64_t v13 = 0;
        if (((*(uint64_t (**)(void, _OWORD **, int *))(**(void **)(a1 + 48) + 16))(*(void *)(a1 + 48), &v13, &v14) & 1) == 0)break; {
        uint64_t v8 = v14;
        }
        if (v14)
        {
          uint64_t v9 = v13;
          uint64_t v10 = *(char **)a1;
          if (v14 >= 17)
          {
            *uint64_t v13 = *(_OWORD *)v10;
            unint64_t v11 = (unint64_t)v9 + v8 - 16;
            *(void *)a1 = v11;
            *(void *)(a1 + 8) = 0;
            goto LABEL_13;
          }
          *uint64_t v4 = *(_OWORD *)v10;
          unint64_t v11 = (unint64_t)v4 + (int)v8;
          *(void *)a1 = v11;
          *(void *)(a1 + 8) = v9;
          goto LABEL_12;
        }
      }
    }
    *(unsigned char *)(a1 + 56) = 1;
LABEL_11:
    *(void *)a1 = v5;
    unint64_t v11 = v5;
LABEL_12:
    uint64_t v9 = v4;
LABEL_13:
    unint64_t v2 = (unint64_t)v9 + (int)v2 - (int)v6;
    if (v2 < v11) {
      return (_OWORD *)v2;
    }
  }
  return v4;
}

uint64_t sub_188A528(_DWORD *a1, char *__src, int a3, _OWORD *__dst)
{
  uint64_t v4 = __dst;
  int v5 = a3;
  int v7 = *a1 - __dst + 16;
  if (v7 < a3)
  {
    do
    {
      memcpy(v4, __src, v7);
      v5 -= v7;
      __src += v7;
      uint64_t v4 = sub_188A3FC((uint64_t)a1, (int)v4 + v7);
      int v7 = *a1 - v4 + 16;
    }
    while (v5 > v7);
  }
  memcpy(v4, __src, v5);
  return (uint64_t)v4 + v5;
}

char *sub_188A5C8(uint64_t a1, void *__src, uint64_t a3, char *__dst)
{
  uint64_t v8 = *(void *)a1 - (void)__dst;
  if (v8 + 16 <= (int)a3)
  {
    uint64_t v9 = sub_188A384(a1, __dst);
    if (((*(uint64_t (**)(void, void *, uint64_t))(**(void **)(a1 + 48) + 40))(*(void *)(a1 + 48), __src, a3) & 1) == 0)
    {
      *(unsigned char *)(a1 + 56) = 1;
      uint64_t v9 = (char *)(a1 + 16);
      *(void *)a1 = a1 + 32;
    }
    return v9;
  }
  if (v8 >= (int)a3)
  {
    memcpy(__dst, __src, (int)a3);
    return &__dst[(int)a3];
  }

  return (char *)sub_188A528((_DWORD *)a1, (char *)__src, a3, __dst);
}

char *sub_188A6CC(void *a1, int a2, void **a3, unsigned char *a4)
{
  if (*a1 <= (unint64_t)a4) {
    a4 = sub_188A3FC((uint64_t)a1, (int)a4);
  }
  if (*((char *)a3 + 23) >= 0) {
    uint64_t v7 = *((unsigned __int8 *)a3 + 23);
  }
  else {
    uint64_t v7 = *((unsigned int *)a3 + 2);
  }
  unsigned int v8 = (8 * a2) | 2;
  *a4 = (8 * a2) | 2;
  if (v8 > 0x7F)
  {
    *a4 = (8 * a2) | 0x82;
    unsigned int v10 = (8 * a2) >> 7;
    a4[1] = v10;
    uint64_t v9 = a4 + 2;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v9 - 1) |= 0x80u;
        unsigned int v11 = v10 >> 14;
        v10 >>= 7;
        *v9++ = v10;
      }
      while (v11);
    }
  }
  else
  {
    uint64_t v9 = a4 + 1;
  }
  if (v7 >= 0x80)
  {
    unsigned int v16 = v7;
    do
    {
      *v9++ = v16 | 0x80;
      unsigned int v12 = v16 >> 7;
      unsigned int v17 = v16 >> 14;
      v16 >>= 7;
    }
    while (v17);
  }
  else
  {
    LOBYTE(v12) = v7;
  }
  *uint64_t v9 = v12;
  uint64_t v13 = v9 + 1;
  if (*((char *)a3 + 23) >= 0) {
    int v14 = a3;
  }
  else {
    int v14 = *a3;
  }

  return sub_188A7DC((uint64_t)a1, v14, v7, v13);
}

char *sub_188A7DC(uint64_t a1, void *a2, uint64_t a3, char *__dst)
{
  if (*(unsigned char *)(a1 + 57))
  {
    return sub_188A5C8(a1, a2, a3, __dst);
  }
  else if (*(void *)a1 - (void)__dst < (int)a3)
  {
    return (char *)sub_188A528((_DWORD *)a1, (char *)a2, a3, __dst);
  }
  else
  {
    uint64_t v6 = (int)a3;
    memcpy(__dst, a2, (int)a3);
    return &__dst[v6];
  }
}

uint64_t sub_188A868(_DWORD *a1, int a2, uint64_t a3, unsigned char *a4)
{
  if (*(void *)a1 <= (unint64_t)a4) {
    a4 = sub_188A3FC((uint64_t)a1, (int)a4);
  }
  if (*(char *)(a3 + 23) >= 0) {
    LODWORD(v7) = *(unsigned __int8 *)(a3 + 23);
  }
  else {
    uint64_t v7 = *(void *)(a3 + 8);
  }
  unsigned int v8 = (8 * a2) | 2;
  *a4 = (8 * a2) | 2;
  if (v8 > 0x7F)
  {
    *a4 = (8 * a2) | 0x82;
    unsigned int v10 = (8 * a2) >> 7;
    a4[1] = v10;
    uint64_t v9 = a4 + 2;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v9 - 1) |= 0x80u;
        unsigned int v11 = v10 >> 14;
        v10 >>= 7;
        *v9++ = v10;
      }
      while (v11);
    }
  }
  else
  {
    uint64_t v9 = a4 + 1;
  }
  if (v7 >= 0x80)
  {
    unsigned int v17 = v7;
    do
    {
      *v9++ = v17 | 0x80;
      unsigned int v12 = v17 >> 7;
      unsigned int v18 = v17 >> 14;
      v17 >>= 7;
    }
    while (v18);
  }
  else
  {
    LOBYTE(v12) = v7;
  }
  *uint64_t v9 = v12;
  uint64_t v13 = v9 + 1;
  if (*(char *)(a3 + 23) >= 0) {
    int v14 = (char *)a3;
  }
  else {
    int v14 = *(char **)a3;
  }
  if (*(void *)a1 - (void)v13 < (int)v7)
  {
    return sub_188A528(a1, v14, v7, v13);
  }
  else
  {
    uint64_t v15 = (int)v7;
    memcpy(v13, v14, (int)v7);
    return (uint64_t)v13 + v15;
  }
}

unsigned char *sub_188A9CC(unsigned int a1, unsigned char *a2)
{
  *a2 |= 0x80u;
  unsigned int v3 = a1 >> 7;
  a2[1] = a1 >> 7;
  uint64_t result = a2 + 2;
  if (a1 >= 0x4000)
  {
    do
    {
      *(result - 1) |= 0x80u;
      unsigned int v5 = v3 >> 14;
      v3 >>= 7;
      *result++ = v3;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_188AA10(char *__src, size_t __n, uint64_t a3, char a4)
{
  memset(&v9[32], 0, 48);
  uint64_t v10 = 0x7FFFFFFF00000000;
  int v11 = dword_254DB90;
  unsigned int v12 = 0x80000000;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  uint64_t v13 = 0;
  uint64_t v6 = sub_188E350((uint64_t)v9, __src, __n);
  if ((*(uint64_t (**)(uint64_t, char *, unsigned char *))(*(void *)a3 + 88))(a3, v6, v9)) {
    BOOL v7 = v10 == 0;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7)
  {
    if (a4 & 2) != 0 || ((*(uint64_t (**)(uint64_t))(*(void *)a3 + 48))(a3)) {
      return 1;
    }
    sub_188AC08(a3);
  }
  return 0;
}

void *sub_188AB28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "(cannot determine missing fields for lite message)");
}

void sub_188AB38(unint64_t a1@<X0>, std::string *a2@<X8>)
{
  uint64_t v2 = 0;
  v6[0] = "MessageLite at 0x";
  v6[1] = 17;
  unint64_t v3 = a1 | 1;
  do
  {
    *((unsigned char *)&v5[5] + v2 + 7) = a0123456789abcd[a1 & 0xF];
    a1 >>= 4;
    --v2;
    BOOL v4 = v3 > 0xF;
    v3 >>= 4;
  }
  while (v4);
  v5[0] = (char *)&v5[6] + v2;
  v5[1] = -v2;
  sub_1880DBC((uint64_t)v6, (uint64_t)v5, a2);
}

void sub_188AC08(uint64_t a1)
{
  LODWORD(v9[0]) = 2;
  v9[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodules/"
          "protobuf-mirror/src/google/protobuf/message_lite.cc";
  int v10 = 133;
  memset(&v11, 0, sizeof(v11));
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "Can't ", 6uLL);
  std::string::append(&__p, "parse", 5uLL);
  std::string::append(&__p, " message of type \"", 0x12uLL);
  (*(void (**)(std::string::value_type **__return_ptr, uint64_t))(*(void *)a1 + 16))(&v12, a1);
  if ((v14 & 0x80u) == 0) {
    uint64_t v2 = (const std::string::value_type *)&v12;
  }
  else {
    uint64_t v2 = v12;
  }
  if ((v14 & 0x80u) == 0) {
    std::string::size_type v3 = v14;
  }
  else {
    std::string::size_type v3 = v13;
  }
  std::string::append(&__p, v2, v3);
  if ((char)v14 < 0) {
    operator delete(v12);
  }
  std::string::append(&__p, "\" because it is missing required fields: ", 0x29uLL);
  (*(void (**)(std::string::value_type **__return_ptr, uint64_t))(*(void *)a1 + 56))(&v12, a1);
  if ((v14 & 0x80u) == 0) {
    BOOL v4 = (const std::string::value_type *)&v12;
  }
  else {
    BOOL v4 = v12;
  }
  if ((v14 & 0x80u) == 0) {
    std::string::size_type v5 = v14;
  }
  else {
    std::string::size_type v5 = v13;
  }
  std::string::append(&__p, v4, v5);
  if ((char)v14 < 0) {
    operator delete(v12);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::string::append(&v11, (const std::string::value_type *)p_p, size);
  sub_188CF08(v9);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
}

void sub_188ADBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_188AE18(uint64_t a1, void *a2)
{
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 24))(a1);
  uint64_t v4 = v3;
  if (a2 && v3) {
    sub_18817C8(a2, v3, (uint64_t)sub_188DEC4);
  }
  return v4;
}

uint64_t sub_188AEA0(uint64_t a1, uint64_t *a2)
{
  (*(void (**)(uint64_t))(*(void *)a1 + 40))(a1);
  sub_188DB70(v5, a2);
  return sub_188AA10(v5[0], (size_t)v5[1], a1, 1);
}

uint64_t sub_188AF1C(uint64_t a1, char *a2, int a3)
{
  size_t v5 = a3;
  if (a3 < 0) {
    sub_188D0B0(a3, "string length exceeds max size");
  }
  (*(void (**)(uint64_t))(*(void *)a1 + 40))(a1);

  return sub_188AA10(a2, v5, a1, 1);
}

BOOL sub_188AFB4(uint64_t a1, std::string *a2)
{
  uint64_t v2 = a2;
  if (SHIBYTE(a2->__r_.__value_.__r.__words[2]) < 0) {
    std::string::size_type size = a2->__r_.__value_.__l.__size_;
  }
  else {
    std::string::size_type size = HIBYTE(a2->__r_.__value_.__r.__words[2]);
  }
  unint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
  unint64_t v6 = v5;
  unint64_t v7 = v5 >> 31;
  if (v5 >> 31)
  {
    LODWORD(v13[0]) = 2;
    v13[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodul"
             "es/protobuf-mirror/src/google/protobuf/message_lite.cc";
    int v14 = 457;
    memset(&v15, 0, sizeof(v15));
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if ((v12 & 0x80u) == 0) {
      unsigned int v8 = __p;
    }
    else {
      unsigned int v8 = (void **)__p[0];
    }
    if ((v12 & 0x80u) == 0) {
      std::string::size_type v9 = v12;
    }
    else {
      std::string::size_type v9 = (std::string::size_type)__p[1];
    }
    std::string::append(&v15, (const std::string::value_type *)v8, v9);
    std::string::append(&v15, " exceeded maximum protobuf size of 2GB: ", 0x28uLL);
    __s = v18;
    std::string::size_type v17 = sub_188D378(v6, v18) - v18;
    std::string::append(&v15, __s, v17);
    sub_188CF08(v13);
    if ((char)v12 < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string::resize(v2, v5 + size, 0);
    if (SHIBYTE(v2->__r_.__value_.__r.__words[2]) < 0) {
      uint64_t v2 = (std::string *)v2->__r_.__value_.__r.__words[0];
    }
    __s = (char *)v2 + size + v6;
    std::string::size_type v17 = 0;
    uint64_t v19 = 0;
    __int16 v20 = 0;
    char v21 = byte_25502A0 & 1;
    (*(void (**)(uint64_t))(*(void *)a1 + 96))(a1);
  }
  return v7 == 0;
}

void sub_188B1C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_188B208(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 72))(a1);
  unint64_t v7 = v6;
  if ((unint64_t)v6 >> 31)
  {
    LODWORD(v13[0]) = 2;
    v13[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodul"
             "es/protobuf-mirror/src/google/protobuf/message_lite.cc";
    int v14 = 487;
    memset(&v15, 0, sizeof(v15));
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
    if ((v12 & 0x80u) == 0) {
      unsigned int v8 = __p;
    }
    else {
      unsigned int v8 = (void **)__p[0];
    }
    if ((v12 & 0x80u) == 0) {
      std::string::size_type v9 = v12;
    }
    else {
      std::string::size_type v9 = (std::string::size_type)__p[1];
    }
    std::string::append(&v15, (const std::string::value_type *)v8, v9);
    std::string::append(&v15, " exceeded maximum protobuf size of 2GB: ", 0x28uLL);
    __s = v18;
    std::string::size_type v17 = sub_188D378(v7, v18) - v18;
    std::string::append(&v15, __s, v17);
    sub_188CF08(v13);
    if ((char)v12 < 0) {
      operator delete(__p[0]);
    }
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
    return 0;
  }
  if (v6 > a3) {
    return 0;
  }
  __s = (std::string::value_type *)(a2 + v6);
  std::string::size_type v17 = 0;
  uint64_t v19 = 0;
  __int16 v20 = 0;
  char v21 = byte_25502A0 & 1;
  (*(void (**)(uint64_t, uint64_t, std::string::value_type **))(*(void *)a1 + 96))(a1, a2, &__s);
  return 1;
}

void sub_188B3E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
}

BOOL sub_188B428@<W0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  BOOL result = sub_188AFB4(a1, (std::string *)a2);
  if (!result)
  {
    if (*(char *)(a2 + 23) < 0)
    {
      **(unsigned char **)a2 = 0;
      *(void *)(a2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)a2 = 0;
      *(unsigned char *)(a2 + 23) = 0;
    }
  }
  return result;
}

void sub_188B47C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_188B4AC(uint64_t *a1)
{
  if (*a1) {
    uint64_t result = (*a1 & 0xFFFFFFFFFFFFFFFCLL) + 8;
  }
  else {
    uint64_t result = sub_188DBD8(a1);
  }
  if (*(char *)(result + 23) < 0)
  {
    **(unsigned char **)uint64_t result = 0;
    *(void *)(result + 8) = 0;
  }
  else
  {
    *(unsigned char *)uint64_t result = 0;
    *(unsigned char *)(result + 23) = 0;
  }
  return result;
}

std::string *sub_188B4F8(uint64_t *a1, uint64_t a2)
{
  if (*a1) {
    uint64_t v3 = (std::string *)((*a1 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  else {
    uint64_t v3 = (std::string *)sub_188DBD8(a1);
  }
  int v4 = *(char *)(a2 + 23);
  if (v4 >= 0) {
    unint64_t v5 = (const std::string::value_type *)a2;
  }
  else {
    unint64_t v5 = *(const std::string::value_type **)a2;
  }
  if (v4 >= 0) {
    std::string::size_type v6 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    std::string::size_type v6 = *(void *)(a2 + 8);
  }

  return std::string::append(v3, v5, v6);
}

void sub_188B570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_188B6A8();
  std::mutex::lock((std::mutex *)(v4 + 24));
  unint64_t v5 = *(void **)(v4 + 8);
  unint64_t v6 = *(void *)(v4 + 16);
  if ((unint64_t)v5 >= v6)
  {
    uint64_t v8 = ((uint64_t)v5 - *(void *)v4) >> 4;
    unint64_t v9 = v8 + 1;
    if ((unint64_t)(v8 + 1) >> 60) {
      sub_2E00();
    }
    uint64_t v10 = v6 - *(void *)v4;
    if (v10 >> 3 > v9) {
      unint64_t v9 = v10 >> 3;
    }
    if ((unint64_t)v10 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v11 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v11 = v9;
    }
    if (v11) {
      unsigned __int8 v12 = (char *)sub_1121C00(v4 + 16, v11);
    }
    else {
      unsigned __int8 v12 = 0;
    }
    std::string::size_type v13 = &v12[16 * v8];
    int v14 = &v12[16 * v11];
    *(void *)std::string::size_type v13 = a1;
    *((void *)v13 + 1) = a2;
    unint64_t v7 = v13 + 16;
    unsigned int v16 = *(char **)v4;
    std::string v15 = *(char **)(v4 + 8);
    if (v15 != *(char **)v4)
    {
      do
      {
        *((_OWORD *)v13 - 1) = *((_OWORD *)v15 - 1);
        v13 -= 16;
        v15 -= 16;
      }
      while (v15 != v16);
      std::string v15 = *(char **)v4;
    }
    *(void *)uint64_t v4 = v13;
    *(void *)(v4 + 8) = v7;
    *(void *)(v4 + 16) = v14;
    if (v15) {
      operator delete(v15);
    }
  }
  else
  {
    *unint64_t v5 = a1;
    v5[1] = a2;
    unint64_t v7 = v5 + 2;
  }
  *(void *)(v4 + 8) = v7;

  std::mutex::unlock((std::mutex *)(v4 + 24));
}

void sub_188B690(_Unwind_Exception *a1)
{
  std::mutex::unlock(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_188B6A8()
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_254DBA8, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_254DBA8))
  {
    operator new();
  }
  return qword_254DBA0;
}

void sub_188B738(_Unwind_Exception *a1)
{
}

_OWORD *sub_188B760(uint64_t a1)
{
  uint64_t v2 = *(_OWORD **)(a1 + 16);
  if (v2)
  {
    if (v2 == (_OWORD *)(a1 + 40))
    {
      *uint64_t v2 = *(_OWORD *)*(void *)(a1 + 8);
      if (*(int *)(a1 + 84) < 1)
      {
LABEL_14:
        if (*(void *)(a1 + 72) == 2) {
          *(void *)(a1 + 72) = *(void *)(a1 + 8) - (void)v2;
        }
        uint64_t v3 = a1 + 56;
        *(void *)(a1 + 8) = a1 + 56;
        *(void *)(a1 + 16) = 0;
        *(_DWORD *)(a1 + 24) = 0;
      }
      else
      {
        __src = 0;
        while (1)
        {
          if (!(*(unsigned int (**)(void, void **, uint64_t))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32), &__src, a1 + 24))
          {
            *(_DWORD *)(a1 + 84) = 0;
            goto LABEL_14;
          }
          size_t v4 = *(unsigned int *)(a1 + 24);
          *(_DWORD *)(a1 + 84) -= v4;
          if ((int)v4 >= 17) {
            break;
          }
          if ((int)v4 >= 1)
          {
            memcpy((void *)(a1 + 56), __src, v4);
            unint64_t v5 = (void *)(a1 + 72);
            unint64_t v6 = *(void *)(a1 + 72);
            uint64_t v3 = (uint64_t)v2 + v4;
            *(void *)(a1 + 8) = (char *)v2 + v4;
            *(void *)(a1 + 16) = v2;
            if (v6 < 2) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
        unint64_t v5 = (void *)(a1 + 72);
        unint64_t v7 = *(void *)(a1 + 72);
        uint64_t v3 = a1 + 56;
        uint64_t v8 = __src;
        *(_OWORD *)(a1 + 56) = *(_OWORD *)__src;
        *(void *)(a1 + 8) = a1 + 56;
        *(void *)(a1 + 16) = v8;
        if (v7 <= 1) {
          goto LABEL_19;
        }
LABEL_18:
        *unint64_t v5 = 1;
      }
    }
    else
    {
      uint64_t v3 = (uint64_t)v2 + *(int *)(a1 + 24) - 16;
      *(void *)(a1 + 8) = v3;
      *(void *)(a1 + 16) = a1 + 40;
      if (*(void *)(a1 + 72) == 1) {
        *(void *)(a1 + 72) = 2;
      }
    }
LABEL_19:
    int v9 = *(_DWORD *)(a1 + 28) + v2 - v3;
    *(_DWORD *)(a1 + 28) = v9;
    *(void *)a1 = v3 + (v9 & (v9 >> 31));
  }
  else
  {
    *(void *)a1 = *(void *)(a1 + 8);
    *(_DWORD *)(a1 + 80) = 1;
  }
  return v2;
}

_OWORD *sub_188B8F8(uint64_t a1, int a2, int a3)
{
  uint64_t v3 = *(_OWORD **)(a1 + 16);
  if (v3)
  {
    if (v3 == (_OWORD *)(a1 + 40))
    {
      _OWORD *v3 = *(_OWORD *)*(void *)(a1 + 8);
      if (*(int *)(a1 + 84) < 1)
      {
LABEL_40:
        if (*(void *)(a1 + 72) == 2) {
          *(void *)(a1 + 72) = *(void *)(a1 + 8) - (void)v3;
        }
        *(void *)(a1 + 8) = a1 + 56;
        *(void *)(a1 + 16) = 0;
        *(_DWORD *)(a1 + 24) = 0;
      }
      else
      {
        int v5 = a3;
        if ((a3 & 0x80000000) == 0 && a2 <= 15)
        {
          unint64_t v6 = a1 + 56;
          unint64_t v7 = (unsigned __int8 *)v3 + a2;
          uint64_t v8 = v7;
          while (2)
          {
            int v9 = (char)*v8++;
            int v10 = v9;
            if (v9 < 0)
            {
              int v10 = v10 + (*v8 << 7) - 128;
              if ((char)*v8 < 0)
              {
                uint64_t v8 = v7 + 3;
                uint64_t v14 = -21;
                while (1)
                {
                  v10 += (*(v8 - 1) - 1) << (v14 + 35);
                  if (((char)*(v8 - 1) & 0x80000000) == 0) {
                    break;
                  }
                  ++v8;
                  v14 += 7;
                  if (!v14) {
                    goto LABEL_33;
                  }
                }
              }
              else
              {
                uint64_t v8 = v7 + 2;
              }
            }
            if ((unint64_t)v8 <= v6)
            {
              if (!v10) {
                goto LABEL_40;
              }
              switch(v10 & 7)
              {
                case 0:
                  __src = 0;
                  uint64_t v8 = sub_188D8D8((char *)v8, &__src);
                  if (!v8) {
                    break;
                  }
                  goto LABEL_32;
                case 1:
                  v8 += 8;
                  goto LABEL_32;
                case 2:
                  int v11 = *v8;
                  if ((char)*v8 < 0)
                  {
                    uint64_t v12 = sub_188C1C4((uint64_t)v8, v11);
                    if (!v12) {
                      break;
                    }
                  }
                  else
                  {
                    uint64_t v12 = (uint64_t)(v8 + 1);
                  }
                  if ((uint64_t)(v6 - v12) < v11) {
                    break;
                  }
                  uint64_t v8 = (unsigned __int8 *)(v12 + v11);
LABEL_32:
                  unint64_t v7 = v8;
                  if ((unint64_t)v8 >= v6) {
                    break;
                  }
                  continue;
                case 3:
                  ++v5;
                  goto LABEL_32;
                case 4:
                  BOOL v13 = __OFSUB__(v5--, 1);
                  if (v5 < 0 != v13) {
                    goto LABEL_40;
                  }
                  goto LABEL_32;
                case 5:
                  v8 += 4;
                  goto LABEL_32;
                default:
                  goto LABEL_33;
              }
            }
            break;
          }
        }
LABEL_33:
        __src = 0;
        while (1)
        {
          if (!(*(unsigned int (**)(void, void **, uint64_t))(**(void **)(a1 + 32) + 16))(*(void *)(a1 + 32), &__src, a1 + 24))
          {
            *(_DWORD *)(a1 + 84) = 0;
            goto LABEL_40;
          }
          size_t v15 = *(unsigned int *)(a1 + 24);
          *(_DWORD *)(a1 + 84) -= v15;
          if ((int)v15 >= 17) {
            break;
          }
          if ((int)v15 >= 1)
          {
            memcpy((void *)(a1 + 56), __src, v15);
            unint64_t v17 = *(void *)(a1 + 72);
            unsigned int v16 = (void *)(a1 + 72);
            *(v16 - 8) = (char *)v3 + v15;
            *(v16 - 7) = v3;
            if (v17 < 2) {
              return v3;
            }
            goto LABEL_44;
          }
        }
        unint64_t v18 = *(void *)(a1 + 72);
        unsigned int v16 = (void *)(a1 + 72);
        uint64_t v19 = __src;
        *((_OWORD *)v16 - 1) = *(_OWORD *)__src;
        *(v16 - 8) = v16 - 2;
        *(v16 - 7) = v19;
        if (v18 <= 1) {
          return v3;
        }
LABEL_44:
        *unsigned int v16 = 1;
      }
    }
    else
    {
      *(void *)(a1 + 8) = (char *)v3 + *(int *)(a1 + 24) - 16;
      *(void *)(a1 + 16) = a1 + 40;
      if (*(void *)(a1 + 72) == 1) {
        *(void *)(a1 + 72) = 2;
      }
    }
  }
  return v3;
}

char *sub_188BB90(uint64_t a1, int a2, int a3)
{
  if (*(_DWORD *)(a1 + 28) < a2) {
    return 0;
  }
  int v4 = a2;
  while (1)
  {
    unint64_t v6 = sub_188B8F8(a1, v4, a3);
    if (!v6) {
      break;
    }
    uint64_t v7 = *(void *)(a1 + 8);
    int v8 = *(_DWORD *)(a1 + 28) + v6 - v7;
    *(_DWORD *)(a1 + 28) = v8;
    uint64_t result = (char *)v6 + v4;
    int v4 = result - v7;
    if ((int)result - (int)v7 < 0)
    {
      *(void *)a1 = v7 + (v8 & (v8 >> 31));
      return result;
    }
  }
  if (v4) {
    return 0;
  }
  uint64_t result = *(char **)(a1 + 8);
  *(void *)a1 = result;
  *(_DWORD *)(a1 + 80) = 1;
  return result;
}

_OWORD *sub_188BC3C(uint64_t a1, int a2, int a3)
{
  int v5 = *(_DWORD *)(a1 + 8) - a2 + 16;
  while (*(void *)(a1 + 16) && *(int *)(a1 + 28) >= 17)
  {
    uint64_t result = sub_188B760(a1);
    if (!result) {
      return result;
    }
    a3 -= v5;
    int v5 = *(_DWORD *)(a1 + 8) - result;
    if (a3 <= v5) {
      return (_OWORD *)((char *)result + a3 + 16);
    }
  }
  return 0;
}

const std::string::value_type *sub_188BCBC(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  int v5 = a3;
  unint64_t v6 = __s;
  if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0)
  {
    *this->__r_.__value_.__l.__data_ = 0;
    this->__r_.__value_.__l.__size_ = 0;
  }
  else
  {
    this->__r_.__value_.__s.__data_[0] = 0;
    *((unsigned char *)&this->__r_.__value_.__s + 23) = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8 - (uint64_t)__s + *(int *)(a1 + 28) >= a3)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
    }
    else {
      std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    if (a3 >= 50000000) {
      int v10 = 50000000;
    }
    else {
      int v10 = a3;
    }
    std::string::reserve(this, size + v10);
    uint64_t v8 = *(void *)(a1 + 8);
  }
  int v11 = v8 - v6 + 16;
  while (*(void *)(a1 + 16))
  {
    std::string::append(this, v6, v11);
    if (*(int *)(a1 + 28) < 17) {
      break;
    }
    uint64_t result = (const std::string::value_type *)sub_188B760(a1);
    if (!result) {
      return result;
    }
    v5 -= v11;
    unint64_t v6 = result + 16;
    int v11 = *(_DWORD *)(a1 + 8) - result;
    if (v5 <= v11)
    {
      std::string::append(this, v6, v5);
      return &v6[v5];
    }
  }
  return 0;
}

const std::string::value_type *sub_188BDD4(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  int v5 = a3;
  unint64_t v6 = __s;
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8 - (uint64_t)__s + *(int *)(a1 + 28) >= a3)
  {
    if (SHIBYTE(this->__r_.__value_.__r.__words[2]) < 0) {
      std::string::size_type size = this->__r_.__value_.__l.__size_;
    }
    else {
      std::string::size_type size = HIBYTE(this->__r_.__value_.__r.__words[2]);
    }
    if (a3 >= 50000000) {
      int v10 = 50000000;
    }
    else {
      int v10 = a3;
    }
    std::string::reserve(this, size + v10);
    uint64_t v8 = *(void *)(a1 + 8);
  }
  int v11 = v8 - v6 + 16;
  while (*(void *)(a1 + 16))
  {
    std::string::append(this, v6, v11);
    if (*(int *)(a1 + 28) < 17) {
      break;
    }
    uint64_t result = (const std::string::value_type *)sub_188B760(a1);
    if (!result) {
      return result;
    }
    v5 -= v11;
    unint64_t v6 = result + 16;
    int v11 = *(_DWORD *)(a1 + 8) - result;
    if (v5 <= v11)
    {
      std::string::append(this, v6, v5);
      return &v6[v5];
    }
  }
  return 0;
}

uint64_t sub_188BEE0(uint64_t a1, unsigned __int8 *a2, _DWORD *a3)
{
  int v6 = (char)*a2;
  int v7 = *a2;
  if (v6 < 0)
  {
    uint64_t result = sub_188C1C4((uint64_t)a2, v7);
    if (!result)
    {
      *a3 = 0;
      return result;
    }
  }
  else
  {
    uint64_t result = (uint64_t)(a2 + 1);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  int v10 = v7 + result - v9;
  *(void *)a1 = v9 + (v10 & (v10 >> 31));
  LODWORD(v9) = *(_DWORD *)(a1 + 28);
  *(_DWORD *)(a1 + 28) = v10;
  *a3 = v9 - v10;
  LODWORD(v9) = *(_DWORD *)(a1 + 88);
  BOOL v11 = __OFSUB__(v9, 1);
  LODWORD(v9) = v9 - 1;
  *(_DWORD *)(a1 + 88) = v9;
  if ((int)v9 < 0 != v11) {
    return 0;
  }
  return result;
}

uint64_t sub_188BF6C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0(a1, a3, &v7);
  if (result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 88))(a2, result, a1);
  }
  ++*(_DWORD *)(a1 + 88);
  if (*(_DWORD *)(a1 + 80)) {
    return 0;
  }
  int v6 = *(_DWORD *)(a1 + 28) + v7;
  *(_DWORD *)(a1 + 28) = v6;
  *(void *)a1 = *(void *)(a1 + 8) + (v6 & (v6 >> 31));
  return result;
}

void sub_188C020(int a1, unint64_t a2, std::string *this)
{
  unint64_t v5 = (8 * a1);
  if (v5 < 0x80)
  {
    LOBYTE(v6) = 8 * a1;
  }
  else
  {
    do
    {
      std::string::push_back(this, v5 | 0x80);
      unint64_t v6 = v5 >> 7;
      unint64_t v7 = v5 >> 14;
      v5 >>= 7;
    }
    while (v7);
  }
  std::string::push_back(this, v6);
  if (a2 < 0x80)
  {
    LOBYTE(v8) = a2;
  }
  else
  {
    do
    {
      std::string::push_back(this, a2 | 0x80);
      unint64_t v8 = a2 >> 7;
      unint64_t v9 = a2 >> 14;
      a2 >>= 7;
    }
    while (v9);
  }

  std::string::push_back(this, v8);
}

uint64_t sub_188C0D0(uint64_t a1, int a2)
{
  uint64_t result = a1 + 3;
  uint64_t v4 = -21;
  while (1)
  {
    a2 += (*(unsigned __int8 *)(result - 1) - 1) << (v4 + 35);
    if ((*(char *)(result - 1) & 0x80000000) == 0) {
      break;
    }
    ++result;
    v4 += 7;
    if (!v4)
    {
      while (*(char *)(a1 + v4 + 5) < 0)
      {
        uint64_t result = 0;
        if (++v4 == 5) {
          return result;
        }
      }
      return a1 + v4 + 6;
    }
  }
  return result;
}

uint64_t sub_188C138(uint64_t a1, uint64_t a2)
{
  a2 = a2;
  uint64_t result = a1 + 3;
  uint64_t v4 = (char *)(a1 + 2);
  uint64_t v5 = 14;
  while (1)
  {
    int v6 = *v4++;
    a2 += (v6 - 1) << v5;
    if ((v6 & 0x80000000) == 0) {
      break;
    }
    ++result;
    v5 += 7;
    if (v5 == 70) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_188C180(uint64_t a1, int a2)
{
  uint64_t result = a1 + 3;
  uint64_t v4 = (char *)(a1 + 2);
  uint64_t v5 = -21;
  while (1)
  {
    int v6 = *v4++;
    a2 += (v6 - 1) << (v5 + 35);
    if ((v6 & 0x80000000) == 0) {
      break;
    }
    ++result;
    v5 += 7;
    if (!v5) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_188C1C4(uint64_t a1, int a2)
{
  uint64_t result = a1 + 2;
  uint64_t v4 = -21;
  while (1)
  {
    a2 += (*(unsigned __int8 *)(result - 1) - 1) << (v4 + 28);
    if ((*(char *)(result - 1) & 0x80000000) == 0) {
      break;
    }
    ++result;
    v4 += 7;
    if (!v4)
    {
      unsigned int v5 = *(unsigned __int8 *)(a1 + 4);
      uint64_t v6 = a1 + 5;
      if (a2 + (v5 << 28) - 0x10000000 > 0x7FFFFFEF) {
        uint64_t v6 = 0;
      }
      if (v5 <= 7) {
        return v6;
      }
      else {
        return 0;
      }
    }
  }
  return result;
}

const std::string::value_type *sub_188C244(std::string *__dst, char *a2, uint64_t a3)
{
  int v5 = *a2;
  if (*a2 < 0)
  {
    uint64_t result = (const std::string::value_type *)sub_188C1C4((uint64_t)a2, *a2);
    if (!result) {
      return result;
    }
    uint64_t v6 = (std::string::value_type *)result;
    int v5 = v8;
  }
  else
  {
    uint64_t v6 = a2 + 1;
  }

  return sub_1882098(a3, v6, v5, __dst);
}

unsigned __int8 *sub_188C2BC(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_188E7A8(a3, a2, a1);
}

unsigned __int8 *sub_188C2CC(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_188E9A0(a3, a2, a1);
}

unsigned __int8 *sub_188C2DC(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_188EAF8(a3, a2, a1);
}

unsigned __int8 *sub_188C2EC(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_188ECF0(a3, a2, a1);
}

unsigned __int8 *sub_188C2FC(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_188EE48(a3, a2, a1);
}

unsigned __int8 *sub_188C30C(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_188F04C(a3, a2, a1);
}

unsigned __int8 *sub_188C32C(unsigned int *a1, unsigned __int8 *a2, uint64_t a3)
{
  return sub_188F250(a3, a2, a1);
}

char *sub_188C340(unsigned int *a1, char *a2, uint64_t a3)
{
  int v5 = *a2;
  if (*a2 < 0)
  {
    uint64_t result = (char *)sub_188C1C4((uint64_t)a2, *a2);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    int v5 = v8;
  }
  else
  {
    uint64_t v6 = a2 + 1;
  }

  return sub_188F450(a3, v6, v5, a1);
}

char *sub_188C3D8(unsigned int *a1, char *a2, uint64_t a3)
{
  int v5 = *a2;
  if (*a2 < 0)
  {
    uint64_t result = (char *)sub_188C1C4((uint64_t)a2, *a2);
    if (!result) {
      return result;
    }
    uint64_t v6 = result;
    int v5 = v8;
  }
  else
  {
    uint64_t v6 = a2 + 1;
  }

  return sub_188F560(a3, v6, v5, a1);
}

char *sub_188C46C(uint64_t a1, char *a2, uint64_t a3)
{
  int v10 = a2;
  while (1)
  {
    if (sub_11947B8(a3, &v10, *(_DWORD *)(a3 + 92))) {
      return v10;
    }
    int v5 = v10 + 1;
    unsigned int v6 = *v10;
    if (*v10 < 0)
    {
      unsigned int v6 = v6 + (*v5 << 7) - 128;
      if (*v5 < 0)
      {
        int v5 = v10 + 3;
        uint64_t v8 = -21;
        while (1)
        {
          v6 += (*(v5 - 1) - 1) << (v8 + 35);
          if ((*(v5 - 1) & 0x80000000) == 0) {
            break;
          }
          ++v5;
          v8 += 7;
          if (!v8) {
            return 0;
          }
        }
      }
      else
      {
        int v5 = v10 + 2;
      }
    }
    int v10 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    int v10 = (char *)sub_188C558(v6, a1);
    if (!v10) {
      return 0;
    }
  }
  *(_DWORD *)(a3 + 80) = v6 - 1;
  return v5;
}

unsigned __int8 *sub_188C558(unint64_t a1, std::string **a2, char *a3, int32x2_t *a4)
{
  unint64_t v4 = a1 >> 3;
  if (!(a1 >> 3)) {
    return 0;
  }
  int v5 = (unsigned __int8 *)a3;
  switch(a1 & 7)
  {
    case 0uLL:
      v9[0] = 0;
      int v5 = sub_188D8D8(a3, v9);
      if (v5) {
        sub_188F680(a2, v4, (unint64_t)v9[0]);
      }
      return v5;
    case 1uLL:
      int v5 = (unsigned __int8 *)(a3 + 8);
      sub_188F748((std::string *)a2, v4, *(void *)a3);
      return v5;
    case 2uLL:
      unint64_t v7 = (unsigned __int8 *)sub_188F804(a2, v4, a3, (uint64_t)a4);
      goto LABEL_11;
    case 3uLL:
      unint64_t v7 = (unsigned __int8 *)sub_188F970(a2, v4, a3, a4);
LABEL_11:
      int v5 = v7;
      break;
    case 4uLL:
      LODWORD(v9[0]) = 3;
      v9[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodu"
              "les/protobuf-mirror/src/google/protobuf/parse_context.h";
      int v10 = 820;
      memset(&__p, 0, sizeof(__p));
      std::string::append(&__p, "Can't happen", 0xCuLL);
      sub_188CF08(v9);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
      break;
    case 5uLL:
      int v5 = (unsigned __int8 *)(a3 + 4);
      sub_188FA9C((std::string *)a2, v4, *(_DWORD *)a3);
      break;
    default:
      return 0;
  }
  return v5;
}

void sub_188C6A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_188C6F4(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
    int v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
    int v5 = v4 - 1;
  }
  unint64_t v4 = (uint64_t *)*(v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  if (v4) {
  else
  }
    uint64_t v8 = operator new(v6 + 8);
  void *v8 = v4;
  unint64_t v9 = v8 + 1;
  a1[1] = v6;
  *((void *)a1 + 1) = v9;
  size_t v10 = *a1;
  if ((int)v10 >= 1) {
    memcpy(v9, v5 + 1, v10);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

void sub_188C80C(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
    int v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
    int v5 = v4 - 1;
  }
  unint64_t v4 = (uint64_t *)*(v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 4 * v6;
  if (v4) {
  else
  }
    unint64_t v9 = operator new(v8 + 8);
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 4 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

uint64_t sub_188C928(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    LODWORD(v5) = 3;
    unsigned int v6 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodules/p"
         "rotobuf-mirror/src/google/protobuf/repeated_field.h";
    int v7 = 1337;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (index) >= (0): ", 0x1EuLL);
    sub_188CF08(&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (*(_DWORD *)a1 <= a2)
  {
    LODWORD(v5) = 3;
    unsigned int v6 = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodules/p"
         "rotobuf-mirror/src/google/protobuf/repeated_field.h";
    int v7 = 1338;
    memset(&__p, 0, sizeof(__p));
    std::string::append(&__p, "CHECK failed: (index) < (current_size_): ", 0x29uLL);
    sub_188CF08(&v5);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  return *(void *)(a1 + 8) + 4 * a2;
}

void sub_188CA14(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_188CA54(unsigned int *a1, int a2)
{
  int v2 = a1[1];
  if (v2 >= a2) {
    return;
  }
  if (v2 < 1)
  {
    unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
    int v5 = 0;
    if (!v2)
    {
      if (a2 < 4) {
        goto LABEL_6;
      }
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
    int v5 = v4 - 1;
  }
  unint64_t v4 = (uint64_t *)*(v4 - 1);
  if (a2 < 4)
  {
LABEL_6:
    unsigned int v6 = 4;
    goto LABEL_13;
  }
  if (v2 > 0x3FFFFFFF)
  {
    unsigned int v6 = 0x7FFFFFFF;
    goto LABEL_13;
  }
LABEL_10:
  int v7 = 2 * v2;
  if (v7 <= a2) {
    unsigned int v6 = a2;
  }
  else {
    unsigned int v6 = v7;
  }
LABEL_13:
  uint64_t v8 = 8 * v6;
  if (v4) {
  else
  }
    unint64_t v9 = operator new(v8 + 8);
  *unint64_t v9 = v4;
  size_t v10 = v9 + 1;
  a1[1] = v6;
  *((void *)a1 + 1) = v10;
  uint64_t v11 = *a1;
  if ((int)v11 >= 1) {
    memcpy(v10, v5 + 1, 8 * v11);
  }
  if (v5 && !*v5)
  {
    operator delete(v5);
  }
}

void sub_188CB6C(void *a1)
{
  int v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = (uint64_t *)(v2 + 2);
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        uint64_t v5 = *v3;
        if (*v3)
        {
          if (*(char *)(v5 + 23) < 0) {
            operator delete(*(void **)v5);
          }
          operator delete();
        }
        ++v3;
        --v4;
      }
      while (v4);
      int v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t sub_188CC00(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 8);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = *(void *)(result + 16) + 8;
    do
    {
      uint64_t v3 = *(void *)v2;
      if (*(char *)(*(void *)v2 + 23) < 0)
      {
        **(unsigned char **)uint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
      }
      else
      {
        *(unsigned char *)uint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
      }
      v2 += 8;
      --v1;
    }
    while (v1);
    *(_DWORD *)(result + 8) = 0;
  }
  return result;
}

uint64_t sub_188CC60(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 8);
  BOOL v3 = __OFSUB__(a2, v2);
  int v4 = a2 - v2;
  if (!((v4 < 0) ^ v3 | (v4 == 0))) {
    return sub_188CCE4(result, v4);
  }
  return result;
}

uint64_t sub_188CC74(uint64_t result, int a2, int a3)
{
  BOOL v3 = *(int **)(result + 16);
  if (v3)
  {
    LODWORD(v4) = a3 + a2;
    LODWORD(v5) = *v3;
    if (a3 + a2 < *v3)
    {
      uint64_t v4 = (int)v4;
      do
      {
        *(void *)((char *)&v3[2 * v4] + 8 - 8 * a3) = *(void *)&v3[2 * v4 + 2];
        ++v4;
        BOOL v3 = *(int **)(result + 16);
        uint64_t v5 = *v3;
      }
      while (v4 < v5);
    }
    *(_DWORD *)(result + 8) -= a3;
    int *v3 = v5 - a3;
  }
  return result;
}

uint64_t sub_188CCE4(uint64_t a1, int a2)
{
  int v2 = *(_DWORD *)(a1 + 8);
  int v3 = *(_DWORD *)(a1 + 12);
  int v4 = v2 + a2;
  uint64_t v5 = *(unsigned int **)(a1 + 16);
  if (v3 < v2 + a2)
  {
    int v7 = *(uint64_t **)a1;
    int v8 = 2 * v3;
    if (2 * v3 <= v4) {
      int v8 = v4;
    }
    if (v8 <= 4) {
      unsigned int v9 = 4;
    }
    else {
      unsigned int v9 = v8;
    }
    uint64_t v10 = 8 * v9;
    if (v7) {
    else
    }
      uint64_t v11 = (unsigned int *)operator new(v10 + 8);
    *(void *)(a1 + 16) = v11;
    *(_DWORD *)(a1 + 12) = v9;
    if (v5 && (uint64_t v12 = *v5, (int)v12 >= 1))
    {
      memcpy(v11 + 2, v5 + 2, 8 * v12);
      uint64_t v11 = *(unsigned int **)(a1 + 16);
      *uint64_t v11 = *v5;
      if (!v7) {
        goto LABEL_15;
      }
    }
    else
    {
      *uint64_t v11 = 0;
      if (!v7)
      {
LABEL_15:
        operator delete(v5);
        uint64_t v11 = *(unsigned int **)(a1 + 16);
      }
    }
    int v2 = *(_DWORD *)(a1 + 8);
    uint64_t v5 = v11;
  }
  return (uint64_t)&v5[2 * v2 + 2];
}

uint64_t sub_188CDC8(uint64_t a1, uint64_t a2)
{
  int v4 = *(int **)(a1 + 16);
  if (!v4 || (int v5 = *v4, *v4 == *(_DWORD *)(a1 + 12)))
  {
    sub_188CCE4(a1, 1);
    int v4 = *(int **)(a1 + 16);
    int v5 = *v4;
  }
  *int v4 = v5 + 1;
  uint64_t v6 = *(int *)(a1 + 8);
  *(_DWORD *)(a1 + 8) = v6 + 1;
  *(void *)&v4[2 * v6 + 2] = a2;
  return a2;
}

uint64_t sub_188CE40(uint64_t result, const char *a2, int a3, uint64_t a4)
{
  if ((result & 0x80000000) == 0)
  {
    if (*(char *)(a4 + 23) >= 0) {
      int v4 = (const char *)a4;
    }
    else {
      int v4 = *(const char **)a4;
    }
    fprintf(__stderrp, "[libprotobuf %s %s:%d] %s\n", off_24E6928[result], a2, a3, v4);
    int v5 = __stderrp;
    return fflush(v5);
  }
  return result;
}

void *sub_188CECC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)a1) {
    return sub_111E930(a2, *(void **)a1, *(void *)(a1 + 8));
  }
  else {
    return sub_5E5C(a2, (char *)&unk_216FD68);
  }
}

const char **sub_188CF08(const char **result)
{
  uint64_t v1 = result;
  if (*(_DWORD *)result == 3)
  {
    uint64_t v2 = 3;
  }
  else
  {
    int v3 = atomic_load((unsigned int *)&unk_2625A38);
    if (v3 > 0) {
      goto LABEL_6;
    }
    uint64_t v2 = *(unsigned int *)result;
  }
  uint64_t result = (const char **)off_254DB98(v2, v1[1], *((_DWORD *)v1 + 4), (uint64_t)(v1 + 3));
LABEL_6:
  if (*(_DWORD *)v1 == 3)
  {
    exceptiouint64_t n = __cxa_allocate_exception(0x30uLL);
    sub_188CFC8(exception, v1[1], *((unsigned int *)v1 + 4), v1 + 3);
  }
  return result;
}

void sub_188CFB4(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_188CFE0(std::exception *this)
{
  this->__vftable = (std::exception_vtbl *)&off_24E6970;
  if (SHIBYTE(this[5].__vftable) < 0) {
    operator delete(this[3].__vftable);
  }

  std::exception::~exception(this);
}

void sub_188D040(std::exception *a1)
{
  sub_188CFE0(a1);

  operator delete();
}

uint64_t sub_188D078(uint64_t a1)
{
  uint64_t result = a1 + 24;
  if (*(char *)(a1 + 47) < 0) {
    return *(void *)result;
  }
  return result;
}

void sub_188D0B0(unint64_t a1, const char *a2)
{
  LODWORD(v5[0]) = 3;
  v5[1] = "/Library/Caches/com.apple.xbs/Sources/MapsOfflineServices/submodules/offline-geo-protobuf-internal/submodules/"
          "protobuf-mirror/src/google/protobuf/stubs/stringpiece.cc";
  int v6 = 50;
  memset(&__p, 0, sizeof(__p));
  std::string::append(&__p, "size too big: ", 0xEuLL);
  __s = v10;
  std::string::size_type v9 = sub_188D378(a1, v10) - v10;
  std::string::append(&__p, __s, v9);
  std::string::append(&__p, " details: ", 0xAuLL);
  size_t v4 = strlen(a2);
  std::string::append(&__p, a2, v4);
  sub_188CF08(v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_188D1C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_188D1E8(unsigned int a1, unsigned char *a2)
{
  if (a1 >= 0x3B9ACA00)
  {
    unint64_t v2 = a1 / 0x5F5E100uLL;
    *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v2];
    a2 += 2;
    goto LABEL_3;
  }
  if (a1 > 0x63)
  {
    if (a1 >> 4 <= 0x270)
    {
      if (a1 <= 0x3E7)
      {
        LODWORD(v5) = (unsigned __int16)a1 / 0x64u;
        *a2++ = v5 + 48;
        goto LABEL_9;
      }
LABEL_8:
      unint64_t v5 = a1 / 0x64uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v5];
      a2 += 2;
LABEL_9:
      a1 -= 100 * v5;
      goto LABEL_10;
    }
    if (a1 < 0xF4240)
    {
      if (a1 >> 5 <= 0xC34)
      {
        LODWORD(v4) = a1 / 0x2710;
        *a2++ = a1 / 0x2710 + 48;
        goto LABEL_7;
      }
LABEL_6:
      unint64_t v4 = a1 / 0x2710uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v4];
      a2 += 2;
LABEL_7:
      a1 -= 10000 * v4;
      goto LABEL_8;
    }
    if (a1 < 0x5F5E100)
    {
      if (a1 <= 0x98967F)
      {
        LODWORD(v3) = a1 / 0xF4240;
        *a2++ = a1 / 0xF4240 + 48;
        goto LABEL_5;
      }
LABEL_4:
      unint64_t v3 = a1 / 0xF4240uLL;
      *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * v3];
      a2 += 2;
LABEL_5:
      a1 -= 1000000 * v3;
      goto LABEL_6;
    }
    LODWORD(v2) = a1 / 0x5F5E100;
    *a2++ = a1 / 0x5F5E100 + 48;
LABEL_3:
    a1 -= 100000000 * v2;
    goto LABEL_4;
  }
  if (a1 <= 9)
  {
    *a2 = a1 + 48;
    int v6 = a2 + 1;
    goto LABEL_11;
  }
LABEL_10:
  *(_WORD *)a2 = *(_WORD *)&a00010203040506[2 * a1];
  int v6 = a2 + 2;
LABEL_11:
  *int v6 = 0;
  return v6;
}

unsigned char *sub_188D378(unint64_t a1, unsigned char *a2)
{
  int v2 = a1;
  if (HIDWORD(a1))
  {
    unint64_t v4 = a1 / 0x3B9ACA00;
    unint64_t v5 = (_WORD *)sub_188D378(a1 / 0x3B9ACA00);
    unsigned int v6 = v2 - 1000000000 * v4;
    *unint64_t v5 = *(_WORD *)&a00010203040506[2 * (v6 / 0x989680uLL)];
    v6 %= 0x989680u;
    v5[1] = *(_WORD *)&a00010203040506[2 * (v6 / 0x186A0uLL)];
    v6 %= 0x186A0u;
    v5[2] = *(_WORD *)&a00010203040506[2 * (v6 / 0x3E8uLL)];
    v6 %= 0x3E8u;
    v5[3] = *(_WORD *)&a00010203040506[2 * (v6 / 0xAuLL)];
    v5[4] = (v6 % 0xA + 48);
    return (char *)v5 + 9;
  }
  else
  {
    return sub_188D1E8(a1, a2);
  }
}

uint64_t sub_188D498(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (int *)*((void *)a1 + 1);
  do
  {
    int v6 = *v4++;
    int v5 = v6;
    if (v6 < 0) {
      uint64_t v7 = 10;
    }
    else {
      uint64_t v7 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    }
    result += v7;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_188D4F0(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (int *)*((void *)a1 + 1);
  do
  {
    int v5 = *v4++;
    result += (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_188D53C(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (int *)*((void *)a1 + 1);
  do
  {
    int v5 = *v4++;
    result += (9 * (__clz((2 * v5) ^ (v5 >> 31) | 1) ^ 0x1F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_188D5A8(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
  do
  {
    uint64_t v5 = *v4++;
    result += (9 * (__clz(v5 | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_188D5F8(unsigned int *a1)
{
  uint64_t v1 = *a1;
  if ((int)v1 < 1) {
    return 0;
  }
  uint64_t result = 0;
  unint64_t v4 = (uint64_t *)*((void *)a1 + 1);
  do
  {
    uint64_t v5 = *v4++;
    result += (9 * (__clz((2 * v5) ^ (v5 >> 63) | 1) ^ 0x3F) + 73) >> 6;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_188D650()
{
  return 0;
}

uint64_t sub_188D658()
{
  return 0;
}

void sub_188D670()
{
}

void sub_188D690()
{
}

void sub_188D6A8(const char *a1)
{
  exceptiouint64_t n = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_2E18(exception, a1);
}

void sub_188D6F0(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

void sub_188D718()
{
  exceptiouint64_t n = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

std::string *sub_188D74C(std::string *__dst, const std::string::value_type *__src, size_t __len)
{
  LODWORD(v6) = SHIBYTE(__dst->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    unint64_t v10 = __dst->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v9 < __len)
    {
      std::string::size_type size = __dst->__r_.__value_.__l.__size_;
      goto LABEL_6;
    }
    unint64_t v6 = HIBYTE(v10);
    uint64_t v7 = (std::string *)__dst->__r_.__value_.__r.__words[0];
  }
  else
  {
    uint64_t v7 = __dst;
    if (__len > 0x16)
    {
      std::string::size_type size = HIBYTE(__dst->__r_.__value_.__r.__words[2]);
      std::string::size_type v9 = 22;
LABEL_6:
      std::string::__grow_by_and_replace(__dst, v9, __len - v9, size, 0, size, __len, __src);
      return __dst;
    }
  }
  if (__len)
  {
    memmove(v7, __src, __len);
    LOBYTE(v6) = *((unsigned char *)&__dst->__r_.__value_.__s + 23);
  }
  if ((v6 & 0x80) != 0) {
    __dst->__r_.__value_.__l.__size_ = __len;
  }
  else {
    *((unsigned char *)&__dst->__r_.__value_.__s + 23) = __len & 0x7F;
  }
  v7->__r_.__value_.__s.__data_[__len] = 0;
  return __dst;
}

uint64_t sub_188D80C(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void **)result;
    int v2 = *(void **)(result + 16);
    if (v2)
    {
      do
      {
        unint64_t v3 = (void *)*v2;
        operator delete(v2);
        int v2 = v3;
      }
      while (v3);
    }
    unint64_t v4 = *v1;
    *uint64_t v1 = 0;
    if (v4) {
      operator delete(v4);
    }
    operator delete();
  }
  return result;
}

unsigned char *sub_188D880(unsigned int a1, unsigned char *a2)
{
  *a2 = a1;
  if (a1 <= 0x7F) {
    return a2 + 1;
  }
  *a2 = a1 | 0x80;
  unint64_t v4 = (unint64_t)(int)a1 >> 7;
  a2[1] = v4;
  uint64_t result = a2 + 2;
  if (a1 >= 0x4000)
  {
    do
    {
      *(result - 1) |= 0x80u;
      unint64_t v5 = v4 >> 14;
      v4 >>= 7;
      *result++ = v4;
    }
    while (v5);
  }
  return result;
}

unsigned __int8 *sub_188D8D8(char *a1, void *a2)
{
  uint64_t v2 = *a1;
  if (*a1 < 0)
  {
    int v4 = a1[1];
    uint64_t v5 = (v2 + (v4 << 7) - 128);
    if ((v4 & 0x80) != 0)
    {
      uint64_t result = (unsigned __int8 *)(a1 + 3);
      uint64_t v6 = 14;
      while (1)
      {
        v5 += (*(result - 1) - 1) << v6;
        if (((char)*(result - 1) & 0x80000000) == 0) {
          break;
        }
        ++result;
        v6 += 7;
        if (v6 == 70)
        {
          uint64_t result = 0;
          uint64_t v5 = 0;
          break;
        }
      }
      *a2 = v5;
    }
    else
    {
      *a2 = v5;
      return (unsigned __int8 *)(a1 + 2);
    }
  }
  else
  {
    *a2 = v2;
    return (unsigned __int8 *)(a1 + 1);
  }
  return result;
}

uint64_t sub_188D94C(uint64_t a1, uint64_t a2, int a3, long long *a4)
{
  *(void *)a1 = &off_24E6970;
  *(void *)(a1 + 8) = a2;
  *(_DWORD *)(a1 + 16) = a3;
  uint64_t v5 = a1 + 24;
  if (*((char *)a4 + 23) < 0)
  {
    sub_4200((unsigned char *)v5, *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v6 = *a4;
    *(void *)(v5 + 16) = *((void *)a4 + 2);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return a1;
}

void sub_188D9B8(_Unwind_Exception *a1)
{
  std::exception::~exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_188D9E0(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_188DA24(void *result, char *a2, char *a3, unint64_t a4)
{
  int v4 = result;
  if (a4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (a4 > 0x16)
  {
    uint64_t v8 = (a4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a4 | 7) != 0x17) {
      uint64_t v8 = a4 | 7;
    }
    uint64_t v9 = v8 + 1;
    uint64_t result = operator new(v8 + 1);
    v4[1] = a4;
    v4[2] = v9 | 0x8000000000000000;
    *int v4 = result;
    int v4 = result;
  }
  else
  {
    *((unsigned char *)result + 23) = a4;
  }
  while (a2 != a3)
  {
    char v10 = *a2++;
    *(unsigned char *)int v4 = v10;
    int v4 = (void *)((char *)v4 + 1);
  }
  *(unsigned char *)int v4 = 0;
  return result;
}

uint64_t sub_188DACC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_188D690();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    long long v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

void *sub_188DB70(void *a1, uint64_t *a2)
{
  if (*((char *)a2 + 23) >= 0) {
    unint64_t v3 = a2;
  }
  else {
    unint64_t v3 = (uint64_t *)*a2;
  }
  *a1 = v3;
  a1[1] = 0;
  if (*((char *)a2 + 23) < 0)
  {
    unint64_t v4 = a2[1];
    if ((v4 & 0x8000000000000000) != 0) {
      sub_188D0B0(v4, "string length exceeds max size");
    }
  }
  else
  {
    unint64_t v4 = *((unsigned __int8 *)a2 + 23);
  }
  a1[1] = v4;
  return a1;
}

uint64_t sub_188DBD8(uint64_t *a1)
{
  uint64_t v2 = (uint64_t *)(*a1 & 0xFFFFFFFFFFFFFFFCLL);
  if (*a1)
  {
    uint64_t v2 = (uint64_t *)*v2;
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    operator new();
  }
  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  *unint64_t v4 = v3;
  v4[1] = (uint64_t)sub_188DC70;
  *(_OWORD *)uint64_t v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *a1 = *a1 & 2 | v3 | 1;
  *(void *)uint64_t v3 = v2;
  return v3 + 8;
}

void sub_188DC70(uint64_t a1)
{
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
}

void sub_188DC9C(void *a1)
{
  if (a1) {
    operator delete(a1, (std::align_val_t)0x40uLL);
  }
}

void *sub_188DCAC(uint64_t a1, void (*a2)(void), void *a3)
{
  uint64_t v3 = *(void **)(a1 + 8);
  unint64_t v4 = (void *)*v3;
  uint64_t v5 = v3[1];
  if (!*v3) {
    return v3;
  }
  do
  {
    uint64_t v8 = v4;
    if (a2) {
      a2();
    }
    else {
      operator delete(v3);
    }
    *a3 += v5;
    unint64_t v4 = (void *)*v8;
    uint64_t v5 = v8[1];
    uint64_t v3 = v8;
  }
  while (*v8);
  return v8;
}

uint64_t sub_188DD40(uint64_t result, void *a2)
{
  if ((void *)result != a2)
  {
    uint64_t v3 = (void *)result;
    do
    {
      uint64_t result = sub_1885398((uint64_t)(v3 + 5));
      unint64_t v4 = (void *)v3[1];
      if (v4)
      {
        do
        {
          uint64_t v5 = v4;
          unint64_t v4 = (void *)*v4;
        }
        while (v4);
      }
      else
      {
        do
        {
          uint64_t v5 = (void *)v3[2];
          BOOL v6 = *v5 == (void)v3;
          uint64_t v3 = v5;
        }
        while (!v6);
      }
      uint64_t v3 = v5;
    }
    while (v5 != a2);
  }
  return result;
}

void sub_188DDC4(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void sub_188DDE4(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void sub_188DE04(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void sub_188DE24(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void sub_188DE44(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void sub_188DE64(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void sub_188DE84(uint64_t a1)
{
  if (*(int *)(a1 + 4) >= 1)
  {
    uint64_t v1 = *(void *)(a1 + 8);
    uint64_t v3 = *(void *)(v1 - 8);
    uint64_t v2 = (void *)(v1 - 8);
    if (!v3) {
      operator delete(v2);
    }
  }
}

void sub_188DEA4(void *a1)
{
}

uint64_t sub_188DEC4(uint64_t result)
{
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

uint64_t sub_188DEF0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(int **)(result + 16);
  if (!v2) {
    return sub_188DF44(result, a2);
  }
  uint64_t v3 = *v2;
  if ((int)v3 >= *(_DWORD *)(result + 12)) {
    return sub_188DF44(result, a2);
  }
  unint64_t v4 = v2 + 2;
  uint64_t v5 = *(int *)(result + 8);
  if ((int)v5 < (int)v3) {
    *(void *)&v4[2 * v3] = *(void *)&v4[2 * v5];
  }
  *(void *)&v4[2 * v5] = a2;
  *(_DWORD *)(result + 8) = v5 + 1;
  ++**(_DWORD **)(result + 16);
  return result;
}

uint64_t sub_188DF44(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = *(int **)(result + 16);
  if (!v4)
  {
    int v7 = *(_DWORD *)(result + 8);
    int v5 = *(_DWORD *)(result + 12);
    if (v7 > v5)
    {
      unint64_t v4 = 0;
LABEL_14:
      int v10 = *v4 + 1;
LABEL_15:
      *unint64_t v4 = v10;
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  int v5 = *(_DWORD *)(result + 8);
  int v6 = *(_DWORD *)(result + 12);
  int v7 = v5;
  if (v5 == v6)
  {
LABEL_12:
    uint64_t result = sub_188CCE4(result, v5 - v7 + 1);
LABEL_13:
    unint64_t v4 = *(int **)(v3 + 16);
    goto LABEL_14;
  }
  uint64_t v8 = *v4;
  if (v8 != v6)
  {
    if (v5 >= (int)v8)
    {
      int v10 = v8 + 1;
      goto LABEL_15;
    }
    *(void *)&v4[2 * v8 + 2] = *(void *)&v4[2 * v5 + 2];
    goto LABEL_13;
  }
  uint64_t result = *(void *)&v4[2 * v5 + 2];
  if (result) {
    BOOL v9 = *(void *)v3 == 0;
  }
  else {
    BOOL v9 = 0;
  }
  if (v9)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)result + 8))(result);
    unint64_t v4 = *(int **)(v3 + 16);
  }
LABEL_16:
  uint64_t v11 = *(int *)(v3 + 8);
  *(_DWORD *)(v3 + 8) = v11 + 1;
  *(void *)&v4[2 * v11 + 2] = a2;
  return result;
}

uint64_t **sub_188E03C(int **a1, int **a2, uint64_t **a3)
{
  if (a1 != a2)
  {
    int v5 = a1;
    do
    {
      sub_188480C(a3, *((unsigned int *)v5 + 8), v5 + 5);
      int v6 = v5[1];
      if (v6)
      {
        do
        {
          int v7 = (int **)v6;
          int v6 = *(int **)v6;
        }
        while (v6);
      }
      else
      {
        do
        {
          int v7 = (int **)v5[2];
          BOOL v8 = *v7 == (int *)v5;
          int v5 = v7;
        }
        while (!v8);
      }
      int v5 = v7;
    }
    while (v7 != a2);
  }
  return a3;
}

unsigned __int8 *sub_188E0C0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
LABEL_5:
    while (1)
    {
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result) {
        break;
      }
      long long v10 = *(_OWORD *)(a3 + 16);
      v22[0] = *(_OWORD *)a3;
      v22[1] = v10;
      uint64_t v23 = *(void *)(a3 + 32);
      uint64_t result = sub_188E248(result, v8, (unsigned int **)v22);
      if (!result) {
        return result;
      }
      uint64_t v11 = *(long long **)(a1 + 8);
      int v12 = result - v11;
      int v13 = v5 - v9;
      if (v5 - v9 <= 16)
      {
        __int16 v26 = 0;
        uint64_t v25 = 0;
        long long v24 = *v11;
        long long v16 = *(_OWORD *)(a3 + 16);
        v20[0] = *(_OWORD *)a3;
        v20[1] = v16;
        uint64_t v21 = *(void *)(a3 + 32);
        unint64_t v17 = sub_188E248((unsigned __int8 *)&v24 + v12, (unint64_t)&v24 + v13, (unsigned int **)v20);
        uint64_t result = 0;
        if (v17)
        {
          if (v17 == (unsigned __int8 *)((char *)&v24 + v13)) {
            return (unsigned __int8 *)(*(void *)(a1 + 8) + v13);
          }
        }
        return result;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v12;
      result += v12;
    }
    unint64_t v14 = (unint64_t)&result[v5];
    long long v15 = *(_OWORD *)(a3 + 16);
    v18[0] = *(_OWORD *)a3;
    v18[1] = v15;
    uint64_t v19 = *(void *)(a3 + 32);
    uint64_t result = sub_188E248(result, v14, (unsigned int **)v18);
    if ((unsigned __int8 *)v14 != result) {
      return 0;
    }
  }
  return result;
}

unsigned __int8 *sub_188E248(unsigned __int8 *a1, unint64_t a2, unsigned int **a3)
{
  uint64_t v3 = a1;
  while ((unint64_t)v3 < a2)
  {
    unint64_t v14 = 0;
    uint64_t v3 = sub_188D8D8((char *)v3, &v14);
    if (!v3) {
      break;
    }
    unint64_t v6 = v14;
    if (((unsigned int (*)(unsigned int *, unint64_t))a3[1])(a3[2], v14))
    {
      int v7 = *a3;
      uint64_t v8 = **a3;
      if (v8 == (*a3)[1])
      {
        unsigned int v9 = v8 + 1;
        sub_188C80C(*a3, v8 + 1);
        *(_DWORD *)(*((void *)v7 + 1) + 4 * v8) = v6;
      }
      else
      {
        *(_DWORD *)(*((void *)v7 + 1) + 4 * v8) = v6;
        unsigned int v9 = v8 + 1;
      }
      unsigned int *v7 = v9;
    }
    else
    {
      int v10 = *((_DWORD *)a3 + 8);
      uint64_t v11 = (uint64_t *)a3[3];
      int v12 = (std::string *)((*v11 & 1) != 0 ? (*v11 & 0xFFFFFFFFFFFFFFFCLL) + 8 : sub_188DBD8(v11));
      sub_188C020(v10, v6, v12);
    }
  }
  return v3;
}

char *sub_188E350(uint64_t a1, char *__src, size_t __n)
{
  *(_DWORD *)(a1 + 84) = 0;
  if (__n >= 0x11)
  {
    *(_DWORD *)(a1 + 28) = 16;
    unint64_t v6 = &__src[__n - 16];
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v6;
    *(void *)(a1 + 16) = a1 + 40;
    if (*(void *)(a1 + 72) != 1) {
      return __src;
    }
    int v7 = (unsigned char *)(&def_332C + 2);
    uint64_t v8 = __src;
    goto LABEL_6;
  }
  uint64_t v8 = (char *)(a1 + 40);
  memcpy((void *)(a1 + 40), __src, __n);
  *(_DWORD *)(a1 + 28) = 0;
  *(void *)a1 = &v8[__n];
  *(void *)(a1 + 8) = &v8[__n];
  *(void *)(a1 + 16) = 0;
  if (*(void *)(a1 + 72) == 1)
  {
    int v7 = (char *)(__src - v8);
LABEL_6:
    *(void *)(a1 + 72) = v7;
  }
  return v8;
}

void sub_188E404(void *a1)
{
  uint64_t v2 = (unsigned int *)a1[2];
  if (v2 && !*a1)
  {
    uint64_t v3 = v2 + 2;
    uint64_t v4 = *v2;
    if ((int)v4 >= 1)
    {
      do
      {
        if (*v3) {
          (*(void (**)(void))(*(void *)*v3 + 8))(*v3);
        }
        ++v3;
        --v4;
      }
      while (v4);
      uint64_t v2 = (unsigned int *)a1[2];
    }
    operator delete(v2);
  }
  a1[2] = 0;
}

uint64_t **sub_188E490(uint64_t **a1, int *a2, _OWORD *a3)
{
  unint64_t v6 = a1 + 1;
  int v5 = a1[1];
  if (v5)
  {
    int v7 = *a2;
    while (1)
    {
      while (1)
      {
        uint64_t v8 = (uint64_t **)v5;
        int v9 = *((_DWORD *)v5 + 8);
        if (v7 >= v9) {
          break;
        }
        int v5 = *v8;
        unint64_t v6 = v8;
        if (!*v8) {
          goto LABEL_10;
        }
      }
      if (v9 >= v7) {
        break;
      }
      int v5 = v8[1];
      if (!v5)
      {
        unint64_t v6 = v8 + 1;
        goto LABEL_10;
      }
    }
  }
  else
  {
    uint64_t v8 = a1 + 1;
LABEL_10:
    int v10 = (uint64_t *)operator new(0x40uLL);
    long long v11 = a3[1];
    *((_OWORD *)v10 + 2) = *a3;
    *((_OWORD *)v10 + 3) = v11;
    sub_11220BC(a1, (uint64_t)v8, v6, v10);
    return (uint64_t **)v10;
  }
  return v8;
}

void sub_188E55C(uint64_t a1)
{
}

uint64_t *sub_188E564(uint64_t **a1, uint64_t *a2, int *a3, _OWORD *a4)
{
  unint64_t v6 = sub_188E5EC(a1, a2, &v12, &v11, a3);
  int v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    int v7 = (uint64_t *)operator new(0x40uLL);
    long long v9 = a4[1];
    *((_OWORD *)v7 + 2) = *a4;
    *((_OWORD *)v7 + 3) = v9;
    sub_11220BC(a1, (uint64_t)v12, v8, v7);
  }
  return v7;
}

uint64_t *sub_188E5EC(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  int v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 8), *a5 < v7))
  {
    uint64_t v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      int v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      long long v9 = (uint64_t *)*a2;
      do
      {
        int v10 = v9;
        long long v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      int v13 = a2;
      do
      {
        int v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        int v13 = v10;
      }
      while (v14);
    }
    int v15 = *a5;
    if (*((_DWORD *)v10 + 8) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          unint64_t v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 32);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          int v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        int v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      unint64_t v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    int v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      int v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    uint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      uint64_t v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 8))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          uint64_t v21 = (uint64_t *)v20;
          int v22 = *(_DWORD *)(v20 + 32);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          int v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        int v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      uint64_t v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

unsigned __int8 *sub_188E7A8(uint64_t a1, unsigned __int8 *a2, unsigned int *a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_188E8F8(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_188E8F8(result, v8, a3);
      if (!result) {
        return result;
      }
      int v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    BOOL v14 = sub_188E8F8((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_188E8F8(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_188D8D8((char *)i, &v10);
    if (!i) {
      break;
    }
    int v6 = v10;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      sub_188C80C(a3, v7 + 1);
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v6;
    }
    else
    {
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v10;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_188E9A0(uint64_t a1, unsigned __int8 *a2, unsigned int *a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_188E8F8(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_188E8F8(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    BOOL v14 = sub_188E8F8((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_188EAF8(uint64_t a1, unsigned __int8 *a2, unsigned int *a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_188EC48(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_188EC48(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    BOOL v14 = sub_188EC48((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_188EC48(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_188D8D8((char *)i, &v10);
    if (!i) {
      break;
    }
    uint64_t v6 = v10;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      sub_188CA54(a3, v7 + 1);
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v6;
    }
    else
    {
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v10;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_188ECF0(uint64_t a1, unsigned __int8 *a2, unsigned int *a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_188EC48(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_188EC48(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    BOOL v14 = sub_188EC48((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_188EE48(uint64_t a1, unsigned __int8 *a2, unsigned int *a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_188EF98(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_188EF98(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    BOOL v14 = sub_188EF98((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_188EF98(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_188D8D8((char *)i, &v10);
    if (!i) {
      break;
    }
    int v6 = -(v10 & 1) ^ (v10 >> 1);
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      sub_188C80C(a3, v7 + 1);
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v6;
    }
    else
    {
      *(_DWORD *)(*((void *)a3 + 1) + 4 * v7) = v6;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_188F04C(uint64_t a1, unsigned __int8 *a2, unsigned int *a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_188F19C(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_188F19C(result, v8, a3);
      if (!result) {
        return result;
      }
      uint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    BOOL v14 = sub_188F19C((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_188F19C(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    unint64_t v10 = 0;
    uint64_t i = sub_188D8D8((char *)i, &v10);
    if (!i) {
      break;
    }
    unint64_t v6 = -(uint64_t)(v10 & 1) ^ (v10 >> 1);
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      sub_188CA54(a3, v7 + 1);
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v6;
    }
    else
    {
      *(void *)(*((void *)a3 + 1) + 8 * v7) = v6;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

unsigned __int8 *sub_188F250(uint64_t a1, unsigned __int8 *a2, unsigned int *a3)
{
  int v5 = *a2;
  if (((char)*a2 & 0x80000000) == 0)
  {
    uint64_t result = a2 + 1;
    goto LABEL_5;
  }
  uint64_t result = (unsigned __int8 *)sub_188C1C4((uint64_t)a2, *a2);
  if (result)
  {
    int v5 = v7;
    while (1)
    {
LABEL_5:
      unint64_t v8 = *(void *)(a1 + 8);
      int v9 = v8 - result;
      if (v5 <= (int)v8 - (int)result)
      {
        unint64_t v13 = (unint64_t)&result[v5];
        uint64_t result = sub_188F3A0(result, v13, a3);
        if ((unsigned __int8 *)v13 != result) {
          return 0;
        }
        return result;
      }
      uint64_t result = sub_188F3A0(result, v8, a3);
      if (!result) {
        return result;
      }
      unint64_t v10 = *(long long **)(a1 + 8);
      int v11 = result - v10;
      int v12 = v5 - v9;
      if (v5 - v9 <= 16) {
        break;
      }
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (unsigned __int8 *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      int v5 = v5 - v9 - v11;
      result += v11;
    }
    __int16 v18 = 0;
    uint64_t v17 = 0;
    long long v16 = *v10;
    BOOL v14 = sub_188F3A0((unsigned __int8 *)&v16 + v11, (unint64_t)&v16 + v12, a3);
    if (v14) {
      BOOL v15 = v14 == (unsigned __int8 *)((char *)&v16 + v12);
    }
    else {
      BOOL v15 = 0;
    }
    if (!v15) {
      return 0;
    }
    return (unsigned __int8 *)(*(void *)(a1 + 8) + v12);
  }
  return result;
}

unsigned __int8 *sub_188F3A0(unsigned __int8 *a1, unint64_t a2, unsigned int *a3)
{
  for (uint64_t i = a1; (unint64_t)i < a2; *a3 = v8)
  {
    uint64_t v10 = 0;
    uint64_t i = sub_188D8D8((char *)i, &v10);
    if (!i) {
      break;
    }
    BOOL v6 = v10 != 0;
    uint64_t v7 = *a3;
    if (v7 == a3[1])
    {
      unsigned int v8 = v7 + 1;
      sub_188C6F4(a3, v7 + 1);
      *(unsigned char *)(*((void *)a3 + 1) + v7) = v6;
    }
    else
    {
      *(unsigned char *)(*((void *)a3 + 1) + v7) = v6;
      unsigned int v8 = v7 + 1;
    }
  }
  return i;
}

char *sub_188F450(uint64_t a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *(_DWORD *)(a1 + 8) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    sub_188C80C(a4, *a4 + (v5 >> 2));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 4 * v12);
    *a4 = v12 + (v5 >> 2);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFFC));
    if (v5 == (v5 & 0xFFFFFFFC)) {
      return &v6[v5 & 0xFFFFFFFC];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      sub_188C80C(a4, *a4 + (v7 >> 2));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 4 * v9);
      *a4 = v9 + (v7 >> 2);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFFC));
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (char *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFFC;
      BOOL v6 = &result[-(v7 & 3) + 16];
      int v7 = *(_DWORD *)(a1 + 8) - (result - (v7 & 3));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

char *sub_188F560(uint64_t a1, char *a2, int a3, unsigned int *a4)
{
  int v5 = a3;
  BOOL v6 = a2;
  int v7 = *(_DWORD *)(a1 + 8) - a2 + 16;
  if (v7 >= a3)
  {
LABEL_5:
    sub_188CA54(a4, *a4 + (v5 >> 3));
    uint64_t v12 = (int)*a4;
    unint64_t v13 = (void *)(*((void *)a4 + 1) + 8 * v12);
    *a4 = v12 + (v5 >> 3);
    memcpy(v13, v6, (int)(v5 & 0xFFFFFFF8));
    if (v5 == (v5 & 0xFFFFFFF8)) {
      return &v6[v5 & 0xFFFFFFF8];
    }
    else {
      return 0;
    }
  }
  else
  {
    while (1)
    {
      sub_188CA54(a4, *a4 + (v7 >> 3));
      uint64_t v9 = (int)*a4;
      uint64_t v10 = (void *)(*((void *)a4 + 1) + 8 * v9);
      *a4 = v9 + (v7 >> 3);
      memcpy(v10, v6, (int)(v7 & 0xFFFFFFF8));
      if (*(int *)(a1 + 28) < 17) {
        return 0;
      }
      uint64_t result = (char *)sub_188B760(a1);
      if (!result) {
        return result;
      }
      v5 -= v7 & 0xFFFFFFF8;
      BOOL v6 = &result[-(v7 & 7) + 16];
      int v7 = *(_DWORD *)(a1 + 8) - (result - (v7 & 7));
      if (v5 <= v7) {
        goto LABEL_5;
      }
    }
  }
}

void sub_188F680(std::string **a1, int a2, unint64_t a3)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    unint64_t v6 = (8 * a2);
    if (v6 < 0x80)
    {
      LOBYTE(v7) = 8 * a2;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    uint64_t v9 = *a1;
    if (a3 < 0x80)
    {
      LOBYTE(v10) = a3;
    }
    else
    {
      do
      {
        std::string::push_back(v9, a3 | 0x80);
        unint64_t v10 = a3 >> 7;
        unint64_t v11 = a3 >> 14;
        a3 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v9, v10);
  }
}

std::string *sub_188F748(std::string *result, int a2, uint64_t a3)
{
  uint64_t v3 = (std::string *)result->__r_.__value_.__r.__words[0];
  if (result->__r_.__value_.__r.__words[0])
  {
    int v5 = (std::string **)result;
    unint64_t v6 = (8 * a2) | 1u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 1;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    uint64_t v9 = a3;
    return std::string::append(*v5, (const std::string::value_type *)&v9, 8uLL);
  }
  return result;
}

const std::string::value_type *sub_188F804(std::string **a1, int a2, char *a3, uint64_t a4)
{
  int v7 = *a3;
  if (*a3 < 0)
  {
    uint64_t result = (const std::string::value_type *)sub_188C1C4((uint64_t)a3, *a3);
    if (!result) {
      return result;
    }
    unint64_t v8 = (std::string::value_type *)result;
    int v7 = v10;
  }
  else
  {
    unint64_t v8 = a3 + 1;
  }
  unint64_t v11 = *a1;
  if (*a1)
  {
    unint64_t v12 = (8 * a2) | 2u;
    if (v12 < 0x80)
    {
      LOBYTE(v13) = v12;
    }
    else
    {
      do
      {
        std::string::push_back(v11, v12 | 0x80);
        unint64_t v13 = v12 >> 7;
        unint64_t v14 = v12 >> 14;
        v12 >>= 7;
      }
      while (v14);
    }
    std::string::push_back(v11, v13);
    unint64_t v15 = v7;
    long long v16 = *a1;
    if (v7 < 0x80)
    {
      LOBYTE(v17) = v7;
    }
    else
    {
      do
      {
        std::string::push_back(v16, v15 | 0x80);
        unint64_t v17 = v15 >> 7;
        unint64_t v18 = v15 >> 14;
        v15 >>= 7;
      }
      while (v18);
    }
    std::string::push_back(v16, v17);
    uint64_t v19 = *a1;
    return sub_188FB2C(a4, v8, v7, v19);
  }
  else if (*(void *)(a4 + 8) - (void)v8 + 16 >= v7)
  {
    return &v8[v7];
  }
  else
  {
    return (const std::string::value_type *)sub_188BC3C(a4, (int)v8, v7);
  }
}

char *sub_188F970(std::string **a1, int a2, char *a3, int32x2_t *a4)
{
  int v7 = *a1;
  int v8 = 8 * a2;
  if (*a1)
  {
    unint64_t v9 = v8 | 3u;
    if (v9 < 0x80)
    {
      LOBYTE(v10) = v8 | 3;
    }
    else
    {
      do
      {
        std::string::push_back(v7, v9 | 0x80);
        unint64_t v10 = v9 >> 7;
        unint64_t v11 = v9 >> 14;
        v9 >>= 7;
      }
      while (v11);
    }
    std::string::push_back(v7, v10);
  }
  int v12 = a4[11].i32[0];
  BOOL v13 = __OFSUB__(v12--, 1);
  a4[11].i32[0] = v12;
  if (v12 < 0 != v13) {
    return 0;
  }
  ++a4[11].i32[1];
  unint64_t v14 = sub_188C46C((uint64_t)a1, a3, (uint64_t)a4);
  a4[11] = vadd_s32(a4[11], (int32x2_t)0xFFFFFFFF00000001);
  __int32 v15 = a4[10].i32[0];
  a4[10].i32[0] = 0;
  if (v15 != (v8 | 3) || v14 == 0) {
    return 0;
  }
  unint64_t v17 = v14;
  unint64_t v18 = *a1;
  if (v18)
  {
    unint64_t v19 = v8 | 4u;
    if (v19 < 0x80)
    {
      LOBYTE(v20) = v8 | 4;
    }
    else
    {
      do
      {
        std::string::push_back(v18, v19 | 0x80);
        unint64_t v20 = v19 >> 7;
        unint64_t v21 = v19 >> 14;
        v19 >>= 7;
      }
      while (v21);
    }
    std::string::push_back(v18, v20);
  }
  return v17;
}

std::string *sub_188FA9C(std::string *result, int a2, int a3)
{
  uint64_t v3 = (std::string *)result->__r_.__value_.__r.__words[0];
  if (result->__r_.__value_.__r.__words[0])
  {
    int v5 = (std::string **)result;
    unint64_t v6 = (8 * a2) | 5u;
    if (v6 < 0x80)
    {
      LOBYTE(v7) = (8 * a2) | 5;
    }
    else
    {
      do
      {
        std::string::push_back(v3, v6 | 0x80);
        unint64_t v7 = v6 >> 7;
        unint64_t v8 = v6 >> 14;
        v6 >>= 7;
      }
      while (v8);
    }
    std::string::push_back(v3, v7);
    *(_DWORD *)__s = a3;
    return std::string::append(*v5, __s, 4uLL);
  }
  return result;
}

const std::string::value_type *sub_188FB2C(uint64_t a1, std::string::value_type *__s, int a3, std::string *this)
{
  if (*(void *)(a1 + 8) - (void)__s + 16 >= a3)
  {
    uint64_t v6 = a3;
    std::string::append(this, __s, a3);
    return &__s[v6];
  }
  else
  {
    return sub_188BDD4(a1, __s, a3, this);
  }
}

uint64_t sub_188FB98(uint64_t result, std::string **a2, const std::string **a3, int a4, int a5)
{
  LODWORD(v5) = a4;
  unint64_t v7 = a2;
  int v8 = a4 - a5;
  if (a4 > a5)
  {
    unint64_t v9 = *(uint64_t **)result;
    unint64_t v10 = (uint64_t *)&a2[a5];
    do
    {
      if (!v9) {
        operator new();
      }
      *unint64_t v11 = result;
      v11[1] = (uint64_t)sub_3A6EDC;
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *v10++ = result;
      --v8;
    }
    while (v8);
  }
  if ((int)v5 >= 1)
  {
    uint64_t v5 = v5;
    do
    {
      BOOL v13 = *a3++;
      int v12 = v13;
      unint64_t v14 = *v7++;
      uint64_t result = (uint64_t)std::string::operator=(v14, v12);
      --v5;
    }
    while (v5);
  }
  return result;
}

void *sub_188FC78(void *a1, uint64_t a2, uint64_t a3)
{
  std::ostream::sentry::sentry();
  if (v13)
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      unint64_t v10 = std::locale::use_facet(&v14, &std::ctype<char>::id);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_58E0(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  std::ostream::sentry::~sentry();
  return a1;
}

void sub_188FDB4(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  std::ostream::sentry::~sentry();
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x188FD94);
}

void sub_188FE08(_Unwind_Exception *a1)
{
}

uint64_t sub_188FE38(uint64_t *a1, void *a2)
{
  uint64_t result = sub_188FEB0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t sub_188FEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v15 = a6;
  *((void *)&v15 + 1) = a7;
  long long v14 = v15;
  v12[0] = a1;
  v12[1] = &v14;
  v12[2] = &v15;
  if (a3 != a5)
  {
    uint64_t v9 = a7;
    do
    {
      long long v10 = *(_OWORD *)(a3 - 24);
      *(void *)(v9 - 8) = *(void *)(a3 - 8);
      *(_OWORD *)(v9 - 24) = v10;
      v9 -= 24;
      *(void *)(a3 - 16) = 0;
      *(void *)(a3 - 8) = 0;
      *(void *)(a3 - 24) = 0;
      v7 -= 24;
      a3 -= 24;
    }
    while (a3 != a5);
    *((void *)&v15 + 1) = v9;
  }
  char v13 = 1;
  sub_188FF50((uint64_t)v12);
  return a6;
}

uint64_t sub_188FF50(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_188FF88(a1);
  }
  return a1;
}

void sub_188FF88(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    v1 += 24;
  }
}

uint64_t sub_188FFD0(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_1890008(uint64_t a1, void **a2)
{
  uint64_t v2 = *(void ***)(a1 + 16);
  if (v2 != a2)
  {
    do
    {
      uint64_t v5 = v2 - 3;
      *(void *)(a1 + 16) = v2 - 3;
      if (*((char *)v2 - 1) < 0)
      {
        operator delete(*v5);
        uint64_t v5 = *(void ***)(a1 + 16);
      }
      uint64_t v2 = v5;
    }
    while (v5 != a2);
  }
}

void sub_1890064()
{
  byte_2625A19 = 1;
}

uint64_t sub_1890074(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_18900B8(uint64_t **a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1 == v4)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
    return;
  }
  uint64_t v65 = 0;
  uint64_t v6 = 0;
  int v7 = 0;
  uint64_t v77 = 0;
  unint64_t v78 = 0;
  unint64_t v79 = 0;
  int v74 = 0;
  uint64_t v75 = 0;
  unint64_t v76 = 0;
  uint64_t v71 = 0;
  unint64_t v72 = 0;
  unint64_t v73 = 0;
  uint64_t v68 = 0;
  unint64_t v69 = 0;
  unint64_t v70 = 0;
  unint64_t v66 = 0;
  unint64_t v67 = 0;
  uint64_t v8 = 0x7FFFFFFFLL;
  do
  {
    if (v3[1] == *v3) {
      goto LABEL_55;
    }
    uint64_t v9 = (void *)sub_1CDE320(*v3);
    LODWORD(v86[0]) = 5;
    if (sub_1891768(v9, (unsigned int *)v86))
    {
      if (v3[1] == *v3) {
        sub_66748();
      }
      uint64_t v10 = sub_1CDE3A0(*v3);
      if (v3[1] == *v3) {
        sub_66748();
      }
      uint64_t v11 = sub_1CDE3A8(*v3);
      uint64_t v12 = v11;
      if ((int)v10 > (int)v6 || v10 == v6 && (int)v11 < (int)v8)
      {
        unint64_t v13 = (unint64_t)v77;
        unint64_t v14 = v78;
        while (v14 != v13)
        {
          v14 -= 88;
          *(void *)&long long v80 = v14;
          sub_1894FD8((void ***)&v80);
        }
        unint64_t v78 = v13;
        if (v13 >= v79)
        {
          uint64_t v15 = sub_18918B0((uint64_t *)&v77, (uint64_t)v3);
        }
        else
        {
          sub_189181C((uint64_t)&v77, (uint64_t)v3);
          uint64_t v15 = v13 + 88;
        }
LABEL_54:
        unint64_t v78 = v15;
        uint64_t v8 = v12;
        uint64_t v6 = v10;
        goto LABEL_55;
      }
      if (v10 == v6 && v11 == v8)
      {
        unint64_t v33 = v78;
        if (v78 >= v79)
        {
          uint64_t v15 = sub_18918B0((uint64_t *)&v77, (uint64_t)v3);
        }
        else
        {
          sub_189181C((uint64_t)&v77, (uint64_t)v3);
          uint64_t v15 = v33 + 88;
        }
        uint64_t v12 = v8;
        uint64_t v10 = v6;
        goto LABEL_54;
      }
    }
    else
    {
      long long v16 = (long long *)*v3;
      unint64_t v17 = (long long *)v3[1];
      while (v16 != v17)
      {
        if ((*(unsigned char *)(sub_2ABCB4((uint64_t)v16) + 17) & 1) != 0 && *(_DWORD *)(sub_2ABCB4((uint64_t)v16) + 184) == 1)
        {
          uint64_t v18 = nullsub_1(a2);
          if (sub_1890990((uint64_t)v16, (uint64_t *)(v18 + 968)))
          {
            uint64_t v19 = nullsub_1(a2);
            if (sub_1890A04((uint64_t)v16, (uint64_t *)(v19 + 776)))
            {
              unint64_t v20 = v69;
              if (v69 >= v70)
              {
                uint64_t v21 = sub_1891D60(&v68, v16);
              }
              else
              {
                sub_1891E80(v69, v16);
                uint64_t v21 = v20 + 656;
              }
              unint64_t v69 = v21;
            }
            else
            {
              unint64_t v31 = v66;
              if (v66 >= v67)
              {
                uint64_t v32 = sub_1891D60(&v65, v16);
              }
              else
              {
                sub_1891E80(v66, v16);
                uint64_t v32 = v31 + 656;
              }
              unint64_t v66 = v32;
            }
          }
          else
          {
            int v24 = sub_1CDE3A0((uint64_t)v16);
            int v25 = v24;
            if (v24 <= v7)
            {
              if (v24 == v7)
              {
                uint64_t v28 = v72;
                if ((unint64_t)v72 >= v73)
                {
                  uint64_t v29 = (long long *)sub_1891D60((uint64_t *)&v71, v16);
                }
                else
                {
                  sub_1891E80((uint64_t)v72, v16);
                  uint64_t v29 = v28 + 41;
                }
                unint64_t v72 = v29;
              }
            }
            else
            {
              int v27 = v71;
              for (uint64_t i = v72; i != v27; uint64_t i = (long long *)sub_18933B8((uint64_t)(i - 41)))
                ;
              unint64_t v72 = v27;
              if ((unint64_t)v27 >= v73)
              {
                uint64_t v30 = (long long *)sub_1891D60((uint64_t *)&v71, v16);
              }
              else
              {
                sub_1891E80((uint64_t)v27, v16);
                uint64_t v30 = v27 + 41;
              }
              unint64_t v72 = v30;
              int v7 = v25;
            }
          }
        }
        else
        {
          int v22 = v75;
          if ((unint64_t)v75 >= v76)
          {
            uint64_t v23 = (long long *)sub_1891D60((uint64_t *)&v74, v16);
          }
          else
          {
            sub_1891E80((uint64_t)v75, v16);
            uint64_t v23 = v22 + 41;
          }
          uint64_t v75 = v23;
        }
        v16 += 41;
      }
    }
LABEL_55:
    v3 += 11;
  }
  while (v3 != v4);
  uint64_t v34 = v68;
  unint64_t v35 = v69;
  if (v68 != v69)
  {
    uint64_t v36 = &v68;
    uint64_t v37 = v74;
    uint64_t v38 = v75;
    goto LABEL_61;
  }
  uint64_t v37 = v74;
  uint64_t v38 = v75;
  if (v65 == v66)
  {
    if (v74 == v75)
    {
      if (v71 == v72)
      {
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
        uint64_t v53 = v77;
        uint64_t v54 = (uint64_t *)v78;
        if (v77 != (uint64_t *)v78)
        {
          int v55 = -1;
          do
          {
            uint64_t v56 = *v53;
            if (v53[1] != *v53)
            {
              unint64_t v57 = 0;
              do
              {
                uint64_t v58 = (long long *)(v56 + 656 * v57);
                if ((int)sub_1CDE2E8((uint64_t)v58) <= v55)
                {
                  if (sub_1CDE2E8((uint64_t)v58) == v55)
                  {
                    unint64_t v61 = a3[1];
                    if (v61 >= a3[2])
                    {
                      uint64_t v62 = sub_1891D60(a3, v58);
                    }
                    else
                    {
                      sub_1891E80(a3[1], v58);
                      uint64_t v62 = v61 + 656;
                      a3[1] = v61 + 656;
                    }
                    a3[1] = v62;
                  }
                }
                else
                {
                  unint64_t v60 = *a3;
                  for (uint64_t j = a3[1]; j != v60; uint64_t j = sub_18933B8(j - 656))
                    ;
                  a3[1] = v60;
                  if (v60 >= a3[2])
                  {
                    uint64_t v63 = sub_1891D60(a3, v58);
                  }
                  else
                  {
                    sub_1891E80(v60, v58);
                    uint64_t v63 = v60 + 656;
                    a3[1] = v60 + 656;
                  }
                  a3[1] = v63;
                  int v55 = sub_1CDE2E8((uint64_t)v58);
                }
                ++v57;
                uint64_t v56 = *v53;
              }
              while (0x8F9C18F9C18F9C19 * ((v53[1] - *v53) >> 4) > v57);
            }
            v53 += 11;
          }
          while (v53 != v54);
        }
        goto LABEL_89;
      }
      uint64_t v85 = 0;
      long long v83 = 0u;
      long long v84 = 0u;
      long long v81 = 0u;
      long long v82 = 0u;
      long long v80 = 0u;
      if (v74 == v75)
      {
LABEL_93:
        if (v72 != v71) {
          sub_18934F4((uint64_t *)&v80, *((long long **)&v80 + 1), v71, (uint64_t)v72, 0x8F9C18F9C18F9C19 * (v72 - v71));
        }
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0;
        sub_1894EF8(a3, v80, *((uint64_t *)&v80 + 1), 0x8F9C18F9C18F9C19 * ((uint64_t)(*((void *)&v80 + 1) - v80) >> 4));
        goto LABEL_88;
      }
    }
    else
    {
      uint64_t v85 = 0;
      long long v83 = 0u;
      long long v84 = 0u;
      long long v81 = 0u;
      long long v82 = 0u;
      long long v80 = 0u;
    }
    sub_18934F4((uint64_t *)&v80, 0, v74, (uint64_t)v75, 0x8F9C18F9C18F9C19 * (v75 - v74));
    goto LABEL_93;
  }
  uint64_t v36 = &v65;
LABEL_61:
  sub_1894C0C(v36, (long long *)v36[1], v37, (uint64_t)v38, 0x8F9C18F9C18F9C19 * (v38 - v37));
  long long v80 = 0uLL;
  *(void *)&long long v81 = 0;
  unsigned int v39 = v71;
  uint64_t v40 = v72;
  if (v71 == v72)
  {
    unint64_t k = v36[1];
  }
  else
  {
    do
    {
      if (*(_DWORD *)sub_1BAC0C8((uint64_t)v39) && *(_DWORD *)sub_1BAC0C8((uint64_t)v39) != 1)
      {
        uint64_t v44 = *((void *)&v80 + 1);
        if (*((void *)&v80 + 1) >= (unint64_t)v81)
        {
          uint64_t v45 = sub_1891D60((uint64_t *)&v80, v39);
        }
        else
        {
          sub_1891E80(*((uint64_t *)&v80 + 1), v39);
          uint64_t v45 = v44 + 656;
        }
        *((void *)&v80 + 1) = v45;
      }
      else
      {
        unint64_t v41 = v36[1];
        if (v34 == v35) {
          uint64_t v42 = &v67;
        }
        else {
          uint64_t v42 = &v70;
        }
        if (v41 >= *v42)
        {
          uint64_t v43 = sub_1891D60(v36, v39);
        }
        else
        {
          sub_1891E80(v36[1], v39);
          uint64_t v43 = v41 + 656;
          v36[1] = v41 + 656;
        }
        v36[1] = v43;
      }
      v39 += 41;
    }
    while (v39 != v40);
    int v47 = (long long *)*((void *)&v80 + 1);
    int v46 = (long long *)v80;
    for (unint64_t k = v36[1]; v46 != v47; v46 += 41)
    {
      uint64_t v49 = *v36;
      uint64_t v50 = nullsub_1(a2);
      unint64_t v51 = 0x8F9C18F9C18F9C19 * ((uint64_t)(k - v49) >> 4);
      unint64_t k = v36[1];
      if (v51 >= *(int *)(v50 + 24)) {
        break;
      }
      uint64_t v52 = v34 == v35 ? &v67 : &v70;
      if (k >= *v52)
      {
        unint64_t k = sub_1891D60(v36, v46);
      }
      else
      {
        sub_1891E80(v36[1], v46);
        k += 656;
        v36[1] = k;
      }
      v36[1] = k;
    }
  }
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  sub_1894EF8(a3, *v36, k, 0x8F9C18F9C18F9C19 * ((uint64_t)(k - *v36) >> 4));
LABEL_88:
  v86[0] = (void **)&v80;
  sub_1894FD8(v86);
LABEL_89:
  *(void *)&long long v80 = &v65;
  sub_1894FD8((void ***)&v80);
  *(void *)&long long v80 = &v68;
  sub_1894FD8((void ***)&v80);
  *(void *)&long long v80 = &v71;
  sub_1894FD8((void ***)&v80);
  *(void *)&long long v80 = &v74;
  sub_1894FD8((void ***)&v80);
  *(void *)&long long v80 = &v77;
  sub_189505C((void ***)&v80);
}

void sub_1890870(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,void **a25)
{
  *(void *)(v25 - 104) = &a25;
  sub_1894FD8((void ***)(v25 - 104));
  a25 = (void **)&a10;
  sub_1894FD8(&a25);
  a25 = (void **)&a13;
  sub_1894FD8(&a25);
  a25 = (void **)&a16;
  sub_1894FD8(&a25);
  a25 = (void **)&a19;
  sub_1894FD8(&a25);
  a25 = (void **)&a22;
  sub_189505C(&a25);
  _Unwind_Resume(a1);
}

BOOL sub_1890990(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = sub_2ABCB4(a1);
  uint64_t v7 = sub_1891CA8(v4, v5, (unsigned __int8 **)(*(void *)(v6 + 144) & 0xFFFFFFFFFFFFFFFELL));
  uint64_t v8 = a2[1];
  return *(_DWORD *)sub_1BAC0C8(a1) == 1 && v7 != v8;
}

uint64_t sub_1890A04(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v6 = sub_2ABCB4(a1);
  LODWORD(v2) = sub_1891CA8(v4, v5, (unsigned __int8 **)(*(void *)(v6 + 144) & 0xFFFFFFFFFFFFFFFELL)) == v2[1];
  return sub_1CDE2D0(a1) ^ v2;
}

void sub_1890A70(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(long long **)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  unint64_t v6 = 0x8F9C18F9C18F9C19 * ((v4 - *(void *)a1) >> 4);
  if (v6 > 1)
  {
    uint64_t v43 = 0;
    long long v44 = 0uLL;
    uint64_t v40 = 0;
    unint64_t v41 = 0;
    unint64_t v42 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
    unint64_t v39 = 0;
    if (v5 == (long long *)v4) {
      goto LABEL_31;
    }
    int v7 = 0;
    uint64_t v8 = (uint64_t *)(a2 + 968);
    uint64_t v9 = (uint64_t *)(a2 + 776);
    do
    {
      if (sub_1890990((uint64_t)v5, v8))
      {
        if (sub_1890A04((uint64_t)v5, v9))
        {
          uint64_t v10 = v41;
          if ((unint64_t)v41 >= v42)
          {
            uint64_t v11 = (void **)sub_1891D60((uint64_t *)&v40, v5);
          }
          else
          {
            sub_1891E80((uint64_t)v41, v5);
            uint64_t v11 = v10 + 82;
          }
          unint64_t v41 = v11;
        }
        else
        {
          uint64_t v15 = v38;
          if ((unint64_t)v38 >= v39)
          {
            long long v16 = (void **)sub_1891D60((uint64_t *)&v37, v5);
          }
          else
          {
            sub_1891E80((uint64_t)v38, v5);
            long long v16 = v15 + 82;
          }
          uint64_t v38 = v16;
        }
      }
      else
      {
        int v12 = sub_1CDE3A0((uint64_t)v5);
        if (v12 >= v7 && !sub_1CDE360((uint64_t)v5))
        {
          unint64_t v13 = v44;
          if (v12 > v7)
          {
            uint64_t v14 = (uint64_t)v43;
            while (v13 != v14)
            {
              v13 -= 656;
              sub_18933B8(v13);
            }
            *(void *)&long long v44 = v14;
            unint64_t v13 = v14;
          }
          if (v13 >= *((void *)&v44 + 1))
          {
            uint64_t v17 = sub_1891D60((uint64_t *)&v43, v5);
          }
          else
          {
            sub_1891E80(v13, v5);
            uint64_t v17 = v13 + 656;
          }
          *(void *)&long long v44 = v17;
          int v7 = v12;
        }
      }
      v5 += 41;
    }
    while (v5 != (long long *)v4);
    if (v40 == v41)
    {
LABEL_31:
      unint64_t v20 = v43;
      if (v37 == v38)
      {
        *(void *)a3 = v43;
        *(_OWORD *)(a3 + 8) = v44;
        long long v44 = 0uLL;
        uint64_t v43 = 0;
LABEL_65:
        uint64_t v34 = (void **)&v37;
        sub_1894FD8(&v34);
        uint64_t v37 = (void **)&v40;
        sub_1894FD8(&v37);
        uint64_t v40 = (void **)&v43;
        sub_1894FD8(&v40);
        return;
      }
      uint64_t v19 = &v37;
      int v18 = 1;
    }
    else
    {
      int v18 = 0;
      uint64_t v19 = &v40;
      unint64_t v20 = v43;
    }
    uint64_t v34 = 0;
    unint64_t v35 = 0;
    unint64_t v36 = 0;
    uint64_t v21 = (long long *)v44;
    if (v20 != (long long *)v44)
    {
      int v22 = v18 ? &v37 : &v40;
      do
      {
        if (*(_DWORD *)sub_1BAC0C8((uint64_t)v20) && *(_DWORD *)sub_1BAC0C8((uint64_t)v20) != 1)
        {
          __int16 v26 = v35;
          if ((unint64_t)v35 >= v36)
          {
            int v27 = (void **)sub_1891D60((uint64_t *)&v34, v20);
          }
          else
          {
            sub_1891E80((uint64_t)v35, v20);
            int v27 = v26 + 82;
          }
          unint64_t v35 = v27;
        }
        else
        {
          uint64_t v23 = v22[1];
          if (v18) {
            int v24 = &v37;
          }
          else {
            int v24 = &v40;
          }
          if (v23 >= v24[2])
          {
            uint64_t v25 = sub_1891D60((uint64_t *)v19, v20);
          }
          else
          {
            sub_1891E80((uint64_t)v22[1], v20);
            uint64_t v25 = (uint64_t)(v23 + 82);
            v22[1] = v23 + 82;
          }
          v22[1] = (void **)v25;
        }
        v20 += 41;
      }
      while (v20 != v21);
      uint64_t v28 = (long long *)v34;
      uint64_t v29 = v35;
      if (v34 != v35)
      {
        unint64_t v30 = (unint64_t)v22[1];
        do
        {
          if (0x8F9C18F9C18F9C19 * ((uint64_t)(v30 - (void)*v19) >> 4) >= *(int *)(a2 + 32)) {
            break;
          }
          unint64_t v31 = v18 ? &v37 : &v40;
          if (v30 >= (unint64_t)v31[2])
          {
            unint64_t v30 = sub_1891D60((uint64_t *)v19, v28);
          }
          else
          {
            sub_1891E80(v30, v28);
            v30 += 656;
            v22[1] = (void **)v30;
          }
          v22[1] = (void **)v30;
          v28 += 41;
        }
        while (v28 != (long long *)v29);
      }
    }
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    uint64_t v32 = &v40;
    if (v18) {
      uint64_t v32 = &v37;
    }
    sub_1894EF8((void *)a3, (uint64_t)*v19, (uint64_t)v32[1], 0x8F9C18F9C18F9C19 * (((char *)v32[1] - (char *)*v19) >> 4));
    uint64_t v45 = &v34;
    sub_1894FD8((void ***)&v45);
    goto LABEL_65;
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;

  sub_1894EF8((void *)a3, (uint64_t)v5, v4, v6);
}

void sub_1890E9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void ****a10, uint64_t a11, uint64_t a12, void ***a13, uint64_t a14, uint64_t a15, void **a16, uint64_t a17, uint64_t a18, char a19)
{
  *(void *)(v19 - 88) = &a10;
  sub_1894FD8((void ***)(v19 - 88));
  a10 = &a13;
  sub_1894FD8((void ***)&a10);
  a13 = &a16;
  sub_1894FD8((void ***)&a13);
  a16 = (void **)&a19;
  sub_1894FD8(&a16);
  _Unwind_Resume(a1);
}

void sub_1890F3C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, int a8@<W7>, uint64_t *a9@<X8>, char a10)
{
  *a9 = 0;
  a9[1] = 0;
  a9[2] = 0;
  if (*(void *)(a6 + 8) == *(void *)a6) {
    sub_66748();
  }
  int v30 = sub_1F7A934(*(uint64_t **)a6);
  if (*(void *)(a6 + 8) == *(void *)a6) {
    sub_66748();
  }
  int v28 = *(_DWORD *)(*(void *)a6 + 64);
  uint64_t v48 = 0;
  long long v49 = 0uLL;
  if (sub_1956048(a7))
  {
    sub_18BDC5C((uint64_t *)a6, a7, a8, (uint64_t *)&v42);
    if (v48)
    {
      *(void *)&long long v49 = v48;
      operator delete(v48);
    }
    long long v16 = v42;
    uint64_t v48 = v42;
    long long v49 = v43;
    uint64_t v17 = (void *)v43;
    BOOL v29 = v42 != (void *)v43;
  }
  else
  {
    BOOL v29 = 0;
    long long v16 = v48;
    uint64_t v17 = (void *)v49;
  }
  if (v16 == v17)
  {
    sub_18BDB74((void *)a6, a8, (uint64_t *)&v42);
    if (v48)
    {
      *(void *)&long long v49 = v48;
      operator delete(v48);
    }
    long long v16 = v42;
    uint64_t v48 = v42;
    long long v49 = v43;
    uint64_t v17 = (void *)v43;
  }
  if (v16 != v17)
  {
    sub_1955C58((uint64_t *)&v48, v47);
    sub_19B595C(a5, *a3, v47, 0, (uint64_t)&v45);
    uint64_t v19 = v45;
    int v18 = v46;
    if (0xAAAAAAAAAAAAAAABLL * (v46 - v45) < 0xAAAAAAAAAAAAAAABLL * ((v47[1] - v47[0]) >> 3))
    {
      unint64_t v20 = *(NSObject **)(a2 + 1416);
      if (os_log_type_enabled(v20, OS_LOG_TYPE_DEBUG))
      {
        sub_188DA24(&v42, *(char **)(a1 + 488), *(char **)(a1 + 496), *(void *)(a1 + 496) - *(void *)(a1 + 488));
        if (v43 >= 0) {
          __int16 v26 = &v42;
        }
        else {
          __int16 v26 = v42;
        }
        *(_DWORD *)buf = 136315138;
        unint64_t v51 = v26;
        _os_log_debug_impl(&def_332C, v20, OS_LOG_TYPE_DEBUG, "missing forward data - %s ", buf, 0xCu);
        if (SHIBYTE(v43) < 0) {
          operator delete(v42);
        }
        uint64_t v19 = v45;
        int v18 = v46;
      }
    }
    for (; v19 != v18; v19 += 3)
    {
      if (*((char *)v19 + 23) < 0)
      {
        sub_4200(&__dst, *(void **)v19, *((void *)v19 + 1));
      }
      else
      {
        long long v21 = *v19;
        uint64_t v39 = *((void *)v19 + 2);
        long long __dst = v21;
      }
      if (*((char *)v19 + 47) < 0)
      {
        sub_4200(&__p, *((void **)v19 + 3), *((void *)v19 + 4));
      }
      else
      {
        long long v22 = *(long long *)((char *)v19 + 24);
        uint64_t v41 = *((void *)v19 + 5);
        long long __p = v22;
      }
      sub_18950D0((uint64_t)v34, a1);
      int v35 = *(_DWORD *)(a1 + 480);
      memset(v36, 0, sizeof(v36));
      sub_18967EC(v36, *(const void **)(a1 + 488), *(void *)(a1 + 496), *(void *)(a1 + 496) - *(void *)(a1 + 488));
      sub_18968AC((uint64_t)&v37, a1 + 512);
      sub_1896C00((uint64_t)v33, a2);
      uint64_t v23 = *(void *)(a4 + 24);
      if (!v23) {
        sub_29F82C();
      }
      (*(void (**)(void **__return_ptr))(*(void *)v23 + 48))(&v42);
      sub_1898A60((uint64_t)v33);
      sub_1898B80((uint64_t)v34);
      if (SHIBYTE(v41) < 0) {
        operator delete((void *)__p);
      }
      if (SHIBYTE(v39) < 0) {
        operator delete((void *)__dst);
      }
      if (v44)
      {
        if (a10)
        {
          sub_1CDE2F0((uint64_t)&v42, 5u);
          if (*(void *)(a6 + 8) == *(void *)a6) {
            sub_66748();
          }
          sub_1CDE2E0((uint64_t)&v42, (*(void *)(*(void *)a6 + 8) - **(void **)a6) >> 5);
        }
        if (v29) {
          sub_1CDE2F0((uint64_t)&v42, 6u);
        }
        sub_1CDE398((uint64_t)&v42, v30);
        sub_1CDE3B0((uint64_t)&v42, v28);
        unint64_t v24 = a9[1];
        if (v24 >= a9[2])
        {
          uint64_t v25 = sub_1898C18(a9, (long long *)&v42);
        }
        else
        {
          sub_1891E80(a9[1], (long long *)&v42);
          uint64_t v25 = v24 + 656;
          a9[1] = v24 + 656;
        }
        a9[1] = v25;
        if (v44) {
          sub_18933B8((uint64_t)&v42);
        }
      }
    }
    unint64_t v42 = &v45;
    sub_1898078((void ***)&v42);
    unint64_t v42 = v47;
    sub_1891624((void ***)&v42);
    uint64_t v17 = v48;
  }
  if (v17)
  {
    *(void *)&long long v49 = v17;
    operator delete(v17);
  }
}

void sub_18913D4(_Unwind_Exception *a1)
{
  STACK[0x900] = v2 - 200;
  sub_1898078((void ***)&STACK[0x900]);
  STACK[0x900] = v2 - 176;
  sub_1891624((void ***)&STACK[0x900]);
  uint64_t v4 = *(void **)(v2 - 152);
  if (v4)
  {
    *(void *)(v2 - 144) = v4;
    operator delete(v4);
  }
  STACK[0x900] = v1;
  sub_1894FD8((void ***)&STACK[0x900]);
  _Unwind_Resume(a1);
}

char *sub_18914E4(uint64_t a1, long long *a2, long long *a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v11 = __dst;
  int v12 = __dst;
  v9[0] = a1;
  v9[1] = &v11;
  v9[2] = &v12;
  char v10 = 0;
  if (a2 != a3)
  {
    unint64_t v6 = a2;
    do
    {
      if (*((char *)v6 + 23) < 0)
      {
        sub_4200(v4, *(void **)v6, *((void *)v6 + 1));
        uint64_t v4 = v12;
      }
      else
      {
        long long v7 = *v6;
        *((void *)v4 + 2) = *((void *)v6 + 2);
        *(_OWORD *)uint64_t v4 = v7;
      }
      unint64_t v6 = (long long *)((char *)v6 + 24);
      v4 += 24;
      int v12 = v4;
    }
    while (v6 != a3);
  }
  char v10 = 1;
  sub_18915A4((uint64_t)v9);
  return v4;
}

void sub_1891590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_18915A4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_18915DC(a1);
  }
  return a1;
}

void sub_18915DC(uint64_t a1)
{
  uint64_t v1 = **(void **)(a1 + 16);
  uint64_t v2 = **(void **)(a1 + 8);
  while (v1 != v2)
  {
    if (*(char *)(v1 - 1) < 0) {
      operator delete(*(void **)(v1 - 24));
    }
    v1 -= 24;
  }
}

void sub_1891624(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_1891678((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_1891678(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 24)
  {
    if (*(char *)(i - 1) < 0) {
      operator delete(*(void **)(i - 24));
    }
  }
  a1[1] = v2;
}

char *sub_18916C8(char *__dst, long long *a2, long long *a3)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v5 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v5;
  }
  unint64_t v6 = __dst + 24;
  if (*((char *)a3 + 23) < 0)
  {
    sub_4200(v6, *(void **)a3, *((void *)a3 + 1));
  }
  else
  {
    long long v7 = *a3;
    *((void *)__dst + 5) = *((void *)a3 + 2);
    *(_OWORD *)unint64_t v6 = v7;
  }
  *((_DWORD *)__dst + 12) = *((_DWORD *)a3 + 6);
  return __dst;
}

void sub_189174C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1891768(void *a1, unsigned int *a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = *a2;
  uint8x8_t v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    unint64_t v5 = *a2;
    if (*(void *)&v2 <= v3) {
      unint64_t v5 = v3 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v5 = (v2.i32[0] - 1) & v3;
  }
  unint64_t v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6) {
    return 0;
  }
  for (uint64_t result = *v6; result; uint64_t result = (uint64_t *)*result)
  {
    unint64_t v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == v3) {
        return result;
      }
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(void *)&v2) {
          v8 %= *(void *)&v2;
        }
      }
      else
      {
        v8 &= *(void *)&v2 - 1;
      }
      if (v8 != v5) {
        return 0;
      }
    }
  }
  return result;
}

__n128 sub_189181C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(void *)(v4 + 16) = 0;
  sub_1894EF8((void *)v4, *(void *)a2, *(void *)(a2 + 8), 0x8F9C18F9C18F9C19 * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4));
  __n128 result = *(__n128 *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(v4 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(v4 + 56) = v7;
  *(_OWORD *)(v4 + 40) = v6;
  *(__n128 *)(v4 + 24) = result;
  *(void *)(a1 + 8) = v4 + 88;
  return result;
}

void sub_18918A8(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_18918B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = 0x2E8BA2E8BA2E8BA3 * ((a1[1] - *a1) >> 3);
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) > 0x2E8BA2E8BA2E8BALL) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x2E8BA2E8BA2E8BA3 * ((a1[2] - v3) >> 3);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x1745D1745D1745DLL) {
    unint64_t v9 = 0x2E8BA2E8BA2E8BALL;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v21 = a1 + 2;
  if (v9) {
    char v10 = (char *)sub_1891A94(v7, v9);
  }
  else {
    char v10 = 0;
  }
  uint64_t v11 = &v10[88 * v4];
  v18[0] = v10;
  v18[1] = v11;
  uint64_t v19 = v11;
  unint64_t v20 = &v10[88 * v9];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  *((void *)v11 + 2) = 0;
  sub_1894EF8(v11, *(void *)a2, *(void *)(a2 + 8), 0x8F9C18F9C18F9C19 * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 4));
  int v12 = &v10[88 * v4];
  long long v13 = *(_OWORD *)(a2 + 56);
  long long v14 = *(_OWORD *)(a2 + 72);
  long long v15 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v12 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(v12 + 24) = v15;
  *(_OWORD *)(v12 + 72) = v14;
  *(_OWORD *)(v12 + 56) = v13;
  v19 += 88;
  sub_1891A1C(a1, v18);
  uint64_t v16 = a1[1];
  sub_1891C20(v18);
  return v16;
}

void sub_1891A08(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1891C20((void **)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1891A1C(uint64_t *a1, void *a2)
{
  uint64_t result = sub_1891AE0((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_1891A94(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x2E8BA2E8BA2E8BBLL) {
    sub_188D718();
  }
  return operator new(88 * a2);
}

uint64_t sub_1891AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v17 = a6;
  *((void *)&v17 + 1) = a7;
  long long v16 = v17;
  v14[0] = a1;
  v14[1] = &v16;
  v14[2] = &v17;
  if (a3 == a5)
  {
    uint64_t v12 = a6;
  }
  else
  {
    do
    {
      *(void *)(v7 - 88) = 0;
      *(void *)(v7 - 80) = 0;
      *(void *)(v7 - 72) = 0;
      long long v8 = *(_OWORD *)(a3 - 88);
      a3 -= 88;
      *(_OWORD *)(v7 - 88) = v8;
      *(void *)(v7 - 72) = *(void *)(a3 + 16);
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      long long v9 = *(_OWORD *)(a3 + 40);
      long long v10 = *(_OWORD *)(a3 + 72);
      long long v11 = *(_OWORD *)(a3 + 24);
      *(_OWORD *)(v7 - 32) = *(_OWORD *)(a3 + 56);
      *(_OWORD *)(v7 - 16) = v10;
      *(_OWORD *)(v7 - 64) = v11;
      *(_OWORD *)(v7 - 48) = v9;
      uint64_t v7 = *((void *)&v17 + 1) - 88;
      *((void *)&v17 + 1) -= 88;
    }
    while (a3 != a5);
    uint64_t v12 = v17;
  }
  char v15 = 1;
  sub_1891B9C((uint64_t)v14);
  return v12;
}

uint64_t sub_1891B9C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_1891BD4(a1);
  }
  return a1;
}

void sub_1891BD4(uint64_t a1)
{
  uint64_t v1 = *(void ***)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void ***)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = v1;
    sub_1894FD8(&v3);
    v1 += 11;
  }
}

void **sub_1891C20(void **a1)
{
  if (*a1) {
    operator delete(*a1);
  }
  return a1;
}

void sub_1891C54(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v2; uint64_t i = *(void *)(a1 + 16))
  {
    uint64_t v4 = (void **)(i - 88);
    *(void *)(a1 + 16) = v4;
    uint64_t v5 = v4;
    sub_1894FD8(&v5);
  }
}

uint64_t sub_1891CA8(uint64_t a1, uint64_t a2, unsigned __int8 **a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    char v5 = *((unsigned char *)a3 + 23);
    if (v5 >= 0) {
      uint64_t v6 = (unsigned __int8 *)*((unsigned __int8 *)a3 + 23);
    }
    else {
      uint64_t v6 = a3[1];
    }
    if (v5 >= 0) {
      uint64_t v7 = (unsigned __int8 *)a3;
    }
    else {
      uint64_t v7 = *a3;
    }
    do
    {
      uint64_t v8 = *(unsigned __int8 *)(v3 + 23);
      if ((v8 & 0x80u) == 0) {
        long long v9 = (unsigned __int8 *)*(unsigned __int8 *)(v3 + 23);
      }
      else {
        long long v9 = *(unsigned __int8 **)(v3 + 8);
      }
      if (v9 == v6)
      {
        if ((v8 & 0x80) != 0)
        {
          if (!memcmp(*(const void **)v3, v7, *(void *)(v3 + 8))) {
            return v3;
          }
        }
        else
        {
          if (!*(unsigned char *)(v3 + 23)) {
            return v3;
          }
          uint64_t v10 = 0;
          while (*(unsigned __int8 *)(v3 + v10) == v7[v10])
          {
            if (v8 == ++v10) {
              return v3;
            }
          }
        }
      }
      v3 += 24;
    }
    while (v3 != a2);
    return a2;
  }
  return v3;
}

uint64_t sub_1891D60(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0x8F9C18F9C18F9C19 * ((a1[1] - *a1) >> 4);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x63E7063E7063E7) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x8F9C18F9C18F9C19 * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x31F3831F3831F3) {
    unint64_t v9 = 0x63E7063E7063E7;
  }
  else {
    unint64_t v9 = v5;
  }
  long long v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_189308C(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  long long v13 = v10;
  long long v14 = &v10[656 * v4];
  long long v16 = &v10[656 * v9];
  sub_1891E80((uint64_t)v14, a2);
  char v15 = v14 + 656;
  sub_1893004(a1, &v13);
  uint64_t v11 = a1[1];
  sub_18934A4((uint64_t)&v13);
  return v11;
}

void sub_1891E6C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_18934A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1891E80(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_OWORD *)(a1 + 12) = *(long long *)((char *)a2 + 12);
  *(_OWORD *)a1 = v4;
  sub_1205CA4(a1 + 32, a2 + 2);
  unint64_t v5 = (unsigned char *)(a1 + 248);
  if (*((char *)a2 + 271) < 0)
  {
    sub_4200(v5, *((void **)a2 + 31), *((void *)a2 + 32));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 248);
    *(void *)(a1 + 264) = *((void *)a2 + 33);
    *(_OWORD *)unint64_t v5 = v6;
  }
  *(void *)(a1 + 272) = *((void *)a2 + 34);
  if (*((char *)a2 + 303) < 0)
  {
    sub_4200((unsigned char *)(a1 + 280), *((void **)a2 + 35), *((void *)a2 + 36));
  }
  else
  {
    long long v7 = *(long long *)((char *)a2 + 280);
    *(void *)(a1 + 296) = *((void *)a2 + 37);
    *(_OWORD *)(a1 + 280) = v7;
  }
  unint64_t v8 = (unsigned char *)(a1 + 304);
  if (*((char *)a2 + 327) < 0)
  {
    sub_4200(v8, *((void **)a2 + 38), *((void *)a2 + 39));
  }
  else
  {
    long long v9 = a2[19];
    *(void *)(a1 + 320) = *((void *)a2 + 40);
    *(_OWORD *)unint64_t v8 = v9;
  }
  sub_1892198(a1 + 328, (uint64_t)a2 + 328);
  uint64_t v10 = *((void *)a2 + 62);
  *(void *)(a1 + 488) = *((void *)a2 + 61);
  *(void *)(a1 + 496) = v10;
  if (v10) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
  }
  sub_1892AD8(a1 + 504, (uint64_t)a2 + 504);
  *(void *)(a1 + 560) = 0;
  *(_OWORD *)(a1 + 544) = 0u;
  sub_8A6F8((char *)(a1 + 544), *((void *)a2 + 68), *((void *)a2 + 69), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 69) - *((void *)a2 + 68)) >> 3));
  long long v11 = *(long long *)((char *)a2 + 584);
  *(_OWORD *)(a1 + 568) = *(long long *)((char *)a2 + 568);
  *(_OWORD *)(a1 + 584) = v11;
  sub_1892D6C(a1 + 600, (uint64_t)a2 + 600);
  *(_OWORD *)(a1 + 640) = a2[40];
  return a1;
}

void sub_1892000(_Unwind_Exception *a1)
{
  if (*(char *)(v2 + 303) < 0) {
    operator delete(*v3);
  }
  sub_1892154(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_189208C(uint64_t a1)
{
  sub_1892A7C(a1 + 136, *(void **)(a1 + 144));
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  uint64_t v3 = (void **)a1;
  sub_1891624(&v3);
  return a1;
}

uint64_t sub_1892110(uint64_t a1)
{
  if (*(char *)(a1 + 55) < 0) {
    operator delete(*(void **)(a1 + 32));
  }
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  return a1;
}

void *sub_1892154(uint64_t a1)
{
  if (*(char *)(a1 + 239) < 0) {
    operator delete(*(void **)(a1 + 216));
  }

  return sub_1205E4C((void *)a1);
}

uint64_t sub_1892198(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_8A6F8((char *)a1, *(void *)a2, *(void *)(a2 + 8), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 3));
  if (*(char *)(a2 + 47) < 0)
  {
    sub_4200((unsigned char *)(a1 + 24), *(void **)(a2 + 24), *(void *)(a2 + 32));
  }
  else
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = v4;
  }
  if (*(char *)(a2 + 71) < 0)
  {
    sub_4200((unsigned char *)(a1 + 48), *(void **)(a2 + 48), *(void *)(a2 + 56));
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = v5;
  }
  if (*(char *)(a2 + 95) < 0)
  {
    sub_4200((unsigned char *)(a1 + 72), *(void **)(a2 + 72), *(void *)(a2 + 80));
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 72);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = v6;
  }
  if (*(char *)(a2 + 119) < 0)
  {
    sub_4200((unsigned char *)(a1 + 96), *(void **)(a2 + 96), *(void *)(a2 + 104));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 96);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = v7;
  }
  uint64_t v8 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 120) = v8;
  sub_1892354((uint64_t *)(a1 + 136), a2 + 136);
  return a1;
}

void sub_18922DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  if (*(char *)(v10 + 95) < 0) {
    operator delete(*v13);
  }
  if (*(char *)(v10 + 71) < 0) {
    operator delete(*v12);
  }
  if (*(char *)(v10 + 47) < 0) {
    operator delete(*v11);
  }
  a10 = (void **)v10;
  sub_1891624(&a10);
  _Unwind_Resume(a1);
}

uint64_t *sub_1892354(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_18923AC(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_1892394(_Unwind_Exception *a1)
{
  sub_1892A7C(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_18923AC(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = result + 1;
    do
    {
      uint64_t result = sub_1892438(v5, v6, v4 + 8, v4 + 8);
      long long v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;
          long long v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          uint64_t v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_1892438(uint64_t **a1, uint64_t *a2, int *a3, _DWORD *a4)
{
  long long v6 = sub_188E5EC(a1, a2, &v12, &v11, a3);
  long long v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    uint64_t v8 = (uint64_t **)v6;
    sub_18924D0((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, (uint64_t)v12, v8, v10[0]);
    long long v7 = v10[0];
    v10[0] = 0;
    sub_1892A24((uint64_t)v10, 0);
  }
  return v7;
}

uint64_t sub_18924D0@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  v6[8] = *a2;
  uint64_t result = sub_1892544((uint64_t)(v6 + 10), (uint64_t)(a2 + 2));
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_189252C(_Unwind_Exception *a1)
{
  sub_1892A24(v1, 0);
  _Unwind_Resume(a1);
}

uint64_t sub_1892544(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_18925BC(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(int **)(a2 + 16); i; uint64_t i = *(int **)i)
    sub_1892808(a1, i + 4, (void *)i + 2);
  return a1;
}

void sub_18925A4(_Unwind_Exception *a1)
{
  sub_12168(v1);
  _Unwind_Resume(a1);
}

void sub_18925BC(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_18926AC(a1, prime);
    }
  }
}

void sub_18926AC(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_188D718();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(void **)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      uint64_t v11 = (void *)*v7;
      if (*v7)
      {
        do
        {
          unint64_t v12 = v11[1];
          if (v9.u32[0] > 1uLL)
          {
            if (v12 >= a2) {
              v12 %= a2;
            }
          }
          else
          {
            v12 &= a2 - 1;
          }
          if (v12 != v8)
          {
            if (!*(void *)(*(void *)a1 + 8 * v12))
            {
              *(void *)(*(void *)a1 + 8 * v12) = v7;
              goto LABEL_24;
            }
            void *v7 = *v11;
            *uint64_t v11 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = v11;
            uint64_t v11 = v7;
          }
          unint64_t v12 = v8;
LABEL_24:
          uint64_t v7 = v11;
          uint64_t v11 = (void *)*v11;
          unint64_t v8 = v12;
        }
        while (v11);
      }
    }
  }
  else
  {
    uint64_t v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void *sub_1892808(uint64_t a1, int *a2, void *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint8x8_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      uint64_t v10 = *v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == v6) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          uint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  uint64_t v10 = operator new(0x18uLL);
  *uint64_t v10 = 0;
  v10[1] = v6;
  v10[2] = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_18925BC(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *uint64_t v10 = *v19;
LABEL_38:
    *uint64_t v19 = v10;
    goto LABEL_39;
  }
  *uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    unint64_t v20 = *(void *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v10;
}

void sub_1892A10(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1892A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_12168((uint64_t)v2 + 40);
    }
    operator delete(v2);
  }
}

void sub_1892A7C(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1892A7C(a1, *a2);
    sub_1892A7C(a1, a2[1]);
    sub_12168((uint64_t)(a2 + 5));
    operator delete(a2);
  }
}

uint64_t sub_1892AD8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_18925BC(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(int **)(a2 + 16); i; uint64_t i = *(int **)i)
    sub_1892B50(a1, i + 4, (_OWORD *)i + 1);
  return a1;
}

void sub_1892B38(_Unwind_Exception *a1)
{
  sub_12168(v1);
  _Unwind_Resume(a1);
}

void *sub_1892B50(uint64_t a1, int *a2, _OWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint8x8_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      uint64_t v10 = *v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == v6) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          uint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  uint64_t v10 = operator new(0x20uLL);
  *uint64_t v10 = 0;
  v10[1] = v6;
  *((_OWORD *)v10 + 1) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_18925BC(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *uint64_t v10 = *v19;
LABEL_38:
    *uint64_t v19 = v10;
    goto LABEL_39;
  }
  *uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    unint64_t v20 = *(void *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v10;
}

void sub_1892D58(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1892D6C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_18925BC(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(unsigned int **)(a2 + 16); i; uint64_t i = *(unsigned int **)i)
    sub_1892DE4(a1, i + 4, i + 4);
  return a1;
}

void sub_1892DCC(_Unwind_Exception *a1)
{
  sub_12168(v1);
  _Unwind_Resume(a1);
}

void *sub_1892DE4(uint64_t a1, unsigned int *a2, _DWORD *a3)
{
  unint64_t v6 = *a2;
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    uint8x8_t v8 = (uint8x8_t)vcnt_s8((int8x8_t)v7);
    v8.i16[0] = vaddlv_u8(v8);
    if (v8.u32[0] > 1uLL)
    {
      unint64_t v3 = *a2;
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
    uint8x8_t v9 = *(void ***)(*(void *)a1 + 8 * v3);
    if (v9)
    {
      uint64_t v10 = *v9;
      if (*v9)
      {
        do
        {
          unint64_t v11 = v10[1];
          if (v11 == v6)
          {
            if (*((_DWORD *)v10 + 4) == v6) {
              return v10;
            }
          }
          else
          {
            if (v8.u32[0] > 1uLL)
            {
              if (v11 >= v7) {
                v11 %= v7;
              }
            }
            else
            {
              v11 &= v7 - 1;
            }
            if (v11 != v3) {
              break;
            }
          }
          uint64_t v10 = (void *)*v10;
        }
        while (v10);
      }
    }
  }
  uint64_t v10 = operator new(0x18uLL);
  *uint64_t v10 = 0;
  v10[1] = v6;
  *((_DWORD *)v10 + 4) = *a3;
  float v12 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v13 = *(float *)(a1 + 32);
  if (!v7 || (float)(v13 * (float)v7) < v12)
  {
    BOOL v14 = 1;
    if (v7 >= 3) {
      BOOL v14 = (v7 & (v7 - 1)) != 0;
    }
    unint64_t v15 = v14 | (2 * v7);
    unint64_t v16 = vcvtps_u32_f32(v12 / v13);
    if (v15 <= v16) {
      size_t v17 = v16;
    }
    else {
      size_t v17 = v15;
    }
    sub_18925BC(a1, v17);
    unint64_t v7 = *(void *)(a1 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v7 <= v6) {
        unint64_t v3 = v6 % v7;
      }
      else {
        unint64_t v3 = v6;
      }
    }
    else
    {
      unint64_t v3 = (v7 - 1) & v6;
    }
  }
  uint64_t v18 = *(void *)a1;
  uint64_t v19 = *(void **)(*(void *)a1 + 8 * v3);
  if (v19)
  {
    *uint64_t v10 = *v19;
LABEL_38:
    *uint64_t v19 = v10;
    goto LABEL_39;
  }
  *uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  *(void *)(v18 + 8 * v3) = a1 + 16;
  if (*v10)
  {
    unint64_t v20 = *(void *)(*v10 + 8);
    if ((v7 & (v7 - 1)) != 0)
    {
      if (v20 >= v7) {
        v20 %= v7;
      }
    }
    else
    {
      v20 &= v7 - 1;
    }
    uint64_t v19 = (void *)(*(void *)a1 + 8 * v20);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return v10;
}

void sub_1892FF0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t sub_1893004(uint64_t *a1, void *a2)
{
  unint64_t v5 = (long long *)*a1;
  int8x8_t v4 = (long long *)a1[1];
  uint64_t result = a2[1];
  while (v4 != v5)
  {
    v4 -= 41;
    uint64_t result = sub_18930D8(result - 656, v4);
  }
  a2[1] = result;
  uint64_t v7 = *a1;
  *a1 = result;
  a2[1] = v7;
  uint64_t v8 = a1[1];
  a1[1] = a2[2];
  a2[2] = v8;
  uint64_t v9 = a1[2];
  a1[2] = a2[3];
  a2[3] = v9;
  *a2 = a2[1];
  return result;
}

void *sub_189308C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x63E7063E7063E8) {
    sub_188D718();
  }
  return operator new(656 * a2);
}

uint64_t sub_18930D8(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_OWORD *)(a1 + 12) = *(long long *)((char *)a2 + 12);
  *(_OWORD *)a1 = v4;
  sub_18932A8(a1 + 32, (uint64_t)(a2 + 2));
  long long v5 = *(long long *)((char *)a2 + 248);
  *(void *)(a1 + 264) = *((void *)a2 + 33);
  *(_OWORD *)(a1 + 248) = v5;
  *((void *)a2 + 31) = 0;
  *((void *)a2 + 32) = 0;
  *((void *)a2 + 33) = 0;
  *(void *)(a1 + 272) = *((void *)a2 + 34);
  long long v6 = *(long long *)((char *)a2 + 280);
  *(void *)(a1 + 296) = *((void *)a2 + 37);
  *(_OWORD *)(a1 + 280) = v6;
  *((void *)a2 + 36) = 0;
  *((void *)a2 + 37) = 0;
  *((void *)a2 + 35) = 0;
  long long v7 = a2[19];
  *(void *)(a1 + 320) = *((void *)a2 + 40);
  *(_OWORD *)(a1 + 304) = v7;
  *((void *)a2 + 39) = 0;
  *((void *)a2 + 40) = 0;
  *((void *)a2 + 38) = 0;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  uint64_t v8 = *((void *)a2 + 42);
  *(void *)(a1 + 328) = *((void *)a2 + 41);
  *(void *)(a1 + 336) = v8;
  *(void *)(a1 + 344) = *((void *)a2 + 43);
  *((void *)a2 + 41) = 0;
  *((void *)a2 + 42) = 0;
  *((void *)a2 + 43) = 0;
  long long v9 = a2[22];
  *(void *)(a1 + 368) = *((void *)a2 + 46);
  *(_OWORD *)(a1 + 352) = v9;
  *((void *)a2 + 45) = 0;
  *((void *)a2 + 46) = 0;
  *((void *)a2 + 44) = 0;
  long long v10 = *(long long *)((char *)a2 + 376);
  *(void *)(a1 + 392) = *((void *)a2 + 49);
  *(_OWORD *)(a1 + 376) = v10;
  *((void *)a2 + 48) = 0;
  *((void *)a2 + 49) = 0;
  *((void *)a2 + 47) = 0;
  long long v11 = a2[25];
  *(void *)(a1 + 416) = *((void *)a2 + 52);
  *(_OWORD *)(a1 + 400) = v11;
  *((void *)a2 + 50) = 0;
  *((void *)a2 + 51) = 0;
  *((void *)a2 + 52) = 0;
  long long v12 = *(long long *)((char *)a2 + 424);
  *(void *)(a1 + 440) = *((void *)a2 + 55);
  *(_OWORD *)(a1 + 424) = v12;
  *((void *)a2 + 53) = 0;
  *((void *)a2 + 54) = 0;
  *((void *)a2 + 55) = 0;
  uint64_t v13 = *((void *)a2 + 56);
  *(_DWORD *)(a1 + 456) = *((_DWORD *)a2 + 114);
  *(void *)(a1 + 448) = v13;
  *(void *)(a1 + 464) = *((void *)a2 + 58);
  uint64_t v14 = a1 + 472;
  uint64_t v15 = *((void *)a2 + 59);
  *(void *)(a1 + 472) = v15;
  uint64_t v16 = *((void *)a2 + 60);
  *(void *)(a1 + 480) = v16;
  if (v16)
  {
    *(void *)(v15 + 16) = v14;
    *((void *)a2 + 58) = (char *)a2 + 472;
    *((void *)a2 + 59) = 0;
    *((void *)a2 + 60) = 0;
  }
  else
  {
    *(void *)(a1 + 464) = v14;
  }
  uint64_t v17 = *((void *)a2 + 62);
  *(void *)(a1 + 488) = *((void *)a2 + 61);
  *(void *)(a1 + 496) = v17;
  *(long long *)((char *)a2 + 488) = 0u;
  sub_1893348(a1 + 504, (uint64_t *)a2 + 63);
  *(void *)(a1 + 560) = 0;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 544) = a2[34];
  *(void *)(a1 + 560) = *((void *)a2 + 70);
  *((void *)a2 + 70) = 0;
  a2[34] = 0u;
  long long v18 = *(long long *)((char *)a2 + 584);
  *(_OWORD *)(a1 + 568) = *(long long *)((char *)a2 + 568);
  *(_OWORD *)(a1 + 584) = v18;
  sub_1893348(a1 + 600, (uint64_t *)a2 + 75);
  *(_OWORD *)(a1 + 640) = a2[40];
  return a1;
}

uint64_t sub_18932A8(uint64_t a1, uint64_t a2)
{
  sub_12057D0(a1, 0, 0);
  if (a1 != a2)
  {
    uint64_t v4 = *(void *)(a1 + 8);
    if ((v4 & 2) != 0)
    {
      long long v5 = 0;
    }
    else
    {
      long long v5 = (void *)(v4 & 0xFFFFFFFFFFFFFFFCLL);
      if (v4) {
        long long v5 = (void *)*v5;
      }
    }
    uint64_t v6 = *(void *)(a2 + 8);
    if ((v6 & 2) != 0)
    {
      long long v7 = 0;
    }
    else
    {
      long long v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        long long v7 = (void *)*v7;
      }
    }
    if (v5 == v7) {
      sub_1207EC8(a1, a2);
    }
    else {
      sub_1207DDC(a1, a2);
    }
  }
  return a1;
}

uint64_t sub_1893348(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *(void *)uint64_t result = v2;
  *(void *)(result + 8) = a2[1];
  a2[1] = 0;
  uint64_t v5 = a2[2];
  unint64_t v3 = a2 + 2;
  uint64_t v4 = v5;
  *(void *)(result + 16) = v5;
  uint64_t v6 = v3[1];
  *(void *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    unint64_t v7 = *(void *)(v4 + 8);
    unint64_t v8 = *(void *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        v7 %= v8;
      }
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(void *)(v2 + 8 * v7) = result + 16;
    void *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

uint64_t sub_18933B8(uint64_t a1)
{
  sub_12168(a1 + 600);
  uint64_t v4 = (void **)(a1 + 544);
  sub_1891624(&v4);
  sub_12168(a1 + 504);
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 496);
  if (v2) {
    sub_20A69F0(v2);
  }
  sub_1892A7C(a1 + 464, *(void **)(a1 + 472));
  if (*(char *)(a1 + 447) < 0) {
    operator delete(*(void **)(a1 + 424));
  }
  if (*(char *)(a1 + 423) < 0) {
    operator delete(*(void **)(a1 + 400));
  }
  if (*(char *)(a1 + 399) < 0) {
    operator delete(*(void **)(a1 + 376));
  }
  if (*(char *)(a1 + 375) < 0) {
    operator delete(*(void **)(a1 + 352));
  }
  uint64_t v4 = (void **)(a1 + 328);
  sub_1891624(&v4);
  if (*(char *)(a1 + 327) < 0) {
    operator delete(*(void **)(a1 + 304));
  }
  if (*(char *)(a1 + 303) < 0) {
    operator delete(*(void **)(a1 + 280));
  }
  if (*(char *)(a1 + 271) < 0) {
    operator delete(*(void **)(a1 + 248));
  }
  sub_1205E4C((void *)(a1 + 32));
  return a1;
}

uint64_t sub_18934A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 656;
    sub_18933B8(i - 656);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

long long *sub_18934F4(uint64_t *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a2;
  if (a5 >= 1)
  {
    unint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0x8F9C18F9C18F9C19 * ((uint64_t)(v11 - v12) >> 4)) >= a5)
    {
      uint64_t v20 = v12 - (void)a2;
      if ((uint64_t)(0x8F9C18F9C18F9C19 * ((uint64_t)(v12 - (void)a2) >> 4)) >= a5)
      {
        uint64_t v21 = (uint64_t)&a3[41 * a5];
      }
      else
      {
        uint64_t v21 = (uint64_t)&a3[(uint64_t)(v12 - (void)a2) >> 4];
        a1[1] = sub_1893880(v9, v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_1893714((uint64_t)a1, v5, v12, (uint64_t)&v5[41 * a5]);
      if ((long long *)v21 != v7)
      {
        uint64_t v22 = (uint64_t)v5;
        do
        {
          sub_1893DEC(v22, v7);
          v7 += 41;
          v22 += 656;
        }
        while (v7 != (long long *)v21);
      }
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0x7063E7063E7063E7 * ((uint64_t)(v12 - *a1) >> 4);
      if (v14 > 0x63E7063E7063E7) {
        sub_2E00();
      }
      unint64_t v15 = 0x8F9C18F9C18F9C19 * (((uint64_t)a2 - v13) >> 4);
      unint64_t v16 = 0x8F9C18F9C18F9C19 * ((v10 - v13) >> 4);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x31F3831F3831F3) {
        unint64_t v18 = 0x63E7063E7063E7;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v30 = v9;
      if (v18) {
        uint64_t v19 = (char *)sub_189308C(v9, v18);
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v23 = (uint64_t)&v19[656 * v15];
      v27[0] = v19;
      v27[1] = v23;
      uint64_t v28 = v23;
      BOOL v29 = &v19[656 * v18];
      uint64_t v24 = 656 * a5;
      uint64_t v25 = v23 + 656 * a5;
      do
      {
        sub_1891E80(v23, v7);
        v23 += 656;
        v7 += 41;
        v24 -= 656;
      }
      while (v24);
      uint64_t v28 = v25;
      uint64_t v5 = (long long *)sub_18937A4(a1, v27, v5);
      sub_18934A4((uint64_t)v27);
    }
  }
  return v5;
}

void sub_18936E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

long long *sub_1893714(uint64_t a1, long long *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = (long long *)((char *)a2 + v6 - a4);
  uint64_t v8 = v6;
  if ((unint64_t)v7 < a3)
  {
    uint64_t v10 = (long long *)((char *)a2 + v6 - a4);
    uint64_t v8 = v6;
    do
    {
      uint64_t v11 = sub_18930D8(v8, v10);
      v10 += 41;
      uint64_t v8 = v11 + 656;
    }
    while ((unint64_t)v10 < a3);
  }
  *(void *)(a1 + 8) = v8;

  return sub_1893904(a2, v7, v6);
}

uint64_t sub_18937A4(uint64_t *a1, void *a2, long long *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = a2[1];
  unint64_t v7 = (long long *)*a1;
  uint64_t v8 = v6;
  if (v7 != a3)
  {
    uint64_t v9 = a3;
    uint64_t v8 = a2[1];
    do
    {
      v9 -= 41;
      uint64_t v8 = sub_18930D8(v8 - 656, v9);
    }
    while (v9 != v7);
  }
  a2[1] = v8;
  uint64_t v10 = (long long *)a1[1];
  uint64_t v11 = a2[2];
  if (v10 != v3)
  {
    do
    {
      sub_18930D8(v11, v3);
      v3 += 41;
      v11 += 656;
    }
    while (v3 != v10);
    uint64_t v8 = a2[1];
  }
  a2[2] = v11;
  uint64_t v12 = *a1;
  *a1 = v8;
  a2[1] = v12;
  uint64_t v13 = a1[1];
  a1[1] = a2[2];
  a2[2] = v13;
  uint64_t v14 = a1[2];
  a1[2] = a2[3];
  a2[3] = v14;
  *a2 = a2[1];
  return v6;
}

uint64_t sub_1893880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1891E80(a4 + v7, (long long *)(a2 + v7));
      v7 += 656;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_18938E0(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 656;
    do
    {
      sub_18933B8(v4 + v2);
      v2 -= 656;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_1893904(long long *a1, long long *a2, uint64_t a3)
{
  if (a2 != a1)
  {
    uint64_t v6 = a2;
    do
    {
      v6 -= 41;
      a3 -= 656;
      sub_1893964(a3, v6);
    }
    while (v6 != a1);
  }
  return a2;
}

uint64_t sub_1893964(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_OWORD *)(a1 + 12) = *(long long *)((char *)a2 + 12);
  *(_OWORD *)a1 = v4;
  if ((long long *)a1 != a2)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    if ((v5 & 2) != 0)
    {
      uint64_t v6 = 0;
    }
    else
    {
      uint64_t v6 = (void *)(v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (v5) {
        uint64_t v6 = (void *)*v6;
      }
    }
    uint64_t v7 = a1 + 32;
    uint64_t v8 = (uint64_t)(a2 + 2);
    uint64_t v9 = *((void *)a2 + 5);
    if ((v9 & 2) != 0)
    {
      uint64_t v10 = 0;
    }
    else
    {
      uint64_t v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
      if (v9) {
        uint64_t v10 = (void *)*v10;
      }
    }
    if (v6 == v10) {
      sub_1207EC8(v7, v8);
    }
    else {
      sub_1207DDC(v7, v8);
    }
  }
  uint64_t v11 = (void **)(a1 + 248);
  if (*(char *)(a1 + 271) < 0) {
    operator delete(*v11);
  }
  long long v12 = *(long long *)((char *)a2 + 248);
  *(void *)(a1 + 264) = *((void *)a2 + 33);
  *(_OWORD *)uint64_t v11 = v12;
  *((unsigned char *)a2 + 271) = 0;
  *((unsigned char *)a2 + 248) = 0;
  *(void *)(a1 + 272) = *((void *)a2 + 34);
  uint64_t v13 = (void **)(a1 + 280);
  if (*(char *)(a1 + 303) < 0) {
    operator delete(*v13);
  }
  long long v14 = *(long long *)((char *)a2 + 280);
  *(void *)(a1 + 296) = *((void *)a2 + 37);
  *(_OWORD *)uint64_t v13 = v14;
  *((unsigned char *)a2 + 303) = 0;
  *((unsigned char *)a2 + 280) = 0;
  unint64_t v15 = (void **)(a1 + 304);
  if (*(char *)(a1 + 327) < 0) {
    operator delete(*v15);
  }
  long long v16 = a2[19];
  *(void *)(a1 + 320) = *((void *)a2 + 40);
  *(_OWORD *)unint64_t v15 = v16;
  *((unsigned char *)a2 + 327) = 0;
  *((unsigned char *)a2 + 304) = 0;
  sub_1893B14(a1 + 328, (uint64_t)a2 + 328);
  long long v17 = *(long long *)((char *)a2 + 488);
  *((void *)a2 + 61) = 0;
  *((void *)a2 + 62) = 0;
  unint64_t v18 = *(std::__shared_weak_count **)(a1 + 496);
  *(_OWORD *)(a1 + 488) = v17;
  if (v18) {
    sub_20A69F0(v18);
  }
  sub_1893CA4(a1 + 504, (uint64_t *)a2 + 63);
  sub_1893DB0((uint64_t *)(a1 + 544));
  *(_OWORD *)(a1 + 544) = a2[34];
  *(void *)(a1 + 560) = *((void *)a2 + 70);
  *((void *)a2 + 70) = 0;
  a2[34] = 0u;
  long long v19 = *(long long *)((char *)a2 + 584);
  *(_OWORD *)(a1 + 568) = *(long long *)((char *)a2 + 568);
  *(_OWORD *)(a1 + 584) = v19;
  sub_1893CA4(a1 + 600, (uint64_t *)a2 + 75);
  *(_OWORD *)(a1 + 640) = a2[40];
  return a1;
}

uint64_t sub_1893B14(uint64_t a1, uint64_t a2)
{
  sub_1893DB0((uint64_t *)a1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = 0;
  long long v4 = (void **)(a1 + 24);
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*v4);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)long long v4 = v5;
  *(unsigned char *)(a2 + 47) = 0;
  *(unsigned char *)(a2 + 24) = 0;
  uint64_t v6 = (void **)(a1 + 48);
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*v6);
  }
  long long v7 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)uint64_t v6 = v7;
  *(unsigned char *)(a2 + 71) = 0;
  *(unsigned char *)(a2 + 48) = 0;
  uint64_t v8 = (void **)(a1 + 72);
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*v8);
  }
  long long v9 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)uint64_t v8 = v9;
  *(unsigned char *)(a2 + 95) = 0;
  *(unsigned char *)(a2 + 72) = 0;
  uint64_t v10 = (void **)(a1 + 96);
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*v10);
  }
  long long v11 = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(_OWORD *)uint64_t v10 = v11;
  *(unsigned char *)(a2 + 119) = 0;
  *(unsigned char *)(a2 + 96) = 0;
  uint64_t v12 = *(void *)(a2 + 120);
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 120) = v12;
  sub_1893C38(a1 + 136, (void *)(a2 + 136));
  return a1;
}

void sub_1893C38(uint64_t a1, void *a2)
{
  long long v4 = (void *)(a1 + 8);
  sub_1892A7C(a1, *(void **)(a1 + 8));
  *(void *)a1 = *a2;
  long long v5 = a2 + 1;
  uint64_t v6 = a2[1];
  *long long v4 = v6;
  uint64_t v7 = a2[2];
  *(void *)(a1 + 16) = v7;
  if (v7)
  {
    *(void *)(v6 + 16) = v4;
    *a2 = v5;
    *long long v5 = 0;
    a2[2] = 0;
  }
  else
  {
    *(void *)a1 = v4;
  }
}

void sub_1893CA4(uint64_t a1, uint64_t *a2)
{
  sub_1893D48((void *)a1);
  uint64_t v4 = *a2;
  *a2 = 0;
  long long v5 = *(void **)a1;
  *(void *)a1 = v4;
  if (v5) {
    operator delete(v5);
  }
  uint64_t v8 = a2[2];
  uint64_t v7 = a2 + 2;
  uint64_t v6 = v8;
  uint64_t v9 = *(v7 - 1);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 8) = v9;
  *(v7 - 1) = 0;
  uint64_t v10 = v7[1];
  *(void *)(a1 + 24) = v10;
  *(_DWORD *)(a1 + 32) = *((_DWORD *)v7 + 4);
  if (v10)
  {
    unint64_t v11 = *(void *)(v6 + 8);
    unint64_t v12 = *(void *)(a1 + 8);
    if ((v12 & (v12 - 1)) != 0)
    {
      if (v11 >= v12) {
        v11 %= v12;
      }
    }
    else
    {
      v11 &= v12 - 1;
    }
    *(void *)(*(void *)a1 + 8 * v11) = a1 + 16;
    void *v7 = 0;
    v7[1] = 0;
  }
}

void *sub_1893D48(void *result)
{
  if (result[3])
  {
    uint64_t v1 = result;
    uint64_t result = (void *)result[2];
    if (result)
    {
      do
      {
        uint64_t v2 = (void *)*result;
        operator delete(result);
        uint64_t result = v2;
      }
      while (v2);
    }
    v1[2] = 0;
    uint64_t v3 = v1[1];
    if (v3)
    {
      for (uint64_t i = 0; i != v3; ++i)
        *(void *)(*v1 + 8 * i) = 0;
    }
    v1[3] = 0;
  }
  return result;
}

void sub_1893DB0(uint64_t *a1)
{
  if (*a1)
  {
    sub_1891678(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

uint64_t sub_1893DEC(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_OWORD *)(a1 + 12) = *(long long *)((char *)a2 + 12);
  *(_OWORD *)a1 = v4;
  sub_1207DDC(a1 + 32, (uint64_t)(a2 + 2));
  std::string::operator=((std::string *)(a1 + 248), (const std::string *)((char *)a2 + 248));
  *(void *)(a1 + 272) = *((void *)a2 + 34);
  std::string::operator=((std::string *)(a1 + 280), (const std::string *)((char *)a2 + 280));
  std::string::operator=((std::string *)(a1 + 304), (const std::string *)(a2 + 19));
  if ((long long *)a1 != a2) {
    sub_69208(a1 + 328, *((std::string **)a2 + 41), *((std::string **)a2 + 42), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 42) - *((void *)a2 + 41)) >> 3));
  }
  std::string::operator=((std::string *)(a1 + 352), (const std::string *)(a2 + 22));
  std::string::operator=((std::string *)(a1 + 376), (const std::string *)((char *)a2 + 376));
  std::string::operator=((std::string *)(a1 + 400), (const std::string *)(a2 + 25));
  std::string::operator=((std::string *)(a1 + 424), (const std::string *)((char *)a2 + 424));
  int v5 = *((_DWORD *)a2 + 114);
  *(void *)(a1 + 448) = *((void *)a2 + 56);
  *(_DWORD *)(a1 + 456) = v5;
  if ((long long *)a1 != a2) {
    sub_1893F88((uint64_t **)(a1 + 464), *((uint64_t **)a2 + 58), (uint64_t *)a2 + 59);
  }
  uint64_t v7 = *((void *)a2 + 61);
  uint64_t v6 = *((void *)a2 + 62);
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *(std::__shared_weak_count **)(a1 + 496);
  *(void *)(a1 + 488) = v7;
  *(void *)(a1 + 496) = v6;
  if (v8) {
    sub_20A69F0(v8);
  }
  if ((long long *)a1 != a2)
  {
    *(_DWORD *)(a1 + 536) = *((_DWORD *)a2 + 134);
    sub_18948F8((void *)(a1 + 504), *((uint64_t **)a2 + 65), 0);
    sub_69208(a1 + 544, *((std::string **)a2 + 68), *((std::string **)a2 + 69), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 69) - *((void *)a2 + 68)) >> 3));
  }
  *(void *)(a1 + 568) = *((void *)a2 + 71);
  long long v9 = a2[36];
  *(unsigned char *)(a1 + 592) = *((unsigned char *)a2 + 592);
  *(_OWORD *)(a1 + 576) = v9;
  *(_DWORD *)(a1 + 596) = *((_DWORD *)a2 + 149);
  if ((long long *)a1 != a2)
  {
    *(_DWORD *)(a1 + 632) = *((_DWORD *)a2 + 158);
    sub_1894A88((void *)(a1 + 600), *((unsigned int **)a2 + 77), 0);
  }
  *(_OWORD *)(a1 + 640) = a2[40];
  return a1;
}

uint64_t **sub_1893F88(uint64_t **result, uint64_t *a2, uint64_t *a3)
{
  int v5 = result;
  if (result[2])
  {
    uint64_t v6 = *result;
    uint64_t v7 = result[1];
    *uint64_t result = (uint64_t *)(result + 1);
    v7[2] = 0;
    result[1] = 0;
    result[2] = 0;
    if (v6[1]) {
      uint64_t v8 = (uint64_t *)v6[1];
    }
    else {
      uint64_t v8 = v6;
    }
    long long v14 = result;
    unint64_t v15 = v8;
    long long v16 = v8;
    if (v8)
    {
      unint64_t v15 = sub_18947B4((uint64_t)v8);
      if (a2 != a3)
      {
        long long v9 = a2;
        do
        {
          *((_DWORD *)v8 + 8) = *((_DWORD *)v9 + 8);
          if (v8 != v9)
          {
            *((_DWORD *)v8 + 18) = *((_DWORD *)v9 + 18);
            sub_1894180(v8 + 5, (uint64_t *)v9[7], 0);
            uint64_t v8 = v16;
          }
          sub_1894110(v5, (uint64_t)v8);
          uint64_t v8 = v15;
          long long v16 = v15;
          if (v15) {
            unint64_t v15 = sub_18947B4((uint64_t)v15);
          }
          uint64_t v10 = (uint64_t *)v9[1];
          if (v10)
          {
            do
            {
              a2 = v10;
              uint64_t v10 = (uint64_t *)*v10;
            }
            while (v10);
          }
          else
          {
            do
            {
              a2 = (uint64_t *)v9[2];
              BOOL v11 = *a2 == (void)v9;
              long long v9 = a2;
            }
            while (!v11);
          }
          if (!v8) {
            break;
          }
          long long v9 = a2;
        }
        while (a2 != a3);
      }
    }
    uint64_t result = (uint64_t **)sub_1894808((uint64_t)&v14);
  }
  if (a2 != a3)
  {
    do
    {
      uint64_t result = (uint64_t **)sub_1894860((uint64_t)v5, (_DWORD *)a2 + 8);
      unint64_t v12 = (uint64_t *)a2[1];
      if (v12)
      {
        do
        {
          uint64_t v13 = v12;
          unint64_t v12 = (uint64_t *)*v12;
        }
        while (v12);
      }
      else
      {
        do
        {
          uint64_t v13 = (uint64_t *)a2[2];
          BOOL v11 = *v13 == (void)a2;
          a2 = v13;
        }
        while (!v11);
      }
      a2 = v13;
    }
    while (v13 != a3);
  }
  return result;
}

void sub_18940FC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1894808((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1894110(uint64_t **a1, uint64_t a2)
{
  uint64_t v3 = a1 + 1;
  long long v4 = a1[1];
  if (v4)
  {
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t **)v4;
        if (*(_DWORD *)(a2 + 32) >= *((_DWORD *)v4 + 8)) {
          break;
        }
        long long v4 = (uint64_t *)*v4;
        int v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      long long v4 = (uint64_t *)v4[1];
    }
    while (v4);
    int v5 = v3 + 1;
  }
  else
  {
    int v5 = a1 + 1;
  }
LABEL_8:
  sub_11220BC(a1, (uint64_t)v3, v5, (uint64_t *)a2);
  return a2;
}

void sub_1894180(void *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  uint64_t v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      unint64_t v9 = *((int *)a2 + 4);
      *((_DWORD *)v8 + 4) = v9;
      *((_DWORD *)v8 + 5) = *((_DWORD *)a2 + 5);
      uint64_t v10 = (uint64_t *)*v8;
      v8[1] = v9;
      BOOL v11 = (void *)sub_1894294((uint64_t)a1, v9, (_DWORD *)v8 + 4);
      sub_18943EC(a1, v8, v11);
      a2 = (uint64_t *)*a2;
      uint64_t v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      unint64_t v12 = (uint64_t *)*v8;
      operator delete(v8);
      uint64_t v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      sub_1894738(a1, a2 + 2);
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_1894260(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_1894280(_Unwind_Exception *a1)
{
}

uint64_t sub_1894294(uint64_t a1, unint64_t a2, _DWORD *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  float v7 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v8 = *(float *)(a1 + 32);
  if (!v6 || (float)(v8 * (float)v6) < v7)
  {
    uint64_t v9 = 2 * v6;
    BOOL v10 = v6 < 3 || (v6 & (v6 - 1)) != 0;
    size_t v11 = v10 | v9;
    unint64_t v12 = vcvtps_u32_f32(v7 / v8);
    if (v11 <= v12) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v11;
    }
    sub_18944D4(a1, v13);
    unint64_t v6 = *(void *)(a1 + 8);
  }
  uint8x8_t v14 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
  v14.i16[0] = vaddlv_u8(v14);
  if (v14.u32[0] > 1uLL)
  {
    unint64_t v15 = a2;
    if (v6 <= a2) {
      unint64_t v15 = a2 % v6;
    }
  }
  else
  {
    unint64_t v15 = (v6 - 1) & a2;
  }
  uint64_t v16 = *(void *)(*(void *)a1 + 8 * v15);
  if (!v16) {
    return 0;
  }
  int v17 = 0;
  do
  {
    uint64_t result = v16;
    uint64_t v16 = *(void *)v16;
    if (!v16) {
      break;
    }
    unint64_t v19 = *(void *)(v16 + 8);
    if (v14.u32[0] > 1uLL)
    {
      unint64_t v20 = *(void *)(v16 + 8);
      if (v19 >= v6) {
        unint64_t v20 = v19 % v6;
      }
    }
    else
    {
      unint64_t v20 = v19 & (v6 - 1);
    }
    if (v20 != v15) {
      break;
    }
    BOOL v21 = v19 == a2 && *(_DWORD *)(v16 + 16) == *a3;
    int v22 = v17 & !v21;
    v17 |= v21;
  }
  while (v22 != 1);
  return result;
}

void *sub_18943EC(void *result, void *a2, void *a3)
{
  int8x8_t v3 = (int8x8_t)result[1];
  unint64_t v4 = a2[1];
  uint8x8_t v5 = (uint8x8_t)vcnt_s8(v3);
  v5.i16[0] = vaddlv_u8(v5);
  if (v5.u32[0] > 1uLL)
  {
    if (v4 >= *(void *)&v3) {
      v4 %= *(void *)&v3;
    }
  }
  else
  {
    v4 &= *(void *)&v3 - 1;
  }
  if (!a3)
  {
    *a2 = result[2];
    result[2] = a2;
    *(void *)(*result + 8 * v4) = result + 2;
    if (!*a2) {
      goto LABEL_19;
    }
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
LABEL_18:
    *(void *)(*result + 8 * v6) = a2;
    goto LABEL_19;
  }
  *a2 = *a3;
  *a3 = a2;
  if (*a2)
  {
    unint64_t v6 = *(void *)(*a2 + 8);
    if (v5.u32[0] > 1uLL)
    {
      if (v6 >= *(void *)&v3) {
        v6 %= *(void *)&v3;
      }
    }
    else
    {
      v6 &= *(void *)&v3 - 1;
    }
    if (v6 != v4) {
      goto LABEL_18;
    }
  }
LABEL_19:
  ++result[3];
  return result;
}

void sub_18944D4(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime > *(void *)&v4) {
    goto LABEL_16;
  }
  if (prime < *(void *)&v4)
  {
    unint64_t v5 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v6 = (uint8x8_t)vcnt_s8(v4), v6.i16[0] = vaddlv_u8(v6), v6.u32[0] > 1uLL))
    {
      unint64_t v5 = std::__next_prime(v5);
    }
    else
    {
      uint64_t v7 = 1 << -(char)__clz(v5 - 1);
      if (v5 >= 2) {
        unint64_t v5 = v7;
      }
    }
    if (prime <= v5) {
      size_t prime = v5;
    }
    if (prime < *(void *)&v4)
    {
LABEL_16:
      sub_18945C4(a1, prime);
    }
  }
}

void sub_18945C4(uint64_t a1, unint64_t a2)
{
  if (a2)
  {
    if (a2 >> 61) {
      sub_188D718();
    }
    int8x8_t v4 = operator new(8 * a2);
    unint64_t v5 = *(void **)a1;
    *(void *)a1 = v4;
    if (v5) {
      operator delete(v5);
    }
    uint64_t v6 = 0;
    *(void *)(a1 + 8) = a2;
    do
      *(void *)(*(void *)a1 + 8 * v6++) = 0;
    while (a2 != v6);
    uint64_t v7 = *(uint64_t ***)(a1 + 16);
    if (v7)
    {
      unint64_t v8 = (unint64_t)v7[1];
      uint8x8_t v9 = (uint8x8_t)vcnt_s8((int8x8_t)a2);
      v9.i16[0] = vaddlv_u8(v9);
      if (v9.u32[0] > 1uLL)
      {
        if (v8 >= a2) {
          v8 %= a2;
        }
      }
      else
      {
        v8 &= a2 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v8) = a1 + 16;
      for (uint64_t i = *v7; *v7; uint64_t i = *v7)
      {
        unint64_t v12 = i[1];
        if (v9.u32[0] > 1uLL)
        {
          if (v12 >= a2) {
            v12 %= a2;
          }
        }
        else
        {
          v12 &= a2 - 1;
        }
        if (v12 == v8)
        {
          uint64_t v7 = (uint64_t **)i;
        }
        else
        {
          size_t v13 = i;
          if (*(void *)(*(void *)a1 + 8 * v12))
          {
            do
            {
              uint8x8_t v14 = v13;
              size_t v13 = (uint64_t *)*v13;
            }
            while (v13 && *((_DWORD *)i + 4) == *((_DWORD *)v13 + 4));
            uint64_t *v7 = v13;
            *uint8x8_t v14 = **(void **)(*(void *)a1 + 8 * v12);
            **(void **)(*(void *)a1 + 8 * v12) = i;
          }
          else
          {
            *(void *)(*(void *)a1 + 8 * v12) = v7;
            uint64_t v7 = (uint64_t **)i;
            unint64_t v8 = v12;
          }
        }
      }
    }
  }
  else
  {
    BOOL v10 = *(void **)a1;
    *(void *)a1 = 0;
    if (v10) {
      operator delete(v10);
    }
    *(void *)(a1 + 8) = 0;
  }
}

void *sub_1894738(void *a1, uint64_t *a2)
{
  int8x8_t v4 = operator new(0x18uLL);
  uint64_t v5 = *a2;
  v4[2] = *a2;
  *int8x8_t v4 = 0;
  v4[1] = (int)v5;
  uint64_t v6 = (void *)sub_1894294((uint64_t)a1, (int)v5, (_DWORD *)v4 + 4);
  sub_18943EC(a1, v4, v6);
  return v4;
}

void sub_18947A0(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_18947B4(uint64_t a1)
{
  uint64_t result = *(void **)(a1 + 16);
  if (result)
  {
    int8x8_t v3 = (void *)*result;
    if (*result == a1)
    {
      *uint64_t result = 0;
      while (1)
      {
        int8x8_t v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          uint64_t result = v4;
          int8x8_t v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; int8x8_t v3 = (void *)result[1])
      {
        do
        {
          uint64_t result = v3;
          int8x8_t v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t sub_1894808(uint64_t a1)
{
  sub_1892A7C(*(void *)a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)(a1 + 8);
  if (v2)
  {
    int8x8_t v3 = (void *)v2[2];
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        int8x8_t v3 = (void *)v3[2];
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    sub_1892A7C(*(void *)a1, v2);
  }
  return a1;
}

uint64_t *sub_1894860(uint64_t a1, _DWORD *a2)
{
  sub_18924D0(a1, a2, (uint64_t)v8);
  int8x8_t v3 = (uint64_t **)(a1 + 8);
  int8x8_t v4 = *(uint64_t **)(a1 + 8);
  if (v4)
  {
    do
    {
      while (1)
      {
        int8x8_t v3 = (uint64_t **)v4;
        if (*((_DWORD *)v8[0] + 8) >= *((_DWORD *)v4 + 8)) {
          break;
        }
        int8x8_t v4 = (uint64_t *)*v4;
        uint64_t v5 = v3;
        if (!*v3) {
          goto LABEL_8;
        }
      }
      int8x8_t v4 = (uint64_t *)v4[1];
    }
    while (v4);
    uint64_t v5 = v3 + 1;
  }
  else
  {
    uint64_t v5 = (uint64_t **)(a1 + 8);
  }
LABEL_8:
  sub_11220BC((uint64_t **)a1, (uint64_t)v3, v5, v8[0]);
  uint64_t v6 = v8[0];
  v8[0] = 0;
  sub_1892A24((uint64_t)v8, 0);
  return v6;
}

void sub_18948F8(void *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  unint64_t v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != a3)
    {
      unint64_t v9 = *((int *)a2 + 4);
      *((_DWORD *)v8 + 4) = v9;
      v8[3] = a2[3];
      BOOL v10 = (uint64_t *)*v8;
      v8[1] = v9;
      size_t v11 = (void *)sub_1894294((uint64_t)a1, v9, (_DWORD *)v8 + 4);
      sub_18943EC(a1, v8, v11);
      a2 = (uint64_t *)*a2;
      unint64_t v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      unint64_t v12 = (uint64_t *)*v8;
      operator delete(v8);
      unint64_t v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != a3)
    {
      sub_1894A0C(a1, (_OWORD *)a2 + 1);
      a2 = (uint64_t *)*a2;
    }
  }
}

void sub_18949D8(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_18949F8(_Unwind_Exception *a1)
{
}

int *sub_1894A0C(void *a1, _OWORD *a2)
{
  int8x8_t v4 = (int *)operator new(0x20uLL);
  *((_OWORD *)v4 + 1) = *a2;
  unint64_t v5 = v4[4];
  *(void *)int8x8_t v4 = 0;
  *((void *)v4 + 1) = v5;
  uint64_t v6 = (void *)sub_1894294((uint64_t)a1, v5, v4 + 4);
  sub_18943EC(a1, v4, v6);
  return v4;
}

void sub_1894A74(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void sub_1894A88(void *a1, unsigned int *a2, uint64_t *a3)
{
  uint64_t v6 = a1[1];
  if (!v6) {
    goto LABEL_9;
  }
  for (uint64_t i = 0; i != v6; *(void *)(*a1 + 8 * i++) = 0)
    ;
  unint64_t v8 = (uint64_t *)a1[2];
  a1[2] = 0;
  a1[3] = 0;
  if (v8)
  {
    while (a2 != (unsigned int *)a3)
    {
      unint64_t v9 = a2[4];
      *((_DWORD *)v8 + 4) = v9;
      BOOL v10 = (uint64_t *)*v8;
      v8[1] = v9;
      size_t v11 = (void *)sub_1894294((uint64_t)a1, v9, (_DWORD *)v8 + 4);
      sub_18943EC(a1, v8, v11);
      a2 = *(unsigned int **)a2;
      unint64_t v8 = v10;
      if (!v10) {
        goto LABEL_9;
      }
    }
    do
    {
      unint64_t v12 = (uint64_t *)*v8;
      operator delete(v8);
      unint64_t v8 = v12;
    }
    while (v12);
  }
  else
  {
LABEL_9:
    while (a2 != (unsigned int *)a3)
    {
      sub_1894B94(a1, a2 + 4);
      a2 = *(unsigned int **)a2;
    }
  }
}

void sub_1894B60(void *a1)
{
  __cxa_begin_catch(a1);
  do
  {
    uint64_t v2 = (void *)*v1;
    operator delete(v1);
    uint64_t v1 = v2;
  }
  while (v2);
  __cxa_rethrow();
}

void sub_1894B80(_Unwind_Exception *a1)
{
}

_DWORD *sub_1894B94(void *a1, unsigned int *a2)
{
  int8x8_t v4 = operator new(0x18uLL);
  unint64_t v5 = *a2;
  v4[4] = v5;
  *(void *)int8x8_t v4 = 0;
  *((void *)v4 + 1) = v5;
  uint64_t v6 = (void *)sub_1894294((uint64_t)a1, v5, v4 + 4);
  sub_18943EC(a1, v4, v6);
  return v4;
}

void sub_1894BF8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

long long *sub_1894C0C(uint64_t *a1, long long *a2, long long *a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = a2;
  if (a5 >= 1)
  {
    uint64_t v7 = a3;
    uint64_t v11 = a1[2];
    uint64_t v9 = (uint64_t)(a1 + 2);
    uint64_t v10 = v11;
    unint64_t v12 = *(void *)(v9 - 8);
    if ((uint64_t)(0x8F9C18F9C18F9C19 * ((uint64_t)(v11 - v12) >> 4)) >= a5)
    {
      uint64_t v20 = v12 - (void)a2;
      if ((uint64_t)(0x8F9C18F9C18F9C19 * ((uint64_t)(v12 - (void)a2) >> 4)) >= a5)
      {
        BOOL v21 = &a3[41 * a5];
      }
      else
      {
        BOOL v21 = &a3[(uint64_t)(v12 - (void)a2) >> 4];
        a1[1] = sub_1894E14(v9, (uint64_t)v21, a4, *(void *)(v9 - 8));
        if (v20 < 1) {
          return v5;
        }
      }
      sub_1893714((uint64_t)a1, v5, v12, (uint64_t)&v5[41 * a5]);
      sub_1894E98(v7, v21, (uint64_t)v5);
    }
    else
    {
      uint64_t v13 = *a1;
      unint64_t v14 = a5 - 0x7063E7063E7063E7 * ((uint64_t)(v12 - *a1) >> 4);
      if (v14 > 0x63E7063E7063E7) {
        sub_2E00();
      }
      unint64_t v15 = 0x8F9C18F9C18F9C19 * (((uint64_t)a2 - v13) >> 4);
      unint64_t v16 = 0x8F9C18F9C18F9C19 * ((v10 - v13) >> 4);
      uint64_t v17 = 2 * v16;
      if (2 * v16 <= v14) {
        uint64_t v17 = v14;
      }
      if (v16 >= 0x31F3831F3831F3) {
        unint64_t v18 = 0x63E7063E7063E7;
      }
      else {
        unint64_t v18 = v17;
      }
      uint64_t v29 = v9;
      if (v18) {
        unint64_t v19 = (char *)sub_189308C(v9, v18);
      }
      else {
        unint64_t v19 = 0;
      }
      uint64_t v22 = (uint64_t)&v19[656 * v15];
      v26[0] = v19;
      v26[1] = v22;
      uint64_t v27 = v22;
      uint64_t v28 = &v19[656 * v18];
      uint64_t v23 = 656 * a5;
      uint64_t v24 = v22 + 656 * a5;
      do
      {
        sub_1891E80(v22, v7);
        v22 += 656;
        v7 += 41;
        v23 -= 656;
      }
      while (v23);
      uint64_t v27 = v24;
      unint64_t v5 = (long long *)sub_18937A4(a1, v26, v5);
      sub_18934A4((uint64_t)v26);
    }
  }
  return v5;
}

void sub_1894DE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v12 + 8) = v13;
  _Unwind_Resume(exception_object);
}

uint64_t sub_1894E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1891E80(a4 + v7, (long long *)(a2 + v7));
      v7 += 656;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1894E74(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 656;
    do
    {
      sub_18933B8(v4 + v2);
      v2 -= 656;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

long long *sub_1894E98(long long *a1, long long *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  if (a1 != a2)
  {
    do
    {
      sub_1893DEC(a3, v4);
      v4 += 41;
      a3 += 656;
    }
    while (v4 != a2);
    return a2;
  }
  return v4;
}

void *sub_1894EF8(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v6 = result;
    sub_1894F80(result, a4);
    uint64_t result = (void *)sub_1894E14((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1894F60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1894FD8(&a9);
  _Unwind_Resume(a1);
}

char *sub_1894F80(void *a1, unint64_t a2)
{
  if (a2 >= 0x63E7063E7063E8) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_189308C((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[656 * v4];
  return result;
}

void sub_1894FD8(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    unint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_18933B8(v4 - 656);
      while ((void *)v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void sub_189505C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void **)**a1;
  if (v2)
  {
    uint64_t v4 = (void **)v1[1];
    unint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 11;
        uint64_t v6 = v4;
        sub_1894FD8(&v6);
      }
      while (v4 != v2);
      unint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_18950D0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  sub_189542C((void *)a1, *(void *)a2, *(void *)(a2 + 8), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*(void *)(a2 + 8) - *(void *)a2) >> 5));
  sub_18956D8((unsigned char *)(a1 + 24), a2 + 24);
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  sub_1895738((void *)(a1 + 120), *(void *)(a2 + 120), *(void *)(a2 + 128), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(a2 + 128) - *(void *)(a2 + 120)) >> 3));
  long long v4 = *(_OWORD *)(a2 + 144);
  long long v5 = *(_OWORD *)(a2 + 160);
  int v6 = *(_DWORD *)(a2 + 175);
  *(void *)(a1 + 184) = 0;
  *(_DWORD *)(a1 + 175) = v6;
  *(_OWORD *)(a1 + 160) = v5;
  *(_OWORD *)(a1 + 144) = v4;
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  sub_1895920((void *)(a1 + 184), *(void *)(a2 + 184), *(void *)(a2 + 192), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 192) - *(void *)(a2 + 184)) >> 4));
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 0;
  sub_1895920((void *)(a1 + 208), *(void *)(a2 + 208), *(void *)(a2 + 216), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 216) - *(void *)(a2 + 208)) >> 4));
  int v7 = *(_DWORD *)(a2 + 232);
  *(void *)(a1 + 240) = 0;
  *(_DWORD *)(a1 + 232) = v7;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0;
  sub_18967EC((void *)(a1 + 240), *(const void **)(a2 + 240), *(void *)(a2 + 248), *(void *)(a2 + 248) - *(void *)(a2 + 240));
  long long v8 = *(_OWORD *)(a2 + 264);
  long long v9 = *(_OWORD *)(a2 + 280);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(_OWORD *)(a1 + 264) = v8;
  *(_OWORD *)(a1 + 280) = v9;
  sub_1896084(a1 + 304, a2 + 304);
  *(_DWORD *)(a1 + 384) = *(_DWORD *)(a2 + 384);
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 392) = 0;
  sub_189645C((void *)(a1 + 392), *(const void **)(a2 + 392), *(void *)(a2 + 400), (uint64_t)(*(void *)(a2 + 400) - *(void *)(a2 + 392)) >> 3);
  sub_18964D8((uint64_t *)(a1 + 416), a2 + 416);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  uint64_t v10 = (unsigned char *)(a1 + 456);
  if (*(char *)(a2 + 479) < 0)
  {
    sub_4200(v10, *(void **)(a2 + 456), *(void *)(a2 + 464));
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 456);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(_OWORD *)uint64_t v10 = v11;
  }
  return a1;
}

void sub_18952A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void **a10)
{
  sub_22EFF4(v16, *(void **)(v10 + 424));
  unint64_t v18 = *v15;
  if (*v15)
  {
    *(void *)(v10 + 400) = v18;
    operator delete(v18);
  }
  sub_1895358(v14);
  unint64_t v19 = *v13;
  if (*v13)
  {
    *(void *)(v10 + 248) = v19;
    operator delete(v19);
  }
  sub_1895398(v12);
  sub_18953E0(v11);
  a10 = (void **)v10;
  sub_1895654(&a10);
  _Unwind_Resume(a1);
}

void sub_189531C(uint64_t a1, ...)
{
  va_start(va, a1);
  sub_1896000((void ***)va);
  JUMPOUT(0x1895300);
}

void sub_1895330()
{
}

void sub_1895338()
{
  if (*(unsigned char *)(v0 + 112)) {
    sub_15B1678(v1);
  }
  JUMPOUT(0x1895308);
}

void sub_1895350()
{
}

uint64_t sub_1895358(uint64_t a1)
{
  sub_1896400(a1 + 56, *(void **)(a1 + 64));

  return sub_1507620(a1);
}

void **sub_1895398(void **a1)
{
  int8x8_t v3 = a1 + 3;
  sub_1896000(&v3);
  int8x8_t v3 = a1;
  sub_1896000(&v3);
  return a1;
}

uint64_t sub_18953E0(uint64_t a1)
{
  int8x8_t v3 = (void **)(a1 + 96);
  sub_189589C(&v3);
  if (*(unsigned char *)(a1 + 88)) {
    sub_15B1678(a1);
  }
  return a1;
}

void *sub_189542C(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_18954B4(result, a4);
    uint64_t result = (void *)sub_1895550((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1895494(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1895654(&a9);
  _Unwind_Resume(a1);
}

char *sub_18954B4(void *a1, unint64_t a2)
{
  if (a2 >= 0x19999999999999ALL) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_1895508((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[160 * v4];
  return result;
}

void *sub_1895508(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x19999999999999ALL) {
    sub_188D718();
  }
  return operator new(160 * a2);
}

uint64_t sub_1895550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_18968AC(a4 + v7, a2 + v7);
      v7 += 160;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_18955B0(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 160;
    do
    {
      sub_18955D4(v4 + v2);
      v2 -= 160;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_18955D4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 136);
  if (v2)
  {
    *(void *)(a1 + 144) = v2;
    operator delete(v2);
  }
  long long v5 = (void **)(a1 + 88);
  sub_1891624(&v5);
  long long v5 = (void **)(a1 + 64);
  sub_1891624(&v5);
  long long v5 = (void **)(a1 + 40);
  sub_1891624(&v5);
  int8x8_t v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3) {
    sub_20A69F0(v3);
  }
  uint64_t v4 = *(std::__shared_weak_count **)(a1 + 16);
  if (v4) {
    sub_20A69F0(v4);
  }
}

void sub_1895654(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 160;
        sub_18955D4(v4);
      }
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

unsigned char *sub_18956D8(unsigned char *a1, uint64_t a2)
{
  *a1 = 0;
  a1[88] = 0;
  if (*(unsigned char *)(a2 + 88))
  {
    sub_15B15F8(a1);
    a1[88] = 1;
  }
  return a1;
}

void sub_189571C(_Unwind_Exception *exception_object)
{
  if (*(unsigned char *)(v1 + 88)) {
    sub_15B1678(v1);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1895738(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_18957C0(result, a4);
    uint64_t result = (void *)sub_1895818((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_18957A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_189589C(&a9);
  _Unwind_Resume(a1);
}

char *sub_18957C0(void *a1, unint64_t a2)
{
  if (a2 >= 0x2E8BA2E8BA2E8BBLL) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_1891A94((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[88 * v4];
  return result;
}

uint64_t sub_1895818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_15B15F8(a4 + v7);
      v7 += 88;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1895878(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 88;
    do
    {
      sub_15B1678(v4 + v2);
      v2 -= 88;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_189589C(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_15B1678(v4 - 88);
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_1895920(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    int v6 = result;
    sub_18959A8(result, a4);
    uint64_t result = (void *)sub_1895A44((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1895988(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1896000(&a9);
  _Unwind_Resume(a1);
}

char *sub_18959A8(void *a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_18959FC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[48 * v4];
  return result;
}

void *sub_18959FC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    sub_188D718();
  }
  return operator new(48 * a2);
}

uint64_t sub_1895A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1895AC8((void *)(a4 + v7), (long long *)(a2 + v7));
      v7 += 48;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1895AA4(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 48;
    do
    {
      sub_1895FAC(v4 + v2);
      v2 -= 48;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void *sub_1895AC8(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  sub_1895B40(__dst + 3, (uint64_t)a2 + 24);
  return __dst;
}

void sub_1895B24(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_1895B40(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1895B98(a1, *(void ***)a2, (void **)(a2 + 8));
  return a1;
}

void sub_1895B80(_Unwind_Exception *a1)
{
  sub_1895F48(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1895B98(uint64_t *result, void **a2, void **a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    long long v5 = (uint64_t **)result;
    uint64_t v6 = (uint64_t)(result + 1);
    do
    {
      uint64_t result = sub_1895C24(v5, v6, v4 + 4, (uint64_t)(v4 + 4));
      uint64_t v7 = (void **)v4[1];
      if (v7)
      {
        do
        {
          long long v8 = v7;
          uint64_t v7 = (void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (void **)v4[2];
          BOOL v9 = *v8 == v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_1895C24(uint64_t **a1, uint64_t a2, void **a3, uint64_t a4)
{
  uint64_t v6 = (uint64_t **)sub_1895CA8(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1895E40((uint64_t)a1, a4, (uint64_t)&v8);
    sub_11220BC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

void **sub_1895CA8(void *a1, uint64_t a2, void ***a3, uint64_t *a4, void **a5)
{
  uint64_t v9 = (void **)(a1 + 1);
  if (a1 + 1 == (void *)a2 || (sub_1122114(a5, (void **)(a2 + 32)) & 0x80) != 0)
  {
    if (*a1 == a2)
    {
      uint64_t v12 = (void *)a2;
    }
    else
    {
      uint64_t v11 = *(void **)a2;
      if (*(void *)a2)
      {
        do
        {
          uint64_t v12 = v11;
          uint64_t v11 = (void *)v11[1];
        }
        while (v11);
      }
      else
      {
        uint64_t v16 = (void *)a2;
        do
        {
          uint64_t v12 = (void *)v16[2];
          BOOL v17 = *v12 == (void)v16;
          uint64_t v16 = v12;
        }
        while (v17);
      }
      if ((sub_1122114(v12 + 4, a5) & 0x80) == 0) {
        goto LABEL_17;
      }
    }
    if (*(void *)a2)
    {
      *a3 = (void **)v12;
      return (void **)(v12 + 1);
    }
    else
    {
      *a3 = (void **)a2;
      return (void **)a2;
    }
  }
  if ((sub_1122114((void *)(a2 + 32), a5) & 0x80) == 0)
  {
    *a3 = (void **)a2;
    *a4 = a2;
    return (void **)a4;
  }
  a4 = (uint64_t *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    uint64_t v14 = *(void ***)(a2 + 8);
    do
    {
      unint64_t v15 = v14;
      uint64_t v14 = (void **)*v14;
    }
    while (v14);
  }
  else
  {
    unint64_t v19 = (void **)a2;
    do
    {
      unint64_t v15 = (void **)v19[2];
      BOOL v17 = *v15 == v19;
      unint64_t v19 = v15;
    }
    while (!v17);
  }
  if (v15 == v9)
  {
LABEL_29:
    if (v13)
    {
      *a3 = v15;
      return v15;
    }
    else
    {
      *a3 = (void **)a2;
    }
    return (void **)a4;
  }
  if ((sub_1122114(a5, v15 + 4) & 0x80) != 0)
  {
    uint64_t v13 = *a4;
    goto LABEL_29;
  }
LABEL_17:

  return (void **)sub_1122028((uint64_t)a1, a3, a5);
}

unsigned char *sub_1895E40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x40uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    *((void *)v6 + 6) = *(void *)(a2 + 16);
  }
  *((_DWORD *)v6 + 14) = *(_DWORD *)(a2 + 24);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1895ECC(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1895EE8(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1895EE8(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void sub_1895F48(uint64_t a1, char *a2)
{
  if (a2)
  {
    sub_1895F48(a1, *(void *)a2);
    sub_1895F48(a1, *((void *)a2 + 1));
    if (a2[55] < 0) {
      operator delete(*((void **)a2 + 4));
    }
    operator delete(a2);
  }
}

void sub_1895FAC(uint64_t a1)
{
  sub_1895F48(a1 + 24, *(char **)(a1 + 32));
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_1896000(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        sub_1895FAC(v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t sub_1896084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_15017A8(a1, a2);
  sub_18960D0((uint64_t *)(v4 + 56), a2 + 56);
  return a1;
}

void sub_18960BC(_Unwind_Exception *a1)
{
  sub_1507620(v1);
  _Unwind_Resume(a1);
}

uint64_t *sub_18960D0(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1896128(a1, *(void ***)a2, (void **)(a2 + 8));
  return a1;
}

void sub_1896110(_Unwind_Exception *a1)
{
  sub_1896400(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1896128(uint64_t *result, void **a2, void **a3)
{
  if (a2 != a3)
  {
    uint64_t v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    uint64_t v6 = (uint64_t)(result + 1);
    do
    {
      uint64_t result = sub_18961B4(v5, v6, v4 + 4, (long long *)v4 + 2);
      uint64_t v7 = (void **)v4[1];
      if (v7)
      {
        do
        {
          long long v8 = v7;
          uint64_t v7 = (void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (void **)v4[2];
          BOOL v9 = *v8 == v4;
          uint64_t v4 = v8;
        }
        while (!v9);
      }
      uint64_t v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_18961B4(uint64_t **a1, uint64_t a2, void **a3, long long *a4)
{
  uint64_t v6 = sub_1895CA8(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    long long v8 = (uint64_t **)v6;
    sub_189624C((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, (uint64_t)v12, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1896350((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_189624C@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x50uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_18962B8(v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_18962A0(_Unwind_Exception *a1)
{
  sub_1896350(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_18962B8(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  uint64_t v5 = __dst + 24;
  if (*((char *)a2 + 47) < 0)
  {
    sub_4200(v5, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return __dst;
}

void sub_1896334(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1896350(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_18963A8((uint64_t)v2 + 32);
    }
    operator delete(v2);
  }
}

void sub_18963A8(uint64_t a1)
{
  if (*(char *)(a1 + 47) < 0) {
    operator delete(*(void **)(a1 + 24));
  }
  if (*(char *)(a1 + 23) < 0)
  {
    uint64_t v2 = *(void **)a1;
    operator delete(v2);
  }
}

void sub_1896400(uint64_t a1, void *a2)
{
  if (a2)
  {
    sub_1896400(a1, *a2);
    sub_1896400(a1, a2[1]);
    sub_18963A8((uint64_t)(a2 + 4));
    operator delete(a2);
  }
}

void *sub_189645C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    uint64_t result = sub_1131D80(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_18964BC(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *sub_18964D8(uint64_t *a1, uint64_t a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1896530(a1, *(int **)a2, (int *)(a2 + 8));
  return a1;
}

void sub_1896518(_Unwind_Exception *a1)
{
  sub_22EFF4(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1896530(uint64_t *result, int *a2, int *a3)
{
  if (a2 != a3)
  {
    long long v4 = a2;
    uint64_t v5 = (uint64_t **)result;
    long long v6 = result + 1;
    do
    {
      uint64_t result = sub_18965BC(v5, v6, v4 + 7, (uint64_t *)(v4 + 7));
      uint64_t v7 = (int *)*((void *)v4 + 1);
      if (v7)
      {
        do
        {
          size_t v8 = v7;
          uint64_t v7 = *(int **)v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          size_t v8 = (int *)*((void *)v4 + 2);
          BOOL v9 = *(void *)v8 == (void)v4;
          long long v4 = v8;
        }
        while (!v9);
      }
      long long v4 = v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_18965BC(uint64_t **a1, uint64_t *a2, int *a3, uint64_t *a4)
{
  long long v6 = sub_1896644(a1, a2, &v11, &v10, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    size_t v8 = (uint64_t **)v6;
    uint64_t v7 = (uint64_t *)operator new(0x28uLL);
    *(uint64_t *)((char *)v7 + 28) = *a4;
    sub_11220BC(a1, (uint64_t)v11, v8, v7);
  }
  return v7;
}

uint64_t *sub_1896644(void *a1, uint64_t *a2, uint64_t **a3, uint64_t *a4, int *a5)
{
  uint64_t v5 = a1 + 1;
  if (a1 + 1 == a2 || (int v6 = *a5, v7 = *((_DWORD *)a2 + 7), *a5 < v7))
  {
    size_t v8 = (uint64_t *)*a2;
    if ((uint64_t *)*a1 == a2)
    {
      uint64_t v10 = a2;
LABEL_17:
      if (v8)
      {
        *a3 = v10;
        return v10 + 1;
      }
      else
      {
        *a3 = a2;
        return a2;
      }
    }
    if (v8)
    {
      BOOL v9 = (uint64_t *)*a2;
      do
      {
        uint64_t v10 = v9;
        BOOL v9 = (uint64_t *)v9[1];
      }
      while (v9);
    }
    else
    {
      uint64_t v13 = a2;
      do
      {
        uint64_t v10 = (uint64_t *)v13[2];
        BOOL v14 = *v10 == (void)v13;
        uint64_t v13 = v10;
      }
      while (v14);
    }
    int v15 = *a5;
    if (*((_DWORD *)v10 + 7) < *a5) {
      goto LABEL_17;
    }
    uint64_t v16 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          BOOL v17 = (uint64_t *)v16;
          int v18 = *(_DWORD *)(v16 + 28);
          if (v15 >= v18) {
            break;
          }
          uint64_t v16 = *v17;
          uint64_t v5 = v17;
          if (!*v17) {
            goto LABEL_29;
          }
        }
        if (v18 >= v15) {
          break;
        }
        uint64_t v5 = v17 + 1;
        uint64_t v16 = v17[1];
      }
      while (v16);
    }
    else
    {
      BOOL v17 = a1 + 1;
    }
LABEL_29:
    *a3 = v17;
    return v5;
  }
  if (v7 >= v6)
  {
    *a3 = a2;
    *a4 = (uint64_t)a2;
    return a4;
  }
  uint64_t v11 = a2[1];
  if (v11)
  {
    uint64_t v12 = (uint64_t *)a2[1];
    do
    {
      a4 = v12;
      uint64_t v12 = (uint64_t *)*v12;
    }
    while (v12);
  }
  else
  {
    unint64_t v19 = a2;
    do
    {
      a4 = (uint64_t *)v19[2];
      BOOL v14 = *a4 == (void)v19;
      unint64_t v19 = a4;
    }
    while (!v14);
  }
  if (a4 != v5 && v6 >= *((_DWORD *)a4 + 7))
  {
    uint64_t v20 = *v5;
    if (*v5)
    {
      do
      {
        while (1)
        {
          BOOL v21 = (uint64_t *)v20;
          int v22 = *(_DWORD *)(v20 + 28);
          if (v6 >= v22) {
            break;
          }
          uint64_t v20 = *v21;
          uint64_t v5 = v21;
          if (!*v21) {
            goto LABEL_48;
          }
        }
        if (v22 >= v6) {
          break;
        }
        uint64_t v5 = v21 + 1;
        uint64_t v20 = v21[1];
      }
      while (v20);
    }
    else
    {
      BOOL v21 = a1 + 1;
    }
LABEL_48:
    *a3 = v21;
    return v5;
  }
  if (v11)
  {
    *a3 = a4;
  }
  else
  {
    *a3 = a2;
    return a2 + 1;
  }
  return a4;
}

void *sub_18967EC(void *result, const void *a2, uint64_t a3, size_t __sz)
{
  if (__sz)
  {
    int v6 = result;
    uint64_t result = sub_1896868(result, __sz);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_189684C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1896868(void *a1, size_t __sz)
{
  if ((__sz & 0x8000000000000000) != 0) {
    sub_2E00();
  }
  uint64_t result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

uint64_t sub_18968AC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 32) = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  sub_8A6F8((char *)(a1 + 40), *(void *)(a2 + 40), *(void *)(a2 + 48), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 48) - *(void *)(a2 + 40)) >> 3));
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  sub_8A6F8((char *)(a1 + 64), *(void *)(a2 + 64), *(void *)(a2 + 72), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 72) - *(void *)(a2 + 64)) >> 3));
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  sub_8A6F8((char *)(a1 + 88), *(void *)(a2 + 88), *(void *)(a2 + 96), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(void *)(a2 + 96) - *(void *)(a2 + 88)) >> 3));
  long long v6 = *(_OWORD *)(a2 + 112);
  int v7 = *(_DWORD *)(a2 + 128);
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 112) = v6;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  sub_1896A3C((void *)(a1 + 136), *(const void **)(a2 + 136), *(void *)(a2 + 144), (uint64_t)(*(void *)(a2 + 144) - *(void *)(a2 + 136)) >> 2);
  return a1;
}

void sub_18969DC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1891624((void ***)va);
  sub_1891624((void ***)va);
  sub_1891624((void ***)va);
  uint64_t v4 = *(std::__shared_weak_count **)(v2 + 32);
  if (v4) {
    sub_20A69F0(v4);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(v2 + 16);
  if (v5) {
    sub_20A69F0(v5);
  }
  _Unwind_Resume(a1);
}

void *sub_1896A3C(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    uint64_t result = sub_1896AB8(result, a4);
    uint64_t v7 = v6[1];
    size_t v8 = a3 - (void)a2;
    if (v8) {
      uint64_t result = memmove((void *)v6[1], a2, v8);
    }
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_1896A9C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *sub_1896AB8(void *a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_1896AFC((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *sub_1896AFC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62) {
    sub_188D718();
  }
  return operator new(4 * a2);
}

uint64_t sub_1896B34(uint64_t a1)
{
  if (*(char *)(a1 + 479) < 0) {
    operator delete(*(void **)(a1 + 456));
  }
  sub_22EFF4(a1 + 416, *(void **)(a1 + 424));
  uint64_t v2 = *(void **)(a1 + 392);
  if (v2)
  {
    *(void *)(a1 + 400) = v2;
    operator delete(v2);
  }
  sub_1896400(a1 + 360, *(void **)(a1 + 368));
  sub_1507620(a1 + 304);
  uint64_t v3 = *(void **)(a1 + 240);
  if (v3)
  {
    *(void *)(a1 + 248) = v3;
    operator delete(v3);
  }
  uint64_t v5 = (void **)(a1 + 208);
  sub_1896000(&v5);
  uint64_t v5 = (void **)(a1 + 184);
  sub_1896000(&v5);
  uint64_t v5 = (void **)(a1 + 120);
  sub_189589C(&v5);
  if (*(unsigned char *)(a1 + 112)) {
    sub_15B1678(a1 + 24);
  }
  uint64_t v5 = (void **)a1;
  sub_1895654(&v5);
  return a1;
}

uint64_t sub_1896C00(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  sub_1896F30(a1 + 8, (uint64_t *)(a2 + 8));
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  uint64_t v4 = *(void *)(a2 + 1096);
  *(void *)(a1 + 1096) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  sub_18981AC(a1 + 1104, a2 + 1104);
  sub_18981AC(a1 + 1144, a2 + 1144);
  sub_18986B4((char *)(a1 + 1184), (long long *)(a2 + 1184));
  *(void *)(a1 + 1368) = 0;
  *(_OWORD *)(a1 + 1352) = 0u;
  sub_1895738((void *)(a1 + 1352), *(void *)(a2 + 1352), *(void *)(a2 + 1360), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(a2 + 1360) - *(void *)(a2 + 1352)) >> 3));
  long long v5 = *(_OWORD *)(a2 + 1376);
  long long v6 = *(_OWORD *)(a2 + 1392);
  long long v7 = *(_OWORD *)(a2 + 1408);
  *(void *)(a1 + 1424) = *(void *)(a2 + 1424);
  *(_OWORD *)(a1 + 1408) = v7;
  *(_OWORD *)(a1 + 1392) = v6;
  *(_OWORD *)(a1 + 1376) = v5;
  *(unsigned char *)(a1 + 1432) = 0;
  *(unsigned char *)(a1 + 1448) = 0;
  if (*(unsigned char *)(a2 + 1448))
  {
    *(void *)(a1 + 1432) = *(void *)(a2 + 1432);
    uint64_t v8 = *(void *)(a2 + 1440);
    *(void *)(a1 + 1440) = v8;
    if (v8) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 1448) = 1;
  }
  *(void *)(a1 + 1456) = *(void *)(a2 + 1456);
  uint64_t v9 = *(void *)(a2 + 1464);
  *(void *)(a1 + 1464) = v9;
  if (v9) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v9 + 8), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 1472) = 0;
  *(unsigned char *)(a1 + 1488) = 0;
  if (*(unsigned char *)(a2 + 1488))
  {
    *(void *)(a1 + 1472) = *(void *)(a2 + 1472);
    uint64_t v10 = *(void *)(a2 + 1480);
    *(void *)(a1 + 1480) = v10;
    if (v10) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 8), 1uLL, memory_order_relaxed);
    }
    *(unsigned char *)(a1 + 1488) = 1;
  }
  *(void *)(a1 + 1496) = *(void *)(a2 + 1496);
  uint64_t v11 = *(void *)(a2 + 1504);
  *(void *)(a1 + 1504) = v11;
  if (v11) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v11 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v12 = (unsigned char *)(a1 + 1512);
  if (*(char *)(a2 + 1535) < 0)
  {
    sub_4200(v12, *(void **)(a2 + 1512), *(void *)(a2 + 1520));
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 1512);
    *(void *)(a1 + 1528) = *(void *)(a2 + 1528);
    *(_OWORD *)uint64_t v12 = v13;
  }
  *(_DWORD *)(a1 + 1536) = *(_DWORD *)(a2 + 1536);
  return a1;
}

void sub_1896DF0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  uint64_t v8 = *(std::__shared_weak_count **)(v2 + 1504);
  if (v8) {
    sub_20A69F0(v8);
  }
  if (*(unsigned char *)(v2 + 1488))
  {
    uint64_t v9 = *(std::__shared_weak_count **)(v2 + 1480);
    if (v9) {
      sub_20A69F0(v9);
    }
  }
  uint64_t v10 = *(std::__shared_weak_count **)(v2 + 1464);
  if (v10) {
    sub_20A69F0(v10);
  }
  if (*(unsigned char *)(v2 + 1448))
  {
    uint64_t v11 = *(std::__shared_weak_count **)(v2 + 1440);
    if (v11) {
      sub_20A69F0(v11);
    }
  }
  sub_189589C((void ***)va);
  sub_1896E94(v6);
  sub_1898634(v5);
  sub_1898634(v4);
  uint64_t v12 = *(std::__shared_weak_count **)(v2 + 1096);
  if (v12) {
    sub_20A69F0(v12);
  }
  sub_18988B4(v3);
  _Unwind_Resume(a1);
}

uint64_t sub_1896E94(uint64_t a1)
{
  if (*(char *)(a1 + 167) < 0) {
    operator delete(*(void **)(a1 + 144));
  }
  if (*(char *)(a1 + 143) < 0) {
    operator delete(*(void **)(a1 + 120));
  }
  if (*(char *)(a1 + 119) < 0) {
    operator delete(*(void **)(a1 + 96));
  }
  uint64_t v3 = (void **)(a1 + 72);
  sub_1891624(&v3);
  uint64_t v3 = (void **)(a1 + 48);
  sub_1891624(&v3);
  uint64_t v3 = (void **)(a1 + 24);
  sub_1891624(&v3);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t sub_1896F30(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
  *(void *)a1 = v4;
  long long v5 = *(_OWORD *)((char *)a2 + 28);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)((char *)a2 + 12);
  *(_OWORD *)(a1 + 28) = v5;
  long long v6 = *(_OWORD *)((char *)a2 + 44);
  long long v7 = *(_OWORD *)((char *)a2 + 60);
  long long v8 = *(_OWORD *)((char *)a2 + 76);
  *(_OWORD *)(a1 + 92) = *(_OWORD *)((char *)a2 + 92);
  *(_OWORD *)(a1 + 76) = v8;
  *(_OWORD *)(a1 + 60) = v7;
  *(_OWORD *)(a1 + 44) = v6;
  long long v9 = *(_OWORD *)((char *)a2 + 108);
  long long v10 = *(_OWORD *)((char *)a2 + 124);
  long long v11 = *(_OWORD *)((char *)a2 + 140);
  *(_OWORD *)(a1 + 156) = *(_OWORD *)((char *)a2 + 156);
  *(_OWORD *)(a1 + 140) = v11;
  *(_OWORD *)(a1 + 124) = v10;
  *(_OWORD *)(a1 + 108) = v9;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0;
  sub_8A6F8((char *)(a1 + 176), a2[22], a2[23], 0xAAAAAAAAAAAAAAABLL * ((a2[23] - a2[22]) >> 3));
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  sub_8A6F8((char *)(a1 + 200), a2[25], a2[26], 0xAAAAAAAAAAAAAAABLL * ((a2[26] - a2[25]) >> 3));
  *(void *)(a1 + 224) = 0;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  sub_8A6F8((char *)(a1 + 224), a2[28], a2[29], 0xAAAAAAAAAAAAAAABLL * ((a2[29] - a2[28]) >> 3));
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 31);
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = 0;
  *(void *)(a1 + 264) = 0;
  sub_1897684((void *)(a1 + 264), a2[33], a2[34], 0x6DB6DB6DB6DB6DB7 * ((a2[34] - a2[33]) >> 3));
  *(void *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 0;
  sub_18978B8((void *)(a1 + 288), a2[36], a2[37], 0xCCCCCCCCCCCCCCCDLL * ((a2[37] - a2[36]) >> 4));
  long long v12 = *(_OWORD *)(a2 + 39);
  long long v13 = *(_OWORD *)(a2 + 43);
  uint64_t v14 = a2[45];
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 344) = v13;
  *(_OWORD *)(a1 + 312) = v12;
  *(void *)(a1 + 360) = v14;
  *(void *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  sub_8A6F8((char *)(a1 + 368), a2[46], a2[47], 0xAAAAAAAAAAAAAAABLL * ((a2[47] - a2[46]) >> 3));
  *(void *)(a1 + 392) = 0;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  sub_8A6F8((char *)(a1 + 392), a2[49], a2[50], 0xAAAAAAAAAAAAAAABLL * ((a2[50] - a2[49]) >> 3));
  *(void *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  sub_8A6F8((char *)(a1 + 416), a2[52], a2[53], 0xAAAAAAAAAAAAAAABLL * ((a2[53] - a2[52]) >> 3));
  *(void *)(a1 + 440) = 0;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  sub_8A6F8((char *)(a1 + 440), a2[55], a2[56], 0xAAAAAAAAAAAAAAABLL * ((a2[56] - a2[55]) >> 3));
  sub_1897AE4((uint64_t *)(a1 + 464), (const void ***)a2 + 58);
  sub_1897AE4((uint64_t *)(a1 + 488), (const void ***)a2 + 61);
  sub_1897AE4((uint64_t *)(a1 + 512), (const void ***)a2 + 64);
  sub_1897AE4((uint64_t *)(a1 + 536), (const void ***)a2 + 67);
  *(_OWORD *)(a1 + 560) = *((_OWORD *)a2 + 35);
  long long v15 = *((_OWORD *)a2 + 36);
  long long v16 = *((_OWORD *)a2 + 37);
  long long v17 = *((_OWORD *)a2 + 38);
  *(void *)(a1 + 621) = *(uint64_t *)((char *)a2 + 621);
  *(_OWORD *)(a1 + 592) = v16;
  *(_OWORD *)(a1 + 608) = v17;
  *(_OWORD *)(a1 + 576) = v15;
  *(void *)(a1 + 632) = 0;
  *(void *)(a1 + 648) = 0;
  *(void *)(a1 + 640) = 0;
  sub_1897CEC((void *)(a1 + 632), a2[79], a2[80], 0xAAAAAAAAAAAAAAABLL * ((a2[80] - a2[79]) >> 4));
  *(void *)(a1 + 672) = 0;
  *(_OWORD *)(a1 + 656) = 0u;
  sub_1897CEC((void *)(a1 + 656), a2[82], a2[83], 0xAAAAAAAAAAAAAAABLL * ((a2[83] - a2[82]) >> 4));
  *(void *)(a1 + 696) = 0;
  *(_OWORD *)(a1 + 680) = 0u;
  sub_1897CEC((void *)(a1 + 680), a2[85], a2[86], 0xAAAAAAAAAAAAAAABLL * ((a2[86] - a2[85]) >> 4));
  *(void *)(a1 + 720) = 0;
  *(_OWORD *)(a1 + 704) = 0u;
  sub_8A6F8((char *)(a1 + 704), a2[88], a2[89], 0xAAAAAAAAAAAAAAABLL * ((a2[89] - a2[88]) >> 3));
  long long v18 = *(_OWORD *)(a2 + 91);
  long long v19 = *(_OWORD *)(a2 + 93);
  *(_DWORD *)(a1 + 760) = *((_DWORD *)a2 + 190);
  *(_OWORD *)(a1 + 728) = v18;
  *(_OWORD *)(a1 + 744) = v19;
  *(void *)(a1 + 768) = 0;
  *(void *)(a1 + 784) = 0;
  *(void *)(a1 + 776) = 0;
  sub_8A6F8((char *)(a1 + 768), a2[96], a2[97], 0xAAAAAAAAAAAAAAABLL * ((a2[97] - a2[96]) >> 3));
  uint64_t v20 = a2[99];
  *(void *)(a1 + 797) = *(uint64_t *)((char *)a2 + 797);
  *(void *)(a1 + 792) = v20;
  *(void *)(a1 + 808) = 0;
  *(void *)(a1 + 824) = 0;
  *(void *)(a1 + 816) = 0;
  sub_1897F58((char *)(a1 + 808), (long long *)a2[101], (long long *)a2[102], 0xAAAAAAAAAAAAAAABLL * ((a2[102] - a2[101]) >> 4));
  *(void *)(a1 + 848) = 0;
  *(_OWORD *)(a1 + 832) = 0u;
  sub_8A6F8((char *)(a1 + 832), a2[104], a2[105], 0xAAAAAAAAAAAAAAABLL * ((a2[105] - a2[104]) >> 3));
  sub_1897AE4((uint64_t *)(a1 + 856), (const void ***)a2 + 107);
  sub_1897AE4((uint64_t *)(a1 + 880), (const void ***)a2 + 110);
  *(unsigned char *)(a1 + 904) = *((unsigned char *)a2 + 904);
  *(void *)(a1 + 912) = 0;
  *(void *)(a1 + 928) = 0;
  *(void *)(a1 + 920) = 0;
  sub_18980FC((char *)(a1 + 912), (uint64_t *)a2[114], (uint64_t *)a2[115], (a2[115] - a2[114]) >> 3);
  *(void *)(a1 + 952) = 0;
  *(_OWORD *)(a1 + 936) = 0u;
  sub_8A6F8((char *)(a1 + 936), a2[117], a2[118], 0xAAAAAAAAAAAAAAABLL * ((a2[118] - a2[117]) >> 3));
  *(void *)(a1 + 976) = 0;
  *(_OWORD *)(a1 + 960) = 0u;
  sub_8A6F8((char *)(a1 + 960), a2[120], a2[121], 0xAAAAAAAAAAAAAAABLL * ((a2[121] - a2[120]) >> 3));
  long long v21 = *(_OWORD *)(a2 + 123);
  long long v22 = *(_OWORD *)(a2 + 125);
  *(_DWORD *)(a1 + 1016) = *((_DWORD *)a2 + 254);
  *(_OWORD *)(a1 + 984) = v21;
  *(_OWORD *)(a1 + 1000) = v22;
  sub_4BC310(a1 + 1024, (uint64_t)(a2 + 128));
  *(_OWORD *)(a1 + 1064) = *(_OWORD *)(a2 + 133);
  return a1;
}

void sub_1897450(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v32 - 96) = v26;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = v25;
  sub_1891624((void ***)(v32 - 96));
  uint64_t v34 = *v31;
  if (*v31)
  {
    *(void *)(v28 + 920) = v34;
    operator delete(v34);
  }
  sub_2F020(v30, *(char **)(v28 + 888));
  sub_2F020(v27, *(char **)(v28 + 864));
  *(void *)(v32 - 96) = v24;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a9;
  sub_1898078((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a10;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a11;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = v29;
  sub_1897ED4((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a12;
  sub_1897ED4((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a13;
  sub_1897ED4((void ***)(v32 - 96));
  sub_2F020(a14, *(char **)(v28 + 544));
  sub_2F020(a15, *(char **)(v28 + 520));
  sub_2F020(a16, *(char **)(v28 + 496));
  sub_2F020(a17, *(char **)(v28 + 472));
  *(void *)(v32 - 96) = a18;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a19;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a20;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a21;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a22;
  sub_1897A60((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a23;
  sub_1897834((void ***)(v32 - 96));
  *(void *)(v32 - 96) = a24;
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = *(void *)(v32 - 112);
  sub_1891624((void ***)(v32 - 96));
  *(void *)(v32 - 96) = *(void *)(v32 - 104);
  sub_1891624((void ***)(v32 - 96));
  _Unwind_Resume(a1);
}

void sub_18975E4()
{
}

void sub_18975EC()
{
}

void sub_18975F4()
{
}

void sub_18975FC()
{
}

void sub_1897604()
{
}

void sub_189760C()
{
}

void sub_1897614()
{
}

void sub_189761C()
{
}

void sub_1897624()
{
}

void sub_189762C()
{
}

void sub_1897634()
{
}

void sub_189763C()
{
}

void sub_1897644()
{
}

void sub_189764C()
{
}

void sub_1897654()
{
}

void sub_189765C()
{
}

void sub_1897664()
{
}

void sub_189766C()
{
}

void sub_1897674()
{
}

void sub_189767C()
{
}

void *sub_1897684(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_189770C(result, a4);
    uint64_t result = (void *)sub_18977B0((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_18976EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1897834(&a9);
  _Unwind_Resume(a1);
}

char *sub_189770C(void *a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_1897764((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[56 * v4];
  return result;
}

void *sub_1897764(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x492492492492493) {
    sub_188D718();
  }
  return operator new(56 * a2);
}

uint64_t sub_18977B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1216E08(a4 + v7, a2 + v7);
      v7 += 56;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1897810(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 56;
    do
    {
      sub_1216EB4(v4 + v2);
      v2 -= 56;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1897834(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_1216EB4(v4 - 56);
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_18978B8(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_1897940(result, a4);
    uint64_t result = (void *)sub_18979DC((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1897920(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1897A60(&a9);
  _Unwind_Resume(a1);
}

char *sub_1897940(void *a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334) {
    sub_2E00();
  }
  uint64_t result = (char *)sub_1897994((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[80 * v4];
  return result;
}

void *sub_1897994(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x333333333333334) {
    sub_188D718();
  }
  return operator new(80 * a2);
}

uint64_t sub_18979DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1217870(a4 + v7, a2 + v7);
      v7 += 80;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1897A3C(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 80;
    do
    {
      sub_1217928(v4 + v2);
      v2 -= 80;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

void sub_1897A60(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    long long v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = sub_1217928(v4 - 80);
      while ((void *)v4 != v2);
      long long v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t *sub_1897AE4(uint64_t *a1, const void ***a2)
{
  a1[2] = 0;
  a1[1] = 0;
  *a1 = (uint64_t)(a1 + 1);
  sub_1897B3C(a1, *a2, a2 + 1);
  return a1;
}

void sub_1897B24(_Unwind_Exception *a1)
{
  sub_2F020(v1, *(char **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1897B3C(uint64_t *result, const void **a2, const void ***a3)
{
  if (a2 != (const void **)a3)
  {
    uint64_t v4 = a2;
    long long v5 = (uint64_t **)result;
    long long v6 = result + 1;
    do
    {
      uint64_t result = sub_1897BC8(v5, v6, v4 + 4, (uint64_t)(v4 + 4));
      uint64_t v7 = (const void **)v4[1];
      if (v7)
      {
        do
        {
          long long v8 = (const void ***)v7;
          uint64_t v7 = (const void **)*v7;
        }
        while (v7);
      }
      else
      {
        do
        {
          long long v8 = (const void ***)v4[2];
          BOOL v9 = *v8 == v4;
          uint64_t v4 = (const void **)v8;
        }
        while (!v9);
      }
      uint64_t v4 = (const void **)v8;
    }
    while (v8 != a3);
  }
  return result;
}

uint64_t *sub_1897BC8(uint64_t **a1, uint64_t *a2, const void **a3, uint64_t a4)
{
  long long v6 = (uint64_t **)sub_5334DC(a1, a2, &v10, &v9, a3);
  uint64_t result = *v6;
  if (!*v6)
  {
    sub_1897C4C((uint64_t)a1, a4, (uint64_t)&v8);
    sub_11220BC(a1, (uint64_t)v10, v6, v8);
    return v8;
  }
  return result;
}

void *sub_1897C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  long long v6 = (char *)operator new(0x38uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = v6 + 32;
  if (*(char *)(a2 + 23) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)a2, *(void *)(a2 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a2;
    result[2] = *(void *)(a2 + 16);
  }
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1897CD0(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1895EE8(v3, v2);
  _Unwind_Resume(a1);
}

void *sub_1897CEC(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_18959A8(result, a4);
    uint64_t result = (void *)sub_1897D74((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_1897D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1897ED4(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_1897D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_1897DF8((unsigned char *)(a4 + v7), (long long *)(a2 + v7));
      v7 += 48;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_1897DD4(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 48;
    do
    {
      sub_1897E8C(v4 + v2);
      v2 -= 48;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1897DF8(unsigned char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  *((void *)__dst + 3) = 0;
  *((void *)__dst + 4) = 0;
  *((void *)__dst + 5) = 0;
  sub_8A6F8(__dst + 24, *((void *)a2 + 3), *((void *)a2 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 4) - *((void *)a2 + 3)) >> 3));
  return __dst;
}

void sub_1897E70(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1897E8C(uint64_t a1)
{
  uint64_t v2 = (void **)(a1 + 24);
  sub_1891624(&v2);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
}

void sub_1897ED4(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        sub_1897E8C(v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

char *sub_1897F58(char *result, long long *a2, long long *a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    sub_18959A8(result, a4);
    uint64_t result = sub_29DE80((int)v6 + 16, a2, a3, *((char **)v6 + 1));
    *((void *)v6 + 1) = result;
  }
  return result;
}

void sub_1897FC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_1898078(&a9);
  _Unwind_Resume(a1);
}

char *sub_1897FE0(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  uint64_t v5 = __dst + 24;
  if (*((char *)a2 + 47) < 0)
  {
    sub_4200(v5, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)uint64_t v5 = v6;
  }
  return __dst;
}

void sub_189805C(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1898078(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = **a1;
    if ((void *)v4 != v2)
    {
      do
      {
        v4 -= 48;
        sub_18963A8(v4);
      }
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

char *sub_18980FC(char *result, uint64_t *a2, uint64_t *a3, unint64_t a4)
{
  if (a4)
  {
    long long v6 = result;
    uint64_t result = sub_1131D80(result, a4);
    uint64_t v7 = (void *)*((void *)v6 + 1);
    while (a2 != a3)
    {
      uint64_t v8 = *a2++;
      *v7++ = v8;
    }
    *((void *)v6 + 1) = v7;
  }
  return result;
}

void sub_1898154(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1898170(uint64_t a1)
{
  sub_5B9E24(a1, *(void ***)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

uint64_t sub_18981AC(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  sub_18925BC(a1, *(void *)(a2 + 8));
  for (uint64_t i = *(unsigned __int8 **)(a2 + 16); i; uint64_t i = *(unsigned __int8 **)i)
    sub_1898224(a1, i + 16, (long long *)i + 1);
  return a1;
}

void sub_189820C(_Unwind_Exception *a1)
{
  sub_1898634(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_1898224(uint64_t a1, unsigned __int8 *a2, long long *a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_111EE48(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    long long v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_111EE88(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_18984A8(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_18925BC(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  long long v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  v25[0] = 0;
  ++*v7;
  sub_1898588((uint64_t)v25, 0);
  return i;
}

void sub_1898490(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_1898588((uint64_t)va, 0);
  _Unwind_Resume(a1);
}

void *sub_18984A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = operator new(0x38uLL);
  *(void *)a4 = v8;
  *(void *)(a4 + 8) = v7;
  *(unsigned char *)(a4 + 16) = 0;
  void *v8 = 0;
  v8[1] = a2;
  uint64_t result = sub_1898520(v8 + 2, a3);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1898508(_Unwind_Exception *a1)
{
  sub_1898588(v1, 0);
  _Unwind_Resume(a1);
}

void *sub_1898520(void *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    __dst[2] = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  uint64_t v5 = *((void *)a2 + 4);
  __dst[3] = *((void *)a2 + 3);
  __dst[4] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return __dst;
}

void sub_1898588(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = a2;
  if (v2)
  {
    if (*(unsigned char *)(a1 + 16)) {
      sub_18985E0((uint64_t)v2 + 16);
    }
    operator delete(v2);
  }
}

void sub_18985E0(uint64_t a1)
{
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 32);
  if (v2) {
    sub_20A69F0(v2);
  }
  if (*(char *)(a1 + 23) < 0)
  {
    unint64_t v3 = *(void **)a1;
    operator delete(v3);
  }
}

uint64_t sub_1898634(uint64_t a1)
{
  sub_1898670(a1, *(void **)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_1898670(uint64_t a1, void *a2)
{
  if (a2)
  {
    uint64_t v2 = a2;
    do
    {
      unint64_t v3 = (void *)*v2;
      sub_18985E0((uint64_t)(v2 + 2));
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

char *sub_18986B4(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  *((void *)__dst + 3) = 0;
  *((void *)__dst + 4) = 0;
  *((void *)__dst + 5) = 0;
  sub_8A6F8(__dst + 24, *((void *)a2 + 3), *((void *)a2 + 4), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 4) - *((void *)a2 + 3)) >> 3));
  *((void *)__dst + 6) = 0;
  *((void *)__dst + 7) = 0;
  *((void *)__dst + 8) = 0;
  sub_8A6F8(__dst + 48, *((void *)a2 + 6), *((void *)a2 + 7), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 7) - *((void *)a2 + 6)) >> 3));
  *((void *)__dst + 9) = 0;
  *((void *)__dst + 10) = 0;
  *((void *)__dst + 11) = 0;
  sub_8A6F8(__dst + 72, *((void *)a2 + 9), *((void *)a2 + 10), 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*((void *)a2 + 10) - *((void *)a2 + 9)) >> 3));
  if (*((char *)a2 + 119) < 0)
  {
    sub_4200(__dst + 96, *((void **)a2 + 12), *((void *)a2 + 13));
  }
  else
  {
    long long v5 = a2[6];
    *((void *)__dst + 14) = *((void *)a2 + 14);
    *((_OWORD *)__dst + 6) = v5;
  }
  if (*((char *)a2 + 143) < 0)
  {
    sub_4200(__dst + 120, *((void **)a2 + 15), *((void *)a2 + 16));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 120);
    *((void *)__dst + 17) = *((void *)a2 + 17);
    *(_OWORD *)(__dst + 120) = v6;
  }
  uint64_t v7 = __dst + 144;
  if (*((char *)a2 + 167) < 0)
  {
    sub_4200(v7, *((void **)a2 + 18), *((void *)a2 + 19));
  }
  else
  {
    long long v8 = a2[9];
    *((void *)__dst + 20) = *((void *)a2 + 20);
    *(_OWORD *)uint64_t v7 = v8;
  }
  return __dst;
}

void sub_189882C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  if (*(char *)(v2 + 143) < 0) {
    operator delete(*v4);
  }
  if (*(char *)(v2 + 119) < 0) {
    operator delete(*v3);
  }
  sub_1891624((void ***)va);
  sub_1891624((void ***)va);
  sub_1891624((void ***)va);
  if (*(char *)(v2 + 23) < 0) {
    operator delete(*(void **)v2);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_18988B4(uint64_t a1)
{
  sub_1898170(a1 + 1024);
  long long v4 = (void **)(a1 + 960);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 936);
  sub_1891624(&v4);
  uint64_t v2 = *(void **)(a1 + 912);
  if (v2)
  {
    *(void *)(a1 + 920) = v2;
    operator delete(v2);
  }
  sub_2F020(a1 + 880, *(char **)(a1 + 888));
  sub_2F020(a1 + 856, *(char **)(a1 + 864));
  long long v4 = (void **)(a1 + 832);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 808);
  sub_1898078(&v4);
  long long v4 = (void **)(a1 + 768);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 704);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 680);
  sub_1897ED4(&v4);
  long long v4 = (void **)(a1 + 656);
  sub_1897ED4(&v4);
  long long v4 = (void **)(a1 + 632);
  sub_1897ED4(&v4);
  sub_2F020(a1 + 536, *(char **)(a1 + 544));
  sub_2F020(a1 + 512, *(char **)(a1 + 520));
  sub_2F020(a1 + 488, *(char **)(a1 + 496));
  sub_2F020(a1 + 464, *(char **)(a1 + 472));
  long long v4 = (void **)(a1 + 440);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 416);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 392);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 368);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 288);
  sub_1897A60(&v4);
  long long v4 = (void **)(a1 + 264);
  sub_1897834(&v4);
  long long v4 = (void **)(a1 + 224);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 200);
  sub_1891624(&v4);
  long long v4 = (void **)(a1 + 176);
  sub_1891624(&v4);
  return a1;
}

uint64_t sub_1898A60(uint64_t a1)
{
  if (*(char *)(a1 + 1535) < 0) {
    operator delete(*(void **)(a1 + 1512));
  }
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 1504);
  if (v2) {
    sub_20A69F0(v2);
  }
  if (*(unsigned char *)(a1 + 1488))
  {
    unint64_t v3 = *(std::__shared_weak_count **)(a1 + 1480);
    if (v3) {
      sub_20A69F0(v3);
    }
  }
  long long v4 = *(std::__shared_weak_count **)(a1 + 1464);
  if (v4) {
    sub_20A69F0(v4);
  }
  if (*(unsigned char *)(a1 + 1448))
  {
    long long v5 = *(std::__shared_weak_count **)(a1 + 1440);
    if (v5) {
      sub_20A69F0(v5);
    }
  }
  long long v8 = (void **)(a1 + 1352);
  sub_189589C(&v8);
  if (*(char *)(a1 + 1351) < 0) {
    operator delete(*(void **)(a1 + 1328));
  }
  if (*(char *)(a1 + 1327) < 0) {
    operator delete(*(void **)(a1 + 1304));
  }
  if (*(char *)(a1 + 1303) < 0) {
    operator delete(*(void **)(a1 + 1280));
  }
  long long v8 = (void **)(a1 + 1256);
  sub_1891624(&v8);
  long long v8 = (void **)(a1 + 1232);
  sub_1891624(&v8);
  long long v8 = (void **)(a1 + 1208);
  sub_1891624(&v8);
  if (*(char *)(a1 + 1207) < 0) {
    operator delete(*(void **)(a1 + 1184));
  }
  sub_1898634(a1 + 1144);
  sub_1898634(a1 + 1104);
  long long v6 = *(std::__shared_weak_count **)(a1 + 1096);
  if (v6) {
    sub_20A69F0(v6);
  }
  sub_18988B4(a1 + 8);
  return a1;
}

uint64_t sub_1898B80(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 648);
  if (v2)
  {
    *(void *)(a1 + 656) = v2;
    operator delete(v2);
  }
  uint64_t v7 = (void **)(a1 + 600);
  sub_1891624(&v7);
  uint64_t v7 = (void **)(a1 + 576);
  sub_1891624(&v7);
  uint64_t v7 = (void **)(a1 + 552);
  sub_1891624(&v7);
  unint64_t v3 = *(std::__shared_weak_count **)(a1 + 544);
  if (v3) {
    sub_20A69F0(v3);
  }
  long long v4 = *(std::__shared_weak_count **)(a1 + 528);
  if (v4) {
    sub_20A69F0(v4);
  }
  long long v5 = *(void **)(a1 + 488);
  if (v5)
  {
    *(void *)(a1 + 496) = v5;
    operator delete(v5);
  }
  return sub_1896B34(a1);
}

uint64_t sub_1898C18(uint64_t *a1, long long *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = 0x8F9C18F9C18F9C19 * ((a1[1] - *a1) >> 4);
  unint64_t v5 = v4 + 1;
  if (v4 + 1 > 0x63E7063E7063E7) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  unint64_t v8 = 0x8F9C18F9C18F9C19 * ((a1[2] - v3) >> 4);
  if (2 * v8 > v5) {
    unint64_t v5 = 2 * v8;
  }
  if (v8 >= 0x31F3831F3831F3) {
    unint64_t v9 = 0x63E7063E7063E7;
  }
  else {
    unint64_t v9 = v5;
  }
  float v17 = a1 + 2;
  if (v9) {
    unint64_t v10 = (char *)sub_189308C(v7, v9);
  }
  else {
    unint64_t v10 = 0;
  }
  long long v13 = v10;
  uint64_t v14 = &v10[656 * v4];
  float v16 = &v10[656 * v9];
  sub_1891E80((uint64_t)v14, a2);
  unint64_t v15 = v14 + 656;
  sub_1893004(a1, &v13);
  uint64_t v11 = a1[1];
  sub_18934A4((uint64_t)&v13);
  return v11;
}

void sub_1898D24(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_18934A4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_1898D38(uint64_t a1, void **a2, uint64_t a3)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = a1 + 8;
  *(void *)(a1 + 16) = 0;
  *(void *)a1 = a1 + 8;
  if (a3)
  {
    uint64_t v6 = 56 * a3;
    do
    {
      sub_1898DBC((uint64_t **)a1, v4, a2, (long long *)a2);
      a2 += 7;
      v6 -= 56;
    }
    while (v6);
  }
  return a1;
}

void sub_1898DA4(_Unwind_Exception *a1)
{
  sub_1896400(v1, *(void **)(v1 + 8));
  _Unwind_Resume(a1);
}

uint64_t *sub_1898DBC(uint64_t **a1, uint64_t a2, void **a3, long long *a4)
{
  uint64_t v6 = sub_1895CA8(a1, a2, &v12, &v11, a3);
  uint64_t v7 = (uint64_t *)*v6;
  if (!*v6)
  {
    unint64_t v8 = (uint64_t **)v6;
    sub_1898E54((uint64_t)a1, a4, (uint64_t)v10);
    sub_11220BC(a1, (uint64_t)v12, v8, v10[0]);
    uint64_t v7 = v10[0];
    v10[0] = 0;
    sub_1896350((uint64_t)v10, 0);
  }
  return v7;
}

char *sub_1898E54@<X0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 + 8;
  uint64_t v6 = (char *)operator new(0x58uLL);
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v5;
  *(unsigned char *)(a3 + 16) = 0;
  uint64_t result = sub_1898EC0(v6 + 32, a2);
  *(unsigned char *)(a3 + 16) = 1;
  return result;
}

void sub_1898EA8(_Unwind_Exception *a1)
{
  sub_1896350(v1, 0);
  _Unwind_Resume(a1);
}

char *sub_1898EC0(char *__dst, long long *a2)
{
  if (*((char *)a2 + 23) < 0)
  {
    sub_4200(__dst, *(void **)a2, *((void *)a2 + 1));
  }
  else
  {
    long long v4 = *a2;
    *((void *)__dst + 2) = *((void *)a2 + 2);
    *(_OWORD *)long long __dst = v4;
  }
  uint64_t v5 = __dst + 24;
  if (*((char *)a2 + 47) < 0)
  {
    sub_4200(v5, *((void **)a2 + 3), *((void *)a2 + 4));
  }
  else
  {
    long long v6 = *(long long *)((char *)a2 + 24);
    *((void *)__dst + 5) = *((void *)a2 + 5);
    *(_OWORD *)uint64_t v5 = v6;
  }
  *((_DWORD *)__dst + 12) = *((_DWORD *)a2 + 12);
  return __dst;
}

void sub_1898F44(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 23) < 0) {
    operator delete(*(void **)v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_1898F60(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 32 * a3;
    do
    {
      sub_1898FD8(a1, a2, (uint64_t)a2);
      a2 += 32;
      v5 -= 32;
    }
    while (v5);
  }
  return a1;
}

void sub_1898FC4(_Unwind_Exception *a1)
{
  sub_1899364(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_1898FD8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_111EE48(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    long long v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_111EE88(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_1899258(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_18925BC(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  long long v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_1899234(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_1899304((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_1899258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x30uLL);
  *(void *)(a4 + 8) = v7;
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  uint64_t result = v8 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a3;
    *((void *)v8 + 4) = *(void *)(a3 + 16);
  }
  *((_DWORD *)v8 + 10) = *(_DWORD *)(a3 + 24);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_18992E8(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1899304(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1899304(uint64_t a1, void **__p)
{
  if (*(unsigned char *)(a1 + 8))
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t sub_1899364(uint64_t a1)
{
  sub_18993A0(a1, *(void ***)(a1 + 16));
  uint64_t v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_18993A0(int a1, void **__p)
{
  if (__p)
  {
    uint64_t v2 = __p;
    do
    {
      uint64_t v3 = (void **)*v2;
      if (*((char *)v2 + 39) < 0) {
        operator delete(v2[2]);
      }
      operator delete(v2);
      uint64_t v2 = v3;
    }
    while (v3);
  }
}

uint64_t sub_18993EC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    uint64_t v5 = 32 * a3;
    do
    {
      sub_1899464(a1, a2, (uint64_t)a2);
      a2 += 32;
      v5 -= 32;
    }
    while (v5);
  }
  return a1;
}

void sub_1899450(_Unwind_Exception *a1)
{
  sub_1899364(v1);
  _Unwind_Resume(a1);
}

unsigned __int8 *sub_1899464(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v7 = (void *)(a1 + 24);
  unint64_t v8 = sub_111EE48(a1 + 24, (uint64_t)a2);
  unint64_t v9 = v8;
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    unint64_t v12 = v11.u32[0];
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8;
      if (v8 >= v10) {
        unint64_t v3 = v8 % v10;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v8;
    }
    long long v13 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v13)
    {
      for (uint64_t i = *v13; i; uint64_t i = *(unsigned __int8 **)i)
      {
        unint64_t v15 = *((void *)i + 1);
        if (v15 == v9)
        {
          if (sub_111EE88(a1 + 32, i + 16, a2)) {
            return i;
          }
        }
        else
        {
          if (v12 > 1)
          {
            if (v15 >= v10) {
              v15 %= v10;
            }
          }
          else
          {
            v15 &= v10 - 1;
          }
          if (v15 != v3) {
            break;
          }
        }
      }
    }
  }
  sub_18996E4(a1, v9, a3, (uint64_t)v25);
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    sub_18925BC(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  long long v22 = *(void **)(*(void *)a1 + 8 * v3);
  if (v22)
  {
    *(void *)v25[0] = *v22;
    void *v22 = v25[0];
  }
  else
  {
    *(void *)v25[0] = *(void *)(a1 + 16);
    *(void *)(a1 + 16) = v25[0];
    *(void *)(*(void *)a1 + 8 * v3) = a1 + 16;
    if (*(void *)v25[0])
    {
      unint64_t v23 = *(void *)(*(void *)v25[0] + 8);
      if ((v10 & (v10 - 1)) != 0)
      {
        if (v23 >= v10) {
          v23 %= v10;
        }
      }
      else
      {
        v23 &= v10 - 1;
      }
      *(void *)(*(void *)a1 + 8 * v23) = v25[0];
    }
  }
  uint64_t i = (unsigned __int8 *)v25[0];
  ++*v7;
  return i;
}

void sub_18996C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void **__p, uint64_t a11)
{
  if (__p) {
    sub_1899304((uint64_t)&a11, __p);
  }
  _Unwind_Resume(exception_object);
}

unsigned char *sub_18996E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = a1 + 16;
  unint64_t v8 = (char *)operator new(0x30uLL);
  *(void *)(a4 + 8) = v7;
  *(void *)a4 = v8;
  *(unsigned char *)(a4 + 16) = 0;
  *(void *)unint64_t v8 = 0;
  *((void *)v8 + 1) = a2;
  uint64_t result = v8 + 16;
  if (*(char *)(a3 + 23) < 0)
  {
    uint64_t result = sub_4200(result, *(void **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)uint64_t result = *(_OWORD *)a3;
    *((void *)v8 + 4) = *(void *)(a3 + 16);
  }
  *((_DWORD *)v8 + 10) = *(_DWORD *)(a3 + 24);
  *(unsigned char *)(a4 + 16) = 1;
  return result;
}

void sub_1899774(_Unwind_Exception *a1)
{
  *uint64_t v1 = 0;
  sub_1899304(v3, v2);
  _Unwind_Resume(a1);
}

void sub_1899790()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2625A88, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_18A0770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_18A277C()
{
}

void sub_18A2788()
{
}

void sub_18A2798()
{
}

void sub_18A27A4()
{
}

void sub_18A27B4()
{
}

void sub_18A27C0()
{
}

void sub_18A27D0()
{
}

void sub_18A27DC()
{
}

void sub_18A27EC()
{
}

void sub_18A27F8()
{
}

void sub_18A2808()
{
}

void sub_18A2814()
{
}

void sub_18A2824()
{
}

void sub_18A2830()
{
}

void sub_18A2840()
{
}

void sub_18A284C()
{
}

void sub_18A285C()
{
}

void sub_18A2868()
{
}

void sub_18A2878()
{
}

void sub_18A2884()
{
}

void sub_18A2894()
{
}

void sub_18A28A0()
{
}

void sub_18A28B0()
{
}

void sub_18A28BC()
{
}

void sub_18A28CC()
{
}

void sub_18A28D8()
{
}

void sub_18A28E8()
{
}

void sub_18A28F4()
{
}

void sub_18A2904()
{
}

void sub_18A2910()
{
}

void sub_18A2920()
{
}

void sub_18A292C()
{
}

void sub_18A293C()
{
}

void sub_18A2948()
{
}

void sub_18A2958()
{
}

void sub_18A2964()
{
}

void sub_18A2974()
{
}

void sub_18A2980()
{
}

void sub_18A2990()
{
}

void sub_18A299C()
{
}

void sub_18A29AC()
{
}

void sub_18A29B8()
{
}

void sub_18A29C8()
{
}

void sub_18A29D4()
{
}

void sub_18A29E4()
{
}

void sub_18A29F0()
{
}

void sub_18A2A00()
{
}

void sub_18A2A0C()
{
}

void sub_18A2A1C()
{
}

void sub_18A2A28()
{
}

void sub_18A2A38()
{
}

void sub_18A2A44()
{
}

void sub_18A2A54()
{
}

void sub_18A2A60()
{
}

void sub_18A2A70()
{
}

void sub_18A2A7C()
{
}

void sub_18A2A8C()
{
}

void sub_18A2A98()
{
}

void sub_18A2AA8()
{
}

void sub_18A2AB4()
{
}

void sub_18A2AC4()
{
}

void sub_18A2AD0()
{
}

void sub_18A2AE0()
{
}

void sub_18A2AEC()
{
}

void sub_18A2AFC()
{
}

void sub_18A2B08()
{
}

void sub_18A2B18()
{
}

void sub_18A2B24()
{
}

void sub_18A2B34()
{
}

void sub_18A2B40()
{
}

void sub_18A2B50()
{
}

void sub_18A2B5C()
{
}

void sub_18A2B6C()
{
}

void sub_18A2B78()
{
}

void sub_18A2B88()
{
}

void sub_18A2B94()
{
}

void sub_18A2BA4()
{
}

void sub_18A2BB0()
{
}

void sub_18A2BC0()
{
}

void sub_18A2BCC()
{
}

void sub_18A2BDC()
{
}

void sub_18A2BE8()
{
}

void sub_18A2BF8()
{
}

void sub_18A2C04()
{
}

void sub_18A2C14()
{
}

void sub_18A2C20()
{
}

void sub_18A2C30()
{
}

void sub_18A2C3C()
{
}

void sub_18A2C4C()
{
}

void sub_18A2C58()
{
}

void sub_18A2C68()
{
}

void sub_18A2C74()
{
}

void sub_18A2C84()
{
}

void sub_18A2C90()
{
}

void sub_18A2CA0()
{
}

void sub_18A2CAC()
{
}

void sub_18A2CBC()
{
}

void sub_18A2CC8()
{
}

void sub_18A2CD8()
{
}

void sub_18A2CE4()
{
}

void sub_18A2CF4()
{
}

void sub_18A2D00()
{
}

void sub_18A2D10()
{
}

void sub_18A2D1C()
{
}

void sub_18A2D2C()
{
}

void sub_18A2D38()
{
}

void sub_18A2D48()
{
}

void sub_18A2D54()
{
}

void sub_18A2D64()
{
}

void sub_18A2D70()
{
}

void sub_18A2D80()
{
}

void sub_18A2D8C()
{
}

void sub_18A2D9C()
{
}

void sub_18A2DA8()
{
}

void sub_18A2DB8()
{
}

void sub_18A2DC4()
{
}

void sub_18A2DD4()
{
}

void sub_18A2DE0()
{
}

void sub_18A2DF0()
{
}

void sub_18A2DFC()
{
}

void sub_18A2E0C()
{
}

void sub_18A2E18()
{
}

void sub_18A2E28()
{
}

void sub_18A2E34()
{
}

void sub_18A2E44()
{
}

void sub_18A2E50()
{
}

void sub_18A2E60()
{
}

void sub_18A2E6C()
{
}

void sub_18A2E7C()
{
}

void sub_18A2E88()
{
}

void sub_18A2E98()
{
}

void sub_18A2EA4()
{
}

void sub_18A2EB4()
{
}

void sub_18A2EC0()
{
}

void sub_18A2ED0()
{
}

void sub_18A2EDC()
{
}

void sub_18A2EEC()
{
}

void sub_18A2EF8()
{
}

void sub_18A2F08()
{
}

void sub_18A2F14()
{
}

void sub_18A2F24()
{
}

void sub_18A2F30()
{
}

void sub_18A2F40()
{
}

void sub_18A2F4C()
{
}

void sub_18A2F5C()
{
}

void sub_18A2F68()
{
}

void sub_18A2F78()
{
}

void sub_18A2F84()
{
}

void sub_18A2F94()
{
}

void sub_18A2FA0()
{
}

void sub_18A2FB0()
{
}

void sub_18A2FBC()
{
}

void sub_18A2FCC()
{
}

void sub_18A2FD8()
{
}

void sub_18A2FE8()
{
}

void sub_18A2FF4()
{
}

void sub_18A3004()
{
}

void sub_18A3010()
{
}

void sub_18A3020()
{
}

void sub_18A302C()
{
}

void sub_18A303C()
{
}

void sub_18A3048()
{
}

void sub_18A3058()
{
}

void sub_18A3064()
{
}

void sub_18A3074()
{
}

void sub_18A3080()
{
}

void sub_18A3090()
{
}

void sub_18A309C()
{
}

void sub_18A30AC()
{
}

void sub_18A30B8()
{
}

void sub_18A30C8()
{
}

void sub_18A30D4()
{
}

void sub_18A30E4()
{
}

void sub_18A30F0()
{
}

void sub_18A3100()
{
}

void sub_18A310C()
{
}

void sub_18A311C()
{
}

void sub_18A3128()
{
}

void sub_18A3138()
{
}

void sub_18A3144()
{
}

void sub_18A3154()
{
}

void sub_18A3160()
{
}

void sub_18A3170()
{
}

void sub_18A317C()
{
}

void sub_18A318C()
{
}

void sub_18A3198()
{
}

void sub_18A31A8()
{
}

void sub_18A31B4()
{
}

void sub_18A31C4()
{
}

void sub_18A31D0()
{
}

void sub_18A31E0()
{
}

void sub_18A31EC()
{
}

void sub_18A31FC()
{
}

void sub_18A3208()
{
}

void sub_18A3218()
{
}

void sub_18A3224()
{
}

void sub_18A3234()
{
}

void sub_18A3240()
{
}

void sub_18A3250()
{
}

void sub_18A325C()
{
}

void sub_18A326C()
{
}

void sub_18A3278()
{
}

void sub_18A3288()
{
}

void sub_18A3294()
{
}

void sub_18A32A4()
{
}

void sub_18A32B0()
{
}

void sub_18A32C0()
{
}

void sub_18A32CC()
{
}

void sub_18A32DC()
{
}

void sub_18A32E8()
{
}

void sub_18A32F8()
{
}

void sub_18A3304()
{
}

void sub_18A3314()
{
}

void sub_18A3320()
{
}

void sub_18A3330()
{
}

void sub_18A333C()
{
}

void sub_18A334C()
{
}

void sub_18A3358()
{
}

void sub_18A3368()
{
}

void sub_18A3374()
{
}

void sub_18A3384()
{
}

void sub_18A3390()
{
}

void sub_18A33A0()
{
}

void sub_18A33AC()
{
}

void sub_18A33BC()
{
}

void sub_18A33C8()
{
}

void sub_18A33D8()
{
}

void sub_18A33E4()
{
}

void sub_18A33F4()
{
}

void sub_18A3400()
{
}

void sub_18A3410()
{
}

void sub_18A341C()
{
}

void sub_18A342C()
{
}

void sub_18A3438()
{
}

void sub_18A3448()
{
}

void sub_18A3454()
{
}

void sub_18A3464()
{
}

void sub_18A3470()
{
}

void sub_18A3480()
{
}

void sub_18A348C()
{
}

void sub_18A349C()
{
}

void sub_18A34A8()
{
}

void sub_18A34B8()
{
}

void sub_18A34C4()
{
}

void sub_18A34D4()
{
}

void sub_18A34E0()
{
}

void sub_18A34F0()
{
}

void sub_18A34FC()
{
}

void sub_18A350C()
{
}

void sub_18A3518()
{
}

void sub_18A3528()
{
}

void sub_18A3534()
{
}

void sub_18A3544()
{
}

void sub_18A3550()
{
}

void sub_18A3560()
{
}

void sub_18A356C()
{
}

void sub_18A357C()
{
}

void sub_18A3588()
{
}

void sub_18A3598()
{
}

void sub_18A35A4()
{
}

void sub_18A35B4()
{
}

void sub_18A35C0()
{
}

void sub_18A35D0()
{
}

void sub_18A35DC()
{
}

void sub_18A35EC()
{
}

void sub_18A35F8()
{
}

void sub_18A3608()
{
}

void sub_18A3614()
{
}

void sub_18A3624()
{
}

void sub_18A3630()
{
}

void sub_18A3640()
{
}

void sub_18A364C()
{
}

void sub_18A365C()
{
}

void sub_18A3668()
{
}

void sub_18A3678()
{
}

void sub_18A3684()
{
}

void sub_18A3694()
{
}

void sub_18A36A0()
{
}

void sub_18A36B0()
{
}

void sub_18A36BC()
{
}

void sub_18A36C8()
{
}

void sub_18A36D4()
{
}

void sub_18A36E0()
{
}

void sub_18A36F0()
{
}

void sub_18A36FC()
{
}

void sub_18A370C()
{
}

void sub_18A3718()
{
}

void sub_18A3728()
{
}

void sub_18A3734()
{
}

void sub_18A3744()
{
}

void sub_18A3750()
{
}

void sub_18A3760()
{
}

void sub_18A376C()
{
}

void sub_18A377C()
{
}

void sub_18A3788()
{
}

void sub_18A3798()
{
}

void sub_18A37A4()
{
}

void sub_18A37B4()
{
}

void sub_18A37C0()
{
}

void sub_18A37D0()
{
}

void sub_18A37DC()
{
}

void sub_18A37EC()
{
}

void sub_18A37F8()
{
}

void sub_18A3808()
{
}

void sub_18A3814()
{
}

void sub_18A3824()
{
}

void sub_18A3830()
{
}

void sub_18A3840()
{
}

void sub_18A384C()
{
}

void sub_18A385C()
{
}

void sub_18A3868()
{
}

void sub_18A3878()
{
}

void sub_18A3884()
{
}

void sub_18A3894()
{
}

void sub_18A38A0()
{
}

void sub_18A38B0()
{
}

void sub_18A38BC()
{
}

void sub_18A38CC()
{
}

void sub_18A38D8()
{
}

void sub_18A38E8()
{
}

void sub_18A38F4()
{
}

void sub_18A3904()
{
}

void sub_18A3910()
{
}

void sub_18A3920()
{
}

void sub_18A392C()
{
}

void sub_18A393C()
{
}

void sub_18A3948()
{
}

void sub_18A3958()
{
}

void sub_18A3964()
{
}

void sub_18A3974()
{
}

void sub_18A3980()
{
}

void sub_18A3990()
{
}

void sub_18A399C()
{
}

void sub_18A39AC()
{
}

void sub_18A39B8()
{
}

void sub_18A39C8()
{
}

void sub_18A39D4()
{
}

void sub_18A39E4()
{
}

void sub_18A39F0()
{
}

void sub_18A3A00()
{
}

void sub_18A3A0C()
{
}

void sub_18A3A1C()
{
}

void sub_18A3A28()
{
}

void sub_18A3A38()
{
}

void sub_18A3A44()
{
}

void sub_18A3A54()
{
}

void sub_18A3A60()
{
}

void sub_18A3A70()
{
}

void sub_18A3A7C()
{
}

void sub_18A3A8C()
{
}

void sub_18A3A98()
{
}

void sub_18A3AA8()
{
}

void sub_18A3AB4()
{
}

void sub_18A3AC4()
{
}

void sub_18A3AD0()
{
}

void sub_18A3AE0()
{
}

void sub_18A3AEC()
{
}

void sub_18A3AFC()
{
}

void sub_18A3B08()
{
}

void sub_18A3B18()
{
}

void sub_18A3B24()
{
}

void sub_18A3B34()
{
}

void sub_18A3B40()
{
}

void sub_18A3B50()
{
}

void sub_18A3B5C()
{
}

void sub_18A3B6C()
{
}

void sub_18A3B78()
{
}

void sub_18A3B88()
{
}

void sub_18A3B94()
{
}

void sub_18A3BA4()
{
}

void sub_18A3BB0()
{
}

void sub_18A3BC0()
{
}

void sub_18A3BCC()
{
}

void sub_18A3BDC()
{
}

void sub_18A3BE8()
{
}

void sub_18A3BF8()
{
}

void sub_18A3C04()
{
}

void sub_18A3C14()
{
}

void sub_18A3C20()
{
}

void sub_18A3C30()
{
}

void sub_18A3C3C()
{
}

void sub_18A3C4C()
{
}

void sub_18A3C58()
{
}

void sub_18A3C68()
{
}

void sub_18A3C74()
{
}

void sub_18A3C84()
{
}

void sub_18A3C90()
{
}

void sub_18A3CA0()
{
}

void sub_18A3CAC()
{
}

void sub_18A3CBC()
{
}

void sub_18A3CC8()
{
}

void sub_18A3CD8()
{
}

void sub_18A3CE4()
{
}

void sub_18A3CF4()
{
}

void sub_18A3D00()
{
}

void sub_18A3D10()
{
}

void sub_18A3D1C()
{
}

void sub_18A3D2C()
{
}

void sub_18A3D38()
{
}

void sub_18A3D48()
{
}

void sub_18A3D54()
{
}

void sub_18A3D64()
{
}

void sub_18A3D70()
{
}

void sub_18A3D80()
{
}

void sub_18A3D8C()
{
}

void sub_18A3D9C()
{
}

void sub_18A3DA8()
{
}

void sub_18A3DB8()
{
}

void sub_18A3DC4()
{
}

void sub_18A3DD4()
{
}

void sub_18A3DE0()
{
}

void sub_18A3DF0()
{
}

void sub_18A3DFC()
{
}

void sub_18A3E0C()
{
}

void sub_18A3E18()
{
}

void sub_18A3E28()
{
}

void sub_18A3E34()
{
}

void sub_18A3E44()
{
}

void sub_18A3E50()
{
}

void sub_18A3E60()
{
}

void sub_18A3E6C()
{
}

void sub_18A3E7C()
{
}

void sub_18A3E88()
{
}

void sub_18A3E98()
{
}

void sub_18A3EA4()
{
}

void sub_18A3EB4()
{
}

void sub_18A3EC0()
{
}

void sub_18A3ED0()
{
}

void sub_18A3EDC()
{
}

void sub_18A3EEC()
{
}

void sub_18A3EF8()
{
}

void sub_18A3F08()
{
}

void sub_18A3F14()
{
}

void sub_18A3F24()
{
}

void sub_18A3F30()
{
}

void sub_18A3F40()
{
}

void sub_18A3F4C()
{
}

void sub_18A3F5C()
{
}

void sub_18A3F68()
{
}

void sub_18A3F78()
{
}

void sub_18A3F84()
{
}

void sub_18A3F94()
{
}

void sub_18A3FA0()
{
}

void sub_18A3FB0()
{
}

void sub_18A3FBC()
{
}

void sub_18A3FCC()
{
}

void sub_18A3FD8()
{
}

void sub_18A3FE8()
{
}

void sub_18A3FF4()
{
}

void sub_18A4004()
{
}

void sub_18A4010()
{
}

void sub_18A4020()
{
}

void sub_18A402C()
{
}

void sub_18A403C()
{
}

void sub_18A4048()
{
}

void sub_18A4058()
{
}

void sub_18A4064()
{
}

void sub_18A4074()
{
}

void sub_18A4080()
{
}

void sub_18A4090()
{
}

void sub_18A409C()
{
}

void sub_18A40AC()
{
}

void sub_18A40B8()
{
}

void sub_18A40C8()
{
}

void sub_18A40D4()
{
}

void sub_18A40E4()
{
}

void sub_18A40F0()
{
}

void sub_18A4100()
{
}

void sub_18A410C()
{
}

void sub_18A411C()
{
}

void sub_18A4128()
{
}

void sub_18A4138()
{
}

void sub_18A4144()
{
}

void sub_18A4154()
{
}

void sub_18A4160()
{
}

void sub_18A4170()
{
}

void sub_18A417C()
{
}

void sub_18A418C()
{
}

void sub_18A4198()
{
}

void sub_18A41A8()
{
}

void sub_18A41B4()
{
}

void sub_18A41C4()
{
}

void sub_18A41D0()
{
}

void sub_18A41E0()
{
}

void sub_18A41EC()
{
}

void sub_18A41FC()
{
}

void sub_18A4208()
{
}

void sub_18A4214()
{
}

void sub_18A4228()
{
}

void sub_18A423C()
{
}

void sub_18A4244()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2625A40 = 0;
  qword_2625A48 = 0;
  qword_2625A50 = 0;
  qword_2625A40 = (uint64_t)operator new(0x18uLL);
  qword_2625A48 = qword_2625A40;
  qword_2625A50 = qword_2625A40 + 24;
  qword_2625A48 = (uint64_t)sub_18914E4((uint64_t)&qword_2625A50, (long long *)__p, v4, (char *)qword_2625A40);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2625A58 = 0;
  qword_2625A60 = 0;
  qword_2625A68 = 0;
  qword_2625A58 = (uint64_t)operator new(0x18uLL);
  qword_2625A60 = qword_2625A58;
  qword_2625A68 = qword_2625A58 + 24;
  qword_2625A60 = (uint64_t)sub_18914E4((uint64_t)&qword_2625A68, (long long *)__p, v4, (char *)qword_2625A58);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2625A70 = 0;
  qword_2625A78 = 0;
  qword_2625A80 = 0;
  qword_2625A70 = (uint64_t)operator new(0x18uLL);
  qword_2625A78 = qword_2625A70;
  qword_2625A80 = qword_2625A70 + 24;
  qword_2625A78 = (uint64_t)sub_18914E4((uint64_t)&qword_2625A80, (long long *)__p, v4, (char *)qword_2625A70);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  sub_1899790();
  sub_5E5C(__p, "en_US");
  LODWORD(v4[0]) = 0;
  sub_5E5C((void *)v4 + 1, "en-US_US");
  int v5 = 0;
  sub_5E5C(v6, "en_AU");
  int v7 = 1;
  sub_5E5C(v8, "en-AU_AU");
  int v9 = 1;
  sub_5E5C(v10, "en_CA");
  int v11 = 2;
  sub_5E5C(v12, "en-CA_CA");
  int v13 = 2;
  sub_5E5C(v14, "en_GB");
  int v15 = 3;
  sub_5E5C(v16, "en-GB_GB");
  int v17 = 3;
  sub_5E5C(v18, "en_IE");
  int v19 = 4;
  sub_5E5C(v20, "en-IE_IE");
  int v21 = 4;
  sub_5E5C(v22, "en_NZ");
  int v23 = 4;
  sub_5E5C(v24, "en-NZ_NZ");
  int v25 = 4;
  sub_5E5C(v26, "en_ZA");
  int v27 = 4;
  sub_5E5C(v28, "en-ZA_ZA");
  int v29 = 4;
  sub_1898F60((uint64_t)&unk_2625AA0, (unsigned __int8 *)__p, 14);
  uint64_t v0 = 56;
  do
  {
    if (*((char *)&__p[v0 - 1] - 1) < 0) {
      operator delete(__p[v0 - 4]);
    }
    v0 -= 4;
  }
  while (v0 * 8);
  sub_5E5C(__p, "US");
  LODWORD(v4[0]) = 1;
  sub_5E5C((void *)v4 + 1, "AU");
  int v5 = 2;
  sub_5E5C(v6, "CA");
  int v7 = 3;
  sub_5E5C(v8, "GB");
  int v9 = 4;
  sub_5E5C(v10, "IE");
  int v11 = 5;
  sub_5E5C(v12, "NZ");
  int v13 = 5;
  sub_5E5C(v14, "ZA");
  int v15 = 5;
  sub_5E5C(v16, "ZA");
  int v17 = 5;
  sub_5E5C(v18, "IN");
  int v19 = 7;
  sub_5E5C(v20, "DE");
  int v21 = 6;
  sub_5E5C(v22, "CH");
  int v23 = 6;
  sub_5E5C(v24, "NL");
  int v25 = 6;
  sub_5E5C(v26, "DK");
  int v27 = 6;
  sub_5E5C(v28, "NO");
  int v29 = 6;
  sub_5E5C(v30, "FI");
  int v31 = 6;
  sub_5E5C(v32, "SE");
  int v33 = 6;
  sub_5E5C(v34, "BE");
  int v35 = 6;
  sub_5E5C(v36, "AT");
  int v37 = 6;
  sub_5E5C(v38, "MX");
  int v39 = 6;
  sub_5E5C(v40, "AR");
  int v41 = 6;
  sub_5E5C(v42, "CL");
  int v43 = 6;
  sub_5E5C(v44, "BR");
  int v45 = 6;
  sub_5E5C(v46, "SK");
  int v47 = 6;
  sub_5E5C(v48, "TR");
  int v49 = 6;
  sub_5E5C(v50, "PL");
  int v51 = 6;
  sub_5E5C(v52, "HR");
  int v53 = 6;
  sub_5E5C(v54, "RO");
  int v55 = 6;
  sub_5E5C(v56, "HU");
  int v57 = 6;
  sub_5E5C(v58, "VN");
  int v59 = 6;
  sub_5E5C(v60, "GR");
  int v61 = 6;
  sub_18993EC((uint64_t)&unk_2625AC8, (unsigned __int8 *)__p, 30);
  uint64_t v1 = 120;
  do
  {
    if (*((char *)&__p[v1 - 1] - 1) < 0) {
      operator delete(__p[v1 - 4]);
    }
    v1 -= 4;
  }
  while (v1 * 8);
}

void sub_18A4900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v19 = 960;
  while (1)
  {
    if (*(char *)(v17 + v19 - 9) < 0) {
      operator delete(*(void **)(v17 + v19 - 32));
    }
    v19 -= 32;
    if (!v19) {
      _Unwind_Resume(exception_object);
    }
  }
}

void *sub_18A4AB0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(uint64_t (****)())(a1 + 192);
  if (!v2) {
    uint64_t v2 = &off_254C5C8;
  }
  int v3 = *((_DWORD *)v2 + 10);
  if (v3)
  {
    int v5 = (uint64_t (***)())v2[7][24];
  }
  else if ((v3 & 0x800) != 0)
  {
    int v5 = (uint64_t (***)())v2[18][19];
  }
  else
  {
    if ((v3 & 0x200) == 0) {
      return sub_1791F00(a2, 0, 0);
    }
    char v6 = (uint64_t (***)())v2[16][11];
    if (!v6) {
      char v6 = &off_254BAF8;
    }
    int v5 = (uint64_t (***)())v6[15];
  }
  if (v5) {
    int v7 = v5;
  }
  else {
    int v7 = &off_2549800;
  }
  return (void *)sub_1792038((uint64_t)a2, (uint64_t)v7);
}

uint64_t sub_18A4B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_182B188(v4, a1);
  sub_18A4AB0((uint64_t)v4, v5);
  sub_182B32C(v4);
  if (v6) {
    sub_15B15F8(a2);
  }
  else {
    sub_15B1474(a2, 0, 0);
  }
  return sub_17920F0(v5);
}

void sub_18A4BA8(_Unwind_Exception *a1)
{
  sub_17920F0(v1 - 56);
  _Unwind_Resume(a1);
}

void sub_18A4BCC(std::string *__str@<X0>, std::string *a2@<X8>)
{
  std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  int v4 = (char)size;
  if ((size & 0x80u) == 0) {
    int v5 = __str;
  }
  else {
    int v5 = (std::string *)__str->__r_.__value_.__r.__words[0];
  }
  if ((size & 0x80u) != 0) {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
  }
  if (!size)
  {
LABEL_17:
    if (v4 < 0) {
      sub_4200(&__p, __str->__r_.__value_.__l.__data_, __str->__r_.__value_.__l.__size_);
    }
    else {
      std::string __p = *__str;
    }
    char v10 = 1;
    goto LABEL_21;
  }
  char v6 = (char *)&v5[-1].__r_.__value_.__r.__words[2] + 7;
  std::string::size_type v7 = size;
  do
  {
    if (!v7) {
      goto LABEL_13;
    }
    int v8 = v6[v7--];
  }
  while (v8 != 95);
  if (v7 == -1)
  {
LABEL_13:
    while (size)
    {
      int v9 = v6[size--];
      if (v9 == 45)
      {
        if (size == -1) {
          goto LABEL_17;
        }
        goto LABEL_16;
      }
    }
    goto LABEL_17;
  }
  std::string::size_type size = v7;
LABEL_16:
  std::string::basic_string(&__p, __str, size + 1, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v15);
  char v10 = 0;
LABEL_21:
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v11 = (std::string *)((char *)&__p + HIBYTE(__p.__r_.__value_.__r.__words[2]));
  }
  else {
    int v11 = (std::string *)(__p.__r_.__value_.__r.__words[0] + __p.__r_.__value_.__l.__size_);
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  while (p_p != v11)
  {
    p_p->__r_.__value_.__s.__data_[0] = __toupper(p_p->__r_.__value_.__s.__data_[0]);
    p_p = (std::string *)((char *)p_p + 1);
  }
  if (v10) {
    goto LABEL_35;
  }
  std::string::size_type v13 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v13 = __p.__r_.__value_.__l.__size_;
  }
  if (!v13)
  {
LABEL_35:
    sub_5E5C(a2, "US");
  }
  else if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    sub_4200(a2, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  }
  else
  {
    *a2 = __p;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18A4D4C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_18A4D6C(uint64_t a1@<X0>, std::string *a2@<X8>)
{
  if (*(_DWORD *)(a1 + 56)) {
    sub_18A4BCC(*(std::string **)(*(void *)(a1 + 64) + 8), a2);
  }
  else {
    sub_5E5C(a2, "US");
  }
}

double sub_18A4D90(uint64_t a1, unsigned int a2)
{
  sub_182B188(v7, a1);
  sub_18A4AB0((uint64_t)v7, v8);
  sub_182B32C(v7);
  if ((v9 & 1) != 0 && v11 <= a2) {
    double v4 = sub_1C0E2AC(v10);
  }
  else {
    double v4 = sub_18A4E50(a1);
  }
  double v5 = v4;
  sub_17920F0(v8);
  return v5;
}

void sub_18A4E2C(_Unwind_Exception *a1)
{
  sub_17920F0(v1 - 88);
  _Unwind_Resume(a1);
}

double sub_18A4E50(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (****)())(a1 + 184);
  if (!v1) {
    uint64_t v1 = &off_254D3B0;
  }
  int v2 = *((_DWORD *)v1 + 10);
  if (v2 & 0x400) != 0 && (int v3 = v1[36], ((_BYTE)v3[5]))
  {
    double v5 = (uint64_t (***)())(v3 + 6);
  }
  else
  {
    if ((v2 & 0x100) == 0) {
      return NAN;
    }
    double v5 = v1 + 34;
  }
  return *((double *)*v5 + 6);
}

uint64_t sub_18A4EA4(uint64_t a1)
{
  uint64_t v1 = &off_254C5C8;
  if (*(void *)(a1 + 192)) {
    uint64_t v1 = *(uint64_t (****)())(a1 + 192);
  }
  return v1[5] & 1;
}

uint64_t sub_18A4EC4(uint64_t a1)
{
  uint64_t v1 = &off_254C5C8;
  if (*(void *)(a1 + 192)) {
    uint64_t v1 = *(uint64_t (****)())(a1 + 192);
  }
  return (*((unsigned __int8 *)v1 + 41) >> 3) & 1;
}

uint64_t sub_18A4EE4(uint64_t a1)
{
  uint64_t v1 = &off_254C5C8;
  if (*(void *)(a1 + 192)) {
    uint64_t v1 = *(uint64_t (****)())(a1 + 192);
  }
  return (*((unsigned __int8 *)v1 + 47) >> 2) & 1;
}

uint64_t sub_18A4F04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 192);
  int v2 = &off_254C5C8;
  if (v1) {
    int v2 = *(uint64_t (****)())(a1 + 192);
  }
  int v3 = *((_DWORD *)v2 + 10);
  if ((v3 & 0x200) != 0) {
    return 1;
  }
  if (v3) {
    return 1;
  }
  int v4 = *((_DWORD *)v2 + 11);
  if ((v4 & 0x400) != 0
    || (v3 & 0x400) != 0
    || (v3 & 0x800) != 0
    || (v4 & 0x200000) != 0 && ((_BYTE)v2[60][2] & 1) != 0)
  {
    return 1;
  }
  if ((v4 & 0x4000000) != 0) {
    return 1;
  }
  if ((*(unsigned char *)(a1 + 40) & 8) == 0) {
    return 0;
  }
  unsigned int v6 = *(_DWORD *)(v1 + 40);
  if ((v6 & 2) != 0 || (v6 & 4) != 0) {
    return 1;
  }
  else {
    return (v6 >> 2) & 1;
  }
}

uint64_t sub_18A4F74(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 40) & 8) != 0) {
    return (*(unsigned __int8 *)(*(void *)(a1 + 192) + 40) >> 2) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_18A4F94@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_182E158(a2, 0, 0);
  *(_DWORD *)(result + 40) |= 0x20u;
  *(_DWORD *)(result + 208) = a1;
  return result;
}

uint64_t sub_18A4FD4(uint64_t a1)
{
  uint64_t v1 = &off_254C5C8;
  if (*(void *)(a1 + 192)) {
    uint64_t v1 = *(uint64_t (****)())(a1 + 192);
  }
  return (*((unsigned __int8 *)v1 + 41) >> 1) & 1;
}

uint64_t sub_18A4FF4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 40) & 8) != 0) {
    return (*(unsigned __int8 *)(*(void *)(a1 + 192) + 41) >> 3) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_18A5014(uint64_t *a1)
{
  uint64_t v1 = sub_1C3569C(*a1);
  if ((*(unsigned char *)(v1 + 40) & 8) != 0) {
    return (*(unsigned __int8 *)(*(void *)(v1 + 192) + 41) >> 3) & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_18A504C(char **a1)
{
  sub_1C35328(*a1, (uint64_t)__p);
  unint64_t v2 = v6;
  if ((v6 & 0x80u) != 0) {
    unint64_t v2 = (unint64_t)__p[1];
  }
  if (v2 || *(_DWORD *)nullsub_1(*a1) == 2) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_18A5014((uint64_t *)a1) ^ 1;
  }
  if ((char)v6 < 0) {
    operator delete(__p[0]);
  }
  return v3;
}

void sub_18A50D4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_18A50F0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (****)())(a1 + 192);
  if (!v1) {
    uint64_t v1 = &off_254C5C8;
  }
  if ((*((unsigned char *)v1 + 41) & 2) == 0) {
    return 0;
  }
  uint64_t v3 = (uint64_t (***)())v1[16][11];
  if (!v3) {
    uint64_t v3 = &off_254BAF8;
  }
  int v4 = (uint64_t (***)())v3[21];
  if (!v4) {
    int v4 = &off_254BAD0;
  }
  return *((_DWORD *)v4 + 8) == 0;
}

BOOL sub_18A5150(uint64_t a1, _DWORD *a2)
{
  if ((*(unsigned char *)(a1 + 40) & 8) == 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 192);
  int v3 = *(_DWORD *)(v2 + 40);
  if (v3)
  {
    int v4 = *(uint64_t (****)())(*(void *)(v2 + 56) + 288);
    if (!v4) {
      int v4 = &off_25309E0;
    }
    if (*((_DWORD *)v4 + 12) == *a2) {
      return 1;
    }
  }
  if ((v3 & 0x800) == 0) {
    return 0;
  }
  unsigned __int8 v6 = *(uint64_t (****)())(*(void *)(v2 + 144) + 200);
  if (!v6) {
    unsigned __int8 v6 = &off_25309E0;
  }
  return *((_DWORD *)v6 + 12) == *a2;
}

BOOL sub_18A51CC(uint64_t a1)
{
  int v2 = 0;
  return sub_18A5150(a1, &v2);
}

BOOL sub_18A51F4(uint64_t a1)
{
  int v2 = 2;
  return sub_18A5150(a1, &v2);
}

BOOL sub_18A5220(uint64_t a1)
{
  int v6 = 0;
  if (sub_18A5150(a1, &v6)) {
    return 1;
  }
  int v3 = *(uint64_t (****)())(a1 + 192);
  if (!v3) {
    int v3 = &off_254C5C8;
  }
  if ((*((unsigned char *)v3 + 41) & 2) == 0) {
    return 0;
  }
  int v4 = (uint64_t (***)())v3[16][11];
  if (!v4) {
    int v4 = &off_254BAF8;
  }
  double v5 = (uint64_t (***)())v4[21];
  if (!v5) {
    double v5 = &off_254BAD0;
  }
  return *((_DWORD *)v5 + 8) == 0;
}

BOOL sub_18A52BC(uint64_t a1)
{
  uint64_t v2 = 1;
  int v7 = 1;
  if (!sub_18A5150(a1, &v7))
  {
    int v3 = *(uint64_t (****)())(a1 + 192);
    if (!v3) {
      int v3 = &off_254C5C8;
    }
    if ((*((unsigned char *)v3 + 41) & 2) != 0)
    {
      int v4 = (uint64_t (***)())v3[16][11];
      if (!v4) {
        int v4 = &off_254BAF8;
      }
      double v5 = (uint64_t (***)())v4[21];
      if (!v5) {
        double v5 = &off_254BAD0;
      }
      return *((_DWORD *)v5 + 8) == 1;
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

BOOL sub_18A5358(uint64_t a1, _DWORD *a2)
{
  if ((*(unsigned char *)(a1 + 40) & 8) == 0) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 192);
  int v3 = *(_DWORD *)(v2 + 40);
  if (v3)
  {
    uint64_t v4 = *(void *)(v2 + 56);
    if (*(unsigned char *)(v4 + 42))
    {
      uint64_t v5 = *(void *)(v4 + 288);
      if ((*(unsigned char *)(v5 + 16) & 4) != 0 && *(_DWORD *)(v5 + 52) == *a2) {
        return 1;
      }
    }
  }
  if ((v3 & 0x800) != 0
    && (uint64_t v7 = *(void *)(v2 + 144), (*(unsigned char *)(v7 + 17) & 2) != 0)
    && (uint64_t v8 = *(void *)(v7 + 200), (*(unsigned char *)(v8 + 16) & 4) != 0))
  {
    return *(_DWORD *)(v8 + 52) == *a2;
  }
  else
  {
    return 0;
  }
}

BOOL sub_18A53D4(uint64_t a1)
{
  int v2 = 2;
  return sub_18A5358(a1, &v2);
}

uint64_t sub_18A5400(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (****)())(a1 + 192);
  if (!v1) {
    uint64_t v1 = &off_254C5C8;
  }
  int v2 = *((_DWORD *)v1 + 10);
  if (v2)
  {
    int v4 = *((_DWORD *)v1[7] + 85);
    return v4 == 4 || v4 == 2;
  }
  else if ((v2 & 0x800) != 0)
  {
    unsigned int v6 = *((_DWORD *)v1[18] + 61);
    BOOL v7 = v6 > 5;
    unsigned int v8 = (0x34u >> v6) & 1;
    if (v7) {
      return 0;
    }
    else {
      return v8;
    }
  }
  else
  {
    return 0;
  }
}

void sub_18A5460()
{
  __chkstk_darwin();
  sub_5E5C(&v1245, "AW");
  sub_5E5C(&v1242, "ABW");
  int v1244 = 40;
  sub_18916C8((char *)v1247, &v1245, &v1242);
  sub_5E5C(&v1240, "AF");
  sub_5E5C(&v1237, "AFG");
  int v1239 = 41;
  sub_18916C8(v1248, &v1240, &v1237);
  sub_5E5C(&v1235, "AO");
  sub_5E5C(&v1232, "AGO");
  int v1234 = 42;
  sub_18916C8(v1249, &v1235, &v1232);
  sub_5E5C(&v1230, "AI");
  sub_5E5C(&v1227, "AIA");
  int v1229 = 43;
  sub_18916C8(v1250, &v1230, &v1227);
  sub_5E5C(&v1225, "AX");
  sub_5E5C(&v1222, "ALA");
  int v1224 = 246;
  sub_18916C8(v1251, &v1225, &v1222);
  sub_5E5C(&v1220, "AL");
  sub_5E5C(&v1217, "ALB");
  int v1219 = 76;
  sub_18916C8(v1252, &v1220, &v1217);
  sub_5E5C(&v1215, "AD");
  sub_5E5C(&v1212, "AND");
  int v1214 = 78;
  sub_18916C8(v1253, &v1215, &v1212);
  sub_5E5C(&v1210, "AN");
  sub_5E5C(&v1207, "ANT");
  int v1209 = 44;
  sub_18916C8(v1254, &v1210, &v1207);
  sub_5E5C(&v1205, "AE");
  sub_5E5C(&v1202, "ARE");
  int v1204 = 2;
  sub_18916C8(v1255, &v1205, &v1202);
  sub_5E5C(&v1200, "AR");
  sub_5E5C(&v1197, "ARG");
  int v1199 = 80;
  sub_18916C8(v1256, &v1200, &v1197);
  sub_5E5C(&v1195, "AM");
  sub_5E5C(&v1192, "ARM");
  int v1194 = 45;
  sub_18916C8(v1257, &v1195, &v1192);
  sub_5E5C(&v1190, "AS");
  sub_5E5C(&v1187, "ASM");
  int v1189 = 77;
  sub_18916C8(v1258, &v1190, &v1187);
  sub_5E5C(&v1185, "AQ");
  sub_5E5C(&v1182, "ATA");
  int v1184 = 46;
  sub_18916C8(v1259, &v1185, &v1182);
  sub_5E5C(&v1180, "TF");
  sub_5E5C(&v1177, "ATF");
  int v1179 = 125;
  sub_18916C8(v1260, &v1180, &v1177);
  sub_5E5C(&v1175, "AG");
  sub_5E5C(&v1172, "ATG");
  int v1174 = 79;
  sub_18916C8(v1261, &v1175, &v1172);
  sub_5E5C(&v1170, "AU");
  sub_5E5C(&v1167, "AUS");
  int v1169 = 22;
  sub_18916C8(v1262, &v1170, &v1167);
  sub_5E5C(&v1165, "AT");
  sub_5E5C(&v1162, "AUT");
  int v1164 = 81;
  sub_18916C8(v1263, &v1165, &v1162);
  sub_5E5C(&v1160, "AZ");
  sub_5E5C(&v1157, "AZE");
  int v1159 = 82;
  sub_18916C8(v1264, &v1160, &v1157);
  sub_5E5C(&v1155, "BI");
  sub_5E5C(&v1152, "BDI");
  int v1154 = 96;
  sub_18916C8(v1265, &v1155, &v1152);
  sub_5E5C(&v1150, "BE");
  sub_5E5C(&v1147, "BEL");
  int v1149 = 87;
  sub_18916C8(v1266, &v1150, &v1147);
  sub_5E5C(&v1145, "BJ");
  sub_5E5C(&v1142, "BEN");
  int v1144 = 3;
  sub_18916C8(v1267, &v1145, &v1142);
  sub_5E5C(&v1140, "BQ");
  sub_5E5C(&v1137, "BES");
  int v1139 = 248;
  sub_18916C8(v1268, &v1140, &v1137);
  sub_5E5C(&v1135, "BF");
  sub_5E5C(&v1132, "BFA");
  int v1134 = 11;
  sub_18916C8(v1269, &v1135, &v1132);
  sub_5E5C(&v1130, "BD");
  sub_5E5C(&v1127, "BGD");
  int v1129 = 84;
  sub_18916C8(v1270, &v1130, &v1127);
  sub_5E5C(&v1125, "BG");
  sub_5E5C(&v1122, "BGR");
  int v1124 = 95;
  sub_18916C8(v1271, &v1125, &v1122);
  sub_5E5C(&v1120, "BH");
  sub_5E5C(&v1117, "BHR");
  int v1119 = 12;
  sub_18916C8(v1272, &v1120, &v1117);
  sub_5E5C(&v1115, "BS");
  sub_5E5C(&v1112, "BHS");
  int v1114 = 83;
  sub_18916C8(v1273, &v1115, &v1112);
  sub_5E5C(&v1110, "BA");
  sub_5E5C(&v1107, "BIH");
  int v1109 = 92;
  sub_18916C8(v1274, &v1110, &v1107);
  sub_5E5C(&v1105, "BL");
  sub_5E5C(&v1102, "BLM");
  int v1104 = 237;
  sub_18916C8(v1275, &v1105, &v1102);
  sub_5E5C(&v1100, "BY");
  sub_5E5C(&v1097, "BLR");
  int v1099 = 86;
  sub_18916C8(v1276, &v1100, &v1097);
  sub_5E5C(&v1095, "BZ");
  sub_5E5C(&v1092, "BLZ");
  int v1094 = 88;
  sub_18916C8(v1277, &v1095, &v1092);
  sub_5E5C(&v1090, "BM");
  sub_5E5C(&v1087, "BMU");
  int v1089 = 89;
  sub_18916C8(v1278, &v1090, &v1087);
  sub_5E5C(&v1085, "BO");
  sub_5E5C(&v1082, "BOL");
  int v1084 = 91;
  sub_18916C8(v1279, &v1085, &v1082);
  sub_5E5C(&v1080, "BR");
  sub_5E5C(&v1077, "BRA");
  int v1079 = 25;
  sub_18916C8(v1280, &v1080, &v1077);
  sub_5E5C(&v1075, "BB");
  sub_5E5C(&v1072, "BRB");
  int v1074 = 85;
  sub_18916C8(v1281, &v1075, &v1072);
  sub_5E5C(&v1070, "BN");
  sub_5E5C(&v1067, "BRN");
  int v1069 = 94;
  sub_18916C8(v1282, &v1070, &v1067);
  sub_5E5C(&v1065, "BT");
  sub_5E5C(&v1062, "BTN");
  int v1064 = 90;
  sub_18916C8(v1283, &v1065, &v1062);
  sub_5E5C(&v1060, "BV");
  sub_5E5C(&v1057, "BVT");
  int v1059 = 245;
  sub_18916C8(v1284, &v1060, &v1057);
  sub_5E5C(&v1055, "BW");
  sub_5E5C(&v1052, "BWA");
  int v1054 = 93;
  sub_18916C8(v1285, &v1055, &v1052);
  sub_5E5C(&v1050, "CF");
  sub_5E5C(&v1047, "CAF");
  int v1049 = 63;
  sub_18916C8(v1286, &v1050, &v1047);
  sub_5E5C(&v1045, "CA");
  sub_5E5C(&v1042, "CAN");
  int v1044 = 98;
  sub_18916C8(v1287, &v1045, &v1042);
  sub_5E5C(&v1040, "CC");
  sub_5E5C(&v1037, "CCK");
  int v1039 = 47;
  sub_18916C8(v1288, &v1040, &v1037);
  sub_5E5C(&v1035, "CH");
  sub_5E5C(&v1032, "CHE");
  int v1034 = 211;
  sub_18916C8(v1289, &v1035, &v1032);
  sub_5E5C(&v1030, "CL");
  sub_5E5C(&v1027, "CHL");
  int v1029 = 102;
  sub_18916C8(v1290, &v1030, &v1027);
  sub_5E5C(&v1025, "CN");
  sub_5E5C(&v1022, "CHN");
  int v1024 = 4;
  sub_18916C8(v1291, &v1025, &v1022);
  sub_5E5C(&v1020, "CI");
  sub_5E5C(&v1017, "CIV");
  int v1019 = 26;
  sub_18916C8(v1292, &v1020, &v1017);
  sub_5E5C(&v1015, "CM");
  sub_5E5C(&v1012, "CMR");
  int v1014 = 27;
  sub_18916C8(v1293, &v1015, &v1012);
  sub_5E5C(&v1010, "CD");
  sub_5E5C(&v1007, "COD");
  int v1009 = 106;
  sub_18916C8(v1294, &v1010, &v1007);
  sub_5E5C(&v1005, "CG");
  sub_5E5C(&v1002, "COG");
  int v1004 = 105;
  sub_18916C8(v1295, &v1005, &v1002);
  sub_5E5C(&v1000, "CK");
  sub_5E5C(&v997, "COK");
  int v999 = 107;
  sub_18916C8(v1296, &v1000, &v997);
  sub_5E5C(&v995, "CO");
  sub_5E5C(&v992, "COL");
  int v994 = 28;
  sub_18916C8(v1297, &v995, &v992);
  sub_5E5C(&v990, "KM");
  sub_5E5C(&v987, "COM");
  int v989 = 104;
  sub_18916C8(v1298, &v990, &v987);
  sub_5E5C(&v985, "CV");
  sub_5E5C(&v982, "CPV");
  int v984 = 99;
  sub_18916C8(v1299, &v985, &v982);
  sub_5E5C(&v980, "CR");
  sub_5E5C(&v977, "CRI");
  int v979 = 13;
  sub_18916C8(v1300, &v980, &v977);
  sub_5E5C(&v975, "CU");
  sub_5E5C(&v972, "CUB");
  int v974 = 109;
  sub_18916C8(v1301, &v975, &v972);
  sub_5E5C(&v970, "CW");
  sub_5E5C(&v967, "CUW");
  int v969 = 247;
  sub_18916C8(v1302, &v970, &v967);
  sub_5E5C(&v965, "CX");
  sub_5E5C(&v962, "CXR");
  int v964 = 103;
  sub_18916C8(v1303, &v965, &v962);
  sub_5E5C(&v960, "KY");
  sub_5E5C(&v957, "CYM");
  int v959 = 100;
  sub_18916C8(v1304, &v960, &v957);
  sub_5E5C(&v955, "CY");
  sub_5E5C(&v952, "CYP");
  int v954 = 110;
  sub_18916C8(v1305, &v955, &v952);
  sub_5E5C(&v950, "CZ");
  sub_5E5C(&v947, "CZE");
  int v949 = 111;
  sub_18916C8(v1306, &v950, &v947);
  sub_5E5C(&v945, "DE");
  sub_5E5C(&v942, "DEU");
  int v944 = 129;
  sub_18916C8(v1307, &v945, &v942);
  sub_5E5C(&v940, "DJ");
  sub_5E5C(&v937, "DJI");
  int v939 = 113;
  sub_18916C8(v1308, &v940, &v937);
  sub_5E5C(&v935, "DM");
  sub_5E5C(&v932, "DMA");
  int v934 = 114;
  sub_18916C8(v1309, &v935, &v932);
  sub_5E5C(&v930, "DK");
  sub_5E5C(&v927, "DNK");
  int v929 = 112;
  sub_18916C8(v1310, &v930, &v927);
  sub_5E5C(&v925, "DO");
  sub_5E5C(&v922, "DOM");
  int v924 = 29;
  sub_18916C8(v1311, &v925, &v922);
  sub_5E5C(&v920, "DZ");
  sub_5E5C(&v917, "DZA");
  int v919 = 0;
  sub_18916C8(v1312, &v920, &v917);
  sub_5E5C(&v915, "EC");
  sub_5E5C(&v912, "ECU");
  int v914 = 30;
  sub_18916C8(v1313, &v915, &v912);
  sub_5E5C(&v910, "EG");
  sub_5E5C(&v907, "EGY");
  int v909 = 64;
  sub_18916C8(v1314, &v910, &v907);
  sub_5E5C(&v905, "ER");
  sub_5E5C(&v902, "ERI");
  int v904 = 116;
  sub_18916C8(v1315, &v905, &v902);
  sub_5E5C(&v900, "EH");
  sub_5E5C(&v897, "ESH");
  int v899 = 65;
  sub_18916C8(v1316, &v900, &v897);
  sub_5E5C(&v895, "ES");
  sub_5E5C(&v892, "ESP");
  int v894 = 206;
  sub_18916C8(v1317, &v895, &v892);
  sub_5E5C(&v890, "EE");
  sub_5E5C(&v887, "EST");
  int v889 = 117;
  sub_18916C8(v1318, &v890, &v887);
  sub_5E5C(&v885, "ET");
  sub_5E5C(&v882, "ETH");
  int v884 = 31;
  sub_18916C8(v1319, &v885, &v882);
  sub_5E5C(&v880, "FI");
  sub_5E5C(&v877, "FIN");
  int v879 = 121;
  sub_18916C8(v1320, &v880, &v877);
  sub_5E5C(&v875, "FJ");
  sub_5E5C(&v872, "FJI");
  int v874 = 120;
  sub_18916C8(v1321, &v875, &v872);
  sub_5E5C(&v870, "FK");
  sub_5E5C(&v867, "FLK");
  int v869 = 118;
  sub_18916C8(v1322, &v870, &v867);
  sub_5E5C(&v865, "FR");
  sub_5E5C(&v862, "FRA");
  int v864 = 122;
  sub_18916C8(v1323, &v865, &v862);
  sub_5E5C(&v860, "FO");
  sub_5E5C(&v857, "FRO");
  int v859 = 119;
  sub_18916C8(v1324, &v860, &v857);
  sub_5E5C(&v855, "FM");
  sub_5E5C(&v852, "FSM");
  int v854 = 166;
  sub_18916C8(v1325, &v855, &v852);
  sub_5E5C(&v850, "GA");
  sub_5E5C(&v847, "GAB");
  int v849 = 126;
  sub_18916C8(v1326, &v850, &v847);
  sub_5E5C(&v845, "GB");
  sub_5E5C(&v842, "GBR");
  int v844 = 225;
  sub_18916C8(v1327, &v845, &v842);
  sub_5E5C(&v840, "GE");
  sub_5E5C(&v837, "GEO");
  int v839 = 128;
  sub_18916C8(v1328, &v840, &v837);
  sub_5E5C(&v835, "GG");
  sub_5E5C(&v832, "GGY");
  int v834 = 256;
  sub_18916C8(v1329, &v835, &v832);
  sub_5E5C(&v830, "GH");
  sub_5E5C(&v827, "GHA");
  int v829 = 66;
  sub_18916C8(v1330, &v830, &v827);
  sub_5E5C(&v825, "GI");
  sub_5E5C(&v822, "GIB");
  int v824 = 67;
  sub_18916C8(v1331, &v825, &v822);
  sub_5E5C(&v820, "GN");
  sub_5E5C(&v817, "GIN");
  int v819 = 135;
  sub_18916C8(v1332, &v820, &v817);
  sub_5E5C(&v815, "GP");
  sub_5E5C(&v812, "GLP");
  int v814 = 133;
  sub_18916C8(v1333, &v815, &v812);
  sub_5E5C(&v810, "GM");
  sub_5E5C(&v807, "GMB");
  int v809 = 127;
  sub_18916C8(v1334, &v810, &v807);
  sub_5E5C(&v805, "GW");
  sub_5E5C(&v802, "GNB");
  int v804 = 68;
  sub_18916C8(v1335, &v805, &v802);
  sub_5E5C(&v800, "GQ");
  sub_5E5C(&v797, "GNQ");
  int v799 = 115;
  sub_18916C8(v1336, &v800, &v797);
  sub_5E5C(&v795, "GR");
  sub_5E5C(&v792, "GRC");
  int v794 = 130;
  sub_18916C8(v1337, &v795, &v792);
  sub_5E5C(&v790, "GD");
  sub_5E5C(&v787, "GRD");
  int v789 = 132;
  sub_18916C8(v1338, &v790, &v787);
  sub_5E5C(&v785, "GL");
  sub_5E5C(&v782, "GRL");
  int v784 = 131;
  sub_18916C8(v1339, &v785, &v782);
  sub_5E5C(&v780, "GT");
  sub_5E5C(&v777, "GTM");
  int v779 = 32;
  sub_18916C8(v1340, &v780, &v777);
  sub_5E5C(&v775, "GF");
  sub_5E5C(&v772, "GUF");
  int v774 = 123;
  sub_18916C8(v1341, &v775, &v772);
  sub_5E5C(&v770, "GU");
  sub_5E5C(&v767, "GUM");
  int v769 = 134;
  sub_18916C8(v1342, &v770, &v767);
  sub_5E5C(&v765, "GY");
  sub_5E5C(&v762, "GUY");
  int v764 = 136;
  sub_18916C8(v1343, &v765, &v762);
  sub_5E5C(&v760, "HK");
  sub_5E5C(&v757, "HKG");
  int v759 = 5;
  sub_18916C8(v1344, &v760, &v757);
  sub_5E5C(&v755, "HM");
  sub_5E5C(&v752, "HMD");
  int v754 = 240;
  sub_18916C8(v1345, &v755, &v752);
  sub_5E5C(&v750, "HN");
  sub_5E5C(&v747, "HND");
  int v749 = 14;
  sub_18916C8(v1346, &v750, &v747);
  sub_5E5C(&v745, "HR");
  sub_5E5C(&v742, "HRV");
  int v744 = 108;
  sub_18916C8(v1347, &v745, &v742);
  sub_5E5C(&v740, "HT");
  sub_5E5C(&v737, "HTI");
  int v739 = 137;
  sub_18916C8(v1348, &v740, &v737);
  sub_5E5C(&v735, "HU");
  sub_5E5C(&v732, "HUN");
  int v734 = 138;
  sub_18916C8(v1349, &v735, &v732);
  sub_5E5C(&v730, "ID");
  sub_5E5C(&v727, "IDN");
  int v729 = 69;
  sub_18916C8(v1350, &v730, &v727);
  sub_5E5C(&v725, "IM");
  sub_5E5C(&v722, "IMN");
  int v724 = 255;
  sub_18916C8(v1351, &v725, &v722);
  sub_5E5C(&v720, "IN");
  sub_5E5C(&v717, "IND");
  int v719 = 140;
  sub_18916C8(v1352, &v720, &v717);
  sub_5E5C(&v715, "IO");
  sub_5E5C(&v712, "IOT");
  int v714 = 48;
  sub_18916C8(v1353, &v715, &v712);
  sub_5E5C(&v710, "IE");
  sub_5E5C(&v707, "IRL");
  int v709 = 143;
  sub_18916C8(v1354, &v710, &v707);
  sub_5E5C(&v705, "IR");
  sub_5E5C(&v702, "IRN");
  int v704 = 141;
  sub_18916C8(v1355, &v705, &v702);
  sub_5E5C(&v700, "IQ");
  sub_5E5C(&v697, "IRQ");
  int v699 = 142;
  sub_18916C8(v1356, &v700, &v697);
  sub_5E5C(&v695, "IS");
  sub_5E5C(&v692, "ISL");
  int v694 = 139;
  sub_18916C8(v1357, &v695, &v692);
  sub_5E5C(&v690, "IL");
  sub_5E5C(&v687, "ISR");
  int v689 = 75;
  sub_18916C8(v1358, &v690, &v687);
  sub_5E5C(&v685, "IT");
  sub_5E5C(&v682, "ITA");
  int v684 = 144;
  sub_18916C8(v1359, &v685, &v682);
  sub_5E5C(&v680, "JM");
  sub_5E5C(&v677, "JAM");
  int v679 = 15;
  sub_18916C8(v1360, &v680, &v677);
  sub_5E5C(&v675, "JE");
  sub_5E5C(&v672, "JEY");
  int v674 = 254;
  sub_18916C8(v1361, &v675, &v672);
  sub_5E5C(&v670, "JO");
  sub_5E5C(&v667, "JOR");
  int v669 = 33;
  sub_18916C8(v1362, &v670, &v667);
  sub_5E5C(&v665, "JP");
  sub_5E5C(&v662, "JPN");
  int v664 = 10;
  sub_18916C8(v1363, &v665, &v662);
  sub_5E5C(&v660, "KZ");
  sub_5E5C(&v657, "KAZ");
  int v659 = 145;
  sub_18916C8(v1364, &v660, &v657);
  sub_5E5C(&v655, "KE");
  sub_5E5C(&v652, "KEN");
  int v654 = 34;
  sub_18916C8(v1365, &v655, &v652);
  sub_5E5C(&v650, "KG");
  sub_5E5C(&v647, "KGZ");
  int v649 = 149;
  sub_18916C8(v1366, &v650, &v647);
  sub_5E5C(&v645, "KH");
  sub_5E5C(&v642, "KHM");
  int v644 = 97;
  sub_18916C8(v1367, &v645, &v642);
  sub_5E5C(&v640, "KI");
  sub_5E5C(&v637, "KIR");
  int v639 = 146;
  sub_18916C8(v1368, &v640, &v637);
  sub_5E5C(&v635, "KN");
  sub_5E5C(&v632, "KNA");
  int v634 = 193;
  sub_18916C8(v1369, &v635, &v632);
  sub_5E5C(&v630, "KR");
  sub_5E5C(&v627, "KOR");
  int v629 = 148;
  sub_18916C8(v1370, &v630, &v627);
  sub_5E5C(&v625, "KW");
  sub_5E5C(&v622, "KWT");
  int v624 = 16;
  sub_18916C8(v1371, &v625, &v622);
  sub_5E5C(&v620, "LA");
  sub_5E5C(&v617, "LAO");
  int v619 = 150;
  sub_18916C8(v1372, &v620, &v617);
  sub_5E5C(&v615, "LB");
  sub_5E5C(&v612, "LBN");
  int v614 = 152;
  sub_18916C8(v1373, &v615, &v612);
  sub_5E5C(&v610, "LR");
  sub_5E5C(&v607, "LBR");
  int v609 = 153;
  sub_18916C8(v1374, &v610, &v607);
  sub_5E5C(&v605, "LY");
  sub_5E5C(&v602, "LBY");
  int v604 = 154;
  sub_18916C8(v1375, &v605, &v602);
  sub_5E5C(&v600, "LC");
  sub_5E5C(&v597, "LCA");
  int v599 = 194;
  sub_18916C8(v1376, &v600, &v597);
  sub_5E5C(&v595, "LI");
  sub_5E5C(&v592, "LIE");
  int v594 = 70;
  sub_18916C8(v1377, &v595, &v592);
  sub_5E5C(&v590, "LK");
  sub_5E5C(&v587, "LKA");
  int v589 = 207;
  sub_18916C8(v1378, &v590, &v587);
  sub_5E5C(&v585, "LS");
  sub_5E5C(&v582, "LSO");
  int v584 = 49;
  sub_18916C8(v1379, &v585, &v582);
  sub_5E5C(&v580, "LT");
  sub_5E5C(&v577, "LTU");
  int v579 = 155;
  sub_18916C8(v1380, &v580, &v577);
  sub_5E5C(&v575, "LU");
  sub_5E5C(&v572, "LUX");
  int v574 = 156;
  sub_18916C8(v1381, &v575, &v572);
  sub_5E5C(&v570, "LV");
  sub_5E5C(&v567, "LVA");
  int v569 = 151;
  sub_18916C8(v1382, &v570, &v567);
  sub_5E5C(&v565, "MO");
  sub_5E5C(&v562, "MAC");
  int v564 = 157;
  sub_18916C8(v1383, &v565, &v562);
  sub_5E5C(&v560, "MF");
  sub_5E5C(&v557, "MAF");
  int v559 = 236;
  sub_18916C8(v1384, &v560, &v557);
  sub_5E5C(&v555, "MA");
  sub_5E5C(&v552, "MAR");
  int v554 = 171;
  sub_18916C8(v1385, &v555, &v552);
  sub_5E5C(&v550, "MC");
  sub_5E5C(&v547, "MCO");
  int v549 = 71;
  sub_18916C8(v1386, &v550, &v547);
  sub_5E5C(&v545, "MD");
  sub_5E5C(&v542, "MDA");
  int v544 = 167;
  sub_18916C8(v1387, &v545, &v542);
  sub_5E5C(&v540, "MG");
  sub_5E5C(&v537, "MDG");
  int v539 = 159;
  sub_18916C8(v1388, &v540, &v537);
  sub_5E5C(&v535, "MV");
  sub_5E5C(&v532, "MDV");
  int v534 = 50;
  sub_18916C8(v1389, &v535, &v532);
  sub_5E5C(&v530, "MX");
  sub_5E5C(&v527, "MEX");
  int v529 = 165;
  sub_18916C8(v1390, &v530, &v527);
  sub_5E5C(&v525, "MH");
  sub_5E5C(&v522, "MHL");
  int v524 = 51;
  sub_18916C8(v1391, &v525, &v522);
  sub_5E5C(&v520, "MK");
  sub_5E5C(&v517, "MKD");
  int v519 = 158;
  sub_18916C8(v1392, &v520, &v517);
  sub_5E5C(&v515, "ML");
  sub_5E5C(&v512, "MLI");
  int v514 = 17;
  sub_18916C8(v1393, &v515, &v512);
  sub_5E5C(&v510, "MT");
  sub_5E5C(&v507, "MLT");
  int v509 = 162;
  sub_18916C8(v1394, &v510, &v507);
  sub_5E5C(&v505, "MM");
  sub_5E5C(&v502, "MMR");
  int v504 = 173;
  sub_18916C8(v1395, &v505, &v502);
  sub_5E5C(&v500, "ME");
  sub_5E5C(&v497, "MNE");
  int v499 = 169;
  sub_18916C8(v1396, &v500, &v497);
  sub_5E5C(&v495, "MN");
  sub_5E5C(&v492, "MNG");
  int v494 = 168;
  sub_18916C8(v1397, &v495, &v492);
  sub_5E5C(&v490, "MP");
  sub_5E5C(&v487, "MNP");
  int v489 = 179;
  sub_18916C8(v1398, &v490, &v487);
  sub_5E5C(&v485, "MZ");
  sub_5E5C(&v482, "MOZ");
  int v484 = 172;
  sub_18916C8(v1399, &v485, &v482);
  sub_5E5C(&v480, "MR");
  sub_5E5C(&v477, "MRT");
  int v479 = 163;
  sub_18916C8(v1400, &v480, &v477);
  sub_5E5C(&v475, "MS");
  sub_5E5C(&v472, "MSR");
  int v474 = 170;
  sub_18916C8(v1401, &v475, &v472);
  sub_5E5C(&v470, "MQ");
  sub_5E5C(&v467, "MTQ");
  int v469 = 52;
  sub_18916C8(v1402, &v470, &v467);
  sub_5E5C(&v465, "MU");
  sub_5E5C(&v462, "MUS");
  int v464 = 164;
  sub_18916C8(v1403, &v465, &v462);
  sub_5E5C(&v460, "MW");
  sub_5E5C(&v457, "MWI");
  int v459 = 160;
  sub_18916C8(v1404, &v460, &v457);
  sub_5E5C(&v455, "MY");
  sub_5E5C(&v452, "MYS");
  int v454 = 161;
  sub_18916C8(v1405, &v455, &v452);
  sub_5E5C(&v450, "YT");
  sub_5E5C(&v447, "MYT");
  int v449 = 53;
  sub_18916C8(v1406, &v450, &v447);
  sub_5E5C(&v445, "NA");
  sub_5E5C(&v442, "NAM");
  int v444 = 174;
  sub_18916C8(v1407, &v445, &v442);
  sub_5E5C(&v440, "NC");
  sub_5E5C(&v437, "NCL");
  int v439 = 177;
  sub_18916C8(v1408, &v440, &v437);
  sub_5E5C(&v435, "NE");
  sub_5E5C(&v432, "NER");
  int v434 = 35;
  sub_18916C8(v1409, &v435, &v432);
  sub_5E5C(&v430, "NF");
  sub_5E5C(&v427, "NFK");
  int v429 = 23;
  sub_18916C8(v1410, &v430, &v427);
  sub_5E5C(&v425, "NG");
  sub_5E5C(&v422, "NGA");
  int v424 = 6;
  sub_18916C8(v1411, &v425, &v422);
  sub_5E5C(&v420, "NI");
  sub_5E5C(&v417, "NIC");
  int v419 = 18;
  sub_18916C8(v1412, &v420, &v417);
  sub_5E5C(&v415, "NU");
  sub_5E5C(&v412, "NIU");
  int v414 = 178;
  sub_18916C8(v1413, &v415, &v412);
  sub_5E5C(&v410, "NL");
  sub_5E5C(&v407, "NLD");
  int v409 = 176;
  sub_18916C8(v1414, &v410, &v407);
  sub_5E5C(&v405, "NO");
  sub_5E5C(&v402, "NOR");
  int v404 = 180;
  sub_18916C8(v1415, &v405, &v402);
  sub_5E5C(&v400, "NP");
  sub_5E5C(&v397, "NPL");
  int v399 = 175;
  sub_18916C8(v1416, &v400, &v397);
  sub_5E5C(&v395, "NR");
  sub_5E5C(&v392, "NRU");
  int v394 = 54;
  sub_18916C8(v1417, &v395, &v392);
  sub_5E5C(&v390, "NZ");
  sub_5E5C(&v387, "NZL");
  int v389 = 24;
  sub_18916C8(v1418, &v390, &v387);
  sub_5E5C(&v385, "OM");
  sub_5E5C(&v382, "OMN");
  int v384 = 7;
  sub_18916C8(v1419, &v385, &v382);
  sub_5E5C(&v380, "PA");
  sub_5E5C(&v377, "PAN");
  int v379 = 19;
  sub_18916C8(v1420, &v380, &v377);
  sub_5E5C(&v375, "PE");
  sub_5E5C(&v372, "PER");
  int v374 = 184;
  sub_18916C8(v1421, &v375, &v372);
  sub_5E5C(&v370, "PF");
  sub_5E5C(&v367, "PYF");
  int v369 = 124;
  sub_18916C8(v1422, &v370, &v367);
  sub_5E5C(&v365, "PG");
  sub_5E5C(&v362, "PNG");
  int v364 = 56;
  sub_18916C8(v1423, &v365, &v362);
  sub_5E5C(&v360, "PH");
  sub_5E5C(&v357, "PHL");
  int v359 = 185;
  sub_18916C8(v1424, &v360, &v357);
  sub_5E5C(&v355, "PK");
  sub_5E5C(&v352, "PAK");
  int v354 = 181;
  sub_18916C8(v1425, &v355, &v352);
  sub_5E5C(&v350, "PL");
  sub_5E5C(&v347, "POL");
  int v349 = 186;
  sub_18916C8(v1426, &v350, &v347);
  sub_5E5C(&v345, "PM");
  sub_5E5C(&v342, "SPM");
  int v344 = 241;
  sub_18916C8(v1427, &v345, &v342);
  sub_5E5C(&v340, "PN");
  sub_5E5C(&v337, "PCN");
  int v339 = 55;
  sub_18916C8(v1428, &v340, &v337);
  sub_5E5C(&v335, "PR");
  sub_5E5C(&v332, "PRI");
  int v334 = 253;
  sub_18916C8(v1429, &v335, &v332);
  sub_5E5C(&v330, "PS");
  sub_5E5C(&v327, "PSE");
  int v329 = 36;
  sub_18916C8(v1430, &v330, &v327);
  sub_5E5C(&v325, "PT");
  sub_5E5C(&v322, "PRT");
  int v324 = 187;
  sub_18916C8(v1431, &v325, &v322);
  sub_5E5C(&v320, "PW");
  sub_5E5C(&v317, "PLW");
  int v319 = 182;
  sub_18916C8(v1432, &v320, &v317);
  sub_5E5C(&v315, "PY");
  sub_5E5C(&v312, "PRY");
  int v314 = 183;
  sub_18916C8(v1433, &v315, &v312);
  sub_5E5C(&v310, "QA");
  sub_5E5C(&v307, "QAT");
  int v309 = 8;
  sub_18916C8(v1434, &v310, &v307);
  sub_5E5C(&v305, "RE");
  sub_5E5C(&v302, "REU");
  int v304 = 188;
  sub_18916C8(v1435, &v305, &v302);
  sub_5E5C(&v300, "RO");
  sub_5E5C(&v297, "ROU");
  int v299 = 189;
  sub_18916C8(v1436, &v300, &v297);
  sub_5E5C(&v295, "RS");
  sub_5E5C(&v292, "SRB");
  int v294 = 199;
  sub_18916C8(v1437, &v295, &v292);
  sub_5E5C(&v290, "RU");
  sub_5E5C(&v287, "RUS");
  int v289 = 190;
  sub_18916C8(v1438, &v290, &v287);
  sub_5E5C(&v285, "RW");
  sub_5E5C(&v282, "RWA");
  int v284 = 191;
  sub_18916C8(v1439, &v285, &v282);
  sub_5E5C(&v280, "SA");
  sub_5E5C(&v277, "SAU");
  int v279 = 20;
  sub_18916C8(v1440, &v280, &v277);
  sub_5E5C(&v275, "SB");
  sub_5E5C(&v272, "SLB");
  int v274 = 58;
  sub_18916C8(v1441, &v275, &v272);
  sub_5E5C(&v270, "SC");
  sub_5E5C(&v267, "SYC");
  int v269 = 200;
  sub_18916C8(v1442, &v270, &v267);
  sub_5E5C(&v265, "SD");
  sub_5E5C(&v262, "SDN");
  int v264 = 208;
  sub_18916C8(v1443, &v265, &v262);
  sub_5E5C(&v260, "SE");
  sub_5E5C(&v257, "SWE");
  int v259 = 210;
  sub_18916C8(v1444, &v260, &v257);
  sub_5E5C(&v255, "SG");
  sub_5E5C(&v252, "SGP");
  int v254 = 202;
  sub_18916C8(v1445, &v255, &v252);
  sub_5E5C(&v250, "SH");
  sub_5E5C(&v247, "SHN");
  int v249 = 192;
  sub_18916C8(v1446, &v250, &v247);
  sub_5E5C(&v245, "SI");
  sub_5E5C(&v242, "SVN");
  int v244 = 204;
  sub_18916C8(v1447, &v245, &v242);
  sub_5E5C(&v240, "SJ");
  sub_5E5C(&v237, "SJM");
  int v239 = 72;
  sub_18916C8(v1448, &v240, &v237);
  sub_5E5C(&v235, "SK");
  sub_5E5C(&v232, "SVK");
  int v234 = 203;
  sub_18916C8(v1449, &v235, &v232);
  sub_5E5C(&v230, "SL");
  sub_5E5C(&v227, "SLE");
  int v229 = 201;
  sub_18916C8(v1450, &v230, &v227);
  sub_5E5C(&v225, "SM");
  sub_5E5C(&v222, "SMR");
  int v224 = 197;
  sub_18916C8(v1451, &v225, &v222);
  sub_5E5C(&v220, "SN");
  sub_5E5C(&v217, "SEN");
  int v219 = 37;
  sub_18916C8(v1452, &v220, &v217);
  sub_5E5C(&v215, "SO");
  sub_5E5C(&v212, "SOM");
  int v214 = 205;
  sub_18916C8(v1453, &v215, &v212);
  sub_5E5C(&v210, "SR");
  sub_5E5C(&v207, "SUR");
  int v209 = 209;
  sub_18916C8(v1454, &v210, &v207);
  sub_5E5C(&v205, "SS");
  sub_5E5C(&v202, "SSD");
  int v204 = 243;
  sub_18916C8(v1455, &v205, &v202);
  sub_5E5C(&v200, "ST");
  sub_5E5C(&v197, "STP");
  int v199 = 198;
  sub_18916C8(v1456, &v200, &v197);
  sub_5E5C(&v195, "SV");
  sub_5E5C(&v192, "SLV");
  int v194 = 21;
  sub_18916C8(v1457, &v195, &v192);
  sub_5E5C(&v190, "SX");
  sub_5E5C(&v187, "SXM");
  int v189 = 234;
  sub_18916C8(v1458, &v190, &v187);
  sub_5E5C(&v185, "SY");
  sub_5E5C(&v182, "SYR");
  int v184 = 212;
  sub_18916C8(v1459, &v185, &v182);
  sub_5E5C(&v180, "SZ");
  sub_5E5C(&v177, "SWZ");
  int v179 = 59;
  sub_18916C8(v1460, &v180, &v177);
  sub_5E5C(&v175, "TC");
  sub_5E5C(&v172, "TCA");
  int v174 = 222;
  sub_18916C8(v1461, &v175, &v172);
  sub_5E5C(&v170, "TD");
  sub_5E5C(&v167, "TCD");
  int v169 = 101;
  sub_18916C8(v1462, &v170, &v167);
  sub_5E5C(&v165, "TF");
  sub_5E5C(&v162, "ATF");
  int v164 = 125;
  sub_18916C8(v1463, &v165, &v162);
  sub_5E5C(&v160, "TG");
  sub_5E5C(&v157, "TGO");
  int v159 = 216;
  sub_18916C8(v1464, &v160, &v157);
  sub_5E5C(&v155, "TH");
  sub_5E5C(&v152, "THA");
  int v154 = 214;
  sub_18916C8(v1465, &v155, &v152);
  sub_5E5C(&v150, "TJ");
  sub_5E5C(&v147, "TJK");
  int v149 = 213;
  sub_18916C8(v1466, &v150, &v147);
  sub_5E5C(&v145, "TK");
  sub_5E5C(&v142, "TKL");
  int v144 = 244;
  sub_18916C8(v1467, &v145, &v142);
  sub_5E5C(&v140, "TL");
  sub_5E5C(&v137, "TLS");
  int v139 = 215;
  sub_18916C8(v1468, &v140, &v137);
  sub_5E5C(&v135, "TM");
  sub_5E5C(&v132, "TKM");
  int v134 = 221;
  sub_18916C8(v1469, &v135, &v132);
  sub_5E5C(&v130, "TN");
  sub_5E5C(&v127, "TUN");
  int v129 = 219;
  sub_18916C8(v1470, &v130, &v127);
  sub_5E5C(&v125, "TO");
  sub_5E5C(&v122, "TON");
  int v124 = 217;
  sub_18916C8(v1471, &v125, &v122);
  sub_5E5C(&v120, "TR");
  sub_5E5C(&v117, "TUR");
  int v119 = 220;
  sub_18916C8(v1472, &v120, &v117);
  sub_5E5C(&v115, "TT");
  sub_5E5C(&v112, "TTO");
  int v114 = 218;
  sub_18916C8(v1473, &v115, &v112);
  sub_5E5C(&v110, "TV");
  sub_5E5C(&v107, "TUV");
  int v109 = 60;
  sub_18916C8(v1474, &v110, &v107);
  sub_5E5C(&v105, "TZ");
  sub_5E5C(&v102, "TZA");
  int v104 = 38;
  sub_18916C8(v1475, &v105, &v102);
  sub_5E5C(&v100, "UA");
  sub_5E5C(&v97, "UKR");
  int v99 = 224;
  sub_18916C8(v1476, &v100, &v97);
  sub_5E5C(&v95, "UG");
  sub_5E5C(&v92, "UGA");
  int v94 = 223;
  sub_18916C8(v1477, &v95, &v92);
  sub_5E5C(&v90, "UM");
  sub_5E5C(&v87, "UMI");
  int v89 = 251;
  sub_18916C8(v1478, &v90, &v87);
  sub_5E5C(&v85, "US");
  sub_5E5C(&v82, "USA");
  int v84 = 226;
  sub_18916C8(v1479, &v85, &v82);
  sub_5E5C(&v80, "UY");
  sub_5E5C(&v77, "URY");
  int v79 = 1;
  sub_18916C8(v1480, &v80, &v77);
  sub_5E5C(&v75, "UZ");
  sub_5E5C(&v72, "UZB");
  int v74 = 227;
  sub_18916C8(v1481, &v75, &v72);
  sub_5E5C(&v70, "VA");
  sub_5E5C(&v67, "VAT");
  int v69 = 74;
  sub_18916C8(v1482, &v70, &v67);
  sub_5E5C(&v65, "VC");
  sub_5E5C(&v62, "VCT");
  int v64 = 195;
  sub_18916C8(v1483, &v65, &v62);
  sub_5E5C(&v60, "VE");
  sub_5E5C(&v57, "VEN");
  int v59 = 39;
  sub_18916C8(v1484, &v60, &v57);
  sub_5E5C(&v55, "VG");
  sub_5E5C(&v52, "VGB");
  int v54 = 229;
  sub_18916C8(v1485, &v55, &v52);
  sub_5E5C(&v50, "VI");
  sub_5E5C(&v47, "VIR");
  int v49 = 242;
  sub_18916C8(v1486, &v50, &v47);
  sub_5E5C(&v45, "VN");
  sub_5E5C(&v42, "VNM");
  int v44 = 9;
  sub_18916C8(v1487, &v45, &v42);
  sub_5E5C(&v40, "VU");
  sub_5E5C(&v37, "VUT");
  int v39 = 228;
  sub_18916C8(v1488, &v40, &v37);
  sub_5E5C(&v35, "WF");
  sub_5E5C(&v32, "WLF");
  int v34 = 230;
  sub_18916C8(v1489, &v35, &v32);
  sub_5E5C(&v30, "WS");
  sub_5E5C(&v27, "WSM");
  int v29 = 196;
  sub_18916C8(v1490, &v30, &v27);
  sub_5E5C(&v25, "YE");
  sub_5E5C(&v22, "YEM");
  int v24 = 231;
  sub_18916C8(v1491, &v25, &v22);
  sub_5E5C(&v20, "YT");
  sub_5E5C(&v17, "MYT");
  int v19 = 53;
  sub_18916C8(v1492, &v20, &v17);
  sub_5E5C(&v15, "ZA");
  sub_5E5C(v12, "ZAF");
  int v14 = 62;
  sub_18916C8(v1493, &v15, (long long *)v12);
  sub_5E5C(v10, "ZM");
  sub_5E5C(v7, "ZMB");
  int v9 = 232;
  sub_18916C8(v1494, (long long *)v10, (long long *)v7);
  sub_5E5C(v5, "ZW");
  sub_5E5C(__p, "ZWE");
  int v4 = 233;
  sub_18916C8(v1495, (long long *)v5, (long long *)__p);
  sub_1898D38((uint64_t)&unk_2625B38, v1247, 249);
  uint64_t v0 = 1743;
  do
  {
    uint64_t v1 = &v1247[v0];
    if (*((char *)&v1245 + v0 * 8 + 15) < 0) {
      operator delete(*(v1 - 4));
    }
    if (*((char *)v1 - 33) < 0) {
      operator delete(*(v1 - 7));
    }
    v0 -= 7;
  }
  while (v0 * 8);
  if (v3 < 0) {
    operator delete(__p[0]);
  }
  if (v6 < 0) {
    operator delete(v5[0]);
  }
  if (v8 < 0) {
    operator delete(v7[0]);
  }
  if (v11 < 0) {
    operator delete(v10[0]);
  }
  if (v13 < 0) {
    operator delete(v12[0]);
  }
  if (v16 < 0) {
    operator delete((void *)v15);
  }
  if (v18 < 0) {
    operator delete((void *)v17);
  }
  if (v21 < 0) {
    operator delete((void *)v20);
  }
  if (v23 < 0) {
    operator delete((void *)v22);
  }
  if (v26 < 0) {
    operator delete((void *)v25);
  }
  if (v28 < 0) {
    operator delete((void *)v27);
  }
  if (v31 < 0) {
    operator delete((void *)v30);
  }
  if (v33 < 0) {
    operator delete((void *)v32);
  }
  if (v36 < 0) {
    operator delete((void *)v35);
  }
  if (v38 < 0) {
    operator delete((void *)v37);
  }
  if (v41 < 0) {
    operator delete((void *)v40);
  }
  if (v43 < 0) {
    operator delete((void *)v42);
  }
  if (v46 < 0) {
    operator delete((void *)v45);
  }
  if (v48 < 0) {
    operator delete((void *)v47);
  }
  if (v51 < 0) {
    operator delete((void *)v50);
  }
  if (v53 < 0) {
    operator delete((void *)v52);
  }
  if (v56 < 0) {
    operator delete((void *)v55);
  }
  if (v58 < 0) {
    operator delete((void *)v57);
  }
  if (v61 < 0) {
    operator delete((void *)v60);
  }
  if (v63 < 0) {
    operator delete((void *)v62);
  }
  if (v66 < 0) {
    operator delete((void *)v65);
  }
  if (v68 < 0) {
    operator delete((void *)v67);
  }
  if (v71 < 0) {
    operator delete((void *)v70);
  }
  if (v73 < 0) {
    operator delete((void *)v72);
  }
  if (v76 < 0) {
    operator delete((void *)v75);
  }
  if (v78 < 0) {
    operator delete((void *)v77);
  }
  if (v81 < 0) {
    operator delete((void *)v80);
  }
  if (v83 < 0) {
    operator delete((void *)v82);
  }
  if (v86 < 0) {
    operator delete((void *)v85);
  }
  if (v88 < 0) {
    operator delete((void *)v87);
  }
  if (v91 < 0) {
    operator delete((void *)v90);
  }
  if (v93 < 0) {
    operator delete((void *)v92);
  }
  if (v96 < 0) {
    operator delete((void *)v95);
  }
  if (v98 < 0) {
    operator delete((void *)v97);
  }
  if (v101 < 0) {
    operator delete((void *)v100);
  }
  if (v103 < 0) {
    operator delete((void *)v102);
  }
  if (v106 < 0) {
    operator delete((void *)v105);
  }
  if (v108 < 0) {
    operator delete((void *)v107);
  }
  if (v111 < 0) {
    operator delete((void *)v110);
  }
  if (v113 < 0) {
    operator delete((void *)v112);
  }
  if (v116 < 0) {
    operator delete((void *)v115);
  }
  if (v118 < 0) {
    operator delete((void *)v117);
  }
  if (v121 < 0) {
    operator delete((void *)v120);
  }
  if (v123 < 0) {
    operator delete((void *)v122);
  }
  if (v126 < 0) {
    operator delete((void *)v125);
  }
  if (v128 < 0) {
    operator delete((void *)v127);
  }
  if (v131 < 0) {
    operator delete((void *)v130);
  }
  if (v133 < 0) {
    operator delete((void *)v132);
  }
  if (v136 < 0) {
    operator delete((void *)v135);
  }
  if (v138 < 0) {
    operator delete((void *)v137);
  }
  if (v141 < 0) {
    operator delete((void *)v140);
  }
  if (v143 < 0) {
    operator delete((void *)v142);
  }
  if (v146 < 0) {
    operator delete((void *)v145);
  }
  if (v148 < 0) {
    operator delete((void *)v147);
  }
  if (v151 < 0) {
    operator delete((void *)v150);
  }
  if (v153 < 0) {
    operator delete((void *)v152);
  }
  if (v156 < 0) {
    operator delete((void *)v155);
  }
  if (v158 < 0) {
    operator delete((void *)v157);
  }
  if (v161 < 0) {
    operator delete((void *)v160);
  }
  if (v163 < 0) {
    operator delete((void *)v162);
  }
  if (v166 < 0) {
    operator delete((void *)v165);
  }
  if (v168 < 0) {
    operator delete((void *)v167);
  }
  if (v171 < 0) {
    operator delete((void *)v170);
  }
  if (v173 < 0) {
    operator delete((void *)v172);
  }
  if (v176 < 0) {
    operator delete((void *)v175);
  }
  if (v178 < 0) {
    operator delete((void *)v177);
  }
  if (v181 < 0) {
    operator delete((void *)v180);
  }
  if (v183 < 0) {
    operator delete((void *)v182);
  }
  if (v186 < 0) {
    operator delete((void *)v185);
  }
  if (v188 < 0) {
    operator delete((void *)v187);
  }
  if (v191 < 0) {
    operator delete((void *)v190);
  }
  if (v193 < 0) {
    operator delete((void *)v192);
  }
  if (v196 < 0) {
    operator delete((void *)v195);
  }
  if (v198 < 0) {
    operator delete((void *)v197);
  }
  if (v201 < 0) {
    operator delete((void *)v200);
  }
  if (v203 < 0) {
    operator delete((void *)v202);
  }
  if (v206 < 0) {
    operator delete((void *)v205);
  }
  if (v208 < 0) {
    operator delete((void *)v207);
  }
  if (v211 < 0) {
    operator delete((void *)v210);
  }
  if (v213 < 0) {
    operator delete((void *)v212);
  }
  if (v216 < 0) {
    operator delete((void *)v215);
  }
  if (v218 < 0) {
    operator delete((void *)v217);
  }
  if (v221 < 0) {
    operator delete((void *)v220);
  }
  if (v223 < 0) {
    operator delete((void *)v222);
  }
  if (v226 < 0) {
    operator delete((void *)v225);
  }
  if (v228 < 0) {
    operator delete((void *)v227);
  }
  if (v231 < 0) {
    operator delete((void *)v230);
  }
  if (v233 < 0) {
    operator delete((void *)v232);
  }
  if (v236 < 0) {
    operator delete((void *)v235);
  }
  if (v238 < 0) {
    operator delete((void *)v237);
  }
  if (v241 < 0) {
    operator delete((void *)v240);
  }
  if (v243 < 0) {
    operator delete((void *)v242);
  }
  if (v246 < 0) {
    operator delete((void *)v245);
  }
  if (v248 < 0) {
    operator delete((void *)v247);
  }
  if (v251 < 0) {
    operator delete((void *)v250);
  }
  if (v253 < 0) {
    operator delete((void *)v252);
  }
  if (v256 < 0) {
    operator delete((void *)v255);
  }
  if (v258 < 0) {
    operator delete((void *)v257);
  }
  if (v261 < 0) {
    operator delete((void *)v260);
  }
  if (v263 < 0) {
    operator delete((void *)v262);
  }
  if (v266 < 0) {
    operator delete((void *)v265);
  }
  if (v268 < 0) {
    operator delete((void *)v267);
  }
  if (v271 < 0) {
    operator delete((void *)v270);
  }
  if (v273 < 0) {
    operator delete((void *)v272);
  }
  if (v276 < 0) {
    operator delete((void *)v275);
  }
  if (v278 < 0) {
    operator delete((void *)v277);
  }
  if (v281 < 0) {
    operator delete((void *)v280);
  }
  if (v283 < 0) {
    operator delete((void *)v282);
  }
  if (v286 < 0) {
    operator delete((void *)v285);
  }
  if (v288 < 0) {
    operator delete((void *)v287);
  }
  if (v291 < 0) {
    operator delete((void *)v290);
  }
  if (v293 < 0) {
    operator delete((void *)v292);
  }
  if (v296 < 0) {
    operator delete((void *)v295);
  }
  if (v298 < 0) {
    operator delete((void *)v297);
  }
  if (v301 < 0) {
    operator delete((void *)v300);
  }
  if (v303 < 0) {
    operator delete((void *)v302);
  }
  if (v306 < 0) {
    operator delete((void *)v305);
  }
  if (v308 < 0) {
    operator delete((void *)v307);
  }
  if (v311 < 0) {
    operator delete((void *)v310);
  }
  if (v313 < 0) {
    operator delete((void *)v312);
  }
  if (v316 < 0) {
    operator delete((void *)v315);
  }
  if (v318 < 0) {
    operator delete((void *)v317);
  }
  if (v321 < 0) {
    operator delete((void *)v320);
  }
  if (v323 < 0) {
    operator delete((void *)v322);
  }
  if (v326 < 0) {
    operator delete((void *)v325);
  }
  if (v328 < 0) {
    operator delete((void *)v327);
  }
  if (v331 < 0) {
    operator delete((void *)v330);
  }
  if (v333 < 0) {
    operator delete((void *)v332);
  }
  if (v336 < 0) {
    operator delete((void *)v335);
  }
  if (v338 < 0) {
    operator delete((void *)v337);
  }
  if (v341 < 0) {
    operator delete((void *)v340);
  }
  if (v343 < 0) {
    operator delete((void *)v342);
  }
  if (v346 < 0) {
    operator delete((void *)v345);
  }
  if (v348 < 0) {
    operator delete((void *)v347);
  }
  if (v351 < 0) {
    operator delete((void *)v350);
  }
  if (v353 < 0) {
    operator delete((void *)v352);
  }
  if (v356 < 0) {
    operator delete((void *)v355);
  }
  if (v358 < 0) {
    operator delete((void *)v357);
  }
  if (v361 < 0) {
    operator delete((void *)v360);
  }
  if (v363 < 0) {
    operator delete((void *)v362);
  }
  if (v366 < 0) {
    operator delete((void *)v365);
  }
  if (v368 < 0) {
    operator delete((void *)v367);
  }
  if (v371 < 0) {
    operator delete((void *)v370);
  }
  if (v373 < 0) {
    operator delete((void *)v372);
  }
  if (v376 < 0) {
    operator delete((void *)v375);
  }
  if (v378 < 0) {
    operator delete((void *)v377);
  }
  if (v381 < 0) {
    operator delete((void *)v380);
  }
  if (v383 < 0) {
    operator delete((void *)v382);
  }
  if (v386 < 0) {
    operator delete((void *)v385);
  }
  if (v388 < 0) {
    operator delete((void *)v387);
  }
  if (v391 < 0) {
    operator delete((void *)v390);
  }
  if (v393 < 0) {
    operator delete((void *)v392);
  }
  if (v396 < 0) {
    operator delete((void *)v395);
  }
  if (v398 < 0) {
    operator delete((void *)v397);
  }
  if (v401 < 0) {
    operator delete((void *)v400);
  }
  if (v403 < 0) {
    operator delete((void *)v402);
  }
  if (v406 < 0) {
    operator delete((void *)v405);
  }
  if (v408 < 0) {
    operator delete((void *)v407);
  }
  if (v411 < 0) {
    operator delete((void *)v410);
  }
  if (v413 < 0) {
    operator delete((void *)v412);
  }
  if (v416 < 0) {
    operator delete((void *)v415);
  }
  if (v418 < 0) {
    operator delete((void *)v417);
  }
  if (v421 < 0) {
    operator delete((void *)v420);
  }
  if (v423 < 0) {
    operator delete((void *)v422);
  }
  if (v426 < 0) {
    operator delete((void *)v425);
  }
  if (v428 < 0) {
    operator delete((void *)v427);
  }
  if (v431 < 0) {
    operator delete((void *)v430);
  }
  if (v433 < 0) {
    operator delete((void *)v432);
  }
  if (v436 < 0) {
    operator delete((void *)v435);
  }
  if (v438 < 0) {
    operator delete((void *)v437);
  }
  if (v441 < 0) {
    operator delete((void *)v440);
  }
  if (v443 < 0) {
    operator delete((void *)v442);
  }
  if (v446 < 0) {
    operator delete((void *)v445);
  }
  if (v448 < 0) {
    operator delete((void *)v447);
  }
  if (v451 < 0) {
    operator delete((void *)v450);
  }
  if (v453 < 0) {
    operator delete((void *)v452);
  }
  if (v456 < 0) {
    operator delete((void *)v455);
  }
  if (v458 < 0) {
    operator delete((void *)v457);
  }
  if (v461 < 0) {
    operator delete((void *)v460);
  }
  if (v463 < 0) {
    operator delete((void *)v462);
  }
  if (v466 < 0) {
    operator delete((void *)v465);
  }
  if (v468 < 0) {
    operator delete((void *)v467);
  }
  if (v471 < 0) {
    operator delete((void *)v470);
  }
  if (v473 < 0) {
    operator delete((void *)v472);
  }
  if (v476 < 0) {
    operator delete((void *)v475);
  }
  if (v478 < 0) {
    operator delete((void *)v477);
  }
  if (v481 < 0) {
    operator delete((void *)v480);
  }
  if (v483 < 0) {
    operator delete((void *)v482);
  }
  if (v486 < 0) {
    operator delete((void *)v485);
  }
  if (v488 < 0) {
    operator delete((void *)v487);
  }
  if (v491 < 0) {
    operator delete((void *)v490);
  }
  if (v493 < 0) {
    operator delete((void *)v492);
  }
  if (v496 < 0) {
    operator delete((void *)v495);
  }
  if (v498 < 0) {
    operator delete((void *)v497);
  }
  if (v501 < 0) {
    operator delete((void *)v500);
  }
  if (v503 < 0) {
    operator delete((void *)v502);
  }
  if (v506 < 0) {
    operator delete((void *)v505);
  }
  if (v508 < 0) {
    operator delete((void *)v507);
  }
  if (v511 < 0) {
    operator delete((void *)v510);
  }
  if (v513 < 0) {
    operator delete((void *)v512);
  }
  if (v516 < 0) {
    operator delete((void *)v515);
  }
  if (v518 < 0) {
    operator delete((void *)v517);
  }
  if (v521 < 0) {
    operator delete((void *)v520);
  }
  if (v523 < 0) {
    operator delete((void *)v522);
  }
  if (v526 < 0) {
    operator delete((void *)v525);
  }
  if (v528 < 0) {
    operator delete((void *)v527);
  }
  if (v531 < 0) {
    operator delete((void *)v530);
  }
  if (v533 < 0) {
    operator delete((void *)v532);
  }
  if (v536 < 0) {
    operator delete((void *)v535);
  }
  if (v538 < 0) {
    operator delete((void *)v537);
  }
  if (v541 < 0) {
    operator delete((void *)v540);
  }
  if (v543 < 0) {
    operator delete((void *)v542);
  }
  if (v546 < 0) {
    operator delete((void *)v545);
  }
  if (v548 < 0) {
    operator delete((void *)v547);
  }
  if (v551 < 0) {
    operator delete((void *)v550);
  }
  if (v553 < 0) {
    operator delete((void *)v552);
  }
  if (v556 < 0) {
    operator delete((void *)v555);
  }
  if (v558 < 0) {
    operator delete((void *)v557);
  }
  if (v561 < 0) {
    operator delete((void *)v560);
  }
  if (v563 < 0) {
    operator delete((void *)v562);
  }
  if (v566 < 0) {
    operator delete((void *)v565);
  }
  if (v568 < 0) {
    operator delete((void *)v567);
  }
  if (v571 < 0) {
    operator delete((void *)v570);
  }
  if (v573 < 0) {
    operator delete((void *)v572);
  }
  if (v576 < 0) {
    operator delete((void *)v575);
  }
  if (v578 < 0) {
    operator delete((void *)v577);
  }
  if (v581 < 0) {
    operator delete((void *)v580);
  }
  if (v583 < 0) {
    operator delete((void *)v582);
  }
  if (v586 < 0) {
    operator delete((void *)v585);
  }
  if (v588 < 0) {
    operator delete((void *)v587);
  }
  if (v591 < 0) {
    operator delete((void *)v590);
  }
  if (v593 < 0) {
    operator delete((void *)v592);
  }
  if (v596 < 0) {
    operator delete((void *)v595);
  }
  if (v598 < 0) {
    operator delete((void *)v597);
  }
  if (v601 < 0) {
    operator delete((void *)v600);
  }
  if (v603 < 0) {
    operator delete((void *)v602);
  }
  if (v606 < 0) {
    operator delete((void *)v605);
  }
  if (v608 < 0) {
    operator delete((void *)v607);
  }
  if (v611 < 0) {
    operator delete((void *)v610);
  }
  if (v613 < 0) {
    operator delete((void *)v612);
  }
  if (v616 < 0) {
    operator delete((void *)v615);
  }
  if (v618 < 0) {
    operator delete((void *)v617);
  }
  if (v621 < 0) {
    operator delete((void *)v620);
  }
  if (v623 < 0) {
    operator delete((void *)v622);
  }
  if (v626 < 0) {
    operator delete((void *)v625);
  }
  if (v628 < 0) {
    operator delete((void *)v627);
  }
  if (v631 < 0) {
    operator delete((void *)v630);
  }
  if (v633 < 0) {
    operator delete((void *)v632);
  }
  if (v636 < 0) {
    operator delete((void *)v635);
  }
  if (v638 < 0) {
    operator delete((void *)v637);
  }
  if (v641 < 0) {
    operator delete((void *)v640);
  }
  if (v643 < 0) {
    operator delete((void *)v642);
  }
  if (v646 < 0) {
    operator delete((void *)v645);
  }
  if (v648 < 0) {
    operator delete((void *)v647);
  }
  if (v651 < 0) {
    operator delete((void *)v650);
  }
  if (v653 < 0) {
    operator delete((void *)v652);
  }
  if (v656 < 0) {
    operator delete((void *)v655);
  }
  if (v658 < 0) {
    operator delete((void *)v657);
  }
  if (v661 < 0) {
    operator delete((void *)v660);
  }
  if (v663 < 0) {
    operator delete((void *)v662);
  }
  if (v666 < 0) {
    operator delete((void *)v665);
  }
  if (v668 < 0) {
    operator delete((void *)v667);
  }
  if (v671 < 0) {
    operator delete((void *)v670);
  }
  if (v673 < 0) {
    operator delete((void *)v672);
  }
  if (v676 < 0) {
    operator delete((void *)v675);
  }
  if (v678 < 0) {
    operator delete((void *)v677);
  }
  if (v681 < 0) {
    operator delete((void *)v680);
  }
  if (v683 < 0) {
    operator delete((void *)v682);
  }
  if (v686 < 0) {
    operator delete((void *)v685);
  }
  if (v688 < 0) {
    operator delete((void *)v687);
  }
  if (v691 < 0) {
    operator delete((void *)v690);
  }
  if (v693 < 0) {
    operator delete((void *)v692);
  }
  if (v696 < 0) {
    operator delete((void *)v695);
  }
  if (v698 < 0) {
    operator delete((void *)v697);
  }
  if (v701 < 0) {
    operator delete((void *)v700);
  }
  if (v703 < 0) {
    operator delete((void *)v702);
  }
  if (v706 < 0) {
    operator delete((void *)v705);
  }
  if (v708 < 0) {
    operator delete((void *)v707);
  }
  if (v711 < 0) {
    operator delete((void *)v710);
  }
  if (v713 < 0) {
    operator delete((void *)v712);
  }
  if (v716 < 0) {
    operator delete((void *)v715);
  }
  if (v718 < 0) {
    operator delete((void *)v717);
  }
  if (v721 < 0) {
    operator delete((void *)v720);
  }
  if (v723 < 0) {
    operator delete((void *)v722);
  }
  if (v726 < 0) {
    operator delete((void *)v725);
  }
  if (v728 < 0) {
    operator delete((void *)v727);
  }
  if (v731 < 0) {
    operator delete((void *)v730);
  }
  if (v733 < 0) {
    operator delete((void *)v732);
  }
  if (v736 < 0) {
    operator delete((void *)v735);
  }
  if (v738 < 0) {
    operator delete((void *)v737);
  }
  if (v741 < 0) {
    operator delete((void *)v740);
  }
  if (v743 < 0) {
    operator delete((void *)v742);
  }
  if (v746 < 0) {
    operator delete((void *)v745);
  }
  if (v748 < 0) {
    operator delete((void *)v747);
  }
  if (v751 < 0) {
    operator delete((void *)v750);
  }
  if (v753 < 0) {
    operator delete((void *)v752);
  }
  if (v756 < 0) {
    operator delete((void *)v755);
  }
  if (v758 < 0) {
    operator delete((void *)v757);
  }
  if (v761 < 0) {
    operator delete((void *)v760);
  }
  if (v763 < 0) {
    operator delete((void *)v762);
  }
  if (v766 < 0) {
    operator delete((void *)v765);
  }
  if (v768 < 0) {
    operator delete((void *)v767);
  }
  if (v771 < 0) {
    operator delete((void *)v770);
  }
  if (v773 < 0) {
    operator delete((void *)v772);
  }
  if (v776 < 0) {
    operator delete((void *)v775);
  }
  if (v778 < 0) {
    operator delete((void *)v777);
  }
  if (v781 < 0) {
    operator delete((void *)v780);
  }
  if (v783 < 0) {
    operator delete((void *)v782);
  }
  if (v786 < 0) {
    operator delete((void *)v785);
  }
  if (v788 < 0) {
    operator delete((void *)v787);
  }
  if (v791 < 0) {
    operator delete((void *)v790);
  }
  if (v793 < 0) {
    operator delete((void *)v792);
  }
  if (v796 < 0) {
    operator delete((void *)v795);
  }
  if (v798 < 0) {
    operator delete((void *)v797);
  }
  if (v801 < 0) {
    operator delete((void *)v800);
  }
  if (v803 < 0) {
    operator delete((void *)v802);
  }
  if (v806 < 0) {
    operator delete((void *)v805);
  }
  if (v808 < 0) {
    operator delete((void *)v807);
  }
  if (v811 < 0) {
    operator delete((void *)v810);
  }
  if (v813 < 0) {
    operator delete((void *)v812);
  }
  if (v816 < 0) {
    operator delete((void *)v815);
  }
  if (v818 < 0) {
    operator delete((void *)v817);
  }
  if (v821 < 0) {
    operator delete((void *)v820);
  }
  if (v823 < 0) {
    operator delete((void *)v822);
  }
  if (v826 < 0) {
    operator delete((void *)v825);
  }
  if (v828 < 0) {
    operator delete((void *)v827);
  }
  if (v831 < 0) {
    operator delete((void *)v830);
  }
  if (v833 < 0) {
    operator delete((void *)v832);
  }
  if (v836 < 0) {
    operator delete((void *)v835);
  }
  if (v838 < 0) {
    operator delete((void *)v837);
  }
  if (v841 < 0) {
    operator delete((void *)v840);
  }
  if (v843 < 0) {
    operator delete((void *)v842);
  }
  if (v846 < 0) {
    operator delete((void *)v845);
  }
  if (v848 < 0) {
    operator delete((void *)v847);
  }
  if (v851 < 0) {
    operator delete((void *)v850);
  }
  if (v853 < 0) {
    operator delete((void *)v852);
  }
  if (v856 < 0) {
    operator delete((void *)v855);
  }
  if (v858 < 0) {
    operator delete((void *)v857);
  }
  if (v861 < 0) {
    operator delete((void *)v860);
  }
  if (v863 < 0) {
    operator delete((void *)v862);
  }
  if (v866 < 0) {
    operator delete((void *)v865);
  }
  if (v868 < 0) {
    operator delete((void *)v867);
  }
  if (v871 < 0) {
    operator delete((void *)v870);
  }
  if (v873 < 0) {
    operator delete((void *)v872);
  }
  if (v876 < 0) {
    operator delete((void *)v875);
  }
  if (v878 < 0) {
    operator delete((void *)v877);
  }
  if (v881 < 0) {
    operator delete((void *)v880);
  }
  if (v883 < 0) {
    operator delete((void *)v882);
  }
  if (v886 < 0) {
    operator delete((void *)v885);
  }
  if (v888 < 0) {
    operator delete((void *)v887);
  }
  if (v891 < 0) {
    operator delete((void *)v890);
  }
  if (v893 < 0) {
    operator delete((void *)v892);
  }
  if (v896 < 0) {
    operator delete((void *)v895);
  }
  if (v898 < 0) {
    operator delete((void *)v897);
  }
  if (v901 < 0) {
    operator delete((void *)v900);
  }
  if (v903 < 0) {
    operator delete((void *)v902);
  }
  if (v906 < 0) {
    operator delete((void *)v905);
  }
  if (v908 < 0) {
    operator delete((void *)v907);
  }
  if (v911 < 0) {
    operator delete((void *)v910);
  }
  if (v913 < 0) {
    operator delete((void *)v912);
  }
  if (v916 < 0) {
    operator delete((void *)v915);
  }
  if (v918 < 0) {
    operator delete((void *)v917);
  }
  if (v921 < 0) {
    operator delete((void *)v920);
  }
  if (v923 < 0) {
    operator delete((void *)v922);
  }
  if (v926 < 0) {
    operator delete((void *)v925);
  }
  if (v928 < 0) {
    operator delete((void *)v927);
  }
  if (v931 < 0) {
    operator delete((void *)v930);
  }
  if (v933 < 0) {
    operator delete((void *)v932);
  }
  if (v936 < 0) {
    operator delete((void *)v935);
  }
  if (v938 < 0) {
    operator delete((void *)v937);
  }
  if (v941 < 0) {
    operator delete((void *)v940);
  }
  if (v943 < 0) {
    operator delete((void *)v942);
  }
  if (v946 < 0) {
    operator delete((void *)v945);
  }
  if (v948 < 0) {
    operator delete((void *)v947);
  }
  if (v951 < 0) {
    operator delete((void *)v950);
  }
  if (v953 < 0) {
    operator delete((void *)v952);
  }
  if (v956 < 0) {
    operator delete((void *)v955);
  }
  if (v958 < 0) {
    operator delete((void *)v957);
  }
  if (v961 < 0) {
    operator delete((void *)v960);
  }
  if (v963 < 0) {
    operator delete((void *)v962);
  }
  if (v966 < 0) {
    operator delete((void *)v965);
  }
  if (v968 < 0) {
    operator delete((void *)v967);
  }
  if (v971 < 0) {
    operator delete((void *)v970);
  }
  if (v973 < 0) {
    operator delete((void *)v972);
  }
  if (v976 < 0) {
    operator delete((void *)v975);
  }
  if (v978 < 0) {
    operator delete((void *)v977);
  }
  if (v981 < 0) {
    operator delete((void *)v980);
  }
  if (v983 < 0) {
    operator delete((void *)v982);
  }
  if (v986 < 0) {
    operator delete((void *)v985);
  }
  if (v988 < 0) {
    operator delete((void *)v987);
  }
  if (v991 < 0) {
    operator delete((void *)v990);
  }
  if (v993 < 0) {
    operator delete((void *)v992);
  }
  if (v996 < 0) {
    operator delete((void *)v995);
  }
  if (v998 < 0) {
    operator delete((void *)v997);
  }
  if (v1001 < 0) {
    operator delete((void *)v1000);
  }
  if (v1003 < 0) {
    operator delete((void *)v1002);
  }
  if (v1006 < 0) {
    operator delete((void *)v1005);
  }
  if (v1008 < 0) {
    operator delete((void *)v1007);
  }
  if (v1011 < 0) {
    operator delete((void *)v1010);
  }
  if (v1013 < 0) {
    operator delete((void *)v1012);
  }
  if (v1016 < 0) {
    operator delete((void *)v1015);
  }
  if (v1018 < 0) {
    operator delete((void *)v1017);
  }
  if (v1021 < 0) {
    operator delete((void *)v1020);
  }
  if (v1023 < 0) {
    operator delete((void *)v1022);
  }
  if (v1026 < 0) {
    operator delete((void *)v1025);
  }
  if (v1028 < 0) {
    operator delete((void *)v1027);
  }
  if (v1031 < 0) {
    operator delete((void *)v1030);
  }
  if (v1033 < 0) {
    operator delete((void *)v1032);
  }
  if (v1036 < 0) {
    operator delete((void *)v1035);
  }
  if (v1038 < 0) {
    operator delete((void *)v1037);
  }
  if (v1041 < 0) {
    operator delete((void *)v1040);
  }
  if (v1043 < 0) {
    operator delete((void *)v1042);
  }
  if (v1046 < 0) {
    operator delete((void *)v1045);
  }
  if (v1048 < 0) {
    operator delete((void *)v1047);
  }
  if (v1051 < 0) {
    operator delete((void *)v1050);
  }
  if (v1053 < 0) {
    operator delete((void *)v1052);
  }
  if (v1056 < 0) {
    operator delete((void *)v1055);
  }
  if (v1058 < 0) {
    operator delete((void *)v1057);
  }
  if (v1061 < 0) {
    operator delete((void *)v1060);
  }
  if (v1063 < 0) {
    operator delete((void *)v1062);
  }
  if (v1066 < 0) {
    operator delete((void *)v1065);
  }
  if (v1068 < 0) {
    operator delete((void *)v1067);
  }
  if (v1071 < 0) {
    operator delete((void *)v1070);
  }
  if (v1073 < 0) {
    operator delete((void *)v1072);
  }
  if (v1076 < 0) {
    operator delete((void *)v1075);
  }
  if (v1078 < 0) {
    operator delete((void *)v1077);
  }
  if (v1081 < 0) {
    operator delete((void *)v1080);
  }
  if (v1083 < 0) {
    operator delete((void *)v1082);
  }
  if (v1086 < 0) {
    operator delete((void *)v1085);
  }
  if (v1088 < 0) {
    operator delete((void *)v1087);
  }
  if (v1091 < 0) {
    operator delete((void *)v1090);
  }
  if (v1093 < 0) {
    operator delete((void *)v1092);
  }
  if (v1096 < 0) {
    operator delete((void *)v1095);
  }
  if (v1098 < 0) {
    operator delete((void *)v1097);
  }
  if (v1101 < 0) {
    operator delete((void *)v1100);
  }
  if (v1103 < 0) {
    operator delete((void *)v1102);
  }
  if (v1106 < 0) {
    operator delete((void *)v1105);
  }
  if (v1108 < 0) {
    operator delete((void *)v1107);
  }
  if (v1111 < 0) {
    operator delete((void *)v1110);
  }
  if (v1113 < 0) {
    operator delete((void *)v1112);
  }
  if (v1116 < 0) {
    operator delete((void *)v1115);
  }
  if (v1118 < 0) {
    operator delete((void *)v1117);
  }
  if (v1121 < 0) {
    operator delete((void *)v1120);
  }
  if (v1123 < 0) {
    operator delete((void *)v1122);
  }
  if (v1126 < 0) {
    operator delete((void *)v1125);
  }
  if (v1128 < 0) {
    operator delete((void *)v1127);
  }
  if (v1131 < 0) {
    operator delete((void *)v1130);
  }
  if (v1133 < 0) {
    operator delete((void *)v1132);
  }
  if (v1136 < 0) {
    operator delete((void *)v1135);
  }
  if (v1138 < 0) {
    operator delete((void *)v1137);
  }
  if (v1141 < 0) {
    operator delete((void *)v1140);
  }
  if (v1143 < 0) {
    operator delete((void *)v1142);
  }
  if (v1146 < 0) {
    operator delete((void *)v1145);
  }
  if (v1148 < 0) {
    operator delete((void *)v1147);
  }
  if (v1151 < 0) {
    operator delete((void *)v1150);
  }
  if (v1153 < 0) {
    operator delete((void *)v1152);
  }
  if (v1156 < 0) {
    operator delete((void *)v1155);
  }
  if (v1158 < 0) {
    operator delete((void *)v1157);
  }
  if (v1161 < 0) {
    operator delete((void *)v1160);
  }
  if (v1163 < 0) {
    operator delete((void *)v1162);
  }
  if (v1166 < 0) {
    operator delete((void *)v1165);
  }
  if (v1168 < 0) {
    operator delete((void *)v1167);
  }
  if (v1171 < 0) {
    operator delete((void *)v1170);
  }
  if (v1173 < 0) {
    operator delete((void *)v1172);
  }
  if (v1176 < 0) {
    operator delete((void *)v1175);
  }
  if (v1178 < 0) {
    operator delete((void *)v1177);
  }
  if (v1181 < 0) {
    operator delete((void *)v1180);
  }
  if (v1183 < 0) {
    operator delete((void *)v1182);
  }
  if (v1186 < 0) {
    operator delete((void *)v1185);
  }
  if (v1188 < 0) {
    operator delete((void *)v1187);
  }
  if (v1191 < 0) {
    operator delete((void *)v1190);
  }
  if (v1193 < 0) {
    operator delete((void *)v1192);
  }
  if (v1196 < 0) {
    operator delete((void *)v1195);
  }
  if (v1198 < 0) {
    operator delete((void *)v1197);
  }
  if (v1201 < 0) {
    operator delete((void *)v1200);
  }
  if (v1203 < 0) {
    operator delete((void *)v1202);
  }
  if (v1206 < 0) {
    operator delete((void *)v1205);
  }
  if (v1208 < 0) {
    operator delete((void *)v1207);
  }
  if (v1211 < 0) {
    operator delete((void *)v1210);
  }
  if (v1213 < 0) {
    operator delete((void *)v1212);
  }
  if (v1216 < 0) {
    operator delete((void *)v1215);
  }
  if (v1218 < 0) {
    operator delete((void *)v1217);
  }
  if (v1221 < 0) {
    operator delete((void *)v1220);
  }
  if (v1223 < 0) {
    operator delete((void *)v1222);
  }
  if (v1226 < 0) {
    operator delete((void *)v1225);
  }
  if (v1228 < 0) {
    operator delete((void *)v1227);
  }
  if (v1231 < 0) {
    operator delete((void *)v1230);
  }
  if (v1233 < 0) {
    operator delete((void *)v1232);
  }
  if (v1236 < 0) {
    operator delete((void *)v1235);
  }
  if (v1238 < 0) {
    operator delete((void *)v1237);
  }
  if (v1241 < 0) {
    operator delete((void *)v1240);
  }
  if (v1243 < 0) {
    operator delete((void *)v1242);
  }
  if (v1246 < 0) {
    operator delete((void *)v1245);
  }
}

void sub_18AC440(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,void *a36,uint64_t a37,int a38,__int16 a39,char a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,__int16 a46,char a47,char a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,__int16 a59,char a60,char a61,uint64_t a62,uint64_t a63)
{
  uint64_t v86 = -13944;
  uint64_t v87 = v80;
  do
  {
    uint64_t v87 = sub_1890074(v87) - 56;
    v86 += 56;
  }
  while (v86);
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a22 < 0) {
    operator delete(a17);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  if (a41 < 0) {
    operator delete(a36);
  }
  if (a48 < 0) {
    operator delete(*(void **)(v81 + 32));
  }
  if (a54 < 0) {
    operator delete(*(void **)(v81 + 56));
  }
  if (a61 < 0) {
    operator delete(*(void **)(v81 + 88));
  }
  if (a67 < 0) {
    operator delete(*(void **)(v81 + 112));
  }
  if (a72 < 0) {
    operator delete(*(void **)(v81 + 144));
  }
  if (a73 < 0) {
    operator delete(*(void **)(v81 + 168));
  }
  if (a74 < 0) {
    operator delete(*(void **)(v81 + 200));
  }
  if (a75 < 0) {
    operator delete(*(void **)(v81 + 224));
  }
  if (a76 < 0) {
    operator delete(*(void **)(v81 + 256));
  }
  if (a77 < 0) {
    operator delete(*(void **)(v81 + 280));
  }
  if (a78 < 0) {
    operator delete(*(void **)(v81 + 312));
  }
  if (a79 < 0) {
    operator delete(*(void **)(v81 + 336));
  }
  if (a80 < 0) {
    operator delete(*(void **)(v81 + 368));
  }
  if (SLOBYTE(STACK[0x217]) < 0) {
    operator delete(*(void **)(v81 + 392));
  }
  if (SLOBYTE(STACK[0x237]) < 0) {
    operator delete(*(void **)(v81 + 424));
  }
  if (SLOBYTE(STACK[0x24F]) < 0) {
    operator delete(*(void **)(v81 + 448));
  }
  if (SLOBYTE(STACK[0x26F]) < 0) {
    operator delete(*(void **)(v81 + 480));
  }
  if (SLOBYTE(STACK[0x287]) < 0) {
    operator delete(*(void **)(v81 + 504));
  }
  if (SLOBYTE(STACK[0x2A7]) < 0) {
    operator delete(*(void **)(v81 + 536));
  }
  if (SLOBYTE(STACK[0x2BF]) < 0) {
    operator delete(*(void **)(v81 + 560));
  }
  if (SLOBYTE(STACK[0x2DF]) < 0) {
    operator delete(*(void **)(v81 + 592));
  }
  if (SLOBYTE(STACK[0x2F7]) < 0) {
    operator delete(*(void **)(v81 + 616));
  }
  if (SLOBYTE(STACK[0x317]) < 0) {
    operator delete(*(void **)(v81 + 648));
  }
  if (SLOBYTE(STACK[0x32F]) < 0) {
    operator delete(*(void **)(v81 + 672));
  }
  if (SLOBYTE(STACK[0x34F]) < 0) {
    operator delete(*(void **)(v81 + 704));
  }
  if (SLOBYTE(STACK[0x367]) < 0) {
    operator delete(*(void **)(v81 + 728));
  }
  if (SLOBYTE(STACK[0x387]) < 0) {
    operator delete(*(void **)(v81 + 760));
  }
  if (SLOBYTE(STACK[0x39F]) < 0) {
    operator delete(*(void **)(v81 + 784));
  }
  if (SLOBYTE(STACK[0x3BF]) < 0) {
    operator delete(*(void **)(v81 + 816));
  }
  if (SLOBYTE(STACK[0x3D7]) < 0) {
    operator delete(*(void **)(v81 + 840));
  }
  if (SLOBYTE(STACK[0x3F7]) < 0) {
    operator delete(*(void **)(v81 + 872));
  }
  if (SLOBYTE(STACK[0x40F]) < 0) {
    operator delete(*(void **)(v81 + 896));
  }
  if (SLOBYTE(STACK[0x42F]) < 0) {
    operator delete(*(void **)(v81 + 928));
  }
  if (SLOBYTE(STACK[0x447]) < 0) {
    operator delete(*(void **)(v81 + 952));
  }
  if (SLOBYTE(STACK[0x467]) < 0) {
    operator delete(*(void **)(v81 + 984));
  }
  if (SLOBYTE(STACK[0x47F]) < 0) {
    operator delete(*(void **)(v81 + 1008));
  }
  if (SLOBYTE(STACK[0x49F]) < 0) {
    operator delete(*(void **)(v81 + 1040));
  }
  if (SLOBYTE(STACK[0x4B7]) < 0) {
    operator delete(*(void **)(v81 + 1064));
  }
  if (SLOBYTE(STACK[0x4D7]) < 0) {
    operator delete(*(void **)(v81 + 1096));
  }
  if (SLOBYTE(STACK[0x4EF]) < 0) {
    operator delete(*(void **)(v81 + 1120));
  }
  if (SLOBYTE(STACK[0x50F]) < 0) {
    operator delete(*(void **)(v81 + 1152));
  }
  if (SLOBYTE(STACK[0x527]) < 0) {
    operator delete(*(void **)(v81 + 1176));
  }
  if (SLOBYTE(STACK[0x547]) < 0) {
    operator delete(*(void **)(v81 + 1208));
  }
  if (SLOBYTE(STACK[0x55F]) < 0) {
    operator delete(*(void **)(v81 + 1232));
  }
  if (SLOBYTE(STACK[0x57F]) < 0) {
    operator delete(*(void **)(v81 + 1264));
  }
  if (SLOBYTE(STACK[0x597]) < 0) {
    operator delete(*(void **)(v81 + 1288));
  }
  if (SLOBYTE(STACK[0x5B7]) < 0) {
    operator delete(*(void **)(v81 + 1320));
  }
  if (SLOBYTE(STACK[0x5CF]) < 0) {
    operator delete(*(void **)(v81 + 1344));
  }
  if (SLOBYTE(STACK[0x5EF]) < 0) {
    operator delete(*(void **)(v81 + 1376));
  }
  if (SLOBYTE(STACK[0x607]) < 0) {
    operator delete(*(void **)(v81 + 1400));
  }
  if (SLOBYTE(STACK[0x627]) < 0) {
    operator delete(*(void **)(v81 + 1432));
  }
  if (SLOBYTE(STACK[0x63F]) < 0) {
    operator delete(*(void **)(v81 + 1456));
  }
  if (SLOBYTE(STACK[0x65F]) < 0) {
    operator delete(*(void **)(v81 + 1488));
  }
  if (SLOBYTE(STACK[0x677]) < 0) {
    operator delete(*(void **)(v81 + 1512));
  }
  if (SLOBYTE(STACK[0x697]) < 0) {
    operator delete(*(void **)(v81 + 1544));
  }
  if (SLOBYTE(STACK[0x6AF]) < 0) {
    operator delete(*(void **)(v81 + 1568));
  }
  if (SLOBYTE(STACK[0x6CF]) < 0) {
    operator delete(*(void **)(v81 + 1600));
  }
  if (SLOBYTE(STACK[0x6E7]) < 0) {
    operator delete(*(void **)(v81 + 1624));
  }
  if (SLOBYTE(STACK[0x707]) < 0) {
    operator delete(*(void **)(v81 + 1656));
  }
  if (SLOBYTE(STACK[0x71F]) < 0) {
    operator delete(*(void **)(v81 + 1680));
  }
  if (SLOBYTE(STACK[0x73F]) < 0) {
    operator delete(*(void **)(v81 + 1712));
  }
  if (SLOBYTE(STACK[0x757]) < 0) {
    operator delete(*(void **)(v81 + 1736));
  }
  if (SLOBYTE(STACK[0x777]) < 0) {
    operator delete(*(void **)(v81 + 1768));
  }
  if (SLOBYTE(STACK[0x78F]) < 0) {
    operator delete(*(void **)(v81 + 1792));
  }
  if (SLOBYTE(STACK[0x7AF]) < 0) {
    operator delete(*(void **)(v81 + 1824));
  }
  if (SLOBYTE(STACK[0x7C7]) < 0) {
    operator delete(*(void **)(v81 + 1848));
  }
  if (SLOBYTE(STACK[0x7E7]) < 0) {
    operator delete(*(void **)(v81 + 1880));
  }
  if (SLOBYTE(STACK[0x7FF]) < 0) {
    operator delete(*(void **)(v81 + 1904));
  }
  if (SLOBYTE(STACK[0x81F]) < 0) {
    operator delete(*(void **)(v81 + 1936));
  }
  if (SLOBYTE(STACK[0x837]) < 0) {
    operator delete(*(void **)(v81 + 1960));
  }
  if (SLOBYTE(STACK[0x857]) < 0) {
    operator delete(*(void **)(v81 + 1992));
  }
  if (SLOBYTE(STACK[0x86F]) < 0) {
    operator delete(*(void **)(v81 + 2016));
  }
  if (SLOBYTE(STACK[0x88F]) < 0) {
    operator delete(*(void **)(v81 + 2048));
  }
  if (SLOBYTE(STACK[0x8A7]) < 0) {
    operator delete(*(void **)(v81 + 2072));
  }
  if (SLOBYTE(STACK[0x8C7]) < 0) {
    operator delete(*(void **)(v81 + 2104));
  }
  if (SLOBYTE(STACK[0x8DF]) < 0) {
    operator delete(*(void **)(v81 + 2128));
  }
  if (SLOBYTE(STACK[0x8FF]) < 0) {
    operator delete(*(void **)(v81 + 2160));
  }
  if (SLOBYTE(STACK[0x917]) < 0) {
    operator delete(*(void **)(v81 + 2184));
  }
  if (SLOBYTE(STACK[0x937]) < 0) {
    operator delete(*(void **)(v81 + 2216));
  }
  if (SLOBYTE(STACK[0x94F]) < 0) {
    operator delete(*(void **)(v81 + 2240));
  }
  if (SLOBYTE(STACK[0x96F]) < 0) {
    operator delete(*(void **)(v81 + 2272));
  }
  if (SLOBYTE(STACK[0x987]) < 0) {
    operator delete(*(void **)(v81 + 2296));
  }
  if (SLOBYTE(STACK[0x9A7]) < 0) {
    operator delete(*(void **)(v81 + 2328));
  }
  if (SLOBYTE(STACK[0x9BF]) < 0) {
    operator delete(*(void **)(v81 + 2352));
  }
  if (SLOBYTE(STACK[0x9DF]) < 0) {
    operator delete(*(void **)(v81 + 2384));
  }
  if (SLOBYTE(STACK[0x9F7]) < 0) {
    operator delete(*(void **)(v81 + 2408));
  }
  if (SLOBYTE(STACK[0xA17]) < 0) {
    operator delete(*(void **)(v81 + 2440));
  }
  if (SLOBYTE(STACK[0xA2F]) < 0) {
    operator delete(*(void **)(v81 + 2464));
  }
  if (SLOBYTE(STACK[0xA4F]) < 0) {
    operator delete(*(void **)(v81 + 2496));
  }
  if (SLOBYTE(STACK[0xA67]) < 0) {
    operator delete(*(void **)(v81 + 2520));
  }
  if (SLOBYTE(STACK[0xA87]) < 0) {
    operator delete(*(void **)(v81 + 2552));
  }
  if (SLOBYTE(STACK[0xA9F]) < 0) {
    operator delete(*(void **)(v81 + 2576));
  }
  if (SLOBYTE(STACK[0xABF]) < 0) {
    operator delete(*(void **)(v81 + 2608));
  }
  if (SLOBYTE(STACK[0xAD7]) < 0) {
    operator delete(*(void **)(v81 + 2632));
  }
  if (SLOBYTE(STACK[0xAF7]) < 0) {
    operator delete(*(void **)(v81 + 2664));
  }
  if (SLOBYTE(STACK[0xB0F]) < 0) {
    operator delete(*(void **)(v81 + 2688));
  }
  if (SLOBYTE(STACK[0xB2F]) < 0) {
    operator delete(*(void **)(v81 + 2720));
  }
  if (SLOBYTE(STACK[0xB47]) < 0) {
    operator delete(*(void **)(v81 + 2744));
  }
  if (SLOBYTE(STACK[0xB67]) < 0) {
    operator delete(*(void **)(v81 + 2776));
  }
  if (SLOBYTE(STACK[0xB7F]) < 0) {
    operator delete(*(void **)(v81 + 2800));
  }
  if (SLOBYTE(STACK[0xB9F]) < 0) {
    operator delete(*(void **)(v81 + 2832));
  }
  if (SLOBYTE(STACK[0xBB7]) < 0) {
    operator delete(*(void **)(v81 + 2856));
  }
  if (SLOBYTE(STACK[0xBD7]) < 0) {
    operator delete(*(void **)(v81 + 2888));
  }
  if (SLOBYTE(STACK[0xBEF]) < 0) {
    operator delete(*(void **)(v81 + 2912));
  }
  if (SLOBYTE(STACK[0xC0F]) < 0) {
    operator delete(*(void **)(v81 + 2944));
  }
  if (SLOBYTE(STACK[0xC27]) < 0) {
    operator delete(*(void **)(v81 + 2968));
  }
  if (SLOBYTE(STACK[0xC47]) < 0) {
    operator delete(*(void **)(v81 + 3000));
  }
  if (SLOBYTE(STACK[0xC5F]) < 0) {
    operator delete(*(void **)(v81 + 3024));
  }
  if (SLOBYTE(STACK[0xC7F]) < 0) {
    operator delete(*(void **)(v81 + 3056));
  }
  if (SLOBYTE(STACK[0xC97]) < 0) {
    operator delete(*(void **)(v81 + 3080));
  }
  if (SLOBYTE(STACK[0xCB7]) < 0) {
    operator delete(*(void **)(v81 + 3112));
  }
  if (SLOBYTE(STACK[0xCCF]) < 0) {
    operator delete(*(void **)(v81 + 3136));
  }
  if (SLOBYTE(STACK[0xCEF]) < 0) {
    operator delete(*(void **)(v81 + 3168));
  }
  if (SLOBYTE(STACK[0xD07]) < 0) {
    operator delete(*(void **)(v81 + 3192));
  }
  if (SLOBYTE(STACK[0xD27]) < 0) {
    operator delete(*(void **)(v81 + 3224));
  }
  if (SLOBYTE(STACK[0xD3F]) < 0) {
    operator delete(*(void **)(v81 + 3248));
  }
  if (SLOBYTE(STACK[0xD5F]) < 0) {
    operator delete(*(void **)(v81 + 3280));
  }
  if (SLOBYTE(STACK[0xD77]) < 0) {
    operator delete(*(void **)(v81 + 3304));
  }
  if (SLOBYTE(STACK[0xD97]) < 0) {
    operator delete(*(void **)(v81 + 3336));
  }
  if (SLOBYTE(STACK[0xDAF]) < 0) {
    operator delete(*(void **)(v81 + 3360));
  }
  if (SLOBYTE(STACK[0xDCF]) < 0) {
    operator delete(*(void **)(v81 + 3392));
  }
  if (SLOBYTE(STACK[0xDE7]) < 0) {
    operator delete(*(void **)(v81 + 3416));
  }
  if (SLOBYTE(STACK[0xE07]) < 0) {
    operator delete(*(void **)(v81 + 3448));
  }
  if (SLOBYTE(STACK[0xE1F]) < 0) {
    operator delete(*(void **)(v81 + 3472));
  }
  if (SLOBYTE(STACK[0xE3F]) < 0) {
    operator delete(*(void **)(v81 + 3504));
  }
  if (SLOBYTE(STACK[0xE57]) < 0) {
    operator delete(*(void **)(v81 + 3528));
  }
  if (SLOBYTE(STACK[0xE77]) < 0) {
    operator delete(*(void **)(v81 + 3560));
  }
  if (SLOBYTE(STACK[0xE8F]) < 0) {
    operator delete(*(void **)(v81 + 3584));
  }
  if (SLOBYTE(STACK[0xEAF]) < 0) {
    operator delete(*(void **)(v81 + 3616));
  }
  if (SLOBYTE(STACK[0xEC7]) < 0) {
    operator delete(*(void **)(v81 + 3640));
  }
  if (SLOBYTE(STACK[0xEE7]) < 0) {
    operator delete(*(void **)(v81 + 3672));
  }
  if (SLOBYTE(STACK[0xEFF]) < 0) {
    operator delete(*(void **)(v81 + 3696));
  }
  if (SLOBYTE(STACK[0xF1F]) < 0) {
    operator delete(*(void **)(v81 + 3728));
  }
  if (SLOBYTE(STACK[0xF37]) < 0) {
    operator delete(*(void **)(v81 + 3752));
  }
  if (SLOBYTE(STACK[0xF57]) < 0) {
    operator delete(*(void **)(v81 + 3784));
  }
  if (SLOBYTE(STACK[0xF6F]) < 0) {
    operator delete(*(void **)(v81 + 3808));
  }
  if (*(char *)(v81 + 3863) < 0) {
    operator delete(*(void **)(v81 + 3840));
  }
  if (*(char *)(v81 + 3887) < 0) {
    operator delete(*(void **)(v81 + 3864));
  }
  if (*(char *)(v81 + 3919) < 0) {
    operator delete(*(void **)(v81 + 3896));
  }
  if (*(char *)(v81 + 3943) < 0) {
    operator delete(*(void **)(v81 + 3920));
  }
  if (*(char *)(v81 + 3975) < 0) {
    operator delete(*(void **)(v81 + 3952));
  }
  if (*(char *)(v81 + 3999) < 0) {
    operator delete(*(void **)(v81 + 3976));
  }
  if (*(char *)(v81 + 4031) < 0) {
    operator delete(*(void **)(v81 + 4008));
  }
  if (*(char *)(v81 + 4055) < 0) {
    operator delete(*(void **)(v81 + 4032));
  }
  if (*(char *)(v81 + 4087) < 0) {
    operator delete(*(void **)(v81 + 4064));
  }
  if (*(char *)(v84 + 23) < 0) {
    operator delete(*(void **)v84);
  }
  if (*(char *)(v84 + 55) < 0) {
    operator delete(*(void **)(v84 + 32));
  }
  if (*(char *)(v84 + 79) < 0) {
    operator delete(*(void **)(v84 + 56));
  }
  if (*(char *)(v84 + 111) < 0) {
    operator delete(*(void **)(v84 + 88));
  }
  if (*(char *)(v84 + 135) < 0) {
    operator delete(*(void **)(v84 + 112));
  }
  if (*(char *)(v84 + 167) < 0) {
    operator delete(*(void **)(v84 + 144));
  }
  if (*(char *)(v84 + 191) < 0) {
    operator delete(*(void **)(v84 + 168));
  }
  if (*(char *)(v84 + 223) < 0) {
    operator delete(*(void **)(v84 + 200));
  }
  if (*(char *)(v84 + 247) < 0) {
    operator delete(*(void **)(v84 + 224));
  }
  if (*(char *)(v84 + 279) < 0) {
    operator delete(*(void **)(v84 + 256));
  }
  if (*(char *)(v84 + 303) < 0) {
    operator delete(*(void **)(v84 + 280));
  }
  if (*(char *)(v84 + 335) < 0) {
    operator delete(*(void **)(v84 + 312));
  }
  if (*(char *)(v84 + 359) < 0) {
    operator delete(*(void **)(v84 + 336));
  }
  if (*(char *)(v84 + 391) < 0) {
    operator delete(*(void **)(v84 + 368));
  }
  if (*(char *)(v84 + 415) < 0) {
    operator delete(*(void **)(v84 + 392));
  }
  if (*(char *)(v84 + 447) < 0) {
    operator delete(*(void **)(v84 + 424));
  }
  if (*(char *)(v84 + 471) < 0) {
    operator delete(*(void **)(v84 + 448));
  }
  if (*(char *)(v84 + 503) < 0) {
    operator delete(*(void **)(v84 + 480));
  }
  if (*(char *)(v84 + 527) < 0) {
    operator delete(*(void **)(v84 + 504));
  }
  if (*(char *)(v84 + 559) < 0) {
    operator delete(*(void **)(v84 + 536));
  }
  if (*(char *)(v84 + 583) < 0) {
    operator delete(*(void **)(v84 + 560));
  }
  if (*(char *)(v84 + 615) < 0) {
    operator delete(*(void **)(v84 + 592));
  }
  if (*(char *)(v84 + 639) < 0) {
    operator delete(*(void **)(v84 + 616));
  }
  if (*(char *)(v84 + 671) < 0) {
    operator delete(*(void **)(v84 + 648));
  }
  if (*(char *)(v84 + 695) < 0) {
    operator delete(*(void **)(v84 + 672));
  }
  if (*(char *)(v84 + 727) < 0) {
    operator delete(*(void **)(v84 + 704));
  }
  if (*(char *)(v84 + 751) < 0) {
    operator delete(*(void **)(v84 + 728));
  }
  if (*(char *)(v84 + 783) < 0) {
    operator delete(*(void **)(v84 + 760));
  }
  if (*(char *)(v84 + 807) < 0) {
    operator delete(*(void **)(v84 + 784));
  }
  if (*(char *)(v84 + 839) < 0) {
    operator delete(*(void **)(v84 + 816));
  }
  if (*(char *)(v84 + 863) < 0) {
    operator delete(*(void **)(v84 + 840));
  }
  if (*(char *)(v84 + 895) < 0) {
    operator delete(*(void **)(v84 + 872));
  }
  if (*(char *)(v84 + 919) < 0) {
    operator delete(*(void **)(v84 + 896));
  }
  if (*(char *)(v84 + 951) < 0) {
    operator delete(*(void **)(v84 + 928));
  }
  if (*(char *)(v84 + 975) < 0) {
    operator delete(*(void **)(v84 + 952));
  }
  if (*(char *)(v84 + 1007) < 0) {
    operator delete(*(void **)(v84 + 984));
  }
  if (*(char *)(v84 + 1031) < 0) {
    operator delete(*(void **)(v84 + 1008));
  }
  if (*(char *)(v84 + 1063) < 0) {
    operator delete(*(void **)(v84 + 1040));
  }
  if (*(char *)(v84 + 1087) < 0) {
    operator delete(*(void **)(v84 + 1064));
  }
  if (*(char *)(v84 + 1119) < 0) {
    operator delete(*(void **)(v84 + 1096));
  }
  if (*(char *)(v84 + 1143) < 0) {
    operator delete(*(void **)(v84 + 1120));
  }
  if (*(char *)(v84 + 1175) < 0) {
    operator delete(*(void **)(v84 + 1152));
  }
  if (*(char *)(v84 + 1199) < 0) {
    operator delete(*(void **)(v84 + 1176));
  }
  if (*(char *)(v84 + 1231) < 0) {
    operator delete(*(void **)(v84 + 1208));
  }
  if (*(char *)(v84 + 1255) < 0) {
    operator delete(*(void **)(v84 + 1232));
  }
  if (*(char *)(v84 + 1287) < 0) {
    operator delete(*(void **)(v84 + 1264));
  }
  if (*(char *)(v84 + 1311) < 0) {
    operator delete(*(void **)(v84 + 1288));
  }
  if (*(char *)(v84 + 1343) < 0) {
    operator delete(*(void **)(v84 + 1320));
  }
  if (*(char *)(v84 + 1367) < 0) {
    operator delete(*(void **)(v84 + 1344));
  }
  if (*(char *)(v84 + 1399) < 0) {
    operator delete(*(void **)(v84 + 1376));
  }
  if (*(char *)(v84 + 1423) < 0) {
    operator delete(*(void **)(v84 + 1400));
  }
  if (*(char *)(v84 + 1455) < 0) {
    operator delete(*(void **)(v84 + 1432));
  }
  if (*(char *)(v84 + 1479) < 0) {
    operator delete(*(void **)(v84 + 1456));
  }
  if (*(char *)(v84 + 1511) < 0) {
    operator delete(*(void **)(v84 + 1488));
  }
  if (*(char *)(v84 + 1535) < 0) {
    operator delete(*(void **)(v84 + 1512));
  }
  if (*(char *)(v84 + 1567) < 0) {
    operator delete(*(void **)(v84 + 1544));
  }
  if (*(char *)(v84 + 1591) < 0) {
    operator delete(*(void **)(v84 + 1568));
  }
  if (*(char *)(v84 + 1623) < 0) {
    operator delete(*(void **)(v84 + 1600));
  }
  if (*(char *)(v84 + 1647) < 0) {
    operator delete(*(void **)(v84 + 1624));
  }
  if (*(char *)(v84 + 1679) < 0) {
    operator delete(*(void **)(v84 + 1656));
  }
  if (*(char *)(v84 + 1703) < 0) {
    operator delete(*(void **)(v84 + 1680));
  }
  if (*(char *)(v84 + 1735) < 0) {
    operator delete(*(void **)(v84 + 1712));
  }
  if (*(char *)(v84 + 1759) < 0) {
    operator delete(*(void **)(v84 + 1736));
  }
  if (*(char *)(v84 + 1791) < 0) {
    operator delete(*(void **)(v84 + 1768));
  }
  if (*(char *)(v84 + 1815) < 0) {
    operator delete(*(void **)(v84 + 1792));
  }
  if (*(char *)(v84 + 1847) < 0) {
    operator delete(*(void **)(v84 + 1824));
  }
  if (*(char *)(v84 + 1871) < 0) {
    operator delete(*(void **)(v84 + 1848));
  }
  if (*(char *)(v84 + 1903) < 0) {
    operator delete(*(void **)(v84 + 1880));
  }
  if (*(char *)(v84 + 1927) < 0) {
    operator delete(*(void **)(v84 + 1904));
  }
  if (*(char *)(v84 + 1959) < 0) {
    operator delete(*(void **)(v84 + 1936));
  }
  if (*(char *)(v84 + 1983) < 0) {
    operator delete(*(void **)(v84 + 1960));
  }
  if (*(char *)(v84 + 2015) < 0) {
    operator delete(*(void **)(v84 + 1992));
  }
  if (*(char *)(v84 + 2039) < 0) {
    operator delete(*(void **)(v84 + 2016));
  }
  if (*(char *)(v84 + 2071) < 0) {
    operator delete(*(void **)(v84 + 2048));
  }
  if (*(char *)(v84 + 2095) < 0) {
    operator delete(*(void **)(v84 + 2072));
  }
  if (*(char *)(v84 + 2127) < 0) {
    operator delete(*(void **)(v84 + 2104));
  }
  if (*(char *)(v84 + 2151) < 0) {
    operator delete(*(void **)(v84 + 2128));
  }
  if (*(char *)(v84 + 2183) < 0) {
    operator delete(*(void **)(v84 + 2160));
  }
  if (*(char *)(v84 + 2207) < 0) {
    operator delete(*(void **)(v84 + 2184));
  }
  if (*(char *)(v84 + 2239) < 0) {
    operator delete(*(void **)(v84 + 2216));
  }
  if (*(char *)(v84 + 2263) < 0) {
    operator delete(*(void **)(v84 + 2240));
  }
  if (*(char *)(v84 + 2295) < 0) {
    operator delete(*(void **)(v84 + 2272));
  }
  if (*(char *)(v84 + 2319) < 0) {
    operator delete(*(void **)(v84 + 2296));
  }
  if (*(char *)(v84 + 2351) < 0) {
    operator delete(*(void **)(v84 + 2328));
  }
  if (*(char *)(v84 + 2375) < 0) {
    operator delete(*(void **)(v84 + 2352));
  }
  if (*(char *)(v84 + 2407) < 0) {
    operator delete(*(void **)(v84 + 2384));
  }
  if (*(char *)(v84 + 2431) < 0) {
    operator delete(*(void **)(v84 + 2408));
  }
  if (*(char *)(v84 + 2463) < 0) {
    operator delete(*(void **)(v84 + 2440));
  }
  if (*(char *)(v84 + 2487) < 0) {
    operator delete(*(void **)(v84 + 2464));
  }
  if (*(char *)(v84 + 2519) < 0) {
    operator delete(*(void **)(v84 + 2496));
  }
  if (*(char *)(v84 + 2543) < 0) {
    operator delete(*(void **)(v84 + 2520));
  }
  if (*(char *)(v84 + 2575) < 0) {
    operator delete(*(void **)(v84 + 2552));
  }
  if (*(char *)(v84 + 2599) < 0) {
    operator delete(*(void **)(v84 + 2576));
  }
  if (*(char *)(v84 + 2631) < 0) {
    operator delete(*(void **)(v84 + 2608));
  }
  if (*(char *)(v84 + 2655) < 0) {
    operator delete(*(void **)(v84 + 2632));
  }
  if (*(char *)(v84 + 2687) < 0) {
    operator delete(*(void **)(v84 + 2664));
  }
  if (*(char *)(v84 + 2711) < 0) {
    operator delete(*(void **)(v84 + 2688));
  }
  if (*(char *)(v84 + 2743) < 0) {
    operator delete(*(void **)(v84 + 2720));
  }
  if (*(char *)(v84 + 2767) < 0) {
    operator delete(*(void **)(v84 + 2744));
  }
  if (*(char *)(v84 + 2799) < 0) {
    operator delete(*(void **)(v84 + 2776));
  }
  if (*(char *)(v84 + 2823) < 0) {
    operator delete(*(void **)(v84 + 2800));
  }
  if (*(char *)(v84 + 2855) < 0) {
    operator delete(*(void **)(v84 + 2832));
  }
  if (*(char *)(v84 + 2879) < 0) {
    operator delete(*(void **)(v84 + 2856));
  }
  if (*(char *)(v84 + 2911) < 0) {
    operator delete(*(void **)(v84 + 2888));
  }
  if (*(char *)(v84 + 2935) < 0) {
    operator delete(*(void **)(v84 + 2912));
  }
  if (*(char *)(v84 + 2967) < 0) {
    operator delete(*(void **)(v84 + 2944));
  }
  if (*(char *)(v84 + 2991) < 0) {
    operator delete(*(void **)(v84 + 2968));
  }
  if (*(char *)(v84 + 3023) < 0) {
    operator delete(*(void **)(v84 + 3000));
  }
  if (*(char *)(v84 + 3047) < 0) {
    operator delete(*(void **)(v84 + 3024));
  }
  if (*(char *)(v84 + 3079) < 0) {
    operator delete(*(void **)(v84 + 3056));
  }
  if (*(char *)(v84 + 3103) < 0) {
    operator delete(*(void **)(v84 + 3080));
  }
  if (*(char *)(v84 + 3135) < 0) {
    operator delete(*(void **)(v84 + 3112));
  }
  if (*(char *)(v84 + 3159) < 0) {
    operator delete(*(void **)(v84 + 3136));
  }
  if (*(char *)(v84 + 3191) < 0) {
    operator delete(*(void **)(v84 + 3168));
  }
  if (*(char *)(v84 + 3215) < 0) {
    operator delete(*(void **)(v84 + 3192));
  }
  if (*(char *)(v84 + 3247) < 0) {
    operator delete(*(void **)(v84 + 3224));
  }
  if (*(char *)(v84 + 3271) < 0) {
    operator delete(*(void **)(v84 + 3248));
  }
  if (*(char *)(v84 + 3303) < 0) {
    operator delete(*(void **)(v84 + 3280));
  }
  if (*(char *)(v84 + 3327) < 0) {
    operator delete(*(void **)(v84 + 3304));
  }
  if (*(char *)(v84 + 3359) < 0) {
    operator delete(*(void **)(v84 + 3336));
  }
  if (*(char *)(v84 + 3383) < 0) {
    operator delete(*(void **)(v84 + 3360));
  }
  if (*(char *)(v84 + 3415) < 0) {
    operator delete(*(void **)(v84 + 3392));
  }
  if (*(char *)(v84 + 3439) < 0) {
    operator delete(*(void **)(v84 + 3416));
  }
  if (*(char *)(v84 + 3471) < 0) {
    operator delete(*(void **)(v84 + 3448));
  }
  if (*(char *)(v84 + 3495) < 0) {
    operator delete(*(void **)(v84 + 3472));
  }
  if (*(char *)(v84 + 3527) < 0) {
    operator delete(*(void **)(v84 + 3504));
  }
  if (*(char *)(v84 + 3551) < 0) {
    operator delete(*(void **)(v84 + 3528));
  }
  if (*(char *)(v84 + 3583) < 0) {
    operator delete(*(void **)(v84 + 3560));
  }
  if (*(char *)(v84 + 3607) < 0) {
    operator delete(*(void **)(v84 + 3584));
  }
  if (*(char *)(v84 + 3639) < 0) {
    operator delete(*(void **)(v84 + 3616));
  }
  if (*(char *)(v84 + 3663) < 0) {
    operator delete(*(void **)(v84 + 3640));
  }
  if (*(char *)(v84 + 3695) < 0) {
    operator delete(*(void **)(v84 + 3672));
  }
  if (*(char *)(v84 + 3719) < 0) {
    operator delete(*(void **)(v84 + 3696));
  }
  if (*(char *)(v84 + 3751) < 0) {
    operator delete(*(void **)(v84 + 3728));
  }
  if (*(char *)(v84 + 3775) < 0) {
    operator delete(*(void **)(v84 + 3752));
  }
  if (*(char *)(v84 + 3807) < 0) {
    operator delete(*(void **)(v84 + 3784));
  }
  if (*(char *)(v84 + 3831) < 0) {
    operator delete(*(void **)(v84 + 3808));
  }
  if (*(char *)(v84 + 3863) < 0) {
    operator delete(*(void **)(v84 + 3840));
  }
  if (*(char *)(v84 + 3887) < 0) {
    operator delete(*(void **)(v84 + 3864));
  }
  if (*(char *)(v84 + 3919) < 0) {
    operator delete(*(void **)(v84 + 3896));
  }
  if (*(char *)(v84 + 3943) < 0) {
    operator delete(*(void **)(v84 + 3920));
  }
  if (*(char *)(v84 + 3975) < 0) {
    operator delete(*(void **)(v84 + 3952));
  }
  if (*(char *)(v84 + 3999) < 0) {
    operator delete(*(void **)(v84 + 3976));
  }
  if (*(char *)(v84 + 4031) < 0) {
    operator delete(*(void **)(v84 + 4008));
  }
  if (*(char *)(v84 + 4055) < 0) {
    operator delete(*(void **)(v84 + 4032));
  }
  if (*(char *)(v84 + 4087) < 0) {
    operator delete(*(void **)(v84 + 4064));
  }
  if (*(char *)(v83 + 23) < 0) {
    operator delete(*(void **)v83);
  }
  if (*(char *)(v83 + 55) < 0) {
    operator delete(*(void **)(v83 + 32));
  }
  if (*(char *)(v83 + 79) < 0) {
    operator delete(*(void **)(v83 + 56));
  }
  if (*(char *)(v83 + 111) < 0) {
    operator delete(*(void **)(v83 + 88));
  }
  if (*(char *)(v83 + 135) < 0) {
    operator delete(*(void **)(v83 + 112));
  }
  if (*(char *)(v83 + 167) < 0) {
    operator delete(*(void **)(v83 + 144));
  }
  if (*(char *)(v83 + 191) < 0) {
    operator delete(*(void **)(v83 + 168));
  }
  if (*(char *)(v83 + 223) < 0) {
    operator delete(*(void **)(v83 + 200));
  }
  if (*(char *)(v83 + 247) < 0) {
    operator delete(*(void **)(v83 + 224));
  }
  if (*(char *)(v83 + 279) < 0) {
    operator delete(*(void **)(v83 + 256));
  }
  if (*(char *)(v83 + 303) < 0) {
    operator delete(*(void **)(v83 + 280));
  }
  if (*(char *)(v83 + 335) < 0) {
    operator delete(*(void **)(v83 + 312));
  }
  if (*(char *)(v83 + 359) < 0) {
    operator delete(*(void **)(v83 + 336));
  }
  if (*(char *)(v83 + 391) < 0) {
    operator delete(*(void **)(v83 + 368));
  }
  if (*(char *)(v83 + 415) < 0) {
    operator delete(*(void **)(v83 + 392));
  }
  if (*(char *)(v83 + 447) < 0) {
    operator delete(*(void **)(v83 + 424));
  }
  if (*(char *)(v83 + 471) < 0) {
    operator delete(*(void **)(v83 + 448));
  }
  if (*(char *)(v83 + 503) < 0) {
    operator delete(*(void **)(v83 + 480));
  }
  if (*(char *)(v83 + 527) < 0) {
    operator delete(*(void **)(v83 + 504));
  }
  if (*(char *)(v83 + 559) < 0) {
    operator delete(*(void **)(v83 + 536));
  }
  if (*(char *)(v83 + 583) < 0) {
    operator delete(*(void **)(v83 + 560));
  }
  if (*(char *)(v83 + 615) < 0) {
    operator delete(*(void **)(v83 + 592));
  }
  if (*(char *)(v83 + 639) < 0) {
    operator delete(*(void **)(v83 + 616));
  }
  if (*(char *)(v83 + 671) < 0) {
    operator delete(*(void **)(v83 + 648));
  }
  if (*(char *)(v83 + 695) < 0) {
    operator delete(*(void **)(v83 + 672));
  }
  if (*(char *)(v83 + 727) < 0) {
    operator delete(*(void **)(v83 + 704));
  }
  if (*(char *)(v83 + 751) < 0) {
    operator delete(*(void **)(v83 + 728));
  }
  if (*(char *)(v83 + 783) < 0) {
    operator delete(*(void **)(v83 + 760));
  }
  if (*(char *)(v83 + 807) < 0) {
    operator delete(*(void **)(v83 + 784));
  }
  if (*(char *)(v83 + 839) < 0) {
    operator delete(*(void **)(v83 + 816));
  }
  if (*(char *)(v83 + 863) < 0) {
    operator delete(*(void **)(v83 + 840));
  }
  if (*(char *)(v83 + 895) < 0) {
    operator delete(*(void **)(v83 + 872));
  }
  if (*(char *)(v83 + 919) < 0) {
    operator delete(*(void **)(v83 + 896));
  }
  if (*(char *)(v83 + 951) < 0) {
    operator delete(*(void **)(v83 + 928));
  }
  if (*(char *)(v83 + 975) < 0) {
    operator delete(*(void **)(v83 + 952));
  }
  if (*(char *)(v83 + 1007) < 0) {
    operator delete(*(void **)(v83 + 984));
  }
  if (*(char *)(v83 + 1031) < 0) {
    operator delete(*(void **)(v83 + 1008));
  }
  if (*(char *)(v83 + 1063) < 0) {
    operator delete(*(void **)(v83 + 1040));
  }
  if (*(char *)(v83 + 1087) < 0) {
    operator delete(*(void **)(v83 + 1064));
  }
  if (*(char *)(v83 + 1119) < 0) {
    operator delete(*(void **)(v83 + 1096));
  }
  if (*(char *)(v83 + 1143) < 0) {
    operator delete(*(void **)(v83 + 1120));
  }
  if (*(char *)(v83 + 1175) < 0) {
    operator delete(*(void **)(v83 + 1152));
  }
  if (*(char *)(v83 + 1199) < 0) {
    operator delete(*(void **)(v83 + 1176));
  }
  if (*(char *)(v83 + 1231) < 0) {
    operator delete(*(void **)(v83 + 1208));
  }
  if (*(char *)(v83 + 1255) < 0) {
    operator delete(*(void **)(v83 + 1232));
  }
  if (*(char *)(v83 + 1287) < 0) {
    operator delete(*(void **)(v83 + 1264));
  }
  if (*(char *)(v83 + 1311) < 0) {
    operator delete(*(void **)(v83 + 1288));
  }
  if (*(char *)(v83 + 1343) < 0) {
    operator delete(*(void **)(v83 + 1320));
  }
  if (*(char *)(v83 + 1367) < 0) {
    operator delete(*(void **)(v83 + 1344));
  }
  if (*(char *)(v83 + 1399) < 0) {
    operator delete(*(void **)(v83 + 1376));
  }
  if (*(char *)(v83 + 1423) < 0) {
    operator delete(*(void **)(v83 + 1400));
  }
  if (*(char *)(v83 + 1455) < 0) {
    operator delete(*(void **)(v83 + 1432));
  }
  if (*(char *)(v83 + 1479) < 0) {
    operator delete(*(void **)(v83 + 1456));
  }
  if (*(char *)(v83 + 1511) < 0) {
    operator delete(*(void **)(v83 + 1488));
  }
  if (*(char *)(v83 + 1535) < 0) {
    operator delete(*(void **)(v83 + 1512));
  }
  if (*(char *)(v83 + 1567) < 0) {
    operator delete(*(void **)(v83 + 1544));
  }
  if (*(char *)(v83 + 1591) < 0) {
    operator delete(*(void **)(v83 + 1568));
  }
  if (*(char *)(v83 + 1623) < 0) {
    operator delete(*(void **)(v83 + 1600));
  }
  if (*(char *)(v83 + 1647) < 0) {
    operator delete(*(void **)(v83 + 1624));
  }
  if (*(char *)(v83 + 1679) < 0) {
    operator delete(*(void **)(v83 + 1656));
  }
  if (*(char *)(v83 + 1703) < 0) {
    operator delete(*(void **)(v83 + 1680));
  }
  if (*(char *)(v83 + 1735) < 0) {
    operator delete(*(void **)(v83 + 1712));
  }
  if (*(char *)(v83 + 1759) < 0) {
    operator delete(*(void **)(v83 + 1736));
  }
  if (*(char *)(v83 + 1791) < 0) {
    operator delete(*(void **)(v83 + 1768));
  }
  if (*(char *)(v83 + 1815) < 0) {
    operator delete(*(void **)(v83 + 1792));
  }
  if (*(char *)(v83 + 1847) < 0) {
    operator delete(*(void **)(v83 + 1824));
  }
  if (*(char *)(v83 + 1871) < 0) {
    operator delete(*(void **)(v83 + 1848));
  }
  if (*(char *)(v83 + 1903) < 0) {
    operator delete(*(void **)(v83 + 1880));
  }
  if (*(char *)(v83 + 1927) < 0) {
    operator delete(*(void **)(v83 + 1904));
  }
  if (*(char *)(v83 + 1959) < 0) {
    operator delete(*(void **)(v83 + 1936));
  }
  if (*(char *)(v83 + 1983) < 0) {
    operator delete(*(void **)(v83 + 1960));
  }
  if (*(char *)(v83 + 2015) < 0) {
    operator delete(*(void **)(v83 + 1992));
  }
  if (*(char *)(v83 + 2039) < 0) {
    operator delete(*(void **)(v83 + 2016));
  }
  if (*(char *)(v83 + 2071) < 0) {
    operator delete(*(void **)(v83 + 2048));
  }
  if (*(char *)(v83 + 2095) < 0) {
    operator delete(*(void **)(v83 + 2072));
  }
  if (*(char *)(v83 + 2127) < 0) {
    operator delete(*(void **)(v83 + 2104));
  }
  if (*(char *)(v83 + 2151) < 0) {
    operator delete(*(void **)(v83 + 2128));
  }
  if (*(char *)(v83 + 2183) < 0) {
    operator delete(*(void **)(v83 + 2160));
  }
  if (*(char *)(v83 + 2207) < 0) {
    operator delete(*(void **)(v83 + 2184));
  }
  if (*(char *)(v83 + 2239) < 0) {
    operator delete(*(void **)(v83 + 2216));
  }
  if (*(char *)(v83 + 2263) < 0) {
    operator delete(*(void **)(v83 + 2240));
  }
  if (*(char *)(v83 + 2295) < 0) {
    operator delete(*(void **)(v83 + 2272));
  }
  if (*(char *)(v83 + 2319) < 0) {
    operator delete(*(void **)(v83 + 2296));
  }
  if (*(char *)(v83 + 2351) < 0) {
    operator delete(*(void **)(v83 + 2328));
  }
  if (*(char *)(v83 + 2375) < 0) {
    operator delete(*(void **)(v83 + 2352));
  }
  if (*(char *)(v83 + 2407) < 0) {
    operator delete(*(void **)(v83 + 2384));
  }
  if (*(char *)(v83 + 2431) < 0) {
    operator delete(*(void **)(v83 + 2408));
  }
  if (*(char *)(v83 + 2463) < 0) {
    operator delete(*(void **)(v83 + 2440));
  }
  if (*(char *)(v83 + 2487) < 0) {
    operator delete(*(void **)(v83 + 2464));
  }
  if (*(char *)(v83 + 2519) < 0) {
    operator delete(*(void **)(v83 + 2496));
  }
  if (*(char *)(v83 + 2543) < 0) {
    operator delete(*(void **)(v83 + 2520));
  }
  if (*(char *)(v83 + 2575) < 0) {
    operator delete(*(void **)(v83 + 2552));
  }
  if (*(char *)(v83 + 2599) < 0) {
    operator delete(*(void **)(v83 + 2576));
  }
  if (*(char *)(v83 + 2631) < 0) {
    operator delete(*(void **)(v83 + 2608));
  }
  if (*(char *)(v83 + 2655) < 0) {
    operator delete(*(void **)(v83 + 2632));
  }
  if (*(char *)(v83 + 2687) < 0) {
    operator delete(*(void **)(v83 + 2664));
  }
  if (*(char *)(v83 + 2711) < 0) {
    operator delete(*(void **)(v83 + 2688));
  }
  if (*(char *)(v83 + 2743) < 0) {
    operator delete(*(void **)(v83 + 2720));
  }
  if (*(char *)(v83 + 2767) < 0) {
    operator delete(*(void **)(v83 + 2744));
  }
  if (*(char *)(v83 + 2799) < 0) {
    operator delete(*(void **)(v83 + 2776));
  }
  if (*(char *)(v83 + 2823) < 0) {
    operator delete(*(void **)(v83 + 2800));
  }
  if (*(char *)(v83 + 2855) < 0) {
    operator delete(*(void **)(v83 + 2832));
  }
  if (*(char *)(v83 + 2879) < 0) {
    operator delete(*(void **)(v83 + 2856));
  }
  if (*(char *)(v83 + 2911) < 0) {
    operator delete(*(void **)(v83 + 2888));
  }
  if (*(char *)(v83 + 2935) < 0) {
    operator delete(*(void **)(v83 + 2912));
  }
  if (*(char *)(v83 + 2967) < 0) {
    operator delete(*(void **)(v83 + 2944));
  }
  if (*(char *)(v83 + 2991) < 0) {
    operator delete(*(void **)(v83 + 2968));
  }
  if (*(char *)(v83 + 3023) < 0) {
    operator delete(*(void **)(v83 + 3000));
  }
  if (*(char *)(v83 + 3047) < 0) {
    operator delete(*(void **)(v83 + 3024));
  }
  if (*(char *)(v83 + 3079) < 0) {
    operator delete(*(void **)(v83 + 3056));
  }
  if (*(char *)(v83 + 3103) < 0) {
    operator delete(*(void **)(v83 + 3080));
  }
  if (*(char *)(v83 + 3135) < 0) {
    operator delete(*(void **)(v83 + 3112));
  }
  if (*(char *)(v83 + 3159) < 0) {
    operator delete(*(void **)(v83 + 3136));
  }
  if (*(char *)(v83 + 3191) < 0) {
    operator delete(*(void **)(v83 + 3168));
  }
  if (*(char *)(v83 + 3215) < 0) {
    operator delete(*(void **)(v83 + 3192));
  }
  if (*(char *)(v83 + 3247) < 0) {
    operator delete(*(void **)(v83 + 3224));
  }
  if (*(char *)(v83 + 3271) < 0) {
    operator delete(*(void **)(v83 + 3248));
  }
  if (*(char *)(v83 + 3303) < 0) {
    operator delete(*(void **)(v83 + 3280));
  }
  if (*(char *)(v83 + 3327) < 0) {
    operator delete(*(void **)(v83 + 3304));
  }
  if (*(char *)(v83 + 3359) < 0) {
    operator delete(*(void **)(v83 + 3336));
  }
  if (*(char *)(v83 + 3383) < 0) {
    operator delete(*(void **)(v83 + 3360));
  }
  if (*(char *)(v83 + 3415) < 0) {
    operator delete(*(void **)(v83 + 3392));
  }
  if (*(char *)(v83 + 3439) < 0) {
    operator delete(*(void **)(v83 + 3416));
  }
  if (*(char *)(v83 + 3471) < 0) {
    operator delete(*(void **)(v83 + 3448));
  }
  if (*(char *)(v83 + 3495) < 0) {
    operator delete(*(void **)(v83 + 3472));
  }
  if (*(char *)(v83 + 3527) < 0) {
    operator delete(*(void **)(v83 + 3504));
  }
  if (*(char *)(v83 + 3551) < 0) {
    operator delete(*(void **)(v83 + 3528));
  }
  if (*(char *)(v83 + 3583) < 0) {
    operator delete(*(void **)(v83 + 3560));
  }
  if (*(char *)(v83 + 3607) < 0) {
    operator delete(*(void **)(v83 + 3584));
  }
  if (*(char *)(v83 + 3639) < 0) {
    operator delete(*(void **)(v83 + 3616));
  }
  if (*(char *)(v83 + 3663) < 0) {
    operator delete(*(void **)(v83 + 3640));
  }
  if (*(char *)(v83 + 3695) < 0) {
    operator delete(*(void **)(v83 + 3672));
  }
  if (*(char *)(v83 + 3719) < 0) {
    operator delete(*(void **)(v83 + 3696));
  }
  if (*(char *)(v83 + 3751) < 0) {
    operator delete(*(void **)(v83 + 3728));
  }
  if (*(char *)(v83 + 3775) < 0) {
    operator delete(*(void **)(v83 + 3752));
  }
  if (*(char *)(v83 + 3807) < 0) {
    operator delete(*(void **)(v83 + 3784));
  }
  if (*(char *)(v83 + 3831) < 0) {
    operator delete(*(void **)(v83 + 3808));
  }
  if (*(char *)(v83 + 3863) < 0) {
    operator delete(*(void **)(v83 + 3840));
  }
  if (*(char *)(v83 + 3887) < 0) {
    operator delete(*(void **)(v83 + 3864));
  }
  if (*(char *)(v83 + 3919) < 0) {
    operator delete(*(void **)(v83 + 3896));
  }
  if (*(char *)(v83 + 3943) < 0) {
    operator delete(*(void **)(v83 + 3920));
  }
  if (*(char *)(v83 + 3975) < 0) {
    operator delete(*(void **)(v83 + 3952));
  }
  if (*(char *)(v83 + 3999) < 0) {
    operator delete(*(void **)(v83 + 3976));
  }
  if (*(char *)(v83 + 4031) < 0) {
    operator delete(*(void **)(v83 + 4008));
  }
  if (*(char *)(v83 + 4055) < 0) {
    operator delete(*(void **)(v83 + 4032));
  }
  if (*(char *)(v83 + 4087) < 0) {
    operator delete(*(void **)(v83 + 4064));
  }
  if (*(char *)(v82 + 23) < 0) {
    operator delete(*(void **)v82);
  }
  if (*(char *)(v82 + 55) < 0) {
    operator delete(*(void **)(v82 + 32));
  }
  if (*(char *)(v82 + 79) < 0) {
    operator delete(*(void **)(v82 + 56));
  }
  if (*(char *)(v82 + 111) < 0) {
    operator delete(*(void **)(v82 + 88));
  }
  if (*(char *)(v82 + 135) < 0) {
    operator delete(*(void **)(v82 + 112));
  }
  if (*(char *)(v82 + 167) < 0) {
    operator delete(*(void **)(v82 + 144));
  }
  if (*(char *)(v82 + 191) < 0) {
    operator delete(*(void **)(v82 + 168));
  }
  if (*(char *)(v82 + 223) < 0) {
    operator delete(*(void **)(v82 + 200));
  }
  if (*(char *)(v82 + 247) < 0) {
    operator delete(*(void **)(v82 + 224));
  }
  if (*(char *)(v82 + 279) < 0) {
    operator delete(*(void **)(v82 + 256));
  }
  if (*(char *)(v82 + 303) < 0) {
    operator delete(*(void **)(v82 + 280));
  }
  if (*(char *)(v82 + 335) < 0) {
    operator delete(*(void **)(v82 + 312));
  }
  if (*(char *)(v82 + 359) < 0) {
    operator delete(*(void **)(v82 + 336));
  }
  if (*(char *)(v82 + 391) < 0) {
    operator delete(*(void **)(v82 + 368));
  }
  if (*(char *)(v82 + 415) < 0) {
    operator delete(*(void **)(v82 + 392));
  }
  if (*(char *)(v82 + 447) < 0) {
    operator delete(*(void **)(v82 + 424));
  }
  if (*(char *)(v82 + 471) < 0) {
    operator delete(*(void **)(v82 + 448));
  }
  if (*(char *)(v82 + 503) < 0) {
    operator delete(*(void **)(v82 + 480));
  }
  if (*(char *)(v82 + 527) < 0) {
    operator delete(*(void **)(v82 + 504));
  }
  if (*(char *)(v82 + 559) < 0) {
    operator delete(*(void **)(v82 + 536));
  }
  if (*(char *)(v82 + 583) < 0) {
    operator delete(*(void **)(v82 + 560));
  }
  if (*(char *)(v82 + 615) < 0) {
    operator delete(*(void **)(v82 + 592));
  }
  if (*(char *)(v82 + 639) < 0) {
    operator delete(*(void **)(v82 + 616));
  }
  if (*(char *)(v82 + 671) < 0) {
    operator delete(*(void **)(v82 + 648));
  }
  if (*(char *)(v82 + 695) < 0) {
    operator delete(*(void **)(v82 + 672));
  }
  if (*(char *)(v82 + 727) < 0) {
    operator delete(*(void **)(v82 + 704));
  }
  if (*(char *)(v82 + 751) < 0) {
    operator delete(*(void **)(v82 + 728));
  }
  if (*(char *)(v82 + 783) < 0) {
    operator delete(*(void **)(v82 + 760));
  }
  if (*(char *)(v82 + 807) < 0) {
    operator delete(*(void **)(v82 + 784));
  }
  if (*(char *)(v82 + 839) < 0) {
    operator delete(*(void **)(v82 + 816));
  }
  if (*(char *)(v82 + 863) < 0) {
    operator delete(*(void **)(v82 + 840));
  }
  if (*(char *)(v82 + 895) < 0) {
    operator delete(*(void **)(v82 + 872));
  }
  if (*(char *)(v82 + 919) < 0) {
    operator delete(*(void **)(v82 + 896));
  }
  if (*(char *)(v82 + 951) < 0) {
    operator delete(*(void **)(v82 + 928));
  }
  if (*(char *)(v82 + 975) < 0) {
    operator delete(*(void **)(v82 + 952));
  }
  if (*(char *)(v82 + 1007) < 0) {
    operator delete(*(void **)(v82 + 984));
  }
  if (*(char *)(v82 + 1031) < 0) {
    operator delete(*(void **)(v82 + 1008));
  }
  if (*(char *)(v82 + 1063) < 0) {
    operator delete(*(void **)(v82 + 1040));
  }
  if (*(char *)(v82 + 1087) < 0) {
    operator delete(*(void **)(v82 + 1064));
  }
  if (*(char *)(v82 + 1119) < 0) {
    operator delete(*(void **)(v82 + 1096));
  }
  if (*(char *)(v82 + 1143) < 0) {
    operator delete(*(void **)(v82 + 1120));
  }
  if (*(char *)(v82 + 1175) < 0) {
    operator delete(*(void **)(v82 + 1152));
  }
  if (*(char *)(v82 + 1199) < 0) {
    operator delete(*(void **)(v82 + 1176));
  }
  if (*(char *)(v82 + 1231) < 0) {
    operator delete(*(void **)(v82 + 1208));
  }
  if (*(char *)(v82 + 1255) < 0) {
    operator delete(*(void **)(v82 + 1232));
  }
  if (*(char *)(v82 + 1287) < 0) {
    operator delete(*(void **)(v82 + 1264));
  }
  if (*(char *)(v82 + 1311) < 0) {
    operator delete(*(void **)(v82 + 1288));
  }
  if (*(char *)(v82 + 1343) < 0) {
    operator delete(*(void **)(v82 + 1320));
  }
  if (*(char *)(v82 + 1367) < 0) {
    operator delete(*(void **)(v82 + 1344));
  }
  if (*(char *)(v82 + 1399) < 0) {
    operator delete(*(void **)(v82 + 1376));
  }
  if (*(char *)(v82 + 1423) < 0) {
    operator delete(*(void **)(v82 + 1400));
  }
  if (*(char *)(v82 + 1455) < 0) {
    operator delete(*(void **)(v82 + 1432));
  }
  if (*(char *)(v82 + 1479) < 0) {
    operator delete(*(void **)(v82 + 1456));
  }
  if (*(char *)(v82 + 1511) < 0) {
    operator delete(*(void **)(v82 + 1488));
  }
  if (*(char *)(v82 + 1535) < 0) {
    operator delete(*(void **)(v82 + 1512));
  }
  if (*(char *)(v82 + 1567) < 0) {
    operator delete(*(void **)(v82 + 1544));
  }
  _Unwind_Resume(a1);
}

void sub_18AE44C()
{
}

void sub_18AE458()
{
}

void sub_18AE468()
{
}

void sub_18AE474()
{
}

void sub_18AE484()
{
}

void sub_18AE490()
{
}

void sub_18AE4A0()
{
}

void sub_18AE4AC()
{
}

void sub_18AE4BC()
{
}

void sub_18AE4C8()
{
}

void sub_18AE4D8()
{
}

void sub_18AE4E4()
{
}

void sub_18AE4F4()
{
}

void sub_18AE500()
{
}

void sub_18AE510()
{
}

void sub_18AE51C()
{
}

void sub_18AE52C()
{
}

void sub_18AE538()
{
}

void sub_18AE548()
{
}

void sub_18AE554()
{
}

void sub_18AE564()
{
}

void sub_18AE570()
{
}

void sub_18AE580()
{
}

void sub_18AE58C()
{
}

void sub_18AE59C()
{
}

void sub_18AE5A8()
{
}

void sub_18AE5B8()
{
}

void sub_18AE5C4()
{
}

void sub_18AE5D4()
{
}

void sub_18AE5E0()
{
}

void sub_18AE5F0()
{
}

void sub_18AE5FC()
{
}

void sub_18AE60C()
{
}

void sub_18AE618()
{
}

void sub_18AE628()
{
}

void sub_18AE634()
{
}

void sub_18AE644()
{
}

void sub_18AE650()
{
}

void sub_18AE660()
{
}

void sub_18AE66C()
{
}

void sub_18AE67C()
{
}

void sub_18AE688()
{
}

void sub_18AE698()
{
}

void sub_18AE6A4()
{
}

void sub_18AE6B4()
{
}

void sub_18AE6C0()
{
}

void sub_18AE6D0()
{
}

void sub_18AE6DC()
{
}

void sub_18AE6EC()
{
}

void sub_18AE6F8()
{
}

void sub_18AE708()
{
}

void sub_18AE714()
{
}

void sub_18AE724()
{
}

void sub_18AE730()
{
}

void sub_18AE740()
{
}

void sub_18AE74C()
{
}

void sub_18AE75C()
{
}

void sub_18AE768()
{
}

void sub_18AE778()
{
}

void sub_18AE784()
{
}

void sub_18AE794()
{
}

void sub_18AE7A0()
{
}

void sub_18AE7B0()
{
}

void sub_18AE7BC()
{
}

void sub_18AE7CC()
{
}

void sub_18AE7D8()
{
}

void sub_18AE7E8()
{
}

void sub_18AE7F4()
{
}

void sub_18AE804()
{
}

void sub_18AE810()
{
}

void sub_18AE820()
{
}

void sub_18AE82C()
{
}

void sub_18AE83C()
{
}

void sub_18AE848()
{
}

void sub_18AE858()
{
}

void sub_18AE864()
{
}

void sub_18AE874()
{
}

void sub_18AE880()
{
}

void sub_18AE890()
{
}

void sub_18AE89C()
{
}

void sub_18AE8AC()
{
}

void sub_18AE8B8()
{
}

void sub_18AE8C8()
{
}

void sub_18AE8D4()
{
}

void sub_18AE8E4()
{
}

void sub_18AE8F0()
{
}

void sub_18AE900()
{
}

void sub_18AE90C()
{
}

void sub_18AE91C()
{
}

void sub_18AE928()
{
}

void sub_18AE938()
{
}

void sub_18AE944()
{
}

void sub_18AE954()
{
}

void sub_18AE960()
{
}

void sub_18AE970()
{
}

void sub_18AE97C()
{
}

void sub_18AE98C()
{
}

void sub_18AE998()
{
}

void sub_18AE9A8()
{
}

void sub_18AE9B4()
{
}

void sub_18AE9C4()
{
}

void sub_18AE9D0()
{
}

void sub_18AE9E0()
{
}

void sub_18AE9EC()
{
}

void sub_18AE9FC()
{
}

void sub_18AEA08()
{
}

void sub_18AEA18()
{
}

void sub_18AEA24()
{
}

void sub_18AEA34()
{
}

void sub_18AEA40()
{
}

void sub_18AEA50()
{
}

void sub_18AEA5C()
{
}

void sub_18AEA6C()
{
}

void sub_18AEA78()
{
}

void sub_18AEA88()
{
}

void sub_18AEA94()
{
}

void sub_18AEAA4()
{
}

void sub_18AEAB0()
{
}

void sub_18AEAC0()
{
}

void sub_18AEACC()
{
}

void sub_18AEADC()
{
}

void sub_18AEAE8()
{
}

void sub_18AEAF8()
{
}

void sub_18AEB04()
{
}

void sub_18AEB14()
{
}

void sub_18AEB20()
{
}

void sub_18AEB30()
{
}

void sub_18AEB3C()
{
}

void sub_18AEB4C()
{
}

void sub_18AEB58()
{
}

void sub_18AEB68()
{
}

void sub_18AEB74()
{
}

void sub_18AEB84()
{
}

void sub_18AEB90()
{
}

void sub_18AEBA0()
{
}

void sub_18AEBAC()
{
}

void sub_18AEBBC()
{
}

void sub_18AEBC8()
{
}

void sub_18AEBD8()
{
}

void sub_18AEBE4()
{
}

void sub_18AEBF4()
{
}

void sub_18AEC00()
{
}

void sub_18AEC10()
{
}

void sub_18AEC1C()
{
}

void sub_18AEC2C()
{
}

void sub_18AEC38()
{
}

void sub_18AEC48()
{
}

void sub_18AEC54()
{
}

void sub_18AEC64()
{
}

void sub_18AEC70()
{
}

void sub_18AEC80()
{
}

void sub_18AEC8C()
{
}

void sub_18AEC9C()
{
}

void sub_18AECA8()
{
}

void sub_18AECB8()
{
}

void sub_18AECC4()
{
}

void sub_18AECD4()
{
}

void sub_18AECE0()
{
}

void sub_18AECF0()
{
}

void sub_18AECFC()
{
}

void sub_18AED0C()
{
}

void sub_18AED18()
{
}

void sub_18AED28()
{
}

void sub_18AED34()
{
}

void sub_18AED44()
{
}

void sub_18AED50()
{
}

void sub_18AED60()
{
}

void sub_18AED6C()
{
}

void sub_18AED7C()
{
}

void sub_18AED88()
{
}

void sub_18AED98()
{
}

void sub_18AEDA4()
{
}

void sub_18AEDB4()
{
}

void sub_18AEDC0()
{
}

void sub_18AEDD0()
{
}

void sub_18AEDDC()
{
}

void sub_18AEDEC()
{
}

void sub_18AEDF8()
{
}

void sub_18AEE08()
{
}

void sub_18AEE14()
{
}

void sub_18AEE24()
{
}

void sub_18AEE30()
{
}

void sub_18AEE40()
{
}

void sub_18AEE4C()
{
}

void sub_18AEE5C()
{
}

void sub_18AEE68()
{
}

void sub_18AEE78()
{
}

void sub_18AEE84()
{
}

void sub_18AEE94()
{
}

void sub_18AEEA0()
{
}

void sub_18AEEB0()
{
}

void sub_18AEEBC()
{
}

void sub_18AEECC()
{
}

void sub_18AEED8()
{
}

void sub_18AEEE8()
{
}

void sub_18AEEF4()
{
}

void sub_18AEF04()
{
}

void sub_18AEF10()
{
}

void sub_18AEF20()
{
}

void sub_18AEF2C()
{
}

void sub_18AEF3C()
{
}

void sub_18AEF48()
{
}

void sub_18AEF58()
{
}

void sub_18AEF64()
{
}

void sub_18AEF74()
{
}

void sub_18AEF80()
{
}

void sub_18AEF90()
{
}

void sub_18AEF9C()
{
}

void sub_18AEFAC()
{
}

void sub_18AEFB8()
{
}

void sub_18AEFC8()
{
}

void sub_18AEFD4()
{
}

void sub_18AEFE4()
{
}

void sub_18AEFF0()
{
}

void sub_18AF000()
{
}

void sub_18AF00C()
{
}

void sub_18AF01C()
{
}

void sub_18AF028()
{
}

void sub_18AF038()
{
}

void sub_18AF044()
{
}

void sub_18AF054()
{
}

void sub_18AF060()
{
}

void sub_18AF070()
{
}

void sub_18AF07C()
{
}

void sub_18AF08C()
{
}

void sub_18AF098()
{
}

void sub_18AF0A8()
{
}

void sub_18AF0B4()
{
}

void sub_18AF0C4()
{
}

void sub_18AF0D0()
{
}

void sub_18AF0E0()
{
}

void sub_18AF0EC()
{
}

void sub_18AF0FC()
{
}

void sub_18AF108()
{
}

void sub_18AF118()
{
}

void sub_18AF124()
{
}

void sub_18AF134()
{
}

void sub_18AF140()
{
}

void sub_18AF150()
{
}

void sub_18AF15C()
{
}

void sub_18AF16C()
{
}

void sub_18AF178()
{
}

void sub_18AF188()
{
}

void sub_18AF194()
{
}

void sub_18AF1A4()
{
}

void sub_18AF1B0()
{
}

void sub_18AF1C0()
{
}

void sub_18AF1CC()
{
}

void sub_18AF1DC()
{
}

void sub_18AF1E8()
{
}

void sub_18AF1F8()
{
}

void sub_18AF204()
{
}

void sub_18AF214()
{
}

void sub_18AF220()
{
}

void sub_18AF230()
{
}

void sub_18AF23C()
{
}

void sub_18AF24C()
{
}

void sub_18AF258()
{
}

void sub_18AF268()
{
}

void sub_18AF274()
{
}

void sub_18AF284()
{
}

void sub_18AF290()
{
}

void sub_18AF2A0()
{
}

void sub_18AF2AC()
{
}

void sub_18AF2BC()
{
}

void sub_18AF2C8()
{
}

void sub_18AF2D8()
{
}

void sub_18AF2E4()
{
}

void sub_18AF2F4()
{
}

void sub_18AF300()
{
}

void sub_18AF310()
{
}

void sub_18AF31C()
{
}

void sub_18AF32C()
{
}

void sub_18AF338()
{
}

void sub_18AF348()
{
}

void sub_18AF354()
{
}

void sub_18AF364()
{
}

void sub_18AF370()
{
}

void sub_18AF380()
{
}

void sub_18AF38C()
{
}

void sub_18AF398()
{
}

void sub_18AF3A4()
{
}

void sub_18AF3B0()
{
}

void sub_18AF3C0()
{
}

void sub_18AF3CC()
{
}

void sub_18AF3DC()
{
}

void sub_18AF3E8()
{
}

void sub_18AF3F8()
{
}

void sub_18AF404()
{
}

void sub_18AF414()
{
}

void sub_18AF420()
{
}

void sub_18AF430()
{
}

void sub_18AF43C()
{
}

void sub_18AF44C()
{
}

void sub_18AF458()
{
}

void sub_18AF468()
{
}

void sub_18AF474()
{
}

void sub_18AF484()
{
}

void sub_18AF490()
{
}

void sub_18AF4A0()
{
}

void sub_18AF4AC()
{
}

void sub_18AF4BC()
{
}

void sub_18AF4C8()
{
}

void sub_18AF4D8()
{
}

void sub_18AF4E4()
{
}

void sub_18AF4F4()
{
}

void sub_18AF500()
{
}

void sub_18AF510()
{
}

void sub_18AF51C()
{
}

void sub_18AF52C()
{
}

void sub_18AF538()
{
}

void sub_18AF548()
{
}

void sub_18AF554()
{
}

void sub_18AF564()
{
}

void sub_18AF570()
{
}

void sub_18AF580()
{
}

void sub_18AF58C()
{
}

void sub_18AF59C()
{
}

void sub_18AF5A8()
{
}

void sub_18AF5B8()
{
}

void sub_18AF5C4()
{
}

void sub_18AF5D4()
{
}

void sub_18AF5E0()
{
}

void sub_18AF5F0()
{
}

void sub_18AF5FC()
{
}

void sub_18AF60C()
{
}

void sub_18AF618()
{
}

void sub_18AF628()
{
}

void sub_18AF634()
{
}

void sub_18AF644()
{
}

void sub_18AF650()
{
}

void sub_18AF660()
{
}

void sub_18AF66C()
{
}

void sub_18AF67C()
{
}

void sub_18AF688()
{
}

void sub_18AF698()
{
}

void sub_18AF6A4()
{
}

void sub_18AF6B4()
{
}

void sub_18AF6C0()
{
}

void sub_18AF6D0()
{
}

void sub_18AF6DC()
{
}

void sub_18AF6EC()
{
}

void sub_18AF6F8()
{
}

void sub_18AF708()
{
}

void sub_18AF714()
{
}

void sub_18AF724()
{
}

void sub_18AF730()
{
}

void sub_18AF740()
{
}

void sub_18AF74C()
{
}

void sub_18AF75C()
{
}

void sub_18AF768()
{
}

void sub_18AF778()
{
}

void sub_18AF784()
{
}

void sub_18AF794()
{
}

void sub_18AF7A0()
{
}

void sub_18AF7B0()
{
}

void sub_18AF7BC()
{
}

void sub_18AF7CC()
{
}

void sub_18AF7D8()
{
}

void sub_18AF7E8()
{
}

void sub_18AF7F4()
{
}

void sub_18AF804()
{
}

void sub_18AF810()
{
}

void sub_18AF820()
{
}

void sub_18AF82C()
{
}

void sub_18AF83C()
{
}

void sub_18AF848()
{
}

void sub_18AF858()
{
}

void sub_18AF864()
{
}

void sub_18AF874()
{
}

void sub_18AF880()
{
}

void sub_18AF890()
{
}

void sub_18AF89C()
{
}

void sub_18AF8AC()
{
}

void sub_18AF8B8()
{
}

void sub_18AF8C8()
{
}

void sub_18AF8D4()
{
}

void sub_18AF8E4()
{
}

void sub_18AF8F0()
{
}

void sub_18AF900()
{
}

void sub_18AF90C()
{
}

void sub_18AF91C()
{
}

void sub_18AF928()
{
}

void sub_18AF938()
{
}

void sub_18AF944()
{
}

void sub_18AF954()
{
}

void sub_18AF960()
{
}

void sub_18AF970()
{
}

void sub_18AF97C()
{
}

void sub_18AF98C()
{
}

void sub_18AF998()
{
}

void sub_18AF9A8()
{
}

void sub_18AF9B4()
{
}

void sub_18AF9C4()
{
}

void sub_18AF9D0()
{
}

void sub_18AF9E0()
{
}

void sub_18AF9EC()
{
}

void sub_18AF9FC()
{
}

void sub_18AFA08()
{
}

void sub_18AFA18()
{
}

void sub_18AFA24()
{
}

void sub_18AFA34()
{
}

void sub_18AFA40()
{
}

void sub_18AFA50()
{
}

void sub_18AFA5C()
{
}

void sub_18AFA6C()
{
}

void sub_18AFA78()
{
}

void sub_18AFA88()
{
}

void sub_18AFA94()
{
}

void sub_18AFAA4()
{
}

void sub_18AFAB0()
{
}

void sub_18AFAC0()
{
}

void sub_18AFACC()
{
}

void sub_18AFADC()
{
}

void sub_18AFAE8()
{
}

void sub_18AFAF8()
{
}

void sub_18AFB04()
{
}

void sub_18AFB14()
{
}

void sub_18AFB20()
{
}

void sub_18AFB30()
{
}

void sub_18AFB3C()
{
}

void sub_18AFB4C()
{
}

void sub_18AFB58()
{
}

void sub_18AFB68()
{
}

void sub_18AFB74()
{
}

void sub_18AFB84()
{
}

void sub_18AFB90()
{
}

void sub_18AFBA0()
{
}

void sub_18AFBAC()
{
}

void sub_18AFBBC()
{
}

void sub_18AFBC8()
{
}

void sub_18AFBD8()
{
}

void sub_18AFBE4()
{
}

void sub_18AFBF4()
{
}

void sub_18AFC00()
{
}

void sub_18AFC10()
{
}

void sub_18AFC1C()
{
}

void sub_18AFC2C()
{
}

void sub_18AFC38()
{
}

void sub_18AFC48()
{
}

void sub_18AFC54()
{
}

void sub_18AFC64()
{
}

void sub_18AFC70()
{
}

void sub_18AFC80()
{
}

void sub_18AFC8C()
{
}

void sub_18AFC9C()
{
}

void sub_18AFCA8()
{
}

void sub_18AFCB8()
{
}

void sub_18AFCC4()
{
}

void sub_18AFCD4()
{
}

void sub_18AFCE0()
{
}

void sub_18AFCF0()
{
}

void sub_18AFCFC()
{
}

void sub_18AFD0C()
{
}

void sub_18AFD18()
{
}

void sub_18AFD28()
{
}

void sub_18AFD34()
{
}

void sub_18AFD44()
{
}

void sub_18AFD50()
{
}

void sub_18AFD60()
{
}

void sub_18AFD6C()
{
}

void sub_18AFD7C()
{
}

void sub_18AFD88()
{
}

void sub_18AFD98()
{
}

void sub_18AFDA4()
{
}

void sub_18AFDB4()
{
}

void sub_18AFDC0()
{
}

void sub_18AFDD0()
{
}

void sub_18AFDDC()
{
}

void sub_18AFDEC()
{
}

void sub_18AFDF8()
{
}

void sub_18AFE08()
{
}

void sub_18AFE14()
{
}

void sub_18AFE24()
{
}

void sub_18AFE30()
{
}

void sub_18AFE40()
{
}

void sub_18AFE4C()
{
}

void sub_18AFE5C()
{
}

void sub_18AFE68()
{
}

void sub_18AFE78()
{
}

void sub_18AFE84()
{
}

void sub_18AFE94()
{
}

void sub_18AFEA0()
{
}

void sub_18AFEB0()
{
}

void sub_18AFEBC()
{
}

void sub_18AFECC()
{
}

void sub_18AFED8()
{
}

void sub_18AFEE4()
{
}

void sub_18AFEF8()
{
}

void sub_18AFF0C()
{
}

void sub_18AFF14()
{
  sub_5E5C(__p, "earthstats.max_elevation");
  qword_2625AF0 = 0;
  qword_2625AF8 = 0;
  qword_2625B00 = 0;
  qword_2625AF0 = (uint64_t)operator new(0x18uLL);
  qword_2625AF8 = qword_2625AF0;
  qword_2625B00 = qword_2625AF0 + 24;
  qword_2625AF8 = (uint64_t)sub_18914E4((uint64_t)&qword_2625B00, (long long *)__p, &v2, (char *)qword_2625AF0);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "earthstats.length");
  qword_2625B08 = 0;
  qword_2625B10 = 0;
  qword_2625B18 = 0;
  qword_2625B08 = (uint64_t)operator new(0x18uLL);
  qword_2625B10 = qword_2625B08;
  qword_2625B18 = qword_2625B08 + 24;
  qword_2625B10 = (uint64_t)sub_18914E4((uint64_t)&qword_2625B18, (long long *)__p, &v2, (char *)qword_2625B08);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_5E5C(__p, "hotelstravel.trainstations");
  qword_2625B20 = 0;
  qword_2625B28 = 0;
  qword_2625B30 = 0;
  qword_2625B20 = (uint64_t)operator new(0x18uLL);
  qword_2625B28 = qword_2625B20;
  qword_2625B30 = qword_2625B20 + 24;
  qword_2625B28 = (uint64_t)sub_18914E4((uint64_t)&qword_2625B30, (long long *)__p, &v2, (char *)qword_2625B20);
  if (v1 < 0) {
    operator delete(__p[0]);
  }
  sub_18A5460();
}

void sub_18B00B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  qword_2625B28 = v16;
  sub_1891624((void ***)&a9);
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void *sub_18B011C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "qu_data_local_store");
}

uint64_t sub_18B012C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_18B0134@<X0>(uint64_t result@<X0>, double **a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  uint64_t v3 = *(void *)result;
  uint64_t v4 = *(void *)(result + 8);
  if (*(void *)result != v4)
  {
    do
    {
      uint64_t result = sub_18E0B20(v3);
      v11[0] = result;
      v11[1] = v7;
      if ((v7 & 0xFF00000000) != 0)
      {
        char v8 = *a2;
        int v9 = a2[1];
        while (v8 != v9)
        {
          uint64_t result = sub_1E433F4((int *)v11, v8);
          if (result)
          {
            unint64_t v10 = a3[1];
            if (v10 >= a3[2])
            {
              uint64_t result = sub_18B07FC(a3, v3);
            }
            else
            {
              sub_18B07A4((uint64_t)a3, v3);
              uint64_t result = v10 + 32;
            }
            a3[1] = result;
            break;
          }
          v8 += 11;
        }
      }
      v3 += 32;
    }
    while (v3 != v4);
  }
  return result;
}

void sub_18B01F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

void sub_18B0214(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_1C356BC(*a3);
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v17 = 0;
  sub_1895738(&v17, *(void *)(v5 + 96), *(void *)(v5 + 104), 0x2E8BA2E8BA2E8BA3 * ((uint64_t)(*(void *)(v5 + 104) - *(void *)(v5 + 96)) >> 3));
  dispatch_group_enter(**(dispatch_group_t **)a2);
  char v6 = *(uint64_t **)a1;
  v23[0] = off_24E6BD8;
  v23[1] = sub_18E0458;
  v23[3] = v23;
  uint64_t v14 = 0;
  long long v13 = 0uLL;
  sub_1895738(&v13, v17, v18, 0x2E8BA2E8BA2E8BA3 * ((v18 - v17) >> 3));
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)&long long v15 = *(void *)a1;
  *((void *)&v15 + 1) = v7;
  if (v7) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v7 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v8 = *(void *)(a2 + 8);
  *(void *)&long long v16 = *(void *)a2;
  *((void *)&v16 + 1) = v8;
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  long long v22 = 0;
  int v9 = (char *)operator new(0x40uLL);
  *(void *)int v9 = off_24E6C88;
  *(_OWORD *)(v9 + 8) = v13;
  *((void *)v9 + 3) = v14;
  long long v13 = 0uLL;
  uint64_t v14 = 0;
  long long v10 = v15;
  long long v15 = 0uLL;
  long long v11 = v16;
  *((_OWORD *)v9 + 2) = v10;
  *((_OWORD *)v9 + 3) = v11;
  long long v16 = 0uLL;
  long long v22 = v9;
  LODWORD(v20) = 10;
  sub_1A272B4(v6, (unsigned int *)&v20, (uint64_t)v23, (uint64_t)v21);
  sub_18B2CB8(v21);
  if (*((void *)&v16 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v16 + 1));
  }
  if (*((void *)&v15 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v15 + 1));
  }
  long long v20 = (void **)&v13;
  sub_189589C(&v20);
  unint64_t v12 = (void ***)sub_18B0D40(v23);
  v23[0] = &v17;
  sub_189589C(v12);
}

void sub_18B0404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_18B2CB8(&a20);
  sub_18B044C((uint64_t)&a9);
  long long v22 = (void ***)sub_18B0D40((void *)(v20 - 72));
  *(void *)(v20 - 72) = &a16;
  sub_189589C(v22);
  _Unwind_Resume(a1);
}

uint64_t sub_18B044C(uint64_t a1)
{
  long long v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2) {
    sub_20A69F0(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 32);
  if (v3) {
    sub_20A69F0(v3);
  }
  uint64_t v5 = (void **)a1;
  sub_189589C(&v5);
  return a1;
}

uint64_t sub_18B049C(uint64_t a1)
{
  *(void *)a1 = &off_24E6B80;
  uint64_t v3 = (void **)(a1 + 8);
  sub_18B0720(&v3);
  return a1;
}

void sub_18B04F4(uint64_t a1)
{
  *(void *)a1 = &off_24E6B80;
  char v1 = (void **)(a1 + 8);
  sub_18B0720(&v1);
  operator delete();
}

void *sub_18B0560(void *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    char v6 = result;
    sub_18959A8(result, a4);
    uint64_t result = (void *)sub_18B05E8((uint64_t)(v6 + 2), a2, a3, v6[1]);
    v6[1] = result;
  }
  return result;
}

void sub_18B05C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
  *(void *)(v9 + 8) = v10;
  sub_18B0720(&a9);
  _Unwind_Resume(a1);
}

uint64_t sub_18B05E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 != a3)
  {
    uint64_t v7 = 0;
    do
    {
      sub_18B066C(a4 + v7, a2 + v7);
      v7 += 48;
    }
    while (a2 + v7 != a3);
    a4 += v7;
  }
  return a4;
}

void sub_18B0648(_Unwind_Exception *exception_object)
{
  if (v2)
  {
    uint64_t v4 = v1 - 48;
    do
    {
      sub_18B06CC((void *)(v4 + v2));
      v2 -= 48;
    }
    while (v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_18B066C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  sub_18967EC((void *)(a1 + 8), *(const void **)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 16) - *(void *)(a2 + 8));
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}

void sub_18B06CC(void *a1)
{
  uint64_t v2 = (std::__shared_weak_count *)a1[5];
  if (v2) {
    sub_20A69F0(v2);
  }
  uint64_t v3 = (void *)a1[1];
  if (v3)
  {
    a1[2] = v3;
    operator delete(v3);
  }
}

void sub_18B0720(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  if (v2)
  {
    uint64_t v4 = v1[1];
    uint64_t v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        v4 -= 6;
        sub_18B06CC(v4);
      }
      while (v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *sub_18B07A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  *(_DWORD *)uint64_t v3 = *(_DWORD *)a2;
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 8) = 0;
  uint64_t result = sub_18967EC((void *)(v3 + 8), *(const void **)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 16) - *(void *)(a2 + 8));
  *(void *)(a1 + 8) = v3 + 32;
  return result;
}

void sub_18B07F4(_Unwind_Exception *a1)
{
  *(void *)(v1 + 8) = v2;
  _Unwind_Resume(a1);
}

uint64_t sub_18B07FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (a1[1] - *a1) >> 5;
  unint64_t v5 = v4 + 1;
  if ((unint64_t)(v4 + 1) >> 59) {
    sub_2E00();
  }
  uint64_t v7 = (uint64_t)(a1 + 2);
  uint64_t v8 = a1[2] - v3;
  if (v8 >> 4 > v5) {
    unint64_t v5 = v8 >> 4;
  }
  if ((unint64_t)v8 >= 0x7FFFFFFFFFFFFFE0) {
    unint64_t v9 = 0x7FFFFFFFFFFFFFFLL;
  }
  else {
    unint64_t v9 = v5;
  }
  uint64_t v17 = a1 + 2;
  if (v9) {
    uint64_t v10 = (char *)sub_18B0970(v7, v9);
  }
  else {
    uint64_t v10 = 0;
  }
  long long v11 = &v10[32 * v4];
  v14[0] = v10;
  v14[1] = v11;
  long long v15 = v11;
  long long v16 = &v10[32 * v9];
  *(_DWORD *)long long v11 = *(_DWORD *)a2;
  *((void *)v11 + 2) = 0;
  *((void *)v11 + 3) = 0;
  *((void *)v11 + 1) = 0;
  sub_18967EC((void *)v11 + 1, *(const void **)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 16) - *(void *)(a2 + 8));
  v15 += 32;
  sub_18B08F8(a1, v14);
  uint64_t v12 = a1[1];
  sub_18B0AD4((uint64_t)v14);
  return v12;
}

void sub_18B08E4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_18B0AD4((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t sub_18B08F8(uint64_t *a1, void *a2)
{
  uint64_t result = sub_18B09A8((uint64_t)(a1 + 2), a1[1], a1[1], *a1, *a1, a2[1], a2[1]);
  a2[1] = v5;
  uint64_t v6 = *a1;
  *a1 = v5;
  a2[1] = v6;
  uint64_t v7 = a1[1];
  a1[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = a1[2];
  a1[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *sub_18B0970(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_188D718();
  }
  return operator new(32 * a2);
}

uint64_t sub_18B09A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7 = a7;
  *(void *)&long long v14 = a6;
  *((void *)&v14 + 1) = a7;
  long long v13 = v14;
  v11[0] = a1;
  v11[1] = &v13;
  void v11[2] = &v14;
  if (a3 == a5)
  {
    uint64_t v9 = a6;
  }
  else
  {
    do
    {
      int v8 = *(_DWORD *)(a3 - 32);
      a3 -= 32;
      *(_DWORD *)(v7 - 32) = v8;
      *(void *)(v7 - 16) = 0;
      *(void *)(v7 - 8) = 0;
      *(void *)(v7 - 24) = 0;
      *(_OWORD *)(v7 - 24) = *(_OWORD *)(a3 + 8);
      *(void *)(v7 - 8) = *(void *)(a3 + 24);
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)(a3 + 24) = 0;
      uint64_t v7 = *((void *)&v14 + 1) - 32;
      *((void *)&v14 + 1) -= 32;
    }
    while (a3 != a5);
    uint64_t v9 = v14;
  }
  char v12 = 1;
  sub_18B0A54((uint64_t)v11);
  return v9;
}

uint64_t sub_18B0A54(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 24)) {
    sub_18B0A8C(a1);
  }
  return a1;
}

void sub_18B0A8C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 16) + 8);
  uint64_t v2 = *(void *)(*(void *)(a1 + 8) + 8);
  while (v1 != v2)
  {
    uint64_t v3 = *(void **)(v1 + 8);
    if (v3)
    {
      *(void *)(v1 + 16) = v3;
      operator delete(v3);
    }
    v1 += 32;
  }
}

uint64_t sub_18B0AD4(uint64_t a1)
{
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void sub_18B0B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != a2)
  {
    *(void *)(a1 + 16) = v2 - 32;
    uint64_t v5 = *(void **)(v2 - 24);
    if (v5)
    {
      *(void *)(v2 - 16) = v5;
      operator delete(v5);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 32;
    }
  }
}

void sub_18B0B68(void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    sub_18B0BBC((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void sub_18B0BBC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 32)
  {
    uint64_t v4 = *(void **)(i - 24);
    if (v4)
    {
      *(void *)(i - 16) = v4;
      operator delete(v4);
    }
  }
  a1[1] = v2;
}

void sub_18B0C10()
{
}

void *sub_18B0C24(uint64_t a1)
{
  uint64_t result = operator new(0x10uLL);
  uint64_t v3 = *(void *)(a1 + 8);
  *uint64_t result = off_24E6BD8;
  result[1] = v3;
  return result;
}

uint64_t sub_18B0C6C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *a2 = off_24E6BD8;
  a2[1] = v2;
  return result;
}

uint64_t sub_18B0C98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 8))(a2);
}

uint64_t sub_18B0CA4(uint64_t a1, uint64_t a2)
{
  if (sub_18B0CF0(a2, (uint64_t)&off_24E6C58)) {
    return a1 + 8;
  }
  else {
    return 0;
  }
}

_UNKNOWN **sub_18B0CE4()
{
  return &off_24E6C58;
}

BOOL sub_18B0CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

void *sub_18B0D40(void *a1)
{
  uint64_t v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

uint64_t sub_18B0DC4(uint64_t a1)
{
  *(void *)a1 = off_24E6C88;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (v2) {
    sub_20A69F0(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3) {
    sub_20A69F0(v3);
  }
  uint64_t v5 = (void **)(a1 + 8);
  sub_189589C(&v5);
  return a1;
}

void sub_18B0E34(uint64_t a1)
{
  *(void *)a1 = off_24E6C88;
  uint64_t v2 = *(std::__shared_weak_count **)(a1 + 56);
  if (v2) {
    sub_20A69F0(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3) {
    sub_20A69F0(v3);
  }
  uint64_t v4 = (void **)(a1 + 8);
  sub_189589C(&v4);
  operator delete();
}

void *sub_18B0EB8(uint64_t a1)
{
  uint64_t v1 = (uint64_t *)(a1 + 8);
  uint64_t v2 = operator new(0x40uLL);
  *uint64_t v2 = off_24E6C88;
  sub_18B1370(v2 + 1, v1);
  return v2;
}

void sub_18B0F0C(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void *sub_18B0F20(uint64_t a1, void *a2)
{
  *a2 = off_24E6C88;
  return sub_18B1370(a2 + 1, (uint64_t *)(a1 + 8));
}

void sub_18B0F4C(uint64_t a1)
{
}

void sub_18B0F54(void *a1)
{
  sub_18B13F8((uint64_t)a1 + 8);

  operator delete(a1);
}

void sub_18B0F90(uint64_t a1, uint64_t a2)
{
  sub_18B0134(a2, (double **)(a1 + 8), &v19);
  sub_18B1444((v20 - v19) >> 5, &v18);
  uint64_t v3 = v19;
  for (uint64_t i = v20; v3 != i; v3 += 32)
  {
    dispatch_group_enter(*(dispatch_group_t *)v18);
    uint64_t v5 = *(uint64_t **)(a1 + 32);
    long long v14 = v18;
    if (*((void *)&v18 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v18 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    int v15 = *(_DWORD *)v3;
    v16[1] = 0;
    uint64_t v17 = 0;
    v16[0] = 0;
    sub_18967EC(v16, *(const void **)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 16) - *(void *)(v3 + 8));
    int v24 = 0;
    uint64_t v6 = (char *)operator new(0x38uLL);
    *(void *)uint64_t v6 = off_24E6D58;
    *(_OWORD *)(v6 + 8) = v14;
    long long v14 = 0uLL;
    *((_DWORD *)v6 + 6) = v15;
    *((_OWORD *)v6 + 2) = *(_OWORD *)v16;
    *((void *)v6 + 6) = v17;
    v16[1] = 0;
    uint64_t v17 = 0;
    v16[0] = 0;
    int v24 = v6;
    int v10 = *(_DWORD *)v3;
    __p[1] = 0;
    uint64_t v12 = 0;
    __p[0] = 0;
    sub_18967EC(__p, *(const void **)(v3 + 8), *(void *)(v3 + 16), *(void *)(v3 + 16) - *(void *)(v3 + 8));
    long long v13 = v18;
    if (*((void *)&v18 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v18 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    long long v22 = 0;
    uint64_t v7 = (char *)operator new(0x38uLL);
    *(void *)uint64_t v7 = off_24E6DE8;
    *((_DWORD *)v7 + 2) = v10;
    *((_OWORD *)v7 + 1) = *(_OWORD *)__p;
    *((void *)v7 + 4) = v12;
    __p[1] = 0;
    uint64_t v12 = 0;
    __p[0] = 0;
    *(_OWORD *)(v7 + 40) = v13;
    long long v13 = 0uLL;
    long long v22 = v7;
    sub_1A26F34(v5, v3, (uint64_t)v23, (uint64_t)&v21);
    sub_18B21F4(&v21);
    if (*((void *)&v13 + 1)) {
      sub_20A69F0(*((std::__shared_weak_count **)&v13 + 1));
    }
    if (__p[0])
    {
      __p[1] = __p[0];
      operator delete(__p[0]);
    }
    sub_18B2278(v23);
    if (v16[0])
    {
      v16[1] = v16[0];
      operator delete(v16[0]);
    }
    if (*((void *)&v14 + 1)) {
      sub_20A69F0(*((std::__shared_weak_count **)&v14 + 1));
    }
  }
  long long v21 = v18;
  if (*((void *)&v18 + 1)) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v18 + 1) + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  if (v8) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v8 + 8), 1uLL, memory_order_relaxed);
  }
  v23[0] = off_24E6EA8;
  v23[1] = v9;
  v23[2] = v8;
  int v24 = v23;
  sub_18B14C8((uint64_t)&v21, (uint64_t)v23);
  sub_18B2C34(v23);
  if (*((void *)&v21 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v21 + 1));
  }
  if (*((void *)&v18 + 1)) {
    sub_20A69F0(*((std::__shared_weak_count **)&v18 + 1));
  }
  *(void *)&long long v18 = &v19;
  sub_18B0B68((void ***)&v18);
}

void sub_18B126C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,char *a21,std::__shared_weak_count *a22,char a23,uint64_t a24,uint64_t a25,char a26,std::__shared_weak_count *a27)
{
  sub_18B2C34((void *)(v27 - 120));
  if (a27) {
    sub_20A69F0(a27);
  }
  if (a22) {
    sub_20A69F0(a22);
  }
  a21 = &a23;
  sub_18B0B68((void ***)&a21);
  _Unwind_Resume(a1);
}

uint64_t sub_18B1324(uint64_t a1, uint64_t a2)
{
  {
    return a1 + 8;
  }
  else
  {
    return 0;
  }
}

_UNKNOWN **sub_18B1364()
{
}

void *sub_18B1370(void *a1, uint64_t *a2)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  sub_1895738(a1, *a2, a2[1], 0x2E8BA2E8BA2E8BA3 * ((a2[1] - *a2) >> 3));
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  if (v4) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v4 + 8), 1uLL, memory_order_relaxed);
  }
  uint64_t v5 = a2[6];
  a1[5] = a2[5];
  a1[6] = v5;
  if (v5) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v5 + 8), 1uLL, memory_order_relaxed);
  }
  return a1;
}