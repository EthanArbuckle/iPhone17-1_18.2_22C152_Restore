std::string *sub_1370178(std::string *result, uint64_t a2)
{
  std::string *v3;
  int v4;
  uint64_t *v5;
  std::string **v6;
  int v7;
  int *v8;
  int v9;
  uint64_t v10;
  uint64_t vars8;

  v3 = result;
  v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    result = (std::string *)sub_148CEF0((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *v8 = v7;
    }
  }
  v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        LODWORD(v3[2].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 56);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1370290()
{
  return 1;
}

void *sub_1370298@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.ManeuverData");
}

uint64_t sub_13702A8(uint64_t a1)
{
  v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1370348(uint64_t a1)
{
  sub_13702A8(a1);

  operator delete();
}

uint64_t sub_1370380(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 6) != 0) {
    *(void *)(a1 + 32) = 0x100000000;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13703D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  v6 = (void *)(a1 + 8);
  while (1)
  {
    v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 4)
    {
      if (v8 != 32) {
        goto LABEL_14;
      }
      v16 = v7 + 1;
      unint64_t v17 = *v7;
      if (*v7 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)v30 = sub_188C138((uint64_t)v7, (v19 - 128));
          if (!*(void *)v30) {
            goto LABEL_57;
          }
          unint64_t v17 = v26;
          goto LABEL_26;
        }
        v16 = v7 + 2;
      }
      *(void *)v30 = v16;
LABEL_26:
      if (v17 <= 3)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 36) = v17;
        goto LABEL_39;
      }
      if (*v6) {
        v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v29 = 4;
      goto LABEL_51;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      v24 = (uint64_t *)*v24;
    }
    v25 = (std::string *)sub_1880F84((void *)(a1 + 24), v24);
    v15 = (void *)sub_188C244(v25, *(char **)v30, (uint64_t)a3);
LABEL_38:
    *(void *)v30 = v15;
    if (!v15) {
      goto LABEL_57;
    }
LABEL_39:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      return *(void *)v30;
    }
  }
  if (v8 == 16)
  {
    v20 = v7 + 1;
    unint64_t v17 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v21 = *v20;
    int v22 = v17 + (v21 << 7);
    unint64_t v17 = (v22 - 128);
    if (v21 < 0)
    {
      *(void *)v30 = sub_188C138((uint64_t)v7, (v22 - 128));
      if (!*(void *)v30) {
        goto LABEL_57;
      }
      unint64_t v17 = v27;
    }
    else
    {
      v20 = v7 + 2;
LABEL_32:
      *(void *)v30 = v20;
    }
    if (v17 <= 5)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_39;
    }
    if (*v6) {
      v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v29 = 2;
LABEL_51:
    sub_188C020(v29, v17, v28);
    goto LABEL_39;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      v7 = *(char **)v30;
    }
    v15 = sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_38;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v30;
  }
LABEL_57:
  *(void *)v30 = 0;
  return *(void *)v30;
}

unsigned char *sub_1370688(uint64_t a1, unsigned char *__dst, void *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_137084C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_18;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
  }
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
LABEL_13:
  if ((v1 & 4) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 36);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_137094C()
{
  return 1;
}

void *sub_1370954@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.GenericStringData");
}

uint64_t sub_1370964(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2534650 && *(void *)(a1 + 24))
  {
    sub_1374224();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1370A1C(uint64_t a1)
{
  sub_1370964(a1);

  operator delete();
}

uint64_t sub_1370A54(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1370AB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        v20 = (void *)*v20;
      }
      sub_13D6A1C((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 24) = v21;
    }
    v14 = (unsigned __int8 *)sub_13319DC(a3, v19);
LABEL_32:
    v24 = (char *)v14;
    if (!v14) {
      return 0;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    unint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        v24 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v24) {
          return 0;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      unint64_t v15 = v7 + 2;
    }
    v24 = v15;
LABEL_25:
    if (v16 > 0xD)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_32;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

unsigned char *sub_1370CC4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_1374B08(v7, v9, (int)a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1370E5C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1370F2C(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      if (!result[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = result->__r_.__value_.__l.__size_;
        uint64_t v6 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v6 = (void *)*v6;
        }
        sub_13D6A1C((uint64_t)v6);
        v3[1].__r_.__value_.__r.__words[0] = v7;
      }
      uint64_t result = (std::string *)sub_136A7DC();
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1370FFC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1371028@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.GenericCombinations.GenericSubstitutes");
}

void *sub_1371038(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148B248(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13710B8(void *a1)
{
  sub_1371038(a1);

  operator delete();
}

uint64_t sub_13710F0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1370A54(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  int v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_137116C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 18)
      {
        unint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_13D67B4(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unint64_t v12 = sub_137130C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_137130C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1370AB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137139C(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unint64_t v10 = __dst + 2;
      }
      __dst = sub_1370CC4(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_13714E0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1370E5C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1371590(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_148CC44((uint64_t *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1371660(uint64_t a1)
{
  return sub_1371668(a1 + 16);
}

uint64_t sub_1371668(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = 8 * v1;
  while (1)
  {
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + v3);
    if (*(unsigned char *)(v4 + 16))
    {
      uint64_t result = sub_136ADBC(*(void *)(v4 + 24));
      if (!result) {
        break;
      }
    }
    v3 -= 8;
    BOOL v6 = __OFSUB__(v1, 1);
    LODWORD(v1) = v1 - 1;
    if (((int)v1 < 0) ^ v6 | (v1 == 0)) {
      return 1;
    }
  }
  return result;
}

void *sub_13716CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument.GenericCombinations");
}

void *sub_13716DC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1371774((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_148B2C8(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1371774(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 64);
  uint64_t v2 = (void ***)(a1 + 64);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25346A8)
  {
    uint64_t v5 = *(void *)(a1 + 80);
    if (v5)
    {
      sub_136D6AC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_13D2774(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 96);
    if (v7)
    {
      sub_136E424(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 104);
    if (v8)
    {
      sub_136F144(v8);
      operator delete();
    }
    uint64_t v9 = *(void **)(a1 + 112);
    if (v9)
    {
      sub_136F48C(v9);
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 120);
    if (v10)
    {
      sub_136D1B8(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 128);
    if (v11)
    {
      sub_136F820(v11);
      operator delete();
    }
    uint64_t v12 = *(void *)(a1 + 136);
    if (v12)
    {
      sub_13702A8(v12);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 144);
    if (result)
    {
      sub_1371038(result);
      operator delete();
    }
  }
  return result;
}

void sub_137190C(void *a1)
{
  sub_13716DC(a1);

  operator delete();
}

uint64_t sub_1371944(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (std::string **)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = (uint64_t)sub_136DCC0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((_BYTE)v5)
  {
    if ((v5 & 1) == 0)
    {
      if ((v5 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_17:
      unint64_t v7 = *(void *)(v1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v5 & 4) != 0) {
          goto LABEL_21;
        }
      }
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
    unint64_t v6 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v5 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_8:
    if ((v5 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    uint64_t result = sub_136D784(*(void *)(v1 + 80));
    if ((v5 & 8) == 0)
    {
LABEL_10:
      if ((v5 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
LABEL_22:
    uint64_t result = sub_1369F48(*(void *)(v1 + 88));
    if ((v5 & 0x10) == 0)
    {
LABEL_11:
      if ((v5 & 0x20) == 0)
      {
LABEL_26:
        if ((v5 & 0x40) != 0)
        {
          uint64_t v10 = *(void *)(v1 + 112);
          char v11 = *(unsigned char *)(v10 + 8);
          uint64_t result = v10 + 8;
          *(unsigned char *)(result + 16) = 1;
          *(_DWORD *)(result + 8) = 0;
          if (v11) {
            uint64_t result = sub_188B4AC((uint64_t *)result);
          }
        }
        if ((v5 & 0x80) != 0) {
          uint64_t result = sub_136D2A8(*(void *)(v1 + 120));
        }
        goto LABEL_31;
      }
LABEL_24:
      uint64_t v8 = *(void *)(v1 + 104);
      char v9 = *(unsigned char *)(v8 + 8);
      uint64_t result = v8 + 8;
      *(_DWORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v9) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t result = sub_136E52C(*(void *)(v1 + 96));
    if ((v5 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_24;
  }
LABEL_31:
  if ((v5 & 0x700) == 0) {
    goto LABEL_36;
  }
  if ((v5 & 0x100) != 0)
  {
    uint64_t result = sub_136F910(*(void *)(v1 + 128));
    if ((v5 & 0x200) == 0)
    {
LABEL_34:
      if ((v5 & 0x400) == 0) {
        goto LABEL_36;
      }
      goto LABEL_35;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_34;
  }
  uint64_t result = sub_1370380(*(void *)(v1 + 136));
  if ((v5 & 0x400) != 0) {
LABEL_35:
  }
    uint64_t result = sub_13710F0(*(void *)(v1 + 144));
LABEL_36:
  if ((v5 & 0x7800) != 0)
  {
    *(void *)(v1 + 152) = 0;
    *(void *)(v1 + 160) = 0xFFFFFFFF00000000;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_1371B00(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v73 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v73, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v8 = (unsigned __int8 *)(*(void *)v73 + 1);
      unsigned int v9 = **(unsigned char **)v73;
      if ((char)**(unsigned char **)v73 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if ((char)*v8 < 0)
        {
          uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v73, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          uint64_t v8 = (unsigned __int8 *)(*(void *)v73 + 2);
        }
      }
      *(void *)v73 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v12 = *(void *)(a1 + 8);
          char v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
          if (v12) {
            char v13 = (uint64_t *)*v13;
          }
          v14 = (void *)(a1 + 64);
          goto LABEL_51;
        case 2u:
          if (v9 != 16) {
            goto LABEL_134;
          }
          uint64_t v15 = (char *)(v8 + 1);
          unint64_t v16 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          int v17 = *v15;
          int v18 = v16 + (v17 << 7);
          unint64_t v16 = (v18 - 128);
          if (v17 < 0)
          {
            *(void *)v73 = sub_188C138((uint64_t)v8, (v18 - 128));
            if (!*(void *)v73) {
              goto LABEL_148;
            }
            unint64_t v16 = v63;
          }
          else
          {
            uint64_t v15 = (char *)(v8 + 2);
LABEL_17:
            *(void *)v73 = v15;
          }
          if (v16 > 0x12 || v16 == 7)
          {
            if (*v7) {
              v70 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v70 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(2, v16, v70);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x800u;
            *(_DWORD *)(a1 + 152) = v16;
          }
          goto LABEL_142;
        case 3u:
          if (v9 != 24) {
            goto LABEL_134;
          }
          v5 |= 0x1000u;
          v20 = (char *)(v8 + 1);
          int v21 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_27;
          }
          int v22 = *v20;
          int v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v64 = sub_188C0D0((uint64_t)v8, v21);
            *(void *)v73 = v64;
            *(_DWORD *)(a1 + 156) = v65;
            if (!v64) {
              goto LABEL_148;
            }
          }
          else
          {
            v20 = (char *)(v8 + 2);
LABEL_27:
            *(void *)v73 = v20;
            *(_DWORD *)(a1 + 156) = v21;
          }
          goto LABEL_142;
        case 4u:
          if (v9 != 32) {
            goto LABEL_134;
          }
          v5 |= 0x2000u;
          uint64_t v23 = (char *)(v8 + 1);
          int v24 = *v8;
          if (((char)*v8 & 0x80000000) == 0) {
            goto LABEL_32;
          }
          int v25 = *v23;
          int v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v66 = sub_188C0D0((uint64_t)v8, v24);
            *(void *)v73 = v66;
            *(_DWORD *)(a1 + 160) = v67;
            if (!v66) {
              goto LABEL_148;
            }
          }
          else
          {
            uint64_t v23 = (char *)(v8 + 2);
LABEL_32:
            *(void *)v73 = v23;
            *(_DWORD *)(a1 + 160) = v24;
          }
          goto LABEL_142;
        case 5u:
          if (v9 == 40)
          {
            unint64_t v26 = v8 - 1;
            while (1)
            {
              *(void *)v73 = v26 + 1;
              int v27 = v26[1];
              if ((char)v26[1] < 0)
              {
                int v28 = v27 + (v26[2] << 7);
                int v27 = v28 - 128;
                if ((char)v26[2] < 0)
                {
                  unint64_t v26 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v26 + 1), v28 - 128);
                  int v27 = v29;
                }
                else
                {
                  v26 += 3;
                }
              }
              else
              {
                v26 += 2;
              }
              *(void *)v73 = v26;
              uint64_t v30 = *(unsigned int *)(a1 + 24);
              if (v30 == *(_DWORD *)(a1 + 28))
              {
                int v31 = v30 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v30 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v30) = v27;
                unint64_t v26 = *(unsigned __int8 **)v73;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v30) = v27;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 24) = v31;
              if (!v26) {
                goto LABEL_148;
              }
              if (*(void *)a3 <= (unint64_t)v26 || *v26 != 40) {
                goto LABEL_142;
              }
            }
          }
          if (v9 == 42)
          {
            uint64_t v34 = (uint64_t)sub_188C2CC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          }
          else
          {
LABEL_134:
            if (v9) {
              BOOL v71 = (v9 & 7) == 4;
            }
            else {
              BOOL v71 = 1;
            }
            if (v71)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_148:
              *(void *)v73 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              v72 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v72 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v73;
            }
            uint64_t v34 = (uint64_t)sub_1885AC0(v9, v72, (char *)v8, a3);
          }
LABEL_141:
          *(void *)v73 = v34;
          if (!v34) {
            goto LABEL_148;
          }
LABEL_142:
          if (sub_11947B8((uint64_t)a3, (char **)v73, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 6u:
          if (v9 != 50) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v32 = *(void *)(a1 + 8);
          char v13 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
          if (v32) {
            char v13 = (uint64_t *)*v13;
          }
          v14 = (void *)(a1 + 72);
LABEL_51:
          v33 = (std::string *)sub_1880F84(v14, v13);
          uint64_t v34 = (uint64_t)sub_188C244(v33, *(char **)v73, (uint64_t)a3);
          goto LABEL_141;
        case 8u:
          if (v9 != 66) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v35 = *(void *)(a1 + 80);
          if (!v35)
          {
            v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v36 = (void *)*v36;
            }
            uint64_t v35 = sub_13D63F0((uint64_t)v36);
            *(void *)(a1 + 80) = v35;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = sub_1372324(a3, v35, v8);
          goto LABEL_141;
        case 9u:
          if (v9 != 74) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v37 = *(void *)(a1 + 88);
          if (!v37)
          {
            v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v38 = (void *)*v38;
            }
            uint64_t v37 = sub_13DAB08((uint64_t)v38);
            *(void *)(a1 + 88) = v37;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = sub_1323390(a3, v37, v8);
          goto LABEL_141;
        case 0xAu:
          if (v9 != 82) {
            goto LABEL_134;
          }
          v39 = v8 - 1;
          while (1)
          {
            v40 = v39 + 1;
            *(void *)v73 = v39 + 1;
            v41 = *(_DWORD **)(a1 + 56);
            if (v41 && (uint64_t v42 = *(int *)(a1 + 48), (int)v42 < *v41))
            {
              *(_DWORD *)(a1 + 48) = v42 + 1;
              uint64_t v43 = *(void *)&v41[2 * v42 + 2];
            }
            else
            {
              v44 = sub_13D6478(*(void *)(a1 + 40));
              uint64_t v43 = sub_188CDC8(a1 + 40, (uint64_t)v44);
              v40 = *(unsigned __int8 **)v73;
            }
            v39 = (unsigned __int8 *)sub_13723B4(a3, v43, v40);
            *(void *)v73 = v39;
            if (!v39) {
              goto LABEL_148;
            }
            if (*(void *)a3 <= (unint64_t)v39 || *v39 != 82) {
              goto LABEL_142;
            }
          }
        case 0xBu:
          if (v9 != 90) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 0x10u;
          v45 = *(void **)(a1 + 96);
          if (!v45)
          {
            v46 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v46 = (void *)*v46;
            }
            v45 = sub_13D6500((uint64_t)v46);
            *(void *)(a1 + 96) = v45;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = sub_1372444(a3, (uint64_t)v45, v8);
          goto LABEL_141;
        case 0xCu:
          if (v9 != 98) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 0x20u;
          uint64_t v47 = *(void *)(a1 + 104);
          if (!v47)
          {
            v48 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v48 = (void *)*v48;
            }
            uint64_t v47 = sub_13D65B0((uint64_t)v48);
            *(void *)(a1 + 104) = v47;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = (uint64_t)sub_13724D4(a3, v47, v8);
          goto LABEL_141;
        case 0xDu:
          if (v9 != 106) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 0x40u;
          uint64_t v49 = *(void *)(a1 + 112);
          if (!v49)
          {
            v50 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v50 = (void *)*v50;
            }
            uint64_t v49 = sub_13D662C((uint64_t)v50);
            *(void *)(a1 + 112) = v49;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = (uint64_t)sub_1372564(a3, v49, v8);
          goto LABEL_141;
        case 0xEu:
          if (v9 != 114) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 0x80u;
          v51 = *(void **)(a1 + 120);
          if (!v51)
          {
            v52 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v52 = (void *)*v52;
            }
            v51 = sub_13D636C((uint64_t)v52);
            *(void *)(a1 + 120) = v51;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = sub_13725F4(a3, (uint64_t)v51, v8);
          goto LABEL_141;
        case 0xFu:
          if (v9 != 122) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 0x100u;
          uint64_t v53 = *(void *)(a1 + 128);
          if (!v53)
          {
            v54 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v54 = (void *)*v54;
            }
            uint64_t v53 = sub_13D66AC((uint64_t)v54);
            *(void *)(a1 + 128) = v53;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = (uint64_t)sub_1372684(a3, v53, v8);
          goto LABEL_141;
        case 0x10u:
          if (v9 != 130) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 0x200u;
          uint64_t v55 = *(void *)(a1 + 136);
          if (!v55)
          {
            v56 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v56 = (void *)*v56;
            }
            sub_13D6728((uint64_t)v56);
            uint64_t v55 = v57;
            *(void *)(a1 + 136) = v57;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = sub_1372714(a3, v55, v8);
          goto LABEL_141;
        case 0x11u:
          if (v9 != 138) {
            goto LABEL_134;
          }
          *(_DWORD *)(a1 + 16) |= 0x400u;
          uint64_t v58 = *(void *)(a1 + 144);
          if (!v58)
          {
            v59 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v59 = (void *)*v59;
            }
            uint64_t v58 = sub_13D6830((uint64_t)v59);
            *(void *)(a1 + 144) = v58;
            uint64_t v8 = *(unsigned __int8 **)v73;
          }
          uint64_t v34 = (uint64_t)sub_13727A4(a3, v58, v8);
          goto LABEL_141;
        case 0x12u:
          if (v9 != 144) {
            goto LABEL_134;
          }
          v5 |= 0x4000u;
          v61 = (char *)(v8 + 1);
          LODWORD(v60) = *v8;
          if ((v60 & 0x80) == 0) {
            goto LABEL_120;
          }
          int v62 = *v61;
          uint64_t v60 = v60 + (v62 << 7) - 128;
          if (v62 < 0)
          {
            uint64_t v68 = sub_188C138((uint64_t)v8, v60);
            *(void *)v73 = v68;
            *(_DWORD *)(a1 + 164) = v69;
            if (!v68) {
              goto LABEL_148;
            }
          }
          else
          {
            v61 = (char *)(v8 + 2);
LABEL_120:
            *(void *)v73 = v61;
            *(_DWORD *)(a1 + 164) = v60;
          }
          goto LABEL_142;
        default:
          goto LABEL_134;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v73;
}

uint64_t sub_1372324(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136D7CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13723B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136DD80(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1372444(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136E5F0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13724D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136F208(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1372564(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136F554(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13725F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136D324(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1372684(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136FA04(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1372714(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13703D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13727A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137116C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1372834(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 152);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 156);
    unsigned char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 160);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      unsigned char *v4 = 40;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unsigned int v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 4) == 0)
    {
LABEL_35:
      if ((v6 & 8) == 0) {
        goto LABEL_50;
      }
      goto LABEL_44;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_35;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 80);
  unsigned char *v4 = 66;
  unsigned int v22 = *(_DWORD *)(v21 + 20);
  v4[1] = v22;
  if (v22 > 0x7F) {
    uint64_t v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    uint64_t v23 = v4 + 2;
  }
  uint64_t v4 = sub_136D968(v21, (unint64_t)v23, a3);
  if ((v6 & 8) != 0)
  {
LABEL_44:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 88);
    unsigned char *v4 = 74;
    unsigned int v25 = *(_DWORD *)(v24 + 44);
    v4[1] = v25;
    if (v25 > 0x7F) {
      unint64_t v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      unint64_t v26 = v4 + 2;
    }
    uint64_t v4 = sub_13D2F58(v24, v26, a3);
  }
LABEL_50:
  int v27 = *(_DWORD *)(a1 + 48);
  if (v27)
  {
    for (int j = 0; j != v27; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      unsigned char *v4 = 82;
      unsigned int v30 = *(_DWORD *)(v29 + 20);
      v4[1] = v30;
      if (v30 > 0x7F) {
        int v31 = sub_188A9CC(v30, v4 + 1);
      }
      else {
        int v31 = v4 + 2;
      }
      uint64_t v4 = sub_136E048(v29, (unint64_t)v31, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 96);
    unsigned char *v4 = 90;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      uint64_t v34 = v4 + 2;
    }
    uint64_t v4 = sub_136EAD4(v32, v34, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_60:
      if ((v6 & 0x40) == 0) {
        goto LABEL_61;
      }
      goto LABEL_79;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_60;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v35 = *(void *)(a1 + 104);
  unsigned char *v4 = 98;
  unsigned int v36 = *(_DWORD *)(v35 + 20);
  v4[1] = v36;
  if (v36 > 0x7F) {
    uint64_t v37 = sub_188A9CC(v36, v4 + 1);
  }
  else {
    uint64_t v37 = v4 + 2;
  }
  uint64_t v4 = sub_136F348(v35, (unint64_t)v37, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_61:
    if ((v6 & 0x80) == 0) {
      goto LABEL_62;
    }
    goto LABEL_85;
  }
LABEL_79:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v38 = *(void *)(a1 + 112);
  unsigned char *v4 = 106;
  unsigned int v39 = *(_DWORD *)(v38 + 20);
  v4[1] = v39;
  if (v39 > 0x7F) {
    v40 = sub_188A9CC(v39, v4 + 1);
  }
  else {
    v40 = v4 + 2;
  }
  uint64_t v4 = sub_136F6E4(v38, (unint64_t)v40, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_62:
    if ((v6 & 0x100) == 0) {
      goto LABEL_63;
    }
    goto LABEL_91;
  }
LABEL_85:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v41 = *(void *)(a1 + 120);
  unsigned char *v4 = 114;
  unsigned int v42 = *(_DWORD *)(v41 + 20);
  v4[1] = v42;
  if (v42 > 0x7F) {
    uint64_t v43 = sub_188A9CC(v42, v4 + 1);
  }
  else {
    uint64_t v43 = v4 + 2;
  }
  uint64_t v4 = sub_136D4CC(v41, v43, a3);
  if ((v6 & 0x100) == 0)
  {
LABEL_63:
    if ((v6 & 0x200) == 0) {
      goto LABEL_64;
    }
    goto LABEL_97;
  }
LABEL_91:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v44 = *(void *)(a1 + 128);
  unsigned char *v4 = 122;
  unsigned int v45 = *(_DWORD *)(v44 + 20);
  v4[1] = v45;
  if (v45 > 0x7F) {
    v46 = sub_188A9CC(v45, v4 + 1);
  }
  else {
    v46 = v4 + 2;
  }
  uint64_t v4 = sub_136FE4C(v44, (unint64_t)v46, a3);
  if ((v6 & 0x200) == 0)
  {
LABEL_64:
    if ((v6 & 0x400) == 0) {
      goto LABEL_65;
    }
    goto LABEL_103;
  }
LABEL_97:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v47 = *(void *)(a1 + 136);
  *(_WORD *)uint64_t v4 = 386;
  unsigned int v48 = *(_DWORD *)(v47 + 20);
  v4[2] = v48;
  if (v48 > 0x7F) {
    uint64_t v49 = sub_188A9CC(v48, v4 + 2);
  }
  else {
    uint64_t v49 = v4 + 3;
  }
  uint64_t v4 = sub_1370688(v47, v49, a3);
  if ((v6 & 0x400) == 0)
  {
LABEL_65:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_115;
    }
    goto LABEL_109;
  }
LABEL_103:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v50 = *(void *)(a1 + 144);
  *(_WORD *)uint64_t v4 = 394;
  unsigned int v51 = *(_DWORD *)(v50 + 40);
  v4[2] = v51;
  if (v51 > 0x7F) {
    v52 = sub_188A9CC(v51, v4 + 2);
  }
  else {
    v52 = v4 + 3;
  }
  uint64_t v4 = sub_137139C(v50, v52, a3);
  if ((v6 & 0x4000) != 0)
  {
LABEL_109:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v53 = *(int *)(a1 + 164);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v53;
    if (v53 > 0x7F)
    {
      v4[2] = v53 | 0x80;
      unint64_t v54 = v53 >> 7;
      v4[3] = v53 >> 7;
      v4 += 4;
      if (v53 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v55 = v54 >> 14;
          v54 >>= 7;
          *v4++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_115:
  uint64_t v56 = *(void *)(a1 + 8);
  if ((v56 & 1) == 0) {
    return v4;
  }
  unint64_t v58 = v56 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v58 + 31) < 0)
  {
    v59 = *(void **)(v58 + 8);
    uint64_t v60 = *(void *)(v58 + 16);
  }
  else
  {
    v59 = (void *)(v58 + 8);
    LODWORD(v60) = *(unsigned __int8 *)(v58 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v60)
  {
    uint64_t v61 = (int)v60;
    memcpy(v4, v59, (int)v60);
    v4 += v61;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v59, v60, v4);
}

uint64_t sub_1372FF8(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24));
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_136E1F4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v10) {
    goto LABEL_17;
  }
  if (v10)
  {
    unint64_t v12 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v4 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_10:
      if ((v10 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_32;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_10;
  }
  unint64_t v15 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_11:
    if ((v10 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_32:
  uint64_t v18 = sub_136DA6C(*(void *)(a1 + 80));
  v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) == 0)
  {
LABEL_12:
    if ((v10 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_34;
  }
LABEL_33:
  uint64_t v19 = sub_13D3304(*(void *)(a1 + 88));
  v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x10) == 0)
  {
LABEL_13:
    if ((v10 & 0x20) == 0) {
      goto LABEL_14;
    }
LABEL_35:
    uint64_t v21 = *(void *)(a1 + 104);
    uint64_t v22 = 5;
    if ((*(unsigned char *)(v21 + 16) & 1) == 0) {
      uint64_t v22 = 0;
    }
    uint64_t v23 = *(void *)(v21 + 8);
    if (v23)
    {
      unint64_t v38 = v23 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v38 + 31) < 0) {
        uint64_t v39 = *(void *)(v38 + 16);
      }
      else {
        uint64_t v39 = *(unsigned __int8 *)(v38 + 31);
      }
      v22 += v39;
    }
    *(_DWORD *)(v21 + 20) = v22;
    v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x40) == 0)
    {
LABEL_15:
      if ((v10 & 0x80) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_39;
  }
LABEL_34:
  uint64_t v20 = sub_136EDB8(*(void *)(a1 + 96));
  v4 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x20) != 0) {
    goto LABEL_35;
  }
LABEL_14:
  if ((v10 & 0x40) == 0) {
    goto LABEL_15;
  }
LABEL_39:
  uint64_t v24 = *(void *)(a1 + 112);
  uint64_t v25 = 2 * (*(_DWORD *)(v24 + 16) & 1);
  uint64_t v26 = *(void *)(v24 + 8);
  if (v26)
  {
    unint64_t v40 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v40 + 31) < 0) {
      uint64_t v41 = *(void *)(v40 + 16);
    }
    else {
      uint64_t v41 = *(unsigned __int8 *)(v40 + 31);
    }
    v25 += v41;
  }
  *(_DWORD *)(v24 + 20) = v25;
  v4 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x80) != 0)
  {
LABEL_16:
    uint64_t v11 = sub_136D5B8(*(void *)(a1 + 120));
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v10 & 0x7F00) == 0) {
    goto LABEL_55;
  }
  if ((v10 & 0x100) != 0)
  {
    uint64_t v27 = sub_136FFD8(*(void *)(a1 + 128));
    v4 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x200) == 0)
    {
LABEL_20:
      if ((v10 & 0x400) == 0) {
        goto LABEL_21;
      }
      goto LABEL_44;
    }
  }
  else if ((v10 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v28 = sub_137084C(*(void *)(a1 + 136));
  v4 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 0x400) == 0)
  {
LABEL_21:
    if ((v10 & 0x800) == 0) {
      goto LABEL_22;
    }
    goto LABEL_45;
  }
LABEL_44:
  uint64_t v29 = sub_13714E0(*(void *)(a1 + 144));
  v4 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v10 & 0x800) == 0)
  {
LABEL_22:
    if ((v10 & 0x1000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_45:
  int v30 = *(_DWORD *)(a1 + 152);
  if (v30 < 0) {
    uint64_t v31 = 11;
  }
  else {
    uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v4 += v31;
  if ((v10 & 0x1000) == 0)
  {
LABEL_23:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_50;
  }
LABEL_49:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 156) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x2000) == 0)
  {
LABEL_24:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_51;
  }
LABEL_50:
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 160) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 0x4000) == 0) {
    goto LABEL_55;
  }
LABEL_51:
  int v32 = *(_DWORD *)(a1 + 164);
  if (v32 < 0) {
    uint64_t v33 = 12;
  }
  else {
    uint64_t v33 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
  v4 += v33;
LABEL_55:
  uint64_t v34 = *(void *)(a1 + 8);
  if (v34)
  {
    unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v36 + 31) < 0) {
      uint64_t v37 = *(void *)(v36 + 16);
    }
    else {
      uint64_t v37 = *(unsigned __int8 *)(v36 + 31);
    }
    v4 += v37;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_137345C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_148CCD0((std::string *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    unint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *unint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v13) {
    goto LABEL_70;
  }
  if (v13)
  {
    uint64_t v14 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 64), v14, v16);
    if ((v13 & 2) == 0)
    {
LABEL_9:
      if ((v13 & 4) == 0) {
        goto LABEL_10;
      }
      goto LABEL_22;
    }
  }
  else if ((v13 & 2) == 0)
  {
    goto LABEL_9;
  }
  uint64_t v17 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v18 = *(void *)(a1 + 8);
  uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
  if (v18) {
    uint64_t v19 = (uint64_t *)*v19;
  }
  sub_1881DF4((std::string **)(a1 + 72), v17, v19);
  if ((v13 & 4) == 0)
  {
LABEL_10:
    if ((v13 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_22:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v20 = *(std::string **)(a1 + 80);
  if (!v20)
  {
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (void *)*v22;
    }
    uint64_t v20 = (std::string *)sub_13D63F0((uint64_t)v22);
    *(void *)(a1 + 80) = v20;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v23 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v23 = &off_2534538;
  }
  sub_136DB0C(v20, (uint64_t)v23);
  if ((v13 & 8) == 0)
  {
LABEL_11:
    if ((v13 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_38;
  }
LABEL_30:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v24 = *(void *)(a1 + 88);
  if (!v24)
  {
    uint64_t v25 = *(void *)(a1 + 8);
    uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      uint64_t v26 = (void *)*v26;
    }
    uint64_t v24 = sub_13DAB08((uint64_t)v26);
    *(void *)(a1 + 88) = v24;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v27 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v27 = &off_2536850;
  }
  sub_136AA7C(v24, (uint64_t)v27);
  if ((v13 & 0x10) == 0)
  {
LABEL_12:
    if ((v13 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_46:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    int v32 = *(std::string **)(a1 + 104);
    if (!v32)
    {
      uint64_t v33 = *(void *)(a1 + 8);
      uint64_t v34 = (void *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
      if (v33) {
        uint64_t v34 = (void *)*v34;
      }
      int v32 = (std::string *)sub_13D65B0((uint64_t)v34);
      *(void *)(a1 + 104) = v32;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v35 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v35 = &off_25345C0;
    }
    sub_11C4738(v32, (uint64_t)v35);
    if ((v13 & 0x40) == 0)
    {
LABEL_14:
      if ((v13 & 0x80) == 0) {
        goto LABEL_70;
      }
      goto LABEL_62;
    }
    goto LABEL_54;
  }
LABEL_38:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v28 = *(std::string **)(a1 + 96);
  if (!v28)
  {
    uint64_t v29 = *(void *)(a1 + 8);
    int v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      int v30 = (void *)*v30;
    }
    uint64_t v28 = (std::string *)sub_13D6500((uint64_t)v30);
    *(void *)(a1 + 96) = v28;
  }
  if (*(void *)(a2 + 96)) {
    uint64_t v31 = *(uint64_t (****)())(a2 + 96);
  }
  else {
    uint64_t v31 = &off_2534560;
  }
  sub_136EF60(v28, (uint64_t)v31);
  if ((v13 & 0x20) != 0) {
    goto LABEL_46;
  }
LABEL_13:
  if ((v13 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_54:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  unint64_t v36 = *(std::string **)(a1 + 112);
  if (!v36)
  {
    uint64_t v37 = *(void *)(a1 + 8);
    unint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      unint64_t v38 = (void *)*v38;
    }
    unint64_t v36 = (std::string *)sub_13D662C((uint64_t)v38);
    *(void *)(a1 + 112) = v36;
  }
  if (*(void *)(a2 + 112)) {
    uint64_t v39 = *(uint64_t (****)())(a2 + 112);
  }
  else {
    uint64_t v39 = &off_25345E0;
  }
  sub_13221BC(v36, (uint64_t)v39);
  if ((v13 & 0x80) != 0)
  {
LABEL_62:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    unint64_t v40 = *(std::string **)(a1 + 120);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      unsigned int v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        unsigned int v42 = (void *)*v42;
      }
      unint64_t v40 = (std::string *)sub_13D636C((uint64_t)v42);
      *(void *)(a1 + 120) = v40;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v43 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v43 = &off_2534510;
    }
    sub_11EC100(v40, (uint64_t)v43);
  }
LABEL_70:
  if ((v13 & 0x7F00) == 0) {
    goto LABEL_80;
  }
  if ((v13 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    unsigned int v45 = *(std::string **)(a1 + 128);
    if (!v45)
    {
      uint64_t v46 = *(void *)(a1 + 8);
      uint64_t v47 = (void *)(v46 & 0xFFFFFFFFFFFFFFFCLL);
      if (v46) {
        uint64_t v47 = (void *)*v47;
      }
      unsigned int v45 = (std::string *)sub_13D66AC((uint64_t)v47);
      *(void *)(a1 + 128) = v45;
    }
    if (*(void *)(a2 + 128)) {
      unsigned int v48 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      unsigned int v48 = &off_2534600;
    }
    sub_13700A8(v45, (uint64_t)v48);
    if ((v13 & 0x200) == 0)
    {
LABEL_73:
      if ((v13 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_100;
    }
  }
  else if ((v13 & 0x200) == 0)
  {
    goto LABEL_73;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v49 = *(std::string **)(a1 + 136);
  if (!v49)
  {
    uint64_t v50 = *(void *)(a1 + 8);
    unsigned int v51 = (void *)(v50 & 0xFFFFFFFFFFFFFFFCLL);
    if (v50) {
      unsigned int v51 = (void *)*v51;
    }
    sub_13D6728((uint64_t)v51);
    *(void *)(a1 + 136) = v49;
  }
  if (*(void *)(a2 + 136)) {
    v52 = *(uint64_t (****)())(a2 + 136);
  }
  else {
    v52 = &off_2534628;
  }
  sub_11EB228(v49, (uint64_t)v52);
  if ((v13 & 0x400) == 0)
  {
LABEL_74:
    if ((v13 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_108;
  }
LABEL_100:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  unint64_t v53 = *(std::string **)(a1 + 144);
  if (!v53)
  {
    uint64_t v54 = *(void *)(a1 + 8);
    unint64_t v55 = (void *)(v54 & 0xFFFFFFFFFFFFFFFCLL);
    if (v54) {
      unint64_t v55 = (void *)*v55;
    }
    unint64_t v53 = (std::string *)sub_13D6830((uint64_t)v55);
    *(void *)(a1 + 144) = v53;
  }
  if (*(void *)(a2 + 144)) {
    uint64_t v56 = *(uint64_t (****)())(a2 + 144);
  }
  else {
    uint64_t v56 = &off_2534678;
  }
  sub_1371590(v53, (uint64_t)v56);
  if ((v13 & 0x800) == 0)
  {
LABEL_75:
    if ((v13 & 0x1000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_109;
  }
LABEL_108:
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  if ((v13 & 0x1000) == 0)
  {
LABEL_76:
    if ((v13 & 0x2000) == 0) {
      goto LABEL_77;
    }
LABEL_110:
    *(_DWORD *)(a1 + 160) = *(_DWORD *)(a2 + 160);
    if ((v13 & 0x4000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
LABEL_109:
  *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
  if ((v13 & 0x2000) != 0) {
    goto LABEL_110;
  }
LABEL_77:
  if ((v13 & 0x4000) != 0) {
LABEL_78:
  }
    *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
LABEL_79:
  *(_DWORD *)(a1 + 16) |= v13;
LABEL_80:
  uint64_t v44 = *(void *)(a2 + 8);
  if (v44)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v44 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1373910(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 88));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x400) == 0) {
    return 1;
  }
  uint64_t result = sub_1371668(*(void *)(a1 + 144) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1373960@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatArgument");
}

uint64_t sub_1373970(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1373A10(uint64_t a1)
{
  sub_1373970(a1);

  operator delete();
}

uint64_t sub_1373A48(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1373A90(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
    if (v19) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    uint64_t v21 = (std::string *)sub_1880F84((void *)(a1 + 24), v20);
    uint64_t v14 = (void *)sub_188C244(v21, *(char **)v24, (uint64_t)a3);
LABEL_30:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_42;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        *(void *)uint64_t v24 = sub_188C138((uint64_t)v7, (v18 - 128));
        if (!*(void *)v24) {
          goto LABEL_42;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    *(void *)uint64_t v24 = v15;
LABEL_25:
    if (v16 > 3)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(char **)v24;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_30;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_42:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

unsigned char *sub_1373CA0(uint64_t a1, unsigned char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1373DE8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    int v6 = *(_DWORD *)(a1 + 32);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1373EB4()
{
  return 1;
}

void *sub_1373EBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString.FormatStyle");
}

uint64_t sub_1373ECC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24ACF08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    int v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148CD5C((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    int v18 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v18, (const std::string **)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    uint64_t v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      int *v20 = v19;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v21 = *(_DWORD *)(a2 + 104);
  if (v21)
  {
    uint64_t v22 = *(void *)(a2 + 112);
    uint64_t v23 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148CDE8((uint64_t *)(a1 + 96), v23, (uint64_t *)(v22 + 8), v21, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v24 = *(_DWORD *)(a1 + 104) + v21;
    *(_DWORD *)(a1 + 104) = v24;
    uint64_t v25 = *(int **)(a1 + 112);
    if (*v25 < v24) {
      int *v25 = v24;
    }
  }
  uint64_t v26 = *(void *)(a2 + 8);
  if (v26) {
    sub_188B4F8(v4, (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v27 = *(_DWORD *)(a2 + 16);
  if (v27) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v27 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  return a1;
}

void sub_1374170()
{
}

uint64_t sub_1374224(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2534750)
  {
    uint64_t v5 = *(void *)(a1 + 120);
    if (v5)
    {
      sub_1375DE0(v5);
      operator delete();
    }
    int v6 = *(void **)(a1 + 128);
    if (v6)
    {
      sub_13CF9D0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_148B3C8((void *)(a1 + 96));
  sub_1889DE8((void *)(a1 + 72));
  sub_148B348((void *)(a1 + 48));
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_137431C(uint64_t a1)
{
  sub_1374224(a1);

  operator delete();
}

uint64_t sub_1374354(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1369E6C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_137543C(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13743C4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13743E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v46 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
    return *(void *)v46;
  }
  int v6 = (void *)(a1 + 8);
  uint64_t v7 = (uint64_t **)(a1 + 72);
  uint64_t v8 = (uint64_t **)(a1 + 24);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v46 + 1);
    unsigned int v10 = **(unsigned char **)v46;
    if ((char)**(unsigned char **)v46 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v46, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v46 + 2);
      }
    }
    *(void *)uint64_t v46 = v9;
    switch(v10 >> 3)
    {
      case 3u:
        if (v10 != 26) {
          goto LABEL_65;
        }
        int v13 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v14 = (char *)(v13 + 1);
          *(void *)uint64_t v46 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 40);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 32), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 32) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *int v19 = v18;
            v19[1] = sub_3A6EDC;
            *int v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v18);
            int v14 = *(char **)v46;
          }
          int v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)uint64_t v46 = v13;
          if (!v13) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 26) {
            goto LABEL_73;
          }
        }
      case 4u:
        if (v10 != 34) {
          goto LABEL_65;
        }
        uint64_t v20 = v9 - 1;
        while (1)
        {
          int v21 = v20 + 1;
          *(void *)uint64_t v46 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            sub_13D68D0(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, v25);
            int v21 = *(unsigned __int8 **)v46;
          }
          uint64_t v20 = (unsigned __int8 *)sub_13748C8(a3, v24, v21);
          *(void *)uint64_t v46 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 34) {
            goto LABEL_73;
          }
        }
      case 5u:
        if (v10 != 42) {
          goto LABEL_65;
        }
        uint64_t v26 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          int v27 = (char *)(v26 + 1);
          *(void *)uint64_t v46 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 88);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 80) = v29 + 1;
            int v30 = *(std::string **)&v28[2 * v29 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *int v32 = v31;
            v32[1] = sub_3A6EDC;
            *uint64_t v31 = 0;
            v31[1] = 0;
            v31[2] = 0;
            int v30 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v31);
            int v27 = *(char **)v46;
          }
          uint64_t v26 = sub_188C244(v30, v27, (uint64_t)a3);
          *(void *)uint64_t v46 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 42) {
            goto LABEL_73;
          }
        }
      case 6u:
        if (v10 != 50) {
          goto LABEL_65;
        }
        uint64_t v33 = v9 - 1;
        while (1)
        {
          uint64_t v34 = v33 + 1;
          *(void *)uint64_t v46 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 112);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 104), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 104) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_13D6994(*(void *)(a1 + 96));
            uint64_t v37 = sub_188CDC8(a1 + 96, v38);
            uint64_t v34 = *(unsigned __int8 **)v46;
          }
          uint64_t v33 = (unsigned __int8 *)sub_1374958(a3, v37, v34);
          *(void *)uint64_t v46 = v33;
          if (!v33) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 50) {
            goto LABEL_73;
          }
        }
      case 7u:
        if (v10 != 58) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v39 = *(void **)(a1 + 120);
        if (!v39)
        {
          unint64_t v40 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_13D6B7C((uint64_t)v40);
          *(void *)(a1 + 120) = v39;
          int v9 = *(unsigned __int8 **)v46;
        }
        uint64_t v41 = sub_13749E8(a3, (uint64_t)v39, v9);
        goto LABEL_72;
      case 8u:
        if (v10 != 66) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        unsigned int v42 = *(void **)(a1 + 128);
        if (!v42)
        {
          uint64_t v43 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v43 = (void *)*v43;
          }
          unsigned int v42 = sub_13DA8BC((uint64_t)v43);
          *(void *)(a1 + 128) = v42;
          int v9 = *(unsigned __int8 **)v46;
        }
        uint64_t v41 = sub_1374A78(a3, (uint64_t)v42, v9);
        goto LABEL_72;
      default:
LABEL_65:
        if (v10) {
          BOOL v44 = (v10 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v6)
          {
            unsigned int v45 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v9 = *(unsigned __int8 **)v46;
          }
          uint64_t v41 = sub_1885AC0(v10, v45, (char *)v9, a3);
LABEL_72:
          *(void *)uint64_t v46 = v41;
          if (!v41) {
            return 0;
          }
LABEL_73:
          if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
            return *(void *)v46;
          }
          continue;
        }
        if (!v9) {
          return 0;
        }
        a3[10].i32[0] = v10 - 1;
        return *(void *)v46;
    }
  }
}

uint64_t sub_13748C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1371B00(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1374958(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1373A90(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13749E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1375EE8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1374A78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CFA7C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1374B08(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v10)
      {
        *__dst = 26;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 3, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 56);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *__dst = 34;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      __dst[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, __dst + 1);
      }
      else {
        uint64_t v16 = __dst + 2;
      }
      __dst = sub_1372834(v14, v16, a3);
    }
  }
  uint64_t v17 = *(unsigned int *)(a1 + 80);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 8 * v17;
    do
    {
      uint64_t v20 = *(void **)(*(void *)(a1 + 88) + v18 + 8);
      if (*((char *)v20 + 23) < 0)
      {
        int64_t v21 = v20[1];
        if (v21 > 127) {
          goto LABEL_32;
        }
      }
      else
      {
        int64_t v21 = *((unsigned __int8 *)v20 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v21)
      {
        *__dst = 42;
        __dst[1] = v21;
        if (*((char *)v20 + 23) < 0) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v22 = __dst + 2;
        memcpy(v22, v20, v21);
        __dst = &v22[v21];
        goto LABEL_30;
      }
LABEL_32:
      __dst = (char *)sub_188A868(a3, 5, (uint64_t)v20, __dst);
LABEL_30:
      v18 += 8;
    }
    while (v19 != v18);
  }
  int v23 = *(_DWORD *)(a1 + 104);
  if (v23)
  {
    for (int j = 0; j != v23; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      *__dst = 50;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      __dst[1] = v26;
      if (v26 > 0x7F) {
        int v27 = sub_188A9CC(v26, __dst + 1);
      }
      else {
        int v27 = __dst + 2;
      }
      __dst = sub_1373CA0(v25, v27, a3);
    }
  }
  int v28 = *(_DWORD *)(a1 + 16);
  if (v28)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v29 = *(void *)(a1 + 120);
    *__dst = 58;
    unsigned int v30 = *(_DWORD *)(v29 + 20);
    __dst[1] = v30;
    if (v30 > 0x7F) {
      uint64_t v31 = sub_188A9CC(v30, __dst + 1);
    }
    else {
      uint64_t v31 = __dst + 2;
    }
    __dst = sub_13760A8(v29, (unint64_t)v31, a3);
  }
  if ((v28 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v32 = *(void *)(a1 + 128);
    *__dst = 66;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    __dst[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, __dst + 1);
    }
    else {
      uint64_t v34 = __dst + 2;
    }
    __dst = sub_13CFCD4(v32, (unint64_t)v34, a3);
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return __dst;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    uint64_t v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    uint64_t v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(__dst, v38, (int)v39);
    __dst += v40;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, __dst);
}

uint64_t sub_1374EEC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1372FF8(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(unsigned int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  if ((int)v15 >= 1)
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v18 = *v17++;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  uint64_t v21 = *(int *)(a1 + 104);
  uint64_t v22 = v16 + v21;
  uint64_t v23 = *(void *)(a1 + 112);
  if (v23) {
    uint64_t v24 = (uint64_t *)(v23 + 8);
  }
  else {
    uint64_t v24 = 0;
  }
  if (v21)
  {
    uint64_t v25 = 8 * v21;
    do
    {
      uint64_t v26 = *v24++;
      uint64_t v27 = sub_1373DE8(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  int v28 = *(_DWORD *)(a1 + 16);
  if ((v28 & 3) != 0)
  {
    if (v28)
    {
      uint64_t v29 = sub_1376228(*(void *)(a1 + 120));
      v22 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v28 & 2) != 0)
    {
      uint64_t v30 = sub_13CFE78(*(void *)(a1 + 128));
      v22 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if (v31)
  {
    unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v33 + 31) < 0) {
      uint64_t v34 = *(void *)(v33 + 16);
    }
    else {
      uint64_t v34 = *(unsigned __int8 *)(v33 + 31);
    }
    v22 += v34;
  }
  *(_DWORD *)(a1 + 20) = v22;
  return v22;
}

std::string *sub_137510C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      if (!result[1].__r_.__value_.__r.__words[0])
      {
        std::string::size_type size = result->__r_.__value_.__l.__size_;
        uint64_t v6 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v6 = (void *)*v6;
        }
        sub_13D6A1C((uint64_t)v6);
        v3[1].__r_.__value_.__r.__words[0] = v7;
      }
      uint64_t result = (std::string *)sub_136A7DC();
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v8 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v8)
      {
        std::string::size_type v9 = v3->__r_.__value_.__l.__size_;
        uint64_t v10 = (void *)(v9 & 0xFFFFFFFFFFFFFFFCLL);
        if (v9) {
          uint64_t v10 = (void *)*v10;
        }
        uint64_t v8 = (std::string *)sub_13D6AE0((uint64_t)v10);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v8;
      }
      if (*(void *)(a2 + 32)) {
        unsigned int v11 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unsigned int v11 = &off_25347D8;
      }
      uint64_t result = sub_1375B80(v8, (uint64_t)v11);
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1375210(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_137523C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.FormattedString");
}

uint64_t sub_137524C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24ACF88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148CE64(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_1375340(_Unwind_Exception *a1)
{
  sub_148B448(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1375384(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148B448(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1375404(void *a1)
{
  sub_1375384(a1);

  operator delete();
}

uint64_t sub_137543C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_137543C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_13754CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 26)
      {
        uint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v32 = v16 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_13D6AE0(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
          }
          uint64_t v16 = (char *)sub_1375798(a3, v19);
          uint64_t v32 = v16;
          if (!v16) {
            goto LABEL_56;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_43;
          }
        }
      }
      goto LABEL_14;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v21 = v8 + 1;
    int v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_36;
    }
    int v23 = *v21;
    int v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      uint64_t v21 = v8 + 2;
LABEL_36:
      uint64_t v32 = v21;
      *(_DWORD *)(a1 + 52) = v22;
      goto LABEL_43;
    }
    int v28 = (char *)sub_188C0D0((uint64_t)v8, v22);
    uint64_t v32 = v28;
    *(_DWORD *)(a1 + 52) = v29;
    if (!v28) {
      goto LABEL_56;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v24 = v8 + 1;
    unint64_t v25 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_40;
    }
    int v26 = *v24;
    int v27 = v25 + (v26 << 7);
    unint64_t v25 = (v27 - 128);
    if (v26 < 0)
    {
      uint64_t v32 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
      if (!v32) {
        goto LABEL_56;
      }
      unint64_t v25 = v30;
    }
    else
    {
      uint64_t v24 = v8 + 2;
LABEL_40:
      uint64_t v32 = v24;
    }
    if (v25 > 5)
    {
      if (*v7) {
        uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v25, v31);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 48) = v25;
    }
    goto LABEL_43;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_56;
    }
    goto LABEL_43;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_56:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1375798(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13754CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_1375828(uint64_t a1, unsigned char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = (unsigned char *)sub_1375828(v15, v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return (uint64_t)v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return (uint64_t)v4;
  }

  return sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1375A68(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1375A68(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      int v9 = *(_DWORD *)(a1 + 48);
      if (v9 < 0) {
        uint64_t v10 = 11;
      }
      else {
        uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v10;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1375B80(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_148CE64((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1375C80()
{
  return 1;
}

void *sub_1375C88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ConditionalFormattedString.Condition");
}

uint64_t sub_1375C98(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AD008;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_1375D7C()
{
}

uint64_t sub_1375DE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2534810)
  {
    if (*(void *)(a1 + 24))
    {
      sub_1374224();
      operator delete();
    }
    int v5 = *(void **)(a1 + 32);
    if (v5)
    {
      sub_1375384(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1375EB0(uint64_t a1)
{
  sub_1375DE0(a1);

  operator delete();
}

char *sub_1375EE8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v20 + 2;
      }
    }
    unint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v16 = (void *)*v16;
      }
      uint64_t v15 = sub_13D6AE0((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = v20;
    }
    uint64_t v14 = sub_1375798(a3, (uint64_t)v15, (unsigned __int8 *)v7);
LABEL_31:
    unint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      sub_13D6A1C((uint64_t)v18);
      uint64_t v17 = v19;
      *(void *)(a1 + 24) = v19;
    }
    uint64_t v14 = (char *)sub_13319DC(a3, v17);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v20;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

unsigned char *sub_13760A8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_1374B08(v7, v9, (int)a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = (unsigned char *)sub_1375828(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unsigned int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unsigned int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1376228(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1375A68(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1376300@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ConditionalFormattedString");
}

void *sub_1376310(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1376394((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1376394(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2534838)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 24);
    if (v2)
    {
      sub_1374224(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_1374224(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_1374224(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = v1[7];
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = v1[8];
    if (v7)
    {
      sub_1374224(v7);
      operator delete();
    }
    uint64_t v8 = v1[9];
    if (v8)
    {
      sub_1374224(v8);
      operator delete();
    }
    uint64_t v9 = v1[10];
    if (v9)
    {
      sub_1374224(v9);
      operator delete();
    }
    uint64_t result = v1[11];
    if (result)
    {
      sub_1374224(result);
      operator delete();
    }
  }
  return result;
}

void sub_1376500(void *a1)
{
  sub_1376310(a1);

  operator delete();
}

uint64_t sub_1376538(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    uint64_t result = sub_1369E6C(*(void *)(v1 + 64));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_23;
  }
LABEL_21:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_23:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 72));
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 80));
LABEL_11:
  if ((v2 & 0x100) != 0) {
    uint64_t result = sub_1369E6C(*(void *)(v1 + 88));
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_137661C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    return v33;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v33 + 1;
    unsigned int v8 = *v33;
    if (*v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v33 + 2;
      }
    }
    unint64_t v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_55;
        }
        BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          BOOL v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 24) = v13;
        goto LABEL_54;
      case 2u:
        if (v8 != 18) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v14 = (void *)*v14;
        }
        sub_13D6A1C((uint64_t)v14);
        uint64_t v11 = v15;
        *(void *)(a1 + 32) = v15;
        goto LABEL_54;
      case 3u:
        if (v8 != 26) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 40);
        if (v11) {
          goto LABEL_55;
        }
        unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v11 = v17;
        *(void *)(a1 + 40) = v17;
        goto LABEL_54;
      case 4u:
        if (v8 != 34) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v11 = v19;
        *(void *)(a1 + 48) = v19;
        goto LABEL_54;
      case 5u:
        if (v8 != 42) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v11 = *(void *)(a1 + 56);
        if (v11) {
          goto LABEL_55;
        }
        unint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v20 = (void *)*v20;
        }
        sub_13D6A1C((uint64_t)v20);
        uint64_t v11 = v21;
        *(void *)(a1 + 56) = v21;
        goto LABEL_54;
      case 6u:
        if (v8 != 50) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v11 = *(void *)(a1 + 64);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v22 = (void *)*v22;
        }
        sub_13D6A1C((uint64_t)v22);
        uint64_t v11 = v23;
        *(void *)(a1 + 64) = v23;
        goto LABEL_54;
      case 7u:
        if (v8 != 58) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v11 = *(void *)(a1 + 72);
        if (v11) {
          goto LABEL_55;
        }
        uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v24 = (void *)*v24;
        }
        sub_13D6A1C((uint64_t)v24);
        uint64_t v11 = v25;
        *(void *)(a1 + 72) = v25;
        goto LABEL_54;
      case 8u:
        if (v8 != 66) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v11 = *(void *)(a1 + 80);
        if (v11) {
          goto LABEL_55;
        }
        int v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v26 = (void *)*v26;
        }
        sub_13D6A1C((uint64_t)v26);
        uint64_t v11 = v27;
        *(void *)(a1 + 80) = v27;
        goto LABEL_54;
      case 9u:
        if (v8 != 74) {
          goto LABEL_59;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v11 = *(void *)(a1 + 88);
        if (v11) {
          goto LABEL_55;
        }
        int v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v28 = (void *)*v28;
        }
        sub_13D6A1C((uint64_t)v28);
        uint64_t v11 = v29;
        *(void *)(a1 + 88) = v29;
LABEL_54:
        uint64_t v7 = v33;
LABEL_55:
        unint64_t v30 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_56;
      default:
LABEL_59:
        if (v8) {
          BOOL v31 = (v8 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v6)
          {
            uint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v33;
          }
          unint64_t v30 = (char *)sub_1885AC0(v8, v32, v7, a3);
LABEL_56:
          unint64_t v33 = v30;
          if (!v30) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            return v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v33;
    }
  }
}

char *sub_13769F0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    BOOL v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    BOOL v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1374B08(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1374B08(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_1374B08(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  char v4 = sub_1374B08(v22, v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 72);
  char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    uint64_t v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    uint64_t v27 = v4 + 2;
  }
  char v4 = sub_1374B08(v25, v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_65;
    }
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 80);
  char *v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    unint64_t v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    unint64_t v30 = v4 + 2;
  }
  char v4 = sub_1374B08(v28, v30, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_59:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 88);
    char *v4 = 74;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    v4[1] = v32;
    if (v32 > 0x7F) {
      unint64_t v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      unint64_t v33 = v4 + 2;
    }
    char v4 = sub_1374B08(v31, v33, a3);
  }
LABEL_65:
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    unint64_t v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    unint64_t v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_1376E50(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v6 = sub_1374EEC(*(void *)(a1 + 88));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_17;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_8:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_9:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_1374EEC(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_11:
      if ((v2 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_21;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_11;
  }
  uint64_t v10 = sub_1374EEC(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_12:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t v11 = sub_1374EEC(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_13:
    if ((v2 & 0x40) == 0) {
      goto LABEL_14;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t v12 = sub_1374EEC(*(void *)(a1 + 64));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_14:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v13 = sub_1374EEC(*(void *)(a1 + 72));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) == 0)
  {
LABEL_15:
    if ((v2 & 0x100) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_24:
  uint64_t v14 = sub_1374EEC(*(void *)(a1 + 80));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x100) != 0) {
    goto LABEL_16;
  }
LABEL_17:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v15 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1377098(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_10;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_13D6A1C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2534750;
    }
    sub_136A7DC(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    sub_13D6A1C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_2534750;
  }
  sub_136A7DC(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_28:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (void *)*v15;
    }
    sub_13D6A1C((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2534750;
  }
  sub_136A7DC(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_44;
  }
LABEL_36:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v17 = *(void *)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    sub_13D6A1C((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    unsigned int v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    unsigned int v20 = &off_2534750;
  }
  sub_136A7DC(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_52;
  }
LABEL_44:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 56);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      unsigned int v23 = (void *)*v23;
    }
    sub_13D6A1C((uint64_t)v23);
    *(void *)(a1 + 56) = v21;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v24 = &off_2534750;
  }
  sub_136A7DC(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_60;
  }
LABEL_52:
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v25 = *(void *)(a1 + 64);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (void *)*v27;
    }
    sub_13D6A1C((uint64_t)v27);
    *(void *)(a1 + 64) = v25;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v28 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v28 = &off_2534750;
  }
  sub_136A7DC(v25, (uint64_t)v28);
  if ((v4 & 0x40) != 0)
  {
LABEL_60:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v29 = *(void *)(a1 + 72);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      sub_13D6A1C((uint64_t)v31);
      *(void *)(a1 + 72) = v29;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v32 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v32 = &off_2534750;
    }
    sub_136A7DC(v29, (uint64_t)v32);
    if ((v4 & 0x80) != 0) {
      goto LABEL_68;
    }
LABEL_10:
    if ((v4 & 0x100) == 0) {
      goto LABEL_84;
    }
    goto LABEL_76;
  }
LABEL_9:
  if ((v4 & 0x80) == 0) {
    goto LABEL_10;
  }
LABEL_68:
  *(_DWORD *)(a1 + 16) |= 0x80u;
  uint64_t v33 = *(void *)(a1 + 80);
  if (!v33)
  {
    uint64_t v34 = *(void *)(a1 + 8);
    uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
    if (v34) {
      uint64_t v35 = (void *)*v35;
    }
    sub_13D6A1C((uint64_t)v35);
    *(void *)(a1 + 80) = v33;
  }
  if (*(void *)(a2 + 80)) {
    unint64_t v36 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    unint64_t v36 = &off_2534750;
  }
  sub_136A7DC(v33, (uint64_t)v36);
  if ((v4 & 0x100) != 0)
  {
LABEL_76:
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v37 = *(void *)(a1 + 88);
    if (!v37)
    {
      uint64_t v38 = *(void *)(a1 + 8);
      uint64_t v39 = (void *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
      if (v38) {
        uint64_t v39 = (void *)*v39;
      }
      sub_13D6A1C((uint64_t)v39);
      *(void *)(a1 + 88) = v37;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v40 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v40 = &off_2534750;
    }
    sub_136A7DC(v37, (uint64_t)v40);
  }
LABEL_84:
  uint64_t v41 = *(void *)(a2 + 8);
  if (v41)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v41 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1377394(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_137746C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.PlaceFormattedString");
}

uint64_t sub_137747C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2534898)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_13D2774(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 112);
    if (v7)
    {
      sub_1374224(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1365CFC((void *)(a1 + 72));
  sub_1365CFC((void *)(a1 + 48));
  sub_1365CFC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1377590(uint64_t a1)
{
  sub_137747C(a1);

  operator delete();
}

uint64_t sub_13775C8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1369E6C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1369E6C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 7) != 0)
  {
    if (v11)
    {
      uint64_t result = sub_1369E6C(*(void *)(v1 + 96));
      if ((v11 & 2) == 0)
      {
LABEL_16:
        if ((v11 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_17;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t result = sub_1369F48(*(void *)(v1 + 104));
    if ((v11 & 4) != 0) {
LABEL_17:
    }
      uint64_t result = sub_1369E6C(*(void *)(v1 + 112));
  }
LABEL_18:
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

char *sub_13776D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v39 = a2;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    return v39;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v39 + 1;
    unsigned int v8 = *v39;
    if (*v39 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v39, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v39 + 2;
      }
    }
    uint64_t v39 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 96);
        if (v11) {
          goto LABEL_56;
        }
        uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 96) = v13;
        goto LABEL_55;
      case 2u:
        if (v8 != 18) {
          goto LABEL_57;
        }
        uint64_t v14 = v7 - 1;
        while (1)
        {
          unint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v39 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            unint64_t v15 = (unsigned __int8 *)v39;
          }
          uint64_t v14 = (char *)sub_13319DC(a3, v18, v15);
          uint64_t v39 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_65;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_57;
        }
        unsigned int v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v39 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, v25);
            uint64_t v21 = (unsigned __int8 *)v39;
          }
          unsigned int v20 = (char *)sub_13319DC(a3, v24, v21);
          uint64_t v39 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_65;
          }
        }
      case 4u:
        if (v8 != 34) {
          goto LABEL_57;
        }
        uint64_t v26 = v7 - 1;
        while (1)
        {
          uint64_t v27 = (unsigned __int8 *)(v26 + 1);
          uint64_t v39 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 88);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 80), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 80) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 72));
            uint64_t v30 = sub_188CDC8(a1 + 72, v31);
            uint64_t v27 = (unsigned __int8 *)v39;
          }
          uint64_t v26 = (char *)sub_13319DC(a3, v30, v27);
          uint64_t v39 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
            goto LABEL_65;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v32 = *(void *)(a1 + 104);
        if (!v32)
        {
          uint64_t v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v33 = (void *)*v33;
          }
          uint64_t v32 = sub_13DAB08((uint64_t)v33);
          *(void *)(a1 + 104) = v32;
          uint64_t v7 = v39;
        }
        uint64_t v34 = (char *)sub_1323390(a3, v32, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 7u:
        if (v8 != 58) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 112);
        if (!v11)
        {
          uint64_t v35 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v35 = (void *)*v35;
          }
          sub_13D6A1C((uint64_t)v35);
          uint64_t v11 = v36;
          *(void *)(a1 + 112) = v36;
LABEL_55:
          uint64_t v7 = v39;
        }
LABEL_56:
        uint64_t v34 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_64;
      default:
LABEL_57:
        if (v8) {
          BOOL v37 = (v8 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v6)
          {
            uint64_t v38 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v39;
          }
          uint64_t v34 = (char *)sub_1885AC0(v8, v38, v7, a3);
LABEL_64:
          uint64_t v39 = v34;
          if (!v34) {
            return 0;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            return v39;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v39;
    }
  }
}

char *sub_1377AD4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_1374B08(v12, v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      uint64_t v4 = sub_1374B08(v17, v19, a3);
    }
  }
  int v20 = *(_DWORD *)(a1 + 80);
  if (v20)
  {
    for (int k = 0; k != v20; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v22 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      char *v4 = 34;
      unsigned int v23 = *(_DWORD *)(v22 + 20);
      v4[1] = v23;
      if (v23 > 0x7F) {
        uint64_t v24 = sub_188A9CC(v23, v4 + 1);
      }
      else {
        uint64_t v24 = v4 + 2;
      }
      uint64_t v4 = sub_1374B08(v22, v24, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 104);
    char *v4 = 50;
    unsigned int v26 = *(_DWORD *)(v25 + 44);
    v4[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, v4 + 1);
    }
    else {
      uint64_t v27 = v4 + 2;
    }
    uint64_t v4 = sub_13D2F58(v25, v27, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 112);
    char *v4 = 58;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      uint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      uint64_t v30 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v28, v30, a3);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_1377E50(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    uint64_t v11 = (uint64_t *)(v10 + 8);
  }
  else {
    uint64_t v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1374EEC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    unsigned int v18 = (uint64_t *)(v17 + 8);
  }
  else {
    unsigned int v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1374EEC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 7) != 0)
  {
    if (v22)
    {
      uint64_t v26 = sub_1374EEC(*(void *)(a1 + 96));
      v16 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 2) == 0)
      {
LABEL_24:
        if ((v22 & 4) == 0) {
          goto LABEL_26;
        }
        goto LABEL_25;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_24;
    }
    uint64_t v27 = sub_13D3304(*(void *)(a1 + 104));
    v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 4) != 0)
    {
LABEL_25:
      uint64_t v23 = sub_1374EEC(*(void *)(a1 + 112));
      v16 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_26:
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v28 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v16 += v29;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_1378048(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1365F80((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365F80((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1365F80((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    unsigned int v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 7) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void *)(a1 + 96);
      if (!v20)
      {
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (void *)*v22;
        }
        sub_13D6A1C((uint64_t)v22);
        *(void *)(a1 + 96) = v20;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v23 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v23 = &off_2534750;
      }
      sub_136A7DC(v20, (uint64_t)v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_39;
        }
        goto LABEL_31;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v24 = *(void *)(a1 + 104);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = sub_13DAB08((uint64_t)v26);
      *(void *)(a1 + 104) = v24;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v27 = &off_2536850;
    }
    sub_136AA7C(v24, (uint64_t)v27);
    if ((v19 & 4) != 0)
    {
LABEL_31:
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v28 = *(void *)(a1 + 112);
      if (!v28)
      {
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v30 = (void *)*v30;
        }
        sub_13D6A1C((uint64_t)v30);
        *(void *)(a1 + 112) = v28;
      }
      if (*(void *)(a2 + 112)) {
        uint64_t v31 = *(uint64_t (****)())(a2 + 112);
      }
      else {
        uint64_t v31 = &off_2534750;
      }
      sub_136A7DC(v28, (uint64_t)v31);
    }
  }
LABEL_39:
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13782D4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_136ADBC(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_136ADBC(*(void *)(*(void *)(a1 + 88) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 96));
    if (!result) {
      return result;
    }
    int v12 = *(_DWORD *)(a1 + 16);
  }
  if ((v12 & 2) != 0)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 104));
    if (!result) {
      return result;
    }
    int v12 = *(_DWORD *)(a1 + 16);
  }
  if ((v12 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 112));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13783B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DrivingWalkingInstruction");
}

void *sub_13783C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1378444((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_1378444(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2534910)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    if (v4)
    {
      sub_1374224(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_1374224((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1378528(void *a1)
{
  sub_13783C0(a1);

  operator delete();
}

uint64_t sub_1378560(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_17:
    uint64_t result = sub_1369E6C(*(void *)(v1 + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_18;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  uint64_t result = sub_1369E6C(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
    goto LABEL_17;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_18:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_137862C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (unsigned __int8 *)(*(void *)v26 + 1);
    unsigned int v8 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (unsigned __int8 *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (v11) {
          goto LABEL_30;
        }
        int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 32) = v13;
        goto LABEL_29;
      case 2u:
        if (v8 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 40);
        if (v11) {
          goto LABEL_30;
        }
        int v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v14 = (void *)*v14;
        }
        sub_13D6A1C((uint64_t)v14);
        uint64_t v11 = v15;
        *(void *)(a1 + 40) = v15;
        goto LABEL_29;
      case 3u:
        if (v8 != 26) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (v11) {
          goto LABEL_30;
        }
        uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v11 = v17;
        *(void *)(a1 + 48) = v17;
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v11 = *(void *)(a1 + 56);
        if (v11) {
          goto LABEL_30;
        }
        unsigned int v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v11 = v19;
        *(void *)(a1 + 56) = v19;
LABEL_29:
        char v7 = *(unsigned __int8 **)v26;
LABEL_30:
        uint64_t v20 = sub_13319DC(a3, v11, v7);
        goto LABEL_42;
      case 5u:
        if (v8 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (uint64_t *)*v22;
        }
        uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 24), v22);
        uint64_t v20 = (uint64_t)sub_188C244(v23, *(char **)v26, (uint64_t)a3);
        goto LABEL_42;
      default:
LABEL_35:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(unsigned __int8 **)v26;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v8, v25, (char *)v7, a3);
LABEL_42:
          *(void *)uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            return *(void *)v26;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v26;
    }
  }
}

char *sub_13788EC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v9 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v10 = *(_DWORD *)(v9 + 20);
    v4[1] = v10;
    if (v10 > 0x7F) {
      uint64_t v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      uint64_t v11 = v4 + 2;
    }
    char v4 = sub_1374B08(v9, v11, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 40);
  char *v4 = 18;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  v4[1] = v13;
  if (v13 > 0x7F) {
    int v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    int v14 = v4 + 2;
  }
  char v4 = sub_1374B08(v12, v14, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 48);
  char *v4 = 26;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  v4[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, v4 + 1);
  }
  else {
    uint64_t v17 = v4 + 2;
  }
  char v4 = sub_1374B08(v15, v17, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 1) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 56);
  char *v4 = 34;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  v4[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    uint64_t v20 = v4 + 2;
  }
  char v4 = sub_1374B08(v18, v20, a3);
  if (v6) {
LABEL_6:
  }
    char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1378B68(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_14;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = sub_1374EEC(*(void *)(a1 + 40));
    v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_1374EEC(*(void *)(a1 + 48));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) != 0)
  {
LABEL_13:
    uint64_t v8 = sub_1374EEC(*(void *)(a1 + 56));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v13 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1378CF0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) == 0) {
    goto LABEL_43;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      sub_13D6A1C((uint64_t)v11);
      *(void *)(a1 + 32) = v9;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v12 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v12 = &off_2534750;
    }
    sub_136A7DC(v9, (uint64_t)v12);
    if ((v4 & 4) == 0)
    {
LABEL_8:
      if ((v4 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_8;
  }
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    sub_13D6A1C((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    unsigned int v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    unsigned int v16 = &off_2534750;
  }
  sub_136A7DC(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_9:
    if ((v4 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_35;
  }
LABEL_27:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v17 = *(void *)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    unsigned int v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      unsigned int v19 = (void *)*v19;
    }
    sub_13D6A1C((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    uint64_t v20 = &off_2534750;
  }
  sub_136A7DC(v17, (uint64_t)v20);
  if ((v4 & 0x10) != 0)
  {
LABEL_35:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v21 = *(void *)(a1 + 56);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        uint64_t v23 = (void *)*v23;
      }
      sub_13D6A1C((uint64_t)v23);
      *(void *)(a1 + 56) = v21;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v24 = &off_2534750;
    }
    sub_136A7DC(v21, (uint64_t)v24);
  }
LABEL_43:
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1378EB8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1378F2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteInformation");
}

void *sub_1378F3C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1378FCC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1365CFC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_1378FCC(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2534950)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 48);
    if (v2)
    {
      sub_1374224(v2);
      operator delete();
    }
    uint64_t v3 = v1[7];
    if (v3)
    {
      sub_1374224(v3);
      operator delete();
    }
    uint64_t v4 = v1[8];
    if (v4)
    {
      sub_1374224(v4);
      operator delete();
    }
    uint64_t result = v1[9];
    if (result)
    {
      sub_1374224(result);
      operator delete();
    }
  }
  return result;
}

void sub_1379098(void *a1)
{
  sub_1378F3C(a1);

  operator delete();
}

uint64_t sub_13790D0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_17;
  }
  uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
  if ((v5 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_17:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 64));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 72));
LABEL_11:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 72) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_13791A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (v12) {
          goto LABEL_30;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        sub_13D6A1C((uint64_t)v13);
        uint64_t v12 = v14;
        *(void *)(a1 + 48) = v14;
        goto LABEL_29;
      case 2u:
        if (v9 != 18) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 56);
        if (v12) {
          goto LABEL_30;
        }
        uint64_t v15 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v15 = (void *)*v15;
        }
        sub_13D6A1C((uint64_t)v15);
        uint64_t v12 = v16;
        *(void *)(a1 + 56) = v16;
        goto LABEL_29;
      case 3u:
        if (v9 != 26) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void *)(a1 + 64);
        if (v12) {
          goto LABEL_30;
        }
        uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v17 = (void *)*v17;
        }
        sub_13D6A1C((uint64_t)v17);
        uint64_t v12 = v18;
        *(void *)(a1 + 64) = v18;
        goto LABEL_29;
      case 4u:
        if (v9 != 34) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v12 = *(void *)(a1 + 72);
        if (v12) {
          goto LABEL_30;
        }
        unsigned int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v19 = (void *)*v19;
        }
        sub_13D6A1C((uint64_t)v19);
        uint64_t v12 = v20;
        *(void *)(a1 + 72) = v20;
LABEL_29:
        uint64_t v8 = v35;
LABEL_30:
        uint64_t v21 = (char *)sub_13319DC(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_31;
      case 5u:
        if (v9 != 42) {
          goto LABEL_49;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          uint64_t v35 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, v27);
            uint64_t v23 = (unsigned __int8 *)v35;
          }
          uint64_t v22 = (char *)sub_13319DC(a3, v26, v23);
          uint64_t v35 = v22;
          if (!v22) {
            goto LABEL_61;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 42) {
            goto LABEL_32;
          }
        }
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x10u;
        uint64_t v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_48;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          unint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v29);
          uint64_t v35 = v33;
          *(_DWORD *)(a1 + 80) = v34;
          if (!v33) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_48:
          uint64_t v35 = v28;
          *(_DWORD *)(a1 + 80) = v29;
        }
        goto LABEL_32;
      default:
LABEL_49:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if (*v7)
          {
            uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v35;
          }
          uint64_t v21 = (char *)sub_1885AC0(v9, v32, v8, a3);
LABEL_31:
          uint64_t v35 = v21;
          if (!v21) {
            goto LABEL_61;
          }
LABEL_32:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

char *sub_1379518(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v13, v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 72);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v16, v18, a3);
  }
LABEL_30:
  int v19 = *(_DWORD *)(a1 + 32);
  if (v19)
  {
    for (int i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 42;
      unsigned int v22 = *(_DWORD *)(v21 + 20);
      v4[1] = v22;
      if (v22 > 0x7F) {
        uint64_t v23 = sub_188A9CC(v22, v4 + 1);
      }
      else {
        uint64_t v23 = v4 + 2;
      }
      uint64_t v4 = sub_1374B08(v21, v23, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v24 = *(_DWORD *)(a1 + 80);
    char *v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unsigned int v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_137987C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_16;
  }
  if (v8)
  {
    uint64_t v11 = sub_1374EEC(*(void *)(a1 + 48));
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
LABEL_20:
      uint64_t v13 = sub_1374EEC(*(void *)(a1 + 64));
      v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 8) == 0)
      {
LABEL_14:
        if ((v8 & 0x10) == 0) {
          goto LABEL_16;
        }
        goto LABEL_15;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_1374EEC(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_13:
  if ((v8 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_21:
  uint64_t v14 = sub_1374EEC(*(void *)(a1 + 72));
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) != 0) {
LABEL_15:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v15 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1379A34(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1365F80((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        sub_13D6A1C((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v14 = &off_2534750;
      }
      sub_136A7DC(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_32;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unsigned int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unsigned int v17 = (void *)*v17;
      }
      sub_13D6A1C((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_2534750;
    }
    sub_136A7DC(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_40;
    }
LABEL_32:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v19 = *(void *)(a1 + 64);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      sub_13D6A1C((uint64_t)v21);
      *(void *)(a1 + 64) = v19;
    }
    if (*(void *)(a2 + 64)) {
      unsigned int v22 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unsigned int v22 = &off_2534750;
    }
    sub_136A7DC(v19, (uint64_t)v22);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v23 = *(void *)(a1 + 72);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      unsigned int v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        unsigned int v25 = (void *)*v25;
      }
      sub_13D6A1C((uint64_t)v25);
      *(void *)(a1 + 72) = v23;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v26 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v26 = &off_2534750;
    }
    sub_136A7DC(v23, (uint64_t)v26);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1379C54(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 4) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1379CF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DrivingWalkingSpokenInstruction");
}

uint64_t sub_1379D04(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1379DA4(uint64_t a1)
{
  sub_1379D04(a1);

  operator delete();
}

uint64_t sub_1379DDC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1379E20(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)unsigned int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)unsigned int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)unsigned int v17 = 0;
  return *(void *)v17;
}

char *sub_1379F78(uint64_t a1, char *__dst, void *a3)
{
  char v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_137A044(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_137A0C8()
{
  return 1;
}

void *sub_137A0D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.GenericInstruction");
}

uint64_t sub_137A0E0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25349C8)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_137A1B0(uint64_t a1)
{
  sub_137A0E0(a1);

  operator delete();
}

uint64_t sub_137A1E8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1369E6C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_137A25C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v27 + 2;
      }
    }
    uint64_t v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unsigned int v17 = v8 + 1;
    uint64_t v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    uint64_t v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      unsigned int v17 = v8 + 2;
LABEL_25:
      uint64_t v27 = v17;
      *(unsigned char *)(a1 + 40) = v18 != 0;
      goto LABEL_38;
    }
    unsigned int v25 = (char *)sub_188C138((uint64_t)v8, v18);
    uint64_t v27 = v25;
    *(unsigned char *)(a1 + 40) = v26 != 0;
    if (!v25) {
      goto LABEL_45;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 32);
    if (!v20)
    {
      uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v21 = (void *)*v21;
      }
      sub_13D6A1C((uint64_t)v21);
      uint64_t v20 = v22;
      *(void *)(a1 + 32) = v22;
      goto LABEL_35;
    }
LABEL_36:
    uint64_t v16 = (char *)sub_13319DC(a3, v20, (unsigned __int8 *)v8);
    goto LABEL_37;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 24);
    if (!v20)
    {
      uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v23 = (void *)*v23;
      }
      sub_13D6A1C((uint64_t)v23);
      uint64_t v20 = v24;
      *(void *)(a1 + 24) = v24;
LABEL_35:
      uint64_t v8 = v27;
      goto LABEL_36;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v27;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
LABEL_37:
    uint64_t v27 = v16;
    if (!v16) {
      goto LABEL_45;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v27;
}

char *sub_137A49C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 40);
    char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
LABEL_20:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unsigned int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unsigned int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_137A660(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_137A740(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        sub_13D6A1C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2534750;
      }
      sub_136A7DC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      sub_13D6A1C((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      char v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      char v13 = &off_2534750;
    }
    sub_136A7DC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_137A860(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_137A8AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TransitListTimeInstruction");
}

uint64_t sub_137A8BC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AD388;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  return a1;
}

void sub_137A948(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_137A978(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25349F8)
  {
    uint64_t v5 = *(void *)(a1 + 168);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 176);
    if (v6)
    {
      sub_137A0E0(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1365CFC((void *)(a1 + 144));
  sub_1365CFC((void *)(a1 + 120));
  sub_1365CFC((void *)(a1 + 96));
  sub_1365CFC((void *)(a1 + 72));
  sub_1365CFC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_137AA8C(uint64_t a1)
{
  sub_137A978(a1);

  operator delete();
}

uint64_t sub_137AAC4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1369E6C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1369E6C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_1369E6C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    char v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_1369E6C(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    unint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_1369E6C(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 40);
  if ((v18 & 3) != 0)
  {
    if (v18) {
      uint64_t result = sub_1369E6C(*(void *)(a1 + 168));
    }
    if ((v18 & 2) != 0) {
      uint64_t result = sub_137A1E8(*(void *)(a1 + 176));
    }
  }
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = a1 + 8;
  *(_DWORD *)(v19 + 32) = 0;
  if (v20)
  {
    return sub_188B4AC((uint64_t *)v19);
  }
  return result;
}

char *sub_137AC10(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v49 = a2;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    return v49;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v49 + 1;
    unsigned int v8 = *v49;
    if (*v49 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v49, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v49 + 2;
      }
    }
    uint64_t v49 = v7;
    switch(v8 >> 3)
    {
      case 4u:
        if (v8 != 34) {
          goto LABEL_71;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v49 = v11 + 1;
          char v13 = *(_DWORD **)(a1 + 64);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 56), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 56) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 48));
            uint64_t v15 = sub_188CDC8(a1 + 48, v16);
            uint64_t v12 = (unsigned __int8 *)v49;
          }
          uint64_t v11 = (char *)sub_13319DC(a3, v15, v12);
          uint64_t v49 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 34) {
            goto LABEL_81;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_71;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          int v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v49 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 88);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 80), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 80) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 72));
            uint64_t v21 = sub_188CDC8(a1 + 72, v22);
            int v18 = (unsigned __int8 *)v49;
          }
          uint64_t v17 = (char *)sub_13319DC(a3, v21, v18);
          uint64_t v49 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 42) {
            goto LABEL_81;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_71;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          uint64_t v24 = (unsigned __int8 *)(v23 + 1);
          uint64_t v49 = v23 + 1;
          unsigned int v25 = *(_DWORD **)(a1 + 112);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 104), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 104) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 96));
            uint64_t v27 = sub_188CDC8(a1 + 96, v28);
            uint64_t v24 = (unsigned __int8 *)v49;
          }
          uint64_t v23 = (char *)sub_13319DC(a3, v27, v24);
          uint64_t v49 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 50) {
            goto LABEL_81;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_71;
        }
        unint64_t v29 = v7 - 1;
        while (1)
        {
          int v30 = (unsigned __int8 *)(v29 + 1);
          uint64_t v49 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 136);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 128), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 128) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 120));
            uint64_t v33 = sub_188CDC8(a1 + 120, v34);
            int v30 = (unsigned __int8 *)v49;
          }
          unint64_t v29 = (char *)sub_13319DC(a3, v33, v30);
          uint64_t v49 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 58) {
            goto LABEL_81;
          }
        }
      case 8u:
        if (v8 != 66) {
          goto LABEL_71;
        }
        uint64_t v35 = v7 - 1;
        while (1)
        {
          uint64_t v36 = (unsigned __int8 *)(v35 + 1);
          uint64_t v49 = v35 + 1;
          BOOL v37 = *(_DWORD **)(a1 + 160);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 152), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 152) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 144));
            uint64_t v39 = sub_188CDC8(a1 + 144, v40);
            uint64_t v36 = (unsigned __int8 *)v49;
          }
          uint64_t v35 = (char *)sub_13319DC(a3, v39, v36);
          uint64_t v49 = v35;
          if (!v35) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 66) {
            goto LABEL_81;
          }
        }
      case 9u:
        if (v8 != 74) {
          goto LABEL_71;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v41 = *(void *)(a1 + 168);
        if (!v41)
        {
          unsigned int v42 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v42 = (void *)*v42;
          }
          sub_13D6A1C((uint64_t)v42);
          uint64_t v41 = v43;
          *(void *)(a1 + 168) = v43;
          uint64_t v7 = v49;
        }
        BOOL v44 = (char *)sub_13319DC(a3, v41, (unsigned __int8 *)v7);
        goto LABEL_80;
      case 0xAu:
        if (v8 != 82) {
          goto LABEL_71;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v45 = *(void *)(a1 + 176);
        if (!v45)
        {
          uint64_t v46 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v46 = (void *)*v46;
          }
          uint64_t v45 = sub_13D6EDC((uint64_t)v46);
          *(void *)(a1 + 176) = v45;
          uint64_t v7 = v49;
        }
        BOOL v44 = sub_1343D10(a3, v45, (unsigned __int8 *)v7);
        goto LABEL_80;
      default:
LABEL_71:
        if (v8) {
          BOOL v47 = (v8 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (v8 - 7600 > 0x18F)
          {
            if (*v6)
            {
              unsigned int v48 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = v49;
            }
            BOOL v44 = (char *)sub_1885AC0(v8, v48, v7, a3);
          }
          else
          {
            BOOL v44 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25349F8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_80:
          uint64_t v49 = v44;
          if (!v44) {
            return 0;
          }
LABEL_81:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            return v49;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v49;
    }
  }
}

char *sub_137B128(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 34;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1374B08(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 42;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_1374B08(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 104);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *a2 = 50;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_1374B08(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 128);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *a2 = 58;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      a2[1] = v24;
      if (v24 > 0x7F) {
        unsigned int v25 = sub_188A9CC(v24, a2 + 1);
      }
      else {
        unsigned int v25 = a2 + 2;
      }
      a2 = sub_1374B08(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 152);
  if (v26)
  {
    for (int n = 0; n != v26; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *a2 = 66;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      a2[1] = v29;
      if (v29 > 0x7F) {
        int v30 = sub_188A9CC(v29, a2 + 1);
      }
      else {
        int v30 = a2 + 2;
      }
      a2 = sub_1374B08(v28, v30, a3);
    }
  }
  int v31 = *(_DWORD *)(a1 + 40);
  if (v31)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v32 = *(void *)(a1 + 168);
    *a2 = 74;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    a2[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, a2 + 1);
    }
    else {
      uint64_t v34 = a2 + 2;
    }
    a2 = sub_1374B08(v32, v34, a3);
  }
  if ((v31 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v35 = *(void *)(a1 + 176);
    *a2 = 82;
    unsigned int v36 = *(_DWORD *)(v35 + 20);
    a2[1] = v36;
    if (v36 > 0x7F) {
      BOOL v37 = sub_188A9CC(v36, a2 + 1);
    }
    else {
      BOOL v37 = a2 + 2;
    }
    a2 = sub_137A49C(v35, (unint64_t)v37, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 950, 1000, a2, a3);
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if ((v38 & 1) == 0) {
    return a2;
  }
  unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    uint64_t v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    uint64_t v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(a2, v41, (int)v42);
    a2 += v43;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v41, v42, a2);
}

uint64_t sub_137B56C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1374EEC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1374EEC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1374EEC(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_1374EEC(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    uint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    uint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_1374EEC(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  int v38 = *(_DWORD *)(a1 + 40);
  if ((v38 & 3) != 0)
  {
    if (v38)
    {
      uint64_t v39 = sub_1374EEC(*(void *)(a1 + 168));
      v32 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v38 & 2) != 0)
    {
      uint64_t v40 = sub_137A660(*(void *)(a1 + 176));
      v32 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v41 = *(void *)(a1 + 8);
  if (v41)
  {
    unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v43 + 31) < 0) {
      uint64_t v44 = *(void *)(v43 + 16);
    }
    else {
      uint64_t v44 = *(unsigned __int8 *)(v43 + 31);
    }
    v32 += v44;
  }
  *(_DWORD *)(a1 + 44) = v32;
  return v32;
}

void sub_137B7CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365F80((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1365F80((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_1365F80((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1365F80((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_1365F80((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 40);
  if ((v29 & 3) != 0)
  {
    if (v29)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v30 = *(void *)(a1 + 168);
      if (!v30)
      {
        uint64_t v31 = *(void *)(a1 + 8);
        uint64_t v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
        if (v31) {
          uint64_t v32 = (void *)*v32;
        }
        sub_13D6A1C((uint64_t)v32);
        *(void *)(a1 + 168) = v30;
      }
      if (*(void *)(a2 + 168)) {
        uint64_t v33 = *(uint64_t (****)())(a2 + 168);
      }
      else {
        uint64_t v33 = &off_2534750;
      }
      sub_136A7DC(v30, (uint64_t)v33);
    }
    if ((v29 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v34 = *(void *)(a1 + 176);
      if (!v34)
      {
        uint64_t v35 = *(void *)(a1 + 8);
        uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
        if (v35) {
          uint64_t v36 = (void *)*v36;
        }
        uint64_t v34 = sub_13D6EDC((uint64_t)v36);
        *(void *)(a1 + 176) = v34;
      }
      if (*(void *)(a2 + 176)) {
        uint64_t v37 = *(uint64_t (****)())(a2 + 176);
      }
      else {
        uint64_t v37 = &off_25349C8;
      }
      sub_137A740(v34, (uint64_t)v37);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v38 = *(void *)(a2 + 8);
  if (v38)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v38 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_137BADC(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_136ADBC(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_136ADBC(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_136ADBC(*(void *)(*(void *)(a1 + 112) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 128);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_136ADBC(*(void *)(*(void *)(a1 + 136) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v15 = *(unsigned int *)(a1 + 152);
    while ((int)v15 >= 1)
    {
      uint64_t v16 = v15 - 1;
      char v17 = sub_136ADBC(*(void *)(*(void *)(a1 + 160) + 8 * v15));
      uint64_t result = 0;
      uint64_t v15 = v16;
      if ((v17 & 1) == 0) {
        return result;
      }
    }
    int v18 = *(_DWORD *)(a1 + 40);
    if (v18)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 168));
      if (!result) {
        return result;
      }
      int v18 = *(_DWORD *)(a1 + 40);
    }
    if ((v18 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_137A860(*(void *)(a1 + 176));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_137BC08@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TransitListInstruction");
}

uint64_t sub_137BC18(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AD408;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a2;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = a2;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 136) = a2;
  *(_DWORD *)(a1 + 160) = 0;
  return a1;
}

void sub_137BCA0(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_137BCD0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1365CFC(a1 + 17);
  sub_1365CFC(a1 + 14);
  sub_1365CFC(a1 + 11);
  sub_1365CFC(a1 + 8);
  sub_1365CFC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_137BD88(void *a1)
{
  sub_137BCD0(a1);

  operator delete();
}

uint64_t sub_137BDC0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1369E6C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1369E6C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 96);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_1369E6C(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 96) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 120);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 128) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_1369E6C(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 120) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 144);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 152) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_1369E6C(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 144) = 0;
  }
  char v19 = *(unsigned char *)(a1 + 8);
  int v18 = (uint64_t *)(a1 + 8);
  if (v19)
  {
    return sub_188B4AC(v18);
  }
  return result;
}

char *sub_137BEE4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v44 = a2;
  if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
    return v44;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v44 + 1;
    unsigned int v8 = *v44;
    if (*v44 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v44, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v44 + 2;
      }
    }
    uint64_t v44 = v7;
    switch(v8 >> 3)
    {
      case 4u:
        if (v8 != 34) {
          goto LABEL_59;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v44 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 56);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 48), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 48) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 40));
            uint64_t v15 = sub_188CDC8(a1 + 40, v16);
            uint64_t v12 = (unsigned __int8 *)v44;
          }
          uint64_t v11 = (char *)sub_13319DC(a3, v15, v12);
          uint64_t v44 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 34) {
            goto LABEL_69;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_59;
        }
        uint64_t v17 = v7 - 1;
        while (1)
        {
          int v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v44 = v17 + 1;
          char v19 = *(_DWORD **)(a1 + 80);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 72), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 72) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 64));
            uint64_t v21 = sub_188CDC8(a1 + 64, v22);
            int v18 = (unsigned __int8 *)v44;
          }
          uint64_t v17 = (char *)sub_13319DC(a3, v21, v18);
          uint64_t v44 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 42) {
            goto LABEL_69;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_59;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          int v24 = (unsigned __int8 *)(v23 + 1);
          uint64_t v44 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 104);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 96), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 96) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 88));
            uint64_t v27 = sub_188CDC8(a1 + 88, v28);
            int v24 = (unsigned __int8 *)v44;
          }
          uint64_t v23 = (char *)sub_13319DC(a3, v27, v24);
          uint64_t v44 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 50) {
            goto LABEL_69;
          }
        }
      case 7u:
        if (v8 != 58) {
          goto LABEL_59;
        }
        int v29 = v7 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          uint64_t v44 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 128);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 120), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 120) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 112));
            uint64_t v33 = sub_188CDC8(a1 + 112, v34);
            uint64_t v30 = (unsigned __int8 *)v44;
          }
          int v29 = (char *)sub_13319DC(a3, v33, v30);
          uint64_t v44 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 58) {
            goto LABEL_69;
          }
        }
      case 8u:
        if (v8 != 66) {
          goto LABEL_59;
        }
        uint64_t v35 = v7 - 1;
        while (1)
        {
          uint64_t v36 = (unsigned __int8 *)(v35 + 1);
          uint64_t v44 = v35 + 1;
          uint64_t v37 = *(_DWORD **)(a1 + 152);
          if (v37 && (uint64_t v38 = *(int *)(a1 + 144), (int)v38 < *v37))
          {
            *(_DWORD *)(a1 + 144) = v38 + 1;
            uint64_t v39 = *(void *)&v37[2 * v38 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 136));
            uint64_t v39 = sub_188CDC8(a1 + 136, v40);
            uint64_t v36 = (unsigned __int8 *)v44;
          }
          uint64_t v35 = (char *)sub_13319DC(a3, v39, v36);
          uint64_t v44 = v35;
          if (!v35) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v35 || *v35 != 66) {
            goto LABEL_69;
          }
        }
      default:
LABEL_59:
        if (v8) {
          BOOL v41 = (v8 & 7) == 4;
        }
        else {
          BOOL v41 = 1;
        }
        if (!v41)
        {
          if (v8 - 7600 > 0x18F)
          {
            if (*v6)
            {
              unint64_t v43 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = v44;
            }
            uint64_t v42 = sub_1885AC0(v8, v43, v7, a3);
          }
          else
          {
            uint64_t v42 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2534AB0, (uint64_t *)(a1 + 8), a3);
          }
          uint64_t v44 = (char *)v42;
          if (!v42) {
            return 0;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            return v44;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v44;
    }
  }
}

char *sub_137C354(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 34;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1374B08(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *a2 = 42;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_1374B08(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 96);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 104) + 8 * k + 8);
      *a2 = 50;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_1374B08(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 120);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 128) + 8 * m + 8);
      *a2 = 58;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      a2[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, a2 + 1);
      }
      else {
        uint64_t v25 = a2 + 2;
      }
      a2 = sub_1374B08(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 144);
  if (v26)
  {
    for (int n = 0; n != v26; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 152) + 8 * n + 8);
      *a2 = 66;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      a2[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, a2 + 1);
      }
      else {
        uint64_t v30 = a2 + 2;
      }
      a2 = sub_1374B08(v28, v30, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 950, 1000, a2, a3);
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return a2;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(a2, v34, (int)v35);
    a2 += v36;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, a2);
}

uint64_t sub_137C6CC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1374EEC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1374EEC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 96);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 104);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_1374EEC(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 120);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 128);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_1374EEC(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 144);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 152);
  if (v33) {
    uint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    uint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_1374EEC(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if (v38)
  {
    unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v40 + 31) < 0) {
      uint64_t v41 = *(void *)(v40 + 16);
    }
    else {
      uint64_t v41 = *(unsigned __int8 *)(v40 + 31);
    }
    v32 += v41;
  }
  *(_DWORD *)(a1 + 160) = v32;
  return v32;
}

void sub_137C8C0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1365F80((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1365F80((uint64_t *)(a1 + 64), v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 96);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 104) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_1365F80((uint64_t *)(a1 + 88), v16, v15, v14, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v17 = *(_DWORD *)(a1 + 96) + v14;
    *(_DWORD *)(a1 + 96) = v17;
    uint64_t v18 = *(int **)(a1 + 104);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 120);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 128) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 112, *(_DWORD *)(a2 + 120));
    sub_1365F80((uint64_t *)(a1 + 112), v21, v20, v19, **(_DWORD **)(a1 + 128) - *(_DWORD *)(a1 + 120));
    int v22 = *(_DWORD *)(a1 + 120) + v19;
    *(_DWORD *)(a1 + 120) = v22;
    uint64_t v23 = *(int **)(a1 + 128);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 144);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 152) + 8);
    uint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 136, *(_DWORD *)(a2 + 144));
    sub_1365F80((uint64_t *)(a1 + 136), v26, v25, v24, **(_DWORD **)(a1 + 152) - *(_DWORD *)(a1 + 144));
    int v27 = *(_DWORD *)(a1 + 144) + v24;
    *(_DWORD *)(a1 + 144) = v27;
    uint64_t v28 = *(int **)(a1 + 152);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v29 = *(void *)(a2 + 8);
  if (v29)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v29 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_137CB2C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_136ADBC(*(void *)(*(void *)(a1 + 80) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 96);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_136ADBC(*(void *)(*(void *)(a1 + 104) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 120);
  while ((int)v11 >= 1)
  {
    uint64_t v12 = v11 - 1;
    char v13 = sub_136ADBC(*(void *)(*(void *)(a1 + 128) + 8 * v11));
    uint64_t v11 = v12;
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 144);
  do
  {
    BOOL v14 = (int)v16 < 1;
    if ((int)v16 < 1) {
      break;
    }
    uint64_t v17 = v16 - 1;
    char v18 = sub_136ADBC(*(void *)(*(void *)(a1 + 152) + 8 * v16));
    uint64_t v16 = v17;
  }
  while ((v18 & 1) != 0);
  return v14;
}

void *sub_137CC30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TransitSignInstruction");
}

uint64_t sub_137CC40(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24AD488;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 100) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_137CCB8(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_137CCE8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_137CD74((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_137CD74(uint64_t (***result)()))()
{
  if (result != &off_2534B58)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[6];
    if (v2)
    {
      sub_137BCD0(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[7];
    if (v3)
    {
      sub_137A978(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[8];
    if (v4)
    {
      sub_1379D04(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[9];
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = (uint64_t)v1[10];
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = (uint64_t)v1[11];
    if (v7)
    {
      sub_137747C(v7);
      operator delete();
    }
    uint64_t v8 = (uint64_t)v1[12];
    if (v8)
    {
      sub_137747C(v8);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[13];
    if (result)
    {
      sub_1378F3C(result);
      operator delete();
    }
  }
  return result;
}

void sub_137CEC0(uint64_t a1)
{
  sub_137CCE8(a1);

  operator delete();
}

uint64_t sub_137CEF8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  char v3 = *(unsigned char *)(a1 + 40);
  if (!v3) {
    goto LABEL_11;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t result = sub_137BDC0(*(void *)(a1 + 48));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_137AAC4(*(void *)(a1 + 56));
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = sub_1379DDC(*(void *)(a1 + 64));
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = sub_1369E6C(*(void *)(a1 + 72));
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t result = sub_13775C8(*(void *)(a1 + 88));
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = sub_1369E6C(*(void *)(a1 + 80));
  if ((v3 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_21:
  uint64_t result = sub_13775C8(*(void *)(a1 + 96));
  if (v3 < 0) {
LABEL_10:
  }
    uint64_t result = sub_13790D0(*(void *)(a1 + 104));
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 104) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_137CFD8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    return v36;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v36 + 1;
    unsigned int v8 = *v36;
    if (*v36 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v36, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v36 + 2;
      }
    }
    uint64_t v36 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (!v11)
        {
          uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_13D6FB8((uint64_t)v12);
          *(void *)(a1 + 48) = v11;
          uint64_t v7 = v36;
        }
        char v13 = sub_137D490(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_73;
      case 2u:
        if (v8 != 18) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 56);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_13D6F5C((uint64_t)v15);
          *(void *)(a1 + 56) = v14;
          uint64_t v7 = v36;
        }
        char v13 = sub_137D520(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_73;
      case 3u:
        if (v8 != 26) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v16 = *(void **)(a1 + 64);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_13D6E58((uint64_t)v17);
          *(void *)(a1 + 64) = v16;
          uint64_t v7 = v36;
        }
        char v13 = (char *)sub_137D5B0(a3, (uint64_t)v16, (unsigned __int8 *)v7);
        goto LABEL_73;
      case 4u:
        if (v8 != 34) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v18 = *(void *)(a1 + 72);
        if (v18) {
          goto LABEL_38;
        }
        int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v19 = (void *)*v19;
        }
        sub_13D6A1C((uint64_t)v19);
        uint64_t v18 = v20;
        *(void *)(a1 + 72) = v20;
        goto LABEL_37;
      case 5u:
        if (v8 != 42) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 80);
        if (v18) {
          goto LABEL_38;
        }
        uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v21 = (void *)*v21;
        }
        sub_13D6A1C((uint64_t)v21);
        uint64_t v18 = v22;
        *(void *)(a1 + 80) = v22;
LABEL_37:
        uint64_t v7 = v36;
LABEL_38:
        char v13 = (char *)sub_13319DC(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_73;
      case 6u:
        if (v8 != 50) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v23 = *(void *)(a1 + 88);
        if (v23) {
          goto LABEL_50;
        }
        int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v24 = (void *)*v24;
        }
        uint64_t v23 = sub_13D6C7C((uint64_t)v24);
        *(void *)(a1 + 88) = v23;
        goto LABEL_49;
      case 7u:
        if (v8 != 58) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v23 = *(void *)(a1 + 96);
        if (v23) {
          goto LABEL_50;
        }
        uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v25 = (void *)*v25;
        }
        uint64_t v23 = sub_13D6C7C((uint64_t)v25);
        *(void *)(a1 + 96) = v23;
LABEL_49:
        uint64_t v7 = v36;
LABEL_50:
        char v13 = sub_137D640(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_73;
      case 8u:
        if (v8 != 66) {
          goto LABEL_64;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v26 = *(void *)(a1 + 104);
        if (!v26)
        {
          int v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v27 = (void *)*v27;
          }
          uint64_t v26 = sub_13D6DB4((uint64_t)v27);
          *(void *)(a1 + 104) = v26;
          uint64_t v7 = v36;
        }
        char v13 = sub_137D6D0(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_73;
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_64;
        }
        uint64_t v28 = v7 + 1;
        unint64_t v29 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v30 = *v28;
        int v31 = v29 + (v30 << 7);
        unint64_t v29 = (v31 - 128);
        if (v30 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v7, (v31 - 128));
          if (!v36) {
            return 0;
          }
          unint64_t v29 = v34;
        }
        else
        {
          uint64_t v28 = v7 + 2;
LABEL_61:
          uint64_t v36 = v28;
        }
        if (v29 > 3)
        {
          if (*v6) {
            uint64_t v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(10, v29, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 112) = v29;
        }
        goto LABEL_74;
      default:
LABEL_64:
        if (v8) {
          BOOL v32 = (v8 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if (v8 - 7600 > 0x18F)
          {
            if (*v6)
            {
              uint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = v36;
            }
            char v13 = (char *)sub_1885AC0(v8, v33, v7, a3);
          }
          else
          {
            char v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2534B58, (uint64_t *)(a1 + 8), a3);
          }
LABEL_73:
          uint64_t v36 = v13;
          if (!v13) {
            return 0;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            return v36;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v36;
    }
  }
}

char *sub_137D490(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137BEE4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137D520(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137AC10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_137D5B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1379E20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137D640(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13776D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137D6D0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13791A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137D760(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 160);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_137C354(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_137B128(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 64);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_1379F78(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_35;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 72);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 80);
  char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 88);
  char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    int v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    int v24 = v4 + 2;
  }
  uint64_t v4 = sub_1377AD4(v22, (unint64_t)v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_53;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 96);
  char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 20);
  v4[1] = v26;
  if (v26 > 0x7F) {
    int v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    int v27 = v4 + 2;
  }
  uint64_t v4 = sub_1377AD4(v25, (unint64_t)v27, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_65;
    }
    goto LABEL_59;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v28 = *(void *)(a1 + 104);
  char *v4 = 66;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  v4[1] = v29;
  if (v29 > 0x7F) {
    int v30 = sub_188A9CC(v29, v4 + 1);
  }
  else {
    int v30 = v4 + 2;
  }
  uint64_t v4 = sub_1379518(v28, (unint64_t)v30, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_59:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v31 = *(int *)(a1 + 112);
    char *v4 = 80;
    v4[1] = v31;
    if (v31 > 0x7F)
    {
      v4[1] = v31 | 0x80;
      unint64_t v32 = v31 >> 7;
      v4[2] = v31 >> 7;
      v4 += 3;
      if (v31 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v33 = v32 >> 14;
          v32 >>= 7;
          *v4++ = v32;
        }
        while (v33);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_65:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 1000, v4, a3);
  }
  uint64_t v34 = *(void *)(a1 + 8);
  if ((v34 & 1) == 0) {
    return v4;
  }
  unint64_t v36 = v34 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v36 + 31) < 0)
  {
    uint64_t v37 = *(void **)(v36 + 8);
    uint64_t v38 = *(void *)(v36 + 16);
  }
  else
  {
    uint64_t v37 = (void *)(v36 + 8);
    LODWORD(v38) = *(unsigned __int8 *)(v36 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v38)
  {
    uint64_t v39 = (int)v38;
    memcpy(v4, v37, (int)v38);
    v4 += v39;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v37, v38, v4);
}

uint64_t sub_137DBFC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v3) {
    goto LABEL_11;
  }
  if (v3)
  {
    uint64_t v7 = sub_137C6CC(*(void *)(a1 + 48));
    v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v8 = sub_137B56C(*(void *)(a1 + 56));
  v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  uint64_t v9 = sub_137A044(*(void *)(a1 + 64));
  v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v10 = sub_1374EEC(*(void *)(a1 + 72));
  v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_19:
    uint64_t v12 = sub_1377E50(*(void *)(a1 + 88));
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x40) == 0)
    {
LABEL_9:
      if ((v3 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v11 = sub_1374EEC(*(void *)(a1 + 80));
  v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) != 0) {
    goto LABEL_19;
  }
LABEL_8:
  if ((v3 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_20:
  uint64_t v13 = sub_1377E50(*(void *)(a1 + 96));
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x80) != 0)
  {
LABEL_10:
    uint64_t v4 = sub_137987C(*(void *)(a1 + 104));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  if ((v3 & 0x100) != 0)
  {
    int v5 = *(_DWORD *)(a1 + 112);
    if (v5 < 0) {
      uint64_t v6 = 11;
    }
    else {
      uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v6;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v2 += v17;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_137DE44(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_51;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 48);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_13D6FB8((uint64_t)v7);
      *(void *)(a1 + 48) = v5;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v8 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v8 = &off_2534AB0;
    }
    sub_137C8C0(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v9 = *(void *)(a1 + 56);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_13D6F5C((uint64_t)v11);
    *(void *)(a1 + 56) = v9;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v12 = &off_25349F8;
  }
  sub_137B7CC(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(std::string **)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = (std::string *)sub_13D6E58((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v16 = &off_25349A8;
    }
    sub_12329D0(v13, (uint64_t)v16);
  }
LABEL_30:
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v17 = *(void *)(a1 + 72);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      sub_13D6A1C((uint64_t)v19);
      *(void *)(a1 + 72) = v17;
    }
    if (*(void *)(a2 + 72)) {
      unsigned int v20 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unsigned int v20 = &off_2534750;
    }
    sub_136A7DC(v17, (uint64_t)v20);
  }
  if ((v4 & 0x10) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v21 = *(void *)(a1 + 80);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        unsigned int v23 = (void *)*v23;
      }
      sub_13D6A1C((uint64_t)v23);
      *(void *)(a1 + 80) = v21;
    }
    if (*(void *)(a2 + 80)) {
      int v24 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      int v24 = &off_2534750;
    }
    sub_136A7DC(v21, (uint64_t)v24);
  }
  if ((v4 & 0x20) == 0)
  {
    if ((v4 & 0x40) == 0) {
      goto LABEL_50;
    }
    goto LABEL_65;
  }
  *(_DWORD *)(a1 + 40) |= 0x20u;
  uint64_t v27 = *(void *)(a1 + 88);
  if (!v27)
  {
    uint64_t v28 = *(void *)(a1 + 8);
    unsigned int v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      unsigned int v29 = (void *)*v29;
    }
    uint64_t v27 = sub_13D6C7C((uint64_t)v29);
    *(void *)(a1 + 88) = v27;
  }
  if (*(void *)(a2 + 88)) {
    int v30 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    int v30 = &off_2534898;
  }
  sub_1378048(v27, (uint64_t)v30);
  if ((v4 & 0x40) != 0)
  {
LABEL_65:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    uint64_t v31 = *(void *)(a1 + 96);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      unint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        unint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = sub_13D6C7C((uint64_t)v33);
      *(void *)(a1 + 96) = v31;
    }
    if (*(void *)(a2 + 96)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      uint64_t v34 = &off_2534898;
    }
    sub_1378048(v31, (uint64_t)v34);
    if ((v4 & 0x80) != 0) {
      goto LABEL_73;
    }
LABEL_51:
    if ((v4 & 0x100) == 0) {
      goto LABEL_53;
    }
    goto LABEL_52;
  }
LABEL_50:
  if ((v4 & 0x80) == 0) {
    goto LABEL_51;
  }
LABEL_73:
  *(_DWORD *)(a1 + 40) |= 0x80u;
  uint64_t v35 = *(void *)(a1 + 104);
  if (!v35)
  {
    uint64_t v36 = *(void *)(a1 + 8);
    uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
    if (v36) {
      uint64_t v37 = (void *)*v37;
    }
    uint64_t v35 = sub_13D6DB4((uint64_t)v37);
    *(void *)(a1 + 104) = v35;
  }
  if (*(void *)(a2 + 104)) {
    uint64_t v38 = *(uint64_t (****)())(a2 + 104);
  }
  else {
    uint64_t v38 = &off_2534950;
  }
  sub_1379A34(v35, (uint64_t)v38);
  if ((v4 & 0x100) != 0)
  {
LABEL_52:
    int v25 = *(_DWORD *)(a2 + 112);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    *(_DWORD *)(a1 + 112) = v25;
  }
LABEL_53:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v26 = *(void *)(a2 + 8);
  if (v26)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v26 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_137E140(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_137CB2C(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_137BADC(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 80));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_13782D4(*(void *)(a1 + 88));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) != 0)
    {
      uint64_t result = sub_13782D4(*(void *)(a1 + 96));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x80) == 0) {
      return 1;
    }
    uint64_t result = sub_1379C54(*(void *)(a1 + 104));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_137E1FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.InstructionSet");
}

void *sub_137E20C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_137E288(void *a1)
{
  sub_137E20C(a1);

  operator delete();
}

uint64_t sub_137E2C0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_137E2D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v24 + 1;
    unsigned int v7 = *v24;
    if (*v24 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = v24 + 2;
      }
    }
    int v24 = v6;
    if ((v7 & 0xFFFFFFF8) != 8) {
      break;
    }
    if (v7 == 8)
    {
      uint64_t v11 = v6 - 1;
      while (1)
      {
        int v24 = v11 + 1;
        unint64_t v12 = v11[1];
        uint64_t v13 = v11 + 2;
        if (v11[1] < 0)
        {
          int v14 = *v13;
          int v15 = v12 + (v14 << 7);
          unint64_t v12 = (v15 - 128);
          if (v14 < 0)
          {
            int v24 = (char *)sub_188C138((uint64_t)(v11 + 1), (v15 - 128));
            if (!v24) {
              return 0;
            }
            unint64_t v12 = v18;
            goto LABEL_14;
          }
          uint64_t v13 = v11 + 3;
        }
        int v24 = v13;
LABEL_14:
        if (v12 > 1)
        {
          if (*v5) {
            uint64_t v19 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v19);
        }
        else
        {
          uint64_t v16 = *(unsigned int *)(a1 + 16);
          if (v16 == *(_DWORD *)(a1 + 20))
          {
            int v17 = v16 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v16 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v16) = v12;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v16) = v12;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 16) = v17;
        }
        uint64_t v11 = v24;
        if (*(void *)a3 <= (unint64_t)v24 || *v24 != 8) {
          goto LABEL_38;
        }
      }
    }
    if (v7 != 10) {
      break;
    }
    *(void *)&long long v25 = a1 + 16;
    *((void *)&v25 + 1) = sub_1369AF8;
    uint64_t v26 = a1 + 8;
    int v27 = 1;
    unsigned int v20 = sub_1112E88((uint64_t)a3, v6, &v25);
LABEL_37:
    int v24 = v20;
    if (!v20) {
      return 0;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v7) {
    BOOL v21 = (v7 & 7) == 4;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21)
  {
    if (*v5)
    {
      uint64_t v22 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v24;
    }
    unsigned int v20 = (char *)sub_1885AC0(v7, v22, v6, a3);
    goto LABEL_37;
  }
  if (!v6) {
    return 0;
  }
  a3[10].i32[0] = v7 - 1;
  return v24;
}

char *sub_137E524(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_137E674(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 16);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v6 += v10;
  }
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_137E704()
{
  return 1;
}

void *sub_137E70C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.GuidanceEvent.GuidanceImportanceMode");
}

void *sub_137E71C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_137E7A0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_137E7A0(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2534BF8)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 24);
    if (v2)
    {
      sub_13827C8(v2);
      operator delete();
    }
    uint64_t v3 = (void *)v1[4];
    if (v3)
    {
      sub_1383BE8(v3);
      operator delete();
    }
    int v4 = (void *)v1[5];
    if (v4)
    {
      sub_13859D0(v4);
      operator delete();
    }
    uint64_t v5 = (void *)v1[6];
    if (v5)
    {
      sub_1386F70(v5);
      operator delete();
    }
    uint64_t v6 = v1[7];
    if (v6)
    {
      sub_13866E8(v6);
      operator delete();
    }
    uint64_t v7 = (void *)v1[8];
    if (v7)
    {
      sub_137E20C(v7);
      operator delete();
    }
    uint64_t result = v1[9];
    if (result)
    {
      sub_1381968(result);
      operator delete();
    }
  }
  return result;
}

void sub_137E8CC(void *a1)
{
  sub_137E71C(a1);

  operator delete();
}

uint64_t sub_137E904(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_18;
  }
  if (v2)
  {
    uint64_t result = sub_137EA0C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_137EB24(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t result = sub_137EBE0(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    uint64_t result = sub_137ECFC(*(void *)(v1 + 56));
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_14:
    uint64_t v3 = *(void *)(v1 + 64);
    char v4 = *(unsigned char *)(v3 + 8);
    uint64_t result = v3 + 8;
    *(_DWORD *)(result + 8) = 0;
    if (v4) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_16;
  }
LABEL_12:
  uint64_t result = sub_137ECAC(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_16:
  if ((v2 & 0x40) != 0) {
    uint64_t result = sub_137EDC8(*(void *)(v1 + 72));
  }
LABEL_18:
  *(_DWORD *)(v1 + 80) = 0;
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 113) = 0;
    *(_OWORD *)(v1 + 100) = 0u;
    *(_OWORD *)(v1 + 84) = 0u;
  }
  if ((v2 & 0x3F0000) != 0)
  {
    *(void *)(v1 + 132) = 0;
    *(void *)(v1 + 124) = 0;
    *(_DWORD *)(v1 + 140) = 0;
    *(unsigned char *)(v1 + 144) = 1;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_137EA0C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1369E6C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    unint64_t v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1369E6C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 7) != 0)
  {
    if (v11)
    {
      uint64_t result = (uint64_t)sub_15B5354(*(void *)(v1 + 96));
      if ((v11 & 2) == 0)
      {
LABEL_16:
        if ((v11 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_17;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t result = sub_136F970(*(void *)(v1 + 104));
    if ((v11 & 4) != 0) {
LABEL_17:
    }
      uint64_t result = sub_1369F48(*(void *)(v1 + 112));
  }
LABEL_18:
  if ((v11 & 0x18) != 0) {
    *(void *)(v1 + 120) = 0;
  }
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_137EB24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1383654(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
    *(void *)(v1 + 88) = 0;
    *(void *)(v1 + 96) = 0x100000000;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = v1 + 8;
  *(_DWORD *)(v8 + 8) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_137EBE0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1384B98(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    char v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1369E6C(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 72);
  if ((int)v8 >= 1)
  {
    char v9 = (uint64_t *)(*(void *)(v1 + 80) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_1369E6C(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 72) = 0;
  }
  char v12 = *(unsigned char *)(v1 + 8);
  int v11 = (uint64_t *)(v1 + 8);
  if (v12)
  {
    return sub_188B4AC(v11);
  }
  return result;
}

uint64_t sub_137ECAC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_137ECFC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1386270(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 56) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_137EDC8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1369E6C(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_137EE38(uint64_t a1, char *a2, int32x2_t *a3)
{
  v98 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v98, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v98 + 1;
    unsigned int v9 = *v98;
    if (*v98 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v98, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v98 + 2;
      }
    }
    v98 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_123;
        }
        v5 |= 0x80u;
        char v13 = v8 + 1;
        LODWORD(v12) = *v8;
        if ((v12 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v14 = *v13;
        uint64_t v12 = v12 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          char v13 = v8 + 2;
LABEL_13:
          v98 = v13;
          *(_DWORD *)(a1 + 80) = v12;
          goto LABEL_131;
        }
        v72 = (char *)sub_188C138((uint64_t)v8, v12);
        v98 = v72;
        *(_DWORD *)(a1 + 80) = v73;
        if (v72) {
          goto LABEL_131;
        }
        goto LABEL_166;
      case 2u:
        if (v9 != 16) {
          goto LABEL_123;
        }
        v5 |= 0x100u;
        uint64_t v16 = v8 + 1;
        LODWORD(v15) = *v8;
        if ((v15 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v17 = *v16;
        uint64_t v15 = v15 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          v74 = (char *)sub_188C138((uint64_t)v8, v15);
          v98 = v74;
          *(_DWORD *)(a1 + 84) = v75;
          if (!v74) {
            goto LABEL_166;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          v98 = v16;
          *(_DWORD *)(a1 + 84) = v15;
        }
        goto LABEL_131;
      case 3u:
        if (v9 != 26) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 24);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_13D72B4((uint64_t)v19);
          *(void *)(a1 + 24) = v18;
          char v8 = v98;
        }
        unsigned int v20 = sub_137F758(a3, v18, (unsigned __int8 *)v8);
        goto LABEL_130;
      case 4u:
        if (v9 != 34) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 32);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_13D73E0((uint64_t)v22);
          *(void *)(a1 + 32) = v21;
          char v8 = v98;
        }
        unsigned int v20 = sub_137F7E8(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_130;
      case 5u:
        if (v9 != 42) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v23 = *(void *)(a1 + 40);
        if (!v23)
        {
          int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v24 = (void *)*v24;
          }
          uint64_t v23 = sub_13D75B4((uint64_t)v24);
          *(void *)(a1 + 40) = v23;
          char v8 = v98;
        }
        unsigned int v20 = sub_137F878(a3, v23, (unsigned __int8 *)v8);
        goto LABEL_130;
      case 7u:
        if (v9 != 56) {
          goto LABEL_123;
        }
        v5 |= 0x400u;
        uint64_t v26 = v8 + 1;
        LODWORD(v25) = *v8;
        if ((v25 & 0x80) == 0) {
          goto LABEL_41;
        }
        int v27 = *v26;
        uint64_t v25 = v25 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          v76 = (char *)sub_188C138((uint64_t)v8, v25);
          v98 = v76;
          *(_DWORD *)(a1 + 96) = v77;
          if (!v76) {
            goto LABEL_166;
          }
        }
        else
        {
          uint64_t v26 = v8 + 2;
LABEL_41:
          v98 = v26;
          *(_DWORD *)(a1 + 96) = v25;
        }
        goto LABEL_131;
      case 8u:
        if (v9 != 65) {
          goto LABEL_123;
        }
        uint64_t v29 = *(void *)v8;
        uint64_t v28 = v8 + 8;
        v5 |= 0x200u;
        *(void *)(a1 + 88) = v29;
        goto LABEL_46;
      case 9u:
        if (v9 != 73) {
          goto LABEL_123;
        }
        uint64_t v30 = *(void *)v8;
        uint64_t v28 = v8 + 8;
        v5 |= 0x1000u;
        *(void *)(a1 + 104) = v30;
LABEL_46:
        v98 = v28;
        goto LABEL_131;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_123;
        }
        uint64_t v31 = v8 + 1;
        unint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v33 = *v31;
        int v34 = v32 + (v33 << 7);
        unint64_t v32 = (v34 - 128);
        if (v33 < 0)
        {
          v98 = (char *)sub_188C138((uint64_t)v8, (v34 - 128));
          if (!v98) {
            goto LABEL_166;
          }
          unint64_t v32 = v78;
        }
        else
        {
          uint64_t v31 = v8 + 2;
LABEL_51:
          v98 = v31;
        }
        if (v32 > 0xE)
        {
          if (*v7) {
            v97 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v97 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(10, v32, v97);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x800u;
          *(_DWORD *)(a1 + 100) = v32;
        }
        goto LABEL_131;
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_123;
        }
        v5 |= 0x2000u;
        uint64_t v35 = v8 + 1;
        int v36 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_58;
        }
        int v37 = *v35;
        int v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          v79 = (char *)sub_188C0D0((uint64_t)v8, v36);
          v98 = v79;
          *(_DWORD *)(a1 + 112) = v80;
          if (!v79) {
            goto LABEL_166;
          }
        }
        else
        {
          uint64_t v35 = v8 + 2;
LABEL_58:
          v98 = v35;
          *(_DWORD *)(a1 + 112) = v36;
        }
        goto LABEL_131;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_123;
        }
        v5 |= 0x4000u;
        uint64_t v39 = v8 + 1;
        LODWORD(v38) = *v8;
        if ((v38 & 0x80) == 0) {
          goto LABEL_63;
        }
        int v40 = *v39;
        uint64_t v38 = v38 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          v81 = (char *)sub_188C138((uint64_t)v8, v38);
          v98 = v81;
          *(_DWORD *)(a1 + 116) = v82;
          if (!v81) {
            goto LABEL_166;
          }
        }
        else
        {
          uint64_t v39 = v8 + 2;
LABEL_63:
          v98 = v39;
          *(_DWORD *)(a1 + 116) = v38;
        }
        goto LABEL_131;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_123;
        }
        v5 |= 0x8000u;
        uint64_t v41 = v8 + 1;
        uint64_t v42 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_68;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          v83 = (char *)sub_188C138((uint64_t)v8, v42);
          v98 = v83;
          *(unsigned char *)(a1 + 120) = v84 != 0;
          if (!v83) {
            goto LABEL_166;
          }
        }
        else
        {
          uint64_t v41 = v8 + 2;
LABEL_68:
          v98 = v41;
          *(unsigned char *)(a1 + 120) = v42 != 0;
        }
        goto LABEL_131;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v44 = *(void *)(a1 + 48);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v45 = (void *)*v45;
          }
          uint64_t v44 = sub_13D7784((uint64_t)v45);
          *(void *)(a1 + 48) = v44;
          char v8 = v98;
        }
        unsigned int v20 = (char *)sub_137F908(a3, v44, (unsigned __int8 *)v8);
        goto LABEL_130;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_123;
        }
        v5 |= 0x10000u;
        uint64_t v46 = v8 + 1;
        int v47 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        int v48 = *v46;
        int v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          v85 = (char *)sub_188C0D0((uint64_t)v8, v47);
          v98 = v85;
          *(_DWORD *)(a1 + 124) = v86;
          if (!v85) {
            goto LABEL_166;
          }
        }
        else
        {
          uint64_t v46 = v8 + 2;
LABEL_79:
          v98 = v46;
          *(_DWORD *)(a1 + 124) = v47;
        }
        goto LABEL_131;
      case 0x10u:
        if (v9 != 128) {
          goto LABEL_123;
        }
        v5 |= 0x20000u;
        uint64_t v49 = v8 + 1;
        int v50 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v51 = *v49;
        int v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          v87 = (char *)sub_188C0D0((uint64_t)v8, v50);
          v98 = v87;
          *(_DWORD *)(a1 + 128) = v88;
          if (!v87) {
            goto LABEL_166;
          }
        }
        else
        {
          uint64_t v49 = v8 + 2;
LABEL_84:
          v98 = v49;
          *(_DWORD *)(a1 + 128) = v50;
        }
        goto LABEL_131;
      case 0x11u:
        if (v9 != 136) {
          goto LABEL_123;
        }
        v5 |= 0x40000u;
        v52 = v8 + 1;
        int v53 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_89;
        }
        int v54 = *v52;
        int v53 = v53 + (v54 << 7) - 128;
        if (v54 < 0)
        {
          v89 = (char *)sub_188C0D0((uint64_t)v8, v53);
          v98 = v89;
          *(_DWORD *)(a1 + 132) = v90;
          if (!v89) {
            goto LABEL_166;
          }
        }
        else
        {
          v52 = v8 + 2;
LABEL_89:
          v98 = v52;
          *(_DWORD *)(a1 + 132) = v53;
        }
        goto LABEL_131;
      case 0x12u:
        if (v9 != 144) {
          goto LABEL_123;
        }
        v5 |= 0x80000u;
        unint64_t v55 = v8 + 1;
        int v56 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_94;
        }
        int v57 = *v55;
        int v56 = v56 + (v57 << 7) - 128;
        if (v57 < 0)
        {
          v91 = (char *)sub_188C0D0((uint64_t)v8, v56);
          v98 = v91;
          *(_DWORD *)(a1 + 136) = v92;
          if (!v91) {
            goto LABEL_166;
          }
        }
        else
        {
          unint64_t v55 = v8 + 2;
LABEL_94:
          v98 = v55;
          *(_DWORD *)(a1 + 136) = v56;
        }
        goto LABEL_131;
      case 0x13u:
        if (v9 != 152) {
          goto LABEL_123;
        }
        v5 |= 0x100000u;
        unint64_t v58 = v8 + 1;
        int v59 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_99;
        }
        int v60 = *v58;
        int v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          v93 = (char *)sub_188C0D0((uint64_t)v8, v59);
          v98 = v93;
          *(_DWORD *)(a1 + 140) = v94;
          if (!v93) {
            goto LABEL_166;
          }
        }
        else
        {
          unint64_t v58 = v8 + 2;
LABEL_99:
          v98 = v58;
          *(_DWORD *)(a1 + 140) = v59;
        }
        goto LABEL_131;
      case 0x14u:
        if (v9 != 162) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v61 = *(void *)(a1 + 56);
        if (!v61)
        {
          int v62 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v62 = (void *)*v62;
          }
          uint64_t v61 = sub_13D76DC((uint64_t)v62);
          *(void *)(a1 + 56) = v61;
          char v8 = v98;
        }
        unsigned int v20 = (char *)sub_137F998(a3, v61, (unsigned __int8 *)v8);
        goto LABEL_130;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_123;
        }
        v5 |= 0x200000u;
        unint64_t v63 = v8 + 1;
        uint64_t v64 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_110;
        }
        int v65 = *v63;
        uint64_t v64 = v64 + (v65 << 7) - 128;
        if (v65 < 0)
        {
          v95 = (char *)sub_188C138((uint64_t)v8, v64);
          v98 = v95;
          *(unsigned char *)(a1 + 144) = v96 != 0;
          if (!v95) {
            goto LABEL_166;
          }
        }
        else
        {
          unint64_t v63 = v8 + 2;
LABEL_110:
          v98 = v63;
          *(unsigned char *)(a1 + 144) = v64 != 0;
        }
        goto LABEL_131;
      case 0x16u:
        if (v9 != 178) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v66 = *(void *)(a1 + 64);
        if (!v66)
        {
          int v67 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v67 = (void *)*v67;
          }
          uint64_t v66 = sub_13D7070((uint64_t)v67);
          *(void *)(a1 + 64) = v66;
          char v8 = v98;
        }
        unsigned int v20 = sub_137FA28(a3, v66, (unsigned __int8 *)v8);
        goto LABEL_130;
      case 0x17u:
        if (v9 != 186) {
          goto LABEL_123;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v68 = *(void **)(a1 + 72);
        if (!v68)
        {
          int v69 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v69 = (void *)*v69;
          }
          uint64_t v68 = sub_13D7194((uint64_t)v69);
          *(void *)(a1 + 72) = v68;
          char v8 = v98;
        }
        unsigned int v20 = sub_137FAB8(a3, (uint64_t)v68, (unsigned __int8 *)v8);
        goto LABEL_130;
      default:
LABEL_123:
        if (v9) {
          BOOL v70 = (v9 & 7) == 4;
        }
        else {
          BOOL v70 = 1;
        }
        if (!v70)
        {
          if (*v7)
          {
            BOOL v71 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v71 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = v98;
          }
          unsigned int v20 = (char *)sub_1885AC0(v9, v71, v8, a3);
LABEL_130:
          v98 = v20;
          if (!v20) {
            goto LABEL_166;
          }
LABEL_131:
          if (sub_11947B8((uint64_t)a3, &v98, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_166:
        }
          v98 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v98;
    }
  }
}

char *sub_137F758(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1382914(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137F7E8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1383CAC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137F878(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1385AA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_137F908(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1387024(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_137F998(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13867F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137FA28(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137E2D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_137FAB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1381A70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_137FB48(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 84);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    unsigned char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_1382EC8(v13, v15, a3);
    if ((v6 & 2) == 0)
    {
LABEL_17:
      if ((v6 & 4) == 0) {
        goto LABEL_18;
      }
      goto LABEL_32;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_17;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 32);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_138431C(v16, v18, a3);
  if ((v6 & 4) == 0)
  {
LABEL_18:
    if ((v6 & 0x400) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 40);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 88);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_1385E18(v19, v21, a3);
  if ((v6 & 0x400) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 96);
    unsigned char *v4 = 56;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v25 = *(void *)(a1 + 88);
    unsigned char *v4 = 65;
    *(void *)(v4 + 1) = v25;
    v4 += 9;
    if ((v6 & 0x1000) == 0)
    {
LABEL_46:
      if ((v6 & 0x800) == 0) {
        goto LABEL_60;
      }
      goto LABEL_54;
    }
  }
  else if ((v6 & 0x1000) == 0)
  {
    goto LABEL_46;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v26 = *(void *)(a1 + 104);
  unsigned char *v4 = 73;
  *(void *)(v4 + 1) = v26;
  v4 += 9;
  if ((v6 & 0x800) != 0)
  {
LABEL_54:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 100);
    unsigned char *v4 = 80;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_60:
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v30 = *(_DWORD *)(a1 + 112);
    unsigned char *v4 = 88;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unsigned int v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 116);
    unsigned char *v4 = 96;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v36 = *(unsigned char *)(a1 + 120);
    unsigned char *v4 = 104;
    v4[1] = v36;
    v4 += 2;
    if ((v6 & 8) == 0)
    {
LABEL_76:
      if ((v6 & 0x10000) == 0) {
        goto LABEL_93;
      }
      goto LABEL_87;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_76;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v37 = *(void *)(a1 + 48);
  unsigned char *v4 = 114;
  unsigned int v38 = *(_DWORD *)(v37 + 40);
  v4[1] = v38;
  if (v38 > 0x7F) {
    uint64_t v39 = sub_188A9CC(v38, v4 + 1);
  }
  else {
    uint64_t v39 = v4 + 2;
  }
  char v4 = sub_1387210(v37, v39, a3);
  if ((v6 & 0x10000) != 0)
  {
LABEL_87:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v40 = *(_DWORD *)(a1 + 124);
    unsigned char *v4 = 120;
    v4[1] = v40;
    if (v40 > 0x7F)
    {
      v4[1] = v40 | 0x80;
      unsigned int v41 = v40 >> 7;
      v4[2] = v40 >> 7;
      v4 += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v42 = v41 >> 14;
          v41 >>= 7;
          *v4++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_93:
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v43 = *(_DWORD *)(a1 + 128);
    *(_WORD *)char v4 = 384;
    v4[2] = v43;
    if (v43 > 0x7F)
    {
      v4[2] = v43 | 0x80;
      unsigned int v44 = v43 >> 7;
      v4[3] = v43 >> 7;
      v4 += 4;
      if (v43 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v45 = v44 >> 14;
          v44 >>= 7;
          *v4++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v46 = *(_DWORD *)(a1 + 132);
    *(_WORD *)char v4 = 392;
    v4[2] = v46;
    if (v46 > 0x7F)
    {
      v4[2] = v46 | 0x80;
      unsigned int v47 = v46 >> 7;
      v4[3] = v46 >> 7;
      v4 += 4;
      if (v46 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v48 = v47 >> 14;
          v47 >>= 7;
          *v4++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v49 = *(_DWORD *)(a1 + 136);
    *(_WORD *)char v4 = 400;
    v4[2] = v49;
    if (v49 > 0x7F)
    {
      v4[2] = v49 | 0x80;
      unsigned int v50 = v49 >> 7;
      v4[3] = v49 >> 7;
      v4 += 4;
      if (v49 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v51 = v50 >> 14;
          v50 >>= 7;
          *v4++ = v50;
        }
        while (v51);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v52 = *(_DWORD *)(a1 + 140);
    *(_WORD *)char v4 = 408;
    v4[2] = v52;
    if (v52 > 0x7F)
    {
      v4[2] = v52 | 0x80;
      unsigned int v53 = v52 >> 7;
      v4[3] = v52 >> 7;
      v4 += 4;
      if (v52 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v54 = v53 >> 14;
          v53 >>= 7;
          *v4++ = v53;
        }
        while (v54);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v55 = *(void *)(a1 + 56);
    *(_WORD *)char v4 = 418;
    unsigned int v56 = *(_DWORD *)(v55 + 20);
    v4[2] = v56;
    if (v56 > 0x7F) {
      int v57 = sub_188A9CC(v56, v4 + 2);
    }
    else {
      int v57 = v4 + 3;
    }
    char v4 = sub_1386BA8(v55, (unint64_t)v57, a3);
    if ((v6 & 0x200000) == 0)
    {
LABEL_123:
      if ((v6 & 0x20) == 0) {
        goto LABEL_124;
      }
      goto LABEL_135;
    }
  }
  else if ((v6 & 0x200000) == 0)
  {
    goto LABEL_123;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v58 = *(unsigned char *)(a1 + 144);
  *(_WORD *)char v4 = 424;
  v4[2] = v58;
  v4 += 3;
  if ((v6 & 0x20) == 0)
  {
LABEL_124:
    if ((v6 & 0x40) == 0) {
      goto LABEL_147;
    }
    goto LABEL_141;
  }
LABEL_135:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v59 = *(void *)(a1 + 64);
  *(_WORD *)char v4 = 434;
  unsigned int v60 = *(_DWORD *)(v59 + 32);
  v4[2] = v60;
  if (v60 > 0x7F) {
    uint64_t v61 = sub_188A9CC(v60, v4 + 2);
  }
  else {
    uint64_t v61 = v4 + 3;
  }
  char v4 = sub_137E524(v59, v61, a3);
  if ((v6 & 0x40) != 0)
  {
LABEL_141:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v62 = *(void *)(a1 + 72);
    *(_WORD *)char v4 = 442;
    unsigned int v63 = *(_DWORD *)(v62 + 20);
    v4[2] = v63;
    if (v63 > 0x7F) {
      uint64_t v64 = sub_188A9CC(v63, v4 + 2);
    }
    else {
      uint64_t v64 = v4 + 3;
    }
    char v4 = sub_1381C24(v62, (unint64_t)v64, a3);
  }
LABEL_147:
  uint64_t v65 = *(void *)(a1 + 8);
  if ((v65 & 1) == 0) {
    return v4;
  }
  unint64_t v67 = v65 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v67 + 31) < 0)
  {
    uint64_t v68 = *(void **)(v67 + 8);
    uint64_t v69 = *(void *)(v67 + 16);
  }
  else
  {
    uint64_t v68 = (void *)(v67 + 8);
    LODWORD(v69) = *(unsigned __int8 *)(v67 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v69)
  {
    uint64_t v70 = (int)v69;
    memcpy(v4, v68, (int)v69);
    v4 += v70;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v68, v69, v4);
}

uint64_t sub_1380528(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_24;
  }
  if (v2)
  {
    uint64_t v4 = sub_138333C(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1384884(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_1386064(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v7 = sub_1387304(*(void *)(a1 + 48));
  v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v8 = sub_1386DF0(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t v9 = sub_137E674(*(void *)(a1 + 64));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v10 = sub_1381DA4(*(void *)(a1 + 72));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v2 & 0x80) == 0) {
    goto LABEL_24;
  }
LABEL_20:
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11 < 0) {
    uint64_t v12 = 10;
  }
  else {
    uint64_t v12 = (9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6;
  }
  v3 += v12 + 1;
LABEL_24:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v13 = *(_DWORD *)(a1 + 84);
      if (v13 < 0) {
        uint64_t v14 = 10;
      }
      else {
        uint64_t v14 = (9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v14 + 1;
    }
    uint64_t v15 = v3 + 9;
    if ((v2 & 0x200) == 0) {
      uint64_t v15 = v3;
    }
    if ((v2 & 0x400) != 0)
    {
      int v16 = *(_DWORD *)(a1 + 96);
      uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v16 >= 0) {
        uint64_t v18 = v17;
      }
      else {
        uint64_t v18 = 11;
      }
      v15 += v18;
    }
    if ((v2 & 0x800) != 0)
    {
      int v19 = *(_DWORD *)(a1 + 100);
      uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v19 >= 0) {
        uint64_t v21 = v20;
      }
      else {
        uint64_t v21 = 11;
      }
      v15 += v21;
    }
    if ((v2 & 0x1000) != 0) {
      v15 += 9;
    }
    if ((v2 & 0x2000) != 0) {
      v15 += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 0x4000) != 0)
    {
      int v22 = *(_DWORD *)(a1 + 116);
      uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v22 >= 0) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 11;
      }
      v15 += v24;
    }
    if ((v2 & 0x8000) != 0) {
      uint64_t v3 = v15 + 2;
    }
    else {
      uint64_t v3 = v15;
    }
  }
  if ((v2 & 0x3F0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      v3 += ((9 * (__clz(*(_DWORD *)(a1 + 124) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v2 & 0x20000) == 0)
      {
LABEL_57:
        if ((v2 & 0x40000) == 0) {
          goto LABEL_58;
        }
        goto LABEL_67;
      }
    }
    else if ((v2 & 0x20000) == 0)
    {
      goto LABEL_57;
    }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 128) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v2 & 0x40000) == 0)
    {
LABEL_58:
      if ((v2 & 0x80000) == 0) {
        goto LABEL_59;
      }
      goto LABEL_68;
    }
LABEL_67:
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 132) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v2 & 0x80000) == 0)
    {
LABEL_59:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_61;
      }
      goto LABEL_60;
    }
LABEL_68:
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 136) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v2 & 0x100000) == 0)
    {
LABEL_61:
      if ((v2 & 0x200000) != 0) {
        v3 += 3;
      }
      goto LABEL_63;
    }
LABEL_60:
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 140) | 1) ^ 0x1F) + 73) >> 6) + 2;
    goto LABEL_61;
  }
LABEL_63:
  uint64_t v25 = *(void *)(a1 + 8);
  if (v25)
  {
    unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v27 + 31) < 0) {
      uint64_t v28 = *(void *)(v27 + 16);
    }
    else {
      uint64_t v28 = *(unsigned __int8 *)(v27 + 31);
    }
    v3 += v28;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1380950(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_13D72B4((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2534CF8;
      }
      sub_1380D10(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_52;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_13D73E0((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      int v13 = &off_2534D78;
    }
    sub_1380FD0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_60;
    }
LABEL_52:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        int v16 = (void *)*v16;
      }
      uint64_t v14 = sub_13D75B4((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_2534DE0;
    }
    sub_138119C(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_68;
    }
LABEL_60:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(std::string **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_13D7784((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2534E88;
    }
    sub_1381334(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_76;
    }
LABEL_68:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 56);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_13D76DC((uint64_t)v24);
      *(void *)(a1 + 56) = v22;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v25 = &off_2534E40;
    }
    sub_1381404(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_84;
    }
LABEL_76:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v26 = *(std::string **)(a1 + 64);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      uint64_t v26 = (std::string *)sub_13D7070((uint64_t)v28);
      *(void *)(a1 + 64) = v26;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v29 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v29 = &off_2534BD0;
    }
    sub_11E43C0(v26, (uint64_t)v29);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_84:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    unsigned int v30 = *(void **)(a1 + 72);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      unsigned int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        unsigned int v32 = (void *)*v32;
      }
      unsigned int v30 = sub_13D7194((uint64_t)v32);
      *(void *)(a1 + 72) = v30;
    }
    if (*(void *)(a2 + 72)) {
      unint64_t v33 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unint64_t v33 = &off_2534C90;
    }
    sub_1381584((uint64_t)v30, (uint64_t)v33);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v4 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_95;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_96;
  }
LABEL_95:
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  if ((v4 & 0x800) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_97;
  }
LABEL_96:
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  if ((v4 & 0x1000) == 0)
  {
LABEL_18:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_98;
  }
LABEL_97:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  if ((v4 & 0x2000) == 0)
  {
LABEL_19:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_20;
    }
LABEL_99:
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    if ((v4 & 0x8000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_98:
  *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
  if ((v4 & 0x4000) != 0) {
    goto LABEL_99;
  }
LABEL_20:
  if ((v4 & 0x8000) != 0) {
LABEL_21:
  }
    *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
LABEL_22:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_23:
  if ((v4 & 0x3F0000) == 0) {
    goto LABEL_32;
  }
  if ((v4 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
    if ((v4 & 0x20000) == 0)
    {
LABEL_26:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_103;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
  if ((v4 & 0x40000) == 0)
  {
LABEL_27:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_104;
  }
LABEL_103:
  *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
  if ((v4 & 0x80000) == 0)
  {
LABEL_28:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_29;
    }
LABEL_105:
    *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
    if ((v4 & 0x200000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_104:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  if ((v4 & 0x100000) != 0) {
    goto LABEL_105;
  }
LABEL_29:
  if ((v4 & 0x200000) != 0) {
LABEL_30:
  }
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
LABEL_31:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_32:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1380D10(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1365F80((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1365F80((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    int v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    int v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1365F80((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 0x1F) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v21 = *(void *)(a1 + 96);
      if (!v21)
      {
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (void *)*v23;
        }
        uint64_t v21 = sub_15C1DB0((uint64_t)v23);
        *(void *)(a1 + 96) = v21;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v24 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v24 = &off_253F370;
      }
      sub_15B5DD4(v21, (uint64_t)v24);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_38;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v25 = *(std::string **)(a1 + 104);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = (std::string *)sub_13D7210((uint64_t)v27);
      *(void *)(a1 + 104) = v25;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v28 = &off_2534CB8;
    }
    sub_1370178(v25, (uint64_t)v28);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v29 = *(void *)(a1 + 112);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_13DAB08((uint64_t)v31);
      *(void *)(a1 + 112) = v29;
    }
    if (*(void *)(a2 + 112)) {
      unsigned int v32 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      unsigned int v32 = &off_2536850;
    }
    sub_136AA7C(v29, (uint64_t)v32);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v19;
        goto LABEL_18;
      }
LABEL_16:
      *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
      goto LABEL_17;
    }
LABEL_46:
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    if ((v19 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1380FD0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1365F80((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148CF6C((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    int v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_24;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_25;
    }
LABEL_24:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_26;
    }
LABEL_25:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_27;
    }
LABEL_26:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_17;
    }
LABEL_28:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_138119C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_148D074((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1365F80((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    int v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      *int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 72);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    int v16 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1365F80((uint64_t *)(a1 + 64), v16, v15, v14, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v17 = *(_DWORD *)(a1 + 72) + v14;
    *(_DWORD *)(a1 + 72) = v17;
    uint64_t v18 = *(int **)(a1 + 80);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1381334(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = (std::string *)sub_188FB98((uint64_t)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_1381404(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D100((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        int v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 48), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        int v16 = (void *)*v16;
      }
      sub_13D6A1C((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      int v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v17 = &off_2534750;
    }
    sub_136A7DC(v14, (uint64_t)v17);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_1381584(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          int v7 = (void *)*v7;
        }
        sub_13D6A1C((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v8 = &off_2534750;
      }
      sub_136A7DC(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        sub_13D6A1C((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_2534750;
      }
      sub_136A7DC(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1381680(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_1381740(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = *(unsigned int *)(v4 + 32);
    while ((int)v5 >= 1)
    {
      uint64_t v6 = v5 - 1;
      char v7 = sub_136ADBC(*(void *)(*(void *)(v4 + 40) + 8 * v5));
      uint64_t v5 = v6;
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_1381860(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t v8 = *(void *)(a1 + 56);
    if ((*(unsigned char *)(v8 + 16) & 2) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(v8 + 56));
      if (!result) {
        return result;
      }
      int v2 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v2 & 0x40) == 0) {
    return 1;
  }
  uint64_t result = sub_138190C(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_1381740(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_136ADBC(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_136ADBC(*(void *)(*(void *)(a1 + 88) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12)
  {
    uint64_t result = sub_15B5F68(*(void *)(a1 + 96));
    if (!result) {
      return result;
    }
    int v12 = *(_DWORD *)(a1 + 16);
  }
  if ((v12 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_136AE2C(*(void *)(a1 + 112));
  if (result) {
    return 1;
  }
  return result;
}

BOOL sub_1381808(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

BOOL sub_1381860(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_136ADBC(*(void *)(*(void *)(a1 + 80) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

uint64_t sub_13818E0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_138190C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1381958@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.GuidanceEvent");
}

uint64_t sub_1381968(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2534C90)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1381A38(uint64_t a1)
{
  sub_1381968(a1);

  operator delete();
}

char *sub_1381A70(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    return v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (!v15)
        {
          int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v16 = (void *)*v16;
          }
          sub_13D6A1C((uint64_t)v16);
          uint64_t v15 = v17;
          *(void *)(a1 + 32) = v17;
LABEL_29:
          uint64_t v7 = v20;
        }
LABEL_30:
        uint64_t v14 = (char *)sub_13319DC(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_31;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void *)(a1 + 24);
      if (!v15)
      {
        uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v15 = v19;
        *(void *)(a1 + 24) = v19;
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v20;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
LABEL_31:
    uint64_t v20 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      return v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v20;
  }
  return 0;
}

char *sub_1381C24(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_1374B08(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1381DA4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_1381E7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.NavTrayGuidance");
}

void *sub_1381E8C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148B4C8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1381F0C(void *a1)
{
  sub_1381E8C(a1);

  operator delete();
}

char *sub_1381F44(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v34 = a2;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    return v34;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v34 + 1;
    unsigned int v8 = *v34;
    if (*v34 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v34, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v34 + 2;
      }
    }
    unint64_t v34 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_40;
        }
        unsigned int v11 = v7 - 1;
        while (1)
        {
          int v12 = (unsigned __int8 *)(v11 + 1);
          unint64_t v34 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_13D623C(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
            int v12 = (unsigned __int8 *)v34;
          }
          unsigned int v11 = sub_1382300(a3, v15, v12);
          unint64_t v34 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_47;
          }
        }
      case 2u:
        if (v8 != 16) {
          goto LABEL_40;
        }
        uint64_t v17 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          unint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v18 = v29;
        }
        else
        {
          uint64_t v17 = v7 + 2;
LABEL_23:
          unint64_t v34 = v17;
        }
        if (v18 <= 1)
        {
          *(_DWORD *)(a1 + 16) |= 1u;
          *(_DWORD *)(a1 + 48) = v18;
          goto LABEL_47;
        }
        if (*v6) {
          unsigned int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v33 = 2;
        goto LABEL_64;
      case 3u:
        if (v8 != 24) {
          goto LABEL_40;
        }
        uint64_t v21 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v21;
        int v23 = v18 + (v22 << 7);
        unint64_t v18 = (v23 - 128);
        if (v22 < 0)
        {
          unint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v18 = v30;
        }
        else
        {
          uint64_t v21 = v7 + 2;
LABEL_30:
          unint64_t v34 = v21;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 52) = v18;
          goto LABEL_47;
        }
        if (*v6) {
          unsigned int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v33 = 3;
        goto LABEL_64;
      case 4u:
        if (v8 != 32) {
          goto LABEL_40;
        }
        uint64_t v24 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v25 = *v24;
        int v26 = v18 + (v25 << 7);
        unint64_t v18 = (v26 - 128);
        if (v25 < 0)
        {
          unint64_t v34 = (char *)sub_188C138((uint64_t)v7, (v26 - 128));
          if (!v34) {
            return 0;
          }
          unint64_t v18 = v31;
        }
        else
        {
          uint64_t v24 = v7 + 2;
LABEL_37:
          unint64_t v34 = v24;
        }
        if (v18 > 1)
        {
          if (*v6) {
            unsigned int v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v33 = 4;
LABEL_64:
          sub_188C020(v33, v18, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 56) = v18;
        }
        goto LABEL_47;
      default:
LABEL_40:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v6)
          {
            uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v34;
          }
          unint64_t v34 = (char *)sub_1885AC0(v8, v28, v7, a3);
          if (!v34) {
            return 0;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            return v34;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v34;
    }
  }
}

char *sub_1382300(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136C4BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1382390(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_136C794(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v12 = *(int *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v15 = *(int *)(a1 + 52);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v18 = *(int *)(a1 + 56);
    *__dst = 32;
    __dst[1] = v18;
    if (v18 > 0x7F)
    {
      __dst[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      __dst[2] = v18 >> 7;
      __dst += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *__dst++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_138264C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_136C9BC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_26;
  }
  if (v8)
  {
    int v9 = *(_DWORD *)(a1 + 48);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_26;
      }
      goto LABEL_22;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  int v11 = *(_DWORD *)(a1 + 52);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v8 & 4) != 0)
  {
LABEL_22:
    int v13 = *(_DWORD *)(a1 + 56);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v14;
  }
LABEL_26:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13827B0()
{
  return 1;
}

void *sub_13827B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SignGuidance.JunctionInfo");
}

uint64_t sub_13827C8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2534CF8)
  {
    if (*(void *)(a1 + 96))
    {
      sub_15B5318();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 104);
    if (v5)
    {
      sub_1381E8C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 112);
    if (v6)
    {
      sub_13D2774(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1365CFC((void *)(a1 + 72));
  sub_1365CFC((void *)(a1 + 48));
  sub_1365CFC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13828DC(uint64_t a1)
{
  sub_13827C8(a1);

  operator delete();
}

char *sub_1382914(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v50 + 1;
    unsigned int v9 = *v50;
    if (*v50 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v50, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v50 + 2;
      }
    }
    unsigned int v50 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_69;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          int v13 = (unsigned __int8 *)(v12 + 1);
          unsigned int v50 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            int v13 = (unsigned __int8 *)v50;
          }
          uint64_t v12 = (char *)sub_13319DC(a3, v16, v13);
          unsigned int v50 = v12;
          if (!v12) {
            goto LABEL_90;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_77;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_69;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          unint64_t v19 = (unsigned __int8 *)(v18 + 1);
          unsigned int v50 = v18 + 1;
          unint64_t v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, v23);
            unint64_t v19 = (unsigned __int8 *)v50;
          }
          uint64_t v18 = (char *)sub_13319DC(a3, v22, v19);
          unsigned int v50 = v18;
          if (!v18) {
            goto LABEL_90;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_77;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_69;
        }
        uint64_t v24 = v8 - 1;
        while (1)
        {
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          unsigned int v50 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 88);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 80), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 80) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 72));
            uint64_t v28 = sub_188CDC8(a1 + 72, v29);
            uint64_t v25 = (unsigned __int8 *)v50;
          }
          uint64_t v24 = (char *)sub_13319DC(a3, v28, v25);
          unsigned int v50 = v24;
          if (!v24) {
            goto LABEL_90;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 26) {
            goto LABEL_77;
          }
        }
      case 5u:
        if (v9 != 40) {
          goto LABEL_69;
        }
        unint64_t v30 = v8 + 1;
        unint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        int v33 = v31 + (v32 << 7);
        unint64_t v31 = (v33 - 128);
        if (v32 < 0)
        {
          unsigned int v50 = (char *)sub_188C138((uint64_t)v8, (v33 - 128));
          if (!v50) {
            goto LABEL_90;
          }
          unint64_t v31 = v46;
        }
        else
        {
          unint64_t v30 = v8 + 2;
LABEL_43:
          unsigned int v50 = v30;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 120) = v31;
        }
        else
        {
          if (*v7) {
            unsigned int v49 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v49 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v31, v49);
        }
        goto LABEL_77;
      case 6u:
        if (v9 != 50) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v34 = *(void *)(a1 + 96);
        if (!v34)
        {
          unint64_t v35 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v35 = (void *)*v35;
          }
          uint64_t v34 = sub_15C1DB0((uint64_t)v35);
          *(void *)(a1 + 96) = v34;
          int v8 = v50;
        }
        char v36 = (char *)sub_1382E38(a3, v34, (unsigned __int8 *)v8);
        goto LABEL_76;
      case 7u:
        if (v9 != 56) {
          goto LABEL_69;
        }
        v5 |= 0x10u;
        uint64_t v37 = v8 + 1;
        int v38 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v39 = *v37;
        int v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          unsigned int v47 = (char *)sub_188C0D0((uint64_t)v8, v38);
          unsigned int v50 = v47;
          *(_DWORD *)(a1 + 124) = v48;
          if (!v47) {
            goto LABEL_90;
          }
        }
        else
        {
          uint64_t v37 = v8 + 2;
LABEL_56:
          unsigned int v50 = v37;
          *(_DWORD *)(a1 + 124) = v38;
        }
        goto LABEL_77;
      case 8u:
        if (v9 != 66) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v40 = *(void *)(a1 + 104);
        if (!v40)
        {
          unsigned int v41 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v41 = (void *)*v41;
          }
          uint64_t v40 = sub_13D7210((uint64_t)v41);
          *(void *)(a1 + 104) = v40;
          int v8 = v50;
        }
        char v36 = sub_136FDBC(a3, v40, (unsigned __int8 *)v8);
        goto LABEL_76;
      case 9u:
        if (v9 != 74) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v42 = *(void *)(a1 + 112);
        if (!v42)
        {
          unsigned int v43 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v43 = (void *)*v43;
          }
          uint64_t v42 = sub_13DAB08((uint64_t)v43);
          *(void *)(a1 + 112) = v42;
          int v8 = v50;
        }
        char v36 = (char *)sub_1323390(a3, v42, (unsigned __int8 *)v8);
        goto LABEL_76;
      default:
LABEL_69:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if (*v7)
          {
            unsigned int v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v50;
          }
          char v36 = (char *)sub_1885AC0(v9, v45, v8, a3);
LABEL_76:
          unsigned int v50 = v36;
          if (!v36) {
            goto LABEL_90;
          }
LABEL_77:
          if (sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_90:
        }
          unsigned int v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v50;
    }
  }
}

uint64_t sub_1382E38(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B5490(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1382EC8(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1374B08(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1374B08(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 80);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        unint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        unint64_t v20 = __dst + 2;
      }
      __dst = sub_1374B08(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 16);
  if ((v21 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v22 = *(int *)(a1 + 120);
    *__dst = 40;
    __dst[1] = v22;
    if (v22 > 0x7F)
    {
      __dst[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      __dst[2] = v22 >> 7;
      __dst += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *__dst++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v21)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v25 = *(void *)(a1 + 96);
    *__dst = 50;
    unsigned int v26 = *(_DWORD *)(v25 + 44);
    __dst[1] = v26;
    if (v26 > 0x7F) {
      uint64_t v27 = sub_188A9CC(v26, __dst + 1);
    }
    else {
      uint64_t v27 = __dst + 2;
    }
    __dst = sub_15B58D0(v25, v27, a3);
  }
  if ((v21 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v28 = *(_DWORD *)(a1 + 124);
    *__dst = 56;
    __dst[1] = v28;
    if (v28 > 0x7F)
    {
      __dst[1] = v28 | 0x80;
      unsigned int v29 = v28 >> 7;
      __dst[2] = v28 >> 7;
      __dst += 3;
      if (v28 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v30 = v29 >> 14;
          v29 >>= 7;
          *__dst++ = v29;
        }
        while (v30);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v21 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v31 = *(void *)(a1 + 104);
    *__dst = 66;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    __dst[1] = v32;
    if (v32 > 0x7F) {
      int v33 = sub_188A9CC(v32, __dst + 1);
    }
    else {
      int v33 = __dst + 2;
    }
    __dst = sub_1382390(v31, v33, a3);
  }
  if ((v21 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v34 = *(void *)(a1 + 112);
    *__dst = 74;
    unsigned int v35 = *(_DWORD *)(v34 + 44);
    __dst[1] = v35;
    if (v35 > 0x7F) {
      char v36 = sub_188A9CC(v35, __dst + 1);
    }
    else {
      char v36 = __dst + 2;
    }
    __dst = sub_13D2F58(v34, v36, a3);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return __dst;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    uint64_t v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    uint64_t v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(__dst, v40, (int)v41);
    __dst += v42;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, __dst);
}

uint64_t sub_138333C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1374EEC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1374EEC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 0x1F) == 0) {
    goto LABEL_28;
  }
  if (v22)
  {
    uint64_t v25 = sub_15B5BAC(*(void *)(a1 + 96));
    v16 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 2) == 0)
    {
LABEL_24:
      if ((v22 & 4) == 0) {
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v27 = sub_13D3304(*(void *)(a1 + 112));
      v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 8) == 0)
      {
LABEL_26:
        if ((v22 & 0x10) == 0) {
          goto LABEL_28;
        }
        goto LABEL_27;
      }
      goto LABEL_33;
    }
  }
  else if ((v22 & 2) == 0)
  {
    goto LABEL_24;
  }
  uint64_t v26 = sub_138264C(*(void *)(a1 + 104));
  v16 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v22 & 4) != 0) {
    goto LABEL_32;
  }
LABEL_25:
  if ((v22 & 8) == 0) {
    goto LABEL_26;
  }
LABEL_33:
  int v28 = *(_DWORD *)(a1 + 120);
  uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v28 >= 0) {
    uint64_t v30 = v29;
  }
  else {
    uint64_t v30 = 11;
  }
  v16 += v30;
  if ((v22 & 0x10) != 0) {
LABEL_27:
  }
    v16 += ((9 * (__clz(*(_DWORD *)(a1 + 124) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_28:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v31 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v31 + 31) < 0) {
      uint64_t v32 = *(void *)(v31 + 16);
    }
    else {
      uint64_t v32 = *(unsigned __int8 *)(v31 + 31);
    }
    v16 += v32;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void *sub_1383598@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SignGuidance");
}

void *sub_13835A8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_138361C(void *a1)
{
  sub_13835A8(a1);

  operator delete();
}

uint64_t sub_1383654(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(unsigned char *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_138367C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v31 + 2;
      }
    }
    unint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        uint64_t v16 = v8 + 2;
LABEL_26:
        unint64_t v31 = v16;
        *(unsigned char *)(a1 + 32) = v17 != 0;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v17);
      unint64_t v31 = v25;
      *(unsigned char *)(a1 + 32) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      unint64_t v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    unint64_t v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    int v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      int v22 = v8 + 2;
LABEL_35:
      unint64_t v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    unint64_t v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v31;
    }
    unint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_13838E0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1383ABC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_11:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1383B6C(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    result[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1383BD0()
{
  return 1;
}

void *sub_1383BD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SpokenGuidance.TimeGap");
}

void *sub_1383BE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148B548(a1 + 6);
  sub_1365CFC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1383C74(void *a1)
{
  sub_1383BE8(a1);

  operator delete();
}

char *sub_1383CAC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v67 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v67, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v67 + 1;
    unsigned int v9 = *v67;
    if (*v67 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v67, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v67 + 2;
      }
    }
    unint64_t v67 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_71;
        }
        unsigned int v12 = v8 - 1;
        while (1)
        {
          char v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v67 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, v17);
            char v13 = (unsigned __int8 *)v67;
          }
          unsigned int v12 = (char *)sub_13319DC(a3, v16, v13);
          unint64_t v67 = v12;
          if (!v12) {
            goto LABEL_103;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_78;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_71;
        }
        v5 |= 1u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v51 = (char *)sub_188C0D0((uint64_t)v8, v19);
          unint64_t v67 = v51;
          *(_DWORD *)(a1 + 72) = v52;
          if (!v51) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          unint64_t v67 = v18;
          *(_DWORD *)(a1 + 72) = v19;
        }
        goto LABEL_78;
      case 3u:
        if (v9 != 24) {
          goto LABEL_71;
        }
        v5 |= 2u;
        int v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unsigned int v53 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unint64_t v67 = v53;
          *(_DWORD *)(a1 + 76) = v54;
          if (!v53) {
            goto LABEL_103;
          }
        }
        else
        {
          int v21 = v8 + 2;
LABEL_28:
          unint64_t v67 = v21;
          *(_DWORD *)(a1 + 76) = v22;
        }
        goto LABEL_78;
      case 4u:
        if (v9 != 32) {
          goto LABEL_71;
        }
        int v24 = v8 + 1;
        unint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v27 = v25 + (v26 << 7);
        unint64_t v25 = (v27 - 128);
        if (v26 < 0)
        {
          unint64_t v67 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v67) {
            goto LABEL_103;
          }
          unint64_t v25 = v55;
        }
        else
        {
          int v24 = v8 + 2;
LABEL_33:
          unint64_t v67 = v24;
        }
        if (v25 > 4)
        {
          if (*v7) {
            uint64_t v66 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v66 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v25, v66);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 100) = v25;
        }
        goto LABEL_78;
      case 5u:
        if (v9 != 40) {
          goto LABEL_71;
        }
        v5 |= 4u;
        int v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          unsigned int v56 = (char *)sub_188C0D0((uint64_t)v8, v29);
          unint64_t v67 = v56;
          *(_DWORD *)(a1 + 80) = v57;
          if (!v56) {
            goto LABEL_103;
          }
        }
        else
        {
          int v28 = v8 + 2;
LABEL_40:
          unint64_t v67 = v28;
          *(_DWORD *)(a1 + 80) = v29;
        }
        goto LABEL_78;
      case 6u:
        if (v9 != 48) {
          goto LABEL_71;
        }
        v5 |= 8u;
        unint64_t v31 = v8 + 1;
        int v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          char v58 = (char *)sub_188C0D0((uint64_t)v8, v32);
          unint64_t v67 = v58;
          *(_DWORD *)(a1 + 84) = v59;
          if (!v58) {
            goto LABEL_103;
          }
        }
        else
        {
          unint64_t v31 = v8 + 2;
LABEL_45:
          unint64_t v67 = v31;
          *(_DWORD *)(a1 + 84) = v32;
        }
        goto LABEL_78;
      case 7u:
        if (v9 != 56) {
          goto LABEL_71;
        }
        v5 |= 0x10u;
        uint64_t v34 = v8 + 1;
        int v35 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v36 = *v34;
        int v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          unsigned int v60 = (char *)sub_188C0D0((uint64_t)v8, v35);
          unint64_t v67 = v60;
          *(_DWORD *)(a1 + 88) = v61;
          if (!v60) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v34 = v8 + 2;
LABEL_50:
          unint64_t v67 = v34;
          *(_DWORD *)(a1 + 88) = v35;
        }
        goto LABEL_78;
      case 9u:
        if (v9 != 72) {
          goto LABEL_71;
        }
        v5 |= 0x20u;
        uint64_t v37 = v8 + 1;
        uint64_t v38 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v62 = (char *)sub_188C138((uint64_t)v8, v38);
          unint64_t v67 = v62;
          *(unsigned char *)(a1 + 92) = v63 != 0;
          if (!v62) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v37 = v8 + 2;
LABEL_55:
          unint64_t v67 = v37;
          *(unsigned char *)(a1 + 92) = v38 != 0;
        }
        goto LABEL_78;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_71;
        }
        uint64_t v40 = v8 - 1;
        while (1)
        {
          uint64_t v41 = (unsigned __int8 *)(v40 + 1);
          unint64_t v67 = v40 + 1;
          uint64_t v42 = *(_DWORD **)(a1 + 64);
          if (v42 && (uint64_t v43 = *(int *)(a1 + 56), (int)v43 < *v42))
          {
            *(_DWORD *)(a1 + 56) = v43 + 1;
            uint64_t v44 = *(void *)&v42[2 * v43 + 2];
          }
          else
          {
            uint64_t v45 = sub_13D7364(*(void *)(a1 + 48));
            uint64_t v44 = sub_188CDC8(a1 + 48, v45);
            uint64_t v41 = (unsigned __int8 *)v67;
          }
          uint64_t v40 = sub_138428C(a3, v44, v41);
          unint64_t v67 = v40;
          if (!v40) {
            goto LABEL_103;
          }
          if (*(void *)a3 <= (unint64_t)v40 || *v40 != 82) {
            goto LABEL_78;
          }
        }
      case 0xBu:
        if (v9 != 88) {
          goto LABEL_71;
        }
        v5 |= 0x40u;
        unint64_t v46 = v8 + 1;
        int v47 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_70;
        }
        int v48 = *v46;
        int v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          uint64_t v64 = (char *)sub_188C0D0((uint64_t)v8, v47);
          unint64_t v67 = v64;
          *(_DWORD *)(a1 + 96) = v65;
          if (!v64) {
            goto LABEL_103;
          }
        }
        else
        {
          unint64_t v46 = v8 + 2;
LABEL_70:
          unint64_t v67 = v46;
          *(_DWORD *)(a1 + 96) = v47;
        }
        goto LABEL_78;
      default:
LABEL_71:
        if (v9) {
          BOOL v49 = (v9 & 7) == 4;
        }
        else {
          BOOL v49 = 1;
        }
        if (!v49)
        {
          if (*v7)
          {
            unsigned int v50 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v67;
          }
          unint64_t v67 = (char *)sub_1885AC0(v9, v50, v8, a3);
          if (!v67) {
            goto LABEL_103;
          }
LABEL_78:
          if (sub_11947B8((uint64_t)a3, &v67, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_103:
        }
          unint64_t v67 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v67;
    }
  }
}

char *sub_138428C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_138367C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138431C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1374B08(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 72);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 76);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v18 = *(int *)(a1 + 100);
    *__dst = 32;
    __dst[1] = v18;
    if (v18 > 0x7F)
    {
      __dst[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      __dst[2] = v18 >> 7;
      __dst += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *__dst++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 80);
    *__dst = 40;
    __dst[1] = v21;
    if (v21 > 0x7F)
    {
      __dst[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      __dst[2] = v21 >> 7;
      __dst += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *__dst++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v24 = *(_DWORD *)(a1 + 84);
    *__dst = 48;
    __dst[1] = v24;
    if (v24 > 0x7F)
    {
      __dst[1] = v24 | 0x80;
      unsigned int v25 = v24 >> 7;
      __dst[2] = v24 >> 7;
      __dst += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v26 = v25 >> 14;
          v25 >>= 7;
          *__dst++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v27 = *(_DWORD *)(a1 + 88);
    *__dst = 56;
    __dst[1] = v27;
    if (v27 > 0x7F)
    {
      __dst[1] = v27 | 0x80;
      unsigned int v28 = v27 >> 7;
      __dst[2] = v27 >> 7;
      __dst += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v29 = v28 >> 14;
          v28 >>= 7;
          *__dst++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v30 = *(unsigned char *)(a1 + 92);
    *__dst = 72;
    __dst[1] = v30;
    __dst += 2;
  }
  int v31 = *(_DWORD *)(a1 + 56);
  if (v31)
  {
    for (int j = 0; j != v31; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 82;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      __dst[1] = v34;
      if (v34 > 0x7F) {
        int v35 = sub_188A9CC(v34, __dst + 1);
      }
      else {
        int v35 = __dst + 2;
      }
      __dst = sub_13838E0(v33, (unint64_t)v35, a3);
    }
  }
  if ((v11 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v36 = *(_DWORD *)(a1 + 96);
    *__dst = 88;
    __dst[1] = v36;
    if (v36 > 0x7F)
    {
      __dst[1] = v36 | 0x80;
      unsigned int v37 = v36 >> 7;
      __dst[2] = v36 >> 7;
      __dst += 3;
      if (v36 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v38 = v37 >> 14;
          v37 >>= 7;
          *__dst++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v39 = *(void *)(a1 + 8);
  if ((v39 & 1) == 0) {
    return __dst;
  }
  unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v41 + 31) < 0)
  {
    uint64_t v42 = *(void **)(v41 + 8);
    uint64_t v43 = *(void *)(v41 + 16);
  }
  else
  {
    uint64_t v42 = (void *)(v41 + 8);
    LODWORD(v43) = *(unsigned __int8 *)(v41 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v43)
  {
    uint64_t v44 = (int)v43;
    memcpy(__dst, v42, (int)v43);
    __dst += v44;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v42, v43, __dst);
}

uint64_t sub_1384884(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1383ABC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a1 + 16))
    {
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((*(unsigned char *)(a1 + 16) & 2) == 0)
      {
LABEL_18:
        if ((*(unsigned char *)(a1 + 16) & 4) == 0) {
          goto LABEL_19;
        }
        goto LABEL_35;
      }
    }
    else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
    {
      goto LABEL_18;
    }
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 4) == 0)
    {
LABEL_19:
      if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
        goto LABEL_20;
      }
      goto LABEL_36;
    }
LABEL_35:
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 8) == 0)
    {
LABEL_20:
      if ((*(unsigned char *)(a1 + 16) & 0x10) == 0)
      {
LABEL_22:
        if ((*(unsigned char *)(a1 + 16) & 0x20) != 0) {
          v9 += 2;
        }
        if ((*(unsigned char *)(a1 + 16) & 0x40) != 0) {
          v9 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        if ((*(unsigned char *)(a1 + 16) & 0x80) != 0)
        {
          int v15 = *(_DWORD *)(a1 + 100);
          uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
          if (v15 >= 0) {
            uint64_t v17 = v16;
          }
          else {
            uint64_t v17 = 11;
          }
          v9 += v17;
        }
        goto LABEL_31;
      }
LABEL_21:
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_22;
    }
LABEL_36:
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 16) & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_31:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void *sub_1384AD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.SpokenGuidance");
}

void *sub_1384AE0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148B5C8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1384B60(void *a1)
{
  sub_1384AE0(a1);

  operator delete();
}

uint64_t sub_1384B98(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13854A0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(unsigned char *)(v5 + 42) = 0;
  *(_WORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1384C20(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    int v35 = v8;
    switch(v9 >> 3)
    {
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v35 = v12;
          *(unsigned char *)(a1 + 48) = v13 != 0;
          goto LABEL_41;
        }
        unsigned int v29 = (char *)sub_188C138((uint64_t)v8, v13);
        int v35 = v29;
        *(unsigned char *)(a1 + 48) = v30 != 0;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_52;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        v5 |= 2u;
        int v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v31 = (char *)sub_188C138((uint64_t)v8, v16);
          int v35 = v31;
          *(unsigned char *)(a1 + 49) = v32 != 0;
          if (!v31) {
            goto LABEL_52;
          }
        }
        else
        {
          int v15 = v8 + 2;
LABEL_18:
          int v35 = v15;
          *(unsigned char *)(a1 + 49) = v16 != 0;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v19);
          int v35 = v33;
          *(unsigned char *)(a1 + 50) = v34 != 0;
          if (!v33) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          int v35 = v18;
          *(unsigned char *)(a1 + 50) = v19 != 0;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 42) {
          goto LABEL_34;
        }
        uint64_t v21 = v8 - 1;
        while (1)
        {
          unsigned int v22 = (unsigned __int8 *)(v21 + 1);
          int v35 = v21 + 1;
          unsigned int v23 = *(_DWORD **)(a1 + 40);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 32), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 32) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            unsigned int v26 = sub_13D753C(*(void *)(a1 + 24));
            uint64_t v25 = sub_188CDC8(a1 + 24, (uint64_t)v26);
            unsigned int v22 = (unsigned __int8 *)v35;
          }
          uint64_t v21 = sub_1384F5C(a3, v25, v22);
          int v35 = v21;
          if (!v21) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 42) {
            goto LABEL_41;
          }
        }
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            unsigned int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v35;
          }
          int v35 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v35) {
            goto LABEL_52;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          int v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v35;
    }
  }
}

char *sub_1384F5C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13854C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1384FEC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 16;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 49);
  unsigned char *v4 = 24;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 50);
    unsigned char *v4 = 32;
    v4[1] = v9;
    v4 += 2;
  }
LABEL_14:
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 42;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1385754(v12, (unint64_t)v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_13851E8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1385900(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  uint64_t v9 = v2 + 2;
  if ((v8 & 1) == 0) {
    uint64_t v9 = v2;
  }
  if ((v8 & 2) != 0) {
    v9 += 2;
  }
  if ((v8 & 4) != 0) {
    v9 += 2;
  }
  if ((v8 & 7) != 0) {
    uint64_t result = v9;
  }
  else {
    uint64_t result = v2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13852C4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_148CFF8(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        v3[2].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 50);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    v3[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13853DC()
{
  return 1;
}

void *sub_13853E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.LaneInfo");
}

void *sub_13853F4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1385468(void *a1)
{
  sub_13853F4(a1);

  operator delete();
}

uint64_t sub_13854A0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13854C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v23 + 2;
      }
    }
    unsigned int v23 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v19 = v8 + 1;
    LODWORD(v20) = *v8;
    if (*v8 < 0)
    {
      uint64_t v20 = v20 + (*v19 << 7) - 128;
      if (*v19 < 0) {
        uint64_t v19 = (char *)sub_188C138((uint64_t)v8, v20);
      }
      else {
        uint64_t v19 = v8 + 2;
      }
    }
    unsigned int v23 = v19;
    *(_DWORD *)(a1 + 24) = -(v20 & 1) ^ (v20 >> 1);
    int v5 = 1;
    if (!v19) {
      goto LABEL_44;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        unsigned int v23 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v23) {
          goto LABEL_44;
        }
        unint64_t v16 = v21;
        goto LABEL_26;
      }
      uint64_t v15 = v8 + 2;
    }
    unsigned int v23 = v15;
LABEL_26:
    if (sub_1385700(v16))
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v16;
    }
    else
    {
      if (*v7) {
        unsigned int v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unsigned int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v22);
    }
    goto LABEL_35;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v23;
    }
    unsigned int v23 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v23) {
      goto LABEL_44;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  unsigned int v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

uint64_t sub_1385700(int a1)
{
  uint64_t result = 1;
  if (a1 <= 3)
  {
    if (a1 >= 3) {
      return 0;
    }
  }
  else if (((a1 - 4) > 0x3C || ((1 << (a1 - 4)) & 0x1000000010001011) == 0) {
         && a1 != 128
  }
         && a1 != 256)
  {
    return 0;
  }
  return result;
}

unsigned char *sub_1385754(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    unsigned int v8 = (2 * v7) ^ (v7 >> 31);
    v4[1] = (2 * v7) ^ (v7 >> 31);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1385900(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_11;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v3 = *(_DWORD *)(a1 + 28);
  if (v3 < 0) {
    uint64_t v4 = 11;
  }
  else {
    uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v4;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13859B8()
{
  return 1;
}

void *sub_13859C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.LaneArrowhead");
}

void *sub_13859D0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1365CFC(a1 + 8);
  sub_1365CFC(a1 + 5);
  sub_148B648(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1385A68(void *a1)
{
  sub_13859D0(a1);

  operator delete();
}

char *sub_1385AA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  if ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v7 = v33 + 1;
      unsigned int v8 = *v33;
      if (*v33 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v33, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = v33 + 2;
        }
      }
      uint64_t v33 = v7;
      unsigned int v11 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          uint64_t v15 = v7 - 1;
          while (1)
          {
            unint64_t v16 = (unsigned __int8 *)(v15 + 1);
            uint64_t v33 = v15 + 1;
            int v17 = *(_DWORD **)(a1 + 80);
            if (v17 && (uint64_t v18 = *(int *)(a1 + 72), (int)v18 < *v17))
            {
              *(_DWORD *)(a1 + 72) = v18 + 1;
              uint64_t v19 = *(void *)&v17[2 * v18 + 2];
            }
            else
            {
              sub_13D6A1C(*(void *)(a1 + 64));
              uint64_t v19 = sub_188CDC8(a1 + 64, v20);
              unint64_t v16 = (unsigned __int8 *)v33;
            }
            uint64_t v15 = (char *)sub_13319DC(a3, v19, v16);
            uint64_t v33 = v15;
            if (!v15) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 2)
      {
        if (v8 == 18)
        {
          unint64_t v21 = v7 - 1;
          while (1)
          {
            unsigned int v22 = (unsigned __int8 *)(v21 + 1);
            uint64_t v33 = v21 + 1;
            unsigned int v23 = *(_DWORD **)(a1 + 56);
            if (v23 && (uint64_t v24 = *(int *)(a1 + 48), (int)v24 < *v23))
            {
              *(_DWORD *)(a1 + 48) = v24 + 1;
              uint64_t v25 = *(void *)&v23[2 * v24 + 2];
            }
            else
            {
              sub_13D6A1C(*(void *)(a1 + 40));
              uint64_t v25 = sub_188CDC8(a1 + 40, v26);
              unsigned int v22 = (unsigned __int8 *)v33;
            }
            unint64_t v21 = (char *)sub_13319DC(a3, v25, v22);
            uint64_t v33 = v21;
            if (!v21) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v21 || *v21 != 18) {
              goto LABEL_50;
            }
          }
        }
      }
      else if (v11 == 1 && v8 == 10)
      {
        BOOL v27 = v7 - 1;
        while (1)
        {
          unsigned int v28 = (unsigned __int8 *)(v27 + 1);
          uint64_t v33 = v27 + 1;
          unsigned int v29 = *(_DWORD **)(a1 + 32);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 24), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 24) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_13D74A0(*(void *)(a1 + 16));
            uint64_t v31 = sub_188CDC8(a1 + 16, v32);
            unsigned int v28 = (unsigned __int8 *)v33;
          }
          BOOL v27 = sub_1385D88(a3, v31, v28);
          uint64_t v33 = v27;
          if (!v27) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 10) {
            goto LABEL_50;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        unint64_t v7 = v33;
      }
      uint64_t v33 = (char *)sub_1885AC0(v8, v14, v7, a3);
      if (!v33) {
        return 0;
      }
LABEL_50:
      if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
        return v33;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v33;
    }
    return 0;
  }
  return v33;
}

char *sub_1385D88(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1384C20(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1385E18(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1384FEC(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_1374B08(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 72);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      *__dst = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      __dst[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, __dst + 1);
      }
      else {
        uint64_t v20 = __dst + 2;
      }
      __dst = sub_1374B08(v18, v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return __dst;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(__dst, v24, (int)v25);
    __dst += v26;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, __dst);
}

uint64_t sub_1386064(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13851E8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1374EEC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 72);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_1374EEC(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v16 += v25;
  }
  *(_DWORD *)(a1 + 88) = v16;
  return v16;
}

void *sub_13861B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.VisualLaneGuidance");
}

void *sub_13861C4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1386238(void *a1)
{
  sub_13861C4(a1);

  operator delete();
}

uint64_t sub_1386270(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1386294(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v24 + 2;
      }
    }
    unint64_t v24 = v8;
    if (v9 >> 3 != 18) {
      break;
    }
    if (v9 != 144) {
      goto LABEL_20;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_19:
      unint64_t v24 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_27;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unint64_t v24 = v22;
    *(_DWORD *)(a1 + 28) = v23;
    if (!v22) {
      goto LABEL_36;
    }
LABEL_27:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 17 && v9 == 136)
  {
    v5 |= 1u;
    uint64_t v12 = v8 + 1;
    int v13 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_14;
    }
    int v14 = *v12;
    int v13 = v13 + (v14 << 7) - 128;
    if ((v14 & 0x80000000) == 0)
    {
      uint64_t v12 = v8 + 2;
LABEL_14:
      unint64_t v24 = v12;
      *(_DWORD *)(a1 + 24) = v13;
      goto LABEL_27;
    }
    uint64_t v20 = (char *)sub_188C0D0((uint64_t)v8, v13);
    unint64_t v24 = v20;
    *(_DWORD *)(a1 + 24) = v21;
    if (!v20) {
      goto LABEL_36;
    }
    goto LABEL_27;
  }
LABEL_20:
  if (v9) {
    BOOL v18 = (v9 & 7) == 4;
  }
  else {
    BOOL v18 = 1;
  }
  if (!v18)
  {
    if (*v7)
    {
      uint64_t v19 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v24;
    }
    unint64_t v24 = (char *)sub_1885AC0(v9, v19, v8, a3);
    if (!v24) {
      goto LABEL_36;
    }
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_36:
  unint64_t v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

unsigned char *sub_1386488(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v7;
    if (v7 > 0x7F)
    {
      v4[2] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[3] = v7 >> 7;
      v4 += 4;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v10;
    if (v10 > 0x7F)
    {
      v4[2] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[3] = v10 >> 7;
      v4 += 4;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_138662C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13866D0()
{
  return 1;
}

void *sub_13866D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteLegRange");
}

uint64_t sub_13866E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2534E40)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_148B6C8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13867C0(uint64_t a1)
{
  sub_13866E8(a1);

  operator delete();
}

uint64_t sub_13867F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    return *(void *)v32;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v7 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v8 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unsigned int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)uint64_t v32 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_36;
        }
        unsigned int v11 = (char *)(v7 + 1);
        unint64_t v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)uint64_t v32 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v32) {
            return 0;
          }
          unint64_t v12 = v30;
        }
        else
        {
          unsigned int v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)uint64_t v32 = v11;
        }
        if (v12 > 2)
        {
          if (*v6) {
            uint64_t v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v12;
        }
        goto LABEL_44;
      case 2u:
        if (v8 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 56);
        if (!v15)
        {
          int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v16 = (void *)*v16;
          }
          sub_13D6A1C((uint64_t)v16);
          uint64_t v15 = v17;
          *(void *)(a1 + 56) = v17;
          unsigned int v7 = *(unsigned __int8 **)v32;
        }
        uint64_t v18 = sub_13319DC(a3, v15, v7);
        goto LABEL_43;
      case 3u:
        if (v8 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (uint64_t *)*v20;
        }
        int v21 = (std::string *)sub_1880F84((void *)(a1 + 48), v20);
        uint64_t v18 = (uint64_t)sub_188C244(v21, *(char **)v32, (uint64_t)a3);
        goto LABEL_43;
      case 4u:
        if (v8 != 34) {
          goto LABEL_36;
        }
        uint64_t v22 = (char *)(v7 - 1);
        while (1)
        {
          int v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v32 = v22 + 1;
          unint64_t v24 = *(_DWORD **)(a1 + 40);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 32) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            BOOL v27 = sub_13D7664(*(void *)(a1 + 24));
            uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
            int v23 = *(unsigned __int8 **)v32;
          }
          uint64_t v22 = sub_1386B18(a3, v26, v23);
          *(void *)uint64_t v32 = v22;
          if (!v22) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 34) {
            goto LABEL_44;
          }
        }
      default:
LABEL_36:
        if (v8) {
          BOOL v28 = (v8 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v6)
          {
            unsigned int v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v7 = *(unsigned __int8 **)v32;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v8, v29, (char *)v7, a3);
LABEL_43:
          *(void *)uint64_t v32 = v18;
          if (!v18) {
            return 0;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            return *(void *)v32;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v32;
    }
  }
}

char *sub_1386B18(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1386294(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1386BA8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v10, v12, a3);
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 34;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_1386488(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1386DF0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_138662C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) == 0) {
    goto LABEL_22;
  }
  if (v8)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_22;
      }
      goto LABEL_18;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v12 = sub_1374EEC(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0) {
    goto LABEL_22;
  }
LABEL_18:
  int v13 = *(_DWORD *)(a1 + 64);
  if (v13 < 0) {
    uint64_t v14 = 11;
  }
  else {
    uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v14;
LABEL_22:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void *sub_1386F60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ARGuidance");
}

void *sub_1386F70(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1386FEC(void *a1)
{
  sub_1386F70(a1);

  operator delete();
}

uint64_t sub_1387024(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v21 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = (char *)(*(void *)v21 + 1);
      unsigned int v8 = **(unsigned char **)v21;
      if ((char)**(unsigned char **)v21 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (char *)(*(void *)v21 + 2);
        }
      }
      *(void *)int v21 = v7;
      if (v8 == 10)
      {
        int v13 = v7 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)int v21 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 32);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 24), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 24) = v16 + 1;
            unint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v19 = v18;
            v19[1] = sub_3A6EDC;
            *uint64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            unint64_t v17 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v18);
            uint64_t v14 = *(char **)v21;
          }
          int v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)int v21 = v13;
          if (!v13) {
            goto LABEL_31;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_26;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v12 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v21;
      }
      *(void *)int v21 = sub_1885AC0(v8, v12, v7, a3);
      if (!*(void *)v21) {
        goto LABEL_31;
      }
LABEL_26:
      if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
        return *(void *)v21;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return *(void *)v21;
    }
LABEL_31:
    *(void *)int v21 = 0;
  }
  return *(void *)v21;
}

char *sub_1387210(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      __dst = (char *)sub_125CE58(a3, 1, *(void *)(*(void *)(a1 + 32) + v7 + 8), __dst);
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return __dst;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(__dst, v12, (int)v13);
    __dst += v14;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, __dst);
}

uint64_t sub_1387304(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_138739C()
{
  return 1;
}

void *sub_13873A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.JunctionView");
}

void *sub_13873B4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1387428(void *a1)
{
  sub_13873B4(a1);

  operator delete();
}

uint64_t sub_1387460(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1387484(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v26 = v22;
    *(_DWORD *)(a1 + 28) = v23;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v26 = v18;
    }
    if (v19 > 2)
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13876B8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_138785C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_9;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 0x80000000) == 0)
  {
    uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v2 = 11;
  if ((v1 & 2) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1387910()
{
  return 1;
}

void *sub_1387918@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoadComplexity.Attribute");
}

void *sub_1387928(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148B748(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13879A8(void *a1)
{
  sub_1387928(a1);

  operator delete();
}

uint64_t sub_13879E0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1387460(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0) {
    *(void *)(v1 + 48) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1387A70(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 2u;
      int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        int v16 = v8 + 2;
LABEL_26:
        uint64_t v32 = v16;
        *(_DWORD *)(a1 + 52) = v17;
        goto LABEL_44;
      }
      BOOL v28 = (char *)sub_188C0D0((uint64_t)v8, v17);
      uint64_t v32 = v28;
      *(_DWORD *)(a1 + 52) = v29;
      if (!v28) {
        goto LABEL_49;
      }
      goto LABEL_44;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 1u;
    unint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v32 = v19;
      *(_DWORD *)(a1 + 48) = v20;
      goto LABEL_44;
    }
    unint64_t v30 = (char *)sub_188C0D0((uint64_t)v8, v20);
    uint64_t v32 = v30;
    *(_DWORD *)(a1 + 48) = v31;
    if (!v30) {
      goto LABEL_49;
    }
LABEL_44:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    uint64_t v22 = v8 - 1;
    while (1)
    {
      int v23 = (unsigned __int8 *)(v22 + 1);
      uint64_t v32 = v22 + 1;
      unint64_t v24 = *(_DWORD **)(a1 + 40);
      if (v24 && (uint64_t v25 = *(int *)(a1 + 32), (int)v25 < *v24))
      {
        *(_DWORD *)(a1 + 32) = v25 + 1;
        uint64_t v26 = *(void *)&v24[2 * v25 + 2];
      }
      else
      {
        BOOL v27 = sub_13D7824(*(void *)(a1 + 24));
        uint64_t v26 = sub_188CDC8(a1 + 24, (uint64_t)v27);
        int v23 = (unsigned __int8 *)v32;
      }
      uint64_t v22 = sub_1387CF8(a3, v26, v23);
      uint64_t v32 = v22;
      if (!v22) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
        goto LABEL_44;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v32;
    }
    uint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_49;
    }
    goto LABEL_44;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  uint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_1387CF8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1387484(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1387D88(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_13876B8(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 52);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_1387FC8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_138785C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13880D4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_148D17C(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      HIDWORD(v3[2].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 52);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13881D4()
{
  return 1;
}

void *sub_13881DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoadComplexity");
}

void *sub_13881EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1388260(void *a1)
{
  sub_13881EC(a1);

  operator delete();
}

uint64_t sub_1388298(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13882C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    int v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      int v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      int v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        int v31 = v16;
        *(_DWORD *)(a1 + 32) = v17;
        goto LABEL_36;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v17);
      int v31 = v25;
      *(_DWORD *)(a1 + 32) = v26;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unint64_t v19 = v8 + 1;
    int v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    int v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v19 = v8 + 2;
LABEL_31:
      int v31 = v19;
      *(_DWORD *)(a1 + 28) = v20;
      goto LABEL_36;
    }
    BOOL v27 = (char *)sub_188C0D0((uint64_t)v8, v20);
    int v31 = v27;
    *(_DWORD *)(a1 + 28) = v28;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    int v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    int v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      int v31 = v22;
      *(_DWORD *)(a1 + 24) = v23;
      goto LABEL_36;
    }
    int v29 = (char *)sub_188C0D0((uint64_t)v8, v23);
    int v31 = v29;
    *(_DWORD *)(a1 + 24) = v30;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    int v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  int v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1388514(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1388734(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1388800()
{
  return 1;
}

void *sub_1388808@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.LaneWidth");
}

void *sub_1388818(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_138888C(void *a1)
{
  sub_1388818(a1);

  operator delete();
}

uint64_t sub_13888C4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13888E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v22 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v22 + 1;
    unsigned int v9 = *v22;
    if (*v22 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v22, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v22 + 2;
      }
    }
    uint64_t v22 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    unsigned int v15 = v8 + 1;
    LODWORD(v16) = *v8;
    if (*v8 < 0)
    {
      uint64_t v16 = v16 + (*v15 << 7) - 128;
      if (*v15 < 0) {
        unsigned int v15 = (char *)sub_188C138((uint64_t)v8, v16);
      }
      else {
        unsigned int v15 = v8 + 2;
      }
    }
    v5 |= 2u;
    uint64_t v22 = v15;
    *(_DWORD *)(a1 + 28) = -(v16 & 1) ^ (v16 >> 1);
    if (!v15) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v22, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    int v17 = v8 + 1;
    int v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_28;
    }
    int v19 = *v17;
    int v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      int v17 = v8 + 2;
LABEL_28:
      uint64_t v22 = v17;
      *(_DWORD *)(a1 + 24) = v18;
      goto LABEL_31;
    }
    uint64_t v20 = (char *)sub_188C0D0((uint64_t)v8, v18);
    uint64_t v22 = v20;
    *(_DWORD *)(a1 + 24) = v21;
    if (!v20) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v22;
    }
    uint64_t v22 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v22) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v22 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v22;
}

unsigned char *sub_1388ADC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    unsigned int v11 = (2 * v10) ^ (v10 >> 31);
    v4[1] = (2 * v10) ^ (v10 >> 31);
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_1388C88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz((2 * *(_DWORD *)(a1 + 28)) ^ (*(int *)(a1 + 28) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1388D34()
{
  return 1;
}

void *sub_1388D3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ElevationProfile.Point");
}

void *sub_1388D4C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1388DC0(void *a1)
{
  sub_1388D4C(a1);

  operator delete();
}

uint64_t sub_1388DF8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1388E1C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v19 + 1;
    unsigned int v9 = *v19;
    if (*v19 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v19, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v19 + 2;
      }
    }
    uint64_t v19 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    unsigned int v15 = v8 + 1;
    LODWORD(v16) = *v8;
    if (*v8 < 0)
    {
      uint64_t v16 = v16 + (*v15 << 7) - 128;
      if (*v15 < 0) {
        unsigned int v15 = (char *)sub_188C138((uint64_t)v8, v16);
      }
      else {
        unsigned int v15 = v8 + 2;
      }
    }
    v5 |= 2u;
    uint64_t v19 = v15;
    *(_DWORD *)(a1 + 28) = -(v16 & 1) ^ (v16 >> 1);
    if (!v15) {
      goto LABEL_38;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    int v17 = v8 + 1;
    LODWORD(v18) = *v8;
    if (*v8 < 0)
    {
      uint64_t v18 = v18 + (*v17 << 7) - 128;
      if (*v17 < 0) {
        int v17 = (char *)sub_188C138((uint64_t)v8, v18);
      }
      else {
        int v17 = v8 + 2;
      }
    }
    v5 |= 1u;
    uint64_t v19 = v17;
    *(_DWORD *)(a1 + 24) = -(v18 & 1) ^ (v18 >> 1);
    if (!v17) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v19) {
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v19 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1389014(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    unsigned int v8 = (2 * v7) ^ (v7 >> 31);
    v4[1] = (2 * v7) ^ (v7 >> 31);
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v11 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    unsigned int v12 = (2 * v11) ^ (v11 >> 31);
    v4[1] = (2 * v11) ^ (v11 >> 31);
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_13891C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz((2 * *(_DWORD *)(a1 + 24)) ^ (*(int *)(a1 + 24) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz((2 * *(_DWORD *)(a1 + 28)) ^ (*(int *)(a1 + 28) >> 31) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_138927C()
{
  return 1;
}

void *sub_1389284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ElevationProfile.MinimumVisibleElevationRange");
}

uint64_t sub_1389294(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2534ED8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_138934C(uint64_t a1)
{
  sub_1389294(a1);

  operator delete();
}

uint64_t sub_1389384(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13893EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v30 + 2;
      }
    }
    int v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      uint64_t v20 = v8 + 1;
      int v21 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v22 = *v20;
      int v21 = v21 + (v22 << 7) - 128;
      if ((v22 & 0x80000000) == 0)
      {
        uint64_t v20 = v8 + 2;
LABEL_33:
        int v30 = v20;
        *(_DWORD *)(a1 + 36) = v21;
        goto LABEL_38;
      }
      int v26 = (char *)sub_188C0D0((uint64_t)v8, v21);
      int v30 = v26;
      *(_DWORD *)(a1 + 36) = v27;
      if (!v26) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      int v23 = v8 + 1;
      int v24 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v25 = *v23;
      int v24 = v24 + (v25 << 7) - 128;
      if ((v25 & 0x80000000) == 0)
      {
        int v23 = v8 + 2;
LABEL_37:
        int v30 = v23;
        *(_DWORD *)(a1 + 32) = v24;
        goto LABEL_38;
      }
      int v28 = (char *)sub_188C0D0((uint64_t)v8, v24);
      int v30 = v28;
      *(_DWORD *)(a1 + 32) = v29;
      if (!v28) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v18 = (void *)*v18;
      }
      sub_13D6A1C((uint64_t)v18);
      uint64_t v17 = v19;
      *(void *)(a1 + 24) = v19;
      unsigned int v8 = v30;
    }
    uint64_t v16 = (char *)sub_13319DC(a3, v17, (unsigned __int8 *)v8);
LABEL_27:
    int v30 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  int v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

char *sub_1389634(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    char *v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_1374B08(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_138983C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1389928(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unsigned int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unsigned int v8 = (void *)*v8;
        }
        sub_13D6A1C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_2534750;
      }
      sub_136A7DC(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1389A10(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1389A3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ElevationProfile.ElevationSegmentDescription");
}

uint64_t sub_1389A4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2534F00)
  {
    uint64_t v5 = *(void **)(a1 + 72);
    if (v5)
    {
      sub_1388D4C(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_148B848((void *)(a1 + 48));
  sub_148B7C8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1389B34(uint64_t a1)
{
  sub_1389A4C(a1);

  operator delete();
}

uint64_t sub_1389B6C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13888C4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1389384(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  int v8 = *(_DWORD *)(v1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      uint64_t result = sub_1388DF8(*(void *)(v1 + 72));
    }
    if ((v8 & 2) != 0) {
      uint64_t result = sub_1369E6C(*(void *)(v1 + 80));
    }
  }
  if ((v8 & 0xC) != 0) {
    *(void *)(v1 + 88) = 0;
  }
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_1389C44(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v42 + 1;
    unsigned int v9 = *v42;
    if (*v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v42 + 2;
      }
    }
    uint64_t v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_51;
        }
        unsigned int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v42 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 40);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 32), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 32) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_13D79B4(*(void *)(a1 + 24));
            uint64_t v16 = sub_188CDC8(a1 + 24, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v42;
          }
          unsigned int v12 = sub_138A034(a3, v16, v13);
          uint64_t v42 = v12;
          if (!v12) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_59;
          }
        }
      case 2u:
        if (v9 != 16) {
          goto LABEL_51;
        }
        v5 |= 4u;
        unint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v38 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v42 = v38;
          *(_DWORD *)(a1 + 88) = v39;
          if (!v38) {
            goto LABEL_68;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v42 = v18;
          *(_DWORD *)(a1 + 88) = v19;
        }
        goto LABEL_59;
      case 3u:
        if (v9 != 24) {
          goto LABEL_51;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v40 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v42 = v40;
          *(_DWORD *)(a1 + 92) = v41;
          if (!v40) {
            goto LABEL_68;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v42 = v21;
          *(_DWORD *)(a1 + 92) = v22;
        }
        goto LABEL_59;
      case 4u:
        if (v9 != 34) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v24 = *(void **)(a1 + 72);
        if (!v24)
        {
          int v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v25 = (void *)*v25;
          }
          int v24 = sub_13D7A2C((uint64_t)v25);
          *(void *)(a1 + 72) = v24;
          int v8 = v42;
        }
        int v26 = sub_138A0C4(a3, (uint64_t)v24, (unsigned __int8 *)v8);
        goto LABEL_58;
      case 5u:
        if (v9 != 42) {
          goto LABEL_51;
        }
        int v27 = v8 - 1;
        while (1)
        {
          int v28 = (unsigned __int8 *)(v27 + 1);
          uint64_t v42 = v27 + 1;
          int v29 = *(_DWORD **)(a1 + 64);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 56), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 56) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_13D7AA4(*(void *)(a1 + 48));
            uint64_t v31 = sub_188CDC8(a1 + 48, (uint64_t)v32);
            int v28 = (unsigned __int8 *)v42;
          }
          int v27 = sub_138A154(a3, v31, v28);
          uint64_t v42 = v27;
          if (!v27) {
            goto LABEL_68;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 42) {
            goto LABEL_59;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_51;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v33 = *(void *)(a1 + 80);
        if (!v33)
        {
          uint64_t v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v34 = (void *)*v34;
          }
          sub_13D6A1C((uint64_t)v34);
          uint64_t v33 = v35;
          *(void *)(a1 + 80) = v35;
          int v8 = v42;
        }
        int v26 = (char *)sub_13319DC(a3, v33, (unsigned __int8 *)v8);
        goto LABEL_58;
      default:
LABEL_51:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            unsigned int v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v42;
          }
          int v26 = (char *)sub_1885AC0(v9, v37, v8, a3);
LABEL_58:
          uint64_t v42 = v26;
          if (!v26) {
            goto LABEL_68;
          }
LABEL_59:
          if (sub_11947B8((uint64_t)a3, &v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_68:
        }
          uint64_t v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v42;
    }
  }
}

char *sub_138A034(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13888E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138A0C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1388E1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138A154(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13893EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138A1E4(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1388ADC(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 4) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v12 = *(_DWORD *)(a1 + 88);
    *__dst = 16;
    __dst[1] = v12;
    if (v12 > 0x7F)
    {
      __dst[1] = v12 | 0x80;
      unsigned int v13 = v12 >> 7;
      __dst[2] = v12 >> 7;
      __dst += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v14 = v13 >> 14;
          v13 >>= 7;
          *__dst++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 92);
    *__dst = 24;
    __dst[1] = v15;
    if (v15 > 0x7F)
    {
      __dst[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      __dst[2] = v15 >> 7;
      __dst += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *__dst++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v18 = *(void *)(a1 + 72);
    *__dst = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    __dst[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, __dst + 1);
    }
    else {
      int v20 = __dst + 2;
    }
    __dst = sub_1389014(v18, (unint64_t)v20, a3);
  }
  int v21 = *(_DWORD *)(a1 + 56);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 42;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      __dst[1] = v24;
      if (v24 > 0x7F) {
        int v25 = sub_188A9CC(v24, __dst + 1);
      }
      else {
        int v25 = __dst + 2;
      }
      __dst = sub_1389634(v23, (unint64_t)v25, a3);
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v26 = *(void *)(a1 + 80);
    *__dst = 50;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    __dst[1] = v27;
    if (v27 > 0x7F) {
      int v28 = sub_188A9CC(v27, __dst + 1);
    }
    else {
      int v28 = __dst + 2;
    }
    __dst = sub_1374B08(v26, v28, a3);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return __dst;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(__dst, v32, (int)v33);
    __dst += v34;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, __dst);
}

uint64_t sub_138A570(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1388C88(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_138983C(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) == 0) {
    goto LABEL_21;
  }
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_18;
    }
LABEL_24:
    uint64_t v19 = sub_1374EEC(*(void *)(a1 + 80));
    v9 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_25;
  }
  uint64_t v18 = sub_13891C8(*(void *)(a1 + 72));
  v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_18:
  if ((v15 & 4) == 0) {
    goto LABEL_19;
  }
LABEL_25:
  v9 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 8) != 0) {
LABEL_20:
  }
    v9 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_21:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v20 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v9 += v21;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_138A73C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D1F8((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148D274((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(std::string **)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = (std::string *)sub_13D7A2C((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v19 = &off_2534EB8;
      }
      sub_117EF04(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_34;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 80);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        int v22 = (void *)*v22;
      }
      sub_13D6A1C((uint64_t)v22);
      *(void *)(a1 + 80) = v20;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v23 = &off_2534750;
    }
    sub_136A7DC(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
      goto LABEL_13;
    }
LABEL_34:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_138A948(uint64_t a1)
{
  uint64_t result = sub_13349CC(a1 + 48);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_136ADBC(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_138A98C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ElevationProfile");
}

uint64_t sub_138A99C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2534F60)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_138AA54(uint64_t a1)
{
  sub_138A99C(a1);

  operator delete();
}

uint64_t sub_138AA8C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_138AAEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v24 + 2;
      }
    }
    unsigned int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      sub_13D6A1C((uint64_t)v20);
      uint64_t v19 = v21;
      *(void *)(a1 + 24) = v21;
      int v7 = v24;
    }
    int v14 = (char *)sub_13319DC(a3, v19, (unsigned __int8 *)v7);
LABEL_32:
    unsigned int v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        unsigned int v24 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v24) {
          return 0;
        }
        unint64_t v16 = v22;
        goto LABEL_25;
      }
      uint64_t v15 = v7 + 2;
    }
    unsigned int v24 = v15;
LABEL_25:
    if (v16 > 3)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v23);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v24;
    }
    int v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_32;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_138ACFC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_1374B08(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_138AE94(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_138AF64(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_138AF90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoadDescription");
}

void *sub_138AFA0(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_138B014(void *a1)
{
  sub_138AFA0(a1);

  operator delete();
}

uint64_t sub_138B04C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_138B070(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 39) {
      break;
    }
    if (v8 != 56) {
      goto LABEL_16;
    }
    v5 |= 1u;
    unint64_t v11 = v7 + 1;
    int v12 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_15;
    }
    int v13 = *v11;
    int v12 = v12 + (v13 << 7) - 128;
    if ((v13 & 0x80000000) == 0)
    {
      unint64_t v11 = v7 + 2;
LABEL_15:
      uint64_t v19 = v11;
      *(_DWORD *)(a1 + 24) = v12;
      goto LABEL_23;
    }
    unint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v12);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    if (!v16) {
      goto LABEL_31;
    }
LABEL_23:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_30;
    }
  }
  if (v8 >> 3 == 38 && v8 == 49)
  {
    v5 |= 2u;
    *(void *)(a1 + 32) = *(void *)v7;
    uint64_t v19 = v7 + 8;
    goto LABEL_23;
  }
LABEL_16:
  if (v8) {
    BOOL v14 = (v8 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v6)
    {
      unint64_t v15 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v15, v7, a3);
    if (!v19) {
      goto LABEL_31;
    }
    goto LABEL_23;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_30;
  }
LABEL_31:
  uint64_t v19 = 0;
LABEL_30:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

_OWORD *sub_138B224(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *(_WORD *)uint64_t v4 = 689;
    *(void *)((char *)v4 + 2) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 10);
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v8 = *(_DWORD *)(a1 + 24);
    *(_WORD *)uint64_t v4 = 696;
    *((unsigned char *)v4 + 2) = v8;
    if (v8 > 0x7F)
    {
      *((unsigned char *)v4 + 2) = v8 | 0x80;
      unsigned int v9 = v8 >> 7;
      *((unsigned char *)v4 + 3) = v8 >> 7;
      uint64_t v4 = (_OWORD *)((char *)v4 + 4);
      if (v8 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unsigned int v10 = v9 >> 14;
          v9 >>= 7;
          *(unsigned char *)uint64_t v4 = v9;
          uint64_t v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v10);
      }
    }
    else
    {
      uint64_t v4 = (_OWORD *)((char *)v4 + 3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    BOOL v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    BOOL v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    return (_OWORD *)((char *)v4 + v16);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_138B384(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1) {
      uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    else {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      uint64_t v3 = v2 + 10;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_138B408(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    }
    if ((v2 & 2) != 0) {
      result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    }
    LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_138B454()
{
  return 1;
}

void *sub_138B45C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Step.EVStepInfo");
}

void *sub_138B46C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_138B4E0(void *a1)
{
  sub_138B46C(a1);

  operator delete();
}

uint64_t sub_138B518(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_138B540(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_26;
        }
        v5 |= 2u;
        int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v29 = v12;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_33;
        }
        uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v29 = v23;
        *(_DWORD *)(a1 + 32) = v24;
        if (v23) {
          goto LABEL_33;
        }
        goto LABEL_44;
      case 2u:
        if (v9 != 17) {
          goto LABEL_26;
        }
        v5 |= 1u;
        *(void *)(a1 + 24) = *(void *)v8;
        uint64_t v29 = v8 + 8;
        goto LABEL_33;
      case 3u:
        if (v9 != 24) {
          goto LABEL_26;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          int v25 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v29 = v25;
          *(_DWORD *)(a1 + 36) = v26;
          if (!v25) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_20:
          uint64_t v29 = v15;
          *(_DWORD *)(a1 + 36) = v16;
        }
        goto LABEL_33;
      case 4u:
        if (v9 != 32) {
          goto LABEL_26;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unsigned int v27 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v29 = v27;
          *(_DWORD *)(a1 + 40) = v28;
          if (!v27) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_25:
          uint64_t v29 = v18;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_33;
      default:
LABEL_26:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            unint64_t v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v29;
          }
          uint64_t v29 = (char *)sub_1885AC0(v9, v22, v8, a3);
          if (!v29) {
            goto LABEL_44;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          uint64_t v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v29;
    }
  }
}

unsigned char *sub_138B7DC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v11 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unsigned int v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v14 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 32;
    v4[1] = v14;
    if (v14 > 0x7F)
    {
      v4[1] = v14 | 0x80;
      unsigned int v15 = v14 >> 7;
      v4[2] = v14 >> 7;
      v4 += 3;
      if (v14 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v16 = v15 >> 14;
          v15 >>= 7;
          *v4++ = v15;
        }
        while (v16);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    int v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    int v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_138BA34(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  uint64_t v2 = 9;
  if ((v1 & 1) == 0) {
    uint64_t v2 = 0;
  }
  if ((v1 & 2) == 0)
  {
    if ((v1 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v1 & 8) != 0) {
LABEL_11:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_12:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_138BB10(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_138BB84()
{
  return 1;
}

void *sub_138BB8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Step.EVChargeInfo");
}

uint64_t sub_138BB9C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2534FE0)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 40);
    if (v6)
    {
      sub_145FD84(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_138BC88(uint64_t a1)
{
  sub_138BB9C(a1);

  operator delete();
}

uint64_t sub_138BCC0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 32));
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_1369BB4(*(void *)(v1 + 40));
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(void *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_138BD70(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)unsigned int v27 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_30;
        }
        v5 |= 8u;
        unsigned int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)unsigned int v27 = v12;
          *(void *)(a1 + 48) = v13;
          goto LABEL_38;
        }
        uint64_t v25 = sub_188C138((uint64_t)v8, v13);
        *(void *)unsigned int v27 = v25;
        *(void *)(a1 + 48) = v26;
        if (v25) {
          goto LABEL_38;
        }
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v27, (uint64_t)a3);
        goto LABEL_37;
      case 3u:
        if (v9 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          unsigned int v8 = *(unsigned __int8 **)v27;
        }
        uint64_t v18 = sub_1198F14(a3, v19, v8);
        goto LABEL_37;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_1478C60((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          unsigned int v8 = *(unsigned __int8 **)v27;
        }
        uint64_t v18 = sub_129760C(a3, (uint64_t)v21, v8);
        goto LABEL_37;
      default:
LABEL_30:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v7)
          {
            int v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(unsigned __int8 **)v27;
          }
          uint64_t v18 = sub_1885AC0(v9, v24, (char *)v8, a3);
LABEL_37:
          *(void *)unsigned int v27 = v18;
          if (!v18) {
            goto LABEL_45;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_45:
        }
          *(void *)unsigned int v27 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v27;
    }
  }
}

char *sub_138C01C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_25;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 40);
    char *v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_1460138(v13, v15, a3);
  }
LABEL_25:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_138C244(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v10 = sub_1460320(*(void *)(a1 + 40));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_12:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v11 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_138C38C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      unint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 16) |= 4u;
    unsigned int v14 = *(void **)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = sub_1478C60((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_138C4EC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 40) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_138C53C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Step.StopWaypoint");
}

uint64_t sub_138C54C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AE108;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = a2;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = &qword_2550250;
  *(void *)(a1 + 184) = &qword_2550250;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(void *)(a1 + 312) = -1;
  *(void *)(a1 + 320) = -1;
  *(void *)(a1 + 304) = 0;
  return a1;
}

void sub_138C604(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_138C634(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_138C6FC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_148BA48(a1 + 19);
  sub_148B9C8(a1 + 16);
  sub_148B948(a1 + 13);
  sub_148B4C8(a1 + 10);
  sub_148B8C8(a1 + 7);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_138C6FC(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 176);
  uint64_t v2 = (void ***)(a1 + 176);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 184);
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2535018)
  {
    if (*(void *)(a1 + 192))
    {
      sub_15B5318();
      operator delete();
    }
    uint64_t v5 = *(void **)(a1 + 200);
    if (v5)
    {
      sub_136CAC0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 208);
    if (v6)
    {
      sub_137CCE8(v6);
      operator delete();
    }
    uint64_t v7 = *(void **)(a1 + 216);
    if (v7)
    {
      sub_1393AC0(v7);
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 224);
    if (v8)
    {
      sub_138AFA0(v8);
      operator delete();
    }
    unint64_t v9 = *(void **)(a1 + 232);
    if (v9)
    {
      sub_138B46C(v9);
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 240);
    if (v10)
    {
      sub_13D2774(v10);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 248);
    if (result)
    {
      sub_138BB9C((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_138C874(void *a1)
{
  sub_138C634(a1);

  operator delete();
}

uint64_t sub_138C8AC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 64);
  if ((int)v3 >= 1)
  {
    int v4 = (unsigned char **)(*(void *)(a1 + 72) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_15B4C3C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 64) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 88);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_136C494(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 88) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 112);
  if ((int)v9 >= 1)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = (uint64_t)sub_15B5354(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 112) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 136);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_137E904(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 136) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 160);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 168) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_138AA8C(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 160) = 0;
  }
  unsigned int v18 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v18) {
    goto LABEL_43;
  }
  if ((v18 & 1) == 0)
  {
    if ((v18 & 2) == 0) {
      goto LABEL_24;
    }
LABEL_31:
    unint64_t v20 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v20 + 23) < 0)
    {
      **(unsigned char **)unint64_t v20 = 0;
      *(void *)(v20 + 8) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v20 = 0;
      *(unsigned char *)(v20 + 23) = 0;
      if ((v18 & 4) != 0) {
        goto LABEL_35;
      }
    }
LABEL_25:
    if ((v18 & 8) == 0) {
      goto LABEL_38;
    }
    goto LABEL_36;
  }
  unint64_t v19 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v19 + 23) < 0)
  {
    **(unsigned char **)unint64_t v19 = 0;
    *(void *)(v19 + 8) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_31;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v19 = 0;
    *(unsigned char *)(v19 + 23) = 0;
    if ((v18 & 2) != 0) {
      goto LABEL_31;
    }
  }
LABEL_24:
  if ((v18 & 4) == 0) {
    goto LABEL_25;
  }
LABEL_35:
  uint64_t result = (uint64_t)sub_15B5354(*(void *)(a1 + 192));
  if ((v18 & 8) == 0) {
    goto LABEL_38;
  }
LABEL_36:
  uint64_t v21 = *(void *)(a1 + 200);
  char v22 = *(unsigned char *)(v21 + 8);
  uint64_t result = v21 + 8;
  *(_DWORD *)(result + 8) = 0;
  *(_DWORD *)(result + 32) = 0;
  if (v22) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_38:
  if ((v18 & 0x10) == 0)
  {
    if ((v18 & 0x20) == 0) {
      goto LABEL_40;
    }
LABEL_59:
    uint64_t result = sub_138CB30(*(void *)(a1 + 216));
    if ((v18 & 0x40) == 0)
    {
LABEL_41:
      if ((v18 & 0x80) == 0) {
        goto LABEL_43;
      }
      goto LABEL_42;
    }
    goto LABEL_60;
  }
  uint64_t result = sub_137CEF8(*(void *)(a1 + 208));
  if ((v18 & 0x20) != 0) {
    goto LABEL_59;
  }
LABEL_40:
  if ((v18 & 0x40) == 0) {
    goto LABEL_41;
  }
LABEL_60:
  uint64_t result = sub_138B04C(*(void *)(a1 + 224));
  if ((v18 & 0x80) != 0) {
LABEL_42:
  }
    uint64_t result = sub_138B518(*(void *)(a1 + 232));
LABEL_43:
  if ((v18 & 0x300) != 0)
  {
    if ((v18 & 0x100) != 0) {
      uint64_t result = sub_1369F48(*(void *)(a1 + 240));
    }
    if ((v18 & 0x200) != 0) {
      uint64_t result = sub_138BCC0(*(void *)(a1 + 248));
    }
  }
  if ((v18 & 0xFC00) != 0)
  {
    *(void *)(a1 + 256) = 0;
    *(void *)(a1 + 264) = 0;
    *(void *)(a1 + 272) = 0;
  }
  if ((v18 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 280) = 0;
    *(void *)(a1 + 286) = 0;
  }
  if (HIBYTE(v18))
  {
    *(_WORD *)(a1 + 310) = 0;
    *(void *)(a1 + 302) = 0;
    *(void *)(a1 + 294) = 0;
    *(void *)(a1 + 312) = -1;
    *(_DWORD *)(a1 + 320) = -1;
  }
  char v24 = *(unsigned char *)(a1 + 8);
  uint64_t v23 = a1 + 8;
  *(_DWORD *)(v23 + 316) = -1;
  *(void *)(v23 + 32) = 0;
  if (v24)
  {
    return sub_188B4AC((uint64_t *)v23);
  }
  return result;
}

uint64_t sub_138CB30(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_138CB54(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v175 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v175, a3[11].i32[1])) {
    return *(void *)v175;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v175 + 1);
    unsigned int v8 = **(unsigned char **)v175;
    if ((char)**(unsigned char **)v175 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v175, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v175 + 2);
      }
    }
    *(void *)v175 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v11 = (char *)(v7 + 1);
        int v12 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
          *(void *)v175 = v11;
          *(_DWORD *)(a1 + 256) = v12;
          goto LABEL_246;
        }
        uint64_t v133 = sub_188C0D0((uint64_t)v7, v12);
        *(void *)v175 = v133;
        *(_DWORD *)(a1 + 256) = v134;
        if (v133) {
          goto LABEL_246;
        }
        return 0;
      case 2u:
        if (v8 != 16) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        uint64_t v15 = (char *)(v7 + 1);
        LODWORD(v14) = *v7;
        if ((v14 & 0x80) == 0) {
          goto LABEL_18;
        }
        int v16 = *v15;
        uint64_t v14 = v14 + (v16 << 7) - 128;
        if (v16 < 0)
        {
          uint64_t v135 = sub_188C138((uint64_t)v7, v14);
          *(void *)v175 = v135;
          *(_DWORD *)(a1 + 312) = v136;
          if (!v135) {
            return 0;
          }
        }
        else
        {
          uint64_t v15 = (char *)(v7 + 2);
LABEL_18:
          *(void *)v175 = v15;
          *(_DWORD *)(a1 + 312) = v14;
        }
        goto LABEL_246;
      case 3u:
        if (v8 != 24) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        unsigned int v18 = (char *)(v7 + 1);
        LODWORD(v17) = *v7;
        if ((v17 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v19 = *v18;
        uint64_t v17 = v17 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v137 = sub_188C138((uint64_t)v7, v17);
          *(void *)v175 = v137;
          *(_DWORD *)(a1 + 316) = v138;
          if (!v137) {
            return 0;
          }
        }
        else
        {
          unsigned int v18 = (char *)(v7 + 2);
LABEL_23:
          *(void *)v175 = v18;
          *(_DWORD *)(a1 + 316) = v17;
        }
        goto LABEL_246;
      case 4u:
        if (v8 != 32) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        uint64_t v21 = (char *)(v7 + 1);
        LODWORD(v20) = *v7;
        if ((v20 & 0x80) == 0) {
          goto LABEL_28;
        }
        int v22 = *v21;
        uint64_t v20 = v20 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v139 = sub_188C138((uint64_t)v7, v20);
          *(void *)v175 = v139;
          *(_DWORD *)(a1 + 320) = v140;
          if (!v139) {
            return 0;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v7 + 2);
LABEL_28:
          *(void *)v175 = v21;
          *(_DWORD *)(a1 + 320) = v20;
        }
        goto LABEL_246;
      case 5u:
        if (v8 != 40) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v23 = (char *)(v7 + 1);
        int v24 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v141 = sub_188C0D0((uint64_t)v7, v24);
          *(void *)v175 = v141;
          *(_DWORD *)(a1 + 260) = v142;
          if (!v141) {
            return 0;
          }
        }
        else
        {
          uint64_t v23 = (char *)(v7 + 2);
LABEL_33:
          *(void *)v175 = v23;
          *(_DWORD *)(a1 + 260) = v24;
        }
        goto LABEL_246;
      case 6u:
        if (v8 != 48) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        uint64_t v26 = (char *)(v7 + 1);
        int v27 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v143 = sub_188C0D0((uint64_t)v7, v27);
          *(void *)v175 = v143;
          *(_DWORD *)(a1 + 264) = v144;
          if (!v143) {
            return 0;
          }
        }
        else
        {
          uint64_t v26 = (char *)(v7 + 2);
LABEL_38:
          *(void *)v175 = v26;
          *(_DWORD *)(a1 + 264) = v27;
        }
        goto LABEL_246;
      case 7u:
        if (v8 != 56) {
          goto LABEL_236;
        }
        uint64_t v29 = (char *)(v7 + 1);
        unint64_t v30 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v31 = *v29;
        int v32 = v30 + (v31 << 7);
        unint64_t v30 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)v175 = sub_188C138((uint64_t)v7, (v32 - 128));
          if (!*(void *)v175) {
            return 0;
          }
          unint64_t v30 = v145;
        }
        else
        {
          uint64_t v29 = (char *)(v7 + 2);
LABEL_43:
          *(void *)v175 = v29;
        }
        if (sub_136FC18())
        {
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          *(_DWORD *)(a1 + 268) = v30;
          goto LABEL_246;
        }
        if (*v6) {
          v173 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v173 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v174 = 7;
        goto LABEL_304;
      case 8u:
        if (v8 != 66) {
          goto LABEL_236;
        }
        uint64_t v33 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v34 = (unsigned __int8 *)(v33 + 1);
          *(void *)v175 = v33 + 1;
          uint64_t v35 = *(_DWORD **)(a1 + 72);
          if (v35 && (uint64_t v36 = *(int *)(a1 + 64), (int)v36 < *v35))
          {
            *(_DWORD *)(a1 + 64) = v36 + 1;
            uint64_t v37 = *(void *)&v35[2 * v36 + 2];
          }
          else
          {
            uint64_t v38 = sub_15C1D10(*(void *)(a1 + 56));
            uint64_t v37 = sub_188CDC8(a1 + 56, v38);
            uint64_t v34 = *(unsigned __int8 **)v175;
          }
          uint64_t v33 = sub_138DD74(a3, v37, v34);
          *(void *)v175 = v33;
          if (!v33) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v33 || *v33 != 66) {
            goto LABEL_246;
          }
        }
      case 0xAu:
        if (v8 != 80) {
          goto LABEL_236;
        }
        int v39 = (char *)(v7 + 1);
        unint64_t v30 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_60;
        }
        int v40 = *v39;
        int v41 = v30 + (v40 << 7);
        unint64_t v30 = (v41 - 128);
        if (v40 < 0)
        {
          *(void *)v175 = sub_188C138((uint64_t)v7, (v41 - 128));
          if (!*(void *)v175) {
            return 0;
          }
          unint64_t v30 = v146;
        }
        else
        {
          int v39 = (char *)(v7 + 2);
LABEL_60:
          *(void *)v175 = v39;
        }
        if (v30 <= 1)
        {
          *(_DWORD *)(a1 + 40) |= 0x4000u;
          *(_DWORD *)(a1 + 272) = v30;
          goto LABEL_246;
        }
        if (*v6) {
          v173 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v173 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v174 = 10;
        goto LABEL_304;
      case 0xBu:
        if (v8 != 90) {
          goto LABEL_236;
        }
        uint64_t v42 = (char *)(v7 - 1);
        while (1)
        {
          uint64_t v43 = (unsigned __int8 *)(v42 + 1);
          *(void *)v175 = v42 + 1;
          uint64_t v44 = *(_DWORD **)(a1 + 96);
          if (v44 && (uint64_t v45 = *(int *)(a1 + 88), (int)v45 < *v44))
          {
            *(_DWORD *)(a1 + 88) = v45 + 1;
            uint64_t v46 = *(void *)&v44[2 * v45 + 2];
          }
          else
          {
            uint64_t v47 = sub_13D623C(*(void *)(a1 + 80));
            uint64_t v46 = sub_188CDC8(a1 + 80, v47);
            uint64_t v43 = *(unsigned __int8 **)v175;
          }
          uint64_t v42 = sub_1382300(a3, v46, v43);
          *(void *)v175 = v42;
          if (!v42) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v42 || *v42 != 90) {
            goto LABEL_246;
          }
        }
      case 0xCu:
        if (v8 != 98) {
          goto LABEL_236;
        }
        int v48 = v7 - 1;
        while (1)
        {
          BOOL v49 = v48 + 1;
          *(void *)v175 = v48 + 1;
          unsigned int v50 = *(_DWORD **)(a1 + 120);
          if (v50 && (uint64_t v51 = *(int *)(a1 + 112), (int)v51 < *v50))
          {
            *(_DWORD *)(a1 + 112) = v51 + 1;
            uint64_t v52 = *(void *)&v50[2 * v51 + 2];
          }
          else
          {
            uint64_t v53 = sub_15C1DB0(*(void *)(a1 + 104));
            uint64_t v52 = sub_188CDC8(a1 + 104, v53);
            BOOL v49 = *(unsigned __int8 **)v175;
          }
          int v48 = (unsigned __int8 *)sub_1382E38(a3, v52, v49);
          *(void *)v175 = v48;
          if (!v48) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v48 || *v48 != 98) {
            goto LABEL_246;
          }
        }
      case 0xDu:
        if (v8 != 109) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        *(_DWORD *)(a1 + 276) = *(_DWORD *)v7;
        *(void *)v175 = v7 + 4;
        goto LABEL_246;
      case 0x10u:
        if (v8 != 128) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        unint64_t v55 = (char *)(v7 + 1);
        LODWORD(v54) = *v7;
        if ((v54 & 0x80) == 0) {
          goto LABEL_89;
        }
        int v56 = *v55;
        uint64_t v54 = v54 + (v56 << 7) - 128;
        if (v56 < 0)
        {
          uint64_t v147 = sub_188C138((uint64_t)v7, v54);
          *(void *)v175 = v147;
          *(_DWORD *)(a1 + 324) = v148;
          if (!v147) {
            return 0;
          }
        }
        else
        {
          unint64_t v55 = (char *)(v7 + 2);
LABEL_89:
          *(void *)v175 = v55;
          *(_DWORD *)(a1 + 324) = v54;
        }
        goto LABEL_246;
      case 0x11u:
        if (v8 != 136) {
          goto LABEL_236;
        }
        int v57 = (char *)(v7 + 1);
        unint64_t v30 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_94;
        }
        int v58 = *v57;
        int v59 = v30 + (v58 << 7);
        unint64_t v30 = (v59 - 128);
        if (v58 < 0)
        {
          *(void *)v175 = sub_188C138((uint64_t)v7, (v59 - 128));
          if (!*(void *)v175) {
            return 0;
          }
          unint64_t v30 = v149;
        }
        else
        {
          int v57 = (char *)(v7 + 2);
LABEL_94:
          *(void *)v175 = v57;
        }
        if (v30 <= 6)
        {
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          *(_DWORD *)(a1 + 280) = v30;
          goto LABEL_246;
        }
        if (*v6) {
          v173 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v173 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v174 = 17;
        goto LABEL_304;
      case 0x12u:
        if (v8 != 144) {
          goto LABEL_236;
        }
        unsigned int v60 = (char *)(v7 + 1);
        unint64_t v30 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_101;
        }
        int v61 = *v60;
        int v62 = v30 + (v61 << 7);
        unint64_t v30 = (v62 - 128);
        if (v61 < 0)
        {
          *(void *)v175 = sub_188C138((uint64_t)v7, (v62 - 128));
          if (!*(void *)v175) {
            return 0;
          }
          unint64_t v30 = v150;
        }
        else
        {
          unsigned int v60 = (char *)(v7 + 2);
LABEL_101:
          *(void *)v175 = v60;
        }
        if (v30 > 1)
        {
          if (*v6) {
            v173 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v173 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v174 = 18;
LABEL_304:
          sub_188C020(v174, v30, v173);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x20000u;
          *(_DWORD *)(a1 + 284) = v30;
        }
        goto LABEL_246;
      case 0x13u:
        if (v8 != 154) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v63 = *(void *)(a1 + 192);
        if (!v63)
        {
          uint64_t v64 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v64 = (void *)*v64;
          }
          uint64_t v63 = sub_15C1DB0((uint64_t)v64);
          *(void *)(a1 + 192) = v63;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = sub_1382E38(a3, v63, v7);
        goto LABEL_245;
      case 0x14u:
        if (v8 != 160) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v66 = (char *)(v7 + 1);
        uint64_t v67 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_114;
        }
        int v68 = *v66;
        uint64_t v67 = v67 + (v68 << 7) - 128;
        if (v68 < 0)
        {
          uint64_t v151 = sub_188C138((uint64_t)v7, v67);
          *(void *)v175 = v151;
          *(unsigned char *)(a1 + 288) = v152 != 0;
          if (!v151) {
            return 0;
          }
        }
        else
        {
          uint64_t v66 = (char *)(v7 + 2);
LABEL_114:
          *(void *)v175 = v66;
          *(unsigned char *)(a1 + 288) = v67 != 0;
        }
        goto LABEL_246;
      case 0x15u:
        if (v8 != 168) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v69 = (char *)(v7 + 1);
        uint64_t v70 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_119;
        }
        int v71 = *v69;
        uint64_t v70 = v70 + (v71 << 7) - 128;
        if (v71 < 0)
        {
          uint64_t v153 = sub_188C138((uint64_t)v7, v70);
          *(void *)v175 = v153;
          *(unsigned char *)(a1 + 289) = v154 != 0;
          if (!v153) {
            return 0;
          }
        }
        else
        {
          uint64_t v69 = (char *)(v7 + 2);
LABEL_119:
          *(void *)v175 = v69;
          *(unsigned char *)(a1 + 289) = v70 != 0;
        }
        goto LABEL_246;
      case 0x16u:
        if (v8 != 176) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        v72 = (char *)(v7 + 1);
        uint64_t v73 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_124;
        }
        int v74 = *v72;
        uint64_t v73 = v73 + (v74 << 7) - 128;
        if (v74 < 0)
        {
          uint64_t v155 = sub_188C138((uint64_t)v7, v73);
          *(void *)v175 = v155;
          *(unsigned char *)(a1 + 290) = v156 != 0;
          if (!v155) {
            return 0;
          }
        }
        else
        {
          v72 = (char *)(v7 + 2);
LABEL_124:
          *(void *)v175 = v72;
          *(unsigned char *)(a1 + 290) = v73 != 0;
        }
        goto LABEL_246;
      case 0x18u:
        if (v8 != 192) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x200000u;
        int v75 = (char *)(v7 + 1);
        uint64_t v76 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_129;
        }
        int v77 = *v75;
        uint64_t v76 = v76 + (v77 << 7) - 128;
        if (v77 < 0)
        {
          uint64_t v157 = sub_188C138((uint64_t)v7, v76);
          *(void *)v175 = v157;
          *(unsigned char *)(a1 + 291) = v158 != 0;
          if (!v157) {
            return 0;
          }
        }
        else
        {
          int v75 = (char *)(v7 + 2);
LABEL_129:
          *(void *)v175 = v75;
          *(unsigned char *)(a1 + 291) = v76 != 0;
        }
        goto LABEL_246;
      case 0x1Eu:
        if (v8 != 242) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v78 = *(void *)(a1 + 8);
        v79 = (uint64_t *)(v78 & 0xFFFFFFFFFFFFFFFCLL);
        if (v78) {
          v79 = (uint64_t *)*v79;
        }
        int v80 = (void *)(a1 + 176);
        goto LABEL_138;
      case 0x1Fu:
        if (v8 != 250) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v81 = *(void *)(a1 + 8);
        v79 = (uint64_t *)(v81 & 0xFFFFFFFFFFFFFFFCLL);
        if (v81) {
          v79 = (uint64_t *)*v79;
        }
        int v80 = (void *)(a1 + 184);
LABEL_138:
        int v82 = (std::string *)sub_1880F84(v80, v79);
        uint64_t v65 = (uint64_t)sub_188C244(v82, *(char **)v175, (uint64_t)a3);
        goto LABEL_245;
      case 0x20u:
        if (v8 != 2) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v83 = *(void *)(a1 + 200);
        if (!v83)
        {
          uint64_t v84 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v84 = (void *)*v84;
          }
          sub_13D62B8((uint64_t)v84);
          uint64_t v83 = v85;
          *(void *)(a1 + 200) = v85;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = (uint64_t)sub_138DE10(a3, v83, v7);
        goto LABEL_245;
      case 0x21u:
        if (v8 != 10) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v86 = *(void *)(a1 + 208);
        if (!v86)
        {
          v87 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v87 = (void *)*v87;
          }
          uint64_t v86 = sub_13D7014((uint64_t)v87);
          *(void *)(a1 + 208) = v86;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = (uint64_t)sub_1347280(a3, v86, v7);
        goto LABEL_245;
      case 0x22u:
        if (v8 != 16) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        int v88 = (char *)(v7 + 1);
        uint64_t v89 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_155;
        }
        int v90 = *v88;
        uint64_t v89 = v89 + (v90 << 7) - 128;
        if (v90 < 0)
        {
          uint64_t v159 = sub_188C138((uint64_t)v7, v89);
          *(void *)v175 = v159;
          *(unsigned char *)(a1 + 292) = v160 != 0;
          if (!v159) {
            return 0;
          }
        }
        else
        {
          int v88 = (char *)(v7 + 2);
LABEL_155:
          *(void *)v175 = v88;
          *(unsigned char *)(a1 + 292) = v89 != 0;
        }
        goto LABEL_246;
      case 0x23u:
        if (v8 != 26) {
          goto LABEL_236;
        }
        v91 = (char *)(v7 - 2);
        while (1)
        {
          int v92 = (unsigned __int8 *)(v91 + 2);
          *(void *)v175 = v91 + 2;
          v93 = *(_DWORD **)(a1 + 144);
          if (v93 && (uint64_t v94 = *(int *)(a1 + 136), (int)v94 < *v93))
          {
            *(_DWORD *)(a1 + 136) = v94 + 1;
            uint64_t v95 = *(void *)&v93[2 * v94 + 2];
          }
          else
          {
            sub_13D7104(*(void *)(a1 + 128));
            uint64_t v95 = sub_188CDC8(a1 + 128, v96);
            int v92 = *(unsigned __int8 **)v175;
          }
          v91 = sub_138DEA0(a3, v95, v92);
          *(void *)v175 = v91;
          if (!v91) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v91 || *(_WORD *)v91 != 666) {
            goto LABEL_246;
          }
        }
      case 0x24u:
        if (v8 != 32) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x800000u;
        v97 = (char *)(v7 + 1);
        uint64_t v98 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_170;
        }
        int v99 = *v97;
        uint64_t v98 = v98 + (v99 << 7) - 128;
        if (v99 < 0)
        {
          uint64_t v161 = sub_188C138((uint64_t)v7, v98);
          *(void *)v175 = v161;
          *(unsigned char *)(a1 + 293) = v162 != 0;
          if (!v161) {
            return 0;
          }
        }
        else
        {
          v97 = (char *)(v7 + 2);
LABEL_170:
          *(void *)v175 = v97;
          *(unsigned char *)(a1 + 293) = v98 != 0;
        }
        goto LABEL_246;
      case 0x25u:
        if (v8 != 40) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000000u;
        v100 = (char *)(v7 + 1);
        uint64_t v101 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_175;
        }
        int v102 = *v100;
        uint64_t v101 = v101 + (v102 << 7) - 128;
        if (v102 < 0)
        {
          uint64_t v163 = sub_188C138((uint64_t)v7, v101);
          *(void *)v175 = v163;
          *(unsigned char *)(a1 + 294) = v164 != 0;
          if (!v163) {
            return 0;
          }
        }
        else
        {
          v100 = (char *)(v7 + 2);
LABEL_175:
          *(void *)v175 = v100;
          *(unsigned char *)(a1 + 294) = v101 != 0;
        }
        goto LABEL_246;
      case 0x26u:
        if (v8 != 50) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        v103 = *(void **)(a1 + 216);
        if (!v103)
        {
          v104 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v104 = (void *)*v104;
          }
          v103 = sub_13D8160((uint64_t)v104);
          *(void *)(a1 + 216) = v103;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = (uint64_t)sub_138DF30(a3, (uint64_t)v103, v7);
        goto LABEL_245;
      case 0x29u:
        if (v8 != 74) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        v105 = *(void **)(a1 + 224);
        if (!v105)
        {
          v106 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v106 = (void *)*v106;
          }
          v105 = sub_13D7C50((uint64_t)v106);
          *(void *)(a1 + 224) = v105;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = (uint64_t)sub_138DFC0(a3, (uint64_t)v105, v7);
        goto LABEL_245;
      case 0x2Au:
        if (v8 != 82) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v107 = *(void *)(a1 + 232);
        if (!v107)
        {
          v108 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v108 = (void *)*v108;
          }
          uint64_t v107 = sub_13D7CCC((uint64_t)v108);
          *(void *)(a1 + 232) = v107;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = (uint64_t)sub_138E050(a3, v107, v7);
        goto LABEL_245;
      case 0x2Bu:
        if (v8 != 88) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000000u;
        v109 = (char *)(v7 + 1);
        int v110 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_198;
        }
        int v111 = *v109;
        int v110 = v110 + (v111 << 7) - 128;
        if (v111 < 0)
        {
          uint64_t v165 = sub_188C0D0((uint64_t)v7, v110);
          *(void *)v175 = v165;
          *(_DWORD *)(a1 + 296) = v166;
          if (!v165) {
            return 0;
          }
        }
        else
        {
          v109 = (char *)(v7 + 2);
LABEL_198:
          *(void *)v175 = v109;
          *(_DWORD *)(a1 + 296) = v110;
        }
        goto LABEL_246;
      case 0x2Cu:
        if (v8 != 98) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v123 = *(void *)(a1 + 240);
        if (!v123)
        {
          v124 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v124 = (void *)*v124;
          }
          uint64_t v123 = sub_13DAB08((uint64_t)v124);
          *(void *)(a1 + 240) = v123;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = sub_1323390(a3, v123, v7);
        goto LABEL_245;
      case 0x2Du:
        if (v8 != 106) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        v112 = *(void **)(a1 + 248);
        if (!v112)
        {
          v113 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            v113 = (void *)*v113;
          }
          v112 = sub_13D7D4C((uint64_t)v113);
          *(void *)(a1 + 248) = v112;
          uint64_t v7 = *(unsigned __int8 **)v175;
        }
        uint64_t v65 = sub_138E0E0(a3, (uint64_t)v112, v7);
        goto LABEL_245;
      case 0x2Eu:
        if (v8 != 112) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        v114 = (char *)(v7 + 1);
        int v115 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_209;
        }
        int v116 = *v114;
        int v115 = v115 + (v116 << 7) - 128;
        if (v116 < 0)
        {
          uint64_t v167 = sub_188C0D0((uint64_t)v7, v115);
          *(void *)v175 = v167;
          *(_DWORD *)(a1 + 300) = v168;
          if (!v167) {
            return 0;
          }
        }
        else
        {
          v114 = (char *)(v7 + 2);
LABEL_209:
          *(void *)v175 = v114;
          *(_DWORD *)(a1 + 300) = v115;
        }
        goto LABEL_246;
      case 0x2Fu:
        if (v8 != 122) {
          goto LABEL_236;
        }
        v125 = (char *)(v7 - 2);
        while (1)
        {
          v126 = (unsigned __int8 *)(v125 + 2);
          *(void *)v175 = v125 + 2;
          v127 = *(_DWORD **)(a1 + 168);
          if (v127 && (uint64_t v128 = *(int *)(a1 + 160), (int)v128 < *v127))
          {
            *(_DWORD *)(a1 + 160) = v128 + 1;
            uint64_t v129 = *(void *)&v127[2 * v128 + 2];
          }
          else
          {
            uint64_t v130 = sub_13D7BD4(*(void *)(a1 + 152));
            uint64_t v129 = sub_188CDC8(a1 + 152, v130);
            v126 = *(unsigned __int8 **)v175;
          }
          v125 = sub_138E170(a3, v129, v126);
          *(void *)v175 = v125;
          if (!v125) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v125 || *(_WORD *)v125 != 762) {
            goto LABEL_246;
          }
        }
      case 0x30u:
        if (v8 != 128) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        v117 = (char *)(v7 + 1);
        int v118 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_214;
        }
        int v119 = *v117;
        int v118 = v118 + (v119 << 7) - 128;
        if (v119 < 0)
        {
          uint64_t v169 = sub_188C0D0((uint64_t)v7, v118);
          *(void *)v175 = v169;
          *(_DWORD *)(a1 + 304) = v170;
          if (!v169) {
            return 0;
          }
        }
        else
        {
          v117 = (char *)(v7 + 2);
LABEL_214:
          *(void *)v175 = v117;
          *(_DWORD *)(a1 + 304) = v118;
        }
        goto LABEL_246;
      case 0x31u:
        if (v8 != 136) {
          goto LABEL_236;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        v120 = (char *)(v7 + 1);
        int v121 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_219;
        }
        int v122 = *v120;
        int v121 = v121 + (v122 << 7) - 128;
        if (v122 < 0)
        {
          uint64_t v171 = sub_188C0D0((uint64_t)v7, v121);
          *(void *)v175 = v171;
          *(_DWORD *)(a1 + 308) = v172;
          if (!v171) {
            return 0;
          }
        }
        else
        {
          v120 = (char *)(v7 + 2);
LABEL_219:
          *(void *)v175 = v120;
          *(_DWORD *)(a1 + 308) = v121;
        }
        goto LABEL_246;
      default:
LABEL_236:
        if (v8) {
          BOOL v131 = (v8 & 7) == 4;
        }
        else {
          BOOL v131 = 1;
        }
        if (!v131)
        {
          if (v8 - 7600 > 0x4B7)
          {
            if (*v6)
            {
              v132 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v132 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = *(unsigned __int8 **)v175;
            }
            uint64_t v65 = (uint64_t)sub_1885AC0(v8, v132, (char *)v7, a3);
          }
          else
          {
            uint64_t v65 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2535018, (uint64_t *)(a1 + 8), a3);
          }
LABEL_245:
          *(void *)v175 = v65;
          if (!v65) {
            return 0;
          }
LABEL_246:
          if (sub_11947B8((uint64_t)a3, (char **)v175, a3[11].i32[1])) {
            return *(void *)v175;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v175;
    }
  }
}

char *sub_138DD74(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_15B4CB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_138DE04(unsigned int a1)
{
  return a1 < 7;
}

char *sub_138DE10(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136CB94(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138DEA0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137EE38(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138DF30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1393B6C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138DFC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_138B070(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138E050(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_138B540(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_138E0E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_138BD70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_138E170(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_138AAEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_138E200(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 256);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 312);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 316);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6 < 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 320);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 260);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v22 = *(_DWORD *)(a1 + 264);
    unsigned char *v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unsigned int v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 268);
    unsigned char *v4 = 56;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v28 = *(_DWORD *)(a1 + 64);
  if (v28)
  {
    for (int i = 0; i != v28; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v30 = *(void *)(*(void *)(a1 + 72) + 8 * i + 8);
      unsigned char *v4 = 66;
      unsigned int v31 = *(_DWORD *)(v30 + 40);
      v4[1] = v31;
      if (v31 > 0x7F) {
        int v32 = sub_188A9CC(v31, v4 + 1);
      }
      else {
        int v32 = v4 + 2;
      }
      int v4 = sub_15B4E58(v30, v32, a3);
    }
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v33 = *(int *)(a1 + 272);
    unsigned char *v4 = 80;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unint64_t v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v36 = *(_DWORD *)(a1 + 88);
  if (v36)
  {
    for (int j = 0; j != v36; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v38 = *(void *)(*(void *)(a1 + 96) + 8 * j + 8);
      unsigned char *v4 = 90;
      unsigned int v39 = *(_DWORD *)(v38 + 20);
      v4[1] = v39;
      if (v39 > 0x7F) {
        int v40 = sub_188A9CC(v39, v4 + 1);
      }
      else {
        int v40 = v4 + 2;
      }
      int v4 = sub_136C794(v38, (unint64_t)v40, a3);
    }
  }
  int v41 = *(_DWORD *)(a1 + 112);
  if (v41)
  {
    for (int k = 0; k != v41; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 120) + 8 * k + 8);
      unsigned char *v4 = 98;
      unsigned int v44 = *(_DWORD *)(v43 + 44);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      int v4 = sub_15B58D0(v43, v45, a3);
    }
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v46 = *(_DWORD *)(a1 + 276);
    unsigned char *v4 = 109;
    *(_DWORD *)(v4 + 1) = v46;
    v4 += 5;
  }
  if (*(unsigned char *)(a1 + 44))
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v47 = *(int *)(a1 + 324);
    *(_WORD *)int v4 = 384;
    v4[2] = v47;
    if (v47 > 0x7F)
    {
      v4[2] = v47 | 0x80;
      unint64_t v48 = v47 >> 7;
      v4[3] = v47 >> 7;
      v4 += 4;
      if (v47 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v49 = v48 >> 14;
          v48 >>= 7;
          *v4++ = v48;
        }
        while (v49);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v50 = *(_DWORD *)(a1 + 40);
  if ((v50 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v51 = *(int *)(a1 + 280);
    *(_WORD *)int v4 = 392;
    v4[2] = v51;
    if (v51 > 0x7F)
    {
      v4[2] = v51 | 0x80;
      unint64_t v52 = v51 >> 7;
      v4[3] = v51 >> 7;
      v4 += 4;
      if (v51 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v53 = v52 >> 14;
          v52 >>= 7;
          *v4++ = v52;
        }
        while (v53);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v50 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v54 = *(int *)(a1 + 284);
    *(_WORD *)int v4 = 400;
    v4[2] = v54;
    if (v54 > 0x7F)
    {
      v4[2] = v54 | 0x80;
      unint64_t v55 = v54 >> 7;
      v4[3] = v54 >> 7;
      v4 += 4;
      if (v54 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v56 = v55 >> 14;
          v55 >>= 7;
          *v4++ = v55;
        }
        while (v56);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v50 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v57 = *(void *)(a1 + 192);
    *(_WORD *)int v4 = 410;
    unsigned int v58 = *(_DWORD *)(v57 + 44);
    v4[2] = v58;
    if (v58 > 0x7F) {
      int v59 = sub_188A9CC(v58, v4 + 2);
    }
    else {
      int v59 = v4 + 3;
    }
    int v4 = sub_15B58D0(v57, v59, a3);
    if ((v50 & 0x40000) == 0)
    {
LABEL_108:
      if ((v50 & 0x80000) == 0) {
        goto LABEL_109;
      }
      goto LABEL_126;
    }
  }
  else if ((v50 & 0x40000) == 0)
  {
    goto LABEL_108;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v60 = *(unsigned char *)(a1 + 288);
  *(_WORD *)int v4 = 416;
  v4[2] = v60;
  v4 += 3;
  if ((v50 & 0x80000) == 0)
  {
LABEL_109:
    if ((v50 & 0x100000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_129;
  }
LABEL_126:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v61 = *(unsigned char *)(a1 + 289);
  *(_WORD *)int v4 = 424;
  v4[2] = v61;
  v4 += 3;
  if ((v50 & 0x100000) == 0)
  {
LABEL_110:
    if ((v50 & 0x200000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_132;
  }
LABEL_129:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v62 = *(unsigned char *)(a1 + 290);
  *(_WORD *)int v4 = 432;
  v4[2] = v62;
  v4 += 3;
  if ((v50 & 0x200000) == 0)
  {
LABEL_111:
    if ((v50 & 1) == 0) {
      goto LABEL_112;
    }
    goto LABEL_135;
  }
LABEL_132:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v63 = *(unsigned char *)(a1 + 291);
  *(_WORD *)int v4 = 448;
  v4[2] = v63;
  v4 += 3;
  if ((v50 & 1) == 0)
  {
LABEL_112:
    if ((v50 & 2) == 0) {
      goto LABEL_113;
    }
    goto LABEL_136;
  }
LABEL_135:
  int v4 = sub_117A0AC(a3, 30, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v50 & 2) == 0)
  {
LABEL_113:
    if ((v50 & 8) == 0) {
      goto LABEL_114;
    }
    goto LABEL_137;
  }
LABEL_136:
  int v4 = sub_117A0AC(a3, 31, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v50 & 8) == 0)
  {
LABEL_114:
    if ((v50 & 0x10) == 0) {
      goto LABEL_115;
    }
    goto LABEL_143;
  }
LABEL_137:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v64 = *(void *)(a1 + 200);
  *(_WORD *)int v4 = 642;
  unsigned int v65 = *(_DWORD *)(v64 + 60);
  v4[2] = v65;
  if (v65 > 0x7F) {
    uint64_t v66 = sub_188A9CC(v65, v4 + 2);
  }
  else {
    uint64_t v66 = v4 + 3;
  }
  int v4 = sub_136CD44(v64, (unint64_t)v66, a3);
  if ((v50 & 0x10) == 0)
  {
LABEL_115:
    if ((v50 & 0x400000) == 0) {
      goto LABEL_152;
    }
    goto LABEL_149;
  }
LABEL_143:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v67 = *(void *)(a1 + 208);
  *(_WORD *)int v4 = 650;
  unsigned int v68 = *(_DWORD *)(v67 + 44);
  v4[2] = v68;
  if (v68 > 0x7F) {
    uint64_t v69 = sub_188A9CC(v68, v4 + 2);
  }
  else {
    uint64_t v69 = v4 + 3;
  }
  int v4 = sub_137D760(v67, v69, a3);
  if ((v50 & 0x400000) != 0)
  {
LABEL_149:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v70 = *(unsigned char *)(a1 + 292);
    *(_WORD *)int v4 = 656;
    v4[2] = v70;
    v4 += 3;
  }
LABEL_152:
  int v71 = *(_DWORD *)(a1 + 136);
  if (v71)
  {
    for (int m = 0; m != v71; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v73 = *(void *)(*(void *)(a1 + 144) + 8 * m + 8);
      *(_WORD *)int v4 = 666;
      unsigned int v74 = *(_DWORD *)(v73 + 20);
      v4[2] = v74;
      if (v74 > 0x7F) {
        int v75 = sub_188A9CC(v74, v4 + 2);
      }
      else {
        int v75 = v4 + 3;
      }
      int v4 = sub_137FB48(v73, (unint64_t)v75, a3);
    }
  }
  if ((v50 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v76 = *(unsigned char *)(a1 + 293);
    *(_WORD *)int v4 = 672;
    v4[2] = v76;
    v4 += 3;
    if ((v50 & 0x1000000) == 0)
    {
LABEL_162:
      if ((v50 & 0x20) == 0) {
        goto LABEL_163;
      }
      goto LABEL_173;
    }
  }
  else if ((v50 & 0x1000000) == 0)
  {
    goto LABEL_162;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v77 = *(unsigned char *)(a1 + 294);
  *(_WORD *)int v4 = 680;
  v4[2] = v77;
  v4 += 3;
  if ((v50 & 0x20) == 0)
  {
LABEL_163:
    if ((v50 & 0x40) == 0) {
      goto LABEL_164;
    }
    goto LABEL_179;
  }
LABEL_173:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v78 = *(void *)(a1 + 216);
  *(_WORD *)int v4 = 690;
  unsigned int v79 = *(_DWORD *)(v78 + 20);
  v4[2] = v79;
  if (v79 > 0x7F) {
    int v80 = sub_188A9CC(v79, v4 + 2);
  }
  else {
    int v80 = v4 + 3;
  }
  int v4 = sub_1393D5C(v78, (unint64_t)v80, a3);
  if ((v50 & 0x40) == 0)
  {
LABEL_164:
    if ((v50 & 0x80) == 0) {
      goto LABEL_165;
    }
    goto LABEL_185;
  }
LABEL_179:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v81 = *(void *)(a1 + 224);
  *(_WORD *)int v4 = 714;
  unsigned int v82 = *(_DWORD *)(v81 + 20);
  v4[2] = v82;
  if (v82 > 0x7F) {
    uint64_t v83 = sub_188A9CC(v82, v4 + 2);
  }
  else {
    uint64_t v83 = v4 + 3;
  }
  int v4 = sub_138B224(v81, (unint64_t)v83, a3);
  if ((v50 & 0x80) == 0)
  {
LABEL_165:
    if ((v50 & 0x2000000) == 0) {
      goto LABEL_197;
    }
    goto LABEL_191;
  }
LABEL_185:
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v84 = *(void *)(a1 + 232);
  *(_WORD *)int v4 = 722;
  unsigned int v85 = *(_DWORD *)(v84 + 20);
  v4[2] = v85;
  if (v85 > 0x7F) {
    uint64_t v86 = sub_188A9CC(v85, v4 + 2);
  }
  else {
    uint64_t v86 = v4 + 3;
  }
  int v4 = sub_138B7DC(v84, (unint64_t)v86, a3);
  if ((v50 & 0x2000000) != 0)
  {
LABEL_191:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v87 = *(_DWORD *)(a1 + 296);
    *(_WORD *)int v4 = 728;
    v4[2] = v87;
    if (v87 > 0x7F)
    {
      v4[2] = v87 | 0x80;
      unsigned int v88 = v87 >> 7;
      v4[3] = v87 >> 7;
      v4 += 4;
      if (v87 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v89 = v88 >> 14;
          v88 >>= 7;
          *v4++ = v88;
        }
        while (v89);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_197:
  if ((v50 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v90 = *(void *)(a1 + 240);
    *(_WORD *)int v4 = 738;
    unsigned int v91 = *(_DWORD *)(v90 + 44);
    v4[2] = v91;
    if (v91 > 0x7F) {
      int v92 = sub_188A9CC(v91, v4 + 2);
    }
    else {
      int v92 = v4 + 3;
    }
    int v4 = sub_13D2F58(v90, v92, a3);
    if ((v50 & 0x200) == 0)
    {
LABEL_199:
      if ((v50 & 0x4000000) == 0) {
        goto LABEL_219;
      }
      goto LABEL_213;
    }
  }
  else if ((v50 & 0x200) == 0)
  {
    goto LABEL_199;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v93 = *(void *)(a1 + 248);
  *(_WORD *)int v4 = 746;
  unsigned int v94 = *(_DWORD *)(v93 + 20);
  v4[2] = v94;
  if (v94 > 0x7F) {
    uint64_t v95 = sub_188A9CC(v94, v4 + 2);
  }
  else {
    uint64_t v95 = v4 + 3;
  }
  int v4 = sub_138C01C(v93, (unint64_t)v95, a3);
  if ((v50 & 0x4000000) != 0)
  {
LABEL_213:
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v96 = *(_DWORD *)(a1 + 300);
    *(_WORD *)int v4 = 752;
    v4[2] = v96;
    if (v96 > 0x7F)
    {
      v4[2] = v96 | 0x80;
      unsigned int v97 = v96 >> 7;
      v4[3] = v96 >> 7;
      v4 += 4;
      if (v96 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v98 = v97 >> 14;
          v97 >>= 7;
          *v4++ = v97;
        }
        while (v98);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_219:
  int v99 = *(_DWORD *)(a1 + 160);
  if (v99)
  {
    for (int n = 0; n != v99; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v101 = *(void *)(*(void *)(a1 + 168) + 8 * n + 8);
      *(_WORD *)int v4 = 762;
      unsigned int v102 = *(_DWORD *)(v101 + 20);
      v4[2] = v102;
      if (v102 > 0x7F) {
        v103 = sub_188A9CC(v102, v4 + 2);
      }
      else {
        v103 = v4 + 3;
      }
      int v4 = sub_138ACFC(v101, (unint64_t)v103, a3);
    }
  }
  if ((v50 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v104 = *(_DWORD *)(a1 + 304);
    *(_WORD *)int v4 = 896;
    v4[2] = v104;
    if (v104 > 0x7F)
    {
      v4[2] = v104 | 0x80;
      unsigned int v105 = v104 >> 7;
      v4[3] = v104 >> 7;
      v4 += 4;
      if (v104 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v106 = v105 >> 14;
          v105 >>= 7;
          *v4++ = v105;
        }
        while (v106);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v50 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v107 = *(_DWORD *)(a1 + 308);
    *(_WORD *)int v4 = 904;
    v4[2] = v107;
    if (v107 > 0x7F)
    {
      v4[2] = v107 | 0x80;
      unsigned int v108 = v107 >> 7;
      v4[3] = v107 >> 7;
      v4 += 4;
      if (v107 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v109 = v108 >> 14;
          v108 >>= 7;
          *v4++ = v108;
        }
        while (v109);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 950, 1101, v4, a3);
  }
  uint64_t v110 = *(void *)(a1 + 8);
  if ((v110 & 1) == 0) {
    return v4;
  }
  unint64_t v112 = v110 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v112 + 31) < 0)
  {
    v113 = *(void **)(v112 + 8);
    uint64_t v114 = *(void *)(v112 + 16);
  }
  else
  {
    v113 = (void *)(v112 + 8);
    LODWORD(v114) = *(unsigned __int8 *)(v112 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v114)
  {
    uint64_t v115 = (int)v114;
    memcpy(v4, v113, (int)v114);
    v4 += v115;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v113, v114, v4);
}

uint64_t sub_138F234(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 64);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B4F9C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 88);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 96);
  if (v12) {
    unint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_136C9BC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 112);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 120);
  if (v19) {
    unsigned int v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unsigned int v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_15B5BAC(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 136);
  uint64_t v25 = v18 + 2 * v24;
  uint64_t v26 = *(void *)(a1 + 144);
  if (v26) {
    unint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    unint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_1380528(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 160);
  uint64_t v32 = v25 + 2 * v31;
  uint64_t v33 = *(void *)(a1 + 168);
  if (v33) {
    unint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    unint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_138AE94(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  unsigned int v38 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v38) {
    goto LABEL_41;
  }
  if (v38)
  {
    unint64_t v55 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v56 = *(unsigned __int8 *)(v55 + 23);
    uint64_t v57 = *(void *)(v55 + 8);
    if ((v56 & 0x80u) == 0) {
      uint64_t v57 = v56;
    }
    v32 += v57 + ((9 * (__clz(v57 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v38 & 2) == 0)
    {
LABEL_34:
      if ((v38 & 4) == 0) {
        goto LABEL_35;
      }
      goto LABEL_102;
    }
  }
  else if ((v38 & 2) == 0)
  {
    goto LABEL_34;
  }
  unint64_t v58 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v59 = *(unsigned __int8 *)(v58 + 23);
  uint64_t v60 = *(void *)(v58 + 8);
  if ((v59 & 0x80u) == 0) {
    uint64_t v60 = v59;
  }
  v32 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 4) == 0)
  {
LABEL_35:
    if ((v38 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_103;
  }
LABEL_102:
  uint64_t v61 = sub_15B5BAC(*(void *)(a1 + 192));
  v32 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 8) == 0)
  {
LABEL_36:
    if ((v38 & 0x10) == 0) {
      goto LABEL_37;
    }
    goto LABEL_104;
  }
LABEL_103:
  uint64_t v62 = sub_136CFD0(*(void *)(a1 + 200));
  v32 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x10) == 0)
  {
LABEL_37:
    if ((v38 & 0x20) == 0) {
      goto LABEL_38;
    }
LABEL_105:
    uint64_t v64 = sub_1393F00(*(void *)(a1 + 216));
    v32 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v38 & 0x40) == 0)
    {
LABEL_39:
      if ((v38 & 0x80) == 0) {
        goto LABEL_41;
      }
      goto LABEL_40;
    }
    goto LABEL_106;
  }
LABEL_104:
  uint64_t v63 = sub_137DBFC(*(void *)(a1 + 208));
  v32 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x20) != 0) {
    goto LABEL_105;
  }
LABEL_38:
  if ((v38 & 0x40) == 0) {
    goto LABEL_39;
  }
LABEL_106:
  uint64_t v65 = sub_138B384(*(void *)(a1 + 224));
  v32 += v65 + ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x80) != 0)
  {
LABEL_40:
    uint64_t v39 = sub_138BA34(*(void *)(a1 + 232));
    v32 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_41:
  if ((v38 & 0xFF00) == 0) {
    goto LABEL_55;
  }
  if ((v38 & 0x100) != 0)
  {
    uint64_t v66 = sub_13D3304(*(void *)(a1 + 240));
    v32 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v38 & 0x200) == 0)
    {
LABEL_44:
      if ((v38 & 0x400) == 0) {
        goto LABEL_45;
      }
      goto LABEL_110;
    }
  }
  else if ((v38 & 0x200) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v67 = sub_138C244(*(void *)(a1 + 248));
  v32 += v67 + ((9 * (__clz(v67 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x400) == 0)
  {
LABEL_45:
    if ((v38 & 0x800) == 0) {
      goto LABEL_46;
    }
    goto LABEL_111;
  }
LABEL_110:
  v32 += ((9 * (__clz(*(_DWORD *)(a1 + 256) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 0x800) == 0)
  {
LABEL_46:
    if ((v38 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_112;
  }
LABEL_111:
  v32 += ((9 * (__clz(*(_DWORD *)(a1 + 260) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 0x1000) == 0)
  {
LABEL_47:
    if ((v38 & 0x2000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_113;
  }
LABEL_112:
  v32 += ((9 * (__clz(*(_DWORD *)(a1 + 264) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 0x2000) == 0)
  {
LABEL_48:
    if ((v38 & 0x4000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_49;
  }
LABEL_113:
  int v68 = *(_DWORD *)(a1 + 268);
  uint64_t v69 = (9 * (__clz(v68 | 1) ^ 0x1F) + 73) >> 6;
  if (v68 >= 0) {
    uint64_t v70 = v69;
  }
  else {
    uint64_t v70 = 10;
  }
  v32 += v70 + 1;
  if ((v38 & 0x4000) != 0)
  {
LABEL_49:
    int v40 = *(_DWORD *)(a1 + 272);
    uint64_t v41 = (9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6;
    if (v40 >= 0) {
      uint64_t v42 = v41;
    }
    else {
      uint64_t v42 = 10;
    }
    v32 += v42 + 1;
  }
LABEL_53:
  if ((v38 & 0x8000) != 0) {
    v32 += 5;
  }
LABEL_55:
  if ((v38 & 0xFF0000) != 0)
  {
    if ((v38 & 0x10000) != 0)
    {
      int v43 = *(_DWORD *)(a1 + 280);
      uint64_t v44 = (9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6;
      if (v43 >= 0) {
        uint64_t v45 = v44;
      }
      else {
        uint64_t v45 = 10;
      }
      v32 += v45 + 2;
    }
    if ((v38 & 0x20000) != 0)
    {
      int v46 = *(_DWORD *)(a1 + 284);
      uint64_t v47 = (9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6;
      if (v46 >= 0) {
        uint64_t v48 = v47;
      }
      else {
        uint64_t v48 = 10;
      }
      v32 += v48 + 2;
    }
    uint64_t v49 = v32 + 3;
    if ((v38 & 0x40000) == 0) {
      uint64_t v49 = v32;
    }
    if ((v38 & 0x80000) != 0) {
      v49 += 3;
    }
    if ((v38 & 0x100000) != 0) {
      v49 += 3;
    }
    if ((v38 & 0x200000) != 0) {
      v49 += 3;
    }
    if ((v38 & 0x400000) != 0) {
      v49 += 3;
    }
    if ((v38 & 0x800000) != 0) {
      uint64_t v32 = v49 + 3;
    }
    else {
      uint64_t v32 = v49;
    }
  }
  if (!HIBYTE(v38)) {
    goto LABEL_89;
  }
  if ((v38 & 0x1000000) != 0) {
    v32 += 3;
  }
  if ((v38 & 0x2000000) != 0)
  {
    v32 += ((9 * (__clz(*(_DWORD *)(a1 + 296) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v38 & 0x4000000) == 0)
    {
LABEL_84:
      if ((v38 & 0x8000000) == 0) {
        goto LABEL_85;
      }
      goto LABEL_120;
    }
  }
  else if ((v38 & 0x4000000) == 0)
  {
    goto LABEL_84;
  }
  v32 += ((9 * (__clz(*(_DWORD *)(a1 + 300) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x8000000) == 0)
  {
LABEL_85:
    if ((v38 & 0x10000000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_121;
  }
LABEL_120:
  v32 += ((9 * (__clz(*(_DWORD *)(a1 + 304) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x10000000) == 0)
  {
LABEL_86:
    if ((v38 & 0x20000000) == 0) {
      goto LABEL_87;
    }
LABEL_122:
    int v71 = *(_DWORD *)(a1 + 312);
    uint64_t v72 = ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v71 >= 0) {
      uint64_t v73 = v72;
    }
    else {
      uint64_t v73 = 11;
    }
    v32 += v73;
    if ((v38 & 0x40000000) == 0)
    {
LABEL_88:
      if ((v38 & 0x80000000) == 0) {
        goto LABEL_89;
      }
      goto LABEL_130;
    }
    goto LABEL_126;
  }
LABEL_121:
  v32 += ((9 * (__clz(*(_DWORD *)(a1 + 308) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v38 & 0x20000000) != 0) {
    goto LABEL_122;
  }
LABEL_87:
  if ((v38 & 0x40000000) == 0) {
    goto LABEL_88;
  }
LABEL_126:
  int v74 = *(_DWORD *)(a1 + 316);
  uint64_t v75 = ((9 * (__clz(v74 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v74 >= 0) {
    uint64_t v76 = v75;
  }
  else {
    uint64_t v76 = 11;
  }
  v32 += v76;
  if ((v38 & 0x80000000) != 0)
  {
LABEL_130:
    int v77 = *(_DWORD *)(a1 + 320);
    uint64_t v78 = ((9 * (__clz(v77 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v77 >= 0) {
      uint64_t v79 = v78;
    }
    else {
      uint64_t v79 = 11;
    }
    v32 += v79;
  }
LABEL_89:
  if (*(unsigned char *)(a1 + 44))
  {
    int v50 = *(_DWORD *)(a1 + 324);
    uint64_t v51 = ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v50 >= 0) {
      uint64_t v52 = v51;
    }
    else {
      uint64_t v52 = 12;
    }
    v32 += v52;
  }
  uint64_t v53 = *(void *)(a1 + 8);
  if (v53)
  {
    unint64_t v80 = v53 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v80 + 31) < 0) {
      uint64_t v81 = *(void *)(v80 + 16);
    }
    else {
      uint64_t v81 = *(unsigned __int8 *)(v80 + 31);
    }
    v32 += v81;
  }
  *(_DWORD *)(a1 + 48) = v32;
  return v32;
}

void sub_138F9C8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 64);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 72) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 56, *(_DWORD *)(a2 + 64));
    sub_148D300((uint64_t *)(a1 + 56), v6, v5, v4, **(_DWORD **)(a1 + 72) - *(_DWORD *)(a1 + 64));
    int v7 = *(_DWORD *)(a1 + 64) + v4;
    *(_DWORD *)(a1 + 64) = v7;
    uint64_t v8 = *(int **)(a1 + 72);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 88);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 96) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_148CEF0((uint64_t *)(a1 + 80), v11, v10, v9, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v12 = *(_DWORD *)(a1 + 88) + v9;
    *(_DWORD *)(a1 + 88) = v12;
    unint64_t v13 = *(int **)(a1 + 96);
    if (*v13 < v12) {
      *unint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 112);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 120) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_148D38C((uint64_t *)(a1 + 104), v16, v15, v14, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v17 = *(_DWORD *)(a1 + 112) + v14;
    *(_DWORD *)(a1 + 112) = v17;
    uint64_t v18 = *(int **)(a1 + 120);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 136);
  if (v19)
  {
    unsigned int v20 = (uint64_t *)(*(void *)(a2 + 144) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_148D418((uint64_t *)(a1 + 128), v21, v20, v19, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v22 = *(_DWORD *)(a1 + 136) + v19;
    *(_DWORD *)(a1 + 136) = v22;
    uint64_t v23 = *(int **)(a1 + 144);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 160);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 168) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 152, *(_DWORD *)(a2 + 160));
    sub_148D4A4((uint64_t *)(a1 + 152), v26, v25, v24, **(_DWORD **)(a1 + 168) - *(_DWORD *)(a1 + 160));
    int v27 = *(_DWORD *)(a1 + 160) + v24;
    *(_DWORD *)(a1 + 160) = v27;
    uint64_t v28 = *(int **)(a1 + 168);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  unsigned int v29 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v29) {
    goto LABEL_80;
  }
  if (v29)
  {
    uint64_t v30 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (uint64_t *)*v32;
    }
    sub_1881DF4((std::string **)(a1 + 176), v30, v32);
    if ((v29 & 2) == 0)
    {
LABEL_19:
      if ((v29 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_32;
    }
  }
  else if ((v29 & 2) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v33 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v34 = *(void *)(a1 + 8);
  uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
  if (v34) {
    uint64_t v35 = (uint64_t *)*v35;
  }
  sub_1881DF4((std::string **)(a1 + 184), v33, v35);
  if ((v29 & 4) == 0)
  {
LABEL_20:
    if ((v29 & 8) == 0) {
      goto LABEL_21;
    }
    goto LABEL_40;
  }
LABEL_32:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v36 = *(void *)(a1 + 192);
  if (!v36)
  {
    uint64_t v37 = *(void *)(a1 + 8);
    unsigned int v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
    if (v37) {
      unsigned int v38 = (void *)*v38;
    }
    uint64_t v36 = sub_15C1DB0((uint64_t)v38);
    *(void *)(a1 + 192) = v36;
  }
  if (*(void *)(a2 + 192)) {
    uint64_t v39 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    uint64_t v39 = &off_253F370;
  }
  sub_15B5DD4(v36, (uint64_t)v39);
  if ((v29 & 8) == 0)
  {
LABEL_21:
    if ((v29 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_48;
  }
LABEL_40:
  *(_DWORD *)(a1 + 40) |= 8u;
  int v40 = *(std::string **)(a1 + 200);
  if (!v40)
  {
    uint64_t v41 = *(void *)(a1 + 8);
    uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
    if (v41) {
      uint64_t v42 = (void *)*v42;
    }
    sub_13D62B8((uint64_t)v42);
    *(void *)(a1 + 200) = v40;
  }
  if (*(void *)(a2 + 200)) {
    int v43 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    int v43 = &off_25344D0;
  }
  sub_136D0B8(v40, (uint64_t)v43);
  if ((v29 & 0x10) == 0)
  {
LABEL_22:
    if ((v29 & 0x20) == 0) {
      goto LABEL_23;
    }
LABEL_56:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v48 = *(std::string **)(a1 + 216);
    if (!v48)
    {
      uint64_t v49 = *(void *)(a1 + 8);
      int v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
      if (v49) {
        int v50 = (void *)*v50;
      }
      uint64_t v48 = (std::string *)sub_13D8160((uint64_t)v50);
      *(void *)(a1 + 216) = v48;
    }
    if (*(void *)(a2 + 216)) {
      uint64_t v51 = *(uint64_t (****)())(a2 + 216);
    }
    else {
      uint64_t v51 = &off_2535208;
    }
    sub_117EF04(v48, (uint64_t)v51);
    if ((v29 & 0x40) == 0)
    {
LABEL_24:
      if ((v29 & 0x80) == 0) {
        goto LABEL_80;
      }
      goto LABEL_72;
    }
    goto LABEL_64;
  }
LABEL_48:
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v44 = *(void *)(a1 + 208);
  if (!v44)
  {
    uint64_t v45 = *(void *)(a1 + 8);
    int v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
    if (v45) {
      int v46 = (void *)*v46;
    }
    uint64_t v44 = sub_13D7014((uint64_t)v46);
    *(void *)(a1 + 208) = v44;
  }
  if (*(void *)(a2 + 208)) {
    uint64_t v47 = *(uint64_t (****)())(a2 + 208);
  }
  else {
    uint64_t v47 = &off_2534B58;
  }
  sub_137DE44(v44, (uint64_t)v47);
  if ((v29 & 0x20) != 0) {
    goto LABEL_56;
  }
LABEL_23:
  if ((v29 & 0x40) == 0) {
    goto LABEL_24;
  }
LABEL_64:
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v52 = *(std::string **)(a1 + 224);
  if (!v52)
  {
    uint64_t v53 = *(void *)(a1 + 8);
    unint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
    if (v53) {
      unint64_t v54 = (void *)*v54;
    }
    uint64_t v52 = (std::string *)sub_13D7C50((uint64_t)v54);
    *(void *)(a1 + 224) = v52;
  }
  if (*(void *)(a2 + 224)) {
    unint64_t v55 = *(uint64_t (****)())(a2 + 224);
  }
  else {
    unint64_t v55 = &off_2534F88;
  }
  sub_138B408(v52, (uint64_t)v55);
  if ((v29 & 0x80) != 0)
  {
LABEL_72:
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v56 = *(std::string **)(a1 + 232);
    if (!v56)
    {
      uint64_t v57 = *(void *)(a1 + 8);
      unint64_t v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
      if (v57) {
        unint64_t v58 = (void *)*v58;
      }
      uint64_t v56 = (std::string *)sub_13D7CCC((uint64_t)v58);
      *(void *)(a1 + 232) = v56;
    }
    if (*(void *)(a2 + 232)) {
      uint64_t v59 = *(uint64_t (****)())(a2 + 232);
    }
    else {
      uint64_t v59 = &off_2534FB0;
    }
    sub_138BB10(v56, (uint64_t)v59);
  }
LABEL_80:
  if ((v29 & 0xFF00) == 0) {
    goto LABEL_91;
  }
  if ((v29 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v62 = *(void *)(a1 + 240);
    if (!v62)
    {
      uint64_t v63 = *(void *)(a1 + 8);
      uint64_t v64 = (void *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
      if (v63) {
        uint64_t v64 = (void *)*v64;
      }
      uint64_t v62 = sub_13DAB08((uint64_t)v64);
      *(void *)(a1 + 240) = v62;
    }
    if (*(void *)(a2 + 240)) {
      uint64_t v65 = *(uint64_t (****)())(a2 + 240);
    }
    else {
      uint64_t v65 = &off_2536850;
    }
    sub_136AA7C(v62, (uint64_t)v65);
    if ((v29 & 0x200) == 0)
    {
LABEL_83:
      if ((v29 & 0x400) == 0) {
        goto LABEL_84;
      }
      goto LABEL_134;
    }
  }
  else if ((v29 & 0x200) == 0)
  {
    goto LABEL_83;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v66 = *(void **)(a1 + 248);
  if (!v66)
  {
    uint64_t v67 = *(void *)(a1 + 8);
    int v68 = (void *)(v67 & 0xFFFFFFFFFFFFFFFCLL);
    if (v67) {
      int v68 = (void *)*v68;
    }
    uint64_t v66 = sub_13D7D4C((uint64_t)v68);
    *(void *)(a1 + 248) = v66;
  }
  if (*(void *)(a2 + 248)) {
    uint64_t v69 = *(uint64_t (****)())(a2 + 248);
  }
  else {
    uint64_t v69 = &off_2534FE0;
  }
  sub_138C38C((uint64_t)v66, (uint64_t)v69);
  if ((v29 & 0x400) == 0)
  {
LABEL_84:
    if ((v29 & 0x800) == 0) {
      goto LABEL_85;
    }
    goto LABEL_135;
  }
LABEL_134:
  *(_DWORD *)(a1 + 256) = *(_DWORD *)(a2 + 256);
  if ((v29 & 0x800) == 0)
  {
LABEL_85:
    if ((v29 & 0x1000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_136;
  }
LABEL_135:
  *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
  if ((v29 & 0x1000) == 0)
  {
LABEL_86:
    if ((v29 & 0x2000) == 0) {
      goto LABEL_87;
    }
    goto LABEL_137;
  }
LABEL_136:
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  if ((v29 & 0x2000) == 0)
  {
LABEL_87:
    if ((v29 & 0x4000) == 0) {
      goto LABEL_88;
    }
LABEL_138:
    *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
    if ((v29 & 0x8000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_89;
  }
LABEL_137:
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  if ((v29 & 0x4000) != 0) {
    goto LABEL_138;
  }
LABEL_88:
  if ((v29 & 0x8000) != 0) {
LABEL_89:
  }
    *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
LABEL_90:
  *(_DWORD *)(a1 + 40) |= v29;
LABEL_91:
  if ((v29 & 0xFF0000) == 0) {
    goto LABEL_102;
  }
  if ((v29 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
    if ((v29 & 0x20000) == 0)
    {
LABEL_94:
      if ((v29 & 0x40000) == 0) {
        goto LABEL_95;
      }
      goto LABEL_142;
    }
  }
  else if ((v29 & 0x20000) == 0)
  {
    goto LABEL_94;
  }
  *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
  if ((v29 & 0x40000) == 0)
  {
LABEL_95:
    if ((v29 & 0x80000) == 0) {
      goto LABEL_96;
    }
    goto LABEL_143;
  }
LABEL_142:
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  if ((v29 & 0x80000) == 0)
  {
LABEL_96:
    if ((v29 & 0x100000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_144;
  }
LABEL_143:
  *(unsigned char *)(a1 + 289) = *(unsigned char *)(a2 + 289);
  if ((v29 & 0x100000) == 0)
  {
LABEL_97:
    if ((v29 & 0x200000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_145;
  }
LABEL_144:
  *(unsigned char *)(a1 + 290) = *(unsigned char *)(a2 + 290);
  if ((v29 & 0x200000) == 0)
  {
LABEL_98:
    if ((v29 & 0x400000) == 0) {
      goto LABEL_99;
    }
LABEL_146:
    *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
    if ((v29 & 0x800000) == 0) {
      goto LABEL_101;
    }
    goto LABEL_100;
  }
LABEL_145:
  *(unsigned char *)(a1 + 291) = *(unsigned char *)(a2 + 291);
  if ((v29 & 0x400000) != 0) {
    goto LABEL_146;
  }
LABEL_99:
  if ((v29 & 0x800000) != 0) {
LABEL_100:
  }
    *(unsigned char *)(a1 + 293) = *(unsigned char *)(a2 + 293);
LABEL_101:
  *(_DWORD *)(a1 + 40) |= v29;
LABEL_102:
  if (!HIBYTE(v29)) {
    goto LABEL_112;
  }
  if ((v29 & 0x1000000) != 0)
  {
    *(unsigned char *)(a1 + 294) = *(unsigned char *)(a2 + 294);
    if ((v29 & 0x2000000) == 0)
    {
LABEL_105:
      if ((v29 & 0x4000000) == 0) {
        goto LABEL_106;
      }
      goto LABEL_150;
    }
  }
  else if ((v29 & 0x2000000) == 0)
  {
    goto LABEL_105;
  }
  *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
  if ((v29 & 0x4000000) == 0)
  {
LABEL_106:
    if ((v29 & 0x8000000) == 0) {
      goto LABEL_107;
    }
    goto LABEL_151;
  }
LABEL_150:
  *(_DWORD *)(a1 + 300) = *(_DWORD *)(a2 + 300);
  if ((v29 & 0x8000000) == 0)
  {
LABEL_107:
    if ((v29 & 0x10000000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_152;
  }
LABEL_151:
  *(_DWORD *)(a1 + 304) = *(_DWORD *)(a2 + 304);
  if ((v29 & 0x10000000) == 0)
  {
LABEL_108:
    if ((v29 & 0x20000000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_153;
  }
LABEL_152:
  *(_DWORD *)(a1 + 308) = *(_DWORD *)(a2 + 308);
  if ((v29 & 0x20000000) == 0)
  {
LABEL_109:
    if ((v29 & 0x40000000) == 0) {
      goto LABEL_110;
    }
LABEL_154:
    *(_DWORD *)(a1 + 316) = *(_DWORD *)(a2 + 316);
    if ((v29 & 0x80000000) == 0) {
      goto LABEL_111;
    }
LABEL_155:
    *(_DWORD *)(a1 + 320) = *(_DWORD *)(a2 + 320);
    goto LABEL_111;
  }
LABEL_153:
  *(_DWORD *)(a1 + 312) = *(_DWORD *)(a2 + 312);
  if ((v29 & 0x40000000) != 0) {
    goto LABEL_154;
  }
LABEL_110:
  if ((v29 & 0x80000000) != 0) {
    goto LABEL_155;
  }
LABEL_111:
  *(_DWORD *)(a1 + 40) |= v29;
LABEL_112:
  if (*(unsigned char *)(a2 + 44))
  {
    int v60 = *(_DWORD *)(a2 + 324);
    *(_DWORD *)(a1 + 44) |= 1u;
    *(_DWORD *)(a1 + 324) = v60;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v61 = *(void *)(a2 + 8);
  if (v61)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v61 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13900E8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 64);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      BOOL v5 = sub_15B511C(*(void *)(*(void *)(a1 + 72) + 8 * v3));
      uint64_t v3 = v4;
      if (!v5) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 112);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_15B5F68(*(void *)(*(void *)(a1 + 120) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 136);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_1381680(*(void *)(*(void *)(a1 + 144) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_13349CC(a1 + 152);
    if (result)
    {
      int v12 = *(_DWORD *)(a1 + 40);
      if ((v12 & 4) != 0)
      {
        uint64_t result = sub_15B5F68(*(void *)(a1 + 192));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 40);
      }
      if ((v12 & 0x10) != 0)
      {
        uint64_t result = sub_137E140(*(void *)(a1 + 208));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 40);
      }
      if ((v12 & 0x100) != 0)
      {
        uint64_t result = sub_136AE2C(*(void *)(a1 + 240));
        if (!result) {
          return result;
        }
        int v12 = *(_DWORD *)(a1 + 40);
      }
      if ((v12 & 0x200) == 0) {
        return 1;
      }
      uint64_t result = sub_138C4EC(*(void *)(a1 + 248));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

void *sub_13901F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Step");
}

void *sub_1390200(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1390274(void *a1)
{
  sub_1390200(a1);

  operator delete();
}

uint64_t sub_13902AC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13902D0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_13904C0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1390664(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1390708()
{
  return 1;
}

void *sub_1390710@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficColorInfo.TrafficColorAndOffset");
}

void *sub_1390720(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148BAC8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13907A0(void *a1)
{
  sub_1390720(a1);

  operator delete();
}

uint64_t sub_13907D8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13902AC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1390854(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_13D7E30(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_13909F4(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_13909F4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13902D0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1390A84(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_13904C0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1390BC8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1390664(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1390C78(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_148D520((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1390D48()
{
  return 1;
}

void *sub_1390D50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficColorInfo");
}

void *sub_1390D60(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1390DD4(void *a1)
{
  sub_1390D60(a1);

  operator delete();
}

uint64_t sub_1390E0C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1390E30(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1391020(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13911C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1391268()
{
  return 1;
}

void *sub_1391270@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.IncidentOnRouteInfo.IndexAndOffset");
}

void *sub_1391280(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148BB48(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1391300(void *a1)
{
  sub_1391280(a1);

  operator delete();
}

uint64_t sub_1391338(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1390E0C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  unint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_13913B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_13D7F48(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_1391554(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unsigned int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1391554(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1390E30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13915E4(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1391020(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1391728(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13911C4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_13917D8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_148D59C((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13918A8()
{
  return 1;
}

void *sub_13918B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.IncidentOnRouteInfo");
}

uint64_t sub_13918C0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24AE388;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  return a1;
}

void sub_1391938(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_139196C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13919F8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13919F8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 56);
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2535160)
  {
    uint64_t v5 = *(void **)(a1 + 64);
    if (v5)
    {
      sub_1393AC0(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_1396498(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 80);
    if (result)
    {
      sub_1396498(result);
      operator delete();
    }
  }
  return result;
}

void sub_1391AD0(void *a1)
{
  sub_139196C(a1);

  operator delete();
}

uint64_t sub_1391B08(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_16;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_20:
    uint64_t result = sub_138CB30(*(void *)(a1 + 64));
    if ((v3 & 8) == 0)
    {
LABEL_6:
      if ((v3 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_21;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_20;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_21:
  uint64_t result = sub_1391C04(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_1391C04(*(void *)(a1 + 80));
LABEL_8:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(void *)(v4 + 80) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_1391C04(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (!(_BYTE)v2) {
    goto LABEL_11;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_23;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_23;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_24;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_23:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = sub_1369BB4(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t result = sub_1369F48(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_27:
    uint64_t result = sub_1395B8C(*(void *)(v1 + 64));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_26:
  uint64_t result = sub_1395138(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_28:
  uint64_t result = sub_15B8FB8(*(void *)(v1 + 72));
  if ((v2 & 0x80) != 0) {
LABEL_10:
  }
    uint64_t result = sub_1396114(*(void *)(v1 + 80));
LABEL_11:
  if ((v2 & 0x100) != 0) {
    uint64_t result = sub_1369E6C(*(void *)(v1 + 88));
  }
  if ((v2 & 0x600) != 0)
  {
    *(_DWORD *)(v1 + 104) = 0;
    *(void *)(v1 + 96) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1391D1C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v32 + 2);
      }
    }
    *(void *)uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 48);
        goto LABEL_35;
      case 2u:
        if (v9 != 18) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void **)(a1 + 64);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_13D8160((uint64_t)v16);
          *(void *)(a1 + 64) = v15;
          uint64_t v8 = *(unsigned __int8 **)v32;
        }
        uint64_t v17 = (uint64_t)sub_138DF30(a3, (uint64_t)v15, v8);
        goto LABEL_36;
      case 3u:
        if (v9 != 26) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v18 = *(void *)(a1 + 72);
        if (v18) {
          goto LABEL_30;
        }
        int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v19 = (void *)*v19;
        }
        sub_13D8414((uint64_t)v19);
        uint64_t v18 = v20;
        *(void *)(a1 + 72) = v20;
        goto LABEL_29;
      case 4u:
        if (v9 != 34) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 80);
        if (v18) {
          goto LABEL_30;
        }
        uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v21 = (void *)*v21;
        }
        sub_13D8414((uint64_t)v21);
        uint64_t v18 = v22;
        *(void *)(a1 + 80) = v22;
LABEL_29:
        uint64_t v8 = *(unsigned __int8 **)v32;
LABEL_30:
        uint64_t v17 = sub_1392098(a3, v18, v8);
        goto LABEL_36;
      case 5u:
        if (v9 != 42) {
          goto LABEL_44;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v23 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        int v14 = (void *)(a1 + 56);
LABEL_35:
        int v24 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v17 = (uint64_t)sub_188C244(v24, *(char **)v32, (uint64_t)a3);
        goto LABEL_36;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x20u;
        uint64_t v25 = (char *)(v8 + 1);
        uint64_t v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v30 = sub_188C138((uint64_t)v8, v26);
          *(void *)uint64_t v32 = v30;
          *(void *)(a1 + 88) = v31;
          if (!v30) {
            goto LABEL_58;
          }
        }
        else
        {
          uint64_t v25 = (char *)(v8 + 2);
LABEL_43:
          *(void *)uint64_t v32 = v25;
          *(void *)(a1 + 88) = v26;
        }
        goto LABEL_37;
      default:
LABEL_44:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (v9 - 80008 > 0x31F)
          {
            if (*v7)
            {
              unsigned int v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unsigned int v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v32;
            }
            uint64_t v17 = (uint64_t)sub_1885AC0(v9, v29, (char *)v8, a3);
          }
          else
          {
            uint64_t v17 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2535160, (uint64_t *)(a1 + 8), a3);
          }
LABEL_36:
          *(void *)uint64_t v32 = v17;
          if (!v17) {
            goto LABEL_58;
          }
LABEL_37:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_58:
        }
          *(void *)uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v32;
    }
  }
}

uint64_t sub_1392098(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13966B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1392128(uint64_t a1, char *a2, unint64_t *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  char *v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  char v4 = sub_1393D5C(v7, (unint64_t)v9, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_15:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 72);
  char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_1396D20(v10, (unint64_t)v12, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 80);
  char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1396D20(v13, (unint64_t)v15, a3);
  if ((v6 & 2) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }
LABEL_27:
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v16 = *(void *)(a1 + 88);
  char *v4 = 48;
  v4[1] = v16;
  if (v16 > 0x7F)
  {
    v4[1] = v16 | 0x80;
    unint64_t v17 = v16 >> 7;
    v4[2] = v16 >> 7;
    v4 += 3;
    if (v16 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v18 = v17 >> 14;
        v17 >>= 7;
        *v4++ = v17;
      }
      while (v18);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_34:
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 10001, 10101, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1392404(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v4)
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v3 = v2 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
  uint64_t v12 = *(void *)(v10 + 8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v12 = v11;
  }
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_18:
    uint64_t v14 = sub_1397238(*(void *)(a1 + 72));
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_17:
  uint64_t v13 = sub_1393F00(*(void *)(a1 + 64));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) != 0) {
    goto LABEL_18;
  }
LABEL_6:
  if ((v4 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_19:
  uint64_t v15 = sub_1397238(*(void *)(a1 + 80));
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x20) != 0) {
LABEL_8:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v16 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_13925CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v6 = (std::string **)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_12;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v9 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 56), v9, v11);
    if ((v4 & 4) == 0)
    {
LABEL_20:
      if ((v4 & 8) != 0)
      {
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v17 = *(void *)(a1 + 72);
        if (!v17)
        {
          uint64_t v18 = *(void *)(a1 + 8);
          uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
          if (v18) {
            uint64_t v19 = (void *)*v19;
          }
          sub_13D8414((uint64_t)v19);
          *(void *)(a1 + 72) = v17;
        }
        if (*(void *)(a2 + 72)) {
          uint64_t v20 = *(uint64_t (****)())(a2 + 72);
        }
        else {
          uint64_t v20 = &off_25352D0;
        }
        sub_13927B8(v17, (uint64_t)v20);
        if ((v4 & 0x10) == 0)
        {
LABEL_22:
          if ((v4 & 0x20) == 0)
          {
LABEL_24:
            *(_DWORD *)(a1 + 40) |= v4;
            goto LABEL_25;
          }
LABEL_23:
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          goto LABEL_24;
        }
      }
      else if ((v4 & 0x10) == 0)
      {
        goto LABEL_22;
      }
      *(_DWORD *)(a1 + 40) |= 0x10u;
      uint64_t v21 = *(void *)(a1 + 80);
      if (!v21)
      {
        uint64_t v22 = *(void *)(a1 + 8);
        uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          uint64_t v23 = (void *)*v23;
        }
        sub_13D8414((uint64_t)v23);
        *(void *)(a1 + 80) = v21;
      }
      if (*(void *)(a2 + 80)) {
        uint64_t v24 = *(uint64_t (****)())(a2 + 80);
      }
      else {
        uint64_t v24 = &off_25352D0;
      }
      sub_13927B8(v21, (uint64_t)v24);
      if ((v4 & 0x20) == 0) {
        goto LABEL_24;
      }
      goto LABEL_23;
    }
LABEL_12:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v12 = *(std::string **)(a1 + 64);
    if (!v12)
    {
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v12 = (std::string *)sub_13D8160((uint64_t)v14);
      *(void *)(a1 + 64) = v12;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v15 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v15 = &off_2535208;
    }
    sub_117EF04(v12, (uint64_t)v15);
    goto LABEL_20;
  }
LABEL_25:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13927B8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_70;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    int v6 = (std::string **)(a1 + 24);
    uint64_t v7 = *(void *)(a1 + 8);
    uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    uint64_t v9 = sub_15C1918((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    uint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    uint64_t v12 = &off_253F1A0;
  }
  sub_15B0E24(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_22:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void **)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_1478C60((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2539400;
  }
  sub_136AC4C((uint64_t)v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_38;
  }
LABEL_30:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v17 = *(void *)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = sub_13DAB08((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    uint64_t v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    uint64_t v20 = &off_2536850;
  }
  sub_136AA7C(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_38:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v21 = *(std::string **)(a1 + 56);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (void *)*v23;
    }
    uint64_t v21 = (std::string *)sub_13D82F4((uint64_t)v23);
    *(void *)(a1 + 56) = v21;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v24 = &off_2535270;
  }
  sub_13958A0(v21, (uint64_t)v24);
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_54;
  }
LABEL_46:
  *(_DWORD *)(a1 + 16) |= 0x20u;
  uint64_t v25 = *(void *)(a1 + 64);
  if (!v25)
  {
    uint64_t v26 = *(void *)(a1 + 8);
    int v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      int v27 = (void *)*v27;
    }
    uint64_t v25 = sub_13D8374((uint64_t)v27);
    *(void *)(a1 + 64) = v25;
  }
  if (*(void *)(a2 + 64)) {
    BOOL v28 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    BOOL v28 = &off_25352A0;
  }
  sub_139602C(v25, (uint64_t)v28);
  if ((v4 & 0x40) == 0)
  {
LABEL_9:
    if ((v4 & 0x80) == 0) {
      goto LABEL_70;
    }
    goto LABEL_62;
  }
LABEL_54:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  unsigned int v29 = *(std::string **)(a1 + 72);
  if (!v29)
  {
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (void *)*v31;
    }
    unsigned int v29 = (std::string *)sub_15C1EF4((uint64_t)v31);
    *(void *)(a1 + 72) = v29;
  }
  if (*(void *)(a2 + 72)) {
    uint64_t v32 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    uint64_t v32 = &off_253F4C8;
  }
  sub_15B9698(v29, (uint64_t)v32);
  if ((v4 & 0x80) != 0)
  {
LABEL_62:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v33 = *(std::string **)(a1 + 80);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = (std::string *)sub_1479600((uint64_t)v35);
      *(void *)(a1 + 80) = v33;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v36 = &off_2539AC8;
    }
    sub_1113E40(v33, (uint64_t)v36);
  }
LABEL_70:
  if ((v4 & 0x700) == 0) {
    goto LABEL_76;
  }
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 0x200) == 0) {
      goto LABEL_73;
    }
LABEL_88:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    if ((v4 & 0x400) == 0) {
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  *(_DWORD *)(a1 + 16) |= 0x100u;
  uint64_t v38 = *(void *)(a1 + 88);
  if (!v38)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    int v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      int v40 = (void *)*v40;
    }
    sub_13D6A1C((uint64_t)v40);
    *(void *)(a1 + 88) = v38;
  }
  if (*(void *)(a2 + 88)) {
    uint64_t v41 = *(uint64_t (****)())(a2 + 88);
  }
  else {
    uint64_t v41 = &off_2534750;
  }
  sub_136A7DC(v38, (uint64_t)v41);
  if ((v4 & 0x200) != 0) {
    goto LABEL_88;
  }
LABEL_73:
  if ((v4 & 0x400) != 0) {
LABEL_74:
  }
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
LABEL_75:
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_76:
  uint64_t v37 = *(void *)(a2 + 8);
  if (v37)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v37 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1392B10(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_1392B68(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_1392B68(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1392B68(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_18856CC(*(void *)(a1 + 40) + 16);
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t result = sub_15B9824(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x100) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1392BF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.OriginalWaypointRoute.OriginalRouteLeg");
}

uint64_t sub_1392C04(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24AE408;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D618(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v12 = *(_OWORD *)(a2 + 48);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = v12;
  return a1;
}

void sub_1392D00(_Unwind_Exception *a1)
{
  sub_148BBC8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1392D48(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148BBC8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1392DC8(void *a1)
{
  sub_1392D48(a1);

  operator delete();
}

uint64_t sub_1392E00(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1391B08(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 0x1F) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
    *(_DWORD *)(v1 + 64) = 1;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1392E98(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v45 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v45 + 1;
    unsigned int v9 = *v45;
    if (*v45 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v45, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v45 + 2;
      }
    }
    uint64_t v45 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_50;
        }
        v5 |= 1u;
        long long v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          long long v12 = v8 + 2;
LABEL_13:
          uint64_t v45 = v12;
          *(_DWORD *)(a1 + 48) = v13;
          goto LABEL_57;
        }
        uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v45 = v36;
        *(_DWORD *)(a1 + 48) = v37;
        if (v36) {
          goto LABEL_57;
        }
        goto LABEL_85;
      case 2u:
        if (v9 != 18) {
          goto LABEL_50;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v45 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_13D8060(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            uint64_t v16 = (unsigned __int8 *)v45;
          }
          uint64_t v15 = (char *)sub_1393320(a3, v19, v16);
          uint64_t v45 = v15;
          if (!v15) {
            goto LABEL_85;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_57;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_50;
        }
        uint64_t v21 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v24 = v22 + (v23 << 7);
        unint64_t v22 = (v24 - 128);
        if (v23 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, (v24 - 128));
          if (!v45) {
            goto LABEL_85;
          }
          unint64_t v22 = v38;
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v45 = v21;
        }
        if (v22 <= 0xD)
        {
          *(_DWORD *)(a1 + 16) |= 0x10u;
          *(_DWORD *)(a1 + 64) = v22;
          goto LABEL_57;
        }
        if (*v7) {
          int v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v44 = 3;
        goto LABEL_78;
      case 4u:
        if (v9 != 32) {
          goto LABEL_50;
        }
        uint64_t v25 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v26 = *v25;
        int v27 = v22 + (v26 << 7);
        unint64_t v22 = (v27 - 128);
        if (v26 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, (v27 - 128));
          if (!v45) {
            goto LABEL_85;
          }
          unint64_t v22 = v39;
        }
        else
        {
          uint64_t v25 = v8 + 2;
LABEL_35:
          uint64_t v45 = v25;
        }
        if (v22 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 2u;
          *(_DWORD *)(a1 + 52) = v22;
          goto LABEL_57;
        }
        if (*v7) {
          int v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v44 = 4;
        goto LABEL_78;
      case 5u:
        if (v9 != 40) {
          goto LABEL_50;
        }
        v5 |= 4u;
        BOOL v28 = v8 + 1;
        int v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v30 = *v28;
        int v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          int v40 = (char *)sub_188C0D0((uint64_t)v8, v29);
          uint64_t v45 = v40;
          *(_DWORD *)(a1 + 56) = v41;
          if (!v40) {
            goto LABEL_85;
          }
        }
        else
        {
          BOOL v28 = v8 + 2;
LABEL_42:
          uint64_t v45 = v28;
          *(_DWORD *)(a1 + 56) = v29;
        }
        goto LABEL_57;
      case 6u:
        if (v9 != 48) {
          goto LABEL_50;
        }
        uint64_t v31 = v8 + 1;
        unint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_47;
        }
        int v32 = *v31;
        int v33 = v22 + (v32 << 7);
        unint64_t v22 = (v33 - 128);
        if (v32 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, (v33 - 128));
          if (!v45) {
            goto LABEL_85;
          }
          unint64_t v22 = v42;
        }
        else
        {
          uint64_t v31 = v8 + 2;
LABEL_47:
          uint64_t v45 = v31;
        }
        if (v22 > 2)
        {
          if (*v7) {
            int v43 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v43 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v44 = 6;
LABEL_78:
          sub_188C020(v44, v22, v43);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 60) = v22;
        }
        goto LABEL_57;
      default:
LABEL_50:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (*v7)
          {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v45;
          }
          uint64_t v45 = (char *)sub_1885AC0(v9, v35, v8, a3);
          if (!v45) {
            goto LABEL_85;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v45, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_85:
        }
          uint64_t v45 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v45;
    }
  }
}

uint64_t sub_1393320(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1391D1C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13933B0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1392128(v12, v14, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 64);
    char *v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 52);
    char *v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 56);
    char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v24 = *(int *)(a1 + 60);
    char *v4 = 48;
    v4[1] = v24;
    if (v24 > 0x7F)
    {
      v4[1] = v24 | 0x80;
      unint64_t v25 = v24 >> 7;
      v4[2] = v24 >> 7;
      v4 += 3;
      if (v24 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v26 = v25 >> 14;
          v25 >>= 7;
          *v4++ = v25;
        }
        while (v26);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    int v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    int v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_1393764(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1392404(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0x1F) == 0) {
    goto LABEL_30;
  }
  if (v8)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  int v9 = *(_DWORD *)(a1 + 52);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_22;
  }
LABEL_21:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_26;
  }
LABEL_22:
  int v11 = *(_DWORD *)(a1 + 60);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v12;
  if ((v8 & 0x10) != 0)
  {
LABEL_26:
    int v13 = *(_DWORD *)(a1 + 64);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v14;
  }
LABEL_30:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1393920(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D618((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_18;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 52) = *(_DWORD *)(a2 + 52);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_19;
    }
LABEL_18:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      goto LABEL_11;
    }
LABEL_19:
    *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1393A58(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_1392B10(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_1393AB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.OriginalWaypointRoute");
}

void *sub_1393AC0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1393B34(void *a1)
{
  sub_1393AC0(a1);

  operator delete();
}

char *sub_1393B6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    unsigned int v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    unsigned int v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_1393D5C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1393F00(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1393FA4()
{
  return 1;
}

void *sub_1393FAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.EVStateInfo");
}

void *sub_1393FBC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1394030(void *a1)
{
  sub_1393FBC(a1);

  operator delete();
}

uint64_t sub_1394068(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_139408C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v26 + 2;
      }
    }
    unint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v26 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_32;
    }
    int v22 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unint64_t v26 = v22;
    *(_DWORD *)(a1 + 28) = v23;
    if (!v22) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    uint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      unint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_45;
      }
      unint64_t v19 = v24;
    }
    else
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v26 = v18;
    }
    if (v19 > 0xA)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v26;
    }
    unint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  unint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

BOOL sub_13942C0(unsigned int a1)
{
  return a1 < 0xB;
}

unsigned char *sub_13942CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1394470(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_9;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  int v3 = *(_DWORD *)(a1 + 24);
  if ((v3 & 0x80000000) == 0)
  {
    uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  uint64_t v2 = 11;
  if ((v1 & 2) != 0) {
LABEL_8:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1394524()
{
  return 1;
}

void *sub_139452C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ChargerPlug");
}

uint64_t sub_139453C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  int v5 = (std::string *)(a1 + 16);
  *(void *)a1 = off_24AE588;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_148D6A4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unsigned int v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_148D6A4((std::string *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    unint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_139468C(_Unwind_Exception *a1)
{
  sub_148BC48(v4);
  sub_148BC48(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13946E8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148BC48(a1 + 5);
  sub_148BC48(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1394774(void *a1)
{
  sub_13946E8(a1);

  operator delete();
}

uint64_t sub_13947AC(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1394068(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1394068(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  unint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_1394850(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      unint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v14 = v7 - 1;
          while (1)
          {
            unint64_t v15 = (unsigned __int8 *)(v14 + 1);
            unint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              unint64_t v19 = sub_13D81D8(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, (uint64_t)v19);
              unint64_t v15 = (unsigned __int8 *)v26;
            }
            int v14 = sub_1394A98(a3, v18, v15);
            unint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        int v20 = v7 - 1;
        while (1)
        {
          int v21 = (unsigned __int8 *)(v20 + 1);
          unint64_t v26 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            unint64_t v25 = sub_13D81D8(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, (uint64_t)v25);
            int v21 = (unsigned __int8 *)v26;
          }
          int v20 = sub_1394A98(a3, v24, v21);
          unint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      unint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_1394A98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139408C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1394B28(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_13942CC(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        unint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        unint64_t v15 = __dst + 2;
      }
      __dst = sub_13942CC(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1394CF0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1394470(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_1394470(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

std::string *sub_1394DF0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_148D6A4((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4((uint64_t)&v3[1].__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 48));
    uint64_t result = sub_148D6A4((std::string *)((char *)v3 + 40), v11, v10, v9, *(_DWORD *)v3[2].__r_.__value_.__l.__size_ - LODWORD(v3[2].__r_.__value_.__l.__data_));
    int v12 = LODWORD(v3[2].__r_.__value_.__l.__data_) + v9;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v12;
    uint64_t v13 = (int *)v3[2].__r_.__value_.__l.__size_;
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1394F24()
{
  return 1;
}

void *sub_1394F2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ChargerPlugsInfo");
}

uint64_t sub_1394F3C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AE608;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  if (*(unsigned char *)(a2 + 16)) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  uint64_t v5 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(void *)(a1 + 32) = v5;
  return a1;
}

void sub_1394FF8()
{
}

uint64_t sub_1395048(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2535270)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_13946E8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1395100(uint64_t a1)
{
  sub_1395048(a1);

  operator delete();
}

uint64_t sub_1395138(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_13947AC(*(void *)(result + 24));
  }
  if ((v2 & 0xE) != 0)
  {
    *(_DWORD *)(v1 + 40) = 0;
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13951A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    uint64_t v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_30;
        }
        v5 |= 2u;
        int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          int v12 = v8 + 2;
LABEL_13:
          uint64_t v32 = v12;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_38;
        }
        unint64_t v26 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v32 = v26;
        *(_DWORD *)(a1 + 32) = v27;
        if (v26) {
          goto LABEL_38;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_30;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          BOOL v28 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v32 = v28;
          *(_DWORD *)(a1 + 36) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v32 = v15;
          *(_DWORD *)(a1 + 36) = v16;
        }
        goto LABEL_38;
      case 3u:
        if (v9 != 24) {
          goto LABEL_30;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v30 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v32 = v30;
          *(_DWORD *)(a1 + 40) = v31;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v32 = v18;
          *(_DWORD *)(a1 + 40) = v19;
        }
        goto LABEL_38;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v21 = *(void *)(a1 + 24);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          uint64_t v21 = sub_13D8250((uint64_t)v22);
          *(void *)(a1 + 24) = v21;
          uint64_t v8 = v32;
        }
        uint64_t v23 = sub_1395470(a3, v21, (unsigned __int8 *)v8);
        goto LABEL_37;
      default:
LABEL_30:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v32;
          }
          uint64_t v23 = (char *)sub_1885AC0(v9, v25, v8, a3);
LABEL_37:
          uint64_t v32 = v23;
          if (!v23) {
            goto LABEL_49;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          uint64_t v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v32;
    }
  }
}

char *sub_1395470(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1394850(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1395500(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 24);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 64);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_1394B28(v16, v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_1395784(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1394CF0(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  result += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0) {
LABEL_10:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13958A0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unsigned int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unsigned int v8 = (void *)*v8;
        }
        data = (std::string *)sub_13D8250((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v9 = &off_2535228;
      }
      uint64_t result = sub_1394DF0(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_21:
    HIDWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1395998()
{
  return 1;
}

void *sub_13959A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.EVChargingInfo");
}

uint64_t sub_13959B0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24AE688;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unsigned int v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_148D720(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unsigned int v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1395A90(_Unwind_Exception *a1)
{
  sub_148BCC8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1395AD4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148BCC8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1395B54(void *a1)
{
  sub_1395AD4(a1);

  operator delete();
}

uint64_t sub_1395B8C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_147CB3C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_1395C08(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        unsigned int v12 = v6 - 1;
        while (1)
        {
          unsigned int v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          unsigned int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_1481E2C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unsigned int v13 = (unsigned __int8 *)v19;
          }
          unsigned int v12 = sub_1395DA8(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1395DA8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_147CBA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1395E38(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_147CE48(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unsigned int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unsigned int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1395F7C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_147D01C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_139602C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_148D720((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13960FC()
{
  return 1;
}

void *sub_1396104@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ARInfo");
}

uint64_t sub_1396114(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1396138(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24AE708;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v6 & 0x80) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v6 & 0x100) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  uint64_t v8 = *(void *)(a2 + 96);
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  *(void *)(a1 + 96) = v8;
  return a1;
}

void sub_13963B4()
{
}

void *sub_1396498(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_139651C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_139651C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 24);
  uint64_t result = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25352D0)
  {
    if (*(void *)(a1 + 32))
    {
      sub_15B0994();
      operator delete();
    }
    int v4 = *(void **)(a1 + 40);
    if (v4)
    {
      sub_145FD84(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_13D2774(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1395048(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 64);
    if (v7)
    {
      sub_1395AD4(v7);
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_15B8F7C();
      operator delete();
    }
    uint64_t v8 = *(void **)(a1 + 80);
    if (v8)
    {
      sub_14727D4(v8);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 88);
    if (result)
    {
      sub_1374224((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_1396680(void *a1)
{
  sub_1396498(a1);

  operator delete();
}

uint64_t sub_13966B8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v46 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v46 + 1);
    unsigned int v9 = **(unsigned char **)v46;
    if ((char)**(unsigned char **)v46 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v46, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v46 + 2);
      }
    }
    *(void *)int v46 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_73;
        }
        v5 |= 0x200u;
        unsigned int v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)int v46 = v12;
          *(void *)(a1 + 96) = v13;
          goto LABEL_81;
        }
        uint64_t v42 = sub_188C138((uint64_t)v8, v13);
        *(void *)int v46 = v42;
        *(void *)(a1 + 96) = v43;
        if (v42) {
          goto LABEL_81;
        }
        goto LABEL_94;
      case 2u:
        if (v9 != 18) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v18 = (uint64_t)sub_188C244(v17, *(char **)v46, (uint64_t)a3);
        goto LABEL_80;
      case 3u:
        if (v9 != 26) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v19 = *(void *)(a1 + 32);
        if (!v19)
        {
          int v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 32) = v19;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = (uint64_t)sub_1198F14(a3, v19, v8);
        goto LABEL_80;
      case 4u:
        if (v9 != 34) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unint64_t v21 = *(void **)(a1 + 40);
        if (!v21)
        {
          int v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v22 = (void *)*v22;
          }
          unint64_t v21 = sub_1478C60((uint64_t)v22);
          *(void *)(a1 + 40) = v21;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = (uint64_t)sub_129760C(a3, (uint64_t)v21, v8);
        goto LABEL_80;
      case 5u:
        if (v9 != 42) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v23 = *(void *)(a1 + 48);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_13DAB08((uint64_t)v24);
          *(void *)(a1 + 48) = v23;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = sub_1323390(a3, v23, v8);
        goto LABEL_80;
      case 6u:
        if (v9 != 50) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (!v25)
        {
          unint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_13D82F4((uint64_t)v26);
          *(void *)(a1 + 56) = v25;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = (uint64_t)sub_1396C00(a3, v25, v8);
        goto LABEL_80;
      case 7u:
        if (v9 != 58) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v27 = *(void *)(a1 + 64);
        if (!v27)
        {
          BOOL v28 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v28 = (void *)*v28;
          }
          uint64_t v27 = sub_13D8374((uint64_t)v28);
          *(void *)(a1 + 64) = v27;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = (uint64_t)sub_12E0178(a3, v27, v8);
        goto LABEL_80;
      case 8u:
        if (v9 != 64) {
          goto LABEL_73;
        }
        int v29 = (char *)(v8 + 1);
        unint64_t v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v31 = *v29;
        int v32 = v30 + (v31 << 7);
        unint64_t v30 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)int v46 = sub_188C138((uint64_t)v8, (v32 - 128));
          if (!*(void *)v46) {
            goto LABEL_94;
          }
          unint64_t v30 = v44;
        }
        else
        {
          int v29 = (char *)(v8 + 2);
LABEL_52:
          *(void *)int v46 = v29;
        }
        if (v30 > 2)
        {
          if (*v7) {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(8, v30, v45);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x400u;
          *(_DWORD *)(a1 + 104) = v30;
        }
        goto LABEL_81;
      case 9u:
        if (v9 != 74) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v33 = *(void *)(a1 + 72);
        if (!v33)
        {
          BOOL v34 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v34 = (void *)*v34;
          }
          uint64_t v33 = sub_15C1EF4((uint64_t)v34);
          *(void *)(a1 + 72) = v33;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = sub_1198E84(a3, v33, v8);
        goto LABEL_80;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v35 = *(void **)(a1 + 80);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_1479600((uint64_t)v36);
          *(void *)(a1 + 80) = v35;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = (uint64_t)sub_1396C90(a3, (uint64_t)v35, v8);
        goto LABEL_80;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_73;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v37 = *(void *)(a1 + 88);
        if (!v37)
        {
          unint64_t v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v38 = (void *)*v38;
          }
          sub_13D6A1C((uint64_t)v38);
          uint64_t v37 = v39;
          *(void *)(a1 + 88) = v39;
          uint64_t v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v18 = sub_13319DC(a3, v37, v8);
        goto LABEL_80;
      default:
LABEL_73:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if (*v7)
          {
            int v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v46;
          }
          uint64_t v18 = (uint64_t)sub_1885AC0(v9, v41, (char *)v8, a3);
LABEL_80:
          *(void *)int v46 = v18;
          if (!v18) {
            goto LABEL_94;
          }
LABEL_81:
          if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_94:
        }
          *(void *)int v46 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v46;
    }
  }
}

char *sub_1396C00(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13951A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1396C90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1472880(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1396D20(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 96);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_23;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  int v4 = sub_1460138(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  char *v4 = 42;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  int v4 = sub_13D2F58(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_13:
    if ((v6 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_41;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  char *v4 = 50;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    unint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    unint64_t v21 = v4 + 2;
  }
  int v4 = sub_1395500(v19, (unint64_t)v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_14:
    if ((v6 & 0x400) == 0) {
      goto LABEL_53;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  char *v4 = 58;
  unsigned int v23 = *(_DWORD *)(v22 + 40);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  int v4 = sub_1395E38(v22, v24, a3);
  if ((v6 & 0x400) != 0)
  {
LABEL_47:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v25 = *(int *)(a1 + 104);
    char *v4 = 64;
    v4[1] = v25;
    if (v25 > 0x7F)
    {
      v4[1] = v25 | 0x80;
      unint64_t v26 = v25 >> 7;
      v4[2] = v25 >> 7;
      v4 += 3;
      if (v25 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v27 = v26 >> 14;
          v26 >>= 7;
          *v4++ = v26;
        }
        while (v27);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_53:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 72);
    char *v4 = 74;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      unint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      unint64_t v30 = v4 + 2;
    }
    int v4 = sub_15B9320(v28, v30, a3);
    if ((v6 & 0x80) == 0)
    {
LABEL_55:
      if ((v6 & 0x100) == 0) {
        goto LABEL_75;
      }
      goto LABEL_69;
    }
  }
  else if ((v6 & 0x80) == 0)
  {
    goto LABEL_55;
  }
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v31 = *(void *)(a1 + 80);
  char *v4 = 82;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  v4[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, v4 + 1);
  }
  else {
    uint64_t v33 = v4 + 2;
  }
  int v4 = sub_1472A70(v31, (unint64_t)v33, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_69:
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v34 = *(void *)(a1 + 88);
    char *v4 = 90;
    unsigned int v35 = *(_DWORD *)(v34 + 20);
    v4[1] = v35;
    if (v35 > 0x7F) {
      uint64_t v36 = sub_188A9CC(v35, v4 + 1);
    }
    else {
      uint64_t v36 = v4 + 2;
    }
    int v4 = sub_1374B08(v34, v36, a3);
  }
LABEL_75:
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    BOOL v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    BOOL v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_1397238(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_1460320(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_12:
      if ((v2 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v10 = sub_13D3304(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_13:
    if ((v2 & 0x20) == 0) {
      goto LABEL_14;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t v11 = sub_1395784(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_14:
    if ((v2 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v12 = sub_1395F7C(*(void *)(a1 + 64));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_15:
    if ((v2 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_26:
  uint64_t v13 = sub_15B956C(*(void *)(a1 + 72));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0)
  {
LABEL_16:
    unint64_t v8 = sub_1472C14(*(void *)(a1 + 80));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  if ((v2 & 0x700) == 0) {
    goto LABEL_34;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v14 = sub_1374EEC(*(void *)(a1 + 88));
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x200) == 0)
    {
LABEL_20:
      if ((v2 & 0x400) == 0) {
        goto LABEL_34;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_20;
  }
  v3 += ((9 * (__clz(*(void *)(a1 + 96) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v2 & 0x400) == 0) {
    goto LABEL_34;
  }
LABEL_30:
  int v15 = *(_DWORD *)(a1 + 104);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v16;
LABEL_34:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void *sub_13974F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointInfo");
}

uint64_t sub_1397508(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AE788;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_139758C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13975C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1397634(void *a1)
{
  sub_13975C0(a1);

  operator delete();
}

uint64_t sub_139766C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x1F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1397694(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v39, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v39 + 2;
      }
    }
    unint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unint64_t v39 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_41;
        }
        unsigned int v29 = (char *)sub_188C0D0((uint64_t)v8, v13);
        unint64_t v39 = v29;
        *(_DWORD *)(a1 + 24) = v30;
        if (v29) {
          goto LABEL_41;
        }
        goto LABEL_56;
      case 2u:
        if (v9 != 16) {
          goto LABEL_34;
        }
        v5 |= 2u;
        int v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v31 = (char *)sub_188C0D0((uint64_t)v8, v16);
          unint64_t v39 = v31;
          *(_DWORD *)(a1 + 28) = v32;
          if (!v31) {
            goto LABEL_56;
          }
        }
        else
        {
          int v15 = v8 + 2;
LABEL_18:
          unint64_t v39 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_41;
      case 3u:
        if (v9 != 24) {
          goto LABEL_34;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v33 = (char *)sub_188C0D0((uint64_t)v8, v19);
          unint64_t v39 = v33;
          *(_DWORD *)(a1 + 32) = v34;
          if (!v33) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          unint64_t v39 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 8u;
        unint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          unsigned int v35 = (char *)sub_188C0D0((uint64_t)v8, v22);
          unint64_t v39 = v35;
          *(_DWORD *)(a1 + 36) = v36;
          if (!v35) {
            goto LABEL_56;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_28:
          unint64_t v39 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_41;
      case 5u:
        if (v9 != 40) {
          goto LABEL_34;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        int v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        int v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v37 = (char *)sub_188C0D0((uint64_t)v8, v25);
          unint64_t v39 = v37;
          *(_DWORD *)(a1 + 40) = v38;
          if (!v37) {
            goto LABEL_56;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          unint64_t v39 = v24;
          *(_DWORD *)(a1 + 40) = v25;
        }
        goto LABEL_41;
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (*v7)
          {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v39;
          }
          unint64_t v39 = (char *)sub_1885AC0(v9, v28, v8, a3);
          if (!v39) {
            goto LABEL_56;
          }
LABEL_41:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_56:
        }
          unint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
    }
  }
}

unsigned char *sub_13979CC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 40;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    int v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    int v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_1397CE4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_10:
      if ((v1 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_10;
  }
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) != 0) {
LABEL_11:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_12:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1397E0C()
{
  return 1;
}

void *sub_1397E14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TraversalTimes");
}

void *sub_1397E24(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1397E98(void *a1)
{
  sub_1397E24(a1);

  operator delete();
}

uint64_t sub_1397ED0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 18) = 0;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1397EEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unsigned int v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unsigned int v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(unsigned char *)(a1 + 26) = v17 != 0;
        goto LABEL_36;
      }
      int v25 = (char *)sub_188C138((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(unsigned char *)(a1 + 26) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    unsigned int v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unsigned int v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(unsigned char *)(a1 + 25) = v20 != 0;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(unsigned char *)(a1 + 25) = v28 != 0;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    uint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    uint64_t v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(unsigned char *)(a1 + 24) = v23 != 0;
      goto LABEL_36;
    }
    unsigned int v29 = (char *)sub_188C138((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(unsigned char *)(a1 + 24) = v30 != 0;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unsigned int v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_1398170(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 26);
    unsigned char *v4 = 24;
    v4[1] = v9;
    v4 += 2;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    unsigned int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    unsigned int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_13982D0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1398334()
{
  return 1;
}

void *sub_139833C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointRouteFeatures");
}

uint64_t sub_139834C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13983D0((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_13983D0(uint64_t (***result)()))()
{
  if (result != &off_2535390)
  {
    int v1 = result;
    uint64_t v2 = (uint64_t)result[3];
    if (v2)
    {
      sub_1374224(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[4];
    if (v3)
    {
      sub_1374224(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_1374224(v4);
      operator delete();
    }
    int v5 = v1[6];
    if (v5)
    {
      sub_1376310(v5);
      operator delete();
    }
    unint64_t v6 = v1[7];
    if (v6)
    {
      sub_1376310(v6);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[8];
    if (result)
    {
      sub_1376310(result);
      operator delete();
    }
  }
  return result;
}

void sub_13984DC(uint64_t a1)
{
  sub_139834C(a1);

  operator delete();
}

uint64_t sub_1398514(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_16:
    uint64_t result = sub_1376538(*(void *)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_17:
  uint64_t result = sub_1376538(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = sub_1376538(*(void *)(v1 + 64));
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13985CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v28 = a2;
  if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
    return v28;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v28 + 1;
    unsigned int v8 = *v28;
    if (*v28 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v28, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v28 + 2;
      }
    }
    uint64_t v28 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_25;
        }
        unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 24) = v13;
        goto LABEL_24;
      case 2u:
        if (v8 != 18) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (v11) {
          goto LABEL_25;
        }
        uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v14 = (void *)*v14;
        }
        sub_13D6A1C((uint64_t)v14);
        uint64_t v11 = v15;
        *(void *)(a1 + 32) = v15;
        goto LABEL_24;
      case 3u:
        if (v8 != 26) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 40);
        if (v11) {
          goto LABEL_25;
        }
        unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v11 = v17;
        *(void *)(a1 + 40) = v17;
LABEL_24:
        uint64_t v7 = v28;
LABEL_25:
        int v18 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_50;
      case 4u:
        if (v8 != 34) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v19 = *(void *)(a1 + 48);
        if (v19) {
          goto LABEL_42;
        }
        uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v20 = (void *)*v20;
        }
        sub_13D6BF8((uint64_t)v20);
        uint64_t v19 = v21;
        *(void *)(a1 + 48) = v21;
        goto LABEL_41;
      case 5u:
        if (v8 != 42) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v19 = *(void *)(a1 + 56);
        if (v19) {
          goto LABEL_42;
        }
        uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v22 = (void *)*v22;
        }
        sub_13D6BF8((uint64_t)v22);
        uint64_t v19 = v23;
        *(void *)(a1 + 56) = v23;
        goto LABEL_41;
      case 6u:
        if (v8 != 50) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v19 = *(void *)(a1 + 64);
        if (v19) {
          goto LABEL_42;
        }
        int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v24 = (void *)*v24;
        }
        sub_13D6BF8((uint64_t)v24);
        uint64_t v19 = v25;
        *(void *)(a1 + 64) = v25;
LABEL_41:
        uint64_t v7 = v28;
LABEL_42:
        int v18 = sub_13988D4(a3, v19, (unsigned __int8 *)v7);
        goto LABEL_50;
      default:
LABEL_43:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            uint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v28;
          }
          int v18 = (char *)sub_1885AC0(v8, v27, v7, a3);
LABEL_50:
          uint64_t v28 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v28, a3[11].i32[1])) {
            return v28;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v28;
    }
  }
}

char *sub_13988D4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137661C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1398964(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1374B08(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    int v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    int v18 = v4 + 2;
  }
  char v4 = sub_13769F0(v16, (unint64_t)v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    uint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    uint64_t v21 = v4 + 2;
  }
  char v4 = sub_13769F0(v19, (unint64_t)v21, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 64);
    char *v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      int v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      int v24 = v4 + 2;
    }
    char v4 = sub_13769F0(v22, (unint64_t)v24, a3);
  }
LABEL_44:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_1398C8C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_1374EEC(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = sub_1376E50(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v11 = sub_1376E50(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0)
  {
LABEL_12:
    uint64_t v6 = sub_1376E50(*(void *)(a1 + 64));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1398E34(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_58;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_13D6A1C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2534750;
    }
    sub_136A7DC(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_30;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    sub_13D6A1C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    unint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    unint64_t v12 = &off_2534750;
  }
  sub_136A7DC(v9, (uint64_t)v12);
  if ((v4 & 4) != 0)
  {
LABEL_22:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v13 = *(void *)(a1 + 40);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      sub_13D6A1C((uint64_t)v15);
      *(void *)(a1 + 40) = v13;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v16 = &off_2534750;
    }
    sub_136A7DC(v13, (uint64_t)v16);
  }
LABEL_30:
  if ((v4 & 8) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v17 = *(void *)(a1 + 48);
    if (!v17)
    {
      uint64_t v18 = *(void *)(a1 + 8);
      uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
      if (v18) {
        uint64_t v19 = (void *)*v19;
      }
      sub_13D6BF8((uint64_t)v19);
      *(void *)(a1 + 48) = v17;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v20 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unsigned int v20 = &off_2534838;
    }
    sub_1377098(v17, (uint64_t)v20);
    if ((v4 & 0x10) == 0)
    {
LABEL_32:
      if ((v4 & 0x20) == 0) {
        goto LABEL_58;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 0x10) == 0)
  {
    goto LABEL_32;
  }
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 56);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      unsigned int v23 = (void *)*v23;
    }
    sub_13D6BF8((uint64_t)v23);
    *(void *)(a1 + 56) = v21;
  }
  if (*(void *)(a2 + 56)) {
    int v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    int v24 = &off_2534838;
  }
  sub_1377098(v21, (uint64_t)v24);
  if ((v4 & 0x20) != 0)
  {
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v25 = *(void *)(a1 + 64);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      unint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        unint64_t v27 = (void *)*v27;
      }
      sub_13D6BF8((uint64_t)v27);
      *(void *)(a1 + 64) = v25;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v28 = &off_2534838;
    }
    sub_1377098(v25, (uint64_t)v28);
  }
LABEL_58:
  uint64_t v29 = *(void *)(a2 + 8);
  if (v29)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v29 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1399060(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_1377394(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_1377394(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t result = sub_1377394(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13990FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.LaunchAndGoCardText");
}

uint64_t sub_139910C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1399190((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1399190(uint64_t (***result)()))()
{
  if (result != &off_25353D8)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[3];
    if (v2)
    {
      sub_1374224(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[4];
    if (v3)
    {
      sub_1374224(v3);
      operator delete();
    }
    int v4 = v1[5];
    if (v4)
    {
      sub_1376310(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[6];
    if (result)
    {
      sub_1376310(result);
      operator delete();
    }
  }
  return result;
}

void sub_139925C(uint64_t a1)
{
  sub_139910C(a1);

  operator delete();
}

uint64_t sub_1399294(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  uint64_t result = sub_1369E6C(*(void *)(result + 24));
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_13:
  uint64_t result = sub_1376538(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1376538(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_139932C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    int v24 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_20;
        }
        unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 24) = v13;
        goto LABEL_19;
      case 2u:
        if (v8 != 18) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v14 = (void *)*v14;
          }
          sub_13D6A1C((uint64_t)v14);
          uint64_t v11 = v15;
          *(void *)(a1 + 32) = v15;
LABEL_19:
          uint64_t v7 = v24;
        }
LABEL_20:
        uint64_t v16 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_40;
      case 3u:
        if (v8 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void *)(a1 + 40);
        if (v17) {
          goto LABEL_32;
        }
        uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v18 = (void *)*v18;
        }
        sub_13D6BF8((uint64_t)v18);
        uint64_t v17 = v19;
        *(void *)(a1 + 40) = v19;
        goto LABEL_31;
      case 4u:
        if (v8 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (v17) {
          goto LABEL_32;
        }
        unsigned int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unsigned int v20 = (void *)*v20;
        }
        sub_13D6BF8((uint64_t)v20);
        uint64_t v17 = v21;
        *(void *)(a1 + 48) = v21;
LABEL_31:
        uint64_t v7 = v24;
LABEL_32:
        uint64_t v16 = sub_13988D4(a3, v17, (unsigned __int8 *)v7);
        goto LABEL_40;
      default:
LABEL_33:
        if (v8) {
          BOOL v22 = (v8 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v6)
          {
            unsigned int v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v24;
          }
          uint64_t v16 = (char *)sub_1885AC0(v8, v23, v7, a3);
LABEL_40:
          int v24 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
            return v24;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v24;
    }
  }
}

char *sub_13995A4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_13769F0(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_13769F0(v16, (unint64_t)v18, a3);
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    BOOL v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    BOOL v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_13997FC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  uint64_t v9 = sub_1376E50(*(void *)(a1 + 40));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v6 = sub_1376E50(*(void *)(a1 + 48));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_139993C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_13D6A1C((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2534750;
      }
      sub_136A7DC(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(void *)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        sub_13D6A1C((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2534750;
      }
      sub_136A7DC(v9, (uint64_t)v12);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        sub_13D6BF8((uint64_t)v15);
        *(void *)(a1 + 40) = v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_2534838;
      }
      sub_1377098(v13, (uint64_t)v16);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 8u;
      uint64_t v17 = *(void *)(a1 + 48);
      if (!v17)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (void *)*v19;
        }
        sub_13D6BF8((uint64_t)v19);
        *(void *)(a1 + 48) = v17;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v20 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v20 = &off_2534838;
      }
      sub_1377098(v17, (uint64_t)v20);
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1399AC8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_1377394(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_1377394(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1399B3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AlertNonRecommendedRouteText");
}

uint64_t sub_1399B4C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2535410)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1399C04(uint64_t a1)
{
  sub_1399B4C(a1);

  operator delete();
}

unsigned char *sub_1399C3C(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B16B4(*((unsigned char **)result + 3));
  }
  if ((v2 & 0xE) != 0)
  {
    *((void *)v1 + 4) = 0;
    *((void *)v1 + 5) = 0;
  }
  char v4 = v1[8];
  uint64_t v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1399CA4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v33 + 2;
      }
    }
    uint64_t v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_32;
        }
        v5 |= 2u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v33 = v12;
          *(void *)(a1 + 32) = v13;
          goto LABEL_40;
        }
        unint64_t v27 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v33 = v27;
        *(void *)(a1 + 32) = v28;
        if (v27) {
          goto LABEL_40;
        }
        goto LABEL_55;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        v5 |= 4u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v33 = v29;
          *(_DWORD *)(a1 + 40) = v30;
          if (!v29) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v33 = v15;
          *(_DWORD *)(a1 + 40) = v16;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_32;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v33) {
            goto LABEL_55;
          }
          unint64_t v19 = v31;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v33 = v18;
        }
        if (v19 > 2)
        {
          if (*v7) {
            int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v19, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v19;
        }
        goto LABEL_40;
      case 4u:
        if (v9 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 24);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_15C19EC((uint64_t)v23);
          *(void *)(a1 + 24) = v22;
          unsigned int v8 = v33;
        }
        uint64_t v24 = sub_11E1C60(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_39;
      default:
LABEL_32:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v33;
          }
          uint64_t v24 = (char *)sub_1885AC0(v9, v26, v8, a3);
LABEL_39:
          uint64_t v33 = v24;
          if (!v24) {
            goto LABEL_55;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          uint64_t v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

unsigned char *sub_1399FB4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 44);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 24);
    unsigned char *v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      uint64_t v18 = v4 + 2;
    }
    char v4 = sub_15B1A68(v16, (unint64_t)v18, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_139A238(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B1D1C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0)
  {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v5 = *(_DWORD *)(a1 + 44);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_139A35C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C19EC((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F208;
      }
      sub_15B1E3C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_21:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_139A454(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_139A480@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RestrictedZoneId");
}

uint64_t sub_139A490(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2535440 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_139A548(uint64_t a1)
{
  sub_139A490(a1);

  operator delete();
}

unsigned char *sub_139A580(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    BOOL result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 6) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_139A5E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    uint64_t v23 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 24);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 24) = v15;
      uint64_t v7 = v23;
    }
    unint64_t v14 = sub_1198F14(a3, v15, (unsigned __int8 *)v7);
LABEL_26:
    uint64_t v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    unsigned int v17 = v7 + 1;
    unint64_t v18 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v17;
    int v20 = v18 + (v19 << 7);
    unint64_t v18 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v23) {
        return 0;
      }
      unint64_t v18 = v21;
    }
    else
    {
      unsigned int v17 = v7 + 2;
LABEL_31:
      uint64_t v23 = v17;
    }
    if (v18 > 1)
    {
      if (*v6) {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v18, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v18;
    }
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v23;
    }
    unint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_26;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_139A7F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_139A97C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_139AA4C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_15C1918((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_253F1A0;
      }
      sub_15B0E24(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_139AB1C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_139AB48@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AdvisoryCardAction");
}

void *sub_139AB58(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_139ABDC((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_139ABDC(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2535468)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 24);
    if (v2)
    {
      sub_1374224(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_1374224(v3);
      operator delete();
    }
    uint64_t v4 = v1[5];
    if (v4)
    {
      sub_13D2774(v4);
      operator delete();
    }
    uint64_t v5 = v1[6];
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = v1[7];
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t result = v1[8];
    if (result)
    {
      sub_139A490(result);
      operator delete();
    }
  }
  return result;
}

void sub_139ACE8(void *a1)
{
  sub_139AB58(a1);

  operator delete();
}

uint64_t sub_139AD20(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_9;
  }
  if (v2)
  {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_16:
    uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    goto LABEL_17;
  }
LABEL_15:
  uint64_t result = sub_1369F48(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
    goto LABEL_16;
  }
LABEL_6:
  if ((v2 & 0x10) == 0) {
    goto LABEL_7;
  }
LABEL_17:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    uint64_t result = (uint64_t)sub_139A580(*(unsigned char **)(v1 + 64));
LABEL_9:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_139ADD8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v27 + 2;
      }
    }
    unint64_t v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (v11) {
          goto LABEL_36;
        }
        BOOL v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          BOOL v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 24) = v13;
        goto LABEL_35;
      case 2u:
        if (v8 != 18) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (v11) {
          goto LABEL_36;
        }
        unint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v14 = (void *)*v14;
        }
        sub_13D6A1C((uint64_t)v14);
        uint64_t v11 = v15;
        *(void *)(a1 + 32) = v15;
        goto LABEL_35;
      case 3u:
        if (v8 != 26) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 40);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_13DAB08((uint64_t)v17);
          *(void *)(a1 + 40) = v16;
          uint64_t v7 = v27;
        }
        uint64_t v18 = (char *)sub_1323390(a3, v16, (unsigned __int8 *)v7);
        goto LABEL_50;
      case 4u:
        if (v8 != 34) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (v11) {
          goto LABEL_36;
        }
        int v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v19 = (void *)*v19;
        }
        sub_13D6A1C((uint64_t)v19);
        uint64_t v11 = v20;
        *(void *)(a1 + 48) = v20;
        goto LABEL_35;
      case 5u:
        if (v8 != 42) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v11 = *(void *)(a1 + 56);
        if (v11) {
          goto LABEL_36;
        }
        unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v21 = (void *)*v21;
        }
        sub_13D6A1C((uint64_t)v21);
        uint64_t v11 = v22;
        *(void *)(a1 + 56) = v22;
LABEL_35:
        uint64_t v7 = v27;
LABEL_36:
        uint64_t v18 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_50;
      case 6u:
        if (v8 != 50) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v23 = *(void *)(a1 + 64);
        if (!v23)
        {
          uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v24 = (void *)*v24;
          }
          uint64_t v23 = sub_13D8724((uint64_t)v24);
          *(void *)(a1 + 64) = v23;
          uint64_t v7 = v27;
        }
        uint64_t v18 = sub_139B0EC(a3, v23, (unsigned __int8 *)v7);
        goto LABEL_50;
      default:
LABEL_43:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v6)
          {
            uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v27;
          }
          uint64_t v18 = (char *)sub_1885AC0(v8, v26, v7, a3);
LABEL_50:
          unint64_t v27 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
            return v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v27;
    }
  }
}

char *sub_139B0EC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139A5E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_139B17C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    BOOL v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    BOOL v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_13D2F58(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1374B08(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    unint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    unint64_t v21 = v4 + 2;
  }
  char v4 = sub_1374B08(v19, v21, a3);
  if ((v6 & 0x20) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 64);
    char *v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 20);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    char v4 = sub_139A7F0(v22, (unint64_t)v24, a3);
  }
LABEL_44:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    uint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    uint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_139B4A4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_13D3304(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_17;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = sub_1374EEC(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_17:
  uint64_t v11 = sub_1374EEC(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0)
  {
LABEL_12:
    uint64_t v6 = sub_139A97C(*(void *)(a1 + 64));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_139B64C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_57;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_13D6A1C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2534750;
    }
    sub_136A7DC(v5, (uint64_t)v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v9 = *(void *)(a1 + 32);
  if (!v9)
  {
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (void *)*v11;
    }
    sub_13D6A1C((uint64_t)v11);
    *(void *)(a1 + 32) = v9;
  }
  if (*(void *)(a2 + 32)) {
    unint64_t v12 = *(uint64_t (****)())(a2 + 32);
  }
  else {
    unint64_t v12 = &off_2534750;
  }
  sub_136A7DC(v9, (uint64_t)v12);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_33;
  }
LABEL_25:
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    uint64_t v13 = sub_13DAB08((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2536850;
  }
  sub_136AA7C(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_41;
  }
LABEL_33:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v17 = *(void *)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    sub_13D6A1C((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    unsigned int v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    unsigned int v20 = &off_2534750;
  }
  sub_136A7DC(v17, (uint64_t)v20);
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_57;
    }
    goto LABEL_49;
  }
LABEL_41:
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v21 = *(void *)(a1 + 56);
  if (!v21)
  {
    uint64_t v22 = *(void *)(a1 + 8);
    unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      unsigned int v23 = (void *)*v23;
    }
    sub_13D6A1C((uint64_t)v23);
    *(void *)(a1 + 56) = v21;
  }
  if (*(void *)(a2 + 56)) {
    uint64_t v24 = *(uint64_t (****)())(a2 + 56);
  }
  else {
    uint64_t v24 = &off_2534750;
  }
  sub_136A7DC(v21, (uint64_t)v24);
  if ((v4 & 0x20) != 0)
  {
LABEL_49:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v25 = *(void *)(a1 + 64);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      unint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        unint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = sub_13D8724((uint64_t)v27);
      *(void *)(a1 + 64) = v25;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v28 = &off_2535440;
    }
    sub_139AA4C(v25, (uint64_t)v28);
  }
LABEL_57:
  uint64_t v29 = *(void *)(a2 + 8);
  if (v29)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v29 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_139B880(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) == 0) {
    return 1;
  }
  uint64_t v4 = *(void *)(a1 + 64);
  if ((*(unsigned char *)(v4 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(v4 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_139B928@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AdvisoryCard");
}

uint64_t sub_139B938(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25354B0)
  {
    uint64_t v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_139AB58(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_139B9F8(uint64_t a1)
{
  sub_139B938(a1);

  operator delete();
}

uint64_t sub_139BA30(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if (v3) {
    uint64_t result = sub_139AD20(*(void *)(a1 + 48));
  }
  if ((v3 & 6) != 0) {
    *(void *)(a1 + 56) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_139BAA0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (uint64_t **)(a1 + 24);
  unsigned int v8 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v9 = (unsigned __int8 *)(*(void *)v36 + 1);
    unsigned int v10 = **(unsigned char **)v36;
    if ((char)**(unsigned char **)v36 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        uint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v36, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        uint64_t v9 = (unsigned __int8 *)(*(void *)v36 + 2);
      }
    }
    *(void *)int v36 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 48);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v8 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v8) {
            uint64_t v14 = (void *)*v14;
          }
          sub_13D87A0((uint64_t)v14);
          uint64_t v13 = v15;
          *(void *)(a1 + 48) = v15;
          uint64_t v9 = *(unsigned __int8 **)v36;
        }
        uint64_t v16 = sub_139BDF4(a3, v13, v9);
        goto LABEL_44;
      case 2u:
        if (v10 != 16) {
          goto LABEL_37;
        }
        v5 |= 2u;
        uint64_t v17 = (char *)(v9 + 1);
        int v18 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v19 = *v17;
        int v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v32 = sub_188C0D0((uint64_t)v9, v18);
          *(void *)int v36 = v32;
          *(_DWORD *)(a1 + 56) = v33;
          if (!v32) {
            goto LABEL_54;
          }
        }
        else
        {
          uint64_t v17 = (char *)(v9 + 2);
LABEL_19:
          *(void *)int v36 = v17;
          *(_DWORD *)(a1 + 56) = v18;
        }
        goto LABEL_45;
      case 3u:
        if (v10 != 24) {
          goto LABEL_37;
        }
        v5 |= 4u;
        unsigned int v20 = (char *)(v9 + 1);
        int v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_24;
        }
        int v22 = *v20;
        int v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v34 = sub_188C0D0((uint64_t)v9, v21);
          *(void *)int v36 = v34;
          *(_DWORD *)(a1 + 60) = v35;
          if (!v34) {
            goto LABEL_54;
          }
        }
        else
        {
          unsigned int v20 = (char *)(v9 + 2);
LABEL_24:
          *(void *)int v36 = v20;
          *(_DWORD *)(a1 + 60) = v21;
        }
        goto LABEL_45;
      case 4u:
        if (v10 != 34) {
          goto LABEL_37;
        }
        unsigned int v23 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v24 = (char *)(v23 + 1);
          *(void *)int v36 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 40);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 32), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 32) = v26 + 1;
            unint64_t v27 = *(std::string **)&v25[2 * v26 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *uint64_t v29 = v28;
            v29[1] = sub_3A6EDC;
            void *v28 = 0;
            v28[1] = 0;
            v28[2] = 0;
            unint64_t v27 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v28);
            uint64_t v24 = *(char **)v36;
          }
          unsigned int v23 = sub_188C244(v27, v24, (uint64_t)a3);
          *(void *)int v36 = v23;
          if (!v23) {
            goto LABEL_54;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_45;
          }
        }
      default:
LABEL_37:
        if (v10) {
          BOOL v30 = (v10 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v8)
          {
            unint64_t v31 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v9 = *(unsigned __int8 **)v36;
          }
          uint64_t v16 = sub_1885AC0(v10, v31, (char *)v9, a3);
LABEL_44:
          *(void *)int v36 = v16;
          if (!v16) {
            goto LABEL_54;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_54:
        }
          *(void *)int v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v36;
    }
  }
}

char *sub_139BDF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139ADD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_139BE84(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      uint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      uint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_139B17C(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 60);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 32);
  if ((int)v16 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = 8 * v16;
    do
    {
      int v19 = *(void **)(*(void *)(a1 + 40) + v17 + 8);
      if (*((char *)v19 + 23) < 0)
      {
        int64_t v20 = v19[1];
        if (v20 > 127) {
          goto LABEL_33;
        }
      }
      else
      {
        int64_t v20 = *((unsigned __int8 *)v19 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v20)
      {
        char *v4 = 34;
        v4[1] = v20;
        if (*((char *)v19 + 23) < 0) {
          int v19 = (void *)*v19;
        }
        int v21 = v4 + 2;
        memcpy(v21, v19, v20);
        uint64_t v4 = &v21[v20];
        goto LABEL_31;
      }
LABEL_33:
      uint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v19, v4);
LABEL_31:
      v17 += 8;
    }
    while (v18 != v17);
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if ((v22 & 1) == 0) {
    return v4;
  }
  unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v24 + 31) < 0)
  {
    uint64_t v25 = *(void **)(v24 + 8);
    uint64_t v26 = *(void *)(v24 + 16);
  }
  else
  {
    uint64_t v25 = (void *)(v24 + 8);
    LODWORD(v26) = *(unsigned __int8 *)(v24 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v26)
  {
    uint64_t v27 = (int)v26;
    memcpy(v4, v25, (int)v26);
    v4 += v27;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v25, v26, v4);
}

uint64_t sub_139C14C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v11 = sub_139B4A4(*(void *)(a1 + 48));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_11:
        if ((v8 & 4) == 0) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_11;
    }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 56) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0) {
LABEL_12:
    }
      v4 += ((9 * (__clz(*(_DWORD *)(a1 + 60) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_139C2A0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 48);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        sub_13D87A0((uint64_t)v13);
        *(void *)(a1 + 48) = v11;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v14 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v14 = &off_2535468;
      }
      sub_139B64C(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 16) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_139C3F8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_139B880(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_139C424@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AdvisoryItem");
}

uint64_t sub_139C434(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24AEB88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_148D7AC((uint64_t *)(a1 + 40), v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 80);
    unsigned int v14 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_148D838((uint64_t *)(a1 + 64), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    uint64_t v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      int *v16 = v15;
    }
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  int v17 = *(_DWORD *)(a2 + 96);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 104);
    int v19 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_188FB98(a1 + 88, v19, (const std::string **)(v18 + 8), v17, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v20 = *(_DWORD *)(a1 + 96) + v17;
    *(_DWORD *)(a1 + 96) = v20;
    int v21 = *(int **)(a1 + 104);
    if (*v21 < v20) {
      *int v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v23 = *(_DWORD *)(a2 + 16);
  if (v23) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v23 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v23 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

void sub_139C6EC()
{
}

uint64_t sub_139C79C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_25354F0)
  {
    uint64_t v5 = *(void *)(a1 + 112);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 120);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 128);
    if (v7)
    {
      sub_13D2774(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DE8((void *)(a1 + 88));
  sub_148BDC8((void *)(a1 + 64));
  sub_148BD48((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_139C8B4(uint64_t a1)
{
  sub_139C79C(a1);

  operator delete();
}

uint64_t sub_139C8EC(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_139AD20(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 72);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_139BA30(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 72) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 88);
  int v9 = *(_DWORD *)(a1 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t result = sub_1369E6C(*(void *)(a1 + 112));
      if ((v9 & 2) == 0)
      {
LABEL_12:
        if ((v9 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t result = sub_1369E6C(*(void *)(a1 + 120));
    if ((v9 & 4) != 0) {
LABEL_13:
    }
      uint64_t result = sub_1369F48(*(void *)(a1 + 128));
  }
LABEL_14:
  if ((v9 & 0x18) != 0) {
    *(void *)(a1 + 136) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 8) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_139C9E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v59 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1]) & 1) == 0)
  {
    int v58 = 0;
    uint64_t v57 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 88);
    while (1)
    {
      uint64_t v7 = (unsigned __int8 *)(*(void *)v59 + 1);
      unsigned int v8 = **(unsigned char **)v59;
      if ((char)**(unsigned char **)v59 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v59, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (unsigned __int8 *)(*(void *)v59 + 2);
        }
      }
      *(void *)uint64_t v59 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_92;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v11 = *(void *)(a1 + 112);
          if (v11) {
            goto LABEL_60;
          }
          int v12 = (void *)(*v57 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v57) {
            int v12 = (void *)*v12;
          }
          sub_13D6A1C((uint64_t)v12);
          uint64_t v11 = v13;
          *(void *)(a1 + 112) = v13;
          goto LABEL_59;
        case 2u:
          if (v8 == 16)
          {
            unsigned int v14 = v7 - 1;
            while (1)
            {
              *(void *)uint64_t v59 = v14 + 1;
              int v15 = v14[1];
              if ((char)v14[1] < 0)
              {
                int v16 = v15 + (v14[2] << 7);
                int v15 = v16 - 128;
                if ((char)v14[2] < 0)
                {
                  unsigned int v14 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v14 + 1), v16 - 128);
                  int v15 = v17;
                }
                else
                {
                  v14 += 3;
                }
              }
              else
              {
                v14 += 2;
              }
              *(void *)uint64_t v59 = v14;
              uint64_t v18 = *(unsigned int *)(a1 + 24);
              if (v18 == *(_DWORD *)(a1 + 28))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v15;
                unsigned int v14 = *(unsigned __int8 **)v59;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v15;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 24) = v19;
              if (!v14) {
                goto LABEL_109;
              }
              if (*(void *)a3 <= (unint64_t)v14 || *v14 != 16) {
                goto LABEL_100;
              }
            }
          }
          if (v8 == 18)
          {
            uint64_t v37 = (uint64_t)sub_188C2CC((unsigned int *)(a1 + 24), v7, (uint64_t)a3);
          }
          else
          {
LABEL_92:
            if (v8) {
              BOOL v54 = (v8 & 7) == 4;
            }
            else {
              BOOL v54 = 1;
            }
            if (v54)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_3;
              }
LABEL_109:
              *(void *)uint64_t v59 = 0;
              goto LABEL_3;
            }
            if (*v57)
            {
              unint64_t v55 = (std::string *)((*v57 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v55 = (std::string *)sub_188DBD8(v57);
              uint64_t v7 = *(unsigned __int8 **)v59;
            }
            uint64_t v37 = (uint64_t)sub_1885AC0(v8, v55, (char *)v7, a3);
          }
LABEL_99:
          *(void *)uint64_t v59 = v37;
          if (!v37) {
            goto LABEL_109;
          }
LABEL_100:
          if (sub_11947B8((uint64_t)a3, (char **)v59, a3[11].i32[1])) {
            goto LABEL_3;
          }
          break;
        case 3u:
          if (v8 != 26) {
            goto LABEL_92;
          }
          int v20 = (char *)(v7 - 1);
          while (1)
          {
            int v21 = (unsigned __int8 *)(v20 + 1);
            *(void *)uint64_t v59 = v20 + 1;
            uint64_t v22 = *(_DWORD **)(a1 + 56);
            if (v22 && (uint64_t v23 = *(int *)(a1 + 48), (int)v23 < *v22))
            {
              *(_DWORD *)(a1 + 48) = v23 + 1;
              uint64_t v24 = *(void *)&v22[2 * v23 + 2];
            }
            else
            {
              sub_13D87A0(*(void *)(a1 + 40));
              uint64_t v24 = sub_188CDC8(a1 + 40, v25);
              int v21 = *(unsigned __int8 **)v59;
            }
            int v20 = sub_139BDF4(a3, v24, v21);
            *(void *)uint64_t v59 = v20;
            if (!v20) {
              goto LABEL_109;
            }
            if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
              goto LABEL_100;
            }
          }
        case 4u:
          if (v8 != 32) {
            goto LABEL_92;
          }
          v58 |= 8u;
          uint64_t v26 = (char *)(v7 + 1);
          uint64_t v27 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_43;
          }
          int v28 = *v26;
          uint64_t v27 = v27 + (v28 << 7) - 128;
          if (v28 < 0)
          {
            uint64_t v51 = sub_188C138((uint64_t)v7, v27);
            *(void *)uint64_t v59 = v51;
            *(unsigned char *)(a1 + 136) = v52 != 0;
            if (!v51) {
              goto LABEL_109;
            }
          }
          else
          {
            uint64_t v26 = (char *)(v7 + 2);
LABEL_43:
            *(void *)uint64_t v59 = v26;
            *(unsigned char *)(a1 + 136) = v27 != 0;
          }
          goto LABEL_100;
        case 5u:
          if (v8 != 42) {
            goto LABEL_92;
          }
          uint64_t v29 = v7 - 1;
          while (1)
          {
            BOOL v30 = v29 + 1;
            *(void *)uint64_t v59 = v29 + 1;
            unint64_t v31 = *(_DWORD **)(a1 + 80);
            if (v31 && (uint64_t v32 = *(int *)(a1 + 72), (int)v32 < *v31))
            {
              *(_DWORD *)(a1 + 72) = v32 + 1;
              uint64_t v33 = *(void *)&v31[2 * v32 + 2];
            }
            else
            {
              uint64_t v34 = sub_13D8824(*(void *)(a1 + 64));
              uint64_t v33 = sub_188CDC8(a1 + 64, v34);
              BOOL v30 = *(unsigned __int8 **)v59;
            }
            uint64_t v29 = (unsigned __int8 *)sub_139D064(a3, v33, v30);
            *(void *)uint64_t v59 = v29;
            if (!v29) {
              goto LABEL_109;
            }
            if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
              goto LABEL_100;
            }
          }
        case 6u:
          if (v8 != 50) {
            goto LABEL_92;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v11 = *(void *)(a1 + 120);
          if (!v11)
          {
            int v35 = (void *)(*v57 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v57) {
              int v35 = (void *)*v35;
            }
            sub_13D6A1C((uint64_t)v35);
            uint64_t v11 = v36;
            *(void *)(a1 + 120) = v36;
LABEL_59:
            uint64_t v7 = *(unsigned __int8 **)v59;
          }
LABEL_60:
          uint64_t v37 = sub_13319DC(a3, v11, v7);
          goto LABEL_99;
        case 7u:
          if (v8 != 58) {
            goto LABEL_92;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v38 = *(void *)(a1 + 128);
          if (!v38)
          {
            unint64_t v39 = (void *)(*v57 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v57) {
              unint64_t v39 = (void *)*v39;
            }
            uint64_t v38 = sub_13DAB08((uint64_t)v39);
            *(void *)(a1 + 128) = v38;
            uint64_t v7 = *(unsigned __int8 **)v59;
          }
          uint64_t v37 = sub_1323390(a3, v38, v7);
          goto LABEL_99;
        case 8u:
          if (v8 != 66) {
            goto LABEL_92;
          }
          BOOL v40 = (const std::string::value_type *)(v7 - 1);
          while (1)
          {
            uint64_t v41 = (char *)(v40 + 1);
            *(void *)uint64_t v59 = v40 + 1;
            uint64_t v42 = *(_DWORD **)(a1 + 104);
            if (v42 && (uint64_t v43 = *(int *)(a1 + 96), (int)v43 < *v42))
            {
              *(_DWORD *)(a1 + 96) = v43 + 1;
              unint64_t v44 = *(std::string **)&v42[2 * v43 + 2];
            }
            else
            {
              if (!*v6) {
                operator new();
              }
              void *v46 = v45;
              v46[1] = sub_3A6EDC;
              void *v45 = 0;
              v45[1] = 0;
              v45[2] = 0;
              unint64_t v44 = (std::string *)sub_188CDC8(a1 + 88, (uint64_t)v45);
              uint64_t v41 = *(char **)v59;
            }
            BOOL v40 = sub_188C244(v44, v41, (uint64_t)a3);
            *(void *)uint64_t v59 = v40;
            if (!v40) {
              goto LABEL_109;
            }
            if (*(void *)a3 <= (unint64_t)v40 || *v40 != 66) {
              goto LABEL_100;
            }
          }
        case 9u:
          if (v8 != 72) {
            goto LABEL_92;
          }
          uint64_t v47 = (char *)(v7 + 1);
          unint64_t v48 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_83;
          }
          int v49 = *v47;
          int v50 = v48 + (v49 << 7);
          unint64_t v48 = (v50 - 128);
          if (v49 < 0)
          {
            *(void *)uint64_t v59 = sub_188C138((uint64_t)v7, (v50 - 128));
            if (!*(void *)v59) {
              goto LABEL_109;
            }
            unint64_t v48 = v53;
          }
          else
          {
            uint64_t v47 = (char *)(v7 + 2);
LABEL_83:
            *(void *)uint64_t v59 = v47;
          }
          if (v48 > 1)
          {
            if (*v57) {
              uint64_t v56 = (std::string *)((*v57 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              uint64_t v56 = (std::string *)sub_188DBD8(v57);
            }
            sub_188C020(9, v48, v56);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x10u;
            *(_DWORD *)(a1 + 140) = v48;
          }
          goto LABEL_100;
        default:
          goto LABEL_92;
      }
    }
  }
  int v58 = 0;
LABEL_3:
  *(_DWORD *)(a1 + 16) |= v58;
  return *(void *)v59;
}

uint64_t sub_139D064(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139BAA0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_139D0F4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 112);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v7, v9, a3);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 24);
  if ((int)v10 >= 1)
  {
    for (uint64_t i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v12 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 16;
      v4[1] = v12;
      if (v12 > 0x7F)
      {
        v4[1] = v12 | 0x80;
        unsigned int v13 = v12 >> 7;
        v4[2] = v12 >> 7;
        v4 += 3;
        if (v12 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v14 = v13 >> 14;
            v13 >>= 7;
            *v4++ = v13;
          }
          while (v14);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v15 = *(_DWORD *)(a1 + 48);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      char *v4 = 26;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        int v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        int v19 = v4 + 2;
      }
      uint64_t v4 = sub_139B17C(v17, (unint64_t)v19, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v20 = *(unsigned char *)(a1 + 136);
    char *v4 = 32;
    v4[1] = v20;
    v4 += 2;
  }
  int v21 = *(_DWORD *)(a1 + 72);
  if (v21)
  {
    for (int k = 0; k != v21; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 80) + 8 * k + 8);
      char *v4 = 42;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      v4[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, v4 + 1);
      }
      else {
        uint64_t v25 = v4 + 2;
      }
      uint64_t v4 = sub_139BE84(v23, (unint64_t)v25, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 120);
    char *v4 = 50;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    v4[1] = v27;
    if (v27 > 0x7F) {
      int v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      int v28 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v26, v28, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v29 = *(void *)(a1 + 128);
    char *v4 = 58;
    unsigned int v30 = *(_DWORD *)(v29 + 44);
    v4[1] = v30;
    if (v30 > 0x7F) {
      unint64_t v31 = sub_188A9CC(v30, v4 + 1);
    }
    else {
      unint64_t v31 = v4 + 2;
    }
    uint64_t v4 = sub_13D2F58(v29, v31, a3);
  }
  uint64_t v32 = *(unsigned int *)(a1 + 96);
  if ((int)v32 >= 1)
  {
    uint64_t v33 = 0;
    uint64_t v34 = 8 * v32;
    do
    {
      int v35 = *(void **)(*(void *)(a1 + 104) + v33 + 8);
      if (*((char *)v35 + 23) < 0)
      {
        int64_t v36 = v35[1];
        if (v36 > 127) {
          goto LABEL_62;
        }
      }
      else
      {
        int64_t v36 = *((unsigned __int8 *)v35 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 14) >= v36)
      {
        char *v4 = 66;
        v4[1] = v36;
        if (*((char *)v35 + 23) < 0) {
          int v35 = (void *)*v35;
        }
        uint64_t v37 = v4 + 2;
        memcpy(v37, v35, v36);
        uint64_t v4 = &v37[v36];
        goto LABEL_60;
      }
LABEL_62:
      uint64_t v4 = (char *)sub_188A868(a3, 8, (uint64_t)v35, v4);
LABEL_60:
      v33 += 8;
    }
    while (v34 != v33);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v38 = *(int *)(a1 + 140);
    char *v4 = 72;
    v4[1] = v38;
    if (v38 > 0x7F)
    {
      v4[1] = v38 | 0x80;
      unint64_t v39 = v38 >> 7;
      v4[2] = v38 >> 7;
      v4 += 3;
      if (v38 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v40 = v39 >> 14;
          v39 >>= 7;
          *v4++ = v39;
        }
        while (v40);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v41 = *(void *)(a1 + 8);
  if ((v41 & 1) == 0) {
    return v4;
  }
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v43 + 31) < 0)
  {
    unint64_t v44 = *(void **)(v43 + 8);
    uint64_t v45 = *(void *)(v43 + 16);
  }
  else
  {
    unint64_t v44 = (void *)(v43 + 8);
    LODWORD(v45) = *(unsigned __int8 *)(v43 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v45)
  {
    uint64_t v46 = (int)v45;
    memcpy(v4, v44, (int)v45);
    v4 += v46;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v44, v45, v4);
}

uint64_t sub_139D5E4(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24));
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_139B4A4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_139C14C(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 96);
  uint64_t v18 = v11 + v17;
  if ((int)v17 >= 1)
  {
    int v19 = (uint64_t *)(*(void *)(a1 + 104) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      v18 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      --v17;
    }
    while (v17);
  }
  int v23 = *(_DWORD *)(a1 + 16);
  if ((v23 & 0x1F) != 0)
  {
    if (v23)
    {
      uint64_t v30 = sub_1374EEC(*(void *)(a1 + 112));
      v18 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v23 & 2) == 0)
      {
LABEL_21:
        if ((v23 & 4) == 0)
        {
LABEL_23:
          if ((v23 & 8) != 0) {
            v18 += 2;
          }
          if ((v23 & 0x10) != 0)
          {
            int v25 = *(_DWORD *)(a1 + 140);
            uint64_t v26 = ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
            if (v25 >= 0) {
              uint64_t v27 = v26;
            }
            else {
              uint64_t v27 = 11;
            }
            v18 += v27;
          }
          goto LABEL_30;
        }
LABEL_22:
        uint64_t v24 = sub_13D3304(*(void *)(a1 + 128));
        v18 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
        goto LABEL_23;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_21;
    }
    uint64_t v31 = sub_1374EEC(*(void *)(a1 + 120));
    v18 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_30:
  uint64_t v28 = *(void *)(a1 + 8);
  if (v28)
  {
    unint64_t v32 = v28 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v18 += v33;
  }
  *(_DWORD *)(a1 + 20) = v18;
  return v18;
}

void sub_139D830(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_148D7AC((uint64_t *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 72);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v15 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_148D838((uint64_t *)(a1 + 64), v15, v14, v13, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v16 = *(_DWORD *)(a1 + 72) + v13;
    *(_DWORD *)(a1 + 72) = v16;
    uint64_t v17 = *(int **)(a1 + 80);
    if (*v17 < v16) {
      *uint64_t v17 = v16;
    }
  }
  int v18 = *(_DWORD *)(a2 + 96);
  if (v18)
  {
    int v19 = (const std::string **)(*(void *)(a2 + 104) + 8);
    uint64_t v20 = (std::string **)sub_188CCE4(a1 + 88, *(_DWORD *)(a2 + 96));
    sub_188FB98(a1 + 88, v20, v19, v18, **(_DWORD **)(a1 + 104) - *(_DWORD *)(a1 + 96));
    int v21 = *(_DWORD *)(a1 + 96) + v18;
    *(_DWORD *)(a1 + 96) = v21;
    uint64_t v22 = *(int **)(a1 + 104);
    if (*v22 < v21) {
      *uint64_t v22 = v21;
    }
  }
  int v23 = *(_DWORD *)(a2 + 16);
  if ((v23 & 0x1F) != 0)
  {
    if (v23)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v25 = *(void *)(a1 + 112);
      if (!v25)
      {
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v27 = (void *)*v27;
        }
        sub_13D6A1C((uint64_t)v27);
        *(void *)(a1 + 112) = v25;
      }
      if (*(void *)(a2 + 112)) {
        uint64_t v28 = *(uint64_t (****)())(a2 + 112);
      }
      else {
        uint64_t v28 = &off_2534750;
      }
      sub_136A7DC(v25, (uint64_t)v28);
      if ((v23 & 2) == 0)
      {
LABEL_15:
        if ((v23 & 4) == 0) {
          goto LABEL_16;
        }
        goto LABEL_40;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_15;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v29 = *(void *)(a1 + 120);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      sub_13D6A1C((uint64_t)v31);
      *(void *)(a1 + 120) = v29;
    }
    if (*(void *)(a2 + 120)) {
      unint64_t v32 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      unint64_t v32 = &off_2534750;
    }
    sub_136A7DC(v29, (uint64_t)v32);
    if ((v23 & 4) == 0)
    {
LABEL_16:
      if ((v23 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_48;
    }
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v33 = *(void *)(a1 + 128);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      int v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        int v35 = (void *)*v35;
      }
      uint64_t v33 = sub_13DAB08((uint64_t)v35);
      *(void *)(a1 + 128) = v33;
    }
    if (*(void *)(a2 + 128)) {
      int64_t v36 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      int64_t v36 = &off_2536850;
    }
    sub_136AA7C(v33, (uint64_t)v36);
    if ((v23 & 8) == 0)
    {
LABEL_17:
      if ((v23 & 0x10) == 0)
      {
LABEL_19:
        *(_DWORD *)(a1 + 16) |= v23;
        goto LABEL_20;
      }
LABEL_18:
      *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
      goto LABEL_19;
    }
LABEL_48:
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    if ((v23 & 0x10) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_20:
  uint64_t v24 = *(void *)(a2 + 8);
  if (v24)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v24 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_139DB2C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_139B880(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t result = sub_139DBC4(a1 + 64);
  if (result)
  {
    int v6 = *(_DWORD *)(a1 + 16);
    if (v6)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 112));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 16);
    }
    if ((v6 & 2) != 0)
    {
      uint64_t result = sub_136ADBC(*(void *)(a1 + 120));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 16);
    }
    if ((v6 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 128));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_139DBC4(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_139B880(*(void *)(v5 + 48));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_139DC34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AdvisoryNotice");
}

uint64_t sub_139DC44(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24AEC08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D8C4(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 64);
    int v13 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148D8C4((uint64_t *)(a1 + 48), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v14 = *(_DWORD *)(a1 + 56) + v11;
    *(_DWORD *)(a1 + 56) = v14;
    uint64_t v15 = *(int **)(a1 + 64);
    if (*v15 < v14) {
      int *v15 = v14;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v16 = *(_DWORD *)(a2 + 80);
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 88);
    int v18 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148D8C4((uint64_t *)(a1 + 72), v18, (uint64_t *)(v17 + 8), v16, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v19 = *(_DWORD *)(a1 + 80) + v16;
    *(_DWORD *)(a1 + 80) = v19;
    uint64_t v20 = *(int **)(a1 + 88);
    if (*v20 < v19) {
      int *v20 = v19;
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21) {
    sub_188B4F8(v4, (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v22 = *(_DWORD *)(a2 + 16);
  if (v22) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v22 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v22 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  return a1;
}

void sub_139DEB0()
{
}

uint64_t sub_139DF58(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2535580)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_13D00A8(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_139C79C(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 112);
    if (v7)
    {
      sub_139C79C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_148BE48((void *)(a1 + 72));
  sub_148BE48((void *)(a1 + 48));
  sub_148BE48((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_139E06C(uint64_t a1)
{
  sub_139DF58(a1);

  operator delete();
}

uint64_t sub_139E0A4(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_139C8EC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 56);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (uint64_t *)(*(void *)(v1 + 64) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_139C8EC(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 56) = 0;
  }
  uint64_t v8 = *(unsigned int *)(v1 + 80);
  if ((int)v8 >= 1)
  {
    int v9 = (uint64_t *)(*(void *)(v1 + 88) + 8);
    do
    {
      uint64_t v10 = *v9++;
      uint64_t result = sub_139C8EC(v10);
      --v8;
    }
    while (v8);
    *(_DWORD *)(v1 + 80) = 0;
  }
  int v11 = *(_DWORD *)(v1 + 16);
  if ((v11 & 7) != 0)
  {
    if (v11)
    {
      uint64_t result = sub_139E1B0(*(void *)(v1 + 96));
      if ((v11 & 2) == 0)
      {
LABEL_16:
        if ((v11 & 4) == 0) {
          goto LABEL_18;
        }
        goto LABEL_17;
      }
    }
    else if ((v11 & 2) == 0)
    {
      goto LABEL_16;
    }
    uint64_t result = sub_139C8EC(*(void *)(v1 + 104));
    if ((v11 & 4) != 0) {
LABEL_17:
    }
      uint64_t result = sub_139C8EC(*(void *)(v1 + 112));
  }
LABEL_18:
  char v13 = *(unsigned char *)(v1 + 8);
  uint64_t v12 = v1 + 8;
  *(_DWORD *)(v12 + 8) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

uint64_t sub_139E1B0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 40));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_139E210(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v37 = a2;
  if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
    return v37;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v37 + 1;
    unsigned int v8 = *v37;
    if (*v37 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v37, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v37 + 2;
      }
    }
    uint64_t v37 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_57;
        }
        int v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v37 = v11 + 1;
          char v13 = *(_DWORD **)(a1 + 40);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 32), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 32) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            uint64_t v16 = sub_13D88C0(*(void *)(a1 + 24));
            uint64_t v15 = sub_188CDC8(a1 + 24, v16);
            uint64_t v12 = (unsigned __int8 *)v37;
          }
          int v11 = (char *)sub_139E60C(a3, v15, v12);
          uint64_t v37 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_65;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void **)(a1 + 96);
        if (!v17)
        {
          int v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v18 = (void *)*v18;
          }
          uint64_t v17 = sub_13DA934((uint64_t)v18);
          *(void *)(a1 + 96) = v17;
          uint64_t v7 = v37;
        }
        int v19 = sub_139E69C(a3, (uint64_t)v17, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 3u:
        if (v8 != 26) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 104);
        if (v20) {
          goto LABEL_36;
        }
        uint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v20 = sub_13D88C0((uint64_t)v21);
        *(void *)(a1 + 104) = v20;
        goto LABEL_35;
      case 4u:
        if (v8 != 34) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v20 = *(void *)(a1 + 112);
        if (v20) {
          goto LABEL_36;
        }
        int v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v22 = (void *)*v22;
        }
        uint64_t v20 = sub_13D88C0((uint64_t)v22);
        *(void *)(a1 + 112) = v20;
LABEL_35:
        uint64_t v7 = v37;
LABEL_36:
        int v19 = (char *)sub_139E60C(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_64;
      case 5u:
        if (v8 != 42) {
          goto LABEL_57;
        }
        int v23 = v7 - 1;
        while (1)
        {
          uint64_t v24 = (unsigned __int8 *)(v23 + 1);
          uint64_t v37 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 64);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 56) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_13D88C0(*(void *)(a1 + 48));
            uint64_t v27 = sub_188CDC8(a1 + 48, v28);
            uint64_t v24 = (unsigned __int8 *)v37;
          }
          int v23 = (char *)sub_139E60C(a3, v27, v24);
          uint64_t v37 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 42) {
            goto LABEL_65;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_57;
        }
        uint64_t v29 = v7 - 1;
        while (1)
        {
          uint64_t v30 = (unsigned __int8 *)(v29 + 1);
          uint64_t v37 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 88);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 80), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 80) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_13D88C0(*(void *)(a1 + 72));
            uint64_t v33 = sub_188CDC8(a1 + 72, v34);
            uint64_t v30 = (unsigned __int8 *)v37;
          }
          uint64_t v29 = (char *)sub_139E60C(a3, v33, v30);
          uint64_t v37 = v29;
          if (!v29) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 50) {
            goto LABEL_65;
          }
        }
      default:
LABEL_57:
        if (v8) {
          BOOL v35 = (v8 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v6)
          {
            int64_t v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int64_t v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v37;
          }
          int v19 = (char *)sub_1885AC0(v8, v36, v7, a3);
LABEL_64:
          uint64_t v37 = v19;
          if (!v19) {
            return 0;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
            return v37;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v37;
    }
  }
}

uint64_t sub_139E60C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139C9E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_139E69C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D01A0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_139E72C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_139D0F4(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if (v11)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v12 = *(void *)(a1 + 96);
    *__dst = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    __dst[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, __dst + 1);
    }
    else {
      uint64_t v14 = __dst + 2;
    }
    __dst = sub_13D03FC(v12, (unint64_t)v14, a3);
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 4) == 0) {
        goto LABEL_31;
      }
      goto LABEL_25;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v15 = *(void *)(a1 + 104);
  *__dst = 26;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  __dst[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, __dst + 1);
  }
  else {
    uint64_t v17 = __dst + 2;
  }
  __dst = sub_139D0F4(v15, (unint64_t)v17, a3);
  if ((v11 & 4) != 0)
  {
LABEL_25:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v18 = *(void *)(a1 + 112);
    *__dst = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    __dst[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, __dst + 1);
    }
    else {
      uint64_t v20 = __dst + 2;
    }
    __dst = sub_139D0F4(v18, (unint64_t)v20, a3);
  }
LABEL_31:
  int v21 = *(_DWORD *)(a1 + 56);
  if (v21)
  {
    for (int j = 0; j != v21; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      *__dst = 42;
      unsigned int v24 = *(_DWORD *)(v23 + 20);
      __dst[1] = v24;
      if (v24 > 0x7F) {
        uint64_t v25 = sub_188A9CC(v24, __dst + 1);
      }
      else {
        uint64_t v25 = __dst + 2;
      }
      __dst = sub_139D0F4(v23, (unint64_t)v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 80);
  if (v26)
  {
    for (int k = 0; k != v26; ++k)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v28 = *(void *)(*(void *)(a1 + 88) + 8 * k + 8);
      *__dst = 50;
      unsigned int v29 = *(_DWORD *)(v28 + 20);
      __dst[1] = v29;
      if (v29 > 0x7F) {
        uint64_t v30 = sub_188A9CC(v29, __dst + 1);
      }
      else {
        uint64_t v30 = __dst + 2;
      }
      __dst = sub_139D0F4(v28, (unint64_t)v30, a3);
    }
  }
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return __dst;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    uint64_t v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    uint64_t v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(__dst, v34, (int)v35);
    __dst += v36;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v34, v35, __dst);
}

uint64_t sub_139EAB4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_139D5E4(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_139D5E4(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(int *)(a1 + 80);
  uint64_t v16 = v9 + v15;
  uint64_t v17 = *(void *)(a1 + 88);
  if (v17) {
    uint64_t v18 = (uint64_t *)(v17 + 8);
  }
  else {
    uint64_t v18 = 0;
  }
  if (v15)
  {
    uint64_t v19 = 8 * v15;
    do
    {
      uint64_t v20 = *v18++;
      uint64_t v21 = sub_139D5E4(v20);
      v16 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      v19 -= 8;
    }
    while (v19);
  }
  int v22 = *(_DWORD *)(a1 + 16);
  if ((v22 & 7) != 0)
  {
    if (v22)
    {
      uint64_t v26 = sub_13D05B4(*(void *)(a1 + 96));
      v16 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v22 & 2) == 0)
      {
LABEL_24:
        if ((v22 & 4) == 0) {
          goto LABEL_26;
        }
        goto LABEL_25;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_24;
    }
    uint64_t v27 = sub_139D5E4(*(void *)(a1 + 104));
    v16 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v22 & 4) != 0)
    {
LABEL_25:
      uint64_t v23 = sub_139D5E4(*(void *)(a1 + 112));
      v16 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_26:
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v28 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v16 += v29;
  }
  *(_DWORD *)(a1 + 20) = v16;
  return v16;
}

void sub_139ECAC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D8C4((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148D8C4((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148D8C4((uint64_t *)(a1 + 72), v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 16);
  if ((v19 & 7) != 0)
  {
    if (v19)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v20 = *(void **)(a1 + 96);
      if (!v20)
      {
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (void *)*v22;
        }
        uint64_t v20 = sub_13DA934((uint64_t)v22);
        *(void *)(a1 + 96) = v20;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v23 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v23 = &off_2536768;
      }
      sub_139EF2C((uint64_t)v20, (uint64_t)v23);
    }
    if ((v19 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v24 = *(void *)(a1 + 104);
      if (!v24)
      {
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v24 = sub_13D88C0((uint64_t)v26);
        *(void *)(a1 + 104) = v24;
      }
      if (*(void *)(a2 + 104)) {
        uint64_t v27 = *(uint64_t (****)())(a2 + 104);
      }
      else {
        uint64_t v27 = &off_25354F0;
      }
      sub_139D830(v24, (uint64_t)v27);
    }
    if ((v19 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v28 = *(void *)(a1 + 112);
      if (!v28)
      {
        uint64_t v29 = *(void *)(a1 + 8);
        uint64_t v30 = (void *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          uint64_t v30 = (void *)*v30;
        }
        uint64_t v28 = sub_13D88C0((uint64_t)v30);
        *(void *)(a1 + 112) = v28;
      }
      if (*(void *)(a2 + 112)) {
        uint64_t v31 = *(uint64_t (****)())(a2 + 112);
      }
      else {
        uint64_t v31 = &off_25354F0;
      }
      sub_139D830(v28, (uint64_t)v31);
    }
  }
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_139EF2C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v8 = *(uint64_t (****)())(a2 + 40);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v9 = *(void *)(a1 + 40);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        int v11 = (void *)*v11;
      }
      sub_13D6A1C((uint64_t)v11);
      *(void *)(a1 + 40) = v9;
      uint64_t v8 = *(uint64_t (****)())(a2 + 40);
    }
    if (v8) {
      int v12 = v8;
    }
    else {
      int v12 = &off_2534750;
    }
    sub_136A7DC(v9, (uint64_t)v12);
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_139F024(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_139DB2C(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v5 = *(unsigned int *)(a1 + 56);
  while ((int)v5 >= 1)
  {
    uint64_t v6 = v5 - 1;
    char v7 = sub_139DB2C(*(void *)(*(void *)(a1 + 64) + 8 * v5));
    uint64_t v5 = v6;
    if ((v7 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v8 = *(unsigned int *)(a1 + 80);
  while ((int)v8 >= 1)
  {
    uint64_t v9 = v8 - 1;
    char v10 = sub_139DB2C(*(void *)(*(void *)(a1 + 88) + 8 * v8));
    uint64_t v8 = v9;
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  int v12 = *(_DWORD *)(a1 + 16);
  if (v12)
  {
    uint64_t v13 = *(void *)(a1 + 96);
    if (*(unsigned char *)(v13 + 16))
    {
      uint64_t result = sub_136ADBC(*(void *)(v13 + 40));
      if (!result) {
        return result;
      }
      int v12 = *(_DWORD *)(a1 + 16);
    }
  }
  if ((v12 & 2) != 0)
  {
    uint64_t result = sub_139DB2C(*(void *)(a1 + 104));
    if (!result) {
      return result;
    }
    int v12 = *(_DWORD *)(a1 + 16);
  }
  if ((v12 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_139DB2C(*(void *)(a1 + 112));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_139F10C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_139F138@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AdvisoriesInfo");
}

uint64_t sub_139F148(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AEC88;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  return a1;
}

void sub_139F1BC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_139F1EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148BEC8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_139F274(void *a1)
{
  sub_139F1EC(a1);

  operator delete();
}

unsigned char *sub_139F2AC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    char v4 = (unsigned char **)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1399C3C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if ((*(unsigned char *)(a1 + 40) & 7) != 0)
  {
    *(_DWORD *)(a1 + 80) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_139F348(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    return v35;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v35 + 1;
    unsigned int v8 = *v35;
    if (*v35 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v35, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v35 + 2;
      }
    }
    uint64_t v35 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_40;
        }
        int v11 = v7 - 1;
        while (1)
        {
          int v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v35 = v11 + 1;
          uint64_t v13 = *(_DWORD **)(a1 + 64);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 56), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 56) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            sub_13D86A8(*(void *)(a1 + 48));
            uint64_t v15 = sub_188CDC8(a1 + 48, v16);
            int v12 = (unsigned __int8 *)v35;
          }
          int v11 = sub_139F740(a3, v15, v12);
          uint64_t v35 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_50;
          }
        }
      case 2u:
        if (v8 != 16) {
          goto LABEL_40;
        }
        int v17 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
          if (!v35) {
            return 0;
          }
          unint64_t v18 = v30;
        }
        else
        {
          int v17 = v7 + 2;
LABEL_23:
          uint64_t v35 = v17;
        }
        if (v18 <= 7)
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 72) = v18;
          goto LABEL_50;
        }
        if (*v6) {
          unint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v34 = 2;
        goto LABEL_67;
      case 3u:
        if (v8 != 24) {
          goto LABEL_40;
        }
        uint64_t v21 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v22 = *v21;
        int v23 = v18 + (v22 << 7);
        unint64_t v18 = (v23 - 128);
        if (v22 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
          if (!v35) {
            return 0;
          }
          unint64_t v18 = v31;
        }
        else
        {
          uint64_t v21 = v7 + 2;
LABEL_30:
          uint64_t v35 = v21;
        }
        if (v18 <= 7)
        {
          *(_DWORD *)(a1 + 40) |= 2u;
          *(_DWORD *)(a1 + 76) = v18;
          goto LABEL_50;
        }
        if (*v6) {
          unint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v34 = 3;
        goto LABEL_67;
      case 4u:
        if (v8 != 32) {
          goto LABEL_40;
        }
        uint64_t v24 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v25 = *v24;
        int v26 = v18 + (v25 << 7);
        unint64_t v18 = (v26 - 128);
        if (v25 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v7, (v26 - 128));
          if (!v35) {
            return 0;
          }
          unint64_t v18 = v32;
        }
        else
        {
          uint64_t v24 = v7 + 2;
LABEL_37:
          uint64_t v35 = v24;
        }
        if (v18 > 7)
        {
          if (*v6) {
            unint64_t v33 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v34 = 4;
LABEL_67:
          sub_188C020(v34, v18, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 4u;
          *(_DWORD *)(a1 + 80) = v18;
        }
        goto LABEL_50;
      default:
LABEL_40:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (v8 - 8000 > 0x647)
          {
            if (*v6)
            {
              uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v7 = v35;
            }
            uint64_t v28 = sub_1885AC0(v8, v29, v7, a3);
          }
          else
          {
            uint64_t v28 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25355F8, (uint64_t *)(a1 + 8), a3);
          }
          uint64_t v35 = (char *)v28;
          if (!v28) {
            return 0;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            return v35;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v35;
    }
  }
}

char *sub_139F740(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1399CA4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_139F7D0(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1399FB4(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(int *)(a1 + 72);
    *a2 = 16;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v15 = *(int *)(a1 + 76);
    *a2 = 24;
    a2[1] = v15;
    if (v15 > 0x7F)
    {
      a2[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      a2[2] = v15 >> 7;
      a2 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *a2++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v18 = *(int *)(a1 + 80);
    *a2 = 32;
    a2[1] = v18;
    if (v18 > 0x7F)
    {
      a2[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      a2[2] = v18 >> 7;
      a2 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *a2++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 1201, a2, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return a2;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    uint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    uint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(a2, v24, (int)v25);
    a2 += v26;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, a2);
}

uint64_t sub_139FAB0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_139A238(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 7) != 0)
  {
    if (v10)
    {
      int v11 = *(_DWORD *)(a1 + 72);
      if (v11 < 0) {
        uint64_t v12 = 11;
      }
      else {
        uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v12;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_24;
        }
        goto LABEL_20;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    int v13 = *(_DWORD *)(a1 + 76);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v14;
    if ((v10 & 4) != 0)
    {
LABEL_20:
      int v15 = *(_DWORD *)(a1 + 80);
      if (v15 < 0) {
        uint64_t v16 = 11;
      }
      else {
        uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v16;
    }
  }
LABEL_24:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v4 += v20;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_139FC18(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148D950((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 40) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_139FD3C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    return sub_139FD88(a1 + 48);
  }
  return result;
}

BOOL sub_139FD88(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      BOOL result = sub_15B1FC0(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_139FDF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RestrictionZoneInfo");
}

void *sub_139FE08(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_139FE7C(void *a1)
{
  sub_139FE08(a1);

  operator delete();
}

uint64_t sub_139FEB4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_139FED8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    uint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      uint64_t v14 = v7 + 2;
    }
    uint64_t v25 = v14;
LABEL_26:
    if (v15 > 3)
    {
      if (*v6) {
        unint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    unint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      uint64_t v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      unint64_t v18 = v7 + 2;
LABEL_31:
      uint64_t v25 = v18;
    }
    if (v15 <= 3)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      unint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_13A0130(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13A02D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13A0394()
{
  return 1;
}

void *sub_13A039C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutePlanningInfo.LabelAction");
}

uint64_t sub_13A03AC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13A0430((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_13A0430(uint64_t (***result)()))()
{
  if (result != &off_2535670)
  {
    int v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_13783C0(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[4];
    if (v3)
    {
      sub_1374224(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_1374224(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[6];
    if (v5)
    {
      sub_139DF58(v5);
      operator delete();
    }
    uint64_t v6 = (uint64_t)v1[7];
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = (uint64_t)v1[8];
    if (v7)
    {
      sub_13D2774(v7);
      operator delete();
    }
    uint64_t v8 = (uint64_t)v1[9];
    if (v8)
    {
      sub_13D2774(v8);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[10];
    if (result)
    {
      sub_139FE08(result);
      operator delete();
    }
  }
  return result;
}

void sub_13A057C(uint64_t a1)
{
  sub_13A03AC(a1);

  operator delete();
}

uint64_t sub_13A05B4(uint64_t result)
{
  uint64_t v1 = result;
  char v2 = *(unsigned char *)(result + 16);
  if (!v2) {
    goto LABEL_11;
  }
  if (*(unsigned char *)(result + 16))
  {
    uint64_t result = sub_1378560(*(void *)(result + 24));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_17;
    }
  }
  else if ((*(unsigned char *)(result + 16) & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_1369E6C(*(void *)(v1 + 32));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 40));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  uint64_t result = sub_139E0A4(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t result = sub_1369F48(*(void *)(v1 + 64));
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_19:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
  if ((v2 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v2 & 0x40) == 0) {
    goto LABEL_9;
  }
LABEL_21:
  uint64_t result = sub_1369F48(*(void *)(v1 + 72));
  if (v2 < 0) {
LABEL_10:
  }
    uint64_t result = sub_139FEB4(*(void *)(v1 + 80));
LABEL_11:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13A0688(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v31 = a2;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    return v31;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v31 + 1;
    unsigned int v8 = *v31;
    if (*v31 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v31, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v31 + 2;
      }
    }
    unint64_t v31 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v12 = (void *)*v12;
          }
          sub_13D6D2C((uint64_t)v12);
          uint64_t v11 = v13;
          *(void *)(a1 + 24) = v13;
          uint64_t v7 = v31;
        }
        uint64_t v14 = (char *)sub_13A0A44(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_63;
      case 2u:
        if (v8 != 18) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 32);
        if (v15) {
          goto LABEL_37;
        }
        int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v15 = v17;
        *(void *)(a1 + 32) = v17;
        goto LABEL_36;
      case 3u:
        if (v8 != 26) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 40);
        if (v15) {
          goto LABEL_37;
        }
        uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v18 = (void *)*v18;
        }
        sub_13D6A1C((uint64_t)v18);
        uint64_t v15 = v19;
        *(void *)(a1 + 40) = v19;
        goto LABEL_36;
      case 4u:
        if (v8 != 34) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v20 = *(void *)(a1 + 48);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_13D8978((uint64_t)v21);
          *(void *)(a1 + 48) = v20;
          uint64_t v7 = v31;
        }
        uint64_t v14 = sub_133904C(a3, v20, (unsigned __int8 *)v7);
        goto LABEL_63;
      case 5u:
        if (v8 != 42) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v15 = *(void *)(a1 + 56);
        if (v15) {
          goto LABEL_37;
        }
        unint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v22 = (void *)*v22;
        }
        sub_13D6A1C((uint64_t)v22);
        uint64_t v15 = v23;
        *(void *)(a1 + 56) = v23;
LABEL_36:
        uint64_t v7 = v31;
LABEL_37:
        uint64_t v14 = (char *)sub_13319DC(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_63;
      case 6u:
        if (v8 != 50) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v24 = *(void *)(a1 + 64);
        if (v24) {
          goto LABEL_49;
        }
        uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v25 = (void *)*v25;
        }
        uint64_t v24 = sub_13DAB08((uint64_t)v25);
        *(void *)(a1 + 64) = v24;
        goto LABEL_48;
      case 7u:
        if (v8 != 58) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v24 = *(void *)(a1 + 72);
        if (v24) {
          goto LABEL_49;
        }
        uint64_t v26 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v24 = sub_13DAB08((uint64_t)v26);
        *(void *)(a1 + 72) = v24;
LABEL_48:
        uint64_t v7 = v31;
LABEL_49:
        uint64_t v14 = (char *)sub_1323390(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_63;
      case 8u:
        if (v8 != 66) {
          goto LABEL_56;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        BOOL v27 = *(void **)(a1 + 80);
        if (!v27)
        {
          uint64_t v28 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v28 = (void *)*v28;
          }
          BOOL v27 = sub_13D8A84((uint64_t)v28);
          *(void *)(a1 + 80) = v27;
          uint64_t v7 = v31;
        }
        uint64_t v14 = sub_13A0AD4(a3, (uint64_t)v27, (unsigned __int8 *)v7);
        goto LABEL_63;
      default:
LABEL_56:
        if (v8) {
          BOOL v29 = (v8 & 7) == 4;
        }
        else {
          BOOL v29 = 1;
        }
        if (!v29)
        {
          if (*v6)
          {
            unint64_t v30 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v31;
          }
          uint64_t v14 = (char *)sub_1885AC0(v8, v30, v7, a3);
LABEL_63:
          unint64_t v31 = v14;
          if (!v14) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
            return v31;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v31;
    }
  }
}

uint64_t sub_13A0A44(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_137862C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A0AD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139FED8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13A0B64(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_13788EC(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1374B08(v13, v15, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  unsigned char *v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_139E72C(v16, v18, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  unsigned char *v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    unint64_t v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    unint64_t v21 = v4 + 2;
  }
  char v4 = sub_1374B08(v19, v21, a3);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 64);
  unsigned char *v4 = 50;
  unsigned int v23 = *(_DWORD *)(v22 + 44);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  char v4 = sub_13D2F58(v22, v24, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_58;
    }
    goto LABEL_52;
  }
LABEL_46:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v25 = *(void *)(a1 + 72);
  unsigned char *v4 = 58;
  unsigned int v26 = *(_DWORD *)(v25 + 44);
  v4[1] = v26;
  if (v26 > 0x7F) {
    BOOL v27 = sub_188A9CC(v26, v4 + 1);
  }
  else {
    BOOL v27 = v4 + 2;
  }
  char v4 = sub_13D2F58(v25, v27, a3);
  if ((v6 & 0x80) != 0)
  {
LABEL_52:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 80);
    unsigned char *v4 = 66;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      unint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      unint64_t v30 = v4 + 2;
    }
    char v4 = sub_13A0130(v28, (unint64_t)v30, a3);
  }
LABEL_58:
  uint64_t v31 = *(void *)(a1 + 8);
  if ((v31 & 1) == 0) {
    return v4;
  }
  unint64_t v33 = v31 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v33 + 31) < 0)
  {
    int v34 = *(void **)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 16);
  }
  else
  {
    int v34 = (void *)(v33 + 8);
    LODWORD(v35) = *(unsigned __int8 *)(v33 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v35)
  {
    uint64_t v36 = (int)v35;
    memcpy(v4, v34, (int)v35);
    v4 += v36;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v34, v35, v4);
}

uint64_t sub_13A0F5C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  if (!v2)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v4 = sub_1378B68(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((*(unsigned char *)(a1 + 16) & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = sub_1374EEC(*(void *)(a1 + 40));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v10 = sub_139EAB4(*(void *)(a1 + 48));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_11:
    if ((v2 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v11 = sub_1374EEC(*(void *)(a1 + 56));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_12:
    if ((v2 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v12 = sub_13D3304(*(void *)(a1 + 64));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_13:
    if ((v2 & 0x80) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_21:
  uint64_t v13 = sub_13D3304(*(void *)(a1 + 72));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v2 < 0)
  {
LABEL_14:
    uint64_t v6 = sub_13A02D4(*(void *)(a1 + 80));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_13A1168(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  if (!v4) {
    goto LABEL_76;
  }
  if (*(unsigned char *)(a2 + 16))
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      sub_13D6D2C((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    if (*(void *)(a2 + 24)) {
      unsigned int v8 = *(uint64_t (****)())(a2 + 24);
    }
    else {
      unsigned int v8 = &off_2534910;
    }
    sub_1378CF0(v5, (uint64_t)v8);
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v9 = *(void *)(a1 + 32);
    if (!v9)
    {
      uint64_t v10 = *(void *)(a1 + 8);
      uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        uint64_t v11 = (void *)*v11;
      }
      sub_13D6A1C((uint64_t)v11);
      *(void *)(a1 + 32) = v9;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v12 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v12 = &off_2534750;
    }
    sub_136A7DC(v9, (uint64_t)v12);
    if ((v4 & 4) == 0)
    {
LABEL_13:
      if ((v4 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_13;
  }
  *(_DWORD *)(a1 + 16) |= 4u;
  uint64_t v13 = *(void *)(a1 + 40);
  if (!v13)
  {
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (void *)*v15;
    }
    sub_13D6A1C((uint64_t)v15);
    *(void *)(a1 + 40) = v13;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v16 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v16 = &off_2534750;
  }
  sub_136A7DC(v13, (uint64_t)v16);
  if ((v4 & 8) == 0)
  {
LABEL_14:
    if ((v4 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_40;
  }
LABEL_32:
  *(_DWORD *)(a1 + 16) |= 8u;
  uint64_t v17 = *(void *)(a1 + 48);
  if (!v17)
  {
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (void *)*v19;
    }
    uint64_t v17 = sub_13D8978((uint64_t)v19);
    *(void *)(a1 + 48) = v17;
  }
  if (*(void *)(a2 + 48)) {
    unsigned int v20 = *(uint64_t (****)())(a2 + 48);
  }
  else {
    unsigned int v20 = &off_2535580;
  }
  sub_139ECAC(v17, (uint64_t)v20);
  if ((v4 & 0x10) != 0)
  {
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v21 = *(void *)(a1 + 56);
    if (!v21)
    {
      uint64_t v22 = *(void *)(a1 + 8);
      unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        unsigned int v23 = (void *)*v23;
      }
      sub_13D6A1C((uint64_t)v23);
      *(void *)(a1 + 56) = v21;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v24 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v24 = &off_2534750;
    }
    sub_136A7DC(v21, (uint64_t)v24);
  }
LABEL_48:
  if ((v4 & 0x20) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v25 = *(void *)(a1 + 64);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      BOOL v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        BOOL v27 = (void *)*v27;
      }
      uint64_t v25 = sub_13DAB08((uint64_t)v27);
      *(void *)(a1 + 64) = v25;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v28 = &off_2536850;
    }
    sub_136AA7C(v25, (uint64_t)v28);
    if ((v4 & 0x40) == 0)
    {
LABEL_50:
      if ((v4 & 0x80) == 0) {
        goto LABEL_76;
      }
      goto LABEL_68;
    }
  }
  else if ((v4 & 0x40) == 0)
  {
    goto LABEL_50;
  }
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v29 = *(void *)(a1 + 72);
  if (!v29)
  {
    uint64_t v30 = *(void *)(a1 + 8);
    uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
    if (v30) {
      uint64_t v31 = (void *)*v31;
    }
    uint64_t v29 = sub_13DAB08((uint64_t)v31);
    *(void *)(a1 + 72) = v29;
  }
  if (*(void *)(a2 + 72)) {
    unint64_t v32 = *(uint64_t (****)())(a2 + 72);
  }
  else {
    unint64_t v32 = &off_2536850;
  }
  sub_136AA7C(v29, (uint64_t)v32);
  if (v4 < 0)
  {
LABEL_68:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    unint64_t v33 = *(std::string **)(a1 + 80);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      unint64_t v33 = (std::string *)sub_13D8A84((uint64_t)v35);
      *(void *)(a1 + 80) = v33;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v36 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v36 = &off_2535650;
    }
    sub_117EF04(v33, (uint64_t)v36);
  }
LABEL_76:
  uint64_t v37 = *(void *)(a2 + 8);
  if (v37)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v37 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13A1434(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_1378EB8(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_139F024(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) == 0) {
    return 1;
  }
  uint64_t result = sub_136AE2C(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13A14E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RoutePlanningInfo");
}

uint64_t sub_13A14F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25356C8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_139910C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13A15AC(uint64_t a1)
{
  sub_13A14F4(a1);

  operator delete();
}

uint64_t sub_13A15E4(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1399294(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13A1640(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      sub_13D8628((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      uint64_t v6 = v17;
    }
    uint64_t v12 = sub_13A1798(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

char *sub_13A1798(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139932C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13A1828(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    char v4 = sub_13995A4(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13A1938(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_13997FC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_13A19C0(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      sub_13D8628((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_25353D8;
    }
    sub_139993C(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13A1A68(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_1399AC8(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13A1A94@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.OutOfMapsAlertsInfo");
}

uint64_t sub_13A1AA4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AEE88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

void sub_13A1B20(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13A1B50(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13A1BC4(void *a1)
{
  sub_13A1B50(a1);

  operator delete();
}

uint64_t sub_13A1BFC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13A1C14(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(unsigned char *)(a1 + 25) = v16 != 0;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(unsigned char *)(a1 + 25) = v22 != 0;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(unsigned char *)(a1 + 24) = v19 != 0;
      goto LABEL_30;
    }
    unsigned int v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_13A1E24(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 25);
    unsigned char *v4 = 16;
    v4[1] = v8;
    v4 += 2;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_13A1F40(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 3) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13A1F98()
{
  return 1;
}

void *sub_13A1FA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.NavigabilityInfo");
}

uint64_t sub_13A1FB0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AEF08;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = a2;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 168) = a2;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = a2;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = a2;
  *(_DWORD *)(a1 + 296) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 264) = 0u;
  *(_OWORD *)(a1 + 280) = 0u;
  return a1;
}

void sub_13A205C(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13A208C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13A2174((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 216);
  sub_148C0C8((void *)(a1 + 192));
  sub_13693AC((void *)(a1 + 168));
  sub_148C048((void *)(a1 + 144));
  sub_148BFC8((void *)(a1 + 120));
  sub_148BF48((void *)(a1 + 96));
  sub_148B948((void *)(a1 + 72));
  sub_1367118((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_13A2174(uint64_t (***result)()))()
{
  if (result != &off_2535708)
  {
    int v1 = result;
    uint64_t v2 = result[29];
    if (v2)
    {
      sub_13975C0(v2);
      operator delete();
    }
    uint64_t v3 = v1[30];
    if (v3)
    {
      sub_1397E24(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[31];
    if (v4)
    {
      sub_13A03AC(v4);
      operator delete();
    }
    uint64_t v5 = v1[32];
    if (v5)
    {
      sub_139F1EC(v5);
      operator delete();
    }
    uint64_t v6 = (uint64_t)v1[33];
    if (v6)
    {
      sub_13A14F4(v6);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[34];
    if (result)
    {
      sub_13975C0(result);
      operator delete();
    }
  }
  return result;
}

void sub_13A2280(uint64_t a1)
{
  sub_13A208C(a1);

  operator delete();
}

uint64_t sub_13A22B8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13A6644(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_15B5354(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (unsigned char **)(*(void *)(a1 + 112) + 8);
    do
    {
      unint64_t v11 = *v10++;
      uint64_t result = (uint64_t)sub_13BFD78(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (unsigned char **)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = (uint64_t)sub_13BC9E8(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_13BB8E4(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 176);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 184) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_13B9618(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 176) = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 200);
  if ((int)v21 >= 1)
  {
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 208) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_13B4694(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 200) = 0;
  }
  *(_DWORD *)(a1 + 216) = 0;
  int v24 = *(_DWORD *)(a1 + 40);
  if ((v24 & 0x3F) == 0) {
    goto LABEL_40;
  }
  if (v24) {
    uint64_t result = sub_139766C(*(void *)(a1 + 232));
  }
  if ((v24 & 2) != 0)
  {
    uint64_t v25 = *(void *)(a1 + 240);
    char v26 = *(unsigned char *)(v25 + 8);
    uint64_t result = v25 + 8;
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v26) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v24 & 4) == 0)
  {
    if ((v24 & 8) == 0) {
      goto LABEL_37;
    }
LABEL_49:
    uint64_t result = (uint64_t)sub_139F2AC(*(void *)(a1 + 256));
    if ((v24 & 0x10) == 0)
    {
LABEL_38:
      if ((v24 & 0x20) == 0) {
        goto LABEL_40;
      }
      goto LABEL_39;
    }
    goto LABEL_50;
  }
  uint64_t result = sub_13A05B4(*(void *)(a1 + 248));
  if ((v24 & 8) != 0) {
    goto LABEL_49;
  }
LABEL_37:
  if ((v24 & 0x10) == 0) {
    goto LABEL_38;
  }
LABEL_50:
  uint64_t result = sub_13A15E4(*(void *)(a1 + 264));
  if ((v24 & 0x20) != 0) {
LABEL_39:
  }
    uint64_t result = sub_139766C(*(void *)(a1 + 272));
LABEL_40:
  if ((v24 & 0xC0) != 0) {
    *(void *)(a1 + 280) = 0;
  }
  if ((v24 & 0x700) != 0)
  {
    *(_DWORD *)(a1 + 296) = 0;
    *(void *)(a1 + 288) = 0;
  }
  char v28 = *(unsigned char *)(a1 + 8);
  uint64_t v27 = a1 + 8;
  *(_DWORD *)(v27 + 32) = 0;
  if (v28)
  {
    return sub_188B4AC((uint64_t *)v27);
  }
  return result;
}

char *sub_13A24C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v107 = a2;
  if (sub_11947B8((uint64_t)a3, &v107, a3[11].i32[1]))
  {
    int v103 = 0;
    goto LABEL_3;
  }
  int v103 = 0;
  unsigned int v105 = (uint64_t *)(a1 + 168);
  unsigned int v106 = (uint64_t *)(a1 + 192);
  unsigned int v104 = (uint64_t *)(a1 + 144);
  unsigned int v102 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v6 = v107 + 1;
    unsigned int v7 = *v107;
    if (*v107 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v107, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = v107 + 2;
      }
    }
    unsigned int v107 = v6;
    switch(v7 >> 3)
    {
      case 1u:
        if (v7 != 8) {
          goto LABEL_182;
        }
        v103 |= 0x40u;
        unint64_t v11 = v6 + 1;
        int v12 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_14;
        }
        int v13 = *v11;
        int v12 = v12 + (v13 << 7) - 128;
        if ((v13 & 0x80000000) == 0)
        {
          unint64_t v11 = v6 + 2;
LABEL_14:
          unsigned int v107 = v11;
          *(_DWORD *)(a1 + 280) = v12;
          goto LABEL_168;
        }
        unsigned int v91 = (char *)sub_188C0D0((uint64_t)v6, v12);
        unsigned int v107 = v91;
        *(_DWORD *)(a1 + 280) = v92;
        if (!v91) {
          goto LABEL_207;
        }
        goto LABEL_168;
      case 2u:
        if (v7 != 18) {
          goto LABEL_182;
        }
        uint64_t v14 = v6 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          unsigned int v107 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 64);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 56), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 56) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_13D8E84(*(void *)(a1 + 48));
            uint64_t v18 = sub_188CDC8(a1 + 48, v19);
            uint64_t v15 = (unsigned __int8 *)v107;
          }
          uint64_t v14 = sub_134AF6C(a3, v18, v15);
          unsigned int v107 = v14;
          if (!v14) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_168;
          }
        }
      case 3u:
        if (v7 != 24) {
          goto LABEL_182;
        }
        uint64_t v20 = v6 + 1;
        unint64_t v21 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          unsigned int v107 = (char *)sub_188C138((uint64_t)v6, (v23 - 128));
          if (!v107) {
            goto LABEL_207;
          }
          unint64_t v21 = v93;
        }
        else
        {
          uint64_t v20 = v6 + 2;
LABEL_29:
          unsigned int v107 = v20;
        }
        if (v21 <= 6)
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          *(_DWORD *)(a1 + 284) = v21;
          goto LABEL_168;
        }
        if (*v102) {
          v100 = (std::string *)((*v102 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v100 = (std::string *)sub_188DBD8(v102);
        }
        int v101 = 3;
        goto LABEL_200;
      case 4u:
        if (v7 != 32) {
          goto LABEL_182;
        }
        int v24 = v6 + 1;
        unint64_t v21 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v25 = *v24;
        int v26 = v21 + (v25 << 7);
        unint64_t v21 = (v26 - 128);
        if (v25 < 0)
        {
          unsigned int v107 = (char *)sub_188C138((uint64_t)v6, (v26 - 128));
          if (!v107) {
            goto LABEL_207;
          }
          unint64_t v21 = v94;
        }
        else
        {
          int v24 = v6 + 2;
LABEL_36:
          unsigned int v107 = v24;
        }
        if (v21 <= 1)
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 288) = v21;
          goto LABEL_168;
        }
        if (*v102) {
          v100 = (std::string *)((*v102 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v100 = (std::string *)sub_188DBD8(v102);
        }
        int v101 = 4;
        goto LABEL_200;
      case 5u:
        if (v7 != 40) {
          goto LABEL_182;
        }
        uint64_t v27 = v6 + 1;
        unint64_t v21 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v28 = *v27;
        int v29 = v21 + (v28 << 7);
        unint64_t v21 = (v29 - 128);
        if (v28 < 0)
        {
          unsigned int v107 = (char *)sub_188C138((uint64_t)v6, (v29 - 128));
          if (!v107) {
            goto LABEL_207;
          }
          unint64_t v21 = v95;
        }
        else
        {
          uint64_t v27 = v6 + 2;
LABEL_43:
          unsigned int v107 = v27;
        }
        if (v21 > 5)
        {
          if (*v102) {
            v100 = (std::string *)((*v102 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            v100 = (std::string *)sub_188DBD8(v102);
          }
          int v101 = 5;
LABEL_200:
          sub_188C020(v101, v21, v100);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x200u;
          *(_DWORD *)(a1 + 292) = v21;
        }
        goto LABEL_168;
      case 6u:
        if (v7 != 50) {
          goto LABEL_182;
        }
        uint64_t v30 = v6 - 1;
        while (1)
        {
          uint64_t v31 = (unsigned __int8 *)(v30 + 1);
          unsigned int v107 = v30 + 1;
          unint64_t v32 = *(_DWORD **)(a1 + 88);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 80), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 80) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            uint64_t v35 = sub_15C1DB0(*(void *)(a1 + 72));
            uint64_t v34 = sub_188CDC8(a1 + 72, v35);
            uint64_t v31 = (unsigned __int8 *)v107;
          }
          uint64_t v30 = (char *)sub_1382E38(a3, v34, v31);
          unsigned int v107 = v30;
          if (!v30) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 50) {
            goto LABEL_168;
          }
        }
      case 7u:
        if (v7 != 56) {
          goto LABEL_182;
        }
        v103 |= 0x400u;
        uint64_t v36 = v6 + 1;
        int v37 = *v6;
        if ((*v6 & 0x80000000) == 0) {
          goto LABEL_60;
        }
        int v38 = *v36;
        int v37 = v37 + (v38 << 7) - 128;
        if (v38 < 0)
        {
          unsigned int v96 = (char *)sub_188C0D0((uint64_t)v6, v37);
          unsigned int v107 = v96;
          *(_DWORD *)(a1 + 296) = v97;
          if (!v96) {
            goto LABEL_207;
          }
        }
        else
        {
          uint64_t v36 = v6 + 2;
LABEL_60:
          unsigned int v107 = v36;
          *(_DWORD *)(a1 + 296) = v37;
        }
        goto LABEL_168;
      case 8u:
        if (v7 != 66) {
          goto LABEL_182;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v39 = *(void *)(a1 + 232);
        if (v39) {
          goto LABEL_166;
        }
        unint64_t v40 = (void *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v102) {
          unint64_t v40 = (void *)*v40;
        }
        uint64_t v39 = sub_13D84A8((uint64_t)v40);
        *(void *)(a1 + 232) = v39;
        goto LABEL_165;
      case 9u:
        if (v7 != 74) {
          goto LABEL_182;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v41 = *(void *)(a1 + 240);
        if (!v41)
        {
          uint64_t v42 = (void *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v102) {
            uint64_t v42 = (void *)*v42;
          }
          uint64_t v41 = sub_13D8528((uint64_t)v42);
          *(void *)(a1 + 240) = v41;
          uint64_t v6 = v107;
        }
        unint64_t v43 = sub_13A309C(a3, v41, (unsigned __int8 *)v6);
        goto LABEL_167;
      case 0xAu:
        if (v7 != 82) {
          goto LABEL_182;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v44 = *(void *)(a1 + 248);
        if (!v44)
        {
          uint64_t v45 = (void *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v102) {
            uint64_t v45 = (void *)*v45;
          }
          sub_13D8AFC((uint64_t)v45);
          uint64_t v44 = v46;
          *(void *)(a1 + 248) = v46;
          uint64_t v6 = v107;
        }
        unint64_t v43 = sub_13A312C(a3, v44, (unsigned __int8 *)v6);
        goto LABEL_167;
      case 0xBu:
        if (v7 != 90) {
          goto LABEL_182;
        }
        uint64_t v47 = v6 - 1;
        while (1)
        {
          unint64_t v48 = (unsigned __int8 *)(v47 + 1);
          unsigned int v107 = v47 + 1;
          int v49 = *(_DWORD **)(a1 + 112);
          if (v49 && (uint64_t v50 = *(int *)(a1 + 104), (int)v50 < *v49))
          {
            *(_DWORD *)(a1 + 104) = v50 + 1;
            uint64_t v51 = *(void *)&v49[2 * v50 + 2];
          }
          else
          {
            uint64_t v52 = sub_13D9A2C(*(void *)(a1 + 96));
            uint64_t v51 = sub_188CDC8(a1 + 96, (uint64_t)v52);
            unint64_t v48 = (unsigned __int8 *)v107;
          }
          uint64_t v47 = sub_13A31BC(a3, v51, v48);
          unsigned int v107 = v47;
          if (!v47) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v47 || *v47 != 90) {
            goto LABEL_168;
          }
        }
      case 0xCu:
        if (v7 != 98) {
          goto LABEL_182;
        }
        unint64_t v53 = v6 - 1;
        while (1)
        {
          BOOL v54 = (unsigned __int8 *)(v53 + 1);
          unsigned int v107 = v53 + 1;
          unint64_t v55 = *(_DWORD **)(a1 + 136);
          if (v55 && (uint64_t v56 = *(int *)(a1 + 128), (int)v56 < *v55))
          {
            *(_DWORD *)(a1 + 128) = v56 + 1;
            uint64_t v57 = *(void *)&v55[2 * v56 + 2];
          }
          else
          {
            int v58 = sub_13D9774(*(void *)(a1 + 120));
            uint64_t v57 = sub_188CDC8(a1 + 120, (uint64_t)v58);
            BOOL v54 = (unsigned __int8 *)v107;
          }
          unint64_t v53 = (char *)sub_13A324C(a3, v57, v54);
          unsigned int v107 = v53;
          if (!v53) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v53 || *v53 != 98) {
            goto LABEL_168;
          }
        }
      case 0xDu:
        if (v7 != 106) {
          goto LABEL_182;
        }
        uint64_t v59 = v6 - 1;
        while (1)
        {
          int v60 = (unsigned __int8 *)(v59 + 1);
          unsigned int v107 = v59 + 1;
          uint64_t v61 = *(_DWORD **)(a1 + 160);
          if (v61 && (uint64_t v62 = *(int *)(a1 + 152), (int)v62 < *v61))
          {
            *(_DWORD *)(a1 + 152) = v62 + 1;
            uint64_t v63 = *(void *)&v61[2 * v62 + 2];
          }
          else
          {
            sub_13D96E0(*v104);
            uint64_t v63 = sub_188CDC8((uint64_t)v104, v64);
            int v60 = (unsigned __int8 *)v107;
          }
          uint64_t v59 = (char *)sub_13A32DC(a3, v63, v60);
          unsigned int v107 = v59;
          if (!v59) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v59 || *v59 != 106) {
            goto LABEL_168;
          }
        }
      case 0xEu:
        if (v7 != 114) {
          goto LABEL_182;
        }
        uint64_t v65 = v6 - 1;
        while (1)
        {
          uint64_t v66 = (unsigned __int8 *)(v65 + 1);
          unsigned int v107 = v65 + 1;
          uint64_t v67 = *(_DWORD **)(a1 + 184);
          if (v67 && (uint64_t v68 = *(int *)(a1 + 176), (int)v68 < *v67))
          {
            *(_DWORD *)(a1 + 176) = v68 + 1;
            uint64_t v69 = *(void *)&v67[2 * v68 + 2];
          }
          else
          {
            uint64_t v70 = sub_13D9608(*v105);
            uint64_t v69 = sub_188CDC8((uint64_t)v105, v70);
            uint64_t v66 = (unsigned __int8 *)v107;
          }
          uint64_t v65 = (char *)sub_11AB844(a3, v69, v66);
          unsigned int v107 = v65;
          if (!v65) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v65 || *v65 != 114) {
            goto LABEL_168;
          }
        }
      case 0xFu:
        if (v7 != 122) {
          goto LABEL_182;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v71 = *(void *)(a1 + 256);
        if (!v71)
        {
          uint64_t v72 = (void *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v102) {
            uint64_t v72 = (void *)*v72;
          }
          uint64_t v71 = sub_13D8A28((uint64_t)v72);
          *(void *)(a1 + 256) = v71;
          uint64_t v6 = v107;
        }
        unint64_t v43 = sub_13A336C(a3, v71, (unsigned __int8 *)v6);
        goto LABEL_167;
      case 0x10u:
        if (v7 != 130) {
          goto LABEL_182;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v73 = *(void **)(a1 + 264);
        if (!v73)
        {
          int v74 = (void *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v102) {
            int v74 = (void *)*v74;
          }
          uint64_t v73 = sub_13D8B80((uint64_t)v74);
          *(void *)(a1 + 264) = v73;
          uint64_t v6 = v107;
        }
        unint64_t v43 = sub_13A33FC(a3, (uint64_t)v73, (unsigned __int8 *)v6);
        goto LABEL_167;
      case 0x11u:
        if (v7 != 138) {
          goto LABEL_182;
        }
        uint64_t v75 = v6 - 2;
        while (1)
        {
          uint64_t v76 = (unsigned __int8 *)(v75 + 2);
          unsigned int v107 = v75 + 2;
          int v77 = *(_DWORD **)(a1 + 208);
          if (v77 && (uint64_t v78 = *(int *)(a1 + 200), (int)v78 < *v77))
          {
            *(_DWORD *)(a1 + 200) = v78 + 1;
            uint64_t v79 = *(void *)&v77[2 * v78 + 2];
          }
          else
          {
            sub_13D9384(*v106);
            uint64_t v79 = sub_188CDC8((uint64_t)v106, v80);
            uint64_t v76 = (unsigned __int8 *)v107;
          }
          uint64_t v75 = (char *)sub_13A348C(a3, v79, v76);
          unsigned int v107 = v75;
          if (!v75) {
            goto LABEL_207;
          }
          if (*(void *)a3 <= (unint64_t)v75 || *(_WORD *)v75 != 394) {
            goto LABEL_168;
          }
        }
      case 0x12u:
        if (v7 == 144)
        {
          uint64_t v81 = v6 - 2;
          while (1)
          {
            unsigned int v107 = v81 + 2;
            unint64_t v82 = v81[2];
            uint64_t v83 = v81 + 3;
            if (v81[2] < 0)
            {
              int v84 = *v83;
              int v85 = v82 + (v84 << 7);
              unint64_t v82 = (v85 - 128);
              if (v84 < 0)
              {
                unsigned int v107 = (char *)sub_188C138((uint64_t)(v81 + 2), (v85 - 128));
                if (!v107) {
                  goto LABEL_207;
                }
                unint64_t v82 = v88;
                goto LABEL_146;
              }
              uint64_t v83 = v81 + 4;
            }
            unsigned int v107 = v83;
LABEL_146:
            if (v82 > 1)
            {
              if (*v102) {
                unsigned int v89 = (std::string *)((*v102 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unsigned int v89 = (std::string *)sub_188DBD8(v102);
              }
              sub_188C020(18, v82, v89);
            }
            else
            {
              uint64_t v86 = *(unsigned int *)(a1 + 216);
              if (v86 == *(_DWORD *)(a1 + 220))
              {
                int v87 = v86 + 1;
                sub_188C80C((unsigned int *)(a1 + 216), v86 + 1);
                *(_DWORD *)(*(void *)(a1 + 224) + 4 * v86) = v82;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 224) + 4 * v86) = v82;
                int v87 = v86 + 1;
              }
              *(_DWORD *)(a1 + 216) = v87;
            }
            uint64_t v81 = v107;
            if (*(void *)a3 <= (unint64_t)v107 || *(_WORD *)v107 != 400) {
              goto LABEL_168;
            }
          }
        }
        if (v7 == 146)
        {
          *(void *)&long long v108 = a1 + 216;
          *((void *)&v108 + 1) = sub_1369B74;
          uint64_t v109 = a1 + 8;
          int v110 = 18;
          unint64_t v43 = sub_1112E88((uint64_t)a3, v6, &v108);
          goto LABEL_167;
        }
LABEL_182:
        if (v7) {
          BOOL v98 = (v7 & 7) == 4;
        }
        else {
          BOOL v98 = 1;
        }
        if (!v98)
        {
          if (v7 - 8000 > 0x647)
          {
            if (*v102)
            {
              int v99 = (std::string *)((*v102 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v99 = (std::string *)sub_188DBD8(v102);
              uint64_t v6 = v107;
            }
            unint64_t v43 = (char *)sub_1885AC0(v7, v99, v6, a3);
          }
          else
          {
            unint64_t v43 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2535708, v102, a3);
          }
LABEL_167:
          unsigned int v107 = v43;
          if (!v43) {
            goto LABEL_207;
          }
LABEL_168:
          if (sub_11947B8((uint64_t)a3, &v107, a3[11].i32[1])) {
            goto LABEL_3;
          }
          continue;
        }
        if (v6) {
          a3[10].i32[0] = v7 - 1;
        }
        else {
LABEL_207:
        }
          unsigned int v107 = 0;
LABEL_3:
        *(_DWORD *)(a1 + 40) |= v103;
        return v107;
      case 0x13u:
        if (v7 != 154) {
          goto LABEL_182;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v39 = *(void *)(a1 + 272);
        if (v39) {
          goto LABEL_166;
        }
        uint64_t v90 = (void *)(*v102 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v102) {
          uint64_t v90 = (void *)*v90;
        }
        uint64_t v39 = sub_13D84A8((uint64_t)v90);
        *(void *)(a1 + 272) = v39;
LABEL_165:
        uint64_t v6 = v107;
LABEL_166:
        unint64_t v43 = sub_11C5070(a3, v39, (unsigned __int8 *)v6);
        goto LABEL_167;
      default:
        goto LABEL_182;
    }
  }
}

char *sub_13A309C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1397EEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A312C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A0688(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A31BC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13BFE30(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13A324C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13BCA88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13A32DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13BB9EC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A336C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_139F348(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A33FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A1640(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13A348C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B48A4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A351C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 280);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 48);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      uint64_t v4 = sub_13A962C(v12, v14, a3);
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 284);
    char *v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 288);
    char *v4 = 32;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 292);
    char *v4 = 40;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      char *v4 = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 44);
      v4[1] = v27;
      if (v27 > 0x7F) {
        int v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        int v28 = v4 + 2;
      }
      uint64_t v4 = sub_15B58D0(v26, v28, a3);
    }
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v29 = *(_DWORD *)(a1 + 296);
    char *v4 = 56;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unsigned int v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v32 = *(void *)(a1 + 232);
    char *v4 = 66;
    unsigned int v33 = *(_DWORD *)(v32 + 20);
    v4[1] = v33;
    if (v33 > 0x7F) {
      uint64_t v34 = sub_188A9CC(v33, v4 + 1);
    }
    else {
      uint64_t v34 = v4 + 2;
    }
    uint64_t v4 = sub_13979CC(v32, (unint64_t)v34, a3);
    if ((v6 & 2) == 0)
    {
LABEL_54:
      if ((v6 & 4) == 0) {
        goto LABEL_74;
      }
      goto LABEL_68;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_54;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v35 = *(void *)(a1 + 240);
  char *v4 = 74;
  unsigned int v36 = *(_DWORD *)(v35 + 20);
  v4[1] = v36;
  if (v36 > 0x7F) {
    int v37 = sub_188A9CC(v36, v4 + 1);
  }
  else {
    int v37 = v4 + 2;
  }
  uint64_t v4 = sub_1398170(v35, (unint64_t)v37, a3);
  if ((v6 & 4) != 0)
  {
LABEL_68:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v38 = *(void *)(a1 + 248);
    char *v4 = 82;
    unsigned int v39 = *(_DWORD *)(v38 + 20);
    v4[1] = v39;
    if (v39 > 0x7F) {
      unint64_t v40 = sub_188A9CC(v39, v4 + 1);
    }
    else {
      unint64_t v40 = v4 + 2;
    }
    uint64_t v4 = sub_13A0B64(v38, (unint64_t)v40, a3);
  }
LABEL_74:
  int v41 = *(_DWORD *)(a1 + 104);
  if (v41)
  {
    for (int k = 0; k != v41; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v43 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      char *v4 = 90;
      unsigned int v44 = *(_DWORD *)(v43 + 20);
      v4[1] = v44;
      if (v44 > 0x7F) {
        uint64_t v45 = sub_188A9CC(v44, v4 + 1);
      }
      else {
        uint64_t v45 = v4 + 2;
      }
      uint64_t v4 = sub_13C029C(v43, (unint64_t)v45, a3);
    }
  }
  int v46 = *(_DWORD *)(a1 + 128);
  if (v46)
  {
    for (int m = 0; m != v46; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v48 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      char *v4 = 98;
      unsigned int v49 = *(_DWORD *)(v48 + 20);
      v4[1] = v49;
      if (v49 > 0x7F) {
        uint64_t v50 = sub_188A9CC(v49, v4 + 1);
      }
      else {
        uint64_t v50 = v4 + 2;
      }
      uint64_t v4 = sub_13BCD84(v48, v50, a3);
    }
  }
  int v51 = *(_DWORD *)(a1 + 152);
  if (v51)
  {
    for (int n = 0; n != v51; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v53 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      char *v4 = 106;
      unsigned int v54 = *(_DWORD *)(v53 + 20);
      v4[1] = v54;
      if (v54 > 0x7F) {
        unint64_t v55 = sub_188A9CC(v54, v4 + 1);
      }
      else {
        unint64_t v55 = v4 + 2;
      }
      uint64_t v4 = sub_13BBF3C(v53, v55, a3);
    }
  }
  int v56 = *(_DWORD *)(a1 + 176);
  if (v56)
  {
    for (iint i = 0; ii != v56; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v58 = *(void *)(*(void *)(a1 + 184) + 8 * ii + 8);
      char *v4 = 114;
      unsigned int v59 = *(_DWORD *)(v58 + 44);
      v4[1] = v59;
      if (v59 > 0x7F) {
        int v60 = sub_188A9CC(v59, v4 + 1);
      }
      else {
        int v60 = v4 + 2;
      }
      uint64_t v4 = sub_13BA104(v58, v60, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v61 = *(void *)(a1 + 256);
    char *v4 = 122;
    unsigned int v62 = *(_DWORD *)(v61 + 44);
    v4[1] = v62;
    if (v62 > 0x7F) {
      uint64_t v63 = sub_188A9CC(v62, v4 + 1);
    }
    else {
      uint64_t v63 = v4 + 2;
    }
    uint64_t v4 = sub_139F7D0(v61, v63, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v64 = *(void *)(a1 + 264);
    *(_WORD *)uint64_t v4 = 386;
    unsigned int v65 = *(_DWORD *)(v64 + 20);
    v4[2] = v65;
    if (v65 > 0x7F) {
      uint64_t v66 = sub_188A9CC(v65, v4 + 2);
    }
    else {
      uint64_t v66 = v4 + 3;
    }
    uint64_t v4 = sub_13A1828(v64, (unint64_t)v66, a3);
  }
  int v67 = *(_DWORD *)(a1 + 200);
  if (v67)
  {
    for (jint j = 0; jj != v67; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v69 = *(void *)(*(void *)(a1 + 208) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 394;
      unsigned int v70 = *(_DWORD *)(v69 + 20);
      v4[2] = v70;
      if (v70 > 0x7F) {
        uint64_t v71 = sub_188A9CC(v70, v4 + 2);
      }
      else {
        uint64_t v71 = v4 + 3;
      }
      uint64_t v4 = sub_13B5938(v69, v71, a3);
    }
  }
  uint64_t v72 = *(unsigned int *)(a1 + 216);
  if ((int)v72 >= 1)
  {
    for (kint k = 0; kk != v72; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v74 = *(int *)(*(void *)(a1 + 224) + 4 * kk);
      *(_WORD *)uint64_t v4 = 400;
      v4[2] = v74;
      if (v74 > 0x7F)
      {
        v4[2] = v74 | 0x80;
        unint64_t v75 = v74 >> 7;
        v4[3] = v74 >> 7;
        v4 += 4;
        if (v74 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v76 = v75 >> 14;
            v75 >>= 7;
            *v4++ = v75;
          }
          while (v76);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v77 = *(void *)(a1 + 272);
    *(_WORD *)uint64_t v4 = 410;
    unsigned int v78 = *(_DWORD *)(v77 + 20);
    v4[2] = v78;
    if (v78 > 0x7F) {
      uint64_t v79 = sub_188A9CC(v78, v4 + 2);
    }
    else {
      uint64_t v79 = v4 + 3;
    }
    uint64_t v4 = sub_13979CC(v77, (unint64_t)v79, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1201, v4, a3);
  }
  uint64_t v80 = *(void *)(a1 + 8);
  if ((v80 & 1) == 0) {
    return v4;
  }
  unint64_t v82 = v80 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v82 + 31) < 0)
  {
    uint64_t v83 = *(void **)(v82 + 8);
    uint64_t v84 = *(void *)(v82 + 16);
  }
  else
  {
    uint64_t v83 = (void *)(v82 + 8);
    LODWORD(v84) = *(unsigned __int8 *)(v82 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v84)
  {
    uint64_t v85 = (int)v84;
    memcpy(v4, v83, (int)v84);
    v4 += v85;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v83, v84, v4);
}

uint64_t sub_13A3F0C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_13AB404(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B5BAC(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    unint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    unint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_13C0560(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    unsigned int v27 = (uint64_t *)(v26 + 8);
  }
  else {
    unsigned int v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_13BCFB8(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    uint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    uint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_13BC39C(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  uint64_t v38 = *(int *)(a1 + 176);
  uint64_t v39 = v32 + v38;
  uint64_t v40 = *(void *)(a1 + 184);
  if (v40) {
    int v41 = (uint64_t *)(v40 + 8);
  }
  else {
    int v41 = 0;
  }
  if (v38)
  {
    uint64_t v42 = 8 * v38;
    do
    {
      uint64_t v43 = *v41++;
      uint64_t v44 = sub_13BA868(v43);
      v39 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6);
      v42 -= 8;
    }
    while (v42);
  }
  uint64_t v45 = *(int *)(a1 + 200);
  uint64_t v46 = v39 + 2 * v45;
  uint64_t v47 = *(void *)(a1 + 208);
  if (v47) {
    uint64_t v48 = (uint64_t *)(v47 + 8);
  }
  else {
    uint64_t v48 = 0;
  }
  if (v45)
  {
    uint64_t v49 = 8 * v45;
    do
    {
      uint64_t v50 = *v48++;
      uint64_t v51 = sub_13B6760(v50);
      v46 += v51 + ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6);
      v49 -= 8;
    }
    while (v49);
  }
  uint64_t v52 = *(unsigned int *)(a1 + 216);
  if (v52)
  {
    int v53 = 0;
    uint64_t v54 = 0;
    do
    {
      int v55 = *(_DWORD *)(*(void *)(a1 + 224) + 4 * v53);
      if (v55 < 0) {
        uint64_t v56 = 10;
      }
      else {
        uint64_t v56 = (9 * (__clz(v55 | 1) ^ 0x1F) + 73) >> 6;
      }
      v54 += v56;
      ++v53;
    }
    while (v52 != v53);
  }
  else
  {
    uint64_t v54 = 0;
  }
  uint64_t v57 = v46 + 2 * v52 + v54;
  int v58 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v58)
  {
    if (v58)
    {
      uint64_t v59 = sub_1397CE4(*(void *)(a1 + 232));
      v57 += v59 + ((9 * (__clz(v59 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v58 & 2) == 0)
      {
LABEL_54:
        if ((v58 & 4) == 0) {
          goto LABEL_55;
        }
        goto LABEL_63;
      }
    }
    else if ((v58 & 2) == 0)
    {
      goto LABEL_54;
    }
    uint64_t v60 = sub_13982D0(*(void *)(a1 + 240));
    v57 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v58 & 4) == 0)
    {
LABEL_55:
      if ((v58 & 8) == 0) {
        goto LABEL_56;
      }
      goto LABEL_64;
    }
LABEL_63:
    uint64_t v61 = sub_13A0F5C(*(void *)(a1 + 248));
    v57 += v61 + ((9 * (__clz(v61 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v58 & 8) == 0)
    {
LABEL_56:
      if ((v58 & 0x10) == 0) {
        goto LABEL_57;
      }
      goto LABEL_65;
    }
LABEL_64:
    uint64_t v62 = sub_139FAB0(*(void *)(a1 + 256));
    v57 += v62 + ((9 * (__clz(v62 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v58 & 0x10) == 0)
    {
LABEL_57:
      if ((v58 & 0x20) == 0) {
        goto LABEL_58;
      }
      goto LABEL_66;
    }
LABEL_65:
    uint64_t v63 = sub_13A1938(*(void *)(a1 + 264));
    v57 += v63 + ((9 * (__clz(v63 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v58 & 0x20) == 0)
    {
LABEL_58:
      if ((v58 & 0x40) == 0) {
        goto LABEL_59;
      }
      goto LABEL_67;
    }
LABEL_66:
    uint64_t v64 = sub_1397CE4(*(void *)(a1 + 272));
    v57 += v64 + ((9 * (__clz(v64 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v58 & 0x40) == 0)
    {
LABEL_59:
      if ((v58 & 0x80) == 0) {
        goto LABEL_72;
      }
      goto LABEL_68;
    }
LABEL_67:
    v57 += ((9 * (__clz(*(_DWORD *)(a1 + 280) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v58 & 0x80) == 0) {
      goto LABEL_72;
    }
LABEL_68:
    int v65 = *(_DWORD *)(a1 + 284);
    if (v65 < 0) {
      uint64_t v66 = 11;
    }
    else {
      uint64_t v66 = ((9 * (__clz(v65 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v57 += v66;
  }
LABEL_72:
  if ((v58 & 0x700) == 0) {
    goto LABEL_77;
  }
  if ((v58 & 0x100) != 0)
  {
    int v69 = *(_DWORD *)(a1 + 288);
    if (v69 < 0) {
      uint64_t v70 = 11;
    }
    else {
      uint64_t v70 = ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v57 += v70;
    if ((v58 & 0x200) == 0)
    {
LABEL_75:
      if ((v58 & 0x400) == 0) {
        goto LABEL_77;
      }
      goto LABEL_76;
    }
  }
  else if ((v58 & 0x200) == 0)
  {
    goto LABEL_75;
  }
  int v71 = *(_DWORD *)(a1 + 292);
  if (v71 < 0) {
    uint64_t v72 = 11;
  }
  else {
    uint64_t v72 = ((9 * (__clz(v71 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v57 += v72;
  if ((v58 & 0x400) != 0) {
LABEL_76:
  }
    v57 += ((9 * (__clz(*(_DWORD *)(a1 + 296) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_77:
  uint64_t v67 = *(void *)(a1 + 8);
  if (v67)
  {
    unint64_t v73 = v67 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v73 + 31) < 0) {
      uint64_t v74 = *(void *)(v73 + 16);
    }
    else {
      uint64_t v74 = *(unsigned __int8 *)(v73 + 31);
    }
    v57 += v74;
  }
  *(_DWORD *)(a1 + 44) = v57;
  return v57;
}

void sub_13A4448(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_136818C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_148D38C((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      *unsigned int v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148D9DC((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    unint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_148DA68((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (uint64_t *)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_148DAF4((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    uint64_t v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    uint64_t v31 = (uint64_t *)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_13694B8((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    uint64_t v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 200);
  if (v34)
  {
    uint64_t v35 = (uint64_t *)(*(void *)(a2 + 208) + 8);
    uint64_t v36 = (uint64_t *)sub_188CCE4(a1 + 192, *(_DWORD *)(a2 + 200));
    sub_148DB80((uint64_t *)(a1 + 192), v36, v35, v34, **(_DWORD **)(a1 + 208) - *(_DWORD *)(a1 + 200));
    int v37 = *(_DWORD *)(a1 + 200) + v34;
    *(_DWORD *)(a1 + 200) = v37;
    uint64_t v38 = *(int **)(a1 + 208);
    if (*v38 < v37) {
      int *v38 = v37;
    }
  }
  int v39 = *(_DWORD *)(a2 + 216);
  if (v39)
  {
    uint64_t v40 = *(int *)(a1 + 216);
    sub_188C80C((unsigned int *)(a1 + 216), v40 + v39);
    uint64_t v41 = *(void *)(a1 + 224);
    *(_DWORD *)(a1 + 216) += *(_DWORD *)(a2 + 216);
    memcpy((void *)(v41 + 4 * v40), *(const void **)(a2 + 224), 4 * *(int *)(a2 + 216));
  }
  int v42 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v42)
  {
    if (v42)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v44 = *(std::string **)(a1 + 232);
      if (!v44)
      {
        uint64_t v45 = *(void *)(a1 + 8);
        uint64_t v46 = (void *)(v45 & 0xFFFFFFFFFFFFFFFCLL);
        if (v45) {
          uint64_t v46 = (void *)*v46;
        }
        uint64_t v44 = (std::string *)sub_13D84A8((uint64_t)v46);
        *(void *)(a1 + 232) = v44;
      }
      if (*(void *)(a2 + 232)) {
        uint64_t v47 = *(uint64_t (****)())(a2 + 232);
      }
      else {
        uint64_t v47 = &off_2535340;
      }
      sub_118D9C0(v44, (uint64_t)v47);
      if ((v42 & 2) == 0)
      {
LABEL_27:
        if ((v42 & 4) == 0) {
          goto LABEL_28;
        }
        goto LABEL_61;
      }
    }
    else if ((v42 & 2) == 0)
    {
      goto LABEL_27;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v48 = *(std::string **)(a1 + 240);
    if (!v48)
    {
      uint64_t v49 = *(void *)(a1 + 8);
      uint64_t v50 = (void *)(v49 & 0xFFFFFFFFFFFFFFFCLL);
      if (v49) {
        uint64_t v50 = (void *)*v50;
      }
      uint64_t v48 = (std::string *)sub_13D8528((uint64_t)v50);
      *(void *)(a1 + 240) = v48;
    }
    if (*(void *)(a2 + 240)) {
      uint64_t v51 = *(uint64_t (****)())(a2 + 240);
    }
    else {
      uint64_t v51 = &off_2535370;
    }
    sub_1263204(v48, (uint64_t)v51);
    if ((v42 & 4) == 0)
    {
LABEL_28:
      if ((v42 & 8) == 0) {
        goto LABEL_29;
      }
      goto LABEL_69;
    }
LABEL_61:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v52 = *(void *)(a1 + 248);
    if (!v52)
    {
      uint64_t v53 = *(void *)(a1 + 8);
      uint64_t v54 = (void *)(v53 & 0xFFFFFFFFFFFFFFFCLL);
      if (v53) {
        uint64_t v54 = (void *)*v54;
      }
      sub_13D8AFC((uint64_t)v54);
      *(void *)(a1 + 248) = v52;
    }
    if (*(void *)(a2 + 248)) {
      int v55 = *(uint64_t (****)())(a2 + 248);
    }
    else {
      int v55 = &off_2535670;
    }
    sub_13A1168(v52, (uint64_t)v55);
    if ((v42 & 8) == 0)
    {
LABEL_29:
      if ((v42 & 0x10) == 0) {
        goto LABEL_30;
      }
      goto LABEL_77;
    }
LABEL_69:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v56 = *(void *)(a1 + 256);
    if (!v56)
    {
      uint64_t v57 = *(void *)(a1 + 8);
      int v58 = (void *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
      if (v57) {
        int v58 = (void *)*v58;
      }
      uint64_t v56 = sub_13D8A28((uint64_t)v58);
      *(void *)(a1 + 256) = v56;
    }
    if (*(void *)(a2 + 256)) {
      uint64_t v59 = *(uint64_t (****)())(a2 + 256);
    }
    else {
      uint64_t v59 = &off_25355F8;
    }
    sub_139FC18(v56, (uint64_t)v59);
    if ((v42 & 0x10) == 0)
    {
LABEL_30:
      if ((v42 & 0x20) == 0) {
        goto LABEL_31;
      }
      goto LABEL_85;
    }
LABEL_77:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v60 = *(void **)(a1 + 264);
    if (!v60)
    {
      uint64_t v61 = *(void *)(a1 + 8);
      uint64_t v62 = (void *)(v61 & 0xFFFFFFFFFFFFFFFCLL);
      if (v61) {
        uint64_t v62 = (void *)*v62;
      }
      uint64_t v60 = sub_13D8B80((uint64_t)v62);
      *(void *)(a1 + 264) = v60;
    }
    if (*(void *)(a2 + 264)) {
      uint64_t v63 = *(uint64_t (****)())(a2 + 264);
    }
    else {
      uint64_t v63 = &off_25356C8;
    }
    sub_13A19C0((uint64_t)v60, (uint64_t)v63);
    if ((v42 & 0x20) == 0)
    {
LABEL_31:
      if ((v42 & 0x40) == 0) {
        goto LABEL_32;
      }
      goto LABEL_93;
    }
LABEL_85:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v64 = *(std::string **)(a1 + 272);
    if (!v64)
    {
      uint64_t v65 = *(void *)(a1 + 8);
      uint64_t v66 = (void *)(v65 & 0xFFFFFFFFFFFFFFFCLL);
      if (v65) {
        uint64_t v66 = (void *)*v66;
      }
      uint64_t v64 = (std::string *)sub_13D84A8((uint64_t)v66);
      *(void *)(a1 + 272) = v64;
    }
    if (*(void *)(a2 + 272)) {
      uint64_t v67 = *(uint64_t (****)())(a2 + 272);
    }
    else {
      uint64_t v67 = &off_2535340;
    }
    sub_118D9C0(v64, (uint64_t)v67);
    if ((v42 & 0x40) == 0)
    {
LABEL_32:
      if ((v42 & 0x80) == 0)
      {
LABEL_34:
        *(_DWORD *)(a1 + 40) |= v42;
        goto LABEL_35;
      }
LABEL_33:
      *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
      goto LABEL_34;
    }
LABEL_93:
    *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
    if ((v42 & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_35:
  if ((v42 & 0x700) == 0) {
    goto LABEL_41;
  }
  if ((v42 & 0x100) == 0)
  {
    if ((v42 & 0x200) == 0) {
      goto LABEL_38;
    }
LABEL_96:
    *(_DWORD *)(a1 + 292) = *(_DWORD *)(a2 + 292);
    if ((v42 & 0x400) == 0) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  *(_DWORD *)(a1 + 288) = *(_DWORD *)(a2 + 288);
  if ((v42 & 0x200) != 0) {
    goto LABEL_96;
  }
LABEL_38:
  if ((v42 & 0x400) != 0) {
LABEL_39:
  }
    *(_DWORD *)(a1 + 296) = *(_DWORD *)(a2 + 296);
LABEL_40:
  *(_DWORD *)(a1 + 40) |= v42;
LABEL_41:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v43 = *(void *)(a2 + 8);
  if (v43)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v43 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13A4A14(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13AD634(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_15B5F68(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_13A4B98(a1 + 96);
    if (result)
    {
      uint64_t result = sub_11C2A6C(a1 + 120);
      if (result)
      {
        uint64_t v9 = *(unsigned int *)(a1 + 152);
        while ((int)v9 >= 1)
        {
          uint64_t v10 = v9 - 1;
          char v11 = sub_13BC874(*(void *)(*(void *)(a1 + 160) + 8 * v9));
          uint64_t result = 0;
          uint64_t v9 = v10;
          if ((v11 & 1) == 0) {
            return result;
          }
        }
        uint64_t v12 = *(unsigned int *)(a1 + 176);
        while ((int)v12 >= 1)
        {
          uint64_t v13 = v12 - 1;
          char v14 = sub_13BB038(*(void *)(*(void *)(a1 + 184) + 8 * v12));
          uint64_t result = 0;
          uint64_t v12 = v13;
          if ((v14 & 1) == 0) {
            return result;
          }
        }
        uint64_t v15 = *(unsigned int *)(a1 + 200);
        while ((int)v15 >= 1)
        {
          uint64_t v16 = v15 - 1;
          char v17 = sub_13B74A8(*(void *)(*(void *)(a1 + 208) + 8 * v15));
          uint64_t result = 0;
          uint64_t v15 = v16;
          if ((v17 & 1) == 0) {
            return result;
          }
        }
        int v18 = *(_DWORD *)(a1 + 40);
        if ((v18 & 4) != 0)
        {
          uint64_t result = sub_13A1434(*(void *)(a1 + 248));
          if (!result) {
            return result;
          }
          int v18 = *(_DWORD *)(a1 + 40);
        }
        if ((v18 & 8) != 0)
        {
          uint64_t v19 = *(void *)(a1 + 256);
          uint64_t result = sub_18856CC(v19 + 16);
          if (!result) {
            return result;
          }
          uint64_t result = sub_139FD88(v19 + 48);
          if (!result) {
            return result;
          }
          int v18 = *(_DWORD *)(a1 + 40);
        }
        if ((v18 & 0x10) == 0) {
          return 1;
        }
        uint64_t v20 = *(void *)(a1 + 264);
        if ((*(unsigned char *)(v20 + 16) & 1) == 0) {
          return 1;
        }
        uint64_t result = sub_1399AC8(*(void *)(v20 + 24));
        if (result) {
          return 1;
        }
      }
    }
  }
  return result;
}

BOOL sub_13A4B98(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 8);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v2);
    if (!sub_11A0A80(v4 + 24)) {
      break;
    }
    --v2;
  }
  while (sub_139FD88(v4 + 48));
  return v3 < 1;
}

void *sub_13A4BFC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.WaypointRoute");
}

uint64_t sub_13A4C0C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2535838 && *(void *)(a1 + 48))
  {
    sub_15B5318();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_148B6C8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13A4CD0(uint64_t a1)
{
  sub_13A4C0C(a1);

  operator delete();
}

uint64_t sub_13A4D08(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    int v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1386270(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = (uint64_t)sub_15B5354(*(void *)(v1 + 48));
    }
    *(_DWORD *)(v1 + 56) = -1;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_13A4DA8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v30 + 1;
    unsigned int v9 = *v30;
    if (*v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v30 + 2;
      }
    }
    uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 != 2)
    {
      if (v12 != 1 || v9 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v26 = *(void *)(a1 + 48);
      if (!v26)
      {
        int v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v27 = (void *)*v27;
        }
        uint64_t v26 = sub_15C1DB0((uint64_t)v27);
        *(void *)(a1 + 48) = v26;
        char v8 = v30;
      }
      uint64_t v16 = (char *)sub_1382E38(a3, v26, (unsigned __int8 *)v8);
LABEL_41:
      uint64_t v30 = v16;
      if (!v16) {
        goto LABEL_49;
      }
      goto LABEL_42;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    int v24 = v8 + 1;
    LODWORD(v23) = *v8;
    if ((v23 & 0x80) == 0) {
      goto LABEL_35;
    }
    int v25 = *v24;
    uint64_t v23 = v23 + (v25 << 7) - 128;
    if ((v25 & 0x80000000) == 0)
    {
      int v24 = v8 + 2;
LABEL_35:
      uint64_t v30 = v24;
      *(_DWORD *)(a1 + 56) = v23;
      goto LABEL_42;
    }
    uint64_t v28 = (char *)sub_188C138((uint64_t)v8, v23);
    uint64_t v30 = v28;
    *(_DWORD *)(a1 + 56) = v29;
    if (!v28) {
      goto LABEL_49;
    }
LABEL_42:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    char v17 = v8 - 1;
    while (1)
    {
      int v18 = (unsigned __int8 *)(v17 + 1);
      uint64_t v30 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 40);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 32), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 32) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        int v22 = sub_13D7664(*(void *)(a1 + 24));
        uint64_t v21 = sub_188CDC8(a1 + 24, (uint64_t)v22);
        int v18 = (unsigned __int8 *)v30;
      }
      char v17 = sub_1386B18(a3, v21, v18);
      uint64_t v30 = v17;
      if (!v17) {
        goto LABEL_49;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
        goto LABEL_42;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_49:
  uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v30;
}

char *sub_13A5020(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B58D0(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        char v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        char v17 = v4 + 2;
      }
      uint64_t v4 = sub_1386488(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_13A5248(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_138662C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B5BAC(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      int v10 = *(_DWORD *)(a1 + 56);
      if (v10 < 0) {
        uint64_t v11 = 11;
      }
      else {
        uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v11;
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13A5368(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D100((std::string *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1DB0((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        int v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        int v13 = &off_253F370;
      }
      sub_15B5DD4(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 16) |= v9;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13A54A8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B5F68(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13A54D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Route.RouteName");
}

uint64_t sub_13A54E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2535878)
  {
    uint64_t v6 = *(void *)(a1 + 40);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13A55A4(uint64_t a1)
{
  sub_13A54E4(a1);

  operator delete();
}

uint64_t sub_13A55DC(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 40));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13A563C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v24 + 2;
      }
    }
    int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 40);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      sub_13D6A1C((uint64_t)v22);
      uint64_t v21 = v23;
      *(void *)(a1 + 40) = v23;
      int v7 = v24;
    }
    uint64_t v14 = (char *)sub_13319DC(a3, v21, (unsigned __int8 *)v7);
LABEL_39:
    int v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 16)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      int v24 = v15 + 1;
      int v16 = v15[1];
      if (v15[1] < 0)
      {
        int v17 = v16 + (v15[2] << 7);
        int v16 = v17 - 128;
        if (v15[2] < 0)
        {
          uint64_t v15 = (char *)sub_188C0D0((uint64_t)(v15 + 1), v17 - 128);
          int v16 = v18;
        }
        else
        {
          v15 += 3;
        }
      }
      else
      {
        v15 += 2;
      }
      int v24 = v15;
      uint64_t v19 = *(unsigned int *)(a1 + 24);
      if (v19 == *(_DWORD *)(a1 + 28))
      {
        int v20 = v19 + 1;
        sub_188C80C((unsigned int *)(a1 + 24), v19 + 1);
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        uint64_t v15 = v24;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 32) + 4 * v19) = v16;
        int v20 = v19 + 1;
      }
      *(_DWORD *)(a1 + 24) = v20;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 16) {
        goto LABEL_40;
      }
    }
  }
  if (v8 == 18)
  {
    uint64_t v14 = (char *)sub_188C2CC((unsigned int *)(a1 + 24), (unsigned __int8 *)v7, (uint64_t)a3);
    goto LABEL_39;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v24;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_39;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_13A5898(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 40);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    int v4 = sub_1374B08(v6, v8, a3);
  }
  uint64_t v9 = *(unsigned int *)(a1 + 24);
  if ((int)v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v11 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * i);
      char *v4 = 16;
      v4[1] = v11;
      if (v11 > 0x7F)
      {
        v4[1] = v11 | 0x80;
        unsigned int v12 = v11 >> 7;
        v4[2] = v11 >> 7;
        v4 += 3;
        if (v11 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v13 = v12 >> 14;
            v12 >>= 7;
            *v4++ = v12;
          }
          while (v13);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_13A5A50(uint64_t a1)
{
  uint64_t v2 = sub_188D4F0((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_1374EEC(*(void *)(a1 + 40));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13A5AE8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13A5B14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Route.StepGroup");
}

void *sub_13A5B24(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13A5B98(void *a1)
{
  sub_13A5B24(a1);

  operator delete();
}

uint64_t sub_13A5BD0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13A5BF4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    int v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      int v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    int v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    int v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    int v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  int v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_13A5DE4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13A5F88(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13A602C()
{
  return 1;
}

void *sub_13A6034@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Route.UpdateLocation");
}

uint64_t sub_13A6044(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AF108;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = a2;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = a2;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = a2;
  *(_DWORD *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = a2;
  *(_DWORD *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = a2;
  *(void *)(a1 + 208) = 0;
  *(void *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = a2;
  *(void *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = a2;
  *(_DWORD *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 280) = a2;
  *(_DWORD *)(a1 + 288) = 0;
  *(void *)(a1 + 296) = a2;
  *(void *)(a1 + 304) = 0;
  *(void *)(a1 + 312) = 0;
  *(void *)(a1 + 320) = a2;
  *(void *)(a1 + 328) = 0;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = a2;
  *(void *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = a2;
  *(void *)(a1 + 376) = 0;
  *(void *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = a2;
  *(void *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 0;
  *(void *)(a1 + 416) = a2;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 0;
  *(void *)(a1 + 440) = a2;
  *(void *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 0;
  *(void *)(a1 + 464) = a2;
  *(void *)(a1 + 472) = 0;
  *(void *)(a1 + 480) = 0;
  *(void *)(a1 + 488) = a2;
  *(void *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 512) = a2;
  *(void *)(a1 + 528) = 0;
  *(void *)(a1 + 520) = 0;
  *(void *)(a1 + 536) = a2;
  *(void *)(a1 + 552) = 0;
  *(void *)(a1 + 544) = 0;
  *(void *)(a1 + 560) = 0;
  *(void *)(a1 + 568) = a2;
  *(_DWORD *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = 0;
  *(void *)(a1 + 592) = a2;
  *(_DWORD *)(a1 + 600) = 0;
  *(void *)(a1 + 608) = a2;
  *(void *)(a1 + 624) = 0;
  *(void *)(a1 + 616) = 0;
  *(void *)(a1 + 632) = a2;
  *(void *)(a1 + 648) = 0;
  *(void *)(a1 + 640) = 0;
  *(void *)(a1 + 656) = &qword_2550250;
  *(void *)(a1 + 664) = &qword_2550250;
  *(void *)(a1 + 672) = &qword_2550250;
  *(void *)(a1 + 680) = &qword_2550250;
  *(void *)(a1 + 688) = &qword_2550250;
  *(void *)(a1 + 696) = &qword_2550250;
  *(void *)(a1 + 704) = &qword_2550250;
  *(void *)(a1 + 712) = &qword_2550250;
  *(void *)(a1 + 720) = &qword_2550250;
  *(_OWORD *)(a1 + 856) = 0u;
  *(_OWORD *)(a1 + 872) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(_OWORD *)(a1 + 840) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  return a1;
}

void sub_13A61C0(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13A61F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13A6384((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_148C5C8(a1 + 79);
  sub_148C5C8(a1 + 76);
  sub_1889DA8((uint64_t)(a1 + 73));
  sub_1889DA8((uint64_t)(a1 + 70));
  sub_148C548(a1 + 67);
  sub_148C4C8(a1 + 64);
  sub_148C448(a1 + 61);
  sub_148C3C8(a1 + 58);
  sub_148BEC8(a1 + 55);
  sub_148C348(a1 + 52);
  sub_148C2C8(a1 + 49);
  sub_148B9C8(a1 + 46);
  sub_1365CFC(a1 + 43);
  sub_1365CFC(a1 + 40);
  sub_1365CFC(a1 + 37);
  sub_1889DA8((uint64_t)(a1 + 34));
  sub_1889DA8((uint64_t)(a1 + 31));
  sub_148C248(a1 + 28);
  sub_148C1C8(a1 + 25);
  sub_1889DA8((uint64_t)(a1 + 22));
  sub_1889DA8((uint64_t)(a1 + 19));
  sub_1889DE8(a1 + 16);
  sub_1889DE8(a1 + 13);
  sub_1889DE8(a1 + 10);
  sub_148C148(a1 + 7);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_13A6384(uint64_t result)
{
  int v1 = (void *)result;
  if (*(uint64_t **)(result + 656) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 656));
  }
  if (*(uint64_t **)(result + 664) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 664));
  }
  if (*(uint64_t **)(result + 672) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 672));
  }
  if (*(uint64_t **)(result + 680) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 680));
  }
  if (*(uint64_t **)(result + 688) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 688));
  }
  if (*(uint64_t **)(result + 696) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 696));
  }
  if (*(uint64_t **)(result + 704) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 704));
  }
  if (*(uint64_t **)(result + 712) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 712));
  }
  if (*(uint64_t **)(result + 720) != &qword_2550250) {
    sub_1881C6C((void ***)(result + 720));
  }
  if ((uint64_t (***)())result != &off_25358A8)
  {
    uint64_t v2 = *(void **)(result + 728);
    if (v2)
    {
      sub_13783C0(v2);
      operator delete();
    }
    uint64_t v3 = v1[92];
    if (v3)
    {
      sub_139910C(v3);
      operator delete();
    }
    uint64_t v4 = v1[93];
    if (v4)
    {
      sub_139834C(v4);
      operator delete();
    }
    uint64_t v5 = v1[94];
    if (v5)
    {
      sub_13D00A8(v5);
      operator delete();
    }
    uint64_t v6 = v1[95];
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = v1[96];
    if (v7)
    {
      sub_1389A4C(v7);
      operator delete();
    }
    uint64_t v8 = v1[97];
    if (v8)
    {
      sub_1374224(v8);
      operator delete();
    }
    unsigned int v9 = (void *)v1[98];
    if (v9)
    {
      sub_1396498(v9);
      operator delete();
    }
    unsigned int v10 = (void *)v1[99];
    if (v10)
    {
      sub_1396498(v10);
      operator delete();
    }
    uint64_t v11 = v1[100];
    if (v11)
    {
      sub_137747C(v11);
      operator delete();
    }
    uint64_t v12 = v1[101];
    if (v12)
    {
      sub_137747C(v12);
      operator delete();
    }
    uint64_t result = v1[102];
    if (result)
    {
      sub_13D56D0((void *)result);
      operator delete();
    }
  }
  return result;
}

void sub_13A660C(void *a1)
{
  sub_13A61F0(a1);

  operator delete();
}

uint64_t sub_13A6644(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 64);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 72) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_138C8AC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 64) = 0;
  }
  sub_188CC00(a1 + 80);
  sub_188CC00(a1 + 104);
  uint64_t result = sub_188CC00(a1 + 128);
  *(_DWORD *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 176) = 0;
  uint64_t v6 = *(unsigned int *)(a1 + 208);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 216) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_13A4D08(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 208) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 232);
  if ((int)v9 >= 1)
  {
    unsigned int v10 = (uint64_t *)(*(void *)(a1 + 240) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_13BD3C0(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 232) = 0;
  }
  *(_DWORD *)(a1 + 248) = 0;
  *(_DWORD *)(a1 + 272) = 0;
  uint64_t v12 = *(unsigned int *)(a1 + 304);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 312) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_1369E6C(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 304) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 328);
  if ((int)v15 >= 1)
  {
    int v16 = (uint64_t *)(*(void *)(a1 + 336) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_1369E6C(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 328) = 0;
  }
  uint64_t v18 = *(unsigned int *)(a1 + 352);
  if ((int)v18 >= 1)
  {
    int v19 = (uint64_t *)(*(void *)(a1 + 360) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t result = sub_1369E6C(v20);
      --v18;
    }
    while (v18);
    *(_DWORD *)(a1 + 352) = 0;
  }
  uint64_t v21 = *(unsigned int *)(a1 + 376);
  if ((int)v21 >= 1)
  {
    int v22 = (uint64_t *)(*(void *)(a1 + 384) + 8);
    do
    {
      uint64_t v23 = *v22++;
      uint64_t result = sub_137E904(v23);
      --v21;
    }
    while (v21);
    *(_DWORD *)(a1 + 376) = 0;
  }
  uint64_t v24 = *(unsigned int *)(a1 + 400);
  if ((int)v24 >= 1)
  {
    int v25 = (uint64_t *)(*(void *)(a1 + 408) + 8);
    do
    {
      uint64_t v26 = *v25++;
      uint64_t result = sub_13879E0(v26);
      --v24;
    }
    while (v24);
    *(_DWORD *)(a1 + 400) = 0;
  }
  uint64_t v27 = *(unsigned int *)(a1 + 424);
  if ((int)v27 >= 1)
  {
    uint64_t v28 = (uint64_t *)(*(void *)(a1 + 432) + 8);
    do
    {
      uint64_t v29 = *v28++;
      uint64_t result = sub_1388298(v29);
      --v27;
    }
    while (v27);
    *(_DWORD *)(a1 + 424) = 0;
  }
  uint64_t v30 = *(unsigned int *)(a1 + 448);
  if ((int)v30 >= 1)
  {
    uint64_t v31 = (unsigned char **)(*(void *)(a1 + 456) + 8);
    do
    {
      int v32 = *v31++;
      uint64_t result = (uint64_t)sub_1399C3C(v32);
      --v30;
    }
    while (v30);
    *(_DWORD *)(a1 + 448) = 0;
  }
  uint64_t v33 = *(unsigned int *)(a1 + 472);
  if ((int)v33 >= 1)
  {
    int v34 = (uint64_t *)(*(void *)(a1 + 480) + 8);
    do
    {
      uint64_t v35 = *v34++;
      uint64_t result = sub_13A55DC(v35);
      --v33;
    }
    while (v33);
    *(_DWORD *)(a1 + 472) = 0;
  }
  uint64_t v36 = *(unsigned int *)(a1 + 496);
  if ((int)v36 >= 1)
  {
    int v37 = (uint64_t *)(*(void *)(a1 + 504) + 8);
    do
    {
      uint64_t v38 = *v37++;
      uint64_t result = sub_13907D8(v38);
      --v36;
    }
    while (v36);
    *(_DWORD *)(a1 + 496) = 0;
  }
  uint64_t v39 = *(unsigned int *)(a1 + 520);
  if ((int)v39 >= 1)
  {
    uint64_t v40 = (uint64_t *)(*(void *)(a1 + 528) + 8);
    do
    {
      uint64_t v41 = *v40++;
      uint64_t result = sub_1391338(v41);
      --v39;
    }
    while (v39);
    *(_DWORD *)(a1 + 520) = 0;
  }
  uint64_t v42 = *(unsigned int *)(a1 + 544);
  if ((int)v42 >= 1)
  {
    uint64_t v43 = (uint64_t *)(*(void *)(a1 + 552) + 8);
    do
    {
      uint64_t v44 = *v43++;
      uint64_t result = sub_13A5BD0(v44);
      --v42;
    }
    while (v42);
    *(_DWORD *)(a1 + 544) = 0;
  }
  *(_DWORD *)(a1 + 560) = 0;
  *(_DWORD *)(a1 + 584) = 0;
  uint64_t v45 = *(unsigned int *)(a1 + 616);
  if ((int)v45 >= 1)
  {
    uint64_t v46 = (uint64_t *)(*(void *)(a1 + 624) + 8);
    do
    {
      uint64_t v47 = *v46++;
      uint64_t result = sub_136B5F8(v47);
      --v45;
    }
    while (v45);
    *(_DWORD *)(a1 + 616) = 0;
  }
  uint64_t v48 = *(unsigned int *)(a1 + 640);
  if ((int)v48 >= 1)
  {
    uint64_t v49 = (uint64_t *)(*(void *)(a1 + 648) + 8);
    do
    {
      uint64_t v50 = *v49++;
      uint64_t result = sub_136B5F8(v50);
      --v48;
    }
    while (v48);
    *(_DWORD *)(a1 + 640) = 0;
  }
  unsigned int v51 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v51)
  {
    if ((v51 & 1) == 0)
    {
      if ((v51 & 2) == 0) {
        goto LABEL_68;
      }
LABEL_79:
      unint64_t v53 = *(void *)(a1 + 664) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v53 + 23) < 0)
      {
        **(unsigned char **)unint64_t v53 = 0;
        *(void *)(v53 + 8) = 0;
        if ((v51 & 4) != 0) {
          goto LABEL_83;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v53 = 0;
        *(unsigned char *)(v53 + 23) = 0;
        if ((v51 & 4) != 0) {
          goto LABEL_83;
        }
      }
LABEL_69:
      if ((v51 & 8) == 0) {
        goto LABEL_70;
      }
LABEL_87:
      unint64_t v55 = *(void *)(a1 + 680) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v55 + 23) < 0)
      {
        **(unsigned char **)unint64_t v55 = 0;
        *(void *)(v55 + 8) = 0;
        if ((v51 & 0x10) != 0) {
          goto LABEL_91;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v55 = 0;
        *(unsigned char *)(v55 + 23) = 0;
        if ((v51 & 0x10) != 0) {
          goto LABEL_91;
        }
      }
LABEL_71:
      if ((v51 & 0x20) == 0) {
        goto LABEL_72;
      }
LABEL_95:
      unint64_t v57 = *(void *)(a1 + 696) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v57 + 23) < 0)
      {
        **(unsigned char **)unint64_t v57 = 0;
        *(void *)(v57 + 8) = 0;
        if ((v51 & 0x40) != 0) {
          goto LABEL_99;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v57 = 0;
        *(unsigned char *)(v57 + 23) = 0;
        if ((v51 & 0x40) != 0) {
          goto LABEL_99;
        }
      }
LABEL_73:
      if ((v51 & 0x80) == 0) {
        goto LABEL_106;
      }
LABEL_103:
      unint64_t v59 = *(void *)(a1 + 712) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v59 + 23) < 0)
      {
        **(unsigned char **)unint64_t v59 = 0;
        *(void *)(v59 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v59 = 0;
        *(unsigned char *)(v59 + 23) = 0;
      }
      goto LABEL_106;
    }
    unint64_t v52 = *(void *)(a1 + 656) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v52 + 23) < 0)
    {
      **(unsigned char **)unint64_t v52 = 0;
      *(void *)(v52 + 8) = 0;
      if ((v51 & 2) != 0) {
        goto LABEL_79;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v52 = 0;
      *(unsigned char *)(v52 + 23) = 0;
      if ((v51 & 2) != 0) {
        goto LABEL_79;
      }
    }
LABEL_68:
    if ((v51 & 4) == 0) {
      goto LABEL_69;
    }
LABEL_83:
    unint64_t v54 = *(void *)(a1 + 672) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v54 + 23) < 0)
    {
      **(unsigned char **)unint64_t v54 = 0;
      *(void *)(v54 + 8) = 0;
      if ((v51 & 8) != 0) {
        goto LABEL_87;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v54 = 0;
      *(unsigned char *)(v54 + 23) = 0;
      if ((v51 & 8) != 0) {
        goto LABEL_87;
      }
    }
LABEL_70:
    if ((v51 & 0x10) == 0) {
      goto LABEL_71;
    }
LABEL_91:
    unint64_t v56 = *(void *)(a1 + 688) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v56 + 23) < 0)
    {
      **(unsigned char **)unint64_t v56 = 0;
      *(void *)(v56 + 8) = 0;
      if ((v51 & 0x20) != 0) {
        goto LABEL_95;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v56 = 0;
      *(unsigned char *)(v56 + 23) = 0;
      if ((v51 & 0x20) != 0) {
        goto LABEL_95;
      }
    }
LABEL_72:
    if ((v51 & 0x40) == 0) {
      goto LABEL_73;
    }
LABEL_99:
    unint64_t v58 = *(void *)(a1 + 704) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v58 + 23) < 0)
    {
      **(unsigned char **)unint64_t v58 = 0;
      *(void *)(v58 + 8) = 0;
      if ((v51 & 0x80) == 0) {
        goto LABEL_106;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v58 = 0;
      *(unsigned char *)(v58 + 23) = 0;
      if ((v51 & 0x80) == 0) {
        goto LABEL_106;
      }
    }
    goto LABEL_103;
  }
LABEL_106:
  if ((v51 & 0xFF00) == 0) {
    goto LABEL_116;
  }
  if ((v51 & 0x100) != 0)
  {
    unint64_t v62 = *(void *)(a1 + 720) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v62 + 23) < 0)
    {
      **(unsigned char **)unint64_t v62 = 0;
      *(void *)(v62 + 8) = 0;
      if ((v51 & 0x200) != 0) {
        goto LABEL_142;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v62 = 0;
      *(unsigned char *)(v62 + 23) = 0;
      if ((v51 & 0x200) != 0) {
        goto LABEL_142;
      }
    }
LABEL_109:
    if ((v51 & 0x400) == 0) {
      goto LABEL_110;
    }
    goto LABEL_143;
  }
  if ((v51 & 0x200) == 0) {
    goto LABEL_109;
  }
LABEL_142:
  uint64_t result = sub_1378560(*(void *)(a1 + 728));
  if ((v51 & 0x400) == 0)
  {
LABEL_110:
    if ((v51 & 0x800) == 0) {
      goto LABEL_111;
    }
    goto LABEL_144;
  }
LABEL_143:
  uint64_t result = sub_1399294(*(void *)(a1 + 736));
  if ((v51 & 0x800) == 0)
  {
LABEL_111:
    if ((v51 & 0x1000) == 0) {
      goto LABEL_112;
    }
    goto LABEL_145;
  }
LABEL_144:
  uint64_t result = sub_1398514(*(void *)(a1 + 744));
  if ((v51 & 0x1000) == 0)
  {
LABEL_112:
    if ((v51 & 0x2000) == 0) {
      goto LABEL_113;
    }
    goto LABEL_146;
  }
LABEL_145:
  uint64_t result = sub_139E1B0(*(void *)(a1 + 752));
  if ((v51 & 0x2000) == 0)
  {
LABEL_113:
    if ((v51 & 0x4000) == 0) {
      goto LABEL_114;
    }
    goto LABEL_147;
  }
LABEL_146:
  uint64_t result = sub_1369E6C(*(void *)(a1 + 760));
  if ((v51 & 0x4000) == 0)
  {
LABEL_114:
    if ((v51 & 0x8000) == 0) {
      goto LABEL_116;
    }
    goto LABEL_115;
  }
LABEL_147:
  uint64_t result = sub_1389B6C(*(void *)(a1 + 768));
  if ((v51 & 0x8000) != 0) {
LABEL_115:
  }
    uint64_t result = sub_1369E6C(*(void *)(a1 + 776));
LABEL_116:
  if ((v51 & 0x1F0000) == 0) {
    goto LABEL_123;
  }
  if ((v51 & 0x10000) != 0)
  {
    uint64_t result = sub_1391C04(*(void *)(a1 + 784));
    if ((v51 & 0x20000) == 0)
    {
LABEL_119:
      if ((v51 & 0x40000) == 0) {
        goto LABEL_120;
      }
      goto LABEL_138;
    }
  }
  else if ((v51 & 0x20000) == 0)
  {
    goto LABEL_119;
  }
  uint64_t result = sub_1391C04(*(void *)(a1 + 792));
  if ((v51 & 0x40000) == 0)
  {
LABEL_120:
    if ((v51 & 0x80000) == 0) {
      goto LABEL_121;
    }
    goto LABEL_139;
  }
LABEL_138:
  uint64_t result = sub_13775C8(*(void *)(a1 + 800));
  if ((v51 & 0x80000) == 0)
  {
LABEL_121:
    if ((v51 & 0x100000) == 0) {
      goto LABEL_123;
    }
    goto LABEL_122;
  }
LABEL_139:
  uint64_t result = sub_13775C8(*(void *)(a1 + 808));
  if ((v51 & 0x100000) != 0) {
LABEL_122:
  }
    uint64_t result = sub_13A6C40(*(void *)(a1 + 816));
LABEL_123:
  if ((v51 & 0xE00000) != 0)
  {
    *(_DWORD *)(a1 + 832) = 0;
    *(void *)(a1 + 824) = 0;
  }
  if (HIBYTE(v51))
  {
    *(_OWORD *)(a1 + 836) = 0u;
    *(_OWORD *)(a1 + 852) = 0u;
  }
  if ((*(unsigned char *)(a1 + 44) & 0x7F) != 0)
  {
    *(_DWORD *)(a1 + 884) = 0;
    *(_OWORD *)(a1 + 868) = 0u;
  }
  char v61 = *(unsigned char *)(a1 + 8);
  uint64_t v60 = (uint64_t *)(a1 + 8);
  v60[4] = 0;
  if (v61)
  {
    return sub_188B4AC(v60);
  }
  return result;
}

uint64_t sub_13A6C40(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13D5234(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_13A6CBC(uint64_t a1, char *a2, int32x2_t *a3)
{
  v252 = a2;
  char v5 = sub_11947B8((uint64_t)a3, &v252, a3[11].i32[1]);
  uint64_t result = v252;
  if (v5) {
    return result;
  }
  v239 = (uint64_t *)(a1 + 8);
  v250 = (uint64_t *)(a1 + 608);
  v251 = (uint64_t *)(a1 + 632);
  v248 = (uint64_t *)(a1 + 512);
  v249 = (uint64_t *)(a1 + 536);
  v246 = (uint64_t *)(a1 + 464);
  v247 = (uint64_t *)(a1 + 488);
  v244 = (uint64_t *)(a1 + 416);
  v245 = (uint64_t *)(a1 + 440);
  v242 = (uint64_t *)(a1 + 368);
  v243 = (uint64_t *)(a1 + 392);
  v240 = (uint64_t *)(a1 + 320);
  v241 = (uint64_t *)(a1 + 344);
  uint64_t v7 = (uint64_t **)(a1 + 128);
  uint64_t v8 = (uint64_t **)(a1 + 104);
  uint64_t v9 = (uint64_t **)(a1 + 80);
  while (2)
  {
    unsigned int v10 = result + 1;
    unsigned int v11 = *result;
    if (*result < 0)
    {
      int v12 = *v10;
      unsigned int v13 = v11 + (v12 << 7);
      unsigned int v11 = v13 - 128;
      if (v12 < 0)
      {
        unsigned int v10 = (char *)sub_188C180((uint64_t)result, v13 - 128);
        unsigned int v11 = v14;
      }
      else
      {
        unsigned int v10 = result + 2;
      }
    }
    v252 = v10;
    switch(v11 >> 3)
    {
      case 1u:
        if (v11 != 8) {
          goto LABEL_484;
        }
        uint64_t v15 = v10 + 1;
        unint64_t v16 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, (v18 - 128));
          v252 = result;
          if (!result) {
            return result;
          }
          unint64_t v16 = v222;
        }
        else
        {
          uint64_t v15 = v10 + 2;
LABEL_13:
          v252 = v15;
        }
        if (v16 <= 6)
        {
          *(_DWORD *)(a1 + 40) |= 0x200000u;
          *(_DWORD *)(a1 + 824) = v16;
          goto LABEL_376;
        }
        if (*v239) {
          v237 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v237 = (std::string *)sub_188DBD8(v239);
        }
        int v238 = 1;
        goto LABEL_512;
      case 2u:
        if (v11 != 18) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 1;
        while (1)
        {
          long long v108 = (unsigned __int8 *)(result + 1);
          v252 = result + 1;
          uint64_t v109 = *(_DWORD **)(a1 + 72);
          if (v109 && (uint64_t v110 = *(int *)(a1 + 64), (int)v110 < *v109))
          {
            *(_DWORD *)(a1 + 64) = v110 + 1;
            uint64_t v111 = *(void *)&v109[2 * v110 + 2];
          }
          else
          {
            uint64_t v112 = sub_13D7DD4(*(void *)(a1 + 56));
            uint64_t v111 = sub_188CDC8(a1 + 56, v112);
            long long v108 = (unsigned __int8 *)v252;
          }
          uint64_t result = (char *)sub_13A8C24(a3, v111, v108);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 18) {
            goto LABEL_376;
          }
        }
      case 3u:
        if (v11 != 26) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v88 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
        if (v88) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 656);
        goto LABEL_374;
      case 4u:
        if (v11 != 34) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v140 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v140 & 0xFFFFFFFFFFFFFFFCLL);
        if (v140) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 664);
        goto LABEL_374;
      case 5u:
        if (v11 != 40) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x400000u;
        int v144 = v10 + 1;
        int v145 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_270;
        }
        int v146 = *v144;
        int v145 = v145 + (v146 << 7) - 128;
        if (v146 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v145);
          v252 = result;
          *(_DWORD *)(a1 + 828) = v224;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v144 = v10 + 2;
LABEL_270:
          v252 = v144;
          *(_DWORD *)(a1 + 828) = v145;
        }
        goto LABEL_376;
      case 6u:
        if (v11 != 48) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x800000u;
        unint64_t v94 = v10 + 1;
        int v95 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_169;
        }
        int v96 = *v94;
        int v95 = v95 + (v96 << 7) - 128;
        if (v96 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v95);
          v252 = result;
          *(_DWORD *)(a1 + 832) = v219;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v94 = v10 + 2;
LABEL_169:
          v252 = v94;
          *(_DWORD *)(a1 + 832) = v95;
        }
        goto LABEL_376;
      case 7u:
        if (v11 != 58) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v113 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v113 & 0xFFFFFFFFFFFFFFFCLL);
        if (v113) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 672);
        goto LABEL_374;
      case 8u:
        if (v11 != 64) {
          goto LABEL_484;
        }
        uint64_t v114 = v10 + 1;
        unint64_t v16 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_208;
        }
        int v115 = *v114;
        int v116 = v16 + (v115 << 7);
        unint64_t v16 = (v116 - 128);
        if (v115 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, (v116 - 128));
          v252 = result;
          if (!result) {
            return result;
          }
          unint64_t v16 = v223;
        }
        else
        {
          uint64_t v114 = v10 + 2;
LABEL_208:
          v252 = v114;
        }
        if (v16 <= 5)
        {
          *(_DWORD *)(a1 + 40) |= 0x1000000u;
          *(_DWORD *)(a1 + 836) = v16;
          goto LABEL_376;
        }
        if (*v239) {
          v237 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v237 = (std::string *)sub_188DBD8(v239);
        }
        int v238 = 8;
        goto LABEL_512;
      case 9u:
        if (v11 != 74) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 1;
        while (1)
        {
          uint64_t v158 = result + 1;
          v252 = result + 1;
          uint64_t v159 = *(_DWORD **)(a1 + 96);
          if (v159 && (uint64_t v160 = *(int *)(a1 + 88), (int)v160 < *v159))
          {
            *(_DWORD *)(a1 + 88) = v160 + 1;
            uint64_t v161 = *(std::string **)&v159[2 * v160 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            *uint64_t v163 = v162;
            v163[1] = sub_3A6EDC;
            *uint64_t v162 = 0;
            v162[1] = 0;
            v162[2] = 0;
            uint64_t v161 = (std::string *)sub_188CDC8(a1 + 80, (uint64_t)v162);
            uint64_t v158 = v252;
          }
          uint64_t result = (char *)sub_188C244(v161, v158, (uint64_t)a3);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *result != 74) {
            goto LABEL_376;
          }
        }
      case 0xAu:
        if (v11 != 80) {
          goto LABEL_484;
        }
        uint64_t v152 = v10 + 1;
        unint64_t v16 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_285;
        }
        int v153 = *v152;
        int v154 = v16 + (v153 << 7);
        unint64_t v16 = (v154 - 128);
        if (v153 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, (v154 - 128));
          v252 = result;
          if (!result) {
            return result;
          }
          unint64_t v16 = v225;
        }
        else
        {
          uint64_t v152 = v10 + 2;
LABEL_285:
          v252 = v152;
        }
        if (v16 <= 1)
        {
          *(_DWORD *)(a1 + 40) |= 0x2000000u;
          *(_DWORD *)(a1 + 840) = v16;
          goto LABEL_376;
        }
        if (*v239) {
          v237 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v237 = (std::string *)sub_188DBD8(v239);
        }
        int v238 = 10;
        goto LABEL_512;
      case 0x10u:
        if (v11 != 130) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v71 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v71 & 0xFFFFFFFFFFFFFFFCLL);
        if (v71) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 680);
        goto LABEL_374;
      case 0x11u:
        if (v11 != 136) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000000u;
        int v97 = v10 + 1;
        int v98 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_174;
        }
        int v99 = *v97;
        int v98 = v98 + (v99 << 7) - 128;
        if (v99 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v98);
          v252 = result;
          *(_DWORD *)(a1 + 844) = v220;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v97 = v10 + 2;
LABEL_174:
          v252 = v97;
          *(_DWORD *)(a1 + 844) = v98;
        }
        goto LABEL_376;
      case 0x12u:
        if (v11 != 146) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v84 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
        if (v84) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 688);
        goto LABEL_374;
      case 0x13u:
        if (v11 != 152) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000000u;
        unint64_t v62 = v10 + 1;
        int v63 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_103;
        }
        int v64 = *v62;
        int v63 = v63 + (v64 << 7) - 128;
        if (v64 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v63);
          v252 = result;
          *(_DWORD *)(a1 + 848) = v213;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v62 = v10 + 2;
LABEL_103:
          v252 = v62;
          *(_DWORD *)(a1 + 848) = v63;
        }
        goto LABEL_376;
      case 0x14u:
        if (v11 != 162) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v120 = result + 2;
          v252 = result + 2;
          int v121 = *(_DWORD **)(a1 + 120);
          if (v121 && (uint64_t v122 = *(int *)(a1 + 112), (int)v122 < *v121))
          {
            *(_DWORD *)(a1 + 112) = v122 + 1;
            uint64_t v123 = *(std::string **)&v121[2 * v122 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            void *v125 = v124;
            v125[1] = sub_3A6EDC;
            void *v124 = 0;
            v124[1] = 0;
            v124[2] = 0;
            uint64_t v123 = (std::string *)sub_188CDC8(a1 + 104, (uint64_t)v124);
            v120 = v252;
          }
          uint64_t result = (char *)sub_188C244(v123, v120, (uint64_t)a3);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 418) {
            goto LABEL_376;
          }
        }
      case 0x15u:
        if (v11 != 170) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v126 = result + 2;
          v252 = result + 2;
          v127 = *(_DWORD **)(a1 + 144);
          if (v127 && (uint64_t v128 = *(int *)(a1 + 136), (int)v128 < *v127))
          {
            *(_DWORD *)(a1 + 136) = v128 + 1;
            uint64_t v129 = *(std::string **)&v127[2 * v128 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            *BOOL v131 = v130;
            v131[1] = sub_3A6EDC;
            *uint64_t v130 = 0;
            v130[1] = 0;
            v130[2] = 0;
            uint64_t v129 = (std::string *)sub_188CDC8(a1 + 128, (uint64_t)v130);
            v126 = v252;
          }
          uint64_t result = (char *)sub_188C244(v129, v126, (uint64_t)a3);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 426) {
            goto LABEL_376;
          }
        }
      case 0x16u:
        if (v11 == 178)
        {
          uint64_t v77 = (unsigned int *)(a1 + 152);
          goto LABEL_335;
        }
        if (v11 != 176) {
          goto LABEL_484;
        }
        int v232 = sub_110DAD8((uint64_t *)&v252);
        sub_13A8CB4(a1, v232);
        goto LABEL_478;
      case 0x17u:
        if (v11 == 186)
        {
          uint64_t v77 = (unsigned int *)(a1 + 176);
          goto LABEL_335;
        }
        if (v11 != 184) {
          goto LABEL_484;
        }
        int v231 = sub_110DAD8((uint64_t *)&v252);
        sub_13A8D24(a1, v231);
        goto LABEL_478;
      case 0x19u:
        if (v11 != 202) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          unint64_t v54 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          unint64_t v55 = *(_DWORD **)(a1 + 216);
          if (v55 && (uint64_t v56 = *(int *)(a1 + 208), (int)v56 < *v55))
          {
            *(_DWORD *)(a1 + 208) = v56 + 1;
            uint64_t v57 = *(void *)&v55[2 * v56 + 2];
          }
          else
          {
            uint64_t v58 = sub_13D8CD0(*(void *)(a1 + 200));
            uint64_t v57 = sub_188CDC8(a1 + 200, v58);
            unint64_t v54 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A8D94(a3, v57, v54);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 458) {
            goto LABEL_376;
          }
        }
      case 0x1Au:
        if (v11 != 208) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000000u;
        uint64_t v85 = v10 + 1;
        int v86 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_148;
        }
        int v87 = *v85;
        int v86 = v86 + (v87 << 7) - 128;
        if (v87 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v86);
          v252 = result;
          *(_DWORD *)(a1 + 852) = v218;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v85 = v10 + 2;
LABEL_148:
          v252 = v85;
          *(_DWORD *)(a1 + 852) = v86;
        }
        goto LABEL_376;
      case 0x1Cu:
        if (v11 != 224) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000000u;
        int v170 = v10 + 1;
        int v171 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_332;
        }
        int v172 = *v170;
        int v171 = v171 + (v172 << 7) - 128;
        if (v172 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v171);
          v252 = result;
          *(_DWORD *)(a1 + 856) = v228;
          if (!result) {
            return result;
          }
        }
        else
        {
          int v170 = v10 + 2;
LABEL_332:
          v252 = v170;
          *(_DWORD *)(a1 + 856) = v171;
        }
        goto LABEL_376;
      case 0x1Du:
        if (v11 != 232) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000000u;
        unint64_t v59 = v10 + 1;
        int v60 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_98;
        }
        int v61 = *v59;
        int v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v60);
          v252 = result;
          *(_DWORD *)(a1 + 860) = v212;
          if (!result) {
            return result;
          }
        }
        else
        {
          unint64_t v59 = v10 + 2;
LABEL_98:
          v252 = v59;
          *(_DWORD *)(a1 + 860) = v60;
        }
        goto LABEL_376;
      case 0x1Eu:
        if (v11 != 240) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000000;
        uint64_t v81 = v10 + 1;
        int v82 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_139;
        }
        int v83 = *v81;
        int v82 = v82 + (v83 << 7) - 128;
        if (v83 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v82);
          v252 = result;
          *(_DWORD *)(a1 + 864) = v217;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v81 = v10 + 2;
LABEL_139:
          v252 = v81;
          *(_DWORD *)(a1 + 864) = v82;
        }
        goto LABEL_376;
      case 0x1Fu:
        if (v11 != 248) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 44) |= 1u;
        uint64_t v68 = v10 + 1;
        uint64_t v69 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_113;
        }
        int v70 = *v68;
        uint64_t v69 = v69 + (v70 << 7) - 128;
        if (v70 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, v69);
          v252 = result;
          *(unsigned char *)(a1 + 868) = v215 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v68 = v10 + 2;
LABEL_113:
          v252 = v68;
          *(unsigned char *)(a1 + 868) = v69 != 0;
        }
        goto LABEL_376;
      case 0x20u:
        if ((_BYTE)v11) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 44) |= 2u;
        v100 = v10 + 1;
        uint64_t v101 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_179;
        }
        int v102 = *v100;
        uint64_t v101 = v101 + (v102 << 7) - 128;
        if (v102 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, v101);
          v252 = result;
          *(unsigned char *)(a1 + 869) = v221 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          v100 = v10 + 2;
LABEL_179:
          v252 = v100;
          *(unsigned char *)(a1 + 869) = v101 != 0;
        }
        goto LABEL_376;
      case 0x21u:
        if (v11 != 8) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 44) |= 4u;
        uint64_t v65 = v10 + 1;
        uint64_t v66 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_108;
        }
        int v67 = *v65;
        uint64_t v66 = v66 + (v67 << 7) - 128;
        if (v67 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, v66);
          v252 = result;
          *(unsigned char *)(a1 + 870) = v214 != 0;
          if (!result) {
            return result;
          }
        }
        else
        {
          uint64_t v65 = v10 + 2;
LABEL_108:
          v252 = v65;
          *(unsigned char *)(a1 + 870) = v66 != 0;
        }
        goto LABEL_376;
      case 0x22u:
        if (v11 != 18) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v178 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          v179 = *(_DWORD **)(a1 + 240);
          if (v179 && (uint64_t v180 = *(int *)(a1 + 232), (int)v180 < *v179))
          {
            *(_DWORD *)(a1 + 232) = v180 + 1;
            uint64_t v181 = *(void *)&v179[2 * v180 + 2];
          }
          else
          {
            sub_13D97FC(*(void *)(a1 + 224));
            uint64_t v181 = sub_188CDC8(a1 + 224, v182);
            v178 = (unsigned __int8 *)v252;
          }
          uint64_t result = (char *)sub_13A8E24(a3, v181, v178);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 658) {
            goto LABEL_376;
          }
        }
      case 0x32u:
        if (v11 != 146) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v177 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v177 & 0xFFFFFFFFFFFFFFFCLL);
        if (v177) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 696);
        goto LABEL_374;
      case 0x33u:
        if (v11 == 154)
        {
          uint64_t v77 = (unsigned int *)(a1 + 248);
LABEL_335:
          uint64_t result = (char *)sub_188C2CC(v77, (unsigned __int8 *)v10, (uint64_t)a3);
          goto LABEL_375;
        }
        if (v11 != 152) {
          goto LABEL_484;
        }
        int v229 = sub_110DAD8((uint64_t *)&v252);
        sub_13A8EB4(a1, v229);
        goto LABEL_478;
      case 0x34u:
        if (v11 == 162)
        {
          uint64_t v77 = (unsigned int *)(a1 + 272);
          goto LABEL_335;
        }
        if (v11 != 160) {
          goto LABEL_484;
        }
        int v230 = sub_110DAD8((uint64_t *)&v252);
        sub_13A8F24(a1, v230);
LABEL_478:
        if (!v252) {
          return 0;
        }
        goto LABEL_376;
      case 0x35u:
        if (v11 != 170) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x200u;
        uint64_t v137 = *(void *)(a1 + 728);
        if (!v137)
        {
          int v138 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v239) {
            int v138 = (void *)*v138;
          }
          sub_13D6D2C((uint64_t)v138);
          uint64_t v137 = v139;
          *(void *)(a1 + 728) = v139;
          unsigned int v10 = v252;
        }
        uint64_t result = (char *)sub_13A0A44(a3, v137, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x36u:
        if (v11 != 178) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          unsigned int v89 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          uint64_t v90 = *(_DWORD **)(a1 + 312);
          if (v90 && (uint64_t v91 = *(int *)(a1 + 304), (int)v91 < *v90))
          {
            *(_DWORD *)(a1 + 304) = v91 + 1;
            uint64_t v92 = *(void *)&v90[2 * v91 + 2];
          }
          else
          {
            sub_13D6A1C(*(void *)(a1 + 296));
            uint64_t v92 = sub_188CDC8(a1 + 296, v93);
            unsigned int v89 = (unsigned __int8 *)v252;
          }
          uint64_t result = (char *)sub_13319DC(a3, v92, v89);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 946) {
            goto LABEL_376;
          }
        }
      case 0x37u:
        if (v11 != 186) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v188 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          v189 = *(_DWORD **)(a1 + 336);
          if (v189 && (uint64_t v190 = *(int *)(a1 + 328), (int)v190 < *v189))
          {
            *(_DWORD *)(a1 + 328) = v190 + 1;
            uint64_t v191 = *(void *)&v189[2 * v190 + 2];
          }
          else
          {
            sub_13D6A1C(*v240);
            uint64_t v191 = sub_188CDC8((uint64_t)v240, v192);
            v188 = (unsigned __int8 *)v252;
          }
          uint64_t result = (char *)sub_13319DC(a3, v191, v188);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 954) {
            goto LABEL_376;
          }
        }
      case 0x38u:
        if (v11 != 194) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          uint64_t v72 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          unint64_t v73 = *(_DWORD **)(a1 + 360);
          if (v73 && (uint64_t v74 = *(int *)(a1 + 352), (int)v74 < *v73))
          {
            *(_DWORD *)(a1 + 352) = v74 + 1;
            uint64_t v75 = *(void *)&v73[2 * v74 + 2];
          }
          else
          {
            sub_13D6A1C(*v241);
            uint64_t v75 = sub_188CDC8((uint64_t)v241, v76);
            uint64_t v72 = (unsigned __int8 *)v252;
          }
          uint64_t result = (char *)sub_13319DC(a3, v75, v72);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 962) {
            goto LABEL_376;
          }
        }
      case 0x39u:
        if (v11 != 202) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v164 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v164 & 0xFFFFFFFFFFFFFFFCLL);
        if (v164) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 704);
        goto LABEL_374;
      case 0x3Au:
        if (v11 != 210) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x80u;
        uint64_t v185 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v185 & 0xFFFFFFFFFFFFFFFCLL);
        if (v185) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 712);
        goto LABEL_374;
      case 0x3Bu:
        if (v11 != 218) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x400u;
        uint64_t v46 = *(void *)(a1 + 736);
        if (!v46)
        {
          uint64_t v47 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v239) {
            uint64_t v47 = (void *)*v47;
          }
          sub_13D8628((uint64_t)v47);
          uint64_t v46 = v48;
          *(void *)(a1 + 736) = v48;
          unsigned int v10 = v252;
        }
        uint64_t result = sub_13A1798(a3, v46, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x3Cu:
        if (v11 != 226) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          uint64_t v147 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          int v148 = *(_DWORD **)(a1 + 384);
          if (v148 && (uint64_t v149 = *(int *)(a1 + 376), (int)v149 < *v148))
          {
            *(_DWORD *)(a1 + 376) = v149 + 1;
            uint64_t v150 = *(void *)&v148[2 * v149 + 2];
          }
          else
          {
            sub_13D7104(*v242);
            uint64_t v150 = sub_188CDC8((uint64_t)v242, v151);
            uint64_t v147 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_138DEA0(a3, v150, v147);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 994) {
            goto LABEL_376;
          }
        }
      case 0x3Du:
        if (v11 != 234) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x800u;
        uint64_t v43 = *(void *)(a1 + 744);
        if (!v43)
        {
          uint64_t v44 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v239) {
            uint64_t v44 = (void *)*v44;
          }
          sub_13D85A4((uint64_t)v44);
          uint64_t v43 = v45;
          *(void *)(a1 + 744) = v45;
          unsigned int v10 = v252;
        }
        uint64_t result = sub_13A8F98(a3, v43, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x3Eu:
        if (v11 != 242) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          uint64_t v38 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          uint64_t v39 = *(_DWORD **)(a1 + 408);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 400), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 400) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            uint64_t v42 = sub_13D789C(*v243);
            uint64_t v41 = sub_188CDC8((uint64_t)v243, (uint64_t)v42);
            uint64_t v38 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A9028(a3, v41, v38);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1010) {
            goto LABEL_376;
          }
        }
      case 0x3Fu:
        if (v11 != 248) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 44) |= 8u;
        unsigned int v78 = v10 + 1;
        int v79 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_134;
        }
        int v80 = *v78;
        int v79 = v79 + (v80 << 7) - 128;
        if (v80 < 0)
        {
          uint64_t result = (char *)sub_188C0D0((uint64_t)v10, v79);
          v252 = result;
          *(_DWORD *)(a1 + 872) = v216;
          if (!result) {
            return result;
          }
        }
        else
        {
          unsigned int v78 = v10 + 2;
LABEL_134:
          v252 = v78;
          *(_DWORD *)(a1 + 872) = v79;
        }
        goto LABEL_376;
      case 0x40u:
        if (v11 != 2) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          int v103 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          unsigned int v104 = *(_DWORD **)(a1 + 432);
          if (v104 && (uint64_t v105 = *(int *)(a1 + 424), (int)v105 < *v104))
          {
            *(_DWORD *)(a1 + 424) = v105 + 1;
            uint64_t v106 = *(void *)&v104[2 * v105 + 2];
          }
          else
          {
            uint64_t v107 = sub_13D7938(*v244);
            uint64_t v106 = sub_188CDC8((uint64_t)v244, v107);
            int v103 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A90B8(a3, v106, v103);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1154) {
            goto LABEL_376;
          }
        }
      case 0x41u:
        if (v11 != 10) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x1000u;
        int v168 = *(void **)(a1 + 752);
        if (!v168)
        {
          uint64_t v169 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v239) {
            uint64_t v169 = (void *)*v169;
          }
          int v168 = sub_13DA934((uint64_t)v169);
          *(void *)(a1 + 752) = v168;
          unsigned int v10 = v252;
        }
        uint64_t result = sub_139E69C(a3, (uint64_t)v168, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x42u:
        if (v11 != 18) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          int v19 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          uint64_t v20 = *(_DWORD **)(a1 + 456);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 448), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 448) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            sub_13D86A8(*v245);
            uint64_t v22 = sub_188CDC8((uint64_t)v245, v23);
            int v19 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_139F740(a3, v22, v19);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1170) {
            goto LABEL_376;
          }
        }
      case 0x43u:
        if (v11 != 26) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          uint64_t v49 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          uint64_t v50 = *(_DWORD **)(a1 + 480);
          if (v50 && (uint64_t v51 = *(int *)(a1 + 472), (int)v51 < *v50))
          {
            *(_DWORD *)(a1 + 472) = v51 + 1;
            uint64_t v52 = *(void *)&v50[2 * v51 + 2];
          }
          else
          {
            unint64_t v53 = sub_13D8D74(*v246);
            uint64_t v52 = sub_188CDC8((uint64_t)v246, (uint64_t)v53);
            uint64_t v49 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A9148(a3, v52, v49);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1178) {
            goto LABEL_376;
          }
        }
      case 0x44u:
        if (v11 != 34) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x2000u;
        uint64_t v117 = *(void *)(a1 + 760);
        if (v117) {
          goto LABEL_394;
        }
        int v118 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v239) {
          int v118 = (void *)*v118;
        }
        sub_13D6A1C((uint64_t)v118);
        uint64_t v117 = v119;
        *(void *)(a1 + 760) = v119;
        goto LABEL_393;
      case 0x45u:
        if (v11 != 42) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x4000u;
        uint64_t v141 = *(void *)(a1 + 768);
        if (!v141)
        {
          int v142 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v239) {
            int v142 = (void *)*v142;
          }
          sub_13D7B20((uint64_t)v142);
          uint64_t v141 = v143;
          *(void *)(a1 + 768) = v143;
          unsigned int v10 = v252;
        }
        uint64_t result = sub_13A91D8(a3, v141, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x46u:
        if (v11 != 50) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x8000u;
        uint64_t v117 = *(void *)(a1 + 776);
        if (v117) {
          goto LABEL_394;
        }
        v193 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v239) {
          v193 = (void *)*v193;
        }
        sub_13D6A1C((uint64_t)v193);
        uint64_t v117 = v194;
        *(void *)(a1 + 776) = v194;
LABEL_393:
        unsigned int v10 = v252;
LABEL_394:
        uint64_t result = (char *)sub_13319DC(a3, v117, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x47u:
        if (v11 != 58) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v132 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          uint64_t v133 = *(_DWORD **)(a1 + 504);
          if (v133 && (uint64_t v134 = *(int *)(a1 + 496), (int)v134 < *v133))
          {
            *(_DWORD *)(a1 + 496) = v134 + 1;
            uint64_t v135 = *(void *)&v133[2 * v134 + 2];
          }
          else
          {
            uint64_t v136 = sub_13D7EA8(*v247);
            uint64_t v135 = sub_188CDC8((uint64_t)v247, v136);
            v132 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A9268(a3, v135, v132);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1210) {
            goto LABEL_376;
          }
        }
      case 0x48u:
        if (v11 != 66) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          uint64_t v33 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          int v34 = *(_DWORD **)(a1 + 528);
          if (v34 && (uint64_t v35 = *(int *)(a1 + 520), (int)v35 < *v34))
          {
            *(_DWORD *)(a1 + 520) = v35 + 1;
            uint64_t v36 = *(void *)&v34[2 * v35 + 2];
          }
          else
          {
            uint64_t v37 = sub_13D7FC0(*v248);
            uint64_t v36 = sub_188CDC8((uint64_t)v248, v37);
            uint64_t v33 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A92F8(a3, v36, v33);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1218) {
            goto LABEL_376;
          }
        }
      case 0x49u:
        if (v11 != 72) {
          goto LABEL_484;
        }
        uint64_t v24 = v10 + 1;
        unint64_t v16 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v25 = *v24;
        int v26 = v16 + (v25 << 7);
        unint64_t v16 = (v26 - 128);
        if (v25 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, (v26 - 128));
          v252 = result;
          if (!result) {
            return result;
          }
          unint64_t v16 = v211;
        }
        else
        {
          uint64_t v24 = v10 + 2;
LABEL_30:
          v252 = v24;
        }
        if (v16 <= 7)
        {
          *(_DWORD *)(a1 + 44) |= 0x10u;
          *(_DWORD *)(a1 + 876) = v16;
          goto LABEL_376;
        }
        if (*v239) {
          v237 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v237 = (std::string *)sub_188DBD8(v239);
        }
        int v238 = 73;
        goto LABEL_512;
      case 0x4Au:
        if (v11 != 82) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v200 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          v201 = *(_DWORD **)(a1 + 552);
          if (v201 && (uint64_t v202 = *(int *)(a1 + 544), (int)v202 < *v201))
          {
            *(_DWORD *)(a1 + 544) = v202 + 1;
            uint64_t v203 = *(void *)&v201[2 * v202 + 2];
          }
          else
          {
            v204 = sub_13D8E0C(*v249);
            uint64_t v203 = sub_188CDC8((uint64_t)v249, (uint64_t)v204);
            v200 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A9388(a3, v203, v200);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1234) {
            goto LABEL_376;
          }
        }
      case 0x4Bu:
        if (v11 != 90) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x10000u;
        uint64_t v30 = *(void *)(a1 + 784);
        if (v30) {
          goto LABEL_369;
        }
        v183 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v239) {
          v183 = (void *)*v183;
        }
        sub_13D8414((uint64_t)v183);
        uint64_t v30 = v184;
        *(void *)(a1 + 784) = v184;
        goto LABEL_368;
      case 0x4Cu:
        if (v11 != 98) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x20000u;
        uint64_t v30 = *(void *)(a1 + 792);
        if (v30) {
          goto LABEL_369;
        }
        uint64_t v31 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v239) {
          uint64_t v31 = (void *)*v31;
        }
        sub_13D8414((uint64_t)v31);
        uint64_t v30 = v32;
        *(void *)(a1 + 792) = v32;
LABEL_368:
        unsigned int v10 = v252;
LABEL_369:
        uint64_t result = (char *)sub_1392098(a3, v30, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x4Du:
        if (v11 != 104) {
          goto LABEL_484;
        }
        uint64_t v155 = v10 + 1;
        unint64_t v16 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_292;
        }
        int v156 = *v155;
        int v157 = v16 + (v156 << 7);
        unint64_t v16 = (v157 - 128);
        if (v156 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, (v157 - 128));
          v252 = result;
          if (!result) {
            return result;
          }
          unint64_t v16 = v226;
        }
        else
        {
          uint64_t v155 = v10 + 2;
LABEL_292:
          v252 = v155;
        }
        if (v16 <= 7)
        {
          *(_DWORD *)(a1 + 44) |= 0x20u;
          *(_DWORD *)(a1 + 880) = v16;
          goto LABEL_376;
        }
        if (*v239) {
          v237 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v237 = (std::string *)sub_188DBD8(v239);
        }
        int v238 = 77;
        goto LABEL_512;
      case 0x4Eu:
        if (v11 != 112) {
          goto LABEL_484;
        }
        uint64_t v165 = v10 + 1;
        unint64_t v16 = *v10;
        if ((*v10 & 0x80000000) == 0) {
          goto LABEL_319;
        }
        int v166 = *v165;
        int v167 = v16 + (v166 << 7);
        unint64_t v16 = (v167 - 128);
        if (v166 < 0)
        {
          uint64_t result = (char *)sub_188C138((uint64_t)v10, (v167 - 128));
          v252 = result;
          if (!result) {
            return result;
          }
          unint64_t v16 = v227;
        }
        else
        {
          uint64_t v165 = v10 + 2;
LABEL_319:
          v252 = v165;
        }
        if (v16 <= 7)
        {
          *(_DWORD *)(a1 + 44) |= 0x40u;
          *(_DWORD *)(a1 + 884) = v16;
          goto LABEL_376;
        }
        if (*v239) {
          v237 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          v237 = (std::string *)sub_188DBD8(v239);
        }
        int v238 = 78;
        goto LABEL_512;
      case 0x4Fu:
        if (v11 != 122) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x100u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (void *)(a1 + 720);
LABEL_374:
        v186 = (std::string *)sub_1880F84(v29, v28);
        uint64_t result = (char *)sub_188C244(v186, v252, (uint64_t)a3);
        goto LABEL_375;
      case 0x50u:
        if (v11 == 130)
        {
          *(void *)&long long v253 = a1 + 560;
          *((void *)&v253 + 1) = sub_13A9418;
          uint64_t v254 = a1 + 8;
          int v255 = 80;
          uint64_t result = sub_1112E88((uint64_t)a3, v10, &v253);
          goto LABEL_375;
        }
        if (v11 == 128)
        {
          uint64_t v234 = sub_110DB5C((uint64_t *)&v252);
          if (!v252) {
            return 0;
          }
          unint64_t v16 = v234;
          if (v234 > 2)
          {
            if (*v239) {
              v237 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v237 = (std::string *)sub_188DBD8(v239);
            }
            int v238 = 80;
LABEL_512:
            sub_188C020(v238, v16, v237);
          }
          else
          {
            sub_13A9424(a1, v234);
          }
LABEL_376:
          int v187 = sub_11947B8((uint64_t)a3, &v252, a3[11].i32[1]);
          uint64_t result = v252;
          if (v187) {
            return result;
          }
          continue;
        }
LABEL_484:
        if (v11) {
          BOOL v235 = (v11 & 7) == 4;
        }
        else {
          BOOL v235 = 1;
        }
        if (!v235)
        {
          if (v11 - 7600 < 0xAF8 || v11 - 80008 <= 0x31F)
          {
            uint64_t result = (char *)sub_18859DC((uint64_t **)(a1 + 16), v11, v10, (uint64_t)&off_25358A8, v239, a3);
          }
          else
          {
            if (*v239)
            {
              v236 = (std::string *)((*v239 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v236 = (std::string *)sub_188DBD8(v239);
              unsigned int v10 = v252;
            }
            uint64_t result = (char *)sub_1885AC0(v11, v236, v10, a3);
          }
LABEL_375:
          v252 = result;
          if (!result) {
            return result;
          }
          goto LABEL_376;
        }
        if (!v10) {
          return 0;
        }
        a3[10].i32[0] = v11 - 1;
        return v10;
      case 0x51u:
        if (v11 == 138)
        {
          uint64_t v77 = (unsigned int *)(a1 + 584);
          goto LABEL_335;
        }
        if (v11 != 136) {
          goto LABEL_484;
        }
        int v233 = sub_110DAD8((uint64_t *)&v252);
        sub_13A9498(a1, v233);
        goto LABEL_478;
      case 0x52u:
        if (v11 != 146) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v206 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          v207 = *(_DWORD **)(a1 + 624);
          if (v207 && (uint64_t v208 = *(int *)(a1 + 616), (int)v208 < *v207))
          {
            *(_DWORD *)(a1 + 616) = v208 + 1;
            uint64_t v209 = *(void *)&v207[2 * v208 + 2];
          }
          else
          {
            uint64_t v210 = sub_13D6194(*v250);
            uint64_t v209 = sub_188CDC8((uint64_t)v250, v210);
            v206 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A950C(a3, v209, v206);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1426) {
            goto LABEL_376;
          }
        }
      case 0x53u:
        if (v11 != 154) {
          goto LABEL_484;
        }
        uint64_t result = v10 - 2;
        while (1)
        {
          v195 = (unsigned __int8 *)(result + 2);
          v252 = result + 2;
          v196 = *(_DWORD **)(a1 + 648);
          if (v196 && (uint64_t v197 = *(int *)(a1 + 640), (int)v197 < *v196))
          {
            *(_DWORD *)(a1 + 640) = v197 + 1;
            uint64_t v198 = *(void *)&v196[2 * v197 + 2];
          }
          else
          {
            uint64_t v199 = sub_13D6194(*v251);
            uint64_t v198 = sub_188CDC8((uint64_t)v251, v199);
            v195 = (unsigned __int8 *)v252;
          }
          uint64_t result = sub_13A950C(a3, v198, v195);
          v252 = result;
          if (!result) {
            return result;
          }
          if (*(void *)a3 <= (unint64_t)result || *(_WORD *)result != 1434) {
            goto LABEL_376;
          }
        }
      case 0x56u:
        if (v11 != 178) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x40000u;
        uint64_t v173 = *(void *)(a1 + 800);
        if (v173) {
          goto LABEL_421;
        }
        v205 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v239) {
          v205 = (void *)*v205;
        }
        uint64_t v173 = sub_13D6C7C((uint64_t)v205);
        *(void *)(a1 + 800) = v173;
        goto LABEL_420;
      case 0x57u:
        if (v11 != 186) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x80000u;
        uint64_t v173 = *(void *)(a1 + 808);
        if (v173) {
          goto LABEL_421;
        }
        int v174 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v239) {
          int v174 = (void *)*v174;
        }
        uint64_t v173 = sub_13D6C7C((uint64_t)v174);
        *(void *)(a1 + 808) = v173;
LABEL_420:
        unsigned int v10 = v252;
LABEL_421:
        uint64_t result = sub_137D640(a3, v173, (unsigned __int8 *)v10);
        goto LABEL_375;
      case 0x58u:
        if (v11 != 194) {
          goto LABEL_484;
        }
        *(_DWORD *)(a1 + 40) |= 0x100000u;
        uint64_t v175 = *(void *)(a1 + 816);
        if (!v175)
        {
          v176 = (void *)(*v239 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v239) {
            v176 = (void *)*v176;
          }
          uint64_t v175 = sub_13DAD88((uint64_t)v176);
          *(void *)(a1 + 816) = v175;
          unsigned int v10 = v252;
        }
        uint64_t result = sub_13A959C(a3, v175, (unsigned __int8 *)v10);
        goto LABEL_375;
      default:
        goto LABEL_484;
    }
  }
}

uint64_t sub_13A8C24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_138CB54(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_13A8CB4(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 152);
  uint64_t v4 = (_DWORD *)(a1 + 152);
  if (v5 == *(_DWORD *)(a1 + 156))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 152), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 160) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 160) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_13A8D24(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 176);
  uint64_t v4 = (_DWORD *)(a1 + 176);
  if (v5 == *(_DWORD *)(a1 + 180))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 176), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 184) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 184) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_13A8D94(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A4DA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13A8E24(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13BD518(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

void sub_13A8EB4(uint64_t a1, int a2)
{
  uint64_t v5 = *(unsigned int *)(a1 + 248);
  uint64_t v4 = (_DWORD *)(a1 + 248);
  if (v5 == *(_DWORD *)(a1 + 252))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 248), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 256) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 256) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_13A8F24(uint64_t a1, int a2)
{
  uint64_t v4 = (_DWORD *)(a1 + 272);
  uint64_t v5 = *(unsigned int *)(a1 + 272);
  if (v5 == *(_DWORD *)(a1 + 276))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 272), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 280) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 280) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_13A8F98(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13985CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A9028(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1387A70(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A90B8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13882C0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A9148(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A563C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A91D8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1389C44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A9268(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1390854(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A92F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13913B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A9388(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13A5BF4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

BOOL sub_13A9418(unsigned int a1)
{
  return a1 < 3;
}

void sub_13A9424(uint64_t a1, int a2)
{
  uint64_t v4 = (_DWORD *)(a1 + 560);
  uint64_t v5 = *(unsigned int *)(a1 + 560);
  if (v5 == *(_DWORD *)(a1 + 564))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 560), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 568) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 568) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

void sub_13A9498(uint64_t a1, int a2)
{
  uint64_t v4 = (_DWORD *)(a1 + 584);
  uint64_t v5 = *(unsigned int *)(a1 + 584);
  if (v5 == *(_DWORD *)(a1 + 588))
  {
    int v6 = v5 + 1;
    sub_188C80C((unsigned int *)(a1 + 584), v5 + 1);
    *(_DWORD *)(*(void *)(a1 + 592) + 4 * v5) = a2;
  }
  else
  {
    *(_DWORD *)(*(void *)(a1 + 592) + 4 * v5) = a2;
    int v6 = v5 + 1;
  }
  _DWORD *v4 = v6;
}

char *sub_13A950C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_136B6B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A959C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13D5788(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13A962C(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 824);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 64);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 72) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 48);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unsigned int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unsigned int v14 = v4 + 2;
      }
      uint64_t v4 = sub_138E200(v12, v14, a3);
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 656) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_18:
      if ((v6 & 0x400000) == 0) {
        goto LABEL_28;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_18;
  }
  uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 664) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x400000) == 0) {
    goto LABEL_28;
  }
LABEL_22:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v15 = *(_DWORD *)(a1 + 828);
  char *v4 = 40;
  v4[1] = v15;
  if (v15 > 0x7F)
  {
    v4[1] = v15 | 0x80;
    unsigned int v16 = v15 >> 7;
    v4[2] = v15 >> 7;
    v4 += 3;
    if (v15 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v17 = v16 >> 14;
        v16 >>= 7;
        *v4++ = v16;
      }
      while (v17);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_28:
  if ((v6 & 0x800000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 832);
    char *v4 = 48;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 672) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v21 = *(int *)(a1 + 836);
    char *v4 = 64;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v24 = *(unsigned int *)(a1 + 88);
  if ((int)v24 >= 1)
  {
    uint64_t v25 = 0;
    uint64_t v26 = 8 * v24;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 9, *(void *)(*(void *)(a1 + 96) + v25 + 8), v4);
      v25 += 8;
    }
    while (v26 != v25);
  }
  if ((v6 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v27 = *(int *)(a1 + 840);
    char *v4 = 80;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unint64_t v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 16, (const void **)(*(void *)(a1 + 680) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v30 = *(_DWORD *)(a1 + 844);
    *(_WORD *)uint64_t v4 = 392;
    v4[2] = v30;
    if (v30 > 0x7F)
    {
      v4[2] = v30 | 0x80;
      unsigned int v31 = v30 >> 7;
      v4[3] = v30 >> 7;
      v4 += 4;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x10) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 18, (const void **)(*(void *)(a1 + 688) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x8000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v33 = *(_DWORD *)(a1 + 848);
    *(_WORD *)uint64_t v4 = 408;
    v4[2] = v33;
    if (v33 > 0x7F)
    {
      v4[2] = v33 | 0x80;
      unsigned int v34 = v33 >> 7;
      v4[3] = v33 >> 7;
      v4 += 4;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  uint64_t v36 = *(unsigned int *)(a1 + 112);
  if ((int)v36 >= 1)
  {
    uint64_t v37 = 0;
    uint64_t v38 = 8 * v36;
    do
    {
      uint64_t v4 = (char *)sub_125CE58(a3, 20, *(void *)(*(void *)(a1 + 120) + v37 + 8), v4);
      v37 += 8;
    }
    while (v38 != v37);
  }
  uint64_t v39 = *(unsigned int *)(a1 + 136);
  if ((int)v39 >= 1)
  {
    uint64_t v40 = 0;
    uint64_t v41 = 8 * v39;
    do
    {
      uint64_t v42 = *(void **)(*(void *)(a1 + 144) + v40 + 8);
      if (*((char *)v42 + 23) < 0)
      {
        int64_t v43 = v42[1];
        if (v43 > 127) {
          goto LABEL_86;
        }
      }
      else
      {
        int64_t v43 = *((unsigned __int8 *)v42 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v43)
      {
        *(_WORD *)uint64_t v4 = 426;
        v4[2] = v43;
        if (*((char *)v42 + 23) < 0) {
          uint64_t v42 = (void *)*v42;
        }
        uint64_t v44 = v4 + 3;
        memcpy(v44, v42, v43);
        uint64_t v4 = &v44[v43];
        goto LABEL_84;
      }
LABEL_86:
      uint64_t v4 = (char *)sub_188A868(a3, 21, (uint64_t)v42, v4);
LABEL_84:
      v40 += 8;
    }
    while (v41 != v40);
  }
  unsigned int v45 = *(_DWORD *)(a1 + 168);
  if ((int)v45 > 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 434;
    uint64_t v46 = v4 + 2;
    if (v45 >= 0x80)
    {
      do
      {
        *v46++ = v45 | 0x80;
        unsigned int v47 = v45 >> 7;
        unsigned int v248 = v45 >> 14;
        v45 >>= 7;
      }
      while (v248);
    }
    else
    {
      LOBYTE(v47) = v45;
    }
    unsigned char *v46 = v47;
    uint64_t v4 = v46 + 1;
    uint64_t v48 = *(unsigned int **)(a1 + 160);
    uint64_t v49 = &v48[*(int *)(a1 + 152)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v51 = *v48++;
      unsigned int v50 = v51;
      char *v4 = v51;
      if (v51 > 0x7F)
      {
        char *v4 = v50 | 0x80;
        unsigned int v52 = v50 >> 7;
        v4[1] = v50 >> 7;
        v4 += 2;
        if (v50 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v53 = v52 >> 14;
            v52 >>= 7;
            *v4++ = v52;
          }
          while (v53);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v48 < v49);
  }
  unsigned int v54 = *(_DWORD *)(a1 + 192);
  if ((int)v54 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 442;
    unint64_t v55 = v4 + 2;
    if (v54 >= 0x80)
    {
      do
      {
        *v55++ = v54 | 0x80;
        unsigned int v56 = v54 >> 7;
        unsigned int v249 = v54 >> 14;
        v54 >>= 7;
      }
      while (v249);
    }
    else
    {
      LOBYTE(v56) = v54;
    }
    *unint64_t v55 = v56;
    uint64_t v4 = v55 + 1;
    uint64_t v57 = *(unsigned int **)(a1 + 184);
    uint64_t v58 = &v57[*(int *)(a1 + 176)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v60 = *v57++;
      unsigned int v59 = v60;
      char *v4 = v60;
      if (v60 > 0x7F)
      {
        char *v4 = v59 | 0x80;
        unsigned int v61 = v59 >> 7;
        v4[1] = v59 >> 7;
        v4 += 2;
        if (v59 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v62 = v61 >> 14;
            v61 >>= 7;
            *v4++ = v61;
          }
          while (v62);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v57 < v58);
  }
  int v63 = *(_DWORD *)(a1 + 208);
  if (v63)
  {
    for (int j = 0; j != v63; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v65 = *(void *)(*(void *)(a1 + 216) + 8 * j + 8);
      *(_WORD *)uint64_t v4 = 458;
      unsigned int v66 = *(_DWORD *)(v65 + 20);
      v4[2] = v66;
      if (v66 > 0x7F) {
        int v67 = sub_188A9CC(v66, v4 + 2);
      }
      else {
        int v67 = v4 + 3;
      }
      uint64_t v4 = sub_13A5020(v65, (unint64_t)v67, a3);
    }
  }
  if ((v6 & 0x10000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v68 = *(_DWORD *)(a1 + 852);
    *(_WORD *)uint64_t v4 = 464;
    v4[2] = v68;
    if (v68 > 0x7F)
    {
      v4[2] = v68 | 0x80;
      unsigned int v69 = v68 >> 7;
      v4[3] = v68 >> 7;
      v4 += 4;
      if (v68 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v70 = v69 >> 14;
          v69 >>= 7;
          *v4++ = v69;
        }
        while (v70);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x20000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v71 = *(_DWORD *)(a1 + 856);
    *(_WORD *)uint64_t v4 = 480;
    v4[2] = v71;
    if (v71 > 0x7F)
    {
      v4[2] = v71 | 0x80;
      unsigned int v72 = v71 >> 7;
      v4[3] = v71 >> 7;
      v4 += 4;
      if (v71 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v73 = v72 >> 14;
          v72 >>= 7;
          *v4++ = v72;
        }
        while (v73);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v74 = *(_DWORD *)(a1 + 860);
    *(_WORD *)uint64_t v4 = 488;
    v4[2] = v74;
    if (v74 > 0x7F)
    {
      v4[2] = v74 | 0x80;
      unsigned int v75 = v74 >> 7;
      v4[3] = v74 >> 7;
      v4 += 4;
      if (v74 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v76 = v75 >> 14;
          v75 >>= 7;
          *v4++ = v75;
        }
        while (v76);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if (v6 < 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v77 = *(_DWORD *)(a1 + 864);
    *(_WORD *)uint64_t v4 = 496;
    v4[2] = v77;
    if (v77 > 0x7F)
    {
      v4[2] = v77 | 0x80;
      unsigned int v78 = v77 >> 7;
      v4[3] = v77 >> 7;
      v4 += 4;
      if (v77 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v79 = v78 >> 14;
          v78 >>= 7;
          *v4++ = v78;
        }
        while (v79);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v80 = *(_DWORD *)(a1 + 44);
  if (v80)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v81 = *(unsigned char *)(a1 + 868);
    *(_WORD *)uint64_t v4 = 504;
    v4[2] = v81;
    v4 += 3;
    if ((v80 & 2) == 0)
    {
LABEL_151:
      if ((v80 & 4) == 0) {
        goto LABEL_162;
      }
      goto LABEL_159;
    }
  }
  else if ((v80 & 2) == 0)
  {
    goto LABEL_151;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v82 = *(unsigned char *)(a1 + 869);
  *(_WORD *)uint64_t v4 = 640;
  v4[2] = v82;
  v4 += 3;
  if ((v80 & 4) != 0)
  {
LABEL_159:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v83 = *(unsigned char *)(a1 + 870);
    *(_WORD *)uint64_t v4 = 648;
    v4[2] = v83;
    v4 += 3;
  }
LABEL_162:
  int v84 = *(_DWORD *)(a1 + 232);
  if (v84)
  {
    for (int k = 0; k != v84; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v86 = *(void *)(*(void *)(a1 + 240) + 8 * k + 8);
      *(_WORD *)uint64_t v4 = 658;
      unsigned int v87 = *(_DWORD *)(v86 + 20);
      v4[2] = v87;
      if (v87 > 0x7F) {
        uint64_t v88 = sub_188A9CC(v87, v4 + 2);
      }
      else {
        uint64_t v88 = v4 + 3;
      }
      uint64_t v4 = sub_13BDB20(v86, (unint64_t)v88, a3);
    }
  }
  int v89 = *(_DWORD *)(a1 + 40);
  if ((v89 & 0x20) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 50, (const void **)(*(void *)(a1 + 696) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  unsigned int v90 = *(_DWORD *)(a1 + 264);
  if ((int)v90 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 922;
    uint64_t v91 = v4 + 2;
    if (v90 >= 0x80)
    {
      do
      {
        *v91++ = v90 | 0x80;
        unsigned int v92 = v90 >> 7;
        unsigned int v250 = v90 >> 14;
        v90 >>= 7;
      }
      while (v250);
    }
    else
    {
      LOBYTE(v92) = v90;
    }
    unsigned char *v91 = v92;
    uint64_t v4 = v91 + 1;
    uint64_t v93 = *(unsigned int **)(a1 + 256);
    unint64_t v94 = &v93[*(int *)(a1 + 248)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v96 = *v93++;
      unsigned int v95 = v96;
      char *v4 = v96;
      if (v96 > 0x7F)
      {
        char *v4 = v95 | 0x80;
        unsigned int v97 = v95 >> 7;
        v4[1] = v95 >> 7;
        v4 += 2;
        if (v95 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v98 = v97 >> 14;
            v97 >>= 7;
            *v4++ = v97;
          }
          while (v98);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v93 < v94);
  }
  unsigned int v99 = *(_DWORD *)(a1 + 288);
  if ((int)v99 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 930;
    v100 = v4 + 2;
    if (v99 >= 0x80)
    {
      do
      {
        *v100++ = v99 | 0x80;
        unsigned int v101 = v99 >> 7;
        unsigned int v251 = v99 >> 14;
        v99 >>= 7;
      }
      while (v251);
    }
    else
    {
      LOBYTE(v101) = v99;
    }
    unsigned char *v100 = v101;
    uint64_t v4 = v100 + 1;
    int v102 = *(unsigned int **)(a1 + 280);
    int v103 = &v102[*(int *)(a1 + 272)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v105 = *v102++;
      unsigned int v104 = v105;
      char *v4 = v105;
      if (v105 > 0x7F)
      {
        char *v4 = v104 | 0x80;
        unsigned int v106 = v104 >> 7;
        v4[1] = v104 >> 7;
        v4 += 2;
        if (v104 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v107 = v106 >> 14;
            v106 >>= 7;
            *v4++ = v106;
          }
          while (v107);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v102 < v103);
  }
  if ((v89 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v108 = *(void *)(a1 + 728);
    *(_WORD *)uint64_t v4 = 938;
    unsigned int v109 = *(_DWORD *)(v108 + 20);
    v4[2] = v109;
    if (v109 > 0x7F) {
      uint64_t v110 = sub_188A9CC(v109, v4 + 2);
    }
    else {
      uint64_t v110 = v4 + 3;
    }
    uint64_t v4 = sub_13788EC(v108, (unint64_t)v110, a3);
  }
  int v111 = *(_DWORD *)(a1 + 304);
  if (v111)
  {
    for (int m = 0; m != v111; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v113 = *(void *)(*(void *)(a1 + 312) + 8 * m + 8);
      *(_WORD *)uint64_t v4 = 946;
      unsigned int v114 = *(_DWORD *)(v113 + 20);
      v4[2] = v114;
      if (v114 > 0x7F) {
        int v115 = sub_188A9CC(v114, v4 + 2);
      }
      else {
        int v115 = v4 + 3;
      }
      uint64_t v4 = sub_1374B08(v113, v115, a3);
    }
  }
  int v116 = *(_DWORD *)(a1 + 328);
  if (v116)
  {
    for (int n = 0; n != v116; ++n)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v118 = *(void *)(*(void *)(a1 + 336) + 8 * n + 8);
      *(_WORD *)uint64_t v4 = 954;
      unsigned int v119 = *(_DWORD *)(v118 + 20);
      v4[2] = v119;
      if (v119 > 0x7F) {
        v120 = sub_188A9CC(v119, v4 + 2);
      }
      else {
        v120 = v4 + 3;
      }
      uint64_t v4 = sub_1374B08(v118, v120, a3);
    }
  }
  int v121 = *(_DWORD *)(a1 + 352);
  if (v121)
  {
    for (iint i = 0; ii != v121; ++ii)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v123 = *(void *)(*(void *)(a1 + 360) + 8 * ii + 8);
      *(_WORD *)uint64_t v4 = 962;
      unsigned int v124 = *(_DWORD *)(v123 + 20);
      v4[2] = v124;
      if (v124 > 0x7F) {
        v125 = sub_188A9CC(v124, v4 + 2);
      }
      else {
        v125 = v4 + 3;
      }
      uint64_t v4 = sub_1374B08(v123, v125, a3);
    }
  }
  if ((v89 & 0x40) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 57, (const void **)(*(void *)(a1 + 704) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v89 & 0x80) == 0)
    {
LABEL_231:
      if ((v89 & 0x400) == 0) {
        goto LABEL_241;
      }
      goto LABEL_235;
    }
  }
  else if ((v89 & 0x80) == 0)
  {
    goto LABEL_231;
  }
  uint64_t v4 = sub_117A0AC(a3, 58, (const void **)(*(void *)(a1 + 712) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v89 & 0x400) == 0) {
    goto LABEL_241;
  }
LABEL_235:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v126 = *(void *)(a1 + 736);
  *(_WORD *)uint64_t v4 = 986;
  unsigned int v127 = *(_DWORD *)(v126 + 20);
  v4[2] = v127;
  if (v127 > 0x7F) {
    uint64_t v128 = sub_188A9CC(v127, v4 + 2);
  }
  else {
    uint64_t v128 = v4 + 3;
  }
  uint64_t v4 = sub_13995A4(v126, (unint64_t)v128, a3);
LABEL_241:
  int v129 = *(_DWORD *)(a1 + 376);
  if (v129)
  {
    for (jint j = 0; jj != v129; ++jj)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v131 = *(void *)(*(void *)(a1 + 384) + 8 * jj + 8);
      *(_WORD *)uint64_t v4 = 994;
      unsigned int v132 = *(_DWORD *)(v131 + 20);
      v4[2] = v132;
      if (v132 > 0x7F) {
        uint64_t v133 = sub_188A9CC(v132, v4 + 2);
      }
      else {
        uint64_t v133 = v4 + 3;
      }
      uint64_t v4 = sub_137FB48(v131, (unint64_t)v133, a3);
    }
  }
  if ((v89 & 0x800) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v134 = *(void *)(a1 + 744);
    *(_WORD *)uint64_t v4 = 1002;
    unsigned int v135 = *(_DWORD *)(v134 + 20);
    v4[2] = v135;
    if (v135 > 0x7F) {
      uint64_t v136 = sub_188A9CC(v135, v4 + 2);
    }
    else {
      uint64_t v136 = v4 + 3;
    }
    uint64_t v4 = sub_1398964(v134, (unint64_t)v136, a3);
  }
  int v137 = *(_DWORD *)(a1 + 400);
  if (v137)
  {
    for (kint k = 0; kk != v137; ++kk)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v139 = *(void *)(*(void *)(a1 + 408) + 8 * kk + 8);
      *(_WORD *)uint64_t v4 = 1010;
      unsigned int v140 = *(_DWORD *)(v139 + 20);
      v4[2] = v140;
      if (v140 > 0x7F) {
        uint64_t v141 = sub_188A9CC(v140, v4 + 2);
      }
      else {
        uint64_t v141 = v4 + 3;
      }
      uint64_t v4 = sub_1387D88(v139, v141, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 44) & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v142 = *(_DWORD *)(a1 + 872);
    *(_WORD *)uint64_t v4 = 1016;
    v4[2] = v142;
    if (v142 > 0x7F)
    {
      v4[2] = v142 | 0x80;
      unsigned int v143 = v142 >> 7;
      v4[3] = v142 >> 7;
      v4 += 4;
      if (v142 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v144 = v143 >> 14;
          v143 >>= 7;
          *v4++ = v143;
        }
        while (v144);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v145 = *(_DWORD *)(a1 + 424);
  if (v145)
  {
    for (mint m = 0; mm != v145; ++mm)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v147 = *(void *)(*(void *)(a1 + 432) + 8 * mm + 8);
      *(_WORD *)uint64_t v4 = 1154;
      unsigned int v148 = *(_DWORD *)(v147 + 20);
      v4[2] = v148;
      if (v148 > 0x7F) {
        uint64_t v149 = sub_188A9CC(v148, v4 + 2);
      }
      else {
        uint64_t v149 = v4 + 3;
      }
      uint64_t v4 = sub_1388514(v147, (unint64_t)v149, a3);
    }
  }
  int v150 = *(_DWORD *)(a1 + 40);
  if ((v150 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v151 = *(void *)(a1 + 752);
    *(_WORD *)uint64_t v4 = 1162;
    unsigned int v152 = *(_DWORD *)(v151 + 20);
    v4[2] = v152;
    if (v152 > 0x7F) {
      int v153 = sub_188A9CC(v152, v4 + 2);
    }
    else {
      int v153 = v4 + 3;
    }
    uint64_t v4 = sub_13D03FC(v151, (unint64_t)v153, a3);
  }
  int v154 = *(_DWORD *)(a1 + 448);
  if (v154)
  {
    for (nint n = 0; nn != v154; ++nn)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v156 = *(void *)(*(void *)(a1 + 456) + 8 * nn + 8);
      *(_WORD *)uint64_t v4 = 1170;
      unsigned int v157 = *(_DWORD *)(v156 + 20);
      v4[2] = v157;
      if (v157 > 0x7F) {
        uint64_t v158 = sub_188A9CC(v157, v4 + 2);
      }
      else {
        uint64_t v158 = v4 + 3;
      }
      uint64_t v4 = sub_1399FB4(v156, (unint64_t)v158, a3);
    }
  }
  int v159 = *(_DWORD *)(a1 + 472);
  if (v159)
  {
    for (int i1 = 0; i1 != v159; ++i1)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v161 = *(void *)(*(void *)(a1 + 480) + 8 * i1 + 8);
      *(_WORD *)uint64_t v4 = 1178;
      unsigned int v162 = *(_DWORD *)(v161 + 20);
      v4[2] = v162;
      if (v162 > 0x7F) {
        uint64_t v163 = sub_188A9CC(v162, v4 + 2);
      }
      else {
        uint64_t v163 = v4 + 3;
      }
      uint64_t v4 = sub_13A5898(v161, (unint64_t)v163, a3);
    }
  }
  if ((v150 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v164 = *(void *)(a1 + 760);
    *(_WORD *)uint64_t v4 = 1186;
    unsigned int v165 = *(_DWORD *)(v164 + 20);
    v4[2] = v165;
    if (v165 > 0x7F) {
      int v166 = sub_188A9CC(v165, v4 + 2);
    }
    else {
      int v166 = v4 + 3;
    }
    uint64_t v4 = sub_1374B08(v164, v166, a3);
    if ((v150 & 0x4000) == 0)
    {
LABEL_304:
      if ((v150 & 0x8000) == 0) {
        goto LABEL_324;
      }
      goto LABEL_318;
    }
  }
  else if ((v150 & 0x4000) == 0)
  {
    goto LABEL_304;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v167 = *(void *)(a1 + 768);
  *(_WORD *)uint64_t v4 = 1194;
  unsigned int v168 = *(_DWORD *)(v167 + 20);
  v4[2] = v168;
  if (v168 > 0x7F) {
    uint64_t v169 = sub_188A9CC(v168, v4 + 2);
  }
  else {
    uint64_t v169 = v4 + 3;
  }
  uint64_t v4 = sub_138A1E4(v167, v169, a3);
  if ((v150 & 0x8000) != 0)
  {
LABEL_318:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v170 = *(void *)(a1 + 776);
    *(_WORD *)uint64_t v4 = 1202;
    unsigned int v171 = *(_DWORD *)(v170 + 20);
    v4[2] = v171;
    if (v171 > 0x7F) {
      int v172 = sub_188A9CC(v171, v4 + 2);
    }
    else {
      int v172 = v4 + 3;
    }
    uint64_t v4 = sub_1374B08(v170, v172, a3);
  }
LABEL_324:
  int v173 = *(_DWORD *)(a1 + 496);
  if (v173)
  {
    for (int i2 = 0; i2 != v173; ++i2)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v175 = *(void *)(*(void *)(a1 + 504) + 8 * i2 + 8);
      *(_WORD *)uint64_t v4 = 1210;
      unsigned int v176 = *(_DWORD *)(v175 + 40);
      v4[2] = v176;
      if (v176 > 0x7F) {
        uint64_t v177 = sub_188A9CC(v176, v4 + 2);
      }
      else {
        uint64_t v177 = v4 + 3;
      }
      uint64_t v4 = sub_1390A84(v175, v177, a3);
    }
  }
  int v178 = *(_DWORD *)(a1 + 520);
  if (v178)
  {
    for (int i3 = 0; i3 != v178; ++i3)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v180 = *(void *)(*(void *)(a1 + 528) + 8 * i3 + 8);
      *(_WORD *)uint64_t v4 = 1218;
      unsigned int v181 = *(_DWORD *)(v180 + 40);
      v4[2] = v181;
      if (v181 > 0x7F) {
        uint64_t v182 = sub_188A9CC(v181, v4 + 2);
      }
      else {
        uint64_t v182 = v4 + 3;
      }
      uint64_t v4 = sub_13915E4(v180, v182, a3);
    }
  }
  if ((*(unsigned char *)(a1 + 44) & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v183 = *(int *)(a1 + 876);
    *(_WORD *)uint64_t v4 = 1224;
    v4[2] = v183;
    if (v183 > 0x7F)
    {
      v4[2] = v183 | 0x80;
      unint64_t v184 = v183 >> 7;
      v4[3] = v183 >> 7;
      v4 += 4;
      if (v183 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v185 = v184 >> 14;
          v184 >>= 7;
          *v4++ = v184;
        }
        while (v185);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v186 = *(_DWORD *)(a1 + 544);
  if (v186)
  {
    for (int i4 = 0; i4 != v186; ++i4)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v188 = *(void *)(*(void *)(a1 + 552) + 8 * i4 + 8);
      *(_WORD *)uint64_t v4 = 1234;
      unsigned int v189 = *(_DWORD *)(v188 + 20);
      v4[2] = v189;
      if (v189 > 0x7F) {
        uint64_t v190 = sub_188A9CC(v189, v4 + 2);
      }
      else {
        uint64_t v190 = v4 + 3;
      }
      uint64_t v4 = sub_13A5DE4(v188, (unint64_t)v190, a3);
    }
  }
  int v191 = *(_DWORD *)(a1 + 40);
  if ((v191 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v192 = *(void *)(a1 + 784);
    *(_WORD *)uint64_t v4 = 1242;
    unsigned int v193 = *(_DWORD *)(v192 + 20);
    v4[2] = v193;
    if (v193 > 0x7F) {
      uint64_t v194 = sub_188A9CC(v193, v4 + 2);
    }
    else {
      uint64_t v194 = v4 + 3;
    }
    uint64_t v4 = sub_1396D20(v192, (unint64_t)v194, a3);
  }
  if ((v191 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v195 = *(void *)(a1 + 792);
    *(_WORD *)uint64_t v4 = 1250;
    unsigned int v196 = *(_DWORD *)(v195 + 20);
    v4[2] = v196;
    if (v196 > 0x7F) {
      uint64_t v197 = sub_188A9CC(v196, v4 + 2);
    }
    else {
      uint64_t v197 = v4 + 3;
    }
    uint64_t v4 = sub_1396D20(v195, (unint64_t)v197, a3);
  }
  int v198 = *(_DWORD *)(a1 + 44);
  if ((v198 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v199 = *(int *)(a1 + 880);
    *(_WORD *)uint64_t v4 = 1256;
    v4[2] = v199;
    if (v199 > 0x7F)
    {
      v4[2] = v199 | 0x80;
      unint64_t v200 = v199 >> 7;
      v4[3] = v199 >> 7;
      v4 += 4;
      if (v199 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v201 = v200 >> 14;
          v200 >>= 7;
          *v4++ = v200;
        }
        while (v201);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v198 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v202 = *(int *)(a1 + 884);
    *(_WORD *)uint64_t v4 = 1264;
    v4[2] = v202;
    if (v202 > 0x7F)
    {
      v4[2] = v202 | 0x80;
      unint64_t v203 = v202 >> 7;
      v4[3] = v202 >> 7;
      v4 += 4;
      if (v202 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v204 = v203 >> 14;
          v203 >>= 7;
          *v4++ = v203;
        }
        while (v204);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  int v205 = *(_DWORD *)(a1 + 40);
  if ((v205 & 0x100) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 79, (const void **)(*(void *)(a1 + 720) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  unsigned int v206 = *(_DWORD *)(a1 + 576);
  if ((int)v206 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 1410;
    v207 = v4 + 2;
    if (v206 >= 0x80)
    {
      do
      {
        *v207++ = v206 | 0x80;
        unsigned int v208 = v206 >> 7;
        unsigned int v252 = v206 >> 14;
        v206 >>= 7;
      }
      while (v252);
    }
    else
    {
      LOBYTE(v208) = v206;
    }
    unsigned char *v207 = v208;
    uint64_t v4 = v207 + 1;
    uint64_t v209 = *(int **)(a1 + 568);
    uint64_t v210 = &v209[*(int *)(a1 + 560)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v212 = *v209++;
      unint64_t v211 = v212;
      char *v4 = v212;
      if (v212 > 0x7F)
      {
        char *v4 = v211 | 0x80;
        unint64_t v213 = v211 >> 7;
        v4[1] = v211 >> 7;
        v4 += 2;
        if (v211 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v214 = v213 >> 14;
            v213 >>= 7;
            *v4++ = v213;
          }
          while (v214);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v209 < v210);
  }
  unsigned int v215 = *(_DWORD *)(a1 + 600);
  if ((int)v215 >= 1)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    *(_WORD *)uint64_t v4 = 1418;
    int v216 = v4 + 2;
    if (v215 >= 0x80)
    {
      do
      {
        *v216++ = v215 | 0x80;
        unsigned int v217 = v215 >> 7;
        unsigned int v253 = v215 >> 14;
        v215 >>= 7;
      }
      while (v253);
    }
    else
    {
      LOBYTE(v217) = v215;
    }
    *int v216 = v217;
    uint64_t v4 = v216 + 1;
    int v218 = *(unsigned int **)(a1 + 592);
    int v219 = &v218[*(int *)(a1 + 584)];
    do
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v221 = *v218++;
      unsigned int v220 = v221;
      char *v4 = v221;
      if (v221 > 0x7F)
      {
        char *v4 = v220 | 0x80;
        unsigned int v222 = v220 >> 7;
        v4[1] = v220 >> 7;
        v4 += 2;
        if (v220 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v223 = v222 >> 14;
            v222 >>= 7;
            *v4++ = v222;
          }
          while (v223);
        }
      }
      else
      {
        ++v4;
      }
    }
    while (v218 < v219);
  }
  int v224 = *(_DWORD *)(a1 + 616);
  if (v224)
  {
    for (int i5 = 0; i5 != v224; ++i5)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v226 = *(void *)(*(void *)(a1 + 624) + 8 * i5 + 8);
      *(_WORD *)uint64_t v4 = 1426;
      unsigned int v227 = *(_DWORD *)(v226 + 20);
      v4[2] = v227;
      if (v227 > 0x7F) {
        int v228 = sub_188A9CC(v227, v4 + 2);
      }
      else {
        int v228 = v4 + 3;
      }
      uint64_t v4 = sub_136BC38(v226, (unint64_t)v228, a3);
    }
  }
  int v229 = *(_DWORD *)(a1 + 640);
  if (v229)
  {
    for (int i6 = 0; i6 != v229; ++i6)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v231 = *(void *)(*(void *)(a1 + 648) + 8 * i6 + 8);
      *(_WORD *)uint64_t v4 = 1434;
      unsigned int v232 = *(_DWORD *)(v231 + 20);
      v4[2] = v232;
      if (v232 > 0x7F) {
        int v233 = sub_188A9CC(v232, v4 + 2);
      }
      else {
        int v233 = v4 + 3;
      }
      uint64_t v4 = sub_136BC38(v231, (unint64_t)v233, a3);
    }
  }
  if ((v205 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v234 = *(void *)(a1 + 800);
    *(_WORD *)uint64_t v4 = 1458;
    unsigned int v235 = *(_DWORD *)(v234 + 20);
    v4[2] = v235;
    if (v235 > 0x7F) {
      v236 = sub_188A9CC(v235, v4 + 2);
    }
    else {
      v236 = v4 + 3;
    }
    uint64_t v4 = sub_1377AD4(v234, (unint64_t)v236, a3);
    if ((v205 & 0x80000) == 0)
    {
LABEL_429:
      if ((v205 & 0x100000) == 0) {
        goto LABEL_449;
      }
      goto LABEL_443;
    }
  }
  else if ((v205 & 0x80000) == 0)
  {
    goto LABEL_429;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v237 = *(void *)(a1 + 808);
  *(_WORD *)uint64_t v4 = 1466;
  unsigned int v238 = *(_DWORD *)(v237 + 20);
  v4[2] = v238;
  if (v238 > 0x7F) {
    v239 = sub_188A9CC(v238, v4 + 2);
  }
  else {
    v239 = v4 + 3;
  }
  uint64_t v4 = sub_1377AD4(v237, (unint64_t)v239, a3);
  if ((v205 & 0x100000) != 0)
  {
LABEL_443:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v240 = *(void *)(a1 + 816);
    *(_WORD *)uint64_t v4 = 1474;
    unsigned int v241 = *(_DWORD *)(v240 + 40);
    v4[2] = v241;
    if (v241 > 0x7F) {
      v242 = sub_188A9CC(v241, v4 + 2);
    }
    else {
      v242 = v4 + 3;
    }
    uint64_t v4 = sub_13D59B8(v240, v242, a3);
  }
LABEL_449:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 950, 10101, v4, a3);
  }
  uint64_t v243 = *(void *)(a1 + 8);
  if ((v243 & 1) == 0) {
    return v4;
  }
  unint64_t v245 = v243 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v245 + 31) < 0)
  {
    v246 = *(void **)(v245 + 8);
    uint64_t v247 = *(void *)(v245 + 16);
  }
  else
  {
    v246 = (void *)(v245 + 8);
    LODWORD(v247) = *(unsigned __int8 *)(v245 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v247)
  {
    uint64_t v254 = (int)v247;
    memcpy(v4, v246, (int)v247);
    v4 += v254;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v246, v247, v4);
}

uint64_t sub_13AB404(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 64);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 72);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_138F234(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(unsigned int *)(a1 + 88);
  uint64_t v11 = v4 + v10;
  if ((int)v10 >= 1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 96) + 8);
    do
    {
      uint64_t v13 = *v12++;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v11 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      --v10;
    }
    while (v10);
  }
  uint64_t v16 = *(unsigned int *)(a1 + 112);
  uint64_t v17 = v11 + 2 * v16;
  if ((int)v16 >= 1)
  {
    unsigned int v18 = (uint64_t *)(*(void *)(a1 + 120) + 8);
    do
    {
      uint64_t v19 = *v18++;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v17 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6);
      --v16;
    }
    while (v16);
  }
  uint64_t v22 = *(unsigned int *)(a1 + 136);
  uint64_t v23 = v17 + 2 * v22;
  if ((int)v22 >= 1)
  {
    uint64_t v24 = (uint64_t *)(*(void *)(a1 + 144) + 8);
    do
    {
      uint64_t v25 = *v24++;
      uint64_t v26 = *(unsigned __int8 *)(v25 + 23);
      uint64_t v27 = *(void *)(v25 + 8);
      if ((v26 & 0x80u) == 0) {
        uint64_t v27 = v26;
      }
      v23 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      --v22;
    }
    while (v22);
  }
  uint64_t v28 = sub_188D4F0((unsigned int *)(a1 + 152));
  uint64_t v29 = 10;
  uint64_t v30 = (9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v28 >= 0) {
    uint64_t v29 = v30;
  }
  uint64_t v31 = v23 + v29 + 2;
  if (v28) {
    int v32 = v28;
  }
  else {
    int v32 = 0;
  }
  if (!v28) {
    uint64_t v31 = v23;
  }
  *(_DWORD *)(a1 + 168) = v32;
  uint64_t v33 = v31 + v28;
  uint64_t v34 = sub_188D4F0((unsigned int *)(a1 + 176));
  uint64_t v35 = 10;
  uint64_t v36 = (9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v34 >= 0) {
    uint64_t v35 = v36;
  }
  uint64_t v37 = v33 + v35 + 2;
  if (v34) {
    int v38 = v34;
  }
  else {
    int v38 = 0;
  }
  if (!v34) {
    uint64_t v37 = v33;
  }
  *(_DWORD *)(a1 + 192) = v38;
  uint64_t v39 = v37 + v34;
  uint64_t v40 = *(int *)(a1 + 208);
  uint64_t v41 = v39 + 2 * v40;
  uint64_t v42 = *(void *)(a1 + 216);
  if (v42) {
    int64_t v43 = (uint64_t *)(v42 + 8);
  }
  else {
    int64_t v43 = 0;
  }
  if (v40)
  {
    uint64_t v44 = 8 * v40;
    do
    {
      uint64_t v45 = *v43++;
      uint64_t v46 = sub_13A5248(v45);
      v41 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6);
      v44 -= 8;
    }
    while (v44);
  }
  uint64_t v47 = *(int *)(a1 + 232);
  uint64_t v48 = v41 + 2 * v47;
  uint64_t v49 = *(void *)(a1 + 240);
  if (v49) {
    unsigned int v50 = (uint64_t *)(v49 + 8);
  }
  else {
    unsigned int v50 = 0;
  }
  if (v47)
  {
    uint64_t v51 = 8 * v47;
    do
    {
      uint64_t v52 = *v50++;
      uint64_t v53 = sub_13BE050(v52);
      v48 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6);
      v51 -= 8;
    }
    while (v51);
  }
  uint64_t v54 = sub_188D4F0((unsigned int *)(a1 + 248));
  uint64_t v55 = 10;
  uint64_t v56 = (9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v54 >= 0) {
    uint64_t v55 = v56;
  }
  uint64_t v57 = v48 + v55 + 2;
  if (v54) {
    int v58 = v54;
  }
  else {
    int v58 = 0;
  }
  if (!v54) {
    uint64_t v57 = v48;
  }
  *(_DWORD *)(a1 + 264) = v58;
  uint64_t v59 = v57 + v54;
  uint64_t v60 = sub_188D4F0((unsigned int *)(a1 + 272));
  uint64_t v61 = 10;
  uint64_t v62 = (9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6;
  if ((int)v60 >= 0) {
    uint64_t v61 = v62;
  }
  uint64_t v63 = v59 + v61 + 2;
  if (v60) {
    int v64 = v60;
  }
  else {
    int v64 = 0;
  }
  if (!v60) {
    uint64_t v63 = v59;
  }
  *(_DWORD *)(a1 + 288) = v64;
  uint64_t v65 = v63 + v60;
  uint64_t v66 = *(int *)(a1 + 304);
  uint64_t v67 = v65 + 2 * v66;
  uint64_t v68 = *(void *)(a1 + 312);
  if (v68) {
    unsigned int v69 = (uint64_t *)(v68 + 8);
  }
  else {
    unsigned int v69 = 0;
  }
  if (v66)
  {
    uint64_t v70 = 8 * v66;
    do
    {
      uint64_t v71 = *v69++;
      uint64_t v72 = sub_1374EEC(v71);
      v67 += v72 + ((9 * (__clz(v72 | 1) ^ 0x1F) + 73) >> 6);
      v70 -= 8;
    }
    while (v70);
  }
  uint64_t v73 = *(int *)(a1 + 328);
  uint64_t v74 = v67 + 2 * v73;
  uint64_t v75 = *(void *)(a1 + 336);
  if (v75) {
    unsigned int v76 = (uint64_t *)(v75 + 8);
  }
  else {
    unsigned int v76 = 0;
  }
  if (v73)
  {
    uint64_t v77 = 8 * v73;
    do
    {
      uint64_t v78 = *v76++;
      uint64_t v79 = sub_1374EEC(v78);
      v74 += v79 + ((9 * (__clz(v79 | 1) ^ 0x1F) + 73) >> 6);
      v77 -= 8;
    }
    while (v77);
  }
  uint64_t v80 = *(int *)(a1 + 352);
  uint64_t v81 = v74 + 2 * v80;
  uint64_t v82 = *(void *)(a1 + 360);
  if (v82) {
    char v83 = (uint64_t *)(v82 + 8);
  }
  else {
    char v83 = 0;
  }
  if (v80)
  {
    uint64_t v84 = 8 * v80;
    do
    {
      uint64_t v85 = *v83++;
      uint64_t v86 = sub_1374EEC(v85);
      v81 += v86 + ((9 * (__clz(v86 | 1) ^ 0x1F) + 73) >> 6);
      v84 -= 8;
    }
    while (v84);
  }
  uint64_t v87 = *(int *)(a1 + 376);
  uint64_t v88 = v81 + 2 * v87;
  uint64_t v89 = *(void *)(a1 + 384);
  if (v89) {
    unsigned int v90 = (uint64_t *)(v89 + 8);
  }
  else {
    unsigned int v90 = 0;
  }
  if (v87)
  {
    uint64_t v91 = 8 * v87;
    do
    {
      uint64_t v92 = *v90++;
      uint64_t v93 = sub_1380528(v92);
      v88 += v93 + ((9 * (__clz(v93 | 1) ^ 0x1F) + 73) >> 6);
      v91 -= 8;
    }
    while (v91);
  }
  uint64_t v94 = *(int *)(a1 + 400);
  uint64_t v95 = v88 + 2 * v94;
  uint64_t v96 = *(void *)(a1 + 408);
  if (v96) {
    unsigned int v97 = (uint64_t *)(v96 + 8);
  }
  else {
    unsigned int v97 = 0;
  }
  if (v94)
  {
    uint64_t v98 = 8 * v94;
    do
    {
      uint64_t v99 = *v97++;
      uint64_t v100 = sub_1387FC8(v99);
      v95 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6);
      v98 -= 8;
    }
    while (v98);
  }
  uint64_t v101 = *(int *)(a1 + 424);
  uint64_t v102 = v95 + 2 * v101;
  uint64_t v103 = *(void *)(a1 + 432);
  if (v103) {
    unsigned int v104 = (uint64_t *)(v103 + 8);
  }
  else {
    unsigned int v104 = 0;
  }
  if (v101)
  {
    uint64_t v105 = 8 * v101;
    do
    {
      uint64_t v106 = *v104++;
      uint64_t v107 = sub_1388734(v106);
      v102 += v107 + ((9 * (__clz(v107 | 1) ^ 0x1F) + 73) >> 6);
      v105 -= 8;
    }
    while (v105);
  }
  uint64_t v108 = *(int *)(a1 + 448);
  uint64_t v109 = v102 + 2 * v108;
  uint64_t v110 = *(void *)(a1 + 456);
  if (v110) {
    int v111 = (uint64_t *)(v110 + 8);
  }
  else {
    int v111 = 0;
  }
  if (v108)
  {
    uint64_t v112 = 8 * v108;
    do
    {
      uint64_t v113 = *v111++;
      uint64_t v114 = sub_139A238(v113);
      v109 += v114 + ((9 * (__clz(v114 | 1) ^ 0x1F) + 73) >> 6);
      v112 -= 8;
    }
    while (v112);
  }
  uint64_t v115 = *(int *)(a1 + 472);
  uint64_t v116 = v109 + 2 * v115;
  uint64_t v117 = *(void *)(a1 + 480);
  if (v117) {
    uint64_t v118 = (uint64_t *)(v117 + 8);
  }
  else {
    uint64_t v118 = 0;
  }
  if (v115)
  {
    uint64_t v119 = 8 * v115;
    do
    {
      uint64_t v120 = *v118++;
      uint64_t v121 = sub_13A5A50(v120);
      v116 += v121 + ((9 * (__clz(v121 | 1) ^ 0x1F) + 73) >> 6);
      v119 -= 8;
    }
    while (v119);
  }
  uint64_t v122 = *(int *)(a1 + 496);
  uint64_t v123 = v116 + 2 * v122;
  uint64_t v124 = *(void *)(a1 + 504);
  if (v124) {
    v125 = (uint64_t *)(v124 + 8);
  }
  else {
    v125 = 0;
  }
  if (v122)
  {
    uint64_t v126 = 8 * v122;
    do
    {
      uint64_t v127 = *v125++;
      uint64_t v128 = sub_1390BC8(v127);
      v123 += v128 + ((9 * (__clz(v128 | 1) ^ 0x1F) + 73) >> 6);
      v126 -= 8;
    }
    while (v126);
  }
  uint64_t v129 = *(int *)(a1 + 520);
  uint64_t v130 = v123 + 2 * v129;
  uint64_t v131 = *(void *)(a1 + 528);
  if (v131) {
    unsigned int v132 = (uint64_t *)(v131 + 8);
  }
  else {
    unsigned int v132 = 0;
  }
  if (v129)
  {
    uint64_t v133 = 8 * v129;
    do
    {
      uint64_t v134 = *v132++;
      uint64_t v135 = sub_1391728(v134);
      v130 += v135 + ((9 * (__clz(v135 | 1) ^ 0x1F) + 73) >> 6);
      v133 -= 8;
    }
    while (v133);
  }
  uint64_t v136 = *(int *)(a1 + 544);
  uint64_t v137 = v130 + 2 * v136;
  uint64_t v138 = *(void *)(a1 + 552);
  if (v138) {
    uint64_t v139 = (uint64_t *)(v138 + 8);
  }
  else {
    uint64_t v139 = 0;
  }
  if (v136)
  {
    uint64_t v140 = 8 * v136;
    do
    {
      uint64_t v141 = *v139++;
      uint64_t v142 = sub_13A5F88(v141);
      v137 += v142 + ((9 * (__clz(v142 | 1) ^ 0x1F) + 73) >> 6);
      v140 -= 8;
    }
    while (v140);
  }
  int v143 = *(_DWORD *)(a1 + 560);
  if (v143)
  {
    int v144 = 0;
    uint64_t v145 = 0;
    do
    {
      int v146 = *(_DWORD *)(*(void *)(a1 + 568) + 4 * v144);
      if (v146 < 0) {
        uint64_t v147 = 10;
      }
      else {
        uint64_t v147 = (9 * (__clz(v146 | 1) ^ 0x1F) + 73) >> 6;
      }
      v145 += v147;
      ++v144;
    }
    while (v143 != v144);
    if (v145)
    {
      if ((v145 & 0x80000000) != 0) {
        uint64_t v148 = 10;
      }
      else {
        uint64_t v148 = (9 * (__clz(v145 | 1) ^ 0x1F) + 73) >> 6;
      }
      v137 += v148 + 2;
      int v143 = v145;
    }
    else
    {
      int v143 = 0;
    }
  }
  else
  {
    uint64_t v145 = 0;
  }
  *(_DWORD *)(a1 + 576) = v143;
  uint64_t v149 = v137 + v145;
  uint64_t v150 = sub_188D4F0((unsigned int *)(a1 + 584));
  if (v150)
  {
    int v151 = v150;
    if ((v150 & 0x80000000) != 0) {
      uint64_t v152 = 10;
    }
    else {
      uint64_t v152 = (9 * (__clz(v150 | 1) ^ 0x1F) + 73) >> 6;
    }
    v149 += v152 + 2;
  }
  else
  {
    int v151 = 0;
  }
  *(_DWORD *)(a1 + 600) = v151;
  uint64_t v153 = *(int *)(a1 + 616);
  uint64_t v154 = v149 + v150 + 2 * v153;
  uint64_t v155 = *(void *)(a1 + 624);
  if (v155) {
    uint64_t v156 = (uint64_t *)(v155 + 8);
  }
  else {
    uint64_t v156 = 0;
  }
  if (v153)
  {
    uint64_t v157 = 8 * v153;
    do
    {
      uint64_t v158 = *v156++;
      uint64_t v159 = sub_136C000(v158);
      v154 += v159 + ((9 * (__clz(v159 | 1) ^ 0x1F) + 73) >> 6);
      v157 -= 8;
    }
    while (v157);
  }
  uint64_t v160 = *(int *)(a1 + 640);
  uint64_t v161 = v154 + 2 * v160;
  uint64_t v162 = *(void *)(a1 + 648);
  if (v162) {
    uint64_t v163 = (uint64_t *)(v162 + 8);
  }
  else {
    uint64_t v163 = 0;
  }
  if (v160)
  {
    uint64_t v164 = 8 * v160;
    do
    {
      uint64_t v165 = *v163++;
      uint64_t v166 = sub_136C000(v165);
      v161 += v166 + ((9 * (__clz(v166 | 1) ^ 0x1F) + 73) >> 6);
      v164 -= 8;
    }
    while (v164);
  }
  unsigned int v167 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v167) {
    goto LABEL_171;
  }
  if (v167)
  {
    unint64_t v179 = *(void *)(a1 + 656) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v180 = *(unsigned __int8 *)(v179 + 23);
    uint64_t v181 = *(void *)(v179 + 8);
    if ((v180 & 0x80u) == 0) {
      uint64_t v181 = v180;
    }
    v161 += v181 + ((9 * (__clz(v181 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v167 & 2) == 0)
    {
LABEL_162:
      if ((v167 & 4) == 0) {
        goto LABEL_163;
      }
      goto LABEL_224;
    }
  }
  else if ((v167 & 2) == 0)
  {
    goto LABEL_162;
  }
  unint64_t v182 = *(void *)(a1 + 664) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v183 = *(unsigned __int8 *)(v182 + 23);
  uint64_t v184 = *(void *)(v182 + 8);
  if ((v183 & 0x80u) == 0) {
    uint64_t v184 = v183;
  }
  v161 += v184 + ((9 * (__clz(v184 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v167 & 4) == 0)
  {
LABEL_163:
    if ((v167 & 8) == 0) {
      goto LABEL_164;
    }
    goto LABEL_227;
  }
LABEL_224:
  unint64_t v185 = *(void *)(a1 + 672) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v186 = *(unsigned __int8 *)(v185 + 23);
  uint64_t v187 = *(void *)(v185 + 8);
  if ((v186 & 0x80u) == 0) {
    uint64_t v187 = v186;
  }
  v161 += v187 + ((9 * (__clz(v187 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v167 & 8) == 0)
  {
LABEL_164:
    if ((v167 & 0x10) == 0) {
      goto LABEL_165;
    }
    goto LABEL_230;
  }
LABEL_227:
  unint64_t v188 = *(void *)(a1 + 680) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v189 = *(unsigned __int8 *)(v188 + 23);
  uint64_t v190 = *(void *)(v188 + 8);
  if ((v189 & 0x80u) == 0) {
    uint64_t v190 = v189;
  }
  v161 += v190 + ((9 * (__clz(v190 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x10) == 0)
  {
LABEL_165:
    if ((v167 & 0x20) == 0) {
      goto LABEL_166;
    }
LABEL_233:
    unint64_t v194 = *(void *)(a1 + 696) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v195 = *(unsigned __int8 *)(v194 + 23);
    uint64_t v196 = *(void *)(v194 + 8);
    if ((v195 & 0x80u) == 0) {
      uint64_t v196 = v195;
    }
    v161 += v196 + ((9 * (__clz(v196 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v167 & 0x40) == 0)
    {
LABEL_167:
      if ((v167 & 0x80) == 0) {
        goto LABEL_171;
      }
      goto LABEL_168;
    }
    goto LABEL_236;
  }
LABEL_230:
  unint64_t v191 = *(void *)(a1 + 688) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v192 = *(unsigned __int8 *)(v191 + 23);
  uint64_t v193 = *(void *)(v191 + 8);
  if ((v192 & 0x80u) == 0) {
    uint64_t v193 = v192;
  }
  v161 += v193 + ((9 * (__clz(v193 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x20) != 0) {
    goto LABEL_233;
  }
LABEL_166:
  if ((v167 & 0x40) == 0) {
    goto LABEL_167;
  }
LABEL_236:
  unint64_t v197 = *(void *)(a1 + 704) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v198 = *(unsigned __int8 *)(v197 + 23);
  uint64_t v199 = *(void *)(v197 + 8);
  if ((v198 & 0x80u) == 0) {
    uint64_t v199 = v198;
  }
  v161 += v199 + ((9 * (__clz(v199 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x80) != 0)
  {
LABEL_168:
    unint64_t v168 = *(void *)(a1 + 712) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v169 = *(unsigned __int8 *)(v168 + 23);
    uint64_t v170 = *(void *)(v168 + 8);
    if ((v169 & 0x80u) == 0) {
      uint64_t v170 = v169;
    }
    v161 += v170 + ((9 * (__clz(v170 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_171:
  if ((v167 & 0xFF00) == 0) {
    goto LABEL_181;
  }
  if ((v167 & 0x100) != 0)
  {
    unint64_t v200 = *(void *)(a1 + 720) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v201 = *(unsigned __int8 *)(v200 + 23);
    uint64_t v202 = *(void *)(v200 + 8);
    if ((v201 & 0x80u) == 0) {
      uint64_t v202 = v201;
    }
    v161 += v202 + ((9 * (__clz(v202 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v167 & 0x200) == 0)
    {
LABEL_174:
      if ((v167 & 0x400) == 0) {
        goto LABEL_175;
      }
      goto LABEL_244;
    }
  }
  else if ((v167 & 0x200) == 0)
  {
    goto LABEL_174;
  }
  uint64_t v203 = sub_1378B68(*(void *)(a1 + 728));
  v161 += v203 + ((9 * (__clz(v203 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x400) == 0)
  {
LABEL_175:
    if ((v167 & 0x800) == 0) {
      goto LABEL_176;
    }
    goto LABEL_245;
  }
LABEL_244:
  uint64_t v204 = sub_13997FC(*(void *)(a1 + 736));
  v161 += v204 + ((9 * (__clz(v204 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x800) == 0)
  {
LABEL_176:
    if ((v167 & 0x1000) == 0) {
      goto LABEL_177;
    }
    goto LABEL_246;
  }
LABEL_245:
  uint64_t v205 = sub_1398C8C(*(void *)(a1 + 744));
  v161 += v205 + ((9 * (__clz(v205 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x1000) == 0)
  {
LABEL_177:
    if ((v167 & 0x2000) == 0) {
      goto LABEL_178;
    }
    goto LABEL_247;
  }
LABEL_246:
  uint64_t v206 = sub_13D05B4(*(void *)(a1 + 752));
  v161 += v206 + ((9 * (__clz(v206 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x2000) == 0)
  {
LABEL_178:
    if ((v167 & 0x4000) == 0) {
      goto LABEL_179;
    }
    goto LABEL_248;
  }
LABEL_247:
  uint64_t v207 = sub_1374EEC(*(void *)(a1 + 760));
  v161 += v207 + ((9 * (__clz(v207 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x4000) == 0)
  {
LABEL_179:
    if ((v167 & 0x8000) == 0) {
      goto LABEL_181;
    }
    goto LABEL_180;
  }
LABEL_248:
  uint64_t v208 = sub_138A570(*(void *)(a1 + 768));
  v161 += v208 + ((9 * (__clz(v208 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x8000) != 0)
  {
LABEL_180:
    uint64_t v171 = sub_1374EEC(*(void *)(a1 + 776));
    v161 += v171 + ((9 * (__clz(v171 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_181:
  if ((v167 & 0xFF0000) == 0) {
    goto LABEL_191;
  }
  if ((v167 & 0x10000) != 0)
  {
    uint64_t v209 = sub_1397238(*(void *)(a1 + 784));
    v161 += v209 + ((9 * (__clz(v209 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v167 & 0x20000) == 0)
    {
LABEL_184:
      if ((v167 & 0x40000) == 0) {
        goto LABEL_185;
      }
      goto LABEL_252;
    }
  }
  else if ((v167 & 0x20000) == 0)
  {
    goto LABEL_184;
  }
  uint64_t v210 = sub_1397238(*(void *)(a1 + 792));
  v161 += v210 + ((9 * (__clz(v210 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x40000) == 0)
  {
LABEL_185:
    if ((v167 & 0x80000) == 0) {
      goto LABEL_186;
    }
    goto LABEL_253;
  }
LABEL_252:
  uint64_t v211 = sub_1377E50(*(void *)(a1 + 800));
  v161 += v211 + ((9 * (__clz(v211 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x80000) == 0)
  {
LABEL_186:
    if ((v167 & 0x100000) == 0) {
      goto LABEL_187;
    }
    goto LABEL_254;
  }
LABEL_253:
  uint64_t v212 = sub_1377E50(*(void *)(a1 + 808));
  v161 += v212 + ((9 * (__clz(v212 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x100000) == 0)
  {
LABEL_187:
    if ((v167 & 0x200000) == 0) {
      goto LABEL_188;
    }
    goto LABEL_255;
  }
LABEL_254:
  uint64_t v213 = sub_13D5AFC(*(void *)(a1 + 816));
  v161 += v213 + ((9 * (__clz(v213 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x200000) == 0)
  {
LABEL_188:
    if ((v167 & 0x400000) == 0) {
      goto LABEL_189;
    }
    goto LABEL_259;
  }
LABEL_255:
  int v214 = *(_DWORD *)(a1 + 824);
  uint64_t v215 = (9 * (__clz(v214 | 1) ^ 0x1F) + 73) >> 6;
  if (v214 >= 0) {
    uint64_t v216 = v215;
  }
  else {
    uint64_t v216 = 10;
  }
  v161 += v216 + 1;
  if ((v167 & 0x400000) == 0)
  {
LABEL_189:
    if ((v167 & 0x800000) == 0) {
      goto LABEL_191;
    }
    goto LABEL_190;
  }
LABEL_259:
  v161 += ((9 * (__clz(*(_DWORD *)(a1 + 828) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v167 & 0x800000) != 0) {
LABEL_190:
  }
    v161 += ((9 * (__clz(*(_DWORD *)(a1 + 832) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_191:
  if (!HIBYTE(v167)) {
    goto LABEL_200;
  }
  if ((v167 & 0x1000000) != 0)
  {
    int v223 = *(_DWORD *)(a1 + 836);
    uint64_t v224 = (9 * (__clz(v223 | 1) ^ 0x1F) + 73) >> 6;
    if (v223 >= 0) {
      uint64_t v225 = v224;
    }
    else {
      uint64_t v225 = 10;
    }
    v161 += v225 + 1;
    if ((v167 & 0x2000000) == 0)
    {
LABEL_194:
      if ((v167 & 0x4000000) == 0) {
        goto LABEL_195;
      }
      goto LABEL_279;
    }
  }
  else if ((v167 & 0x2000000) == 0)
  {
    goto LABEL_194;
  }
  int v226 = *(_DWORD *)(a1 + 840);
  uint64_t v227 = (9 * (__clz(v226 | 1) ^ 0x1F) + 73) >> 6;
  if (v226 >= 0) {
    uint64_t v228 = v227;
  }
  else {
    uint64_t v228 = 10;
  }
  v161 += v228 + 1;
  if ((v167 & 0x4000000) == 0)
  {
LABEL_195:
    if ((v167 & 0x8000000) == 0) {
      goto LABEL_196;
    }
    goto LABEL_280;
  }
LABEL_279:
  v161 += ((9 * (__clz(*(_DWORD *)(a1 + 844) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x8000000) == 0)
  {
LABEL_196:
    if ((v167 & 0x10000000) == 0) {
      goto LABEL_197;
    }
    goto LABEL_281;
  }
LABEL_280:
  v161 += ((9 * (__clz(*(_DWORD *)(a1 + 848) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x10000000) == 0)
  {
LABEL_197:
    if ((v167 & 0x20000000) == 0) {
      goto LABEL_198;
    }
    goto LABEL_282;
  }
LABEL_281:
  v161 += ((9 * (__clz(*(_DWORD *)(a1 + 852) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x20000000) == 0)
  {
LABEL_198:
    if ((v167 & 0x40000000) == 0) {
      goto LABEL_199;
    }
LABEL_283:
    v161 += ((9 * (__clz(*(_DWORD *)(a1 + 860) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v167 & 0x80000000) == 0) {
      goto LABEL_200;
    }
    goto LABEL_284;
  }
LABEL_282:
  v161 += ((9 * (__clz(*(_DWORD *)(a1 + 856) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v167 & 0x40000000) != 0) {
    goto LABEL_283;
  }
LABEL_199:
  if ((v167 & 0x80000000) == 0) {
    goto LABEL_200;
  }
LABEL_284:
  v161 += ((9 * (__clz(*(_DWORD *)(a1 + 864) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_200:
  int v172 = *(_DWORD *)(a1 + 44);
  if ((v172 & 0x7F) == 0) {
    goto LABEL_216;
  }
  uint64_t v173 = v161 + 3;
  if ((v172 & 1) == 0) {
    uint64_t v173 = v161;
  }
  if ((v172 & 2) != 0) {
    v173 += 3;
  }
  if ((v172 & 4) != 0) {
    uint64_t v161 = v173 + 3;
  }
  else {
    uint64_t v161 = v173;
  }
  if ((v172 & 8) != 0)
  {
    v161 += ((9 * (__clz(*(_DWORD *)(a1 + 872) | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v172 & 0x10) == 0)
    {
LABEL_210:
      if ((v172 & 0x20) == 0) {
        goto LABEL_211;
      }
      goto LABEL_266;
    }
  }
  else if ((v172 & 0x10) == 0)
  {
    goto LABEL_210;
  }
  int v217 = *(_DWORD *)(a1 + 876);
  uint64_t v218 = ((9 * (__clz(v217 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v217 >= 0) {
    uint64_t v219 = v218;
  }
  else {
    uint64_t v219 = 12;
  }
  v161 += v219;
  if ((v172 & 0x20) == 0)
  {
LABEL_211:
    if ((v172 & 0x40) == 0) {
      goto LABEL_216;
    }
    goto LABEL_212;
  }
LABEL_266:
  int v220 = *(_DWORD *)(a1 + 880);
  uint64_t v221 = ((9 * (__clz(v220 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v220 >= 0) {
    uint64_t v222 = v221;
  }
  else {
    uint64_t v222 = 12;
  }
  v161 += v222;
  if ((v172 & 0x40) != 0)
  {
LABEL_212:
    int v174 = *(_DWORD *)(a1 + 884);
    uint64_t v175 = ((9 * (__clz(v174 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v174 >= 0) {
      uint64_t v176 = v175;
    }
    else {
      uint64_t v176 = 12;
    }
    v161 += v176;
  }
LABEL_216:
  uint64_t v177 = *(void *)(a1 + 8);
  if (v177)
  {
    unint64_t v229 = v177 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v229 + 31) < 0) {
      uint64_t v230 = *(void *)(v229 + 16);
    }
    else {
      uint64_t v230 = *(unsigned __int8 *)(v229 + 31);
    }
    v161 += v230;
  }
  *(_DWORD *)(a1 + 48) = v161;
  return v161;
}

void sub_13AC49C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 64);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 72) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 56, *(_DWORD *)(a2 + 64));
    sub_148DC0C((uint64_t *)(a1 + 56), v6, v5, v4, **(_DWORD **)(a1 + 72) - *(_DWORD *)(a1 + 64));
    int v7 = *(_DWORD *)(a1 + 64) + v4;
    *(_DWORD *)(a1 + 64) = v7;
    uint64_t v8 = *(int **)(a1 + 72);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 88);
  if (v9)
  {
    uint64_t v10 = (const std::string **)(*(void *)(a2 + 96) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 80, *(_DWORD *)(a2 + 88));
    sub_188FB98(a1 + 80, v11, v10, v9, **(_DWORD **)(a1 + 96) - *(_DWORD *)(a1 + 88));
    int v12 = *(_DWORD *)(a1 + 88) + v9;
    *(_DWORD *)(a1 + 88) = v12;
    uint64_t v13 = *(int **)(a1 + 96);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 112);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 120) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 104, *(_DWORD *)(a2 + 112));
    sub_188FB98(a1 + 104, v16, v15, v14, **(_DWORD **)(a1 + 120) - *(_DWORD *)(a1 + 112));
    int v17 = *(_DWORD *)(a1 + 112) + v14;
    *(_DWORD *)(a1 + 112) = v17;
    unsigned int v18 = *(int **)(a1 + 120);
    if (*v18 < v17) {
      *unsigned int v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 136);
  if (v19)
  {
    uint64_t v20 = (const std::string **)(*(void *)(a2 + 144) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 128, *(_DWORD *)(a2 + 136));
    sub_188FB98(a1 + 128, v21, v20, v19, **(_DWORD **)(a1 + 144) - *(_DWORD *)(a1 + 136));
    int v22 = *(_DWORD *)(a1 + 136) + v19;
    *(_DWORD *)(a1 + 136) = v22;
    uint64_t v23 = *(int **)(a1 + 144);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = *(int *)(a1 + 152);
    sub_188C80C((unsigned int *)(a1 + 152), v25 + v24);
    uint64_t v26 = *(void *)(a1 + 160);
    *(_DWORD *)(a1 + 152) += *(_DWORD *)(a2 + 152);
    memcpy((void *)(v26 + 4 * v25), *(const void **)(a2 + 160), 4 * *(int *)(a2 + 152));
  }
  int v27 = *(_DWORD *)(a2 + 176);
  if (v27)
  {
    uint64_t v28 = *(int *)(a1 + 176);
    sub_188C80C((unsigned int *)(a1 + 176), v28 + v27);
    uint64_t v29 = *(void *)(a1 + 184);
    *(_DWORD *)(a1 + 176) += *(_DWORD *)(a2 + 176);
    memcpy((void *)(v29 + 4 * v28), *(const void **)(a2 + 184), 4 * *(int *)(a2 + 176));
  }
  int v30 = *(_DWORD *)(a2 + 208);
  if (v30)
  {
    uint64_t v31 = (uint64_t *)(*(void *)(a2 + 216) + 8);
    int v32 = (uint64_t *)sub_188CCE4(a1 + 200, *(_DWORD *)(a2 + 208));
    sub_148DC98((uint64_t *)(a1 + 200), v32, v31, v30, **(_DWORD **)(a1 + 216) - *(_DWORD *)(a1 + 208));
    int v33 = *(_DWORD *)(a1 + 208) + v30;
    *(_DWORD *)(a1 + 208) = v33;
    uint64_t v34 = *(int **)(a1 + 216);
    if (*v34 < v33) {
      *uint64_t v34 = v33;
    }
  }
  int v35 = *(_DWORD *)(a2 + 232);
  if (v35)
  {
    uint64_t v36 = (uint64_t *)(*(void *)(a2 + 240) + 8);
    uint64_t v37 = (uint64_t *)sub_188CCE4(a1 + 224, *(_DWORD *)(a2 + 232));
    sub_148DD24((uint64_t *)(a1 + 224), v37, v36, v35, **(_DWORD **)(a1 + 240) - *(_DWORD *)(a1 + 232));
    int v38 = *(_DWORD *)(a1 + 232) + v35;
    *(_DWORD *)(a1 + 232) = v38;
    uint64_t v39 = *(int **)(a1 + 240);
    if (*v39 < v38) {
      int *v39 = v38;
    }
  }
  int v40 = *(_DWORD *)(a2 + 248);
  if (v40)
  {
    uint64_t v41 = *(int *)(a1 + 248);
    sub_188C80C((unsigned int *)(a1 + 248), v41 + v40);
    uint64_t v42 = *(void *)(a1 + 256);
    *(_DWORD *)(a1 + 248) += *(_DWORD *)(a2 + 248);
    memcpy((void *)(v42 + 4 * v41), *(const void **)(a2 + 256), 4 * *(int *)(a2 + 248));
  }
  int v43 = *(_DWORD *)(a2 + 272);
  if (v43)
  {
    uint64_t v44 = *(int *)(a1 + 272);
    sub_188C80C((unsigned int *)(a1 + 272), v44 + v43);
    uint64_t v45 = *(void *)(a1 + 280);
    *(_DWORD *)(a1 + 272) += *(_DWORD *)(a2 + 272);
    memcpy((void *)(v45 + 4 * v44), *(const void **)(a2 + 280), 4 * *(int *)(a2 + 272));
  }
  int v46 = *(_DWORD *)(a2 + 304);
  if (v46)
  {
    uint64_t v47 = (uint64_t *)(*(void *)(a2 + 312) + 8);
    uint64_t v48 = (uint64_t *)sub_188CCE4(a1 + 296, *(_DWORD *)(a2 + 304));
    sub_1365F80((uint64_t *)(a1 + 296), v48, v47, v46, **(_DWORD **)(a1 + 312) - *(_DWORD *)(a1 + 304));
    int v49 = *(_DWORD *)(a1 + 304) + v46;
    *(_DWORD *)(a1 + 304) = v49;
    unsigned int v50 = *(int **)(a1 + 312);
    if (*v50 < v49) {
      int *v50 = v49;
    }
  }
  int v51 = *(_DWORD *)(a2 + 328);
  if (v51)
  {
    uint64_t v52 = (uint64_t *)(*(void *)(a2 + 336) + 8);
    uint64_t v53 = (uint64_t *)sub_188CCE4(a1 + 320, *(_DWORD *)(a2 + 328));
    sub_1365F80((uint64_t *)(a1 + 320), v53, v52, v51, **(_DWORD **)(a1 + 336) - *(_DWORD *)(a1 + 328));
    int v54 = *(_DWORD *)(a1 + 328) + v51;
    *(_DWORD *)(a1 + 328) = v54;
    uint64_t v55 = *(int **)(a1 + 336);
    if (*v55 < v54) {
      *uint64_t v55 = v54;
    }
  }
  int v56 = *(_DWORD *)(a2 + 352);
  if (v56)
  {
    uint64_t v57 = (uint64_t *)(*(void *)(a2 + 360) + 8);
    int v58 = (uint64_t *)sub_188CCE4(a1 + 344, *(_DWORD *)(a2 + 352));
    sub_1365F80((uint64_t *)(a1 + 344), v58, v57, v56, **(_DWORD **)(a1 + 360) - *(_DWORD *)(a1 + 352));
    int v59 = *(_DWORD *)(a1 + 352) + v56;
    *(_DWORD *)(a1 + 352) = v59;
    uint64_t v60 = *(int **)(a1 + 360);
    if (*v60 < v59) {
      *uint64_t v60 = v59;
    }
  }
  int v61 = *(_DWORD *)(a2 + 376);
  if (v61)
  {
    uint64_t v62 = (uint64_t *)(*(void *)(a2 + 384) + 8);
    uint64_t v63 = (uint64_t *)sub_188CCE4(a1 + 368, *(_DWORD *)(a2 + 376));
    sub_148D418((uint64_t *)(a1 + 368), v63, v62, v61, **(_DWORD **)(a1 + 384) - *(_DWORD *)(a1 + 376));
    int v64 = *(_DWORD *)(a1 + 376) + v61;
    *(_DWORD *)(a1 + 376) = v64;
    uint64_t v65 = *(int **)(a1 + 384);
    if (*v65 < v64) {
      *uint64_t v65 = v64;
    }
  }
  int v66 = *(_DWORD *)(a2 + 400);
  if (v66)
  {
    uint64_t v67 = (uint64_t *)(*(void *)(a2 + 408) + 8);
    uint64_t v68 = (std::string **)sub_188CCE4(a1 + 392, *(_DWORD *)(a2 + 400));
    sub_148DDB0((std::string *)(a1 + 392), v68, v67, v66, **(_DWORD **)(a1 + 408) - *(_DWORD *)(a1 + 400));
    int v69 = *(_DWORD *)(a1 + 400) + v66;
    *(_DWORD *)(a1 + 400) = v69;
    uint64_t v70 = *(int **)(a1 + 408);
    if (*v70 < v69) {
      int *v70 = v69;
    }
  }
  int v71 = *(_DWORD *)(a2 + 424);
  if (v71)
  {
    uint64_t v72 = (uint64_t *)(*(void *)(a2 + 432) + 8);
    uint64_t v73 = (std::string **)sub_188CCE4(a1 + 416, *(_DWORD *)(a2 + 424));
    sub_148DE3C((uint64_t *)(a1 + 416), v73, v72, v71, **(_DWORD **)(a1 + 432) - *(_DWORD *)(a1 + 424));
    int v74 = *(_DWORD *)(a1 + 424) + v71;
    *(_DWORD *)(a1 + 424) = v74;
    uint64_t v75 = *(int **)(a1 + 432);
    if (*v75 < v74) {
      *uint64_t v75 = v74;
    }
  }
  int v76 = *(_DWORD *)(a2 + 448);
  if (v76)
  {
    uint64_t v77 = (uint64_t *)(*(void *)(a2 + 456) + 8);
    uint64_t v78 = (uint64_t *)sub_188CCE4(a1 + 440, *(_DWORD *)(a2 + 448));
    sub_148D950((uint64_t *)(a1 + 440), v78, v77, v76, **(_DWORD **)(a1 + 456) - *(_DWORD *)(a1 + 448));
    int v79 = *(_DWORD *)(a1 + 448) + v76;
    *(_DWORD *)(a1 + 448) = v79;
    uint64_t v80 = *(int **)(a1 + 456);
    if (*v80 < v79) {
      *uint64_t v80 = v79;
    }
  }
  int v81 = *(_DWORD *)(a2 + 472);
  if (v81)
  {
    uint64_t v82 = (uint64_t *)(*(void *)(a2 + 480) + 8);
    char v83 = (uint64_t *)sub_188CCE4(a1 + 464, *(_DWORD *)(a2 + 472));
    sub_148DEB8((uint64_t *)(a1 + 464), v83, v82, v81, **(_DWORD **)(a1 + 480) - *(_DWORD *)(a1 + 472));
    int v84 = *(_DWORD *)(a1 + 472) + v81;
    *(_DWORD *)(a1 + 472) = v84;
    uint64_t v85 = *(int **)(a1 + 480);
    if (*v85 < v84) {
      int *v85 = v84;
    }
  }
  int v86 = *(_DWORD *)(a2 + 496);
  if (v86)
  {
    uint64_t v87 = (uint64_t *)(*(void *)(a2 + 504) + 8);
    uint64_t v88 = (std::string **)sub_188CCE4(a1 + 488, *(_DWORD *)(a2 + 496));
    sub_148DF44((uint64_t *)(a1 + 488), v88, v87, v86, **(_DWORD **)(a1 + 504) - *(_DWORD *)(a1 + 496));
    int v89 = *(_DWORD *)(a1 + 496) + v86;
    *(_DWORD *)(a1 + 496) = v89;
    unsigned int v90 = *(int **)(a1 + 504);
    if (*v90 < v89) {
      *unsigned int v90 = v89;
    }
  }
  int v91 = *(_DWORD *)(a2 + 520);
  if (v91)
  {
    uint64_t v92 = (uint64_t *)(*(void *)(a2 + 528) + 8);
    uint64_t v93 = (std::string **)sub_188CCE4(a1 + 512, *(_DWORD *)(a2 + 520));
    sub_148DFD0((uint64_t *)(a1 + 512), v93, v92, v91, **(_DWORD **)(a1 + 528) - *(_DWORD *)(a1 + 520));
    int v94 = *(_DWORD *)(a1 + 520) + v91;
    *(_DWORD *)(a1 + 520) = v94;
    uint64_t v95 = *(int **)(a1 + 528);
    if (*v95 < v94) {
      int *v95 = v94;
    }
  }
  int v96 = *(_DWORD *)(a2 + 544);
  if (v96)
  {
    unsigned int v97 = (uint64_t *)(*(void *)(a2 + 552) + 8);
    uint64_t v98 = (std::string **)sub_188CCE4(a1 + 536, *(_DWORD *)(a2 + 544));
    sub_148E05C((std::string *)(a1 + 536), v98, v97, v96, **(_DWORD **)(a1 + 552) - *(_DWORD *)(a1 + 544));
    int v99 = *(_DWORD *)(a1 + 544) + v96;
    *(_DWORD *)(a1 + 544) = v99;
    uint64_t v100 = *(int **)(a1 + 552);
    if (*v100 < v99) {
      int *v100 = v99;
    }
  }
  int v101 = *(_DWORD *)(a2 + 560);
  if (v101)
  {
    uint64_t v102 = *(int *)(a1 + 560);
    sub_188C80C((unsigned int *)(a1 + 560), v102 + v101);
    uint64_t v103 = *(void *)(a1 + 568);
    *(_DWORD *)(a1 + 560) += *(_DWORD *)(a2 + 560);
    memcpy((void *)(v103 + 4 * v102), *(const void **)(a2 + 568), 4 * *(int *)(a2 + 560));
  }
  int v104 = *(_DWORD *)(a2 + 584);
  if (v104)
  {
    uint64_t v105 = *(int *)(a1 + 584);
    sub_188C80C((unsigned int *)(a1 + 584), v105 + v104);
    uint64_t v106 = *(void *)(a1 + 592);
    *(_DWORD *)(a1 + 584) += *(_DWORD *)(a2 + 584);
    memcpy((void *)(v106 + 4 * v105), *(const void **)(a2 + 592), 4 * *(int *)(a2 + 584));
  }
  int v107 = *(_DWORD *)(a2 + 616);
  if (v107)
  {
    uint64_t v108 = (uint64_t *)(*(void *)(a2 + 624) + 8);
    uint64_t v109 = (uint64_t *)sub_188CCE4(a1 + 608, *(_DWORD *)(a2 + 616));
    sub_148E0D8((uint64_t *)(a1 + 608), v109, v108, v107, **(_DWORD **)(a1 + 624) - *(_DWORD *)(a1 + 616));
    int v110 = *(_DWORD *)(a1 + 616) + v107;
    *(_DWORD *)(a1 + 616) = v110;
    int v111 = *(int **)(a1 + 624);
    if (*v111 < v110) {
      *int v111 = v110;
    }
  }
  int v112 = *(_DWORD *)(a2 + 640);
  if (v112)
  {
    uint64_t v113 = (uint64_t *)(*(void *)(a2 + 648) + 8);
    uint64_t v114 = (uint64_t *)sub_188CCE4(a1 + 632, *(_DWORD *)(a2 + 640));
    sub_148E0D8((uint64_t *)(a1 + 632), v114, v113, v112, **(_DWORD **)(a1 + 648) - *(_DWORD *)(a1 + 640));
    int v115 = *(_DWORD *)(a1 + 640) + v112;
    *(_DWORD *)(a1 + 640) = v115;
    uint64_t v116 = *(int **)(a1 + 648);
    if (*v116 < v115) {
      *uint64_t v116 = v115;
    }
  }
  unsigned int v117 = *(_DWORD *)(a2 + 40);
  if (!(_BYTE)v117) {
    goto LABEL_104;
  }
  if (v117)
  {
    uint64_t v118 = (long long *)(*(void *)(a2 + 656) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v119 = *(void *)(a1 + 8);
    uint64_t v120 = (uint64_t *)(v119 & 0xFFFFFFFFFFFFFFFCLL);
    if (v119) {
      uint64_t v120 = (uint64_t *)*v120;
    }
    sub_1881DF4((std::string **)(a1 + 656), v118, v120);
    if ((v117 & 2) == 0)
    {
LABEL_73:
      if ((v117 & 4) == 0) {
        goto LABEL_74;
      }
      goto LABEL_86;
    }
  }
  else if ((v117 & 2) == 0)
  {
    goto LABEL_73;
  }
  uint64_t v121 = (long long *)(*(void *)(a2 + 664) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v122 = *(void *)(a1 + 8);
  uint64_t v123 = (uint64_t *)(v122 & 0xFFFFFFFFFFFFFFFCLL);
  if (v122) {
    uint64_t v123 = (uint64_t *)*v123;
  }
  sub_1881DF4((std::string **)(a1 + 664), v121, v123);
  if ((v117 & 4) == 0)
  {
LABEL_74:
    if ((v117 & 8) == 0) {
      goto LABEL_75;
    }
    goto LABEL_89;
  }
LABEL_86:
  uint64_t v124 = (long long *)(*(void *)(a2 + 672) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v125 = *(void *)(a1 + 8);
  uint64_t v126 = (uint64_t *)(v125 & 0xFFFFFFFFFFFFFFFCLL);
  if (v125) {
    uint64_t v126 = (uint64_t *)*v126;
  }
  sub_1881DF4((std::string **)(a1 + 672), v124, v126);
  if ((v117 & 8) == 0)
  {
LABEL_75:
    if ((v117 & 0x10) == 0) {
      goto LABEL_76;
    }
    goto LABEL_92;
  }
LABEL_89:
  uint64_t v127 = (long long *)(*(void *)(a2 + 680) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 8u;
  uint64_t v128 = *(void *)(a1 + 8);
  uint64_t v129 = (uint64_t *)(v128 & 0xFFFFFFFFFFFFFFFCLL);
  if (v128) {
    uint64_t v129 = (uint64_t *)*v129;
  }
  sub_1881DF4((std::string **)(a1 + 680), v127, v129);
  if ((v117 & 0x10) == 0)
  {
LABEL_76:
    if ((v117 & 0x20) == 0) {
      goto LABEL_77;
    }
LABEL_95:
    uint64_t v133 = (long long *)(*(void *)(a2 + 696) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v134 = *(void *)(a1 + 8);
    uint64_t v135 = (uint64_t *)(v134 & 0xFFFFFFFFFFFFFFFCLL);
    if (v134) {
      uint64_t v135 = (uint64_t *)*v135;
    }
    sub_1881DF4((std::string **)(a1 + 696), v133, v135);
    if ((v117 & 0x40) == 0)
    {
LABEL_78:
      if ((v117 & 0x80) == 0) {
        goto LABEL_104;
      }
      goto LABEL_101;
    }
    goto LABEL_98;
  }
LABEL_92:
  uint64_t v130 = (long long *)(*(void *)(a2 + 688) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x10u;
  uint64_t v131 = *(void *)(a1 + 8);
  unsigned int v132 = (uint64_t *)(v131 & 0xFFFFFFFFFFFFFFFCLL);
  if (v131) {
    unsigned int v132 = (uint64_t *)*v132;
  }
  sub_1881DF4((std::string **)(a1 + 688), v130, v132);
  if ((v117 & 0x20) != 0) {
    goto LABEL_95;
  }
LABEL_77:
  if ((v117 & 0x40) == 0) {
    goto LABEL_78;
  }
LABEL_98:
  uint64_t v136 = (long long *)(*(void *)(a2 + 704) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 0x40u;
  uint64_t v137 = *(void *)(a1 + 8);
  uint64_t v138 = (uint64_t *)(v137 & 0xFFFFFFFFFFFFFFFCLL);
  if (v137) {
    uint64_t v138 = (uint64_t *)*v138;
  }
  sub_1881DF4((std::string **)(a1 + 704), v136, v138);
  if ((v117 & 0x80) != 0)
  {
LABEL_101:
    uint64_t v139 = (long long *)(*(void *)(a2 + 712) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x80u;
    uint64_t v140 = *(void *)(a1 + 8);
    uint64_t v141 = (uint64_t *)(v140 & 0xFFFFFFFFFFFFFFFCLL);
    if (v140) {
      uint64_t v141 = (uint64_t *)*v141;
    }
    sub_1881DF4((std::string **)(a1 + 712), v139, v141);
  }
LABEL_104:
  if ((v117 & 0xFF00) == 0) {
    goto LABEL_174;
  }
  if ((v117 & 0x100) != 0)
  {
    uint64_t v142 = (long long *)(*(void *)(a2 + 720) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x100u;
    uint64_t v143 = *(void *)(a1 + 8);
    int v144 = (uint64_t *)(v143 & 0xFFFFFFFFFFFFFFFCLL);
    if (v143) {
      int v144 = (uint64_t *)*v144;
    }
    sub_1881DF4((std::string **)(a1 + 720), v142, v144);
    if ((v117 & 0x200) == 0)
    {
LABEL_107:
      if ((v117 & 0x400) == 0) {
        goto LABEL_108;
      }
      goto LABEL_122;
    }
  }
  else if ((v117 & 0x200) == 0)
  {
    goto LABEL_107;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  uint64_t v145 = *(void *)(a1 + 728);
  if (!v145)
  {
    uint64_t v146 = *(void *)(a1 + 8);
    uint64_t v147 = (void *)(v146 & 0xFFFFFFFFFFFFFFFCLL);
    if (v146) {
      uint64_t v147 = (void *)*v147;
    }
    sub_13D6D2C((uint64_t)v147);
    *(void *)(a1 + 728) = v145;
  }
  if (*(void *)(a2 + 728)) {
    uint64_t v148 = *(uint64_t (****)())(a2 + 728);
  }
  else {
    uint64_t v148 = &off_2534910;
  }
  sub_1378CF0(v145, (uint64_t)v148);
  if ((v117 & 0x400) == 0)
  {
LABEL_108:
    if ((v117 & 0x800) == 0) {
      goto LABEL_109;
    }
    goto LABEL_130;
  }
LABEL_122:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  uint64_t v149 = *(void *)(a1 + 736);
  if (!v149)
  {
    uint64_t v150 = *(void *)(a1 + 8);
    int v151 = (void *)(v150 & 0xFFFFFFFFFFFFFFFCLL);
    if (v150) {
      int v151 = (void *)*v151;
    }
    sub_13D8628((uint64_t)v151);
    *(void *)(a1 + 736) = v149;
  }
  if (*(void *)(a2 + 736)) {
    uint64_t v152 = *(uint64_t (****)())(a2 + 736);
  }
  else {
    uint64_t v152 = &off_25353D8;
  }
  sub_139993C(v149, (uint64_t)v152);
  if ((v117 & 0x800) == 0)
  {
LABEL_109:
    if ((v117 & 0x1000) == 0) {
      goto LABEL_146;
    }
    goto LABEL_138;
  }
LABEL_130:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  uint64_t v153 = *(void *)(a1 + 744);
  if (!v153)
  {
    uint64_t v154 = *(void *)(a1 + 8);
    uint64_t v155 = (void *)(v154 & 0xFFFFFFFFFFFFFFFCLL);
    if (v154) {
      uint64_t v155 = (void *)*v155;
    }
    sub_13D85A4((uint64_t)v155);
    *(void *)(a1 + 744) = v153;
  }
  if (*(void *)(a2 + 744)) {
    uint64_t v156 = *(uint64_t (****)())(a2 + 744);
  }
  else {
    uint64_t v156 = &off_2535390;
  }
  sub_1398E34(v153, (uint64_t)v156);
  if ((v117 & 0x1000) != 0)
  {
LABEL_138:
    *(_DWORD *)(a1 + 40) |= 0x1000u;
    uint64_t v157 = *(void **)(a1 + 752);
    if (!v157)
    {
      uint64_t v158 = *(void *)(a1 + 8);
      uint64_t v159 = (void *)(v158 & 0xFFFFFFFFFFFFFFFCLL);
      if (v158) {
        uint64_t v159 = (void *)*v159;
      }
      uint64_t v157 = sub_13DA934((uint64_t)v159);
      *(void *)(a1 + 752) = v157;
    }
    if (*(void *)(a2 + 752)) {
      uint64_t v160 = *(uint64_t (****)())(a2 + 752);
    }
    else {
      uint64_t v160 = &off_2536768;
    }
    sub_139EF2C((uint64_t)v157, (uint64_t)v160);
  }
LABEL_146:
  if ((v117 & 0x2000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x2000u;
    uint64_t v161 = *(void *)(a1 + 760);
    if (!v161)
    {
      uint64_t v162 = *(void *)(a1 + 8);
      uint64_t v163 = (void *)(v162 & 0xFFFFFFFFFFFFFFFCLL);
      if (v162) {
        uint64_t v163 = (void *)*v163;
      }
      sub_13D6A1C((uint64_t)v163);
      *(void *)(a1 + 760) = v161;
    }
    if (*(void *)(a2 + 760)) {
      uint64_t v164 = *(uint64_t (****)())(a2 + 760);
    }
    else {
      uint64_t v164 = &off_2534750;
    }
    sub_136A7DC(v161, (uint64_t)v164);
    if ((v117 & 0x4000) == 0)
    {
LABEL_148:
      if ((v117 & 0x8000) == 0) {
        goto LABEL_174;
      }
      goto LABEL_166;
    }
  }
  else if ((v117 & 0x4000) == 0)
  {
    goto LABEL_148;
  }
  *(_DWORD *)(a1 + 40) |= 0x4000u;
  uint64_t v165 = *(void *)(a1 + 768);
  if (!v165)
  {
    uint64_t v166 = *(void *)(a1 + 8);
    unsigned int v167 = (void *)(v166 & 0xFFFFFFFFFFFFFFFCLL);
    if (v166) {
      unsigned int v167 = (void *)*v167;
    }
    sub_13D7B20((uint64_t)v167);
    *(void *)(a1 + 768) = v165;
  }
  if (*(void *)(a2 + 768)) {
    unint64_t v168 = *(uint64_t (****)())(a2 + 768);
  }
  else {
    unint64_t v168 = &off_2534F00;
  }
  sub_138A73C(v165, (uint64_t)v168);
  if ((v117 & 0x8000) != 0)
  {
LABEL_166:
    *(_DWORD *)(a1 + 40) |= 0x8000u;
    uint64_t v169 = *(void *)(a1 + 776);
    if (!v169)
    {
      uint64_t v170 = *(void *)(a1 + 8);
      uint64_t v171 = (void *)(v170 & 0xFFFFFFFFFFFFFFFCLL);
      if (v170) {
        uint64_t v171 = (void *)*v171;
      }
      sub_13D6A1C((uint64_t)v171);
      *(void *)(a1 + 776) = v169;
    }
    if (*(void *)(a2 + 776)) {
      int v172 = *(uint64_t (****)())(a2 + 776);
    }
    else {
      int v172 = &off_2534750;
    }
    sub_136A7DC(v169, (uint64_t)v172);
  }
LABEL_174:
  if ((v117 & 0xFF0000) == 0) {
    goto LABEL_201;
  }
  if ((v117 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x10000u;
    uint64_t v173 = *(void *)(a1 + 784);
    if (!v173)
    {
      uint64_t v174 = *(void *)(a1 + 8);
      uint64_t v175 = (void *)(v174 & 0xFFFFFFFFFFFFFFFCLL);
      if (v174) {
        uint64_t v175 = (void *)*v175;
      }
      sub_13D8414((uint64_t)v175);
      *(void *)(a1 + 784) = v173;
    }
    if (*(void *)(a2 + 784)) {
      uint64_t v176 = *(uint64_t (****)())(a2 + 784);
    }
    else {
      uint64_t v176 = &off_25352D0;
    }
    sub_13927B8(v173, (uint64_t)v176);
  }
  if ((v117 & 0x20000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x20000u;
    uint64_t v177 = *(void *)(a1 + 792);
    if (!v177)
    {
      uint64_t v178 = *(void *)(a1 + 8);
      unint64_t v179 = (void *)(v178 & 0xFFFFFFFFFFFFFFFCLL);
      if (v178) {
        unint64_t v179 = (void *)*v179;
      }
      sub_13D8414((uint64_t)v179);
      *(void *)(a1 + 792) = v177;
    }
    if (*(void *)(a2 + 792)) {
      uint64_t v180 = *(uint64_t (****)())(a2 + 792);
    }
    else {
      uint64_t v180 = &off_25352D0;
    }
    sub_13927B8(v177, (uint64_t)v180);
  }
  if ((v117 & 0x40000) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x40000u;
    uint64_t v183 = *(void *)(a1 + 800);
    if (!v183)
    {
      uint64_t v184 = *(void *)(a1 + 8);
      unint64_t v185 = (void *)(v184 & 0xFFFFFFFFFFFFFFFCLL);
      if (v184) {
        unint64_t v185 = (void *)*v185;
      }
      uint64_t v183 = sub_13D6C7C((uint64_t)v185);
      *(void *)(a1 + 800) = v183;
    }
    if (*(void *)(a2 + 800)) {
      uint64_t v186 = *(uint64_t (****)())(a2 + 800);
    }
    else {
      uint64_t v186 = &off_2534898;
    }
    sub_1378048(v183, (uint64_t)v186);
    if ((v117 & 0x80000) == 0)
    {
LABEL_195:
      if ((v117 & 0x100000) == 0) {
        goto LABEL_196;
      }
      goto LABEL_241;
    }
  }
  else if ((v117 & 0x80000) == 0)
  {
    goto LABEL_195;
  }
  *(_DWORD *)(a1 + 40) |= 0x80000u;
  uint64_t v187 = *(void *)(a1 + 808);
  if (!v187)
  {
    uint64_t v188 = *(void *)(a1 + 8);
    uint64_t v189 = (void *)(v188 & 0xFFFFFFFFFFFFFFFCLL);
    if (v188) {
      uint64_t v189 = (void *)*v189;
    }
    uint64_t v187 = sub_13D6C7C((uint64_t)v189);
    *(void *)(a1 + 808) = v187;
  }
  if (*(void *)(a2 + 808)) {
    uint64_t v190 = *(uint64_t (****)())(a2 + 808);
  }
  else {
    uint64_t v190 = &off_2534898;
  }
  sub_1378048(v187, (uint64_t)v190);
  if ((v117 & 0x100000) == 0)
  {
LABEL_196:
    if ((v117 & 0x200000) == 0) {
      goto LABEL_197;
    }
    goto LABEL_249;
  }
LABEL_241:
  *(_DWORD *)(a1 + 40) |= 0x100000u;
  unint64_t v191 = *(std::string **)(a1 + 816);
  if (!v191)
  {
    uint64_t v192 = *(void *)(a1 + 8);
    uint64_t v193 = (void *)(v192 & 0xFFFFFFFFFFFFFFFCLL);
    if (v192) {
      uint64_t v193 = (void *)*v193;
    }
    unint64_t v191 = (std::string *)sub_13DAD88((uint64_t)v193);
    *(void *)(a1 + 816) = v191;
  }
  if (*(void *)(a2 + 816)) {
    unint64_t v194 = *(uint64_t (****)())(a2 + 816);
  }
  else {
    unint64_t v194 = &off_2536998;
  }
  sub_13AD518(v191, (uint64_t)v194);
  if ((v117 & 0x200000) == 0)
  {
LABEL_197:
    if ((v117 & 0x400000) == 0) {
      goto LABEL_198;
    }
LABEL_250:
    *(_DWORD *)(a1 + 828) = *(_DWORD *)(a2 + 828);
    if ((v117 & 0x800000) == 0) {
      goto LABEL_200;
    }
    goto LABEL_199;
  }
LABEL_249:
  *(_DWORD *)(a1 + 824) = *(_DWORD *)(a2 + 824);
  if ((v117 & 0x400000) != 0) {
    goto LABEL_250;
  }
LABEL_198:
  if ((v117 & 0x800000) != 0) {
LABEL_199:
  }
    *(_DWORD *)(a1 + 832) = *(_DWORD *)(a2 + 832);
LABEL_200:
  *(_DWORD *)(a1 + 40) |= v117;
LABEL_201:
  if (!HIBYTE(v117)) {
    goto LABEL_211;
  }
  if ((v117 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 836) = *(_DWORD *)(a2 + 836);
    if ((v117 & 0x2000000) == 0)
    {
LABEL_204:
      if ((v117 & 0x4000000) == 0) {
        goto LABEL_205;
      }
      goto LABEL_261;
    }
  }
  else if ((v117 & 0x2000000) == 0)
  {
    goto LABEL_204;
  }
  *(_DWORD *)(a1 + 840) = *(_DWORD *)(a2 + 840);
  if ((v117 & 0x4000000) == 0)
  {
LABEL_205:
    if ((v117 & 0x8000000) == 0) {
      goto LABEL_206;
    }
    goto LABEL_262;
  }
LABEL_261:
  *(_DWORD *)(a1 + 844) = *(_DWORD *)(a2 + 844);
  if ((v117 & 0x8000000) == 0)
  {
LABEL_206:
    if ((v117 & 0x10000000) == 0) {
      goto LABEL_207;
    }
    goto LABEL_263;
  }
LABEL_262:
  *(_DWORD *)(a1 + 848) = *(_DWORD *)(a2 + 848);
  if ((v117 & 0x10000000) == 0)
  {
LABEL_207:
    if ((v117 & 0x20000000) == 0) {
      goto LABEL_208;
    }
    goto LABEL_264;
  }
LABEL_263:
  *(_DWORD *)(a1 + 852) = *(_DWORD *)(a2 + 852);
  if ((v117 & 0x20000000) == 0)
  {
LABEL_208:
    if ((v117 & 0x40000000) == 0) {
      goto LABEL_209;
    }
LABEL_265:
    *(_DWORD *)(a1 + 860) = *(_DWORD *)(a2 + 860);
    if ((v117 & 0x80000000) == 0) {
      goto LABEL_210;
    }
LABEL_266:
    *(_DWORD *)(a1 + 864) = *(_DWORD *)(a2 + 864);
    goto LABEL_210;
  }
LABEL_264:
  *(_DWORD *)(a1 + 856) = *(_DWORD *)(a2 + 856);
  if ((v117 & 0x40000000) != 0) {
    goto LABEL_265;
  }
LABEL_209:
  if ((v117 & 0x80000000) != 0) {
    goto LABEL_266;
  }
LABEL_210:
  *(_DWORD *)(a1 + 40) |= v117;
LABEL_211:
  int v181 = *(_DWORD *)(a2 + 44);
  if ((v181 & 0x7F) == 0) {
    goto LABEL_221;
  }
  if (v181)
  {
    *(unsigned char *)(a1 + 868) = *(unsigned char *)(a2 + 868);
    if ((v181 & 2) == 0)
    {
LABEL_214:
      if ((v181 & 4) == 0) {
        goto LABEL_215;
      }
      goto LABEL_254;
    }
  }
  else if ((v181 & 2) == 0)
  {
    goto LABEL_214;
  }
  *(unsigned char *)(a1 + 869) = *(unsigned char *)(a2 + 869);
  if ((v181 & 4) == 0)
  {
LABEL_215:
    if ((v181 & 8) == 0) {
      goto LABEL_216;
    }
    goto LABEL_255;
  }
LABEL_254:
  *(unsigned char *)(a1 + 870) = *(unsigned char *)(a2 + 870);
  if ((v181 & 8) == 0)
  {
LABEL_216:
    if ((v181 & 0x10) == 0) {
      goto LABEL_217;
    }
    goto LABEL_256;
  }
LABEL_255:
  *(_DWORD *)(a1 + 872) = *(_DWORD *)(a2 + 872);
  if ((v181 & 0x10) == 0)
  {
LABEL_217:
    if ((v181 & 0x20) == 0) {
      goto LABEL_218;
    }
LABEL_257:
    *(_DWORD *)(a1 + 880) = *(_DWORD *)(a2 + 880);
    if ((v181 & 0x40) == 0) {
      goto LABEL_220;
    }
    goto LABEL_219;
  }
LABEL_256:
  *(_DWORD *)(a1 + 876) = *(_DWORD *)(a2 + 876);
  if ((v181 & 0x20) != 0) {
    goto LABEL_257;
  }
LABEL_218:
  if ((v181 & 0x40) != 0) {
LABEL_219:
  }
    *(_DWORD *)(a1 + 884) = *(_DWORD *)(a2 + 884);
LABEL_220:
  *(_DWORD *)(a1 + 44) |= v181;
LABEL_221:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v182 = *(void *)(a2 + 8);
  if (v182)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v182 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_13AD518(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    int v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_148E620((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_13AD5E8(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13A6644(a1);
    sub_13AC49C(a1, a2);
  }
}

uint64_t sub_13AD634(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 64);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_13900E8(*(void *)(*(void *)(a1 + 72) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_13AD8DC(a1 + 200);
    if (result)
    {
      uint64_t v6 = *(unsigned int *)(a1 + 232);
      while ((int)v6 >= 1)
      {
        uint64_t v7 = v6 - 1;
        char v8 = sub_13BE5E4(*(void *)(*(void *)(a1 + 240) + 8 * v6));
        uint64_t v6 = v7;
        if ((v8 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v9 = *(unsigned int *)(a1 + 304);
      while ((int)v9 >= 1)
      {
        uint64_t v10 = v9 - 1;
        char v11 = sub_136ADBC(*(void *)(*(void *)(a1 + 312) + 8 * v9));
        uint64_t v9 = v10;
        if ((v11 & 1) == 0) {
          return 0;
        }
      }
      uint64_t v12 = *(unsigned int *)(a1 + 328);
      while ((int)v12 >= 1)
      {
        uint64_t v13 = v12 - 1;
        char v14 = sub_136ADBC(*(void *)(*(void *)(a1 + 336) + 8 * v12));
        uint64_t result = 0;
        uint64_t v12 = v13;
        if ((v14 & 1) == 0) {
          return result;
        }
      }
      uint64_t v15 = *(unsigned int *)(a1 + 352);
      while ((int)v15 >= 1)
      {
        uint64_t v16 = v15 - 1;
        char v17 = sub_136ADBC(*(void *)(*(void *)(a1 + 360) + 8 * v15));
        uint64_t result = 0;
        uint64_t v15 = v16;
        if ((v17 & 1) == 0) {
          return result;
        }
      }
      uint64_t v18 = *(unsigned int *)(a1 + 376);
      while ((int)v18 >= 1)
      {
        uint64_t v19 = v18 - 1;
        char v20 = sub_1381680(*(void *)(*(void *)(a1 + 384) + 8 * v18));
        uint64_t result = 0;
        uint64_t v18 = v19;
        if ((v20 & 1) == 0) {
          return result;
        }
      }
      uint64_t result = sub_139FD88(a1 + 440);
      if (result)
      {
        uint64_t result = sub_13AD94C(a1 + 464);
        if (result)
        {
          uint64_t v21 = *(unsigned int *)(a1 + 616);
          while ((int)v21 >= 1)
          {
            uint64_t v22 = v21 - 1;
            char v23 = sub_136C388(*(void *)(*(void *)(a1 + 624) + 8 * v21));
            uint64_t result = 0;
            uint64_t v21 = v22;
            if ((v23 & 1) == 0) {
              return result;
            }
          }
          uint64_t v24 = *(unsigned int *)(a1 + 640);
          while ((int)v24 >= 1)
          {
            uint64_t v25 = v24 - 1;
            char v26 = sub_136C388(*(void *)(*(void *)(a1 + 648) + 8 * v24));
            uint64_t result = 0;
            uint64_t v24 = v25;
            if ((v26 & 1) == 0) {
              return result;
            }
          }
          int v27 = *(_DWORD *)(a1 + 40);
          if ((v27 & 0x200) != 0)
          {
            uint64_t result = sub_1378EB8(*(void *)(a1 + 728));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x400) != 0)
          {
            uint64_t result = sub_1399AC8(*(void *)(a1 + 736));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x800) != 0)
          {
            uint64_t result = sub_1399060(*(void *)(a1 + 744));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x1000) != 0)
          {
            uint64_t v28 = *(void *)(a1 + 752);
            if (*(unsigned char *)(v28 + 16))
            {
              uint64_t result = sub_136ADBC(*(void *)(v28 + 40));
              if (!result) {
                return result;
              }
              int v27 = *(_DWORD *)(a1 + 40);
            }
          }
          if ((v27 & 0x2000) != 0)
          {
            uint64_t result = sub_136ADBC(*(void *)(a1 + 760));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x4000) != 0)
          {
            uint64_t result = sub_138A948(*(void *)(a1 + 768));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x8000) != 0)
          {
            uint64_t result = sub_136ADBC(*(void *)(a1 + 776));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x10000) != 0)
          {
            uint64_t result = sub_1392B68(*(void *)(a1 + 784));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x20000) != 0)
          {
            uint64_t result = sub_1392B68(*(void *)(a1 + 792));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x40000) != 0)
          {
            uint64_t result = sub_13782D4(*(void *)(a1 + 800));
            if (!result) {
              return result;
            }
            int v27 = *(_DWORD *)(a1 + 40);
          }
          if ((v27 & 0x80000) == 0) {
            return 1;
          }
          uint64_t result = sub_13782D4(*(void *)(a1 + 808));
          if (result) {
            return 1;
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_13AD8DC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_15B5F68(*(void *)(v5 + 48));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_13AD94C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_136ADBC(*(void *)(v5 + 40));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_13AD9BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Route");
}

uint64_t sub_13AD9CC(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24AF188;
  *(void *)(result + 8) = v3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = 0;
  *(void *)(result + 16) = 0;
  *(_DWORD *)(result + 40) = 0;
  return result;
}

uint64_t sub_13ADA04(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AF188;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  long long v5 = *(_OWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_13ADA88(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13ADABC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13ADB30(void *a1)
{
  sub_13ADABC(a1);

  operator delete();
}

uint64_t sub_13ADB68(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(_DWORD *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13ADB90(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    char v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 4)
    {
      if (v12 != 2)
      {
        if (v12 == 1 && v9 == 9)
        {
          uint64_t v22 = *(void *)v8;
          uint64_t v16 = v8 + 8;
          v5 |= 1u;
          *(void *)(a1 + 24) = v22;
          goto LABEL_32;
        }
        goto LABEL_14;
      }
      if (v9 != 16) {
        goto LABEL_14;
      }
      uint64_t v18 = v8 + 1;
      unint64_t v19 = *v8;
      if (*v8 < 0)
      {
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          uint64_t v25 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v25) {
            goto LABEL_44;
          }
          unint64_t v19 = v23;
          goto LABEL_29;
        }
        uint64_t v18 = v8 + 2;
      }
      uint64_t v25 = v18;
LABEL_29:
      if (v19 > 1)
      {
        if (*v7) {
          uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(2, v19, v24);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 40) = v19;
      }
      goto LABEL_33;
    }
    if (v9 == 33)
    {
      uint64_t v17 = *(void *)v8;
      uint64_t v16 = v8 + 8;
      v5 |= 2u;
      *(void *)(a1 + 32) = v17;
LABEL_32:
      uint64_t v25 = v16;
      goto LABEL_33;
    }
LABEL_14:
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v25) {
      goto LABEL_44;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

_OWORD *sub_13ADDAC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (_OWORD *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *(unsigned char *)uint64_t v4 = 9;
    *(void *)((char *)v4 + 1) = v7;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 40);
    *(unsigned char *)uint64_t v4 = 16;
    *((unsigned char *)v4 + 1) = v8;
    if (v8 > 0x7F)
    {
      *((unsigned char *)v4 + 1) = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      *((unsigned char *)v4 + 2) = v8 >> 7;
      uint64_t v4 = (_OWORD *)((char *)v4 + 3);
      if (v8 >= 0x4000)
      {
        do
        {
          *((unsigned char *)v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *(unsigned char *)uint64_t v4 = v9;
          uint64_t v4 = (_OWORD *)((char *)v4 + 1);
        }
        while (v10);
      }
    }
    else
    {
      uint64_t v4 = (_OWORD *)((char *)v4 + 2);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 32);
    *(unsigned char *)uint64_t v4 = 33;
    *(void *)((char *)v4 + 1) = v11;
    uint64_t v4 = (_OWORD *)((char *)v4 + 9);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    return (_OWORD *)((char *)v4 + v17);
  }

  return (_OWORD *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_13ADF44(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    uint64_t v2 = 9;
    if ((v1 & 1) == 0) {
      uint64_t v2 = 0;
    }
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 40);
      uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v3 >= 0) {
        uint64_t v5 = v4;
      }
      else {
        uint64_t v5 = 11;
      }
      v2 += v5;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13ADFDC(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 7) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_10:
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
  if ((v2 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v2 & 4) != 0) {
LABEL_5:
  }
    LODWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
LABEL_6:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_7:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_13AE040(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_13ADB68((uint64_t)result);
    return sub_13ADFDC(v4, a2);
  }
  return result;
}

uint64_t sub_13AE08C()
{
  return 1;
}

void *sub_13AE094@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.Timepoint");
}

uint64_t sub_13AE0A4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13AE0BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24AF208;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    sub_188C80C((unsigned int *)(a1 + 40), v7);
    unint64_t v8 = *(void **)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy(v8, *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    sub_188C80C((unsigned int *)(a1 + 56), v9);
    unint64_t v10 = *(void **)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy(v10, *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    uint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v12 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v12 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v12 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v12 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  if ((v12 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  long long v14 = *(_OWORD *)(a2 + 128);
  long long v15 = *(_OWORD *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 128) = v14;
  *(_OWORD *)(a1 + 144) = v15;
  return a1;
}

void sub_13AE394()
{
}

void *sub_13AE494(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13AE530((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8((uint64_t)(a1 + 7));
  sub_1889DA8((uint64_t)(a1 + 5));
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13AE530(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t result = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2535C50)
  {
    uint64_t v4 = *(void **)(a1 + 80);
    if (v4)
    {
      sub_13ADABC(v4);
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 88);
    if (v5)
    {
      sub_13C6DAC(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_13CA098(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 104);
    if (v7)
    {
      sub_13CB2DC(v7);
      operator delete();
    }
    unint64_t v8 = *(void **)(a1 + 112);
    if (v8)
    {
      sub_147331C(v8);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 120);
    if (result)
    {
      sub_13C916C((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_13AE654(void *a1)
{
  sub_13AE494(a1);

  operator delete();
}

uint64_t sub_13AE68C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_21;
  }
  if (v2)
  {
    unint64_t v3 = *(void *)(result + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_13;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_13;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_13:
  uint64_t result = sub_13ADB68(*(void *)(result + 80));
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  uint64_t result = sub_13AE7D8(*(void *)(v1 + 88));
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    uint64_t result = sub_13AE8DC(*(void *)(v1 + 104));
    if ((v2 & 0x20) == 0) {
      goto LABEL_19;
    }
LABEL_17:
    uint64_t v4 = *(void *)(v1 + 112);
    char v5 = *(unsigned char *)(v4 + 8);
    uint64_t result = v4 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v5) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
    goto LABEL_19;
  }
LABEL_15:
  uint64_t result = sub_13AE860(*(void *)(v1 + 96));
  if ((v2 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
    goto LABEL_17;
  }
LABEL_19:
  if ((v2 & 0x40) != 0) {
    uint64_t result = sub_13AE954(*(void *)(v1 + 120));
  }
LABEL_21:
  *(_DWORD *)(v1 + 128) = 0;
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 139) = 0;
    *(void *)(v1 + 132) = 0;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(void *)(v1 + 148) = 0;
    *(void *)(v1 + 143) = 0;
    *(_DWORD *)(v1 + 156) = 800000;
  }
  if ((v2 & 0x7000000) != 0)
  {
    *(_WORD *)(v1 + 160) = 257;
    *(_DWORD *)(v1 + 164) = 1;
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_13AE7D8(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_13C64F8(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_13C589C(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0x1C) != 0)
  {
    *(unsigned char *)(v1 + 40) = 0;
    *(_DWORD *)(v1 + 44) = 1;
    *(unsigned char *)(v1 + 48) = 1;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13AE860(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if (v3) {
    uint64_t result = sub_13C998C(*(void *)(a1 + 64));
  }
  if ((v3 & 0xE) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(unsigned char *)(a1 + 80) = 1;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_13AE8DC(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  if (*(unsigned char *)(result + 16))
  {
    uint64_t v2 = *(void *)(result + 40);
    char v3 = *(unsigned char *)(v2 + 8);
    uint64_t result = v2 + 8;
    *(unsigned char *)(result + 18) = 0;
    *(_WORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v3) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(void *)(v4 + 40) = 0;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_13AE954(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(result + 24);
      char v4 = *(unsigned char *)(v3 + 8);
      uint64_t result = v3 + 8;
      *(unsigned char *)(result + 18) = 0;
      *(_WORD *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v4) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 32);
      char v6 = *(unsigned char *)(v5 + 8);
      uint64_t result = v5 + 8;
      *(unsigned char *)(result + 16) = 0;
      *(_DWORD *)(result + 8) = 0;
      if (v6) {
        uint64_t result = sub_188B4AC((uint64_t *)result);
      }
    }
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_13AE9E8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v158 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v158, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v158 + 1);
    unsigned int v9 = **(unsigned char **)v158;
    if ((char)**(unsigned char **)v158 < 0)
    {
      int v10 = (char)*v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v158, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v158 + 2);
      }
    }
    *(void *)uint64_t v158 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_264;
        }
        uint64_t v13 = (char *)(v8 + 1);
        unint64_t v14 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v15 = *v13;
        int v16 = v14 + (v15 << 7);
        unint64_t v14 = (v16 - 128);
        if (v15 < 0)
        {
          *(void *)uint64_t v158 = sub_188C138((uint64_t)v8, (v16 - 128));
          if (!*(void *)v158) {
            goto LABEL_294;
          }
          unint64_t v14 = v117;
        }
        else
        {
          uint64_t v13 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v158 = v13;
        }
        if (v14 <= 6)
        {
          *(_DWORD *)(a1 + 16) |= 0x80u;
          *(_DWORD *)(a1 + 128) = v14;
          goto LABEL_272;
        }
        if (*v7) {
          uint64_t v156 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v156 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v157 = 1;
        goto LABEL_286;
      case 2u:
        if (v9 != 16) {
          goto LABEL_264;
        }
        v5 |= 0x200u;
        uint64_t v17 = (char *)(v8 + 1);
        uint64_t v18 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v118 = sub_188C138((uint64_t)v8, v18);
          *(void *)uint64_t v158 = v118;
          *(unsigned char *)(a1 + 136) = v119 != 0;
          if (!v118) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v17 = (char *)(v8 + 2);
LABEL_20:
          *(void *)uint64_t v158 = v17;
          *(unsigned char *)(a1 + 136) = v18 != 0;
        }
        goto LABEL_272;
      case 3u:
        if (v9 != 24) {
          goto LABEL_264;
        }
        v5 |= 0x1000000u;
        int v20 = (char *)(v8 + 1);
        uint64_t v21 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v120 = sub_188C138((uint64_t)v8, v21);
          *(void *)uint64_t v158 = v120;
          *(unsigned char *)(a1 + 160) = v121 != 0;
          if (!v120) {
            goto LABEL_294;
          }
        }
        else
        {
          int v20 = (char *)(v8 + 2);
LABEL_25:
          *(void *)uint64_t v158 = v20;
          *(unsigned char *)(a1 + 160) = v21 != 0;
        }
        goto LABEL_272;
      case 4u:
        if (v9 != 32) {
          goto LABEL_264;
        }
        v5 |= 0x400u;
        unint64_t v23 = (char *)(v8 + 1);
        uint64_t v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v25 = *v23;
        uint64_t v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v122 = sub_188C138((uint64_t)v8, v24);
          *(void *)uint64_t v158 = v122;
          *(unsigned char *)(a1 + 137) = v123 != 0;
          if (!v122) {
            goto LABEL_294;
          }
        }
        else
        {
          unint64_t v23 = (char *)(v8 + 2);
LABEL_30:
          *(void *)uint64_t v158 = v23;
          *(unsigned char *)(a1 + 137) = v24 != 0;
        }
        goto LABEL_272;
      case 5u:
        if (v9 != 40) {
          goto LABEL_264;
        }
        v5 |= 0x1000u;
        char v26 = (char *)(v8 + 1);
        uint64_t v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v28 = *v26;
        uint64_t v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v124 = sub_188C138((uint64_t)v8, v27);
          *(void *)uint64_t v158 = v124;
          *(unsigned char *)(a1 + 139) = v125 != 0;
          if (!v124) {
            goto LABEL_294;
          }
        }
        else
        {
          char v26 = (char *)(v8 + 2);
LABEL_35:
          *(void *)uint64_t v158 = v26;
          *(unsigned char *)(a1 + 139) = v27 != 0;
        }
        goto LABEL_272;
      case 6u:
        if (v9 != 48) {
          goto LABEL_264;
        }
        v5 |= 0x2000u;
        uint64_t v29 = (char *)(v8 + 1);
        uint64_t v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_40;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v126 = sub_188C138((uint64_t)v8, v30);
          *(void *)uint64_t v158 = v126;
          *(unsigned char *)(a1 + 140) = v127 != 0;
          if (!v126) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v29 = (char *)(v8 + 2);
LABEL_40:
          *(void *)uint64_t v158 = v29;
          *(unsigned char *)(a1 + 140) = v30 != 0;
        }
        goto LABEL_272;
      case 7u:
        if (v9 != 56) {
          goto LABEL_264;
        }
        int v32 = (char *)(v8 + 1);
        unint64_t v14 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_45;
        }
        int v33 = *v32;
        int v34 = v14 + (v33 << 7);
        unint64_t v14 = (v34 - 128);
        if (v33 < 0)
        {
          *(void *)uint64_t v158 = sub_188C138((uint64_t)v8, (v34 - 128));
          if (!*(void *)v158) {
            goto LABEL_294;
          }
          unint64_t v14 = v128;
        }
        else
        {
          int v32 = (char *)(v8 + 2);
LABEL_45:
          *(void *)uint64_t v158 = v32;
        }
        if (v14 <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x100u;
          *(_DWORD *)(a1 + 132) = v14;
          goto LABEL_272;
        }
        if (*v7) {
          uint64_t v156 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v156 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v157 = 7;
        goto LABEL_286;
      case 8u:
        if (v9 != 64) {
          goto LABEL_264;
        }
        int v35 = (char *)(v8 + 1);
        unint64_t v14 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_52;
        }
        int v36 = *v35;
        int v37 = v14 + (v36 << 7);
        unint64_t v14 = (v37 - 128);
        if (v36 < 0)
        {
          *(void *)uint64_t v158 = sub_188C138((uint64_t)v8, (v37 - 128));
          if (!*(void *)v158) {
            goto LABEL_294;
          }
          unint64_t v14 = v129;
        }
        else
        {
          int v35 = (char *)(v8 + 2);
LABEL_52:
          *(void *)uint64_t v158 = v35;
        }
        if ((v14 - 1) <= 2)
        {
          *(_DWORD *)(a1 + 16) |= 0x4000000u;
          *(_DWORD *)(a1 + 164) = v14;
          goto LABEL_272;
        }
        if (*v7) {
          uint64_t v156 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v156 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v157 = 8;
        goto LABEL_286;
      case 9u:
        if (v9 != 74) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v38 = *(void *)(a1 + 8);
        uint64_t v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
        if (v38) {
          uint64_t v39 = (uint64_t *)*v39;
        }
        int v40 = (std::string *)sub_1880F84((void *)(a1 + 72), v39);
        uint64_t v41 = (void *)sub_188C244(v40, *(char **)v158, (uint64_t)a3);
        goto LABEL_271;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_264;
        }
        v5 |= 0x4000u;
        uint64_t v42 = (char *)(v8 + 1);
        uint64_t v43 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_63;
        }
        int v44 = *v42;
        uint64_t v43 = v43 + (v44 << 7) - 128;
        if (v44 < 0)
        {
          uint64_t v130 = sub_188C138((uint64_t)v8, v43);
          *(void *)uint64_t v158 = v130;
          *(unsigned char *)(a1 + 141) = v131 != 0;
          if (!v130) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v42 = (char *)(v8 + 2);
LABEL_63:
          *(void *)uint64_t v158 = v42;
          *(unsigned char *)(a1 + 141) = v43 != 0;
        }
        goto LABEL_272;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v45 = *(void *)(a1 + 80);
        if (!v45)
        {
          int v46 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v46 = (void *)*v46;
          }
          uint64_t v45 = sub_13D8EE0((uint64_t)v46);
          *(void *)(a1 + 80) = v45;
          char v8 = *(unsigned __int8 **)v158;
        }
        uint64_t v41 = sub_1354710(a3, v45, v8);
        goto LABEL_271;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_264;
        }
        v5 |= 0x2000000u;
        uint64_t v47 = (char *)(v8 + 1);
        uint64_t v48 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v132 = sub_188C138((uint64_t)v8, v48);
          *(void *)uint64_t v158 = v132;
          *(unsigned char *)(a1 + 161) = v133 != 0;
          if (!v132) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v47 = (char *)(v8 + 2);
LABEL_74:
          *(void *)uint64_t v158 = v47;
          *(unsigned char *)(a1 + 161) = v48 != 0;
        }
        goto LABEL_272;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_264;
        }
        v5 |= 0x8000u;
        unsigned int v50 = (char *)(v8 + 1);
        uint64_t v51 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        int v52 = *v50;
        uint64_t v51 = v51 + (v52 << 7) - 128;
        if (v52 < 0)
        {
          uint64_t v134 = sub_188C138((uint64_t)v8, v51);
          *(void *)uint64_t v158 = v134;
          *(unsigned char *)(a1 + 142) = v135 != 0;
          if (!v134) {
            goto LABEL_294;
          }
        }
        else
        {
          unsigned int v50 = (char *)(v8 + 2);
LABEL_79:
          *(void *)uint64_t v158 = v50;
          *(unsigned char *)(a1 + 142) = v51 != 0;
        }
        goto LABEL_272;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_264;
        }
        v5 |= 0x800000u;
        uint64_t v53 = (char *)(v8 + 1);
        int v54 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v55 = *v53;
        int v54 = v54 + (v55 << 7) - 128;
        if (v55 < 0)
        {
          uint64_t v136 = sub_188C0D0((uint64_t)v8, v54);
          *(void *)uint64_t v158 = v136;
          *(_DWORD *)(a1 + 156) = v137;
          if (!v136) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v53 = (char *)(v8 + 2);
LABEL_84:
          *(void *)uint64_t v158 = v53;
          *(_DWORD *)(a1 + 156) = v54;
        }
        goto LABEL_272;
      case 0x10u:
        if (v9 == 128)
        {
          uint64_t v56 = (uint64_t)(v8 - 2);
          while (1)
          {
            *(void *)uint64_t v158 = v56 + 2;
            unint64_t v57 = *(unsigned __int8 *)(v56 + 2);
            int v58 = (char *)(v56 + 3);
            if (*(char *)(v56 + 2) < 0)
            {
              int v59 = *v58;
              int v60 = v57 + (v59 << 7);
              unint64_t v57 = (v60 - 128);
              if (v59 < 0)
              {
                *(void *)uint64_t v158 = sub_188C138(v56 + 2, (v60 - 128));
                if (!*(void *)v158) {
                  goto LABEL_294;
                }
                unint64_t v57 = v63;
                goto LABEL_91;
              }
              int v58 = (char *)(v56 + 4);
            }
            *(void *)uint64_t v158 = v58;
LABEL_91:
            if (v57 > 6)
            {
              if (*v7) {
                int v64 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v64 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(16, v57, v64);
            }
            else
            {
              uint64_t v61 = *(unsigned int *)(a1 + 24);
              if (v61 == *(_DWORD *)(a1 + 28))
              {
                int v62 = v61 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v61 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v61) = v57;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v61) = v57;
                int v62 = v61 + 1;
              }
              *(_DWORD *)(a1 + 24) = v62;
            }
            uint64_t v56 = *(void *)v158;
            if (*(void *)a3 <= *(void *)v158 || **(_WORD **)v158 != 384) {
              goto LABEL_272;
            }
          }
        }
        if (v9 != 130) {
          goto LABEL_264;
        }
        *(void *)&long long v159 = a1 + 24;
        *((void *)&v159 + 1) = sub_138DE04;
        uint64_t v160 = a1 + 8;
        int v153 = 16;
        goto LABEL_263;
      case 0x11u:
        if (v9 != 138) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v65 = *(void *)(a1 + 88);
        if (!v65)
        {
          int v66 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v66 = (void *)*v66;
          }
          uint64_t v65 = sub_13DA01C((uint64_t)v66);
          *(void *)(a1 + 88) = v65;
          char v8 = *(unsigned __int8 **)v158;
        }
        uint64_t v41 = sub_13AFAA0(a3, v65, v8);
        goto LABEL_271;
      case 0x12u:
        if (v9 != 146) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v67 = *(void *)(a1 + 96);
        if (!v67)
        {
          uint64_t v68 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v68 = (void *)*v68;
          }
          uint64_t v67 = sub_13DA3AC((uint64_t)v68);
          *(void *)(a1 + 96) = v67;
          char v8 = *(unsigned __int8 **)v158;
        }
        uint64_t v41 = sub_13AFB30(a3, v67, v8);
        goto LABEL_271;
      case 0x13u:
        if (v9 != 154) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        int v69 = *(void **)(a1 + 104);
        if (!v69)
        {
          uint64_t v70 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v70 = (void *)*v70;
          }
          int v69 = sub_13DA484((uint64_t)v70);
          *(void *)(a1 + 104) = v69;
          char v8 = *(unsigned __int8 **)v158;
        }
        uint64_t v41 = sub_13AFBC0(a3, (uint64_t)v69, v8);
        goto LABEL_271;
      case 0x14u:
        if (v9 == 160)
        {
          uint64_t v71 = (uint64_t)(v8 - 2);
          while (1)
          {
            *(void *)uint64_t v158 = v71 + 2;
            unint64_t v72 = *(unsigned __int8 *)(v71 + 2);
            uint64_t v73 = (char *)(v71 + 3);
            if (*(char *)(v71 + 2) < 0)
            {
              int v74 = *v73;
              int v75 = v72 + (v74 << 7);
              unint64_t v72 = (v75 - 128);
              if (v74 < 0)
              {
                *(void *)uint64_t v158 = sub_188C138(v71 + 2, (v75 - 128));
                if (!*(void *)v158) {
                  goto LABEL_294;
                }
                unint64_t v72 = v78;
                goto LABEL_129;
              }
              uint64_t v73 = (char *)(v71 + 4);
            }
            *(void *)uint64_t v158 = v73;
LABEL_129:
            if ((v72 - 1) > 3)
            {
              if (*v7) {
                int v79 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v79 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(20, v72, v79);
            }
            else
            {
              uint64_t v76 = *(unsigned int *)(a1 + 40);
              if (v76 == *(_DWORD *)(a1 + 44))
              {
                int v77 = v76 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v76 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v76) = v72;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v76) = v72;
                int v77 = v76 + 1;
              }
              *(_DWORD *)(a1 + 40) = v77;
            }
            uint64_t v71 = *(void *)v158;
            if (*(void *)a3 <= *(void *)v158 || **(_WORD **)v158 != 416) {
              goto LABEL_272;
            }
          }
        }
        if (v9 != 162) {
          goto LABEL_264;
        }
        *(void *)&long long v159 = a1 + 40;
        *((void *)&v159 + 1) = sub_1369B98;
        uint64_t v160 = a1 + 8;
        int v153 = 20;
        goto LABEL_263;
      case 0x15u:
        if (v9 != 168) {
          goto LABEL_264;
        }
        v5 |= 0x10000u;
        uint64_t v80 = (char *)(v8 + 1);
        uint64_t v81 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_147;
        }
        int v82 = *v80;
        uint64_t v81 = v81 + (v82 << 7) - 128;
        if (v82 < 0)
        {
          uint64_t v138 = sub_188C138((uint64_t)v8, v81);
          *(void *)uint64_t v158 = v138;
          *(unsigned char *)(a1 + 143) = v139 != 0;
          if (!v138) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v80 = (char *)(v8 + 2);
LABEL_147:
          *(void *)uint64_t v158 = v80;
          *(unsigned char *)(a1 + 143) = v81 != 0;
        }
        goto LABEL_272;
      case 0x1Eu:
        if (v9 != 242) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v83 = *(void *)(a1 + 112);
        if (!v83)
        {
          int v84 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v84 = (void *)*v84;
          }
          uint64_t v83 = sub_14796F8((uint64_t)v84);
          *(void *)(a1 + 112) = v83;
          char v8 = *(unsigned __int8 **)v158;
        }
        uint64_t v41 = sub_13AFC50(a3, v83, v8);
        goto LABEL_271;
      case 0x1Fu:
        if (v9 != 248) {
          goto LABEL_264;
        }
        uint64_t v85 = (char *)(v8 + 1);
        unint64_t v14 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_158;
        }
        int v86 = *v85;
        int v87 = v14 + (v86 << 7);
        unint64_t v14 = (v87 - 128);
        if (v86 < 0)
        {
          *(void *)uint64_t v158 = sub_188C138((uint64_t)v8, (v87 - 128));
          if (!*(void *)v158) {
            goto LABEL_294;
          }
          unint64_t v14 = v140;
        }
        else
        {
          uint64_t v85 = (char *)(v8 + 2);
LABEL_158:
          *(void *)uint64_t v158 = v85;
        }
        if (v14 > 0xD)
        {
          if (*v7) {
            uint64_t v156 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v156 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v157 = 31;
LABEL_286:
          sub_188C020(v157, v14, v156);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x40000u;
          *(_DWORD *)(a1 + 148) = v14;
        }
        goto LABEL_272;
      case 0x20u:
        if ((_BYTE)v9) {
          goto LABEL_264;
        }
        v5 |= 0x100000u;
        uint64_t v88 = (char *)(v8 + 1);
        uint64_t v89 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_165;
        }
        int v90 = *v88;
        uint64_t v89 = v89 + (v90 << 7) - 128;
        if (v90 < 0)
        {
          uint64_t v141 = sub_188C138((uint64_t)v8, v89);
          *(void *)uint64_t v158 = v141;
          *(unsigned char *)(a1 + 153) = v142 != 0;
          if (!v141) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v88 = (char *)(v8 + 2);
LABEL_165:
          *(void *)uint64_t v158 = v88;
          *(unsigned char *)(a1 + 153) = v89 != 0;
        }
        goto LABEL_272;
      case 0x21u:
        if (v9 != 8) {
          goto LABEL_264;
        }
        v5 |= 0x80000u;
        int v91 = (char *)(v8 + 1);
        uint64_t v92 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_170;
        }
        int v93 = *v91;
        uint64_t v92 = v92 + (v93 << 7) - 128;
        if (v93 < 0)
        {
          uint64_t v143 = sub_188C138((uint64_t)v8, v92);
          *(void *)uint64_t v158 = v143;
          *(unsigned char *)(a1 + 152) = v144 != 0;
          if (!v143) {
            goto LABEL_294;
          }
        }
        else
        {
          int v91 = (char *)(v8 + 2);
LABEL_170:
          *(void *)uint64_t v158 = v91;
          *(unsigned char *)(a1 + 152) = v92 != 0;
        }
        goto LABEL_272;
      case 0x22u:
        if (v9 != 16) {
          goto LABEL_264;
        }
        v5 |= 0x200000u;
        int v94 = (char *)(v8 + 1);
        uint64_t v95 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_175;
        }
        int v96 = *v94;
        uint64_t v95 = v95 + (v96 << 7) - 128;
        if (v96 < 0)
        {
          uint64_t v145 = sub_188C138((uint64_t)v8, v95);
          *(void *)uint64_t v158 = v145;
          *(unsigned char *)(a1 + 154) = v146 != 0;
          if (!v145) {
            goto LABEL_294;
          }
        }
        else
        {
          int v94 = (char *)(v8 + 2);
LABEL_175:
          *(void *)uint64_t v158 = v94;
          *(unsigned char *)(a1 + 154) = v95 != 0;
        }
        goto LABEL_272;
      case 0x23u:
        if (v9 != 24) {
          goto LABEL_264;
        }
        v5 |= 0x400000u;
        unsigned int v97 = (char *)(v8 + 1);
        uint64_t v98 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_180;
        }
        int v99 = *v97;
        uint64_t v98 = v98 + (v99 << 7) - 128;
        if (v99 < 0)
        {
          uint64_t v147 = sub_188C138((uint64_t)v8, v98);
          *(void *)uint64_t v158 = v147;
          *(unsigned char *)(a1 + 155) = v148 != 0;
          if (!v147) {
            goto LABEL_294;
          }
        }
        else
        {
          unsigned int v97 = (char *)(v8 + 2);
LABEL_180:
          *(void *)uint64_t v158 = v97;
          *(unsigned char *)(a1 + 155) = v98 != 0;
        }
        goto LABEL_272;
      case 0x24u:
        if (v9 != 34) {
          goto LABEL_264;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v100 = *(void **)(a1 + 120);
        if (!v100)
        {
          int v101 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v101 = (void *)*v101;
          }
          uint64_t v100 = sub_13DA2B8((uint64_t)v101);
          *(void *)(a1 + 120) = v100;
          char v8 = *(unsigned __int8 **)v158;
        }
        uint64_t v41 = sub_13AFCE0(a3, (uint64_t)v100, v8);
        goto LABEL_271;
      case 0x25u:
        if (v9 != 40) {
          goto LABEL_264;
        }
        v5 |= 0x800u;
        uint64_t v102 = (char *)(v8 + 1);
        uint64_t v103 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_191;
        }
        int v104 = *v102;
        uint64_t v103 = v103 + (v104 << 7) - 128;
        if (v104 < 0)
        {
          uint64_t v149 = sub_188C138((uint64_t)v8, v103);
          *(void *)uint64_t v158 = v149;
          *(unsigned char *)(a1 + 138) = v150 != 0;
          if (!v149) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v102 = (char *)(v8 + 2);
LABEL_191:
          *(void *)uint64_t v158 = v102;
          *(unsigned char *)(a1 + 138) = v103 != 0;
        }
        goto LABEL_272;
      case 0x26u:
        if (v9 == 48)
        {
          uint64_t v105 = (uint64_t)(v8 - 2);
          while (1)
          {
            *(void *)uint64_t v158 = v105 + 2;
            unint64_t v106 = *(unsigned __int8 *)(v105 + 2);
            int v107 = (char *)(v105 + 3);
            if (*(char *)(v105 + 2) < 0)
            {
              int v108 = *v107;
              int v109 = v106 + (v108 << 7);
              unint64_t v106 = (v109 - 128);
              if (v108 < 0)
              {
                *(void *)uint64_t v158 = sub_188C138(v105 + 2, (v109 - 128));
                if (!*(void *)v158) {
                  goto LABEL_294;
                }
                unint64_t v106 = v112;
                goto LABEL_198;
              }
              int v107 = (char *)(v105 + 4);
            }
            *(void *)uint64_t v158 = v107;
LABEL_198:
            if (v106 > 1)
            {
              if (*v7) {
                uint64_t v113 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v113 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(38, v106, v113);
            }
            else
            {
              uint64_t v110 = *(unsigned int *)(a1 + 56);
              if (v110 == *(_DWORD *)(a1 + 60))
              {
                int v111 = v110 + 1;
                sub_188C80C((unsigned int *)(a1 + 56), v110 + 1);
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v110) = v106;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v110) = v106;
                int v111 = v110 + 1;
              }
              *(_DWORD *)(a1 + 56) = v111;
            }
            uint64_t v105 = *(void *)v158;
            if (*(void *)a3 <= *(void *)v158 || **(_WORD **)v158 != 688) {
              goto LABEL_272;
            }
          }
        }
        if (v9 == 50)
        {
          *(void *)&long long v159 = a1 + 56;
          *((void *)&v159 + 1) = sub_1369B74;
          uint64_t v160 = a1 + 8;
          int v153 = 38;
LABEL_263:
          int v161 = v153;
          uint64_t v41 = sub_1112E88((uint64_t)a3, (char *)v8, &v159);
LABEL_271:
          *(void *)uint64_t v158 = v41;
          if (!v41) {
            goto LABEL_294;
          }
LABEL_272:
          if (sub_11947B8((uint64_t)a3, (char **)v158, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_264:
        if (v9) {
          BOOL v154 = (v9 & 7) == 4;
        }
        else {
          BOOL v154 = 1;
        }
        if (!v154)
        {
          if (*v7)
          {
            uint64_t v155 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v155 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v158;
          }
          uint64_t v41 = sub_1885AC0(v9, v155, (char *)v8, a3);
          goto LABEL_271;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_294:
        }
          *(void *)uint64_t v158 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v158;
      case 0x27u:
        if (v9 != 56) {
          goto LABEL_264;
        }
        v5 |= 0x20000u;
        uint64_t v114 = (char *)(v8 + 1);
        uint64_t v115 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_216;
        }
        int v116 = *v114;
        uint64_t v115 = v115 + (v116 << 7) - 128;
        if (v116 < 0)
        {
          uint64_t v151 = sub_188C138((uint64_t)v8, v115);
          *(void *)uint64_t v158 = v151;
          *(unsigned char *)(a1 + 144) = v152 != 0;
          if (!v151) {
            goto LABEL_294;
          }
        }
        else
        {
          uint64_t v114 = (char *)(v8 + 2);
LABEL_216:
          *(void *)uint64_t v158 = v114;
          *(unsigned char *)(a1 + 144) = v115 != 0;
        }
        goto LABEL_272;
      default:
        goto LABEL_264;
    }
  }
}

char *sub_13AFAA0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C6EB4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13AFB30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CA198(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13AFBC0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13CB3D4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13AFC50(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_14733C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13AFCE0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C9274(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13AFD70(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 128);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 136);
    unsigned char *v4 = 16;
    v4[1] = v10;
    v4 += 2;
    if ((v6 & 0x1000000) == 0)
    {
LABEL_10:
      if ((v6 & 0x400) == 0) {
        goto LABEL_11;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 0x1000000) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 160);
  unsigned char *v4 = 24;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x400) == 0)
  {
LABEL_11:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_12;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 137);
  unsigned char *v4 = 32;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x1000) == 0)
  {
LABEL_12:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 139);
  unsigned char *v4 = 40;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x2000) == 0)
  {
LABEL_13:
    if ((v6 & 0x100) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
LABEL_27:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 140);
  unsigned char *v4 = 48;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x100) != 0)
  {
LABEL_30:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 132);
    unsigned char *v4 = 56;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_36:
  if ((v6 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v18 = *(int *)(a1 + 164);
    unsigned char *v4 = 64;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unint64_t v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x4000) == 0)
    {
LABEL_45:
      if ((v6 & 2) == 0) {
        goto LABEL_46;
      }
      goto LABEL_54;
    }
  }
  else if ((v6 & 0x4000) == 0)
  {
    goto LABEL_45;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v21 = *(unsigned char *)(a1 + 141);
  unsigned char *v4 = 80;
  v4[1] = v21;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_46:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_60;
  }
LABEL_54:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v22 = *(void *)(a1 + 80);
  unsigned char *v4 = 90;
  unsigned int v23 = *(_DWORD *)(v22 + 20);
  v4[1] = v23;
  if (v23 > 0x7F) {
    uint64_t v24 = sub_188A9CC(v23, v4 + 1);
  }
  else {
    uint64_t v24 = v4 + 2;
  }
  char v4 = sub_13ADDAC(v22, (unint64_t)v24, a3);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_47:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_63;
  }
LABEL_60:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v25 = *(unsigned char *)(a1 + 161);
  unsigned char *v4 = 96;
  v4[1] = v25;
  v4 += 2;
  if ((v6 & 0x8000) == 0)
  {
LABEL_48:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_72;
    }
    goto LABEL_66;
  }
LABEL_63:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v26 = *(unsigned char *)(a1 + 142);
  unsigned char *v4 = 112;
  v4[1] = v26;
  v4 += 2;
  if ((v6 & 0x800000) != 0)
  {
LABEL_66:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v27 = *(_DWORD *)(a1 + 156);
    unsigned char *v4 = 120;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unsigned int v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_72:
  uint64_t v30 = *(unsigned int *)(a1 + 24);
  if ((int)v30 >= 1)
  {
    for (uint64_t i = 0; i != v30; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v32 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *(_WORD *)char v4 = 384;
      v4[2] = v32;
      if (v32 > 0x7F)
      {
        v4[2] = v32 | 0x80;
        unint64_t v33 = v32 >> 7;
        v4[3] = v32 >> 7;
        v4 += 4;
        if (v32 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v34 = v33 >> 14;
            v33 >>= 7;
            *v4++ = v33;
          }
          while (v34);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v35 = *(void *)(a1 + 88);
    *(_WORD *)char v4 = 394;
    unsigned int v36 = *(_DWORD *)(v35 + 20);
    v4[2] = v36;
    if (v36 > 0x7F) {
      int v37 = sub_188A9CC(v36, v4 + 2);
    }
    else {
      int v37 = v4 + 3;
    }
    char v4 = sub_13C736C(v35, (unint64_t)v37, a3);
    if ((v6 & 8) == 0)
    {
LABEL_83:
      if ((v6 & 0x10) == 0) {
        goto LABEL_103;
      }
      goto LABEL_97;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_83;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v38 = *(void *)(a1 + 96);
  *(_WORD *)char v4 = 402;
  unsigned int v39 = *(_DWORD *)(v38 + 44);
  v4[2] = v39;
  if (v39 > 0x7F) {
    int v40 = sub_188A9CC(v39, v4 + 2);
  }
  else {
    int v40 = v4 + 3;
  }
  char v4 = sub_13CA708(v38, v40, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_97:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v41 = *(void *)(a1 + 104);
    *(_WORD *)char v4 = 410;
    unsigned int v42 = *(_DWORD *)(v41 + 20);
    v4[2] = v42;
    if (v42 > 0x7F) {
      uint64_t v43 = sub_188A9CC(v42, v4 + 2);
    }
    else {
      uint64_t v43 = v4 + 3;
    }
    char v4 = sub_13CB748(v41, (unint64_t)v43, a3);
  }
LABEL_103:
  uint64_t v44 = *(unsigned int *)(a1 + 40);
  if ((int)v44 >= 1)
  {
    for (uint64_t j = 0; j != v44; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v46 = *(int *)(*(void *)(a1 + 48) + 4 * j);
      *(_WORD *)char v4 = 416;
      v4[2] = v46;
      if (v46 > 0x7F)
      {
        v4[2] = v46 | 0x80;
        unint64_t v47 = v46 >> 7;
        v4[3] = v46 >> 7;
        v4 += 4;
        if (v46 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v48 = v47 >> 14;
            v47 >>= 7;
            *v4++ = v47;
          }
          while (v48);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v49 = *(unsigned char *)(a1 + 143);
    *(_WORD *)char v4 = 424;
    v4[2] = v49;
    v4 += 3;
    if ((v6 & 0x20) == 0)
    {
LABEL_114:
      if ((v6 & 0x40000) == 0) {
        goto LABEL_131;
      }
      goto LABEL_125;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_114;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v50 = *(void *)(a1 + 112);
  *(_WORD *)char v4 = 498;
  unsigned int v51 = *(_DWORD *)(v50 + 20);
  v4[2] = v51;
  if (v51 > 0x7F) {
    int v52 = sub_188A9CC(v51, v4 + 2);
  }
  else {
    int v52 = v4 + 3;
  }
  char v4 = sub_14736E0(v50, (unint64_t)v52, a3);
  if ((v6 & 0x40000) != 0)
  {
LABEL_125:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v53 = *(int *)(a1 + 148);
    *(_WORD *)char v4 = 504;
    v4[2] = v53;
    if (v53 > 0x7F)
    {
      v4[2] = v53 | 0x80;
      unint64_t v54 = v53 >> 7;
      v4[3] = v53 >> 7;
      v4 += 4;
      if (v53 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v55 = v54 >> 14;
          v54 >>= 7;
          *v4++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      v4 += 3;
    }
  }
LABEL_131:
  if ((v6 & 0x100000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v56 = *(unsigned char *)(a1 + 153);
    *(_WORD *)char v4 = 640;
    v4[2] = v56;
    v4 += 3;
    if ((v6 & 0x80000) == 0)
    {
LABEL_133:
      if ((v6 & 0x200000) == 0) {
        goto LABEL_134;
      }
      goto LABEL_144;
    }
  }
  else if ((v6 & 0x80000) == 0)
  {
    goto LABEL_133;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v57 = *(unsigned char *)(a1 + 152);
  *(_WORD *)char v4 = 648;
  v4[2] = v57;
  v4 += 3;
  if ((v6 & 0x200000) == 0)
  {
LABEL_134:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_135;
    }
    goto LABEL_147;
  }
LABEL_144:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v58 = *(unsigned char *)(a1 + 154);
  *(_WORD *)char v4 = 656;
  v4[2] = v58;
  v4 += 3;
  if ((v6 & 0x400000) == 0)
  {
LABEL_135:
    if ((v6 & 0x40) == 0) {
      goto LABEL_136;
    }
    goto LABEL_150;
  }
LABEL_147:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v59 = *(unsigned char *)(a1 + 155);
  *(_WORD *)char v4 = 664;
  v4[2] = v59;
  v4 += 3;
  if ((v6 & 0x40) == 0)
  {
LABEL_136:
    if ((v6 & 0x800) == 0) {
      goto LABEL_159;
    }
    goto LABEL_156;
  }
LABEL_150:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v60 = *(void *)(a1 + 120);
  *(_WORD *)char v4 = 674;
  unsigned int v61 = *(_DWORD *)(v60 + 20);
  v4[2] = v61;
  if (v61 > 0x7F) {
    int v62 = sub_188A9CC(v61, v4 + 2);
  }
  else {
    int v62 = v4 + 3;
  }
  char v4 = sub_13C9554(v60, (unint64_t)v62, a3);
  if ((v6 & 0x800) != 0)
  {
LABEL_156:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v63 = *(unsigned char *)(a1 + 138);
    *(_WORD *)char v4 = 680;
    v4[2] = v63;
    v4 += 3;
  }
LABEL_159:
  uint64_t v64 = *(unsigned int *)(a1 + 56);
  if ((int)v64 >= 1)
  {
    for (uint64_t k = 0; k != v64; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v66 = *(int *)(*(void *)(a1 + 64) + 4 * k);
      *(_WORD *)char v4 = 688;
      v4[2] = v66;
      if (v66 > 0x7F)
      {
        v4[2] = v66 | 0x80;
        unint64_t v67 = v66 >> 7;
        v4[3] = v66 >> 7;
        v4 += 4;
        if (v66 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v68 = v67 >> 14;
            v67 >>= 7;
            *v4++ = v67;
          }
          while (v68);
        }
      }
      else
      {
        v4 += 3;
      }
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v69 = *(unsigned char *)(a1 + 144);
    *(_WORD *)char v4 = 696;
    v4[2] = v69;
    v4 += 3;
  }
  uint64_t v70 = *(void *)(a1 + 8);
  if ((v70 & 1) == 0) {
    return v4;
  }
  unint64_t v72 = v70 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v72 + 31) < 0)
  {
    uint64_t v73 = *(void **)(v72 + 8);
    uint64_t v74 = *(void *)(v72 + 16);
  }
  else
  {
    uint64_t v73 = (void *)(v72 + 8);
    LODWORD(v74) = *(unsigned __int8 *)(v72 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v74)
  {
    uint64_t v75 = (int)v74;
    memcpy(v4, v73, (int)v74);
    v4 += v75;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v73, v74, v4);
}

uint64_t sub_13B0894(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = *(unsigned int *)(a1 + 40);
  if (v7)
  {
    int v8 = 0;
    uint64_t v9 = 0;
    do
    {
      int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * v8);
      if (v10 < 0) {
        uint64_t v11 = 10;
      }
      else {
        uint64_t v11 = (9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6;
      }
      v9 += v11;
      ++v8;
    }
    while (v7 != v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if (v12)
  {
    int v13 = 0;
    uint64_t v14 = 0;
    do
    {
      int v15 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * v13);
      if (v15 < 0) {
        uint64_t v16 = 10;
      }
      else {
        uint64_t v16 = (9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6;
      }
      v14 += v16;
      ++v13;
    }
    while (v12 != v13);
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v17 = v9 + v4 + 2 * (v7 + v2 + v12) + v14;
  int v18 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v18)
  {
    if (v18)
    {
      unint64_t v19 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
      uint64_t v21 = *(void *)(v19 + 8);
      if ((v20 & 0x80u) == 0) {
        uint64_t v21 = v20;
      }
      v17 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v18 & 2) == 0)
      {
LABEL_28:
        if ((v18 & 4) == 0) {
          goto LABEL_29;
        }
        goto LABEL_39;
      }
    }
    else if ((v18 & 2) == 0)
    {
      goto LABEL_28;
    }
    uint64_t v22 = sub_13ADF44(*(void *)(a1 + 80));
    v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v18 & 4) == 0)
    {
LABEL_29:
      if ((v18 & 8) == 0) {
        goto LABEL_30;
      }
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v23 = sub_13C75E4(*(void *)(a1 + 88));
    v17 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v18 & 8) == 0)
    {
LABEL_30:
      if ((v18 & 0x10) == 0) {
        goto LABEL_31;
      }
      goto LABEL_41;
    }
LABEL_40:
    uint64_t v24 = sub_13CAA14(*(void *)(a1 + 96));
    v17 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v18 & 0x10) == 0)
    {
LABEL_31:
      if ((v18 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_42;
    }
LABEL_41:
    uint64_t v25 = sub_13CB944(*(void *)(a1 + 104));
    v17 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v18 & 0x20) == 0)
    {
LABEL_32:
      if ((v18 & 0x40) == 0) {
        goto LABEL_33;
      }
      goto LABEL_43;
    }
LABEL_42:
    uint64_t v26 = sub_147387C(*(void *)(a1 + 112));
    v17 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v18 & 0x40) == 0)
    {
LABEL_33:
      if ((v18 & 0x80) == 0) {
        goto LABEL_48;
      }
      goto LABEL_44;
    }
LABEL_43:
    uint64_t v27 = sub_13C96D4(*(void *)(a1 + 120));
    v17 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v18 & 0x80) == 0) {
      goto LABEL_48;
    }
LABEL_44:
    int v28 = *(_DWORD *)(a1 + 128);
    if (v28 < 0) {
      uint64_t v29 = 11;
    }
    else {
      uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v17 += v29;
  }
LABEL_48:
  if ((v18 & 0xFF00) != 0)
  {
    if ((v18 & 0x100) != 0)
    {
      int v30 = *(_DWORD *)(a1 + 132);
      if (v30 < 0) {
        uint64_t v31 = 11;
      }
      else {
        uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v17 += v31;
    }
    uint64_t v32 = v17 + 2;
    if ((v18 & 0x200) == 0) {
      uint64_t v32 = v17;
    }
    if ((v18 & 0x400) != 0) {
      v32 += 2;
    }
    if ((v18 & 0x800) != 0) {
      v32 += 3;
    }
    if ((v18 & 0x1000) != 0) {
      v32 += 2;
    }
    if ((v18 & 0x2000) != 0) {
      v32 += 2;
    }
    if ((v18 & 0x4000) != 0) {
      v32 += 2;
    }
    if ((v18 & 0x8000) != 0) {
      uint64_t v17 = v32 + 2;
    }
    else {
      uint64_t v17 = v32;
    }
  }
  if ((v18 & 0xFF0000) != 0)
  {
    uint64_t v33 = v17 + 3;
    if ((v18 & 0x10000) == 0) {
      uint64_t v33 = v17;
    }
    if ((v18 & 0x20000) != 0) {
      v33 += 3;
    }
    if ((v18 & 0x40000) != 0)
    {
      int v34 = *(_DWORD *)(a1 + 148);
      uint64_t v35 = ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 2;
      if (v34 >= 0) {
        uint64_t v36 = v35;
      }
      else {
        uint64_t v36 = 12;
      }
      v33 += v36;
    }
    if ((v18 & 0x80000) != 0) {
      v33 += 3;
    }
    if ((v18 & 0x100000) != 0) {
      v33 += 3;
    }
    if ((v18 & 0x200000) != 0) {
      v33 += 3;
    }
    if ((v18 & 0x400000) != 0) {
      uint64_t v17 = v33 + 3;
    }
    else {
      uint64_t v17 = v33;
    }
    if ((v18 & 0x800000) != 0) {
      v17 += ((9 * (__clz(*(_DWORD *)(a1 + 156) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  if ((v18 & 0x7000000) != 0)
  {
    uint64_t v37 = v17 + 2;
    if ((v18 & 0x1000000) == 0) {
      uint64_t v37 = v17;
    }
    if ((v18 & 0x2000000) != 0) {
      uint64_t v17 = v37 + 2;
    }
    else {
      uint64_t v17 = v37;
    }
    if ((v18 & 0x4000000) != 0)
    {
      int v38 = *(_DWORD *)(a1 + 164);
      uint64_t v39 = ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v38 >= 0) {
        uint64_t v40 = v39;
      }
      else {
        uint64_t v40 = 11;
      }
      v17 += v40;
    }
  }
  uint64_t v41 = *(void *)(a1 + 8);
  if (v41)
  {
    unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v43 + 31) < 0) {
      uint64_t v44 = *(void *)(v43 + 16);
    }
    else {
      uint64_t v44 = *(unsigned __int8 *)(v43 + 31);
    }
    v17 += v44;
  }
  *(_DWORD *)(a1 + 20) = v17;
  return v17;
}

void sub_13B0D54(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v14)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      int v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        int v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 72), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_61;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v19 = *(std::string **)(a1 + 80);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      unint64_t v19 = (std::string *)sub_13D8EE0((uint64_t)v21);
      *(void *)(a1 + 80) = v19;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v22 = &off_2535C20;
    }
    sub_13ADFDC(v19, (uint64_t)v22);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_69;
    }
LABEL_61:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v23 = *(std::string **)(a1 + 88);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = (std::string *)sub_13DA01C((uint64_t)v25);
      *(void *)(a1 + 88) = v23;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v26 = &off_2536408;
    }
    sub_13B122C(v23, (uint64_t)v26);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_77;
    }
LABEL_69:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v27 = *(void *)(a1 + 96);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_13DA3AC((uint64_t)v29);
      *(void *)(a1 + 96) = v27;
    }
    if (*(void *)(a2 + 96)) {
      int v30 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      int v30 = &off_2536528;
    }
    sub_13B1374(v27, (uint64_t)v30);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_85;
    }
LABEL_77:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v31 = *(std::string **)(a1 + 104);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = (std::string *)sub_13DA484((uint64_t)v33);
      *(void *)(a1 + 104) = v31;
    }
    if (*(void *)(a2 + 104)) {
      int v34 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      int v34 = &off_25365A0;
    }
    sub_13B14BC(v31, (uint64_t)v34);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_93;
    }
LABEL_85:
    *(_DWORD *)(a1 + 16) |= 0x20u;
    uint64_t v35 = *(std::string **)(a1 + 112);
    if (!v35)
    {
      uint64_t v36 = *(void *)(a1 + 8);
      uint64_t v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
      if (v36) {
        uint64_t v37 = (void *)*v37;
      }
      uint64_t v35 = (std::string *)sub_14796F8((uint64_t)v37);
      *(void *)(a1 + 112) = v35;
    }
    if (*(void *)(a2 + 112)) {
      int v38 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      int v38 = &off_2539B18;
    }
    sub_13B15D0(v35, (uint64_t)v38);
    if ((v14 & 0x40) == 0)
    {
LABEL_15:
      if ((v14 & 0x80) == 0)
      {
LABEL_17:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_18;
      }
LABEL_16:
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      goto LABEL_17;
    }
LABEL_93:
    *(_DWORD *)(a1 + 16) |= 0x40u;
    uint64_t v39 = *(std::string **)(a1 + 120);
    if (!v39)
    {
      uint64_t v40 = *(void *)(a1 + 8);
      uint64_t v41 = (void *)(v40 & 0xFFFFFFFFFFFFFFFCLL);
      if (v40) {
        uint64_t v41 = (void *)*v41;
      }
      uint64_t v39 = (std::string *)sub_13DA2B8((uint64_t)v41);
      *(void *)(a1 + 120) = v39;
    }
    if (*(void *)(a2 + 120)) {
      unsigned int v42 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      unsigned int v42 = &off_25364E0;
    }
    sub_13B1644(v39, (uint64_t)v42);
    if ((v14 & 0x80) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_18:
  if ((v14 & 0xFF00) == 0) {
    goto LABEL_29;
  }
  if ((v14 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
    if ((v14 & 0x200) == 0)
    {
LABEL_21:
      if ((v14 & 0x400) == 0) {
        goto LABEL_22;
      }
      goto LABEL_104;
    }
  }
  else if ((v14 & 0x200) == 0)
  {
    goto LABEL_21;
  }
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  if ((v14 & 0x400) == 0)
  {
LABEL_22:
    if ((v14 & 0x800) == 0) {
      goto LABEL_23;
    }
    goto LABEL_105;
  }
LABEL_104:
  *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
  if ((v14 & 0x800) == 0)
  {
LABEL_23:
    if ((v14 & 0x1000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_106;
  }
LABEL_105:
  *(unsigned char *)(a1 + 138) = *(unsigned char *)(a2 + 138);
  if ((v14 & 0x1000) == 0)
  {
LABEL_24:
    if ((v14 & 0x2000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_107;
  }
LABEL_106:
  *(unsigned char *)(a1 + 139) = *(unsigned char *)(a2 + 139);
  if ((v14 & 0x2000) == 0)
  {
LABEL_25:
    if ((v14 & 0x4000) == 0) {
      goto LABEL_26;
    }
LABEL_108:
    *(unsigned char *)(a1 + 141) = *(unsigned char *)(a2 + 141);
    if ((v14 & 0x8000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_27;
  }
LABEL_107:
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  if ((v14 & 0x4000) != 0) {
    goto LABEL_108;
  }
LABEL_26:
  if ((v14 & 0x8000) != 0) {
LABEL_27:
  }
    *(unsigned char *)(a1 + 142) = *(unsigned char *)(a2 + 142);
LABEL_28:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_29:
  if ((v14 & 0xFF0000) == 0) {
    goto LABEL_40;
  }
  if ((v14 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 143) = *(unsigned char *)(a2 + 143);
    if ((v14 & 0x20000) == 0)
    {
LABEL_32:
      if ((v14 & 0x40000) == 0) {
        goto LABEL_33;
      }
      goto LABEL_112;
    }
  }
  else if ((v14 & 0x20000) == 0)
  {
    goto LABEL_32;
  }
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  if ((v14 & 0x40000) == 0)
  {
LABEL_33:
    if ((v14 & 0x80000) == 0) {
      goto LABEL_34;
    }
    goto LABEL_113;
  }
LABEL_112:
  *(_DWORD *)(a1 + 148) = *(_DWORD *)(a2 + 148);
  if ((v14 & 0x80000) == 0)
  {
LABEL_34:
    if ((v14 & 0x100000) == 0) {
      goto LABEL_35;
    }
    goto LABEL_114;
  }
LABEL_113:
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  if ((v14 & 0x100000) == 0)
  {
LABEL_35:
    if ((v14 & 0x200000) == 0) {
      goto LABEL_36;
    }
    goto LABEL_115;
  }
LABEL_114:
  *(unsigned char *)(a1 + 153) = *(unsigned char *)(a2 + 153);
  if ((v14 & 0x200000) == 0)
  {
LABEL_36:
    if ((v14 & 0x400000) == 0) {
      goto LABEL_37;
    }
LABEL_116:
    *(unsigned char *)(a1 + 155) = *(unsigned char *)(a2 + 155);
    if ((v14 & 0x800000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
LABEL_115:
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  if ((v14 & 0x400000) != 0) {
    goto LABEL_116;
  }
LABEL_37:
  if ((v14 & 0x800000) != 0) {
LABEL_38:
  }
    *(_DWORD *)(a1 + 156) = *(_DWORD *)(a2 + 156);
LABEL_39:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_40:
  if ((v14 & 0x7000000) == 0) {
    goto LABEL_46;
  }
  if ((v14 & 0x1000000) == 0)
  {
    if ((v14 & 0x2000000) == 0) {
      goto LABEL_43;
    }
LABEL_119:
    *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
    if ((v14 & 0x4000000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  if ((v14 & 0x2000000) != 0) {
    goto LABEL_119;
  }
LABEL_43:
  if ((v14 & 0x4000000) != 0) {
LABEL_44:
  }
    *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
LABEL_45:
  *(_DWORD *)(a1 + 16) |= v14;
LABEL_46:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_13B122C(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        int v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          int v8 = (void *)*v8;
        }
        data = (std::string *)sub_13D9F80((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_25363D0;
      }
      uint64_t result = sub_13C6B3C(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_13D9EFC((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2536398;
    }
    uint64_t result = sub_13C6178(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
LABEL_29:
    v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_30:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

void sub_13B1374(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(std::string **)(a1 + 64);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_13DA334((uint64_t)v12);
        *(void *)(a1 + 64) = v10;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v13 = &off_2536508;
      }
      sub_117EF04(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_23;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 40) |= v8;
        goto LABEL_10;
      }
LABEL_8:
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      goto LABEL_9;
    }
LABEL_23:
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v8 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_13B14BC(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_13DA408((uint64_t)v11);
        v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v12 = &off_2536580;
      }
      uint64_t result = sub_1263204(v9, (uint64_t)v12);
    }
    if ((v8 & 2) != 0) {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_13B15D0(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 26);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 25);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    result[1].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 27);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

std::string *sub_13B1644(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_13DA1C0((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v8 = &off_25364A0;
      }
      uint64_t result = sub_1263204(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      uint64_t v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = (std::string *)sub_13DA23C((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v12 = &off_25364C0;
      }
      uint64_t result = sub_13221BC(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13B1748(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 96) + 16);
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_13B1778(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_13B1780@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteAttributes");
}

uint64_t sub_13B1790(uint64_t result, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)uint64_t result = off_24AF288;
  *(void *)(result + 8) = v3;
  *(void *)(result + 16) = 0;
  *(void *)(result + 22) = 0;
  *(unsigned char *)(result + 30) = 1;
  return result;
}

uint64_t sub_13B17CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AF288;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 27) = *(_DWORD *)(a2 + 27);
  *(_DWORD *)(a1 + 24) = v5;
  return a1;
}

void sub_13B1850(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13B1884(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B18F8(void *a1)
{
  sub_13B1884(a1);

  operator delete();
}

uint64_t sub_13B1930(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x7F) != 0)
  {
    *(_WORD *)(a1 + 28) = 0;
    *(_DWORD *)(a1 + 24) = 0;
    *(unsigned char *)(a1 + 30) = 1;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13B1960(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v49 + 2;
      }
    }
    char v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_44;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          char v49 = v12;
          *(unsigned char *)(a1 + 24) = v13 != 0;
          goto LABEL_51;
        }
        uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v13);
        char v49 = v35;
        *(unsigned char *)(a1 + 24) = v36 != 0;
        if (v35) {
          goto LABEL_51;
        }
        goto LABEL_70;
      case 2u:
        if (v9 != 16) {
          goto LABEL_44;
        }
        v5 |= 0x40u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v37 = (char *)sub_188C138((uint64_t)v8, v16);
          char v49 = v37;
          *(unsigned char *)(a1 + 30) = v38 != 0;
          if (!v37) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          char v49 = v15;
          *(unsigned char *)(a1 + 30) = v16 != 0;
        }
        goto LABEL_51;
      case 3u:
        if (v9 != 24) {
          goto LABEL_44;
        }
        v5 |= 2u;
        int v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v39 = (char *)sub_188C138((uint64_t)v8, v19);
          char v49 = v39;
          *(unsigned char *)(a1 + 25) = v40 != 0;
          if (!v39) {
            goto LABEL_70;
          }
        }
        else
        {
          int v18 = v8 + 2;
LABEL_23:
          char v49 = v18;
          *(unsigned char *)(a1 + 25) = v19 != 0;
        }
        goto LABEL_51;
      case 4u:
        if (v9 != 32) {
          goto LABEL_44;
        }
        v5 |= 4u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v41 = (char *)sub_188C138((uint64_t)v8, v22);
          char v49 = v41;
          *(unsigned char *)(a1 + 26) = v42 != 0;
          if (!v41) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          char v49 = v21;
          *(unsigned char *)(a1 + 26) = v22 != 0;
        }
        goto LABEL_51;
      case 5u:
        if (v9 != 40) {
          goto LABEL_44;
        }
        v5 |= 8u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          unint64_t v43 = (char *)sub_188C138((uint64_t)v8, v25);
          char v49 = v43;
          *(unsigned char *)(a1 + 27) = v44 != 0;
          if (!v43) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          char v49 = v24;
          *(unsigned char *)(a1 + 27) = v25 != 0;
        }
        goto LABEL_51;
      case 6u:
        if (v9 != 48) {
          goto LABEL_44;
        }
        v5 |= 0x10u;
        uint64_t v27 = v8 + 1;
        uint64_t v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        uint64_t v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v45 = (char *)sub_188C138((uint64_t)v8, v28);
          char v49 = v45;
          *(unsigned char *)(a1 + 28) = v46 != 0;
          if (!v45) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          char v49 = v27;
          *(unsigned char *)(a1 + 28) = v28 != 0;
        }
        goto LABEL_51;
      case 7u:
        if (v9 != 56) {
          goto LABEL_44;
        }
        v5 |= 0x20u;
        int v30 = v8 + 1;
        uint64_t v31 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v32 = *v30;
        uint64_t v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          unint64_t v47 = (char *)sub_188C138((uint64_t)v8, v31);
          char v49 = v47;
          *(unsigned char *)(a1 + 29) = v48 != 0;
          if (!v47) {
            goto LABEL_70;
          }
        }
        else
        {
          int v30 = v8 + 2;
LABEL_43:
          char v49 = v30;
          *(unsigned char *)(a1 + 29) = v31 != 0;
        }
        goto LABEL_51;
      default:
LABEL_44:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            int v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v49;
          }
          char v49 = (char *)sub_1885AC0(v9, v34, v8, a3);
          if (!v49) {
            goto LABEL_70;
          }
LABEL_51:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          char v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v49;
    }
  }
}

unsigned char *sub_13B1DC8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 0x40) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 30);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_15:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 25);
  unsigned char *v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 26);
  unsigned char *v4 = 32;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 8) == 0)
  {
LABEL_6:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_21:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 27);
  unsigned char *v4 = 40;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x10) == 0)
  {
LABEL_7:
    if ((v6 & 0x20) == 0) {
      goto LABEL_30;
    }
    goto LABEL_27;
  }
LABEL_24:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 28);
  unsigned char *v4 = 48;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_27:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 29);
    unsigned char *v4 = 56;
    v4[1] = v13;
    v4 += 2;
  }
LABEL_30:
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_13B2018(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x7F) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_13B20B4(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x7F) == 0) {
    goto LABEL_11;
  }
  if (v2)
  {
    result[1].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  result[1].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 25);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  result[1].__r_.__value_.__s.__data_[2] = *(unsigned char *)(a2 + 26);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  result[1].__r_.__value_.__s.__data_[3] = *(unsigned char *)(a2 + 27);
  if ((v2 & 0x10) == 0)
  {
LABEL_7:
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    result[1].__r_.__value_.__s.__data_[5] = *(unsigned char *)(a2 + 29);
    if ((v2 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_17:
  result[1].__r_.__value_.__s.__data_[4] = *(unsigned char *)(a2 + 28);
  if ((v2 & 0x20) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v2 & 0x40) != 0) {
LABEL_9:
  }
    result[1].__r_.__value_.__s.__data_[6] = *(unsigned char *)(a2 + 30);
LABEL_10:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_11:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13B2158()
{
  return 1;
}

void *sub_13B2160@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.CommonOptions");
}

uint64_t sub_13B2170(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24AF308;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    char v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    char v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *char v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_13B2250(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13B2294(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B2310(void *a1)
{
  sub_13B2294(a1);

  operator delete();
}

uint64_t sub_13B2348(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_13B2398(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    int v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = (char *)(*(void *)v21 + 1);
      unsigned int v8 = **(unsigned char **)v21;
      if ((char)**(unsigned char **)v21 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (char *)(*(void *)v21 + 2);
        }
      }
      *(void *)uint64_t v21 = v7;
      if (v8 == 10)
      {
        char v13 = v7 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)uint64_t v21 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 32);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 24), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 24) = v16 + 1;
            int v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v19 = v18;
            v19[1] = sub_3A6EDC;
            *uint64_t v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            int v17 = (std::string *)sub_188CDC8(a1 + 16, (uint64_t)v18);
            uint64_t v14 = *(char **)v21;
          }
          char v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)uint64_t v21 = v13;
          if (!v13) {
            goto LABEL_31;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_26;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        char v12 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        char v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v21;
      }
      *(void *)uint64_t v21 = sub_1885AC0(v8, v12, v7, a3);
      if (!*(void *)v21) {
        goto LABEL_31;
      }
LABEL_26:
      if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
        return *(void *)v21;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return *(void *)v21;
    }
LABEL_31:
    *(void *)uint64_t v21 = 0;
  }
  return *(void *)v21;
}

char *sub_13B2584(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      __dst = (char *)sub_125CE58(a3, 1, *(void *)(*(void *)(a1 + 32) + v7 + 8), __dst);
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return __dst;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    char v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    char v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(__dst, v12, (int)v13);
    __dst += v14;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, __dst);
}

uint64_t sub_13B2678(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 24);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 32) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 24);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v3 += v10;
  }
  *(_DWORD *)(a1 + 40) = v3;
  return v3;
}

uint64_t sub_13B2710()
{
  return 1;
}

void *sub_13B2718@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ClientFeedbackInfo");
}

void *sub_13B2728(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB7D4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B27A8(void *a1)
{
  sub_13B2728(a1);

  operator delete();
}

unsigned char *sub_13B27E0(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_13B285C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        char v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1918(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          char v12 = sub_1198F14(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_13B29FC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B0C0C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_13B2B40(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_13B2BF0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_10E4FFC((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_13B2CC0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_13B2D18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficBannerText.CameraInput");
}

void *sub_13B2D28(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B2D9C(void *a1)
{
  sub_13B2D28(a1);

  operator delete();
}

uint64_t sub_13B2DD4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0xF) != 0)
  {
    *(_WORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13B2DFC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    int v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        char v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          char v12 = v8 + 2;
LABEL_13:
          int v34 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_36;
        }
        int v26 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v34 = v26;
        *(_DWORD *)(a1 + 24) = v27;
        if (v26) {
          goto LABEL_36;
        }
        goto LABEL_49;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v28 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v34 = v28;
          *(_DWORD *)(a1 + 28) = v29;
          if (!v28) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          int v34 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_36;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          int v30 = (char *)sub_188C138((uint64_t)v8, v19);
          int v34 = v30;
          *(unsigned char *)(a1 + 32) = v31 != 0;
          if (!v30) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          int v34 = v18;
          *(unsigned char *)(a1 + 32) = v19 != 0;
        }
        goto LABEL_36;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v8, v22);
          int v34 = v32;
          *(unsigned char *)(a1 + 33) = v33 != 0;
          if (!v32) {
            goto LABEL_49;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          int v34 = v21;
          *(unsigned char *)(a1 + 33) = v22 != 0;
        }
        goto LABEL_36;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v34;
          }
          int v34 = (char *)sub_1885AC0(v9, v25, v8, a3);
          if (!v34) {
            goto LABEL_49;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_49:
        }
          int v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v34;
    }
  }
}

unsigned char *sub_13B30F4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v13 = *(unsigned char *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    v4 += 2;
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v14 = *(unsigned char *)(a1 + 33);
    unsigned char *v4 = 32;
    v4[1] = v14;
    v4 += 2;
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_13B3308(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_13:
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_13B33C4(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_12:
      result[1].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 32);
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    result[1].__r_.__value_.__s.__data_[9] = *(unsigned char *)(a2 + 33);
LABEL_7:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_8:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13B3438()
{
  return 1;
}

void *sub_13B3440@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficBannerText.TriggerPoint");
}

uint64_t sub_13B3450(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2535DA0)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_13B2D28(v5);
      operator delete();
    }
    unint64_t v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_13B2D28(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B3520(uint64_t a1)
{
  sub_13B3450(a1);

  operator delete();
}

uint64_t sub_13B3558(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_13B2DD4(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_13B2DD4(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13B35CC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unint64_t v17 = v8 + 1;
    int v18 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v19 = *v17;
    int v18 = v18 + (v19 << 7) - 128;
    if ((v19 & 0x80000000) == 0)
    {
      unint64_t v17 = v8 + 2;
LABEL_25:
      uint64_t v25 = v17;
      *(_DWORD *)(a1 + 40) = v18;
      goto LABEL_38;
    }
    int v23 = (char *)sub_188C0D0((uint64_t)v8, v18);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 40) = v24;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 32);
    if (!v20)
    {
      uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v20 = sub_13D920C((uint64_t)v21);
      *(void *)(a1 + 32) = v20;
      goto LABEL_35;
    }
LABEL_36:
    int v16 = sub_13B37FC(a3, v20, (unsigned __int8 *)v8);
    goto LABEL_37;
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 24);
    if (!v20)
    {
      uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = sub_13D920C((uint64_t)v22);
      *(void *)(a1 + 24) = v20;
LABEL_35:
      unsigned int v8 = v25;
      goto LABEL_36;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v25;
    }
    int v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
LABEL_37:
    uint64_t v25 = v16;
    if (!v16) {
      goto LABEL_45;
    }
    goto LABEL_38;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

char *sub_13B37FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B2DFC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13B388C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_13B30F4(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unsigned int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unsigned int v12 = v4 + 2;
  }
  char v4 = sub_13B30F4(v10, (unint64_t)v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_13B3A94(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_13B3308(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_13B3308(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v3 += v9;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_13B3B94(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_13D920C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2535D78;
      }
      uint64_t result = sub_13B33C4(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_13D920C((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      unsigned int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      unsigned int v13 = &off_2535D78;
    }
    uint64_t result = sub_13B33C4(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13B3CB4()
{
  return 1;
}

void *sub_13B3CBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficBannerText.TriggerPointRange");
}

uint64_t sub_13B3CCC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2535DD0)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B3D84(uint64_t a1)
{
  sub_13B3CCC(a1);

  operator delete();
}

uint64_t sub_13B3DBC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0) {
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13B3E24(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    int v30 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 24) {
        goto LABEL_14;
      }
      uint64_t v16 = v7 + 1;
      unint64_t v17 = *v7;
      if (*v7 < 0)
      {
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          int v30 = (char *)sub_188C138((uint64_t)v7, (v19 - 128));
          if (!v30) {
            return 0;
          }
          unint64_t v17 = v26;
          goto LABEL_26;
        }
        uint64_t v16 = v7 + 2;
      }
      int v30 = v16;
LABEL_26:
      if (v17 <= 2)
      {
        *(_DWORD *)(a1 + 16) |= 4u;
        *(_DWORD *)(a1 + 36) = v17;
        goto LABEL_41;
      }
      if (*v6) {
        uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v29 = 3;
      goto LABEL_53;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 24);
    if (!v23)
    {
      int v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v24 = (void *)*v24;
      }
      sub_13D6A1C((uint64_t)v24);
      uint64_t v23 = v25;
      *(void *)(a1 + 24) = v25;
      uint64_t v7 = v30;
    }
    unsigned int v15 = (char *)sub_13319DC(a3, v23, (unsigned __int8 *)v7);
LABEL_40:
    int v30 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v8 == 16)
  {
    uint64_t v20 = v7 + 1;
    unint64_t v17 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    int v21 = *v20;
    int v22 = v17 + (v21 << 7);
    unint64_t v17 = (v22 - 128);
    if (v21 < 0)
    {
      int v30 = (char *)sub_188C138((uint64_t)v7, (v22 - 128));
      if (!v30) {
        return 0;
      }
      unint64_t v17 = v27;
    }
    else
    {
      uint64_t v20 = v7 + 2;
LABEL_32:
      int v30 = v20;
    }
    if (v17 <= 2)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_41;
    }
    if (*v6) {
      uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v29 = 2;
LABEL_53:
    sub_188C020(v29, v17, v28);
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unsigned int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    unsigned int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v30;
  }
  return 0;
}

char *sub_13B40D4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 36);
    char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_13B42E8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  if ((v2 & 4) != 0)
  {
    int v7 = *(_DWORD *)(a1 + 36);
    if (v7 < 0) {
      uint64_t v8 = 11;
    }
    else {
      uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v8;
  }
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_13B43EC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13B4418@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficBannerText.TrafficBannerTextButton");
}

void *sub_13B4428(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13B44D0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_148C648(a1 + 12);
  sub_1889DE8(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13B44D0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t v2 = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  uint64_t result = (void ***)(a1 + 136);
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2535DF8)
  {
    uint64_t v5 = *(void *)(a1 + 144);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 152);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 160);
    if (v7)
    {
      sub_1374224(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 168);
    if (v8)
    {
      sub_1374224(v8);
      operator delete();
    }
    uint64_t v9 = *(void *)(a1 + 176);
    if (v9)
    {
      sub_13B3450(v9);
      operator delete();
    }
    uint64_t v10 = *(void *)(a1 + 184);
    if (v10)
    {
      sub_13B3450(v10);
      operator delete();
    }
    uint64_t v11 = *(void *)(a1 + 192);
    if (v11)
    {
      sub_13D2774(v11);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 200);
    if (result)
    {
      sub_13B2728(result);
      operator delete();
    }
  }
  return result;
}

void sub_13B465C(void *a1)
{
  sub_13B4428(a1);

  operator delete();
}

uint64_t sub_13B4694(uint64_t a1)
{
  sub_188CC00(a1 + 24);
  sub_188CC00(a1 + 48);
  uint64_t result = sub_188CC00(a1 + 72);
  uint64_t v3 = *(unsigned int *)(a1 + 104);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13B3DBC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v6) {
    goto LABEL_15;
  }
  if (v6)
  {
    unint64_t v9 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_37;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_37;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_41:
    unint64_t v11 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v11 + 23) < 0)
    {
      **(unsigned char **)unint64_t v11 = 0;
      *(void *)(v11 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_45;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v11 = 0;
      *(unsigned char *)(v11 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_45;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_46;
  }
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_37:
  unint64_t v10 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v10 + 23) < 0)
  {
    **(unsigned char **)unint64_t v10 = 0;
    *(void *)(v10 + 8) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_41;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v10 = 0;
    *(unsigned char *)(v10 + 23) = 0;
    if ((v6 & 4) != 0) {
      goto LABEL_41;
    }
  }
LABEL_9:
  if ((v6 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_45:
  uint64_t result = sub_1369E6C(*(void *)(a1 + 144));
  if ((v6 & 0x10) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_47:
    uint64_t result = sub_1369E6C(*(void *)(a1 + 160));
    if ((v6 & 0x40) == 0)
    {
LABEL_13:
      if ((v6 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_48;
  }
LABEL_46:
  uint64_t result = sub_1369E6C(*(void *)(a1 + 152));
  if ((v6 & 0x20) != 0) {
    goto LABEL_47;
  }
LABEL_12:
  if ((v6 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_48:
  uint64_t result = sub_1369E6C(*(void *)(a1 + 168));
  if ((v6 & 0x80) != 0) {
LABEL_14:
  }
    uint64_t result = sub_13B3558(*(void *)(a1 + 176));
LABEL_15:
  if ((v6 & 0x700) == 0) {
    goto LABEL_20;
  }
  if ((v6 & 0x100) != 0)
  {
    uint64_t result = sub_13B3558(*(void *)(a1 + 184));
    if ((v6 & 0x200) == 0)
    {
LABEL_18:
      if ((v6 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  uint64_t result = sub_1369F48(*(void *)(a1 + 192));
  if ((v6 & 0x400) != 0) {
LABEL_19:
  }
    uint64_t result = (uint64_t)sub_13B27E0(*(unsigned char **)(a1 + 200));
LABEL_20:
  if ((v6 & 0xF800) != 0)
  {
    *(void *)(a1 + 208) = 0;
    *(void *)(a1 + 216) = 0;
    *(_DWORD *)(a1 + 224) = 0;
  }
  if ((v6 & 0xFF0000) != 0)
  {
    *(void *)(a1 + 236) = 0;
    *(void *)(a1 + 228) = 0;
    *(void *)(a1 + 249) = 0;
    *(void *)(a1 + 244) = 0;
  }
  if ((v6 & 0xF000000) != 0)
  {
    *(_DWORD *)(a1 + 260) = 20;
    *(_WORD *)(a1 + 264) = 257;
    *(unsigned char *)(a1 + 266) = 1;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_13B48A4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v153 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v153, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  char v8 = (uint64_t **)(a1 + 72);
  unint64_t v9 = (uint64_t **)(a1 + 48);
  unint64_t v10 = (uint64_t **)(a1 + 24);
  while (2)
  {
    unint64_t v11 = (unsigned __int8 *)(*(void *)v153 + 1);
    unsigned int v12 = **(unsigned char **)v153;
    if ((char)**(unsigned char **)v153 < 0)
    {
      unsigned int v13 = v12 + (*v11 << 7);
      unsigned int v12 = v13 - 128;
      if ((char)*v11 < 0)
      {
        unint64_t v11 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v153, v13 - 128);
        unsigned int v12 = v14;
      }
      else
      {
        unint64_t v11 = (unsigned __int8 *)(*(void *)v153 + 2);
      }
    }
    *(void *)int v153 = v11;
    switch(v12 >> 3)
    {
      case 1u:
        if (v12 != 10) {
          goto LABEL_203;
        }
        unint64_t v15 = (const std::string::value_type *)(v11 - 1);
        while (1)
        {
          uint64_t v16 = (char *)(v15 + 1);
          *(void *)int v153 = v15 + 1;
          unint64_t v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            int v19 = *(std::string **)&v17[2 * v18 + 2];
          }
          else
          {
            if (!*v10) {
              operator new();
            }
            *uint64_t v21 = v20;
            v21[1] = sub_3A6EDC;
            void *v20 = 0;
            v20[1] = 0;
            v20[2] = 0;
            int v19 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v20);
            uint64_t v16 = *(char **)v153;
          }
          unint64_t v15 = sub_188C244(v19, v16, (uint64_t)a3);
          *(void *)int v153 = v15;
          if (!v15) {
            goto LABEL_259;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 10) {
            goto LABEL_211;
          }
        }
      case 2u:
        if (v12 != 18) {
          goto LABEL_203;
        }
        int v22 = (const std::string::value_type *)(v11 - 1);
        while (1)
        {
          uint64_t v23 = (char *)(v22 + 1);
          *(void *)int v153 = v22 + 1;
          int v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            unint64_t v26 = *(std::string **)&v24[2 * v25 + 2];
          }
          else
          {
            if (!*v9) {
              operator new();
            }
            void *v28 = v27;
            v28[1] = sub_3A6EDC;
            *unint64_t v27 = 0;
            v27[1] = 0;
            int v27[2] = 0;
            unint64_t v26 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v27);
            uint64_t v23 = *(char **)v153;
          }
          int v22 = sub_188C244(v26, v23, (uint64_t)a3);
          *(void *)int v153 = v22;
          if (!v22) {
            goto LABEL_259;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 18) {
            goto LABEL_211;
          }
        }
      case 3u:
        if (v12 != 26) {
          goto LABEL_203;
        }
        int v29 = (const std::string::value_type *)(v11 - 1);
        while (1)
        {
          int v30 = (char *)(v29 + 1);
          *(void *)int v153 = v29 + 1;
          uint64_t v31 = *(_DWORD **)(a1 + 88);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 80), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 80) = v32 + 1;
            uint64_t v33 = *(std::string **)&v31[2 * v32 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v35 = v34;
            v35[1] = sub_3A6EDC;
            *int v34 = 0;
            v34[1] = 0;
            v34[2] = 0;
            uint64_t v33 = (std::string *)sub_188CDC8(a1 + 72, (uint64_t)v34);
            int v30 = *(char **)v153;
          }
          int v29 = sub_188C244(v33, v30, (uint64_t)a3);
          *(void *)int v153 = v29;
          if (!v29) {
            goto LABEL_259;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 26) {
            goto LABEL_211;
          }
        }
      case 4u:
        if (v12 != 34) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v36 = *(void *)(a1 + 144);
        if (v36) {
          goto LABEL_140;
        }
        uint64_t v37 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v37 = (void *)*v37;
        }
        sub_13D6A1C((uint64_t)v37);
        uint64_t v36 = v38;
        *(void *)(a1 + 144) = v38;
        goto LABEL_139;
      case 5u:
        if (v12 != 42) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v36 = *(void *)(a1 + 152);
        if (v36) {
          goto LABEL_140;
        }
        uint64_t v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v39 = (void *)*v39;
        }
        sub_13D6A1C((uint64_t)v39);
        uint64_t v36 = v40;
        *(void *)(a1 + 152) = v40;
        goto LABEL_139;
      case 6u:
        if (v12 != 50) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 0x20u;
        uint64_t v36 = *(void *)(a1 + 160);
        if (v36) {
          goto LABEL_140;
        }
        uint64_t v41 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v41 = (void *)*v41;
        }
        sub_13D6A1C((uint64_t)v41);
        uint64_t v36 = v42;
        *(void *)(a1 + 160) = v42;
        goto LABEL_139;
      case 7u:
        if (v12 != 56) {
          goto LABEL_203;
        }
        v5 |= 0x800u;
        unint64_t v43 = (char *)(v11 + 1);
        int v44 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_64;
        }
        int v45 = *v43;
        int v44 = v44 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v119 = sub_188C0D0((uint64_t)v11, v44);
          *(void *)int v153 = v119;
          *(_DWORD *)(a1 + 208) = v120;
          if (!v119) {
            goto LABEL_259;
          }
        }
        else
        {
          unint64_t v43 = (char *)(v11 + 2);
LABEL_64:
          *(void *)int v153 = v43;
          *(_DWORD *)(a1 + 208) = v44;
        }
        goto LABEL_211;
      case 8u:
        if (v12 != 64) {
          goto LABEL_203;
        }
        v5 |= 0x1000u;
        uint64_t v46 = (char *)(v11 + 1);
        int v47 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_69;
        }
        int v48 = *v46;
        int v47 = v47 + (v48 << 7) - 128;
        if (v48 < 0)
        {
          uint64_t v121 = sub_188C0D0((uint64_t)v11, v47);
          *(void *)int v153 = v121;
          *(_DWORD *)(a1 + 212) = v122;
          if (!v121) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v46 = (char *)(v11 + 2);
LABEL_69:
          *(void *)int v153 = v46;
          *(_DWORD *)(a1 + 212) = v47;
        }
        goto LABEL_211;
      case 9u:
        if (v12 != 72) {
          goto LABEL_203;
        }
        v5 |= 0x2000u;
        char v49 = (char *)(v11 + 1);
        int v50 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_74;
        }
        int v51 = *v49;
        int v50 = v50 + (v51 << 7) - 128;
        if (v51 < 0)
        {
          uint64_t v123 = sub_188C0D0((uint64_t)v11, v50);
          *(void *)int v153 = v123;
          *(_DWORD *)(a1 + 216) = v124;
          if (!v123) {
            goto LABEL_259;
          }
        }
        else
        {
          char v49 = (char *)(v11 + 2);
LABEL_74:
          *(void *)int v153 = v49;
          *(_DWORD *)(a1 + 216) = v50;
        }
        goto LABEL_211;
      case 0xAu:
        if (v12 != 80) {
          goto LABEL_203;
        }
        v5 |= 0x4000u;
        int v52 = (char *)(v11 + 1);
        int v53 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_79;
        }
        int v54 = *v52;
        int v53 = v53 + (v54 << 7) - 128;
        if (v54 < 0)
        {
          uint64_t v125 = sub_188C0D0((uint64_t)v11, v53);
          *(void *)int v153 = v125;
          *(_DWORD *)(a1 + 220) = v126;
          if (!v125) {
            goto LABEL_259;
          }
        }
        else
        {
          int v52 = (char *)(v11 + 2);
LABEL_79:
          *(void *)int v153 = v52;
          *(_DWORD *)(a1 + 220) = v53;
        }
        goto LABEL_211;
      case 0xBu:
        if (v12 != 88) {
          goto LABEL_203;
        }
        unint64_t v55 = (char *)(v11 + 1);
        unint64_t v56 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_84;
        }
        int v57 = *v55;
        int v58 = v56 + (v57 << 7);
        unint64_t v56 = (v58 - 128);
        if (v57 < 0)
        {
          *(void *)int v153 = sub_188C138((uint64_t)v11, (v58 - 128));
          if (!*(void *)v153) {
            goto LABEL_259;
          }
          unint64_t v56 = v127;
        }
        else
        {
          unint64_t v55 = (char *)(v11 + 2);
LABEL_84:
          *(void *)int v153 = v55;
        }
        if (v56 <= 3)
        {
          *(_DWORD *)(a1 + 16) |= 0x8000u;
          *(_DWORD *)(a1 + 224) = v56;
          goto LABEL_211;
        }
        if (*v7) {
          uint64_t v151 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v151 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v152 = 11;
        goto LABEL_253;
      case 0xCu:
        if (v12 != 96) {
          goto LABEL_203;
        }
        v5 |= 0x2000000u;
        char v59 = (char *)(v11 + 1);
        uint64_t v60 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_91;
        }
        int v61 = *v59;
        uint64_t v60 = v60 + (v61 << 7) - 128;
        if (v61 < 0)
        {
          uint64_t v128 = sub_188C138((uint64_t)v11, v60);
          *(void *)int v153 = v128;
          *(unsigned char *)(a1 + 264) = v129 != 0;
          if (!v128) {
            goto LABEL_259;
          }
        }
        else
        {
          char v59 = (char *)(v11 + 2);
LABEL_91:
          *(void *)int v153 = v59;
          *(unsigned char *)(a1 + 264) = v60 != 0;
        }
        goto LABEL_211;
      case 0xDu:
        if (v12 != 104) {
          goto LABEL_203;
        }
        int v62 = (char *)(v11 + 1);
        unint64_t v56 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_96;
        }
        int v63 = *v62;
        int v64 = v56 + (v63 << 7);
        unint64_t v56 = (v64 - 128);
        if (v63 < 0)
        {
          *(void *)int v153 = sub_188C138((uint64_t)v11, (v64 - 128));
          if (!*(void *)v153) {
            goto LABEL_259;
          }
          unint64_t v56 = v130;
        }
        else
        {
          int v62 = (char *)(v11 + 2);
LABEL_96:
          *(void *)int v153 = v62;
        }
        if (v56 > 7)
        {
          if (*v7) {
            uint64_t v151 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v151 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v152 = 13;
LABEL_253:
          sub_188C020(v152, v56, v151);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x10000u;
          *(_DWORD *)(a1 + 228) = v56;
        }
        goto LABEL_211;
      case 0xEu:
        if (v12 != 112) {
          goto LABEL_203;
        }
        v5 |= 0x20000u;
        uint64_t v65 = (char *)(v11 + 1);
        int v66 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_103;
        }
        int v67 = *v65;
        int v66 = v66 + (v67 << 7) - 128;
        if (v67 < 0)
        {
          uint64_t v131 = sub_188C0D0((uint64_t)v11, v66);
          *(void *)int v153 = v131;
          *(_DWORD *)(a1 + 232) = v132;
          if (!v131) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v65 = (char *)(v11 + 2);
LABEL_103:
          *(void *)int v153 = v65;
          *(_DWORD *)(a1 + 232) = v66;
        }
        goto LABEL_211;
      case 0xFu:
        if (v12 != 122) {
          goto LABEL_203;
        }
        unint64_t v68 = (char *)(v11 - 1);
        while (1)
        {
          char v69 = (unsigned __int8 *)(v68 + 1);
          *(void *)int v153 = v68 + 1;
          uint64_t v70 = *(_DWORD **)(a1 + 112);
          if (v70 && (uint64_t v71 = *(int *)(a1 + 104), (int)v71 < *v70))
          {
            *(_DWORD *)(a1 + 104) = v71 + 1;
            uint64_t v72 = *(void *)&v70[2 * v71 + 2];
          }
          else
          {
            uint64_t v73 = sub_13D9308(*(void *)(a1 + 96));
            uint64_t v72 = sub_188CDC8(a1 + 96, (uint64_t)v73);
            char v69 = *(unsigned __int8 **)v153;
          }
          unint64_t v68 = sub_13B5788(a3, v72, v69);
          *(void *)int v153 = v68;
          if (!v68) {
            goto LABEL_259;
          }
          if (*(void *)a3 <= (unint64_t)v68 || *v68 != 122) {
            goto LABEL_211;
          }
        }
      case 0x10u:
        if (v12 != 128) {
          goto LABEL_203;
        }
        v5 |= 0x40000u;
        uint64_t v75 = (char *)(v11 + 1);
        LODWORD(v74) = *v11;
        if ((v74 & 0x80) == 0) {
          goto LABEL_118;
        }
        int v76 = *v75;
        uint64_t v74 = v74 + (v76 << 7) - 128;
        if (v76 < 0)
        {
          uint64_t v133 = sub_188C138((uint64_t)v11, v74);
          *(void *)int v153 = v133;
          *(_DWORD *)(a1 + 236) = v134;
          if (!v133) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v75 = (char *)(v11 + 2);
LABEL_118:
          *(void *)int v153 = v75;
          *(_DWORD *)(a1 + 236) = v74;
        }
        goto LABEL_211;
      case 0x11u:
        if (v12 != 136) {
          goto LABEL_203;
        }
        v5 |= 0x1000000u;
        int v77 = (char *)(v11 + 1);
        int v78 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_123;
        }
        int v79 = *v77;
        int v78 = v78 + (v79 << 7) - 128;
        if (v79 < 0)
        {
          uint64_t v135 = sub_188C0D0((uint64_t)v11, v78);
          *(void *)int v153 = v135;
          *(_DWORD *)(a1 + 260) = v136;
          if (!v135) {
            goto LABEL_259;
          }
        }
        else
        {
          int v77 = (char *)(v11 + 2);
LABEL_123:
          *(void *)int v153 = v77;
          *(_DWORD *)(a1 + 260) = v78;
        }
        goto LABEL_211;
      case 0x12u:
        if (v12 != 144) {
          goto LABEL_203;
        }
        v5 |= 0x4000000u;
        uint64_t v80 = (char *)(v11 + 1);
        uint64_t v81 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_128;
        }
        int v82 = *v80;
        uint64_t v81 = v81 + (v82 << 7) - 128;
        if (v82 < 0)
        {
          uint64_t v137 = sub_188C138((uint64_t)v11, v81);
          *(void *)int v153 = v137;
          *(unsigned char *)(a1 + 265) = v138 != 0;
          if (!v137) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v80 = (char *)(v11 + 2);
LABEL_128:
          *(void *)int v153 = v80;
          *(unsigned char *)(a1 + 265) = v81 != 0;
        }
        goto LABEL_211;
      case 0x13u:
        if (v12 != 152) {
          goto LABEL_203;
        }
        v5 |= 0x80000u;
        uint64_t v83 = (char *)(v11 + 1);
        int v84 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_133;
        }
        int v85 = *v83;
        int v84 = v84 + (v85 << 7) - 128;
        if (v85 < 0)
        {
          uint64_t v139 = sub_188C0D0((uint64_t)v11, v84);
          *(void *)int v153 = v139;
          *(_DWORD *)(a1 + 240) = v140;
          if (!v139) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v83 = (char *)(v11 + 2);
LABEL_133:
          *(void *)int v153 = v83;
          *(_DWORD *)(a1 + 240) = v84;
        }
        goto LABEL_211;
      case 0x14u:
        if (v12 != 162) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 0x40u;
        uint64_t v36 = *(void *)(a1 + 168);
        if (v36) {
          goto LABEL_140;
        }
        int v86 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v86 = (void *)*v86;
        }
        sub_13D6A1C((uint64_t)v86);
        uint64_t v36 = v87;
        *(void *)(a1 + 168) = v87;
LABEL_139:
        unint64_t v11 = *(unsigned __int8 **)v153;
LABEL_140:
        uint64_t v88 = sub_13319DC(a3, v36, v11);
        goto LABEL_210;
      case 0x15u:
        if (v12 != 170) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v89 = *(void *)(a1 + 8);
        int v90 = (uint64_t *)(v89 & 0xFFFFFFFFFFFFFFFCLL);
        if (v89) {
          int v90 = (uint64_t *)*v90;
        }
        int v91 = (void *)(a1 + 120);
        goto LABEL_196;
      case 0x16u:
        if (v12 != 176) {
          goto LABEL_203;
        }
        v5 |= 0x8000000u;
        uint64_t v92 = (char *)(v11 + 1);
        uint64_t v93 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_149;
        }
        int v94 = *v92;
        uint64_t v93 = v93 + (v94 << 7) - 128;
        if (v94 < 0)
        {
          uint64_t v141 = sub_188C138((uint64_t)v11, v93);
          *(void *)int v153 = v141;
          *(unsigned char *)(a1 + 266) = v142 != 0;
          if (!v141) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v92 = (char *)(v11 + 2);
LABEL_149:
          *(void *)int v153 = v92;
          *(unsigned char *)(a1 + 266) = v93 != 0;
        }
        goto LABEL_211;
      case 0x17u:
        if (v12 != 186) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v95 = *(void *)(a1 + 8);
        int v90 = (uint64_t *)(v95 & 0xFFFFFFFFFFFFFFFCLL);
        if (v95) {
          int v90 = (uint64_t *)*v90;
        }
        int v91 = (void *)(a1 + 128);
        goto LABEL_196;
      case 0x18u:
        if (v12 != 194) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 0x80u;
        uint64_t v96 = *(void *)(a1 + 176);
        if (v96) {
          goto LABEL_165;
        }
        unsigned int v97 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v97 = (void *)*v97;
        }
        uint64_t v96 = sub_13D9288((uint64_t)v97);
        *(void *)(a1 + 176) = v96;
        goto LABEL_164;
      case 0x19u:
        if (v12 != 202) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 0x100u;
        uint64_t v96 = *(void *)(a1 + 184);
        if (v96) {
          goto LABEL_165;
        }
        uint64_t v98 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v98 = (void *)*v98;
        }
        uint64_t v96 = sub_13D9288((uint64_t)v98);
        *(void *)(a1 + 184) = v96;
LABEL_164:
        unint64_t v11 = *(unsigned __int8 **)v153;
LABEL_165:
        uint64_t v88 = (uint64_t)sub_13B5818(a3, v96, v11);
        goto LABEL_210;
      case 0x1Au:
        if (v12 != 208) {
          goto LABEL_203;
        }
        v5 |= 0x100000u;
        int v99 = (char *)(v11 + 1);
        int v100 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_170;
        }
        int v101 = *v99;
        int v100 = v100 + (v101 << 7) - 128;
        if (v101 < 0)
        {
          uint64_t v143 = sub_188C0D0((uint64_t)v11, v100);
          *(void *)int v153 = v143;
          *(_DWORD *)(a1 + 244) = v144;
          if (!v143) {
            goto LABEL_259;
          }
        }
        else
        {
          int v99 = (char *)(v11 + 2);
LABEL_170:
          *(void *)int v153 = v99;
          *(_DWORD *)(a1 + 244) = v100;
        }
        goto LABEL_211;
      case 0x1Bu:
        if (v12 != 216) {
          goto LABEL_203;
        }
        v5 |= 0x200000u;
        uint64_t v102 = (char *)(v11 + 1);
        int v103 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_175;
        }
        int v104 = *v102;
        int v103 = v103 + (v104 << 7) - 128;
        if (v104 < 0)
        {
          uint64_t v145 = sub_188C0D0((uint64_t)v11, v103);
          *(void *)int v153 = v145;
          *(_DWORD *)(a1 + 248) = v146;
          if (!v145) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v102 = (char *)(v11 + 2);
LABEL_175:
          *(void *)int v153 = v102;
          *(_DWORD *)(a1 + 248) = v103;
        }
        goto LABEL_211;
      case 0x1Cu:
        if (v12 != 224) {
          goto LABEL_203;
        }
        v5 |= 0x400000u;
        uint64_t v105 = (char *)(v11 + 1);
        int v106 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_180;
        }
        int v107 = *v105;
        int v106 = v106 + (v107 << 7) - 128;
        if (v107 < 0)
        {
          uint64_t v147 = sub_188C0D0((uint64_t)v11, v106);
          *(void *)int v153 = v147;
          *(_DWORD *)(a1 + 252) = v148;
          if (!v147) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v105 = (char *)(v11 + 2);
LABEL_180:
          *(void *)int v153 = v105;
          *(_DWORD *)(a1 + 252) = v106;
        }
        goto LABEL_211;
      case 0x1Du:
        if (v12 != 234) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 0x200u;
        uint64_t v108 = *(void *)(a1 + 192);
        if (!v108)
        {
          int v109 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v109 = (void *)*v109;
          }
          uint64_t v108 = sub_13DAB08((uint64_t)v109);
          *(void *)(a1 + 192) = v108;
          unint64_t v11 = *(unsigned __int8 **)v153;
        }
        uint64_t v88 = sub_1323390(a3, v108, v11);
        goto LABEL_210;
      case 0x1Eu:
        if (v12 != 240) {
          goto LABEL_203;
        }
        v5 |= 0x800000u;
        uint64_t v110 = (char *)(v11 + 1);
        uint64_t v111 = *v11;
        if (((char)*v11 & 0x80000000) == 0) {
          goto LABEL_191;
        }
        int v112 = *v110;
        uint64_t v111 = v111 + (v112 << 7) - 128;
        if (v112 < 0)
        {
          uint64_t v149 = sub_188C138((uint64_t)v11, v111);
          *(void *)int v153 = v149;
          *(unsigned char *)(a1 + 256) = v150 != 0;
          if (!v149) {
            goto LABEL_259;
          }
        }
        else
        {
          uint64_t v110 = (char *)(v11 + 2);
LABEL_191:
          *(void *)int v153 = v110;
          *(unsigned char *)(a1 + 256) = v111 != 0;
        }
        goto LABEL_211;
      case 0x1Fu:
        if (v12 != 250) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v113 = *(void *)(a1 + 8);
        int v90 = (uint64_t *)(v113 & 0xFFFFFFFFFFFFFFFCLL);
        if (v113) {
          int v90 = (uint64_t *)*v90;
        }
        int v91 = (void *)(a1 + 136);
LABEL_196:
        uint64_t v114 = (std::string *)sub_1880F84(v91, v90);
        uint64_t v88 = (uint64_t)sub_188C244(v114, *(char **)v153, (uint64_t)a3);
        goto LABEL_210;
      case 0x20u:
        if (v12 != 2) {
          goto LABEL_203;
        }
        *(_DWORD *)(a1 + 16) |= 0x400u;
        uint64_t v115 = *(void *)(a1 + 200);
        if (!v115)
        {
          int v116 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v116 = (void *)*v116;
          }
          uint64_t v115 = sub_13D916C((uint64_t)v116);
          *(void *)(a1 + 200) = v115;
          unint64_t v11 = *(unsigned __int8 **)v153;
        }
        uint64_t v88 = (uint64_t)sub_13B58A8(a3, v115, v11);
        goto LABEL_210;
      default:
LABEL_203:
        if (v12) {
          BOOL v117 = (v12 & 7) == 4;
        }
        else {
          BOOL v117 = 1;
        }
        if (!v117)
        {
          if (*v7)
          {
            uint64_t v118 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v118 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v11 = *(unsigned __int8 **)v153;
          }
          uint64_t v88 = (uint64_t)sub_1885AC0(v12, v118, (char *)v11, a3);
LABEL_210:
          *(void *)int v153 = v88;
          if (!v88) {
            goto LABEL_259;
          }
LABEL_211:
          if (sub_11947B8((uint64_t)a3, (char **)v153, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v11) {
          a3[10].i32[0] = v12 - 1;
        }
        else {
LABEL_259:
        }
          *(void *)int v153 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v153;
    }
  }
}

char *sub_13B5788(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B3E24(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13B5818(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B35CC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13B58A8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B285C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13B5938(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unint64_t v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unint64_t v9 = (void *)*v9;
        }
        unint64_t v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(unsigned int *)(a1 + 56);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = 0;
    uint64_t v14 = 8 * v12;
    do
    {
      unint64_t v15 = *(void **)(*(void *)(a1 + 64) + v13 + 8);
      if (*((char *)v15 + 23) < 0)
      {
        int64_t v16 = v15[1];
        if (v16 > 127) {
          goto LABEL_24;
        }
      }
      else
      {
        int64_t v16 = *((unsigned __int8 *)v15 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v16)
      {
        *__dst = 18;
        __dst[1] = v16;
        if (*((char *)v15 + 23) < 0) {
          unint64_t v15 = (void *)*v15;
        }
        unint64_t v17 = __dst + 2;
        memcpy(v17, v15, v16);
        __dst = &v17[v16];
        goto LABEL_22;
      }
LABEL_24:
      __dst = (char *)sub_188A868(a3, 2, (uint64_t)v15, __dst);
LABEL_22:
      v13 += 8;
    }
    while (v14 != v13);
  }
  uint64_t v18 = *(unsigned int *)(a1 + 80);
  if ((int)v18 >= 1)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 8 * v18;
    do
    {
      uint64_t v21 = *(void **)(*(void *)(a1 + 88) + v19 + 8);
      if (*((char *)v21 + 23) < 0)
      {
        int64_t v22 = v21[1];
        if (v22 > 127) {
          goto LABEL_36;
        }
      }
      else
      {
        int64_t v22 = *((unsigned __int8 *)v21 + 23);
      }
      if ((uint64_t)(*a3 - (void)__dst + 14) >= v22)
      {
        *__dst = 26;
        __dst[1] = v22;
        if (*((char *)v21 + 23) < 0) {
          uint64_t v21 = (void *)*v21;
        }
        uint64_t v23 = __dst + 2;
        memcpy(v23, v21, v22);
        __dst = &v23[v22];
        goto LABEL_34;
      }
LABEL_36:
      __dst = (char *)sub_188A868(a3, 3, (uint64_t)v21, __dst);
LABEL_34:
      v19 += 8;
    }
    while (v20 != v19);
  }
  int v24 = *(_DWORD *)(a1 + 16);
  if ((v24 & 8) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v25 = *(void *)(a1 + 144);
    *__dst = 34;
    unsigned int v26 = *(_DWORD *)(v25 + 20);
    __dst[1] = v26;
    if (v26 > 0x7F) {
      unint64_t v27 = sub_188A9CC(v26, __dst + 1);
    }
    else {
      unint64_t v27 = __dst + 2;
    }
    __dst = sub_1374B08(v25, v27, a3);
    if ((v24 & 0x10) == 0)
    {
LABEL_39:
      if ((v24 & 0x20) == 0) {
        goto LABEL_40;
      }
      goto LABEL_54;
    }
  }
  else if ((v24 & 0x10) == 0)
  {
    goto LABEL_39;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v28 = *(void *)(a1 + 152);
  *__dst = 42;
  unsigned int v29 = *(_DWORD *)(v28 + 20);
  __dst[1] = v29;
  if (v29 > 0x7F) {
    int v30 = sub_188A9CC(v29, __dst + 1);
  }
  else {
    int v30 = __dst + 2;
  }
  __dst = sub_1374B08(v28, v30, a3);
  if ((v24 & 0x20) == 0)
  {
LABEL_40:
    if ((v24 & 0x800) == 0) {
      goto LABEL_66;
    }
    goto LABEL_60;
  }
LABEL_54:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v31 = *(void *)(a1 + 160);
  *__dst = 50;
  unsigned int v32 = *(_DWORD *)(v31 + 20);
  __dst[1] = v32;
  if (v32 > 0x7F) {
    uint64_t v33 = sub_188A9CC(v32, __dst + 1);
  }
  else {
    uint64_t v33 = __dst + 2;
  }
  __dst = sub_1374B08(v31, v33, a3);
  if ((v24 & 0x800) != 0)
  {
LABEL_60:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v34 = *(_DWORD *)(a1 + 208);
    *__dst = 56;
    __dst[1] = v34;
    if (v34 > 0x7F)
    {
      __dst[1] = v34 | 0x80;
      unsigned int v35 = v34 >> 7;
      __dst[2] = v34 >> 7;
      __dst += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v36 = v35 >> 14;
          v35 >>= 7;
          *__dst++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      __dst += 2;
    }
  }
LABEL_66:
  if ((v24 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v37 = *(_DWORD *)(a1 + 212);
    *__dst = 64;
    __dst[1] = v37;
    if (v37 > 0x7F)
    {
      __dst[1] = v37 | 0x80;
      unsigned int v38 = v37 >> 7;
      __dst[2] = v37 >> 7;
      __dst += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v39 = v38 >> 14;
          v38 >>= 7;
          *__dst++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v24 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v40 = *(_DWORD *)(a1 + 216);
    *__dst = 72;
    __dst[1] = v40;
    if (v40 > 0x7F)
    {
      __dst[1] = v40 | 0x80;
      unsigned int v41 = v40 >> 7;
      __dst[2] = v40 >> 7;
      __dst += 3;
      if (v40 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v42 = v41 >> 14;
          v41 >>= 7;
          *__dst++ = v41;
        }
        while (v42);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v24 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v43 = *(_DWORD *)(a1 + 220);
    *__dst = 80;
    __dst[1] = v43;
    if (v43 > 0x7F)
    {
      __dst[1] = v43 | 0x80;
      unsigned int v44 = v43 >> 7;
      __dst[2] = v43 >> 7;
      __dst += 3;
      if (v43 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v45 = v44 >> 14;
          v44 >>= 7;
          *__dst++ = v44;
        }
        while (v45);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v24 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v46 = *(int *)(a1 + 224);
    *__dst = 88;
    __dst[1] = v46;
    if (v46 > 0x7F)
    {
      __dst[1] = v46 | 0x80;
      unint64_t v47 = v46 >> 7;
      __dst[2] = v46 >> 7;
      __dst += 3;
      if (v46 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v48 = v47 >> 14;
          v47 >>= 7;
          *__dst++ = v47;
        }
        while (v48);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v24 & 0x2000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v49 = *(unsigned char *)(a1 + 264);
    *__dst = 96;
    __dst[1] = v49;
    __dst += 2;
  }
  if ((v24 & 0x10000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v50 = *(int *)(a1 + 228);
    *__dst = 104;
    __dst[1] = v50;
    if (v50 > 0x7F)
    {
      __dst[1] = v50 | 0x80;
      unint64_t v51 = v50 >> 7;
      __dst[2] = v50 >> 7;
      __dst += 3;
      if (v50 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v52 = v51 >> 14;
          v51 >>= 7;
          *__dst++ = v51;
        }
        while (v52);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  if ((v24 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v53 = *(_DWORD *)(a1 + 232);
    *__dst = 112;
    __dst[1] = v53;
    if (v53 > 0x7F)
    {
      __dst[1] = v53 | 0x80;
      unsigned int v54 = v53 >> 7;
      __dst[2] = v53 >> 7;
      __dst += 3;
      if (v53 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v55 = v54 >> 14;
          v54 >>= 7;
          *__dst++ = v54;
        }
        while (v55);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  int v56 = *(_DWORD *)(a1 + 104);
  if (v56)
  {
    for (int i = 0; i != v56; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v58 = *(void *)(*(void *)(a1 + 112) + 8 * i + 8);
      *__dst = 122;
      unsigned int v59 = *(_DWORD *)(v58 + 20);
      __dst[1] = v59;
      if (v59 > 0x7F) {
        uint64_t v60 = sub_188A9CC(v59, __dst + 1);
      }
      else {
        uint64_t v60 = __dst + 2;
      }
      __dst = sub_13B40D4(v58, (unint64_t)v60, a3);
    }
  }
  if ((v24 & 0x40000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v61 = *(int *)(a1 + 236);
    *(_WORD *)__dst = 384;
    __dst[2] = v61;
    if (v61 > 0x7F)
    {
      __dst[2] = v61 | 0x80;
      unint64_t v62 = v61 >> 7;
      __dst[3] = v61 >> 7;
      __dst += 4;
      if (v61 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v63 = v62 >> 14;
          v62 >>= 7;
          *__dst++ = v62;
        }
        while (v63);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v24 & 0x1000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v64 = *(_DWORD *)(a1 + 260);
    *(_WORD *)__dst = 392;
    __dst[2] = v64;
    if (v64 > 0x7F)
    {
      __dst[2] = v64 | 0x80;
      unsigned int v65 = v64 >> 7;
      __dst[3] = v64 >> 7;
      __dst += 4;
      if (v64 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v66 = v65 >> 14;
          v65 >>= 7;
          *__dst++ = v65;
        }
        while (v66);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v24 & 0x4000000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v67 = *(unsigned char *)(a1 + 265);
    *(_WORD *)__dst = 400;
    __dst[2] = v67;
    __dst += 3;
  }
  if ((v24 & 0x80000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v68 = *(_DWORD *)(a1 + 240);
    *(_WORD *)__dst = 408;
    __dst[2] = v68;
    if (v68 > 0x7F)
    {
      __dst[2] = v68 | 0x80;
      unsigned int v69 = v68 >> 7;
      __dst[3] = v68 >> 7;
      __dst += 4;
      if (v68 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v70 = v69 >> 14;
          v69 >>= 7;
          *__dst++ = v69;
        }
        while (v70);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v24 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v71 = *(void *)(a1 + 168);
    *(_WORD *)__dst = 418;
    unsigned int v72 = *(_DWORD *)(v71 + 20);
    __dst[2] = v72;
    if (v72 > 0x7F) {
      uint64_t v73 = sub_188A9CC(v72, __dst + 2);
    }
    else {
      uint64_t v73 = __dst + 3;
    }
    __dst = sub_1374B08(v71, v73, a3);
    if ((v24 & 1) == 0)
    {
LABEL_147:
      if ((v24 & 0x8000000) == 0) {
        goto LABEL_148;
      }
      goto LABEL_160;
    }
  }
  else if ((v24 & 1) == 0)
  {
    goto LABEL_147;
  }
  __dst = sub_117A0AC(a3, 21, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v24 & 0x8000000) == 0)
  {
LABEL_148:
    if ((v24 & 2) == 0) {
      goto LABEL_149;
    }
    goto LABEL_163;
  }
LABEL_160:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v74 = *(unsigned char *)(a1 + 266);
  *(_WORD *)__dst = 432;
  __dst[2] = v74;
  __dst += 3;
  if ((v24 & 2) == 0)
  {
LABEL_149:
    if ((v24 & 0x80) == 0) {
      goto LABEL_150;
    }
    goto LABEL_164;
  }
LABEL_163:
  __dst = sub_117A0AC(a3, 23, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v24 & 0x80) == 0)
  {
LABEL_150:
    if ((v24 & 0x100) == 0) {
      goto LABEL_151;
    }
    goto LABEL_170;
  }
LABEL_164:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v75 = *(void *)(a1 + 176);
  *(_WORD *)__dst = 450;
  unsigned int v76 = *(_DWORD *)(v75 + 20);
  __dst[2] = v76;
  if (v76 > 0x7F) {
    int v77 = sub_188A9CC(v76, __dst + 2);
  }
  else {
    int v77 = __dst + 3;
  }
  __dst = sub_13B388C(v75, (unint64_t)v77, a3);
  if ((v24 & 0x100) == 0)
  {
LABEL_151:
    if ((v24 & 0x100000) == 0) {
      goto LABEL_182;
    }
    goto LABEL_176;
  }
LABEL_170:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v78 = *(void *)(a1 + 184);
  *(_WORD *)__dst = 458;
  unsigned int v79 = *(_DWORD *)(v78 + 20);
  __dst[2] = v79;
  if (v79 > 0x7F) {
    uint64_t v80 = sub_188A9CC(v79, __dst + 2);
  }
  else {
    uint64_t v80 = __dst + 3;
  }
  __dst = sub_13B388C(v78, (unint64_t)v80, a3);
  if ((v24 & 0x100000) != 0)
  {
LABEL_176:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v81 = *(_DWORD *)(a1 + 244);
    *(_WORD *)__dst = 464;
    __dst[2] = v81;
    if (v81 > 0x7F)
    {
      __dst[2] = v81 | 0x80;
      unsigned int v82 = v81 >> 7;
      __dst[3] = v81 >> 7;
      __dst += 4;
      if (v81 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v83 = v82 >> 14;
          v82 >>= 7;
          *__dst++ = v82;
        }
        while (v83);
      }
    }
    else
    {
      __dst += 3;
    }
  }
LABEL_182:
  if ((v24 & 0x200000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v84 = *(_DWORD *)(a1 + 248);
    *(_WORD *)__dst = 472;
    __dst[2] = v84;
    if (v84 > 0x7F)
    {
      __dst[2] = v84 | 0x80;
      unsigned int v85 = v84 >> 7;
      __dst[3] = v84 >> 7;
      __dst += 4;
      if (v84 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v86 = v85 >> 14;
          v85 >>= 7;
          *__dst++ = v85;
        }
        while (v86);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v24 & 0x400000) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unsigned int v87 = *(_DWORD *)(a1 + 252);
    *(_WORD *)__dst = 480;
    __dst[2] = v87;
    if (v87 > 0x7F)
    {
      __dst[2] = v87 | 0x80;
      unsigned int v88 = v87 >> 7;
      __dst[3] = v87 >> 7;
      __dst += 4;
      if (v87 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unsigned int v89 = v88 >> 14;
          v88 >>= 7;
          *__dst++ = v88;
        }
        while (v89);
      }
    }
    else
    {
      __dst += 3;
    }
  }
  if ((v24 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    uint64_t v90 = *(void *)(a1 + 192);
    *(_WORD *)__dst = 490;
    unsigned int v91 = *(_DWORD *)(v90 + 44);
    __dst[2] = v91;
    if (v91 > 0x7F) {
      uint64_t v92 = sub_188A9CC(v91, __dst + 2);
    }
    else {
      uint64_t v92 = __dst + 3;
    }
    __dst = sub_13D2F58(v90, v92, a3);
    if ((v24 & 0x800000) == 0)
    {
LABEL_198:
      if ((v24 & 4) == 0) {
        goto LABEL_199;
      }
      goto LABEL_210;
    }
  }
  else if ((v24 & 0x800000) == 0)
  {
    goto LABEL_198;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v93 = *(unsigned char *)(a1 + 256);
  *(_WORD *)__dst = 496;
  __dst[2] = v93;
  __dst += 3;
  if ((v24 & 4) == 0)
  {
LABEL_199:
    if ((v24 & 0x400) == 0) {
      goto LABEL_217;
    }
    goto LABEL_211;
  }
LABEL_210:
  __dst = sub_117A0AC(a3, 31, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), __dst);
  if ((v24 & 0x400) == 0) {
    goto LABEL_217;
  }
LABEL_211:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v94 = *(void *)(a1 + 200);
  *(_WORD *)__dst = 642;
  unsigned int v95 = *(_DWORD *)(v94 + 40);
  __dst[2] = v95;
  if (v95 > 0x7F) {
    uint64_t v96 = sub_188A9CC(v95, __dst + 2);
  }
  else {
    uint64_t v96 = __dst + 3;
  }
  __dst = sub_13B29FC(v94, v96, a3);
LABEL_217:
  uint64_t v97 = *(void *)(a1 + 8);
  if ((v97 & 1) == 0) {
    return __dst;
  }
  unint64_t v99 = v97 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v99 + 31) < 0)
  {
    int v100 = *(void **)(v99 + 8);
    uint64_t v101 = *(void *)(v99 + 16);
  }
  else
  {
    int v100 = (void *)(v99 + 8);
    LODWORD(v101) = *(unsigned __int8 *)(v99 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v101)
  {
    uint64_t v102 = (int)v101;
    memcpy(__dst, v100, (int)v101);
    __dst += v102;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v100, v101, __dst);
}

uint64_t sub_13B6760(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  if ((int)v2 < 1)
  {
    uint64_t v4 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v4 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v5 = *v3++;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v4 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(unsigned int *)(a1 + 56);
  uint64_t v9 = v4 + v8;
  if ((int)v8 >= 1)
  {
    int64_t v10 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v9 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6);
      --v8;
    }
    while (v8);
  }
  uint64_t v14 = *(unsigned int *)(a1 + 80);
  uint64_t v15 = v9 + v14;
  if ((int)v14 >= 1)
  {
    int64_t v16 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v15 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6);
      --v14;
    }
    while (v14);
  }
  uint64_t v20 = *(int *)(a1 + 104);
  uint64_t v21 = v15 + v20;
  uint64_t v22 = *(void *)(a1 + 112);
  if (v22) {
    uint64_t v23 = (uint64_t *)(v22 + 8);
  }
  else {
    uint64_t v23 = 0;
  }
  if (v20)
  {
    uint64_t v24 = 8 * v20;
    do
    {
      uint64_t v25 = *v23++;
      uint64_t v26 = sub_13B42E8(v25);
      v21 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6);
      v24 -= 8;
    }
    while (v24);
  }
  int v27 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v27) {
    goto LABEL_34;
  }
  if (v27)
  {
    unint64_t v35 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v36 = *(unsigned __int8 *)(v35 + 23);
    uint64_t v37 = *(void *)(v35 + 8);
    if ((v36 & 0x80u) == 0) {
      uint64_t v37 = v36;
    }
    v21 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v27 & 2) == 0)
    {
LABEL_27:
      if ((v27 & 4) == 0) {
        goto LABEL_28;
      }
      goto LABEL_76;
    }
  }
  else if ((v27 & 2) == 0)
  {
    goto LABEL_27;
  }
  unint64_t v38 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v39 = *(unsigned __int8 *)(v38 + 23);
  uint64_t v40 = *(void *)(v38 + 8);
  if ((v39 & 0x80u) == 0) {
    uint64_t v40 = v39;
  }
  v21 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 4) == 0)
  {
LABEL_28:
    if ((v27 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_79;
  }
LABEL_76:
  unint64_t v41 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
  uint64_t v43 = *(void *)(v41 + 8);
  if ((v42 & 0x80u) == 0) {
    uint64_t v43 = v42;
  }
  v21 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 8) == 0)
  {
LABEL_29:
    if ((v27 & 0x10) == 0) {
      goto LABEL_30;
    }
    goto LABEL_80;
  }
LABEL_79:
  uint64_t v44 = sub_1374EEC(*(void *)(a1 + 144));
  v21 += v44 + ((9 * (__clz(v44 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x10) == 0)
  {
LABEL_30:
    if ((v27 & 0x20) == 0) {
      goto LABEL_31;
    }
LABEL_81:
    uint64_t v46 = sub_1374EEC(*(void *)(a1 + 160));
    v21 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v27 & 0x40) == 0)
    {
LABEL_32:
      if ((v27 & 0x80) == 0) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }
    goto LABEL_82;
  }
LABEL_80:
  uint64_t v45 = sub_1374EEC(*(void *)(a1 + 152));
  v21 += v45 + ((9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x20) != 0) {
    goto LABEL_81;
  }
LABEL_31:
  if ((v27 & 0x40) == 0) {
    goto LABEL_32;
  }
LABEL_82:
  uint64_t v47 = sub_1374EEC(*(void *)(a1 + 168));
  v21 += v47 + ((9 * (__clz(v47 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x80) != 0)
  {
LABEL_33:
    uint64_t v28 = sub_13B3A94(*(void *)(a1 + 176));
    v21 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_34:
  if ((v27 & 0xFF00) == 0) {
    goto LABEL_47;
  }
  if ((v27 & 0x100) != 0)
  {
    uint64_t v48 = sub_13B3A94(*(void *)(a1 + 184));
    v21 += v48 + ((9 * (__clz(v48 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v27 & 0x200) == 0)
    {
LABEL_37:
      if ((v27 & 0x400) == 0) {
        goto LABEL_38;
      }
      goto LABEL_86;
    }
  }
  else if ((v27 & 0x200) == 0)
  {
    goto LABEL_37;
  }
  uint64_t v49 = sub_13D3304(*(void *)(a1 + 192));
  v21 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x400) == 0)
  {
LABEL_38:
    if ((v27 & 0x800) == 0) {
      goto LABEL_39;
    }
    goto LABEL_87;
  }
LABEL_86:
  uint64_t v50 = sub_13B2B40(*(void *)(a1 + 200));
  v21 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x800) == 0)
  {
LABEL_39:
    if ((v27 & 0x1000) == 0) {
      goto LABEL_40;
    }
    goto LABEL_88;
  }
LABEL_87:
  v21 += ((9 * (__clz(*(_DWORD *)(a1 + 208) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x1000) == 0)
  {
LABEL_40:
    if ((v27 & 0x2000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_89;
  }
LABEL_88:
  v21 += ((9 * (__clz(*(_DWORD *)(a1 + 212) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x2000) == 0)
  {
LABEL_41:
    if ((v27 & 0x4000) == 0) {
      goto LABEL_42;
    }
LABEL_90:
    v21 += ((9 * (__clz(*(_DWORD *)(a1 + 220) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v27 & 0x8000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_43;
  }
LABEL_89:
  v21 += ((9 * (__clz(*(_DWORD *)(a1 + 216) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x4000) != 0) {
    goto LABEL_90;
  }
LABEL_42:
  if ((v27 & 0x8000) == 0) {
    goto LABEL_47;
  }
LABEL_43:
  int v29 = *(_DWORD *)(a1 + 224);
  uint64_t v30 = ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v29 >= 0) {
    uint64_t v31 = v30;
  }
  else {
    uint64_t v31 = 11;
  }
  v21 += v31;
LABEL_47:
  if ((v27 & 0xFF0000) == 0) {
    goto LABEL_58;
  }
  if ((v27 & 0x10000) != 0)
  {
    int v51 = *(_DWORD *)(a1 + 228);
    uint64_t v52 = ((9 * (__clz(v51 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v51 >= 0) {
      uint64_t v53 = v52;
    }
    else {
      uint64_t v53 = 11;
    }
    v21 += v53;
    if ((v27 & 0x20000) == 0)
    {
LABEL_50:
      if ((v27 & 0x40000) == 0) {
        goto LABEL_51;
      }
      goto LABEL_97;
    }
  }
  else if ((v27 & 0x20000) == 0)
  {
    goto LABEL_50;
  }
  v21 += ((9 * (__clz(*(_DWORD *)(a1 + 232) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v27 & 0x40000) == 0)
  {
LABEL_51:
    if ((v27 & 0x80000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_101;
  }
LABEL_97:
  int v54 = *(_DWORD *)(a1 + 236);
  uint64_t v55 = ((9 * (__clz(v54 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v54 >= 0) {
    uint64_t v56 = v55;
  }
  else {
    uint64_t v56 = 12;
  }
  v21 += v56;
  if ((v27 & 0x80000) == 0)
  {
LABEL_52:
    if ((v27 & 0x100000) == 0) {
      goto LABEL_53;
    }
    goto LABEL_102;
  }
LABEL_101:
  v21 += ((9 * (__clz(*(_DWORD *)(a1 + 240) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x100000) == 0)
  {
LABEL_53:
    if ((v27 & 0x200000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_103;
  }
LABEL_102:
  v21 += ((9 * (__clz(*(_DWORD *)(a1 + 244) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x200000) == 0)
  {
LABEL_54:
    if ((v27 & 0x400000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_55;
  }
LABEL_103:
  v21 += ((9 * (__clz(*(_DWORD *)(a1 + 248) | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v27 & 0x400000) != 0) {
LABEL_55:
  }
    v21 += ((9 * (__clz(*(_DWORD *)(a1 + 252) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_56:
  if ((v27 & 0x800000) != 0) {
    v21 += 3;
  }
LABEL_58:
  if ((v27 & 0xF000000) != 0)
  {
    if ((v27 & 0x1000000) != 0) {
      v21 += ((9 * (__clz(*(_DWORD *)(a1 + 260) | 1) ^ 0x1F) + 73) >> 6) + 2;
    }
    uint64_t v32 = v21 + 2;
    if ((v27 & 0x2000000) == 0) {
      uint64_t v32 = v21;
    }
    if ((v27 & 0x4000000) != 0) {
      v32 += 3;
    }
    if ((v27 & 0x8000000) != 0) {
      uint64_t v21 = v32 + 3;
    }
    else {
      uint64_t v21 = v32;
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if (v33)
  {
    unint64_t v57 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v57 + 31) < 0) {
      uint64_t v58 = *(void *)(v57 + 16);
    }
    else {
      uint64_t v58 = *(unsigned __int8 *)(v57 + 31);
    }
    v21 += v58;
  }
  *(_DWORD *)(a1 + 20) = v21;
  return v21;
}

void sub_13B6E44(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(a1 + 24, v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    int64_t v10 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 80);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 88) + 8);
    int64_t v16 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v16, v15, v14, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v17 = *(_DWORD *)(a1 + 80) + v14;
    *(_DWORD *)(a1 + 80) = v17;
    uint64_t v18 = *(int **)(a1 + 88);
    if (*v18 < v17) {
      *uint64_t v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 104);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_148E164((uint64_t *)(a1 + 96), v21, v20, v19, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v22 = *(_DWORD *)(a1 + 104) + v19;
    *(_DWORD *)(a1 + 104) = v22;
    uint64_t v23 = *(int **)(a1 + 112);
    if (*v23 < v22) {
      *uint64_t v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 16);
  if (!(_BYTE)v24) {
    goto LABEL_73;
  }
  if (v24)
  {
    uint64_t v25 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v26 = *(void *)(a1 + 8);
    int v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      int v27 = (uint64_t *)*v27;
    }
    sub_1881DF4((std::string **)(a1 + 120), v25, v27);
    if ((v24 & 2) == 0)
    {
LABEL_16:
      if ((v24 & 4) == 0) {
        goto LABEL_27;
      }
      goto LABEL_24;
    }
  }
  else if ((v24 & 2) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v28 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 16) |= 2u;
  uint64_t v29 = *(void *)(a1 + 8);
  uint64_t v30 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
  if (v29) {
    uint64_t v30 = (uint64_t *)*v30;
  }
  sub_1881DF4((std::string **)(a1 + 128), v28, v30);
  if ((v24 & 4) != 0)
  {
LABEL_24:
    uint64_t v31 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v32 = *(void *)(a1 + 8);
    uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
    if (v32) {
      uint64_t v33 = (uint64_t *)*v33;
    }
    sub_1881DF4((std::string **)(a1 + 136), v31, v33);
  }
LABEL_27:
  if ((v24 & 8) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v34 = *(void *)(a1 + 144);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      uint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        uint64_t v36 = (void *)*v36;
      }
      sub_13D6A1C((uint64_t)v36);
      *(void *)(a1 + 144) = v34;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v37 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v37 = &off_2534750;
    }
    sub_136A7DC(v34, (uint64_t)v37);
    if ((v24 & 0x10) == 0)
    {
LABEL_29:
      if ((v24 & 0x20) == 0) {
        goto LABEL_30;
      }
LABEL_49:
      *(_DWORD *)(a1 + 16) |= 0x20u;
      uint64_t v42 = *(void *)(a1 + 160);
      if (!v42)
      {
        uint64_t v43 = *(void *)(a1 + 8);
        uint64_t v44 = (void *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          uint64_t v44 = (void *)*v44;
        }
        sub_13D6A1C((uint64_t)v44);
        *(void *)(a1 + 160) = v42;
      }
      if (*(void *)(a2 + 160)) {
        uint64_t v45 = *(uint64_t (****)())(a2 + 160);
      }
      else {
        uint64_t v45 = &off_2534750;
      }
      sub_136A7DC(v42, (uint64_t)v45);
      if ((v24 & 0x40) == 0)
      {
LABEL_31:
        if ((v24 & 0x80) == 0) {
          goto LABEL_73;
        }
        goto LABEL_65;
      }
      goto LABEL_57;
    }
  }
  else if ((v24 & 0x10) == 0)
  {
    goto LABEL_29;
  }
  *(_DWORD *)(a1 + 16) |= 0x10u;
  uint64_t v38 = *(void *)(a1 + 152);
  if (!v38)
  {
    uint64_t v39 = *(void *)(a1 + 8);
    uint64_t v40 = (void *)(v39 & 0xFFFFFFFFFFFFFFFCLL);
    if (v39) {
      uint64_t v40 = (void *)*v40;
    }
    sub_13D6A1C((uint64_t)v40);
    *(void *)(a1 + 152) = v38;
  }
  if (*(void *)(a2 + 152)) {
    unint64_t v41 = *(uint64_t (****)())(a2 + 152);
  }
  else {
    unint64_t v41 = &off_2534750;
  }
  sub_136A7DC(v38, (uint64_t)v41);
  if ((v24 & 0x20) != 0) {
    goto LABEL_49;
  }
LABEL_30:
  if ((v24 & 0x40) == 0) {
    goto LABEL_31;
  }
LABEL_57:
  *(_DWORD *)(a1 + 16) |= 0x40u;
  uint64_t v46 = *(void *)(a1 + 168);
  if (!v46)
  {
    uint64_t v47 = *(void *)(a1 + 8);
    uint64_t v48 = (void *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
    if (v47) {
      uint64_t v48 = (void *)*v48;
    }
    sub_13D6A1C((uint64_t)v48);
    *(void *)(a1 + 168) = v46;
  }
  if (*(void *)(a2 + 168)) {
    uint64_t v49 = *(uint64_t (****)())(a2 + 168);
  }
  else {
    uint64_t v49 = &off_2534750;
  }
  sub_136A7DC(v46, (uint64_t)v49);
  if ((v24 & 0x80) != 0)
  {
LABEL_65:
    *(_DWORD *)(a1 + 16) |= 0x80u;
    uint64_t v50 = *(std::string **)(a1 + 176);
    if (!v50)
    {
      uint64_t v51 = *(void *)(a1 + 8);
      uint64_t v52 = (void *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
      if (v51) {
        uint64_t v52 = (void *)*v52;
      }
      uint64_t v50 = (std::string *)sub_13D9288((uint64_t)v52);
      *(void *)(a1 + 176) = v50;
    }
    if (*(void *)(a2 + 176)) {
      uint64_t v53 = *(uint64_t (****)())(a2 + 176);
    }
    else {
      uint64_t v53 = &off_2535DA0;
    }
    sub_13B3B94(v50, (uint64_t)v53);
  }
LABEL_73:
  if ((v24 & 0xFF00) == 0) {
    goto LABEL_84;
  }
  if ((v24 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 0x100u;
    uint64_t v55 = *(std::string **)(a1 + 184);
    if (!v55)
    {
      uint64_t v56 = *(void *)(a1 + 8);
      unint64_t v57 = (void *)(v56 & 0xFFFFFFFFFFFFFFFCLL);
      if (v56) {
        unint64_t v57 = (void *)*v57;
      }
      uint64_t v55 = (std::string *)sub_13D9288((uint64_t)v57);
      *(void *)(a1 + 184) = v55;
    }
    if (*(void *)(a2 + 184)) {
      uint64_t v58 = *(uint64_t (****)())(a2 + 184);
    }
    else {
      uint64_t v58 = &off_2535DA0;
    }
    sub_13B3B94(v55, (uint64_t)v58);
    if ((v24 & 0x200) == 0)
    {
LABEL_76:
      if ((v24 & 0x400) == 0) {
        goto LABEL_77;
      }
      goto LABEL_122;
    }
  }
  else if ((v24 & 0x200) == 0)
  {
    goto LABEL_76;
  }
  *(_DWORD *)(a1 + 16) |= 0x200u;
  uint64_t v59 = *(void *)(a1 + 192);
  if (!v59)
  {
    uint64_t v60 = *(void *)(a1 + 8);
    unint64_t v61 = (void *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      unint64_t v61 = (void *)*v61;
    }
    uint64_t v59 = sub_13DAB08((uint64_t)v61);
    *(void *)(a1 + 192) = v59;
  }
  if (*(void *)(a2 + 192)) {
    unint64_t v62 = *(uint64_t (****)())(a2 + 192);
  }
  else {
    unint64_t v62 = &off_2536850;
  }
  sub_136AA7C(v59, (uint64_t)v62);
  if ((v24 & 0x400) == 0)
  {
LABEL_77:
    if ((v24 & 0x800) == 0) {
      goto LABEL_78;
    }
    goto LABEL_130;
  }
LABEL_122:
  *(_DWORD *)(a1 + 16) |= 0x400u;
  uint64_t v63 = *(void *)(a1 + 200);
  if (!v63)
  {
    uint64_t v64 = *(void *)(a1 + 8);
    unsigned int v65 = (void *)(v64 & 0xFFFFFFFFFFFFFFFCLL);
    if (v64) {
      unsigned int v65 = (void *)*v65;
    }
    uint64_t v63 = sub_13D916C((uint64_t)v65);
    *(void *)(a1 + 200) = v63;
  }
  if (*(void *)(a2 + 200)) {
    unsigned int v66 = *(uint64_t (****)())(a2 + 200);
  }
  else {
    unsigned int v66 = &off_2535D48;
  }
  sub_13B2BF0(v63, (uint64_t)v66);
  if ((v24 & 0x800) == 0)
  {
LABEL_78:
    if ((v24 & 0x1000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_131;
  }
LABEL_130:
  *(_DWORD *)(a1 + 208) = *(_DWORD *)(a2 + 208);
  if ((v24 & 0x1000) == 0)
  {
LABEL_79:
    if ((v24 & 0x2000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_132;
  }
LABEL_131:
  *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
  if ((v24 & 0x2000) == 0)
  {
LABEL_80:
    if ((v24 & 0x4000) == 0) {
      goto LABEL_81;
    }
LABEL_133:
    *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
    if ((v24 & 0x8000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_82;
  }
LABEL_132:
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  if ((v24 & 0x4000) != 0) {
    goto LABEL_133;
  }
LABEL_81:
  if ((v24 & 0x8000) != 0) {
LABEL_82:
  }
    *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
LABEL_83:
  *(_DWORD *)(a1 + 16) |= v24;
LABEL_84:
  if ((v24 & 0xFF0000) == 0) {
    goto LABEL_95;
  }
  if ((v24 & 0x10000) != 0)
  {
    *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
    if ((v24 & 0x20000) == 0)
    {
LABEL_87:
      if ((v24 & 0x40000) == 0) {
        goto LABEL_88;
      }
      goto LABEL_137;
    }
  }
  else if ((v24 & 0x20000) == 0)
  {
    goto LABEL_87;
  }
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  if ((v24 & 0x40000) == 0)
  {
LABEL_88:
    if ((v24 & 0x80000) == 0) {
      goto LABEL_89;
    }
    goto LABEL_138;
  }
LABEL_137:
  *(_DWORD *)(a1 + 236) = *(_DWORD *)(a2 + 236);
  if ((v24 & 0x80000) == 0)
  {
LABEL_89:
    if ((v24 & 0x100000) == 0) {
      goto LABEL_90;
    }
    goto LABEL_139;
  }
LABEL_138:
  *(_DWORD *)(a1 + 240) = *(_DWORD *)(a2 + 240);
  if ((v24 & 0x100000) == 0)
  {
LABEL_90:
    if ((v24 & 0x200000) == 0) {
      goto LABEL_91;
    }
    goto LABEL_140;
  }
LABEL_139:
  *(_DWORD *)(a1 + 244) = *(_DWORD *)(a2 + 244);
  if ((v24 & 0x200000) == 0)
  {
LABEL_91:
    if ((v24 & 0x400000) == 0) {
      goto LABEL_92;
    }
LABEL_141:
    *(_DWORD *)(a1 + 252) = *(_DWORD *)(a2 + 252);
    if ((v24 & 0x800000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_93;
  }
LABEL_140:
  *(_DWORD *)(a1 + 248) = *(_DWORD *)(a2 + 248);
  if ((v24 & 0x400000) != 0) {
    goto LABEL_141;
  }
LABEL_92:
  if ((v24 & 0x800000) != 0) {
LABEL_93:
  }
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
LABEL_94:
  *(_DWORD *)(a1 + 16) |= v24;
LABEL_95:
  if ((v24 & 0xF000000) == 0) {
    goto LABEL_102;
  }
  if ((v24 & 0x1000000) != 0)
  {
    *(_DWORD *)(a1 + 260) = *(_DWORD *)(a2 + 260);
    if ((v24 & 0x2000000) == 0)
    {
LABEL_98:
      if ((v24 & 0x4000000) == 0) {
        goto LABEL_99;
      }
LABEL_145:
      *(unsigned char *)(a1 + 265) = *(unsigned char *)(a2 + 265);
      if ((v24 & 0x8000000) == 0) {
        goto LABEL_101;
      }
      goto LABEL_100;
    }
  }
  else if ((v24 & 0x2000000) == 0)
  {
    goto LABEL_98;
  }
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  if ((v24 & 0x4000000) != 0) {
    goto LABEL_145;
  }
LABEL_99:
  if ((v24 & 0x8000000) != 0) {
LABEL_100:
  }
    *(unsigned char *)(a1 + 266) = *(unsigned char *)(a2 + 266);
LABEL_101:
  *(_DWORD *)(a1 + 16) |= v24;
LABEL_102:
  uint64_t v54 = *(void *)(a2 + 8);
  if (v54)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v54 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13B74A8(uint64_t a1)
{
  if (!sub_13349CC(a1 + 96)) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 8) != 0)
  {
    if (!sub_136ADBC(*(void *)(a1 + 144))) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) != 0)
  {
    if (!sub_136ADBC(*(void *)(a1 + 152))) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x20) != 0)
  {
    if (!sub_136ADBC(*(void *)(a1 + 160))) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x40) != 0)
  {
    if (!sub_136ADBC(*(void *)(a1 + 168))) {
      return 0;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x200) == 0) {
    goto LABEL_17;
  }
  if (!sub_136AE2C(*(void *)(a1 + 192))) {
    return 0;
  }
  int v2 = *(_DWORD *)(a1 + 16);
LABEL_17:
  if ((v2 & 0x400) == 0) {
    return 1;
  }
  uint64_t v5 = *(void *)(a1 + 200);
  uint64_t v6 = *(unsigned int *)(v5 + 24);
  do
  {
    BOOL v3 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_15B0F18(*(void *)(*(void *)(v5 + 32) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v3;
}

void *sub_13B7588@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficBannerText");
}

uint64_t sub_13B7598(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2535F08)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 40);
    if (v7)
    {
      sub_1374224(v7);
      operator delete();
    }
    uint64_t v8 = *(void *)(a1 + 48);
    if (v8)
    {
      sub_1374224(v8);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B76A4(uint64_t a1)
{
  sub_13B7598(a1);

  operator delete();
}

uint64_t sub_13B76DC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t result = sub_1369E6C(*(void *)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = sub_1369E6C(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13B779C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v12 = *(void *)(a1 + 32);
        if (v12) {
          goto LABEL_34;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        sub_13D6A1C((uint64_t)v13);
        uint64_t v12 = v14;
        *(void *)(a1 + 32) = v14;
        goto LABEL_33;
      case 2u:
        if (v9 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v12 = *(void *)(a1 + 40);
        if (v12) {
          goto LABEL_34;
        }
        uint64_t v15 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v15 = (void *)*v15;
        }
        sub_13D6A1C((uint64_t)v15);
        uint64_t v12 = v16;
        *(void *)(a1 + 40) = v16;
        goto LABEL_33;
      case 3u:
        if (v9 != 26) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        int v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
        uint64_t v20 = (uint64_t)sub_188C244(v19, *(char **)v30, (uint64_t)a3);
        goto LABEL_42;
      case 4u:
        if (v9 != 32) {
          goto LABEL_35;
        }
        v5 |= 0x10u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v30 = v28;
          *(unsigned char *)(a1 + 56) = v29 != 0;
          if (!v28) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_27:
          *(void *)uint64_t v30 = v21;
          *(unsigned char *)(a1 + 56) = v22 != 0;
        }
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (v12) {
          goto LABEL_34;
        }
        int v24 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v24 = (void *)*v24;
        }
        sub_13D6A1C((uint64_t)v24);
        uint64_t v12 = v25;
        *(void *)(a1 + 48) = v25;
LABEL_33:
        uint64_t v8 = *(unsigned __int8 **)v30;
LABEL_34:
        uint64_t v20 = sub_13319DC(a3, v12, v8);
        goto LABEL_42;
      default:
LABEL_35:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v30;
          }
          uint64_t v20 = (uint64_t)sub_1885AC0(v9, v27, (char *)v8, a3);
LABEL_42:
          *(void *)uint64_t v30 = v20;
          if (!v20) {
            goto LABEL_50;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)uint64_t v30 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v30;
    }
  }
}

char *sub_13B7A94(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 1) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 56);
  char *v4 = 32;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_23:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v14 = *(void *)(a1 + 48);
    char *v4 = 42;
    unsigned int v15 = *(_DWORD *)(v14 + 20);
    v4[1] = v15;
    if (v15 > 0x7F) {
      uint64_t v16 = sub_188A9CC(v15, v4 + 1);
    }
    else {
      uint64_t v16 = v4 + 2;
    }
    char v4 = sub_1374B08(v14, v16, a3);
  }
LABEL_29:
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_13B7CE4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v8 = sub_1374EEC(*(void *)(a1 + 32));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v11 = sub_1374EEC(*(void *)(a1 + 40));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_12:
    uint64_t v9 = sub_1374EEC(*(void *)(a1 + 48));
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_16:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_13B7E40(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      unint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v10 = *(void *)(a1 + 32);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        *(void *)(a1 + 32) = v10;
      }
      if (*(void *)(a2 + 32)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        uint64_t v13 = &off_2534750;
      }
      sub_136A7DC(v10, (uint64_t)v13);
      if ((v4 & 4) == 0)
      {
LABEL_8:
        if ((v4 & 8) == 0) {
          goto LABEL_9;
        }
        goto LABEL_32;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_8;
    }
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v14 = *(void *)(a1 + 40);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      sub_13D6A1C((uint64_t)v16);
      *(void *)(a1 + 40) = v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_2534750;
    }
    sub_136A7DC(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_9:
      if ((v4 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      goto LABEL_11;
    }
LABEL_32:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v18 = *(void *)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      sub_13D6A1C((uint64_t)v20);
      *(void *)(a1 + 48) = v18;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v21 = &off_2534750;
    }
    sub_136A7DC(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13B7FDC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 32));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13B803C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.MiniCard");
}

uint64_t sub_13B804C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2535F48)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1365CFC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B8110(uint64_t a1)
{
  sub_13B804C(a1);

  operator delete();
}

uint64_t sub_13B8148(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1369E6C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_13B81D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v24 + 2;
      }
    }
    int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v21 = *(void *)(a1 + 48);
    if (!v21)
    {
      uint64_t v22 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v22 = (void *)*v22;
      }
      sub_13D6A1C((uint64_t)v22);
      uint64_t v21 = v23;
      *(void *)(a1 + 48) = v23;
      uint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_13319DC(a3, v21, (unsigned __int8 *)v7);
LABEL_35:
    int v24 = v14;
    if (!v14) {
      return 0;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 == 18)
  {
    uint64_t v15 = v7 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      int v24 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        sub_13D6A1C(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, v20);
        uint64_t v16 = (unsigned __int8 *)v24;
      }
      uint64_t v15 = (char *)sub_13319DC(a3, v19, v16);
      int v24 = v15;
      if (!v15) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v24;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

char *sub_13B83E0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    char *v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v6, v8, a3);
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1374B08(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_13B858C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1374EEC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v8 = sub_1374EEC(*(void *)(a1 + 48));
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13B8670(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1365F80((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v10 = *(void *)(a1 + 48);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_13D6A1C((uint64_t)v12);
      *(void *)(a1 + 48) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 48);
    }
    if (v9) {
      uint64_t v13 = v9;
    }
    else {
      uint64_t v13 = &off_2534750;
    }
    sub_136A7DC(v10, (uint64_t)v13);
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13B8794(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_136ADBC(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13B87F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteIncident.RestrictionInfo.RestrictionDetails");
}

uint64_t sub_13B8808(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2535F80)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_1374224(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_1374224(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_148C6C8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13B8904(uint64_t a1)
{
  sub_13B8808(a1);

  operator delete();
}

uint64_t sub_13B893C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13B8148(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 7) != 0)
  {
    if (v5)
    {
      uint64_t result = sub_1369E6C(*(void *)(v1 + 48));
      if ((v5 & 2) == 0)
      {
LABEL_8:
        if ((v5 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_9;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_8;
    }
    uint64_t result = sub_1369E6C(*(void *)(v1 + 56));
    if ((v5 & 4) != 0) {
LABEL_9:
    }
      uint64_t result = sub_1369E6C(*(void *)(v1 + 64));
  }
LABEL_10:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_13B89F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v27 + 2;
      }
    }
    int v27 = v7;
    switch(v8 >> 3)
    {
      case 3u:
        if (v8 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 48);
        if (v11) {
          goto LABEL_25;
        }
        uint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        uint64_t v11 = v13;
        *(void *)(a1 + 48) = v13;
        goto LABEL_24;
      case 4u:
        if (v8 != 34) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 56);
        if (v11) {
          goto LABEL_25;
        }
        uint64_t v14 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v14 = (void *)*v14;
        }
        sub_13D6A1C((uint64_t)v14);
        uint64_t v11 = v15;
        *(void *)(a1 + 56) = v15;
        goto LABEL_24;
      case 5u:
        if (v8 != 42) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v11 = *(void *)(a1 + 64);
        if (v11) {
          goto LABEL_25;
        }
        unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          unint64_t v16 = (void *)*v16;
        }
        sub_13D6A1C((uint64_t)v16);
        uint64_t v11 = v17;
        *(void *)(a1 + 64) = v17;
LABEL_24:
        char v7 = v27;
LABEL_25:
        uint64_t v18 = (char *)sub_13319DC(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_43;
      case 6u:
        if (v8 != 50) {
          goto LABEL_36;
        }
        uint64_t v19 = v7 - 1;
        while (1)
        {
          uint64_t v20 = (unsigned __int8 *)(v19 + 1);
          int v27 = v19 + 1;
          uint64_t v21 = *(_DWORD **)(a1 + 40);
          if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
          {
            *(_DWORD *)(a1 + 32) = v22 + 1;
            uint64_t v23 = *(void *)&v21[2 * v22 + 2];
          }
          else
          {
            int v24 = sub_13D94CC(*(void *)(a1 + 24));
            uint64_t v23 = sub_188CDC8(a1 + 24, (uint64_t)v24);
            uint64_t v20 = (unsigned __int8 *)v27;
          }
          uint64_t v19 = sub_13B8CB8(a3, v23, v20);
          int v27 = v19;
          if (!v19) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v19 || *v19 != 50) {
            goto LABEL_44;
          }
        }
      default:
LABEL_36:
        if (v8) {
          BOOL v25 = (v8 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v6)
          {
            BOOL v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            BOOL v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v27;
          }
          uint64_t v18 = (char *)sub_1885AC0(v8, v26, v7, a3);
LABEL_43:
          int v27 = v18;
          if (!v18) {
            return 0;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
            return v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v27;
    }
  }
}

char *sub_13B8CB8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B81D8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13B8D48(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    char *v4 = 26;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  char *v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_1374B08(v10, v12, a3);
  if ((v6 & 4) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 64);
    char *v4 = 42;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v13, v15, a3);
  }
LABEL_23:
  int v16 = *(_DWORD *)(a1 + 32);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      char *v4 = 50;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      uint64_t v4 = sub_13B83E0(v18, (unint64_t)v20, a3);
    }
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    int v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    int v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_13B8FC8(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13B858C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v12 = sub_1374EEC(*(void *)(a1 + 48));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v13 = sub_1374EEC(*(void *)(a1 + 56));
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_13:
      uint64_t v9 = sub_1374EEC(*(void *)(a1 + 64));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v2 += v15;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13B9120(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E1E0((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        sub_13D6A1C((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v13 = &off_2534750;
      }
      sub_136A7DC(v10, (uint64_t)v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_33;
        }
        goto LABEL_25;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 56);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        int v16 = (void *)*v16;
      }
      sub_13D6A1C((uint64_t)v16);
      *(void *)(a1 + 56) = v14;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v17 = &off_2534750;
    }
    sub_136A7DC(v14, (uint64_t)v17);
    if ((v9 & 4) != 0)
    {
LABEL_25:
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v18 = *(void *)(a1 + 64);
      if (!v18)
      {
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v20 = (void *)*v20;
        }
        sub_13D6A1C((uint64_t)v20);
        *(void *)(a1 + 64) = v18;
      }
      if (*(void *)(a2 + 64)) {
        uint64_t v21 = *(uint64_t (****)())(a2 + 64);
      }
      else {
        uint64_t v21 = &off_2534750;
      }
      sub_136A7DC(v18, (uint64_t)v21);
    }
  }
LABEL_33:
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13B92DC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_13B8794(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t result = sub_136ADBC(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13B9368@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteIncident.RestrictionInfo");
}

uint64_t sub_13B9378(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24AF788;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(void *)(a1 + 88) = &qword_2550250;
  *(void *)(a1 + 96) = &qword_2550250;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(void *)(a1 + 168) = 0;
  *(_DWORD *)(a1 + 176) = 1;
  *(unsigned char *)(a1 + 180) = 1;
  return a1;
}

void sub_13B941C(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13B944C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13B94E0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DE8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13B94E0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  uint64_t result = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2535FC8)
  {
    if (*(void *)(a1 + 104))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 112);
    if (v5)
    {
      sub_13B8808(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 120);
    if (result)
    {
      sub_13D2774((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_13B95E0(void *a1)
{
  sub_13B944C(a1);

  operator delete();
}

uint64_t sub_13B9618(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_22;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_26:
    unint64_t v8 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_30;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_30;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_34:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 104));
    if ((v3 & 0x20) == 0)
    {
LABEL_8:
      if ((v3 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_35;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_22:
  unint64_t v7 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_26;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_26;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_30:
  unint64_t v9 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_34;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_34;
    }
  }
LABEL_7:
  if ((v3 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_35:
  uint64_t result = sub_13B893C(*(void *)(a1 + 112));
  if ((v3 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = sub_1369F48(*(void *)(a1 + 120));
LABEL_10:
  *(void *)(a1 + 128) = 0;
  if ((v3 & 0xFF00) != 0)
  {
    *(void *)(a1 + 168) = 0;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
  }
  if ((v3 & 0x30000) != 0)
  {
    *(_DWORD *)(a1 + 176) = 1;
    *(unsigned char *)(a1 + 180) = 1;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_13B97B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v80 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  unint64_t v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    unint64_t v9 = (unsigned __int8 *)(*(void *)v80 + 1);
    unsigned int v10 = **(unsigned char **)v80;
    if ((char)**(unsigned char **)v80 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unint64_t v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v80, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unint64_t v9 = (unsigned __int8 *)(*(void *)v80 + 2);
      }
    }
    *(void *)uint64_t v80 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v13 = *(void *)(a1 + 104);
        if (!v13)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v13 = sub_15C1918((uint64_t)v14);
          *(void *)(a1 + 104) = v13;
          unint64_t v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v15 = (uint64_t)sub_1198F14(a3, v13, v9);
        goto LABEL_118;
      case 2u:
        if (v10 != 18) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 72);
        goto LABEL_38;
      case 3u:
        if (v10 != 26) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 80);
        goto LABEL_38;
      case 4u:
        if (v10 != 32) {
          goto LABEL_109;
        }
        uint64_t v20 = (char *)(v9 + 1);
        unint64_t v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)uint64_t v80 = sub_188C138((uint64_t)v9, (v23 - 128));
          if (!*(void *)v80) {
            goto LABEL_153;
          }
          unint64_t v21 = v65;
        }
        else
        {
          uint64_t v20 = (char *)(v9 + 2);
LABEL_27:
          *(void *)uint64_t v80 = v20;
        }
        if (sub_1369B14(v21))
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 136) = v21;
          goto LABEL_119;
        }
        if (*v7) {
          uint64_t v78 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v78 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v79 = 4;
        goto LABEL_146;
      case 5u:
        if (v10 != 42) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 88);
        goto LABEL_38;
      case 6u:
        if (v10 != 50) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v25 = *(void *)(a1 + 8);
        uint64_t v17 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
        if (v25) {
          uint64_t v17 = (uint64_t *)*v17;
        }
        uint64_t v18 = (void *)(a1 + 96);
LABEL_38:
        uint64_t v26 = (std::string *)sub_1880F84(v18, v17);
        uint64_t v15 = (uint64_t)sub_188C244(v26, *(char **)v80, (uint64_t)a3);
        goto LABEL_118;
      case 7u:
        if (v10 != 57) {
          goto LABEL_109;
        }
        uint64_t v28 = *(void *)v9;
        int v27 = v9 + 8;
        v5 |= 0x80u;
        *(void *)(a1 + 128) = v28;
        goto LABEL_45;
      case 8u:
        if (v10 != 65) {
          goto LABEL_109;
        }
        uint64_t v29 = *(void *)v9;
        int v27 = v9 + 8;
        v5 |= 0x400u;
        *(void *)(a1 + 144) = v29;
        goto LABEL_45;
      case 9u:
        if (v10 != 73) {
          goto LABEL_109;
        }
        uint64_t v30 = *(void *)v9;
        int v27 = v9 + 8;
        v5 |= 0x800u;
        *(void *)(a1 + 152) = v30;
LABEL_45:
        *(void *)uint64_t v80 = v27;
        goto LABEL_119;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_109;
        }
        uint64_t v31 = (char *)(v9 + 1);
        unint64_t v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v32 = *v31;
        int v33 = v21 + (v32 << 7);
        unint64_t v21 = (v33 - 128);
        if (v32 < 0)
        {
          *(void *)uint64_t v80 = sub_188C138((uint64_t)v9, (v33 - 128));
          if (!*(void *)v80) {
            goto LABEL_153;
          }
          unint64_t v21 = v66;
        }
        else
        {
          uint64_t v31 = (char *)(v9 + 2);
LABEL_50:
          *(void *)uint64_t v80 = v31;
        }
        if ((v21 - 1) <= 8)
        {
          *(_DWORD *)(a1 + 40) |= 0x10000u;
          *(_DWORD *)(a1 + 176) = v21;
          goto LABEL_119;
        }
        if (*v7) {
          uint64_t v78 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v78 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v79 = 10;
        goto LABEL_146;
      case 0xBu:
        if (v10 != 88) {
          goto LABEL_109;
        }
        v5 |= 0x200u;
        uint64_t v34 = (char *)(v9 + 1);
        int v35 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v36 = *v34;
        int v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v67 = sub_188C0D0((uint64_t)v9, v35);
          *(void *)uint64_t v80 = v67;
          *(_DWORD *)(a1 + 140) = v68;
          if (!v67) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v34 = (char *)(v9 + 2);
LABEL_57:
          *(void *)uint64_t v80 = v34;
          *(_DWORD *)(a1 + 140) = v35;
        }
        goto LABEL_119;
      case 0xCu:
        if (v10 != 96) {
          goto LABEL_109;
        }
        v5 |= 0x1000u;
        uint64_t v37 = (char *)(v9 + 1);
        uint64_t v38 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_62;
        }
        int v39 = *v37;
        uint64_t v38 = v38 + (v39 << 7) - 128;
        if (v39 < 0)
        {
          uint64_t v69 = sub_188C138((uint64_t)v9, v38);
          *(void *)uint64_t v80 = v69;
          *(unsigned char *)(a1 + 160) = v70 != 0;
          if (!v69) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v37 = (char *)(v9 + 2);
LABEL_62:
          *(void *)uint64_t v80 = v37;
          *(unsigned char *)(a1 + 160) = v38 != 0;
        }
        goto LABEL_119;
      case 0xDu:
        if (v10 != 104) {
          goto LABEL_109;
        }
        uint64_t v40 = (char *)(v9 + 1);
        unint64_t v21 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_67;
        }
        int v41 = *v40;
        int v42 = v21 + (v41 << 7);
        unint64_t v21 = (v42 - 128);
        if (v41 < 0)
        {
          *(void *)uint64_t v80 = sub_188C138((uint64_t)v9, (v42 - 128));
          if (!*(void *)v80) {
            goto LABEL_153;
          }
          unint64_t v21 = v71;
        }
        else
        {
          uint64_t v40 = (char *)(v9 + 2);
LABEL_67:
          *(void *)uint64_t v80 = v40;
        }
        if (v21 > 5)
        {
          if (*v7) {
            uint64_t v78 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v78 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v79 = 13;
LABEL_146:
          sub_188C020(v79, v21, v78);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x2000u;
          *(_DWORD *)(a1 + 164) = v21;
        }
        goto LABEL_119;
      case 0xEu:
        if (v10 != 114) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v43 = *(void *)(a1 + 112);
        if (!v43)
        {
          uint64_t v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v44 = (void *)*v44;
          }
          uint64_t v43 = sub_13D9568((uint64_t)v44);
          *(void *)(a1 + 112) = v43;
          unint64_t v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v15 = (uint64_t)sub_13BA074(a3, v43, v9);
        goto LABEL_118;
      case 0xFu:
        if (v10 != 120) {
          goto LABEL_109;
        }
        v5 |= 0x4000u;
        uint64_t v45 = (char *)(v9 + 1);
        int v46 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_80;
        }
        int v47 = *v45;
        int v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v72 = sub_188C0D0((uint64_t)v9, v46);
          *(void *)uint64_t v80 = v72;
          *(_DWORD *)(a1 + 168) = v73;
          if (!v72) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v45 = (char *)(v9 + 2);
LABEL_80:
          *(void *)uint64_t v80 = v45;
          *(_DWORD *)(a1 + 168) = v46;
        }
        goto LABEL_119;
      case 0x10u:
        if (v10 != 128) {
          goto LABEL_109;
        }
        v5 |= 0x20000u;
        uint64_t v48 = (char *)(v9 + 1);
        uint64_t v49 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_85;
        }
        int v50 = *v48;
        uint64_t v49 = v49 + (v50 << 7) - 128;
        if (v50 < 0)
        {
          uint64_t v74 = sub_188C138((uint64_t)v9, v49);
          *(void *)uint64_t v80 = v74;
          *(unsigned char *)(a1 + 180) = v75 != 0;
          if (!v74) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v48 = (char *)(v9 + 2);
LABEL_85:
          *(void *)uint64_t v80 = v48;
          *(unsigned char *)(a1 + 180) = v49 != 0;
        }
        goto LABEL_119;
      case 0x11u:
        if (v10 != 138) {
          goto LABEL_109;
        }
        uint64_t v51 = (const std::string::value_type *)(v9 - 2);
        while (1)
        {
          uint64_t v52 = (char *)(v51 + 2);
          *(void *)uint64_t v80 = v51 + 2;
          uint64_t v53 = *(_DWORD **)(a1 + 64);
          if (v53 && (uint64_t v54 = *(int *)(a1 + 56), (int)v54 < *v53))
          {
            *(_DWORD *)(a1 + 56) = v54 + 1;
            uint64_t v55 = *(std::string **)&v53[2 * v54 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *unint64_t v57 = v56;
            v57[1] = sub_3A6EDC;
            void *v56 = 0;
            v56[1] = 0;
            v56[2] = 0;
            uint64_t v55 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v56);
            uint64_t v52 = *(char **)v80;
          }
          uint64_t v51 = sub_188C244(v55, v52, (uint64_t)a3);
          *(void *)uint64_t v80 = v51;
          if (!v51) {
            goto LABEL_153;
          }
          if (*(void *)a3 <= (unint64_t)v51 || *(_WORD *)v51 != 394) {
            goto LABEL_119;
          }
        }
      case 0x12u:
        if (v10 != 144) {
          goto LABEL_109;
        }
        v5 |= 0x8000u;
        uint64_t v58 = (char *)(v9 + 1);
        int v59 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_102;
        }
        int v60 = *v58;
        int v59 = v59 + (v60 << 7) - 128;
        if (v60 < 0)
        {
          uint64_t v76 = sub_188C0D0((uint64_t)v9, v59);
          *(void *)uint64_t v80 = v76;
          *(_DWORD *)(a1 + 172) = v77;
          if (!v76) {
            goto LABEL_153;
          }
        }
        else
        {
          uint64_t v58 = (char *)(v9 + 2);
LABEL_102:
          *(void *)uint64_t v80 = v58;
          *(_DWORD *)(a1 + 172) = v59;
        }
        goto LABEL_119;
      case 0x13u:
        if (v10 != 154) {
          goto LABEL_109;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v61 = *(void *)(a1 + 120);
        if (!v61)
        {
          unint64_t v62 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v62 = (void *)*v62;
          }
          uint64_t v61 = sub_13DAB08((uint64_t)v62);
          *(void *)(a1 + 120) = v61;
          unint64_t v9 = *(unsigned __int8 **)v80;
        }
        uint64_t v15 = sub_1323390(a3, v61, v9);
        goto LABEL_118;
      default:
LABEL_109:
        if (v10) {
          BOOL v63 = (v10 & 7) == 4;
        }
        else {
          BOOL v63 = 1;
        }
        if (!v63)
        {
          if (v10 - 8000 > 0x647)
          {
            if (*v7)
            {
              uint64_t v64 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v64 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v9 = *(unsigned __int8 **)v80;
            }
            uint64_t v15 = (uint64_t)sub_1885AC0(v10, v64, (char *)v9, a3);
          }
          else
          {
            uint64_t v15 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_2535FC8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_118:
          *(void *)uint64_t v80 = v15;
          if (!v15) {
            goto LABEL_153;
          }
LABEL_119:
          if (sub_11947B8((uint64_t)a3, (char **)v80, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_153:
        }
          *(void *)uint64_t v80 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v80;
    }
  }
}

char *sub_13BA074(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B89F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13BA104(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 104);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unint64_t v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unint64_t v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 0x100) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x100) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 136);
  char *v4 = 32;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_20:
  if ((v6 & 4) != 0)
  {
    uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 8) == 0)
    {
LABEL_22:
      if ((v6 & 0x80) == 0) {
        goto LABEL_23;
      }
      goto LABEL_29;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_22;
  }
  uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_23:
    if ((v6 & 0x400) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 128);
  char *v4 = 57;
  *(void *)(v4 + 1) = v13;
  v4 += 9;
  if ((v6 & 0x400) == 0)
  {
LABEL_24:
    if ((v6 & 0x800) == 0) {
      goto LABEL_25;
    }
    goto LABEL_35;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v14 = *(void *)(a1 + 144);
  char *v4 = 65;
  *(void *)(v4 + 1) = v14;
  v4 += 9;
  if ((v6 & 0x800) == 0)
  {
LABEL_25:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 152);
  char *v4 = 73;
  *(void *)(v4 + 1) = v15;
  v4 += 9;
  if ((v6 & 0x10000) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 176);
    char *v4 = 80;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_44:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v19 = *(_DWORD *)(a1 + 140);
    char *v4 = 88;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unsigned int v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 160);
    char *v4 = 96;
    v4[1] = v22;
    v4 += 2;
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v23 = *(int *)(a1 + 164);
    char *v4 = 104;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 112);
    char *v4 = 114;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    v4[1] = v27;
    if (v27 > 0x7F) {
      uint64_t v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      uint64_t v28 = v4 + 2;
    }
    uint64_t v4 = sub_13B8D48(v26, (unint64_t)v28, a3);
  }
  if ((v6 & 0x4000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v29 = *(_DWORD *)(a1 + 168);
    char *v4 = 120;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unsigned int v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v32 = *(unsigned char *)(a1 + 180);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v32;
    v4 += 3;
  }
  uint64_t v33 = *(unsigned int *)(a1 + 56);
  if ((int)v33 >= 1)
  {
    uint64_t v34 = 0;
    uint64_t v35 = 8 * v33;
    do
    {
      int v36 = *(void **)(*(void *)(a1 + 64) + v34 + 8);
      if (*((char *)v36 + 23) < 0)
      {
        int64_t v37 = v36[1];
        if (v37 > 127) {
          goto LABEL_91;
        }
      }
      else
      {
        int64_t v37 = *((unsigned __int8 *)v36 + 23);
      }
      if ((uint64_t)(*a3 - (void)v4 + 13) >= v37)
      {
        *(_WORD *)uint64_t v4 = 394;
        v4[2] = v37;
        if (*((char *)v36 + 23) < 0) {
          int v36 = (void *)*v36;
        }
        uint64_t v38 = v4 + 3;
        memcpy(v38, v36, v37);
        uint64_t v4 = &v38[v37];
        goto LABEL_89;
      }
LABEL_91:
      uint64_t v4 = (char *)sub_188A868(a3, 17, (uint64_t)v36, v4);
LABEL_89:
      v34 += 8;
    }
    while (v35 != v34);
  }
  if ((v6 & 0x8000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v39 = *(_DWORD *)(a1 + 172);
    *(_WORD *)uint64_t v4 = 400;
    v4[2] = v39;
    if (v39 > 0x7F)
    {
      v4[2] = v39 | 0x80;
      unsigned int v40 = v39 >> 7;
      v4[3] = v39 >> 7;
      v4 += 4;
      if (v39 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v41 = v40 >> 14;
          v40 >>= 7;
          *v4++ = v40;
        }
        while (v41);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v42 = *(void *)(a1 + 120);
    *(_WORD *)uint64_t v4 = 410;
    unsigned int v43 = *(_DWORD *)(v42 + 44);
    v4[2] = v43;
    if (v43 > 0x7F) {
      uint64_t v44 = sub_188A9CC(v43, v4 + 2);
    }
    else {
      uint64_t v44 = v4 + 3;
    }
    uint64_t v4 = sub_13D2F58(v42, v44, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 1201, v4, a3);
  }
  uint64_t v45 = *(void *)(a1 + 8);
  if ((v45 & 1) == 0) {
    return v4;
  }
  unint64_t v47 = v45 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v47 + 31) < 0)
  {
    uint64_t v48 = *(void **)(v47 + 8);
    uint64_t v49 = *(void *)(v47 + 16);
  }
  else
  {
    uint64_t v48 = (void *)(v47 + 8);
    LODWORD(v49) = *(unsigned __int8 *)(v47 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v49)
  {
    uint64_t v50 = (int)v49;
    memcpy(v4, v48, (int)v49);
    v4 += v50;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v48, v49, v4);
}

uint64_t sub_13BA868(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + 2 * v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      unint64_t v13 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v9 & 2) == 0)
      {
LABEL_9:
        if ((v9 & 4) == 0) {
          goto LABEL_10;
        }
        goto LABEL_27;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_9;
    }
    unint64_t v16 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
    uint64_t v18 = *(void *)(v16 + 8);
    if ((v17 & 0x80u) == 0) {
      uint64_t v18 = v17;
    }
    v4 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 4) == 0)
    {
LABEL_10:
      if ((v9 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_30;
    }
LABEL_27:
    unint64_t v19 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v20 = *(unsigned __int8 *)(v19 + 23);
    uint64_t v21 = *(void *)(v19 + 8);
    if ((v20 & 0x80u) == 0) {
      uint64_t v21 = v20;
    }
    v4 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 8) == 0)
    {
LABEL_11:
      if ((v9 & 0x10) == 0) {
        goto LABEL_12;
      }
      goto LABEL_33;
    }
LABEL_30:
    unint64_t v22 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v24 = *(void *)(v22 + 8);
    if ((v23 & 0x80u) == 0) {
      uint64_t v24 = v23;
    }
    v4 += v24 + ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x10) == 0)
    {
LABEL_12:
      if ((v9 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_34;
    }
LABEL_33:
    uint64_t v25 = sub_15B0D90(*(void *)(a1 + 104));
    v4 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x20) == 0)
    {
LABEL_13:
      if ((v9 & 0x40) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
LABEL_34:
    uint64_t v26 = sub_13B8FC8(*(void *)(a1 + 112));
    v4 += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 0x40) == 0)
    {
LABEL_15:
      if ((v9 & 0x80) != 0) {
        v4 += 9;
      }
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v10 = sub_13D3304(*(void *)(a1 + 120));
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 2;
    goto LABEL_15;
  }
LABEL_17:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_51;
  }
  if ((v9 & 0x100) != 0)
  {
    int v11 = *(_DWORD *)(a1 + 136);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v12;
  }
  if ((v9 & 0x200) != 0) {
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 140) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v27 = v4 + 9;
  if ((v9 & 0x400) == 0) {
    uint64_t v27 = v4;
  }
  if ((v9 & 0x800) != 0) {
    v27 += 9;
  }
  if ((v9 & 0x1000) != 0) {
    uint64_t v4 = v27 + 2;
  }
  else {
    uint64_t v4 = v27;
  }
  if ((v9 & 0x2000) != 0)
  {
    int v30 = *(_DWORD *)(a1 + 164);
    uint64_t v31 = ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v30 >= 0) {
      uint64_t v32 = v31;
    }
    else {
      uint64_t v32 = 11;
    }
    v4 += v32;
    if ((v9 & 0x4000) == 0)
    {
LABEL_49:
      if ((v9 & 0x8000) == 0) {
        goto LABEL_51;
      }
      goto LABEL_50;
    }
  }
  else if ((v9 & 0x4000) == 0)
  {
    goto LABEL_49;
  }
  v4 += ((9 * (__clz(*(_DWORD *)(a1 + 168) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 0x8000) != 0) {
LABEL_50:
  }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 172) | 1) ^ 0x1F) + 73) >> 6) + 2;
LABEL_51:
  if ((v9 & 0x30000) != 0)
  {
    if ((v9 & 0x10000) != 0)
    {
      int v28 = *(_DWORD *)(a1 + 176);
      if (v28 < 0) {
        uint64_t v29 = 11;
      }
      else {
        uint64_t v29 = ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v29;
    }
    if ((v9 & 0x20000) != 0) {
      v4 += 3;
    }
  }
  uint64_t v33 = *(void *)(a1 + 8);
  if (v33)
  {
    unint64_t v35 = v33 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v35 + 31) < 0) {
      uint64_t v36 = *(void *)(v35 + 16);
    }
    else {
      uint64_t v36 = *(unsigned __int8 *)(v35 + 31);
    }
    v4 += v36;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_13BAC58(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      int v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_42;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_45;
    }
LABEL_42:
    uint64_t v17 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      unint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 88), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_48;
    }
LABEL_45:
    uint64_t v20 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v21 = *(void *)(a1 + 8);
    unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      unint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 96), v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_56;
    }
LABEL_48:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v23 = *(void *)(a1 + 104);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = sub_15C1918((uint64_t)v25);
      *(void *)(a1 + 104) = v23;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v26 = &off_253F1A0;
    }
    sub_15B0E24(v23, (uint64_t)v26);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_64;
    }
LABEL_56:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v27 = *(void *)(a1 + 112);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_13D9568((uint64_t)v29);
      *(void *)(a1 + 112) = v27;
    }
    if (*(void *)(a2 + 112)) {
      int v30 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      int v30 = &off_2535F80;
    }
    sub_13B9120(v27, (uint64_t)v30);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      goto LABEL_14;
    }
LABEL_64:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    uint64_t v31 = *(void *)(a1 + 120);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = sub_13DAB08((uint64_t)v33);
      *(void *)(a1 + 120) = v31;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v34 = &off_2536850;
    }
    sub_136AA7C(v31, (uint64_t)v34);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0xFF00) == 0) {
    goto LABEL_26;
  }
  if ((v9 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
    if ((v9 & 0x200) == 0)
    {
LABEL_18:
      if ((v9 & 0x400) == 0) {
        goto LABEL_19;
      }
      goto LABEL_75;
    }
  }
  else if ((v9 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  *(_DWORD *)(a1 + 140) = *(_DWORD *)(a2 + 140);
  if ((v9 & 0x400) == 0)
  {
LABEL_19:
    if ((v9 & 0x800) == 0) {
      goto LABEL_20;
    }
    goto LABEL_76;
  }
LABEL_75:
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  if ((v9 & 0x800) == 0)
  {
LABEL_20:
    if ((v9 & 0x1000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_77;
  }
LABEL_76:
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  if ((v9 & 0x1000) == 0)
  {
LABEL_21:
    if ((v9 & 0x2000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_78;
  }
LABEL_77:
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  if ((v9 & 0x2000) == 0)
  {
LABEL_22:
    if ((v9 & 0x4000) == 0) {
      goto LABEL_23;
    }
LABEL_79:
    *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
    if ((v9 & 0x8000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
LABEL_78:
  *(_DWORD *)(a1 + 164) = *(_DWORD *)(a2 + 164);
  if ((v9 & 0x4000) != 0) {
    goto LABEL_79;
  }
LABEL_23:
  if ((v9 & 0x8000) != 0) {
LABEL_24:
  }
    *(_DWORD *)(a1 + 172) = *(_DWORD *)(a2 + 172);
LABEL_25:
  *(_DWORD *)(a1 + 40) |= v9;
LABEL_26:
  if ((v9 & 0x30000) != 0)
  {
    if ((v9 & 0x10000) != 0) {
      *(_DWORD *)(a1 + 176) = *(_DWORD *)(a2 + 176);
    }
    if ((v9 & 0x20000) != 0) {
      *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13BAFEC(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13B9618(a1);
    sub_13BAC58(a1, a2);
  }
}

uint64_t sub_13BB038(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 104));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x20) != 0)
    {
      uint64_t result = sub_13B92DC(*(void *)(a1 + 112));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 120));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_13BB0A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteIncident");
}

uint64_t sub_13BB0B4(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2536080)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_13B944C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13BB16C(uint64_t a1)
{
  sub_13BB0B4(a1);

  operator delete();
}

uint64_t sub_13BB1A4(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_13B9618(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13BB204(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      unint64_t v16 = v8 + 2;
LABEL_24:
      uint64_t v23 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v17);
    uint64_t v23 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_13D9608((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_11AB844(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_13BB3E8(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_13BA104(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13BB580(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_13BA868(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_13BB644(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v5 = *(void *)(a1 + 24);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        uint64_t v5 = sub_13D9608((uint64_t)v7);
        *(void *)(a1 + 24) = v5;
      }
      if (*(void *)(a2 + 24)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unsigned int v8 = &off_2535FC8;
      }
      sub_13BAC58(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13BB714(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_13BB038(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13BB740@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ETARouteIncident");
}

void *sub_13BB750(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_13BB7D4((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_13BB7D4(uint64_t a1)
{
  char v3 = *(uint64_t **)(a1 + 24);
  uint64_t v2 = (void ***)(a1 + 24);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 32);
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_25360A8)
  {
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_13B7598(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 56);
    if (result)
    {
      sub_13B7598((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_13BB8AC(void *a1)
{
  sub_13BB750(a1);

  operator delete();
}

uint64_t sub_13BB8E4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 40));
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
    goto LABEL_25;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_24;
    }
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_25:
  uint64_t result = sub_13B76DC(*(void *)(v1 + 48));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = sub_13B76DC(*(void *)(v1 + 56));
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
  }
  if ((v2 & 0x300) != 0) {
    *(void *)(v1 + 80) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13BB9EC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v46 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = (unsigned __int8 *)(*(void *)v46 + 1);
    unsigned int v9 = **(unsigned char **)v46;
    if ((char)**(unsigned char **)v46 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unsigned int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v46, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = (unsigned __int8 *)(*(void *)v46 + 2);
      }
    }
    *(void *)int v46 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_40;
      case 2u:
        if (v9 != 16) {
          goto LABEL_60;
        }
        unint64_t v15 = (char *)(v8 + 1);
        unint64_t v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          *(void *)int v46 = sub_188C138((uint64_t)v8, (v18 - 128));
          if (!*(void *)v46) {
            goto LABEL_85;
          }
          unint64_t v16 = v38;
        }
        else
        {
          unint64_t v15 = (char *)(v8 + 2);
LABEL_17:
          *(void *)int v46 = v15;
        }
        if (v16 > 6)
        {
          if (*v7) {
            uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v45);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v16;
        }
        goto LABEL_68;
      case 3u:
        if (v9 != 26) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 40);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 40) = v19;
          unsigned int v8 = *(unsigned __int8 **)v46;
        }
        uint64_t v21 = (uint64_t)sub_1198F14(a3, v19, v8);
        goto LABEL_67;
      case 4u:
        if (v9 != 32) {
          goto LABEL_60;
        }
        v5 |= 0x40u;
        int v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v39 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)int v46 = v39;
          *(_DWORD *)(a1 + 68) = v40;
          if (!v39) {
            goto LABEL_85;
          }
        }
        else
        {
          int v22 = (char *)(v8 + 2);
LABEL_30:
          *(void *)int v46 = v22;
          *(_DWORD *)(a1 + 68) = v23;
        }
        goto LABEL_68;
      case 5u:
        if (v9 != 42) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v25 = *(void *)(a1 + 48);
        if (v25) {
          goto LABEL_49;
        }
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v25 = sub_13D9440((uint64_t)v26);
        *(void *)(a1 + 48) = v25;
        goto LABEL_48;
      case 6u:
        if (v9 != 50) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
LABEL_40:
        uint64_t v28 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v21 = (uint64_t)sub_188C244(v28, *(char **)v46, (uint64_t)a3);
        goto LABEL_67;
      case 7u:
        if (v9 != 57) {
          goto LABEL_60;
        }
        v5 |= 0x80u;
        *(void *)(a1 + 72) = *(void *)v8;
        *(void *)int v46 = v8 + 8;
        goto LABEL_68;
      case 8u:
        if (v9 != 66) {
          goto LABEL_60;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v25 = *(void *)(a1 + 56);
        if (v25) {
          goto LABEL_49;
        }
        uint64_t v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v29 = (void *)*v29;
        }
        uint64_t v25 = sub_13D9440((uint64_t)v29);
        *(void *)(a1 + 56) = v25;
LABEL_48:
        unsigned int v8 = *(unsigned __int8 **)v46;
LABEL_49:
        uint64_t v21 = sub_13BBEAC(a3, v25, v8);
        goto LABEL_67;
      case 9u:
        if (v9 != 72) {
          goto LABEL_60;
        }
        v5 |= 0x100u;
        int v30 = (char *)(v8 + 1);
        int v31 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_54;
        }
        int v32 = *v30;
        int v31 = v31 + (v32 << 7) - 128;
        if (v32 < 0)
        {
          uint64_t v41 = sub_188C0D0((uint64_t)v8, v31);
          *(void *)int v46 = v41;
          *(_DWORD *)(a1 + 80) = v42;
          if (!v41) {
            goto LABEL_85;
          }
        }
        else
        {
          int v30 = (char *)(v8 + 2);
LABEL_54:
          *(void *)int v46 = v30;
          *(_DWORD *)(a1 + 80) = v31;
        }
        goto LABEL_68;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_60;
        }
        v5 |= 0x200u;
        uint64_t v33 = (char *)(v8 + 1);
        int v34 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_59;
        }
        int v35 = *v33;
        int v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v43 = sub_188C0D0((uint64_t)v8, v34);
          *(void *)int v46 = v43;
          *(_DWORD *)(a1 + 84) = v44;
          if (!v43) {
            goto LABEL_85;
          }
        }
        else
        {
          uint64_t v33 = (char *)(v8 + 2);
LABEL_59:
          *(void *)int v46 = v33;
          *(_DWORD *)(a1 + 84) = v34;
        }
        goto LABEL_68;
      default:
LABEL_60:
        if (v9) {
          BOOL v36 = (v9 & 7) == 4;
        }
        else {
          BOOL v36 = 1;
        }
        if (!v36)
        {
          if (*v7)
          {
            int64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = *(unsigned __int8 **)v46;
          }
          uint64_t v21 = (uint64_t)sub_1885AC0(v9, v37, (char *)v8, a3);
LABEL_67:
          *(void *)int v46 = v21;
          if (!v21) {
            goto LABEL_85;
          }
LABEL_68:
          if (sub_11947B8((uint64_t)a3, (char **)v46, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_85:
        }
          *(void *)int v46 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v46;
    }
  }
}

uint64_t sub_13BBEAC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13B779C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13BBF3C(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  char v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    char v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 40);
    unsigned char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    unsigned char *v4 = 42;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      int v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      int v18 = v4 + 2;
    }
    char v4 = sub_13B7A94(v16, (unint64_t)v18, a3);
    if ((v6 & 2) == 0)
    {
LABEL_26:
      if ((v6 & 0x80) == 0) {
        goto LABEL_27;
      }
      goto LABEL_37;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_26;
  }
  char v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0)
  {
LABEL_27:
    if ((v6 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_40;
  }
LABEL_37:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 72);
  unsigned char *v4 = 57;
  *(void *)(v4 + 1) = v19;
  v4 += 9;
  if ((v6 & 0x10) == 0)
  {
LABEL_28:
    if ((v6 & 0x100) == 0) {
      goto LABEL_52;
    }
    goto LABEL_46;
  }
LABEL_40:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v20 = *(void *)(a1 + 56);
  unsigned char *v4 = 66;
  unsigned int v21 = *(_DWORD *)(v20 + 20);
  v4[1] = v21;
  if (v21 > 0x7F) {
    int v22 = sub_188A9CC(v21, v4 + 1);
  }
  else {
    int v22 = v4 + 2;
  }
  char v4 = sub_13B7A94(v20, (unint64_t)v22, a3);
  if ((v6 & 0x100) != 0)
  {
LABEL_46:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v23 = *(_DWORD *)(a1 + 80);
    unsigned char *v4 = 72;
    v4[1] = v23;
    if (v23 > 0x7F)
    {
      v4[1] = v23 | 0x80;
      unsigned int v24 = v23 >> 7;
      v4[2] = v23 >> 7;
      v4 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v25 = v24 >> 14;
          v24 >>= 7;
          *v4++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_52:
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v26 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 80;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unsigned int v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    int v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    int v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_13BC39C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_21;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v5 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
  uint64_t v7 = *(void *)(v5 + 8);
  if ((v6 & 0x80u) == 0) {
    uint64_t v7 = v6;
  }
  uint64_t v3 = v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v8 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = sub_15B0D90(*(void *)(a1 + 40));
    v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_30;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v13 = sub_13B7CE4(*(void *)(a1 + 48));
  v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  uint64_t v14 = sub_13B7CE4(*(void *)(a1 + 56));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_31:
  int v15 = *(_DWORD *)(a1 + 64);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v16;
  if ((v2 & 0x40) == 0) {
    goto LABEL_18;
  }
LABEL_17:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_18:
  if ((v2 & 0x80) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
LABEL_21:
  if ((v2 & 0x300) != 0)
  {
    if ((v2 & 0x100) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v2 & 0x200) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v17 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    result += v18;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_13BC5FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      unint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      unint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        unint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_12;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 32), v9, v11);
    if ((v4 & 4) == 0)
    {
LABEL_20:
      if ((v4 & 8) != 0)
      {
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 48);
        if (!v17)
        {
          uint64_t v18 = *(void *)(a1 + 8);
          uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
          if (v18) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v17 = sub_13D9440((uint64_t)v19);
          *(void *)(a1 + 48) = v17;
        }
        if (*(void *)(a2 + 48)) {
          uint64_t v20 = *(uint64_t (****)())(a2 + 48);
        }
        else {
          uint64_t v20 = &off_2535F08;
        }
        sub_13B7E40(v17, (uint64_t)v20);
        if ((v4 & 0x10) == 0)
        {
LABEL_22:
          if ((v4 & 0x20) == 0) {
            goto LABEL_23;
          }
          goto LABEL_53;
        }
      }
      else if ((v4 & 0x10) == 0)
      {
        goto LABEL_22;
      }
      *(_DWORD *)(a1 + 16) |= 0x10u;
      uint64_t v21 = *(void *)(a1 + 56);
      if (!v21)
      {
        uint64_t v22 = *(void *)(a1 + 8);
        unsigned int v23 = (void *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unsigned int v23 = (void *)*v23;
        }
        uint64_t v21 = sub_13D9440((uint64_t)v23);
        *(void *)(a1 + 56) = v21;
      }
      if (*(void *)(a2 + 56)) {
        unsigned int v24 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        unsigned int v24 = &off_2535F08;
      }
      sub_13B7E40(v21, (uint64_t)v24);
      if ((v4 & 0x20) == 0)
      {
LABEL_23:
        if ((v4 & 0x40) == 0) {
          goto LABEL_24;
        }
        goto LABEL_54;
      }
LABEL_53:
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      if ((v4 & 0x40) == 0)
      {
LABEL_24:
        if ((v4 & 0x80) == 0)
        {
LABEL_26:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_27;
        }
LABEL_25:
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        goto LABEL_26;
      }
LABEL_54:
      *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
      if ((v4 & 0x80) == 0) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }
LABEL_12:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v12 = *(void *)(a1 + 40);
    if (!v12)
    {
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v12 = sub_15C1918((uint64_t)v14);
      *(void *)(a1 + 40) = v12;
    }
    if (*(void *)(a2 + 40)) {
      int v15 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      int v15 = &off_253F1A0;
    }
    sub_15B0E24(v12, (uint64_t)v15);
    goto LABEL_20;
  }
LABEL_27:
  if ((v4 & 0x300) != 0)
  {
    if ((v4 & 0x100) != 0) {
      *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    }
    if ((v4 & 0x200) != 0) {
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    }
    *(_DWORD *)(a1 + 16) |= v4;
  }
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13BC828(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_13BB8E4(a1);
    sub_13BC5FC(a1, a2);
  }
}

uint64_t sub_13BC874(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) != 0)
  {
    uint64_t result = sub_13B7FDC(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_13B7FDC(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13BC8D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficCamera");
}

uint64_t sub_13BC8E4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  unint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2536100 && *(void *)(a1 + 32))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13BC9B0(uint64_t a1)
{
  sub_13BC8E4(a1);

  operator delete();
}

unsigned char *sub_13BC9E8(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B09D0(*((void *)result + 4));
  }
LABEL_7:
  if ((v2 & 0xC) != 0) {
    *((void *)v1 + 5) = 0;
  }
  char v5 = v1[8];
  int v4 = v1 + 8;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_13BCA88(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)unint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 24), v13);
        int v15 = (void *)sub_188C244(v14, *(char **)v31, (uint64_t)a3);
        goto LABEL_38;
      case 2u:
        if (v9 != 16) {
          goto LABEL_31;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)unint64_t v31 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v31) {
            goto LABEL_52;
          }
          unint64_t v17 = v27;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_17:
          *(void *)unint64_t v31 = v16;
        }
        if (v17 > 2)
        {
          if (*v7) {
            int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v17, v30);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v17;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 32);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_15C1918((uint64_t)v21);
          *(void *)(a1 + 32) = v20;
          unint64_t v8 = *(unsigned __int8 **)v31;
        }
        int v15 = sub_1198F14(a3, v20, v8);
        goto LABEL_38;
      case 4u:
        if (v9 != 32) {
          goto LABEL_31;
        }
        v5 |= 8u;
        uint64_t v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v28 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)unint64_t v31 = v28;
          *(_DWORD *)(a1 + 44) = v29;
          if (!v28) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_30:
          *(void *)unint64_t v31 = v22;
          *(_DWORD *)(a1 + 44) = v23;
        }
        goto LABEL_39;
      default:
LABEL_31:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            unsigned int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v31;
          }
          int v15 = sub_1885AC0(v9, v26, (char *)v8, a3);
LABEL_38:
          *(void *)unint64_t v31 = v15;
          if (!v15) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)unint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v31;
    }
  }
}

char *sub_13BCD84(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    char *v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    char *v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_15B0C0C(v10, v12, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 44);
    char *v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_13BCFB8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
  if ((v2 & 8) != 0) {
LABEL_12:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v12 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_13BD108(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 24);
      uint64_t v8 = *(void *)(a1 + 8);
      unint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C1918((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_253F1A0;
    }
    sub_15B0E24(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13BD228(unsigned char *a1, uint64_t a2)
{
  if ((unsigned char *)a2 != a1)
  {
    sub_13BC9E8(a1);
    sub_13BD108((uint64_t)a1, a2);
  }
}

uint64_t sub_13BD274(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13BD2A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.TrafficSignal");
}

uint64_t sub_13BD2B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2536130)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_13BE6A4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_148B9C8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13BD388(uint64_t a1)
{
  sub_13BD2B0(a1);

  operator delete();
}

uint64_t sub_13BD3C0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_137E904(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_13BD49C(*(void *)(v1 + 56));
  }
LABEL_11:
  if ((v5 & 0xFC) != 0)
  {
    *(void *)(v1 + 64) = 0;
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 80) = 0;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_13BD49C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_1369F48(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_13B76DC(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0xC) != 0) {
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13BD518(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v63 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v63, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v63 + 1);
    unsigned int v9 = **(unsigned char **)v63;
    if ((char)**(unsigned char **)v63 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v63, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v63 + 2);
      }
    }
    *(void *)BOOL v63 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_66;
        }
        unint64_t v12 = (char *)(v8 + 1);
        unint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)BOOL v63 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v63) {
            goto LABEL_97;
          }
          unint64_t v13 = v49;
        }
        else
        {
          unint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)BOOL v63 = v12;
        }
        if (v13 > 3)
        {
          if (*v7) {
            unint64_t v62 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v62 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v62);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 64) = v13;
        }
        goto LABEL_74;
      case 2u:
        if (v9 != 18) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v17 = (uint64_t *)*v17;
        }
        unint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
        int v19 = (void *)sub_188C244(v18, *(char **)v63, (uint64_t)a3);
        goto LABEL_73;
      case 3u:
        if (v9 != 26) {
          goto LABEL_66;
        }
        uint64_t v20 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          *(void *)BOOL v63 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 40);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 32), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 32) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            sub_13D7104(*(void *)(a1 + 24));
            uint64_t v24 = sub_188CDC8(a1 + 24, v25);
            uint64_t v21 = *(unsigned __int8 **)v63;
          }
          uint64_t v20 = sub_138DEA0(a3, v24, v21);
          *(void *)BOOL v63 = v20;
          if (!v20) {
            goto LABEL_97;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 26) {
            goto LABEL_74;
          }
        }
      case 4u:
        if (v9 != 32) {
          goto LABEL_66;
        }
        v5 |= 8u;
        unsigned int v26 = (char *)(v8 + 1);
        int v27 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_34;
        }
        int v28 = *v26;
        int v27 = v27 + (v28 << 7) - 128;
        if (v28 < 0)
        {
          uint64_t v50 = sub_188C0D0((uint64_t)v8, v27);
          *(void *)BOOL v63 = v50;
          *(_DWORD *)(a1 + 68) = v51;
          if (!v50) {
            goto LABEL_97;
          }
        }
        else
        {
          unsigned int v26 = (char *)(v8 + 2);
LABEL_34:
          *(void *)BOOL v63 = v26;
          *(_DWORD *)(a1 + 68) = v27;
        }
        goto LABEL_74;
      case 5u:
        if (v9 != 40) {
          goto LABEL_66;
        }
        v5 |= 0x10u;
        int v29 = (char *)(v8 + 1);
        int v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_39;
        }
        int v31 = *v29;
        int v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v52 = sub_188C0D0((uint64_t)v8, v30);
          *(void *)BOOL v63 = v52;
          *(_DWORD *)(a1 + 72) = v53;
          if (!v52) {
            goto LABEL_97;
          }
        }
        else
        {
          int v29 = (char *)(v8 + 2);
LABEL_39:
          *(void *)BOOL v63 = v29;
          *(_DWORD *)(a1 + 72) = v30;
        }
        goto LABEL_74;
      case 6u:
        if (v9 != 48) {
          goto LABEL_66;
        }
        v5 |= 0x20u;
        int v32 = (char *)(v8 + 1);
        int v33 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v34 = *v32;
        int v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          uint64_t v54 = sub_188C0D0((uint64_t)v8, v33);
          *(void *)BOOL v63 = v54;
          *(_DWORD *)(a1 + 76) = v55;
          if (!v54) {
            goto LABEL_97;
          }
        }
        else
        {
          int v32 = (char *)(v8 + 2);
LABEL_44:
          *(void *)BOOL v63 = v32;
          *(_DWORD *)(a1 + 76) = v33;
        }
        goto LABEL_74;
      case 7u:
        if (v9 != 58) {
          goto LABEL_66;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v35 = *(void *)(a1 + 56);
        if (!v35)
        {
          BOOL v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v36 = (void *)*v36;
          }
          sub_13D98B0((uint64_t)v36);
          uint64_t v35 = v37;
          *(void *)(a1 + 56) = v37;
          char v8 = *(unsigned __int8 **)v63;
        }
        int v19 = sub_13BDA90(a3, v35, v8);
        goto LABEL_73;
      case 8u:
        if (v9 != 64) {
          goto LABEL_66;
        }
        v5 |= 0x40u;
        unint64_t v38 = (char *)(v8 + 1);
        int v39 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_55;
        }
        int v40 = *v38;
        int v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v56 = sub_188C0D0((uint64_t)v8, v39);
          *(void *)BOOL v63 = v56;
          *(_DWORD *)(a1 + 80) = v57;
          if (!v56) {
            goto LABEL_97;
          }
        }
        else
        {
          unint64_t v38 = (char *)(v8 + 2);
LABEL_55:
          *(void *)BOOL v63 = v38;
          *(_DWORD *)(a1 + 80) = v39;
        }
        goto LABEL_74;
      case 9u:
        if (v9 != 72) {
          goto LABEL_66;
        }
        v5 |= 0x80u;
        uint64_t v41 = (char *)(v8 + 1);
        int v42 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_60;
        }
        int v43 = *v41;
        int v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v58 = sub_188C0D0((uint64_t)v8, v42);
          *(void *)BOOL v63 = v58;
          *(_DWORD *)(a1 + 84) = v59;
          if (!v58) {
            goto LABEL_97;
          }
        }
        else
        {
          uint64_t v41 = (char *)(v8 + 2);
LABEL_60:
          *(void *)BOOL v63 = v41;
          *(_DWORD *)(a1 + 84) = v42;
        }
        goto LABEL_74;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_66;
        }
        v5 |= 0x100u;
        int v44 = (char *)(v8 + 1);
        int v45 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_65;
        }
        int v46 = *v44;
        int v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v60 = sub_188C0D0((uint64_t)v8, v45);
          *(void *)BOOL v63 = v60;
          *(_DWORD *)(a1 + 88) = v61;
          if (!v60) {
            goto LABEL_97;
          }
        }
        else
        {
          int v44 = (char *)(v8 + 2);
LABEL_65:
          *(void *)BOOL v63 = v44;
          *(_DWORD *)(a1 + 88) = v45;
        }
        goto LABEL_74;
      default:
LABEL_66:
        if (v9) {
          BOOL v47 = (v9 & 7) == 4;
        }
        else {
          BOOL v47 = 1;
        }
        if (!v47)
        {
          if (*v7)
          {
            uint64_t v48 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v48 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(unsigned __int8 **)v63;
          }
          int v19 = sub_1885AC0(v9, v48, (char *)v8, a3);
LABEL_73:
          *(void *)BOOL v63 = v19;
          if (!v19) {
            goto LABEL_97;
          }
LABEL_74:
          if (sub_11947B8((uint64_t)a3, (char **)v63, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_97:
        }
          *(void *)BOOL v63 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v63;
    }
  }
}

char *sub_13BDA90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13BE7AC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13BDB20(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      char v4 = sub_137FB48(v12, (unint64_t)v14, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v15 = *(_DWORD *)(a1 + 68);
    unsigned char *v4 = 32;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unsigned int v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v18 = *(_DWORD *)(a1 + 72);
    unsigned char *v4 = 40;
    v4[1] = v18;
    if (v18 > 0x7F)
    {
      v4[1] = v18 | 0x80;
      unsigned int v19 = v18 >> 7;
      v4[2] = v18 >> 7;
      v4 += 3;
      if (v18 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v20 = v19 >> 14;
          v19 >>= 7;
          *v4++ = v19;
        }
        while (v20);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v21 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 48;
    v4[1] = v21;
    if (v21 > 0x7F)
    {
      v4[1] = v21 | 0x80;
      unsigned int v22 = v21 >> 7;
      v4[2] = v21 >> 7;
      v4 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v23 = v22 >> 14;
          v22 >>= 7;
          *v4++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 56);
    unsigned char *v4 = 58;
    unsigned int v25 = *(_DWORD *)(v24 + 20);
    v4[1] = v25;
    if (v25 > 0x7F) {
      unsigned int v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      unsigned int v26 = v4 + 2;
    }
    char v4 = sub_13BEA30(v24, (unint64_t)v26, a3);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v27 = *(_DWORD *)(a1 + 80);
    unsigned char *v4 = 64;
    v4[1] = v27;
    if (v27 > 0x7F)
    {
      v4[1] = v27 | 0x80;
      unsigned int v28 = v27 >> 7;
      v4[2] = v27 >> 7;
      v4 += 3;
      if (v27 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v29 = v28 >> 14;
          v28 >>= 7;
          *v4++ = v28;
        }
        while (v29);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v30 = *(_DWORD *)(a1 + 84);
    unsigned char *v4 = 72;
    v4[1] = v30;
    if (v30 > 0x7F)
    {
      v4[1] = v30 | 0x80;
      unsigned int v31 = v30 >> 7;
      v4[2] = v30 >> 7;
      v4 += 3;
      if (v30 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v32 = v31 >> 14;
          v31 >>= 7;
          *v4++ = v31;
        }
        while (v32);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v33 = *(_DWORD *)(a1 + 88);
    unsigned char *v4 = 80;
    v4[1] = v33;
    if (v33 > 0x7F)
    {
      v4[1] = v33 | 0x80;
      unsigned int v34 = v33 >> 7;
      v4[2] = v33 >> 7;
      v4 += 3;
      if (v33 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v35 = v34 >> 14;
          v34 >>= 7;
          *v4++ = v34;
        }
        while (v35);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return v4;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    int v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    int v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(v4, v39, (int)v40);
    v4 += v41;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v39, v40, v4);
}

uint64_t sub_13BE050(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1380528(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v8) {
    goto LABEL_19;
  }
  if (v8)
  {
    unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_27;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v14 = sub_13BEC70(*(void *)(a1 + 56));
  v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_27:
  int v15 = *(_DWORD *)(a1 + 64);
  if (v15 < 0) {
    uint64_t v16 = 11;
  }
  else {
    uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v16;
  if ((v8 & 8) == 0)
  {
LABEL_14:
    if ((v8 & 0x10) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_15:
    if ((v8 & 0x20) == 0) {
      goto LABEL_16;
    }
LABEL_33:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0)
    {
LABEL_17:
      if ((v8 & 0x80) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_34;
  }
LABEL_32:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_33;
  }
LABEL_16:
  if ((v8 & 0x40) == 0) {
    goto LABEL_17;
  }
LABEL_34:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x80) != 0) {
LABEL_18:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  if ((v8 & 0x100) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v17 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_13BE2C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148D418((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v12 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v13 = *(void *)(a1 + 8);
      uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (uint64_t *)*v14;
      }
      sub_1881DF4((std::string **)(a1 + 48), v12, v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_32;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 56);
    if (!v15)
    {
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        unint64_t v17 = (void *)*v17;
      }
      sub_13D98B0((uint64_t)v17);
      *(void *)(a1 + 56) = v15;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v18 = &off_2536190;
    }
    sub_13BE4AC(v15, (uint64_t)v18);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
LABEL_32:
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_34;
    }
LABEL_33:
    *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_35;
    }
LABEL_34:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_36;
    }
LABEL_35:
    *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 16) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
      goto LABEL_14;
    }
LABEL_36:
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x100) != 0)
  {
    int v10 = *(_DWORD *)(a2 + 88);
    *(_DWORD *)(a1 + 16) |= 0x100u;
    *(_DWORD *)(a1 + 88) = v10;
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13BE4AC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        int v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          int v8 = (void *)*v8;
        }
        uint64_t v6 = sub_13DAB08((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        int v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        int v9 = &off_2536850;
      }
      sub_136AA7C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_13D9440((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2535F08;
    }
    sub_13B7E40(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
      goto LABEL_7;
    }
LABEL_28:
    *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_13BE5E4(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_1381680(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_13BE648(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_13BE648(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_136AE2C(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_13B7FDC(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13BE694@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.EnrouteNotice");
}

uint64_t sub_13BE6A4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2536190)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_13D2774(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_13B7598(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13BE774(uint64_t a1)
{
  sub_13BE6A4(a1);

  operator delete();
}

char *sub_13BE7AC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v24 + 2;
      }
    }
    uint64_t v24 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_28;
        }
        v5 |= 4u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v24 = v12;
          *(_DWORD *)(a1 + 40) = v13;
          goto LABEL_36;
        }
        unsigned int v22 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v24 = v22;
        *(_DWORD *)(a1 + 40) = v23;
        if (v22) {
          goto LABEL_36;
        }
        goto LABEL_43;
      case 2u:
        if (v9 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_13DAB08((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          int v8 = v24;
        }
        unint64_t v17 = (char *)sub_1323390(a3, v15, (unsigned __int8 *)v8);
        goto LABEL_35;
      case 3u:
        if (v9 != 26) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          unsigned int v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v19 = (void *)*v19;
          }
          uint64_t v18 = sub_13D9440((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          int v8 = v24;
        }
        unint64_t v17 = (char *)sub_13BBEAC(a3, v18, (unsigned __int8 *)v8);
        goto LABEL_35;
      case 4u:
        if (v9 != 37) {
          goto LABEL_28;
        }
        v5 |= 8u;
        *(_DWORD *)(a1 + 44) = *(_DWORD *)v8;
        uint64_t v24 = v8 + 4;
        goto LABEL_36;
      default:
LABEL_28:
        if (v9) {
          BOOL v20 = (v9 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v7)
          {
            unsigned int v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v24;
          }
          unint64_t v17 = (char *)sub_1885AC0(v9, v21, v8, a3);
LABEL_35:
          uint64_t v24 = v17;
          if (!v17) {
            goto LABEL_43;
          }
LABEL_36:
          if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_43:
        }
          uint64_t v24 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v24;
    }
  }
}

unsigned char *sub_13BEA30(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_13D2F58(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 8) == 0) {
        goto LABEL_27;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_13B7A94(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    int v16 = *(_DWORD *)(a1 + 44);
    unsigned char *v4 = 37;
    *(_DWORD *)(v4 + 1) = v16;
    v4 += 5;
  }
LABEL_27:
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    BOOL v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    BOOL v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_13BEC70(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_13D3304(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_13B7CE4(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0) {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 5;
  }
  else {
    uint64_t result = v3;
  }
LABEL_13:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void *sub_13BED78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RouteAnnotation");
}

uint64_t sub_13BED88(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25361C0 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13BEE40(uint64_t a1)
{
  sub_13BED88(a1);

  operator delete();
}

unsigned char *sub_13BEE78(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((_DWORD *)v2 + 6) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13BEED8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v23 + 2;
      }
    }
    int v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    int v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      int v16 = v8 + 2;
LABEL_24:
      int v23 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v17);
    int v23 = v21;
    *(_DWORD *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      BOOL v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        BOOL v20 = (void *)*v20;
      }
      uint64_t v19 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      unint64_t v8 = v23;
    }
    uint64_t v15 = sub_1198F14(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    int v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v23;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  int v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_13BF0BC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 32);
    char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13BF254(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_13BF318(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13BF344@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ArrivalParameters.ArrivalPoint");
}

uint64_t sub_13BF354(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25361E8)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13BF40C(uint64_t a1)
{
  sub_13BF354(a1);

  operator delete();
}

unsigned char *sub_13BF444(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if (v2) {
    uint64_t result = sub_15B16B4(*((unsigned char **)result + 3));
  }
  if ((v2 & 0xE) != 0)
  {
    *((void *)v1 + 4) = 0;
    *((_DWORD *)v1 + 10) = 1;
  }
  char v4 = v1[8];
  char v3 = v1 + 8;
  *((_DWORD *)v3 + 2) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13BF4B4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v33 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unsigned int v8 = v33 + 1;
    unsigned int v9 = *v33;
    if (*v33 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v33 + 2;
      }
    }
    unsigned int v33 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 24);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_15C19EC((uint64_t)v13);
          *(void *)(a1 + 24) = v12;
          unsigned int v8 = v33;
        }
        unsigned int v14 = sub_11E1C60(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 2u:
        if (v9 != 16) {
          goto LABEL_32;
        }
        unint64_t v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_19;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          unsigned int v33 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v33) {
            goto LABEL_55;
          }
          unint64_t v16 = v27;
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_19:
          unsigned int v33 = v15;
        }
        if ((v16 - 1) > 7)
        {
          if (*v7) {
            unsigned int v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v32);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 40) = v16;
        }
        goto LABEL_40;
      case 3u:
        if (v9 != 24) {
          goto LABEL_32;
        }
        v5 |= 2u;
        uint64_t v19 = v8 + 1;
        int v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v21 = *v19;
        int v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unsigned int v28 = (char *)sub_188C0D0((uint64_t)v8, v20);
          unsigned int v33 = v28;
          *(_DWORD *)(a1 + 32) = v29;
          if (!v28) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_26:
          unsigned int v33 = v19;
          *(_DWORD *)(a1 + 32) = v20;
        }
        goto LABEL_40;
      case 4u:
        if (v9 != 32) {
          goto LABEL_32;
        }
        v5 |= 4u;
        int v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          unsigned int v30 = (char *)sub_188C0D0((uint64_t)v8, v23);
          unsigned int v33 = v30;
          *(_DWORD *)(a1 + 36) = v31;
          if (!v30) {
            goto LABEL_55;
          }
        }
        else
        {
          int v22 = v8 + 2;
LABEL_31:
          unsigned int v33 = v22;
          *(_DWORD *)(a1 + 36) = v23;
        }
        goto LABEL_40;
      default:
LABEL_32:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if (*v7)
          {
            unsigned int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unsigned int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unsigned int v8 = v33;
          }
          unsigned int v14 = (char *)sub_1885AC0(v9, v26, v8, a3);
LABEL_39:
          unsigned int v33 = v14;
          if (!v14) {
            goto LABEL_55;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          unsigned int v33 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v33;
    }
  }
}

unsigned char *sub_13BF7C8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 40);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    unsigned char *v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    unsigned char *v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_13BFA58(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B1D1C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0)
  {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v5 = *(_DWORD *)(a1 + 40);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_16:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_13BFB80(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = *(void *)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        unint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          unint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C19EC((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_253F208;
      }
      sub_15B1E3C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 16) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
      goto LABEL_7;
    }
LABEL_21:
    *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_13BFC78(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13BFCA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ArrivalParameters.ArrivalRegion");
}

void *sub_13BFCB4(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148C7C8(a1 + 6);
  sub_148C748(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13BFD40(void *a1)
{
  sub_13BFCB4(a1);

  operator delete();
}

unsigned char *sub_13BFD78(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    char v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      int v4 = *v3++;
      BOOL result = sub_13BEE78(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  uint64_t v5 = *((unsigned int *)v1 + 14);
  if ((int)v5 >= 1)
  {
    uint64_t v6 = (unsigned char **)(*((void *)v1 + 8) + 8);
    do
    {
      uint64_t v7 = *v6++;
      BOOL result = sub_13BF444(v7);
      --v5;
    }
    while (v5);
    *((_DWORD *)v1 + 14) = 0;
  }
  if ((v1[16] & 3) != 0) {
    *((void *)v1 + 9) = 0;
  }
  char v9 = v1[8];
  unint64_t v8 = v1 + 8;
  *((_DWORD *)v8 + 2) = 0;
  if (v9)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

char *sub_13BFE30(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v36 + 1;
    unsigned int v9 = *v36;
    if (*v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v36 + 2;
      }
    }
    uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_39;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v36 = v12;
          *(_DWORD *)(a1 + 72) = v13;
          goto LABEL_46;
        }
        unsigned int v32 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v36 = v32;
        *(_DWORD *)(a1 + 72) = v33;
        if (v32) {
          goto LABEL_46;
        }
        goto LABEL_55;
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        unsigned int v15 = v8 - 1;
        while (1)
        {
          unsigned int v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v36 = v15 + 1;
          unsigned int v17 = *(_DWORD **)(a1 + 40);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 32) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_13D992C(*(void *)(a1 + 24));
            uint64_t v19 = sub_188CDC8(a1 + 24, v20);
            unsigned int v16 = (unsigned __int8 *)v36;
          }
          unsigned int v15 = sub_13C017C(a3, v19, v16);
          uint64_t v36 = v15;
          if (!v15) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_46;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        unint64_t v21 = v8 - 1;
        while (1)
        {
          int v22 = (unsigned __int8 *)(v21 + 1);
          uint64_t v36 = v21 + 1;
          uint64_t v23 = *(_DWORD **)(a1 + 64);
          if (v23 && (uint64_t v24 = *(int *)(a1 + 56), (int)v24 < *v23))
          {
            *(_DWORD *)(a1 + 56) = v24 + 1;
            uint64_t v25 = *(void *)&v23[2 * v24 + 2];
          }
          else
          {
            uint64_t v26 = sub_13D99A8(*(void *)(a1 + 48));
            uint64_t v25 = sub_188CDC8(a1 + 48, v26);
            int v22 = (unsigned __int8 *)v36;
          }
          unint64_t v21 = sub_13C020C(a3, v25, v22);
          uint64_t v36 = v21;
          if (!v21) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v21 || *v21 != 34) {
            goto LABEL_46;
          }
        }
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 2u;
        unint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          unsigned int v34 = (char *)sub_188C0D0((uint64_t)v8, v28);
          uint64_t v36 = v34;
          *(_DWORD *)(a1 + 76) = v35;
          if (!v34) {
            goto LABEL_55;
          }
        }
        else
        {
          unint64_t v27 = v8 + 2;
LABEL_38:
          uint64_t v36 = v27;
          *(_DWORD *)(a1 + 76) = v28;
        }
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = v36;
          }
          uint64_t v36 = (char *)sub_1885AC0(v9, v31, v8, a3);
          if (!v36) {
            goto LABEL_55;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v36;
    }
  }
}

char *sub_13C017C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_13BEED8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13C020C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_13BF4B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13C029C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 72);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      int v4 = sub_13BF0BC(v12, (unint64_t)v14, a3);
    }
  }
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int j = 0; j != v15; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * j + 8);
      unsigned char *v4 = 34;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      int v4 = sub_13BF7C8(v17, (unint64_t)v19, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 76);
    unsigned char *v4 = 40;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_13C0560(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    int v4 = (uint64_t *)(v3 + 8);
  }
  else {
    int v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13BF254(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 56);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 64);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_13BFA58(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 3) != 0)
  {
    if (v15) {
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v15 & 2) != 0) {
      v9 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_13C06BC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E26C((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      *uint64_t v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 56);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    unsigned int v11 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148E2F8((uint64_t *)(a1 + 48), v11, v10, v9, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v12 = *(_DWORD *)(a1 + 56) + v9;
    *(_DWORD *)(a1 + 56) = v12;
    uint64_t v13 = *(int **)(a1 + 64);
    if (*v13 < v12) {
      *uint64_t v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 3) != 0)
  {
    if (v14) {
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    }
    if ((v14 & 2) != 0) {
      *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
    }
    *(_DWORD *)(a1 + 16) |= v14;
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_13C0820(unsigned char *a1, uint64_t a2)
{
  if ((unsigned char *)a2 != a1)
  {
    sub_13BFD78(a1);
    sub_13C06BC((uint64_t)a1, a2);
  }
}

uint64_t sub_13C086C(uint64_t a1)
{
  uint64_t result = sub_11A0A80(a1 + 24);
  if (result)
  {
    return sub_139FD88(a1 + 48);
  }
  return result;
}

void *sub_13C08B8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ArrivalParameters");
}

double sub_13C08C8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24AFC08;
  *(void *)(a1 + 8) = v3;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = xmmword_2142220;
  return result;
}

void *sub_13C0900(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C0974(void *a1)
{
  sub_13C0900(a1);

  operator delete();
}

uint64_t sub_13C09AC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0xFFFFFFFF00000001;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13C09D8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v26 = v16;
      *(_DWORD *)(a1 + 28) = v15;
      goto LABEL_33;
    }
    unsigned int v22 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v26 = v22;
    *(_DWORD *)(a1 + 28) = v23;
    if (!v22) {
      goto LABEL_46;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    unint64_t v18 = v8 + 1;
    unint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v21 = v19 + (v20 << 7);
    unint64_t v19 = (v21 - 128);
    if (v20 < 0)
    {
      uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
      if (!v26) {
        goto LABEL_46;
      }
      unint64_t v19 = v24;
    }
    else
    {
      unint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v26 = v18;
    }
    if ((v19 - 8) >= 0xF && (v19 - 1) > 4)
    {
      if (*v7) {
        unint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v19, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v19;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_46;
    }
    goto LABEL_33;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13C0C18(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C0DBC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13C0E7C(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    int v4 = result;
    sub_13C09AC((uint64_t)result);
    return sub_117EF04(v4, a2);
  }
  return result;
}

uint64_t sub_13C0EC8()
{
  return 1;
}

uint64_t sub_13C0ED0(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 8);
  *(void *)(result + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 16);
  *(_DWORD *)(result + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a2 + 16) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 24);
  *(_DWORD *)(result + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a2 + 24) = v2;
  LODWORD(v2) = *(_DWORD *)(result + 28);
  *(_DWORD *)(result + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a2 + 28) = v2;
  return result;
}

void *sub_13C0F14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.ProblemDetail");
}

uint64_t sub_13C0F24(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24AFC88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_13C1008(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13C103C(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C10F4(uint64_t a1)
{
  sub_13C103C(a1);

  operator delete();
}

uint64_t sub_13C112C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0) {
    *(void *)(a1 + 40) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13C11B4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v30 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    return *(void *)v30;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v30 + 1);
    unsigned int v8 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)BOOL v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_32;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          *(void *)BOOL v30 = sub_188C138((uint64_t)v7, (v14 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v12 = v26;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          *(void *)BOOL v30 = v11;
        }
        if (v12 <= 0xE)
        {
          *(_DWORD *)(a1 + 16) |= 4u;
          *(_DWORD *)(a1 + 40) = v12;
          goto LABEL_40;
        }
        if (*v6) {
          uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v29 = 1;
        goto LABEL_52;
      case 2u:
        if (v8 != 16) {
          goto LABEL_32;
        }
        unint64_t v15 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v16 = *v15;
        int v17 = v12 + (v16 << 7);
        unint64_t v12 = (v17 - 128);
        if (v16 < 0)
        {
          *(void *)BOOL v30 = sub_188C138((uint64_t)v7, (v17 - 128));
          if (!*(void *)v30) {
            return 0;
          }
          unint64_t v12 = v27;
        }
        else
        {
          unint64_t v15 = v7 + 2;
LABEL_20:
          *(void *)BOOL v30 = v15;
        }
        if (v12 > 5)
        {
          if (*v6) {
            uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v29 = 2;
LABEL_52:
          sub_188C020(v29, v12, v28);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v12;
        }
        goto LABEL_40;
      case 3u:
        if (v8 != 26) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 24);
        goto LABEL_31;
      case 4u:
        if (v8 != 34) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 32);
LABEL_31:
        unsigned int v22 = (std::string *)sub_1880F84(v20, v19);
        int v23 = (void *)sub_188C244(v22, *(char **)v30, (uint64_t)a3);
        goto LABEL_39;
      default:
LABEL_32:
        if (v8) {
          BOOL v24 = (v8 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v6)
          {
            unint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(char **)v30;
          }
          int v23 = sub_1885AC0(v8, v25, v7, a3);
LABEL_39:
          *(void *)BOOL v30 = v23;
          if (!v23) {
            return 0;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
            return *(void *)v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v30;
    }
  }
}

unsigned char *sub_13C14C4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    int v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    int v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C16A8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_23;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
  if ((v1 & 8) != 0)
  {
LABEL_19:
    int v11 = *(_DWORD *)(a1 + 44);
    if (v11 < 0) {
      uint64_t v12 = 11;
    }
    else {
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v12;
  }
LABEL_23:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13C17F4()
{
  return 1;
}

void *sub_13C17FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.DirectionsRequestFeedback");
}

uint64_t sub_13C180C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24AFD08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

void sub_13C18F0(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13C1924(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C19DC(uint64_t a1)
{
  sub_13C1924(a1);

  operator delete();
}

uint64_t sub_13C1A14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0) {
    *(void *)(a1 + 40) = 0xFFFFFFFF00000000;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13C1AA0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)unsigned int v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)unsigned int v32 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v32) {
            goto LABEL_55;
          }
          unint64_t v13 = v29;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)unsigned int v32 = v12;
        }
        if (v13 == 2 || v13 == -1)
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v13;
        }
        else
        {
          if (*v7) {
            uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v28);
        }
        goto LABEL_42;
      case 2u:
        if (v9 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 24);
        goto LABEL_28;
      case 3u:
        if (v9 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v20 = *(void *)(a1 + 8);
        uint64_t v18 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
        if (v20) {
          uint64_t v18 = (uint64_t *)*v18;
        }
        unint64_t v19 = (void *)(a1 + 32);
LABEL_28:
        uint64_t v21 = (std::string *)sub_1880F84(v19, v18);
        unsigned int v22 = (void *)sub_188C244(v21, *(char **)v32, (uint64_t)a3);
        goto LABEL_41;
      case 4u:
        if (v9 != 32) {
          goto LABEL_34;
        }
        v5 |= 4u;
        int v23 = v8 + 1;
        int v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v24);
          *(void *)unsigned int v32 = v30;
          *(_DWORD *)(a1 + 40) = v31;
          if (!v30) {
            goto LABEL_55;
          }
        }
        else
        {
          int v23 = v8 + 2;
LABEL_33:
          *(void *)unsigned int v32 = v23;
          *(_DWORD *)(a1 + 40) = v24;
        }
        goto LABEL_42;
      default:
LABEL_34:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            unint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v32;
          }
          unsigned int v22 = sub_1885AC0(v9, v27, v8, a3);
LABEL_41:
          *(void *)unsigned int v32 = v22;
          if (!v22) {
            goto LABEL_55;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          *(void *)unsigned int v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_13C1D90(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 44);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_20;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v10 = *(_DWORD *)(a1 + 40);
  unsigned char *v4 = 32;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unsigned int v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_20:
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C1F80(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_20;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_20;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v9 = *(_DWORD *)(a1 + 44);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v10;
LABEL_20:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13C20C0()
{
  return 1;
}

void *sub_13C20C8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.OriginalRoute");
}

void *sub_13C20D8(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C214C(void *a1)
{
  sub_13C20D8(a1);

  operator delete();
}

uint64_t sub_13C2184(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13C21A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    int v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      int v25 = v15;
      *(void *)(a1 + 32) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v16);
    int v25 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    uint64_t v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    uint64_t v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      int v25 = v18;
      *(void *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    int v23 = (char *)sub_188C138((uint64_t)v8, v19);
    int v25 = v23;
    *(void *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    int v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  int v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_13C2398(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

unint64_t sub_13C253C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    unint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    unint64_t v2 = ((9 * (__clz(*(void *)(a1 + 24) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  unint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13C25DC()
{
  return 1;
}

void *sub_13C25E4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.EVChargingPreference.PreferenceEntity");
}

uint64_t sub_13C25F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25362A0)
  {
    uint64_t v6 = *(void **)(a1 + 24);
    if (v6)
    {
      sub_13C20D8(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C26AC(uint64_t a1)
{
  sub_13C25F4(a1);

  operator delete();
}

uint64_t sub_13C26E4(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_13C2184(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13C2744(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v23 + 2;
      }
    }
    int v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void **)(a1 + 24);
    if (!v19)
    {
      int v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v20 = (void *)*v20;
      }
      uint64_t v19 = sub_13D9C64((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      unint64_t v7 = v23;
    }
    uint64_t v14 = sub_13C2954(a3, (uint64_t)v19, (unsigned __int8 *)v7);
LABEL_32:
    int v23 = v14;
    if (!v14) {
      return 0;
    }
LABEL_33:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 16)
  {
    unint64_t v15 = v7 + 1;
    unint64_t v16 = *v7;
    if (*v7 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        int v23 = (char *)sub_188C138((uint64_t)v7, (v18 - 128));
        if (!v23) {
          return 0;
        }
        unint64_t v16 = v21;
        goto LABEL_25;
      }
      unint64_t v15 = v7 + 2;
    }
    int v23 = v15;
LABEL_25:
    if (v16 > 2)
    {
      if (*v6) {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 32) = v16;
    }
    goto LABEL_33;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v23;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_32;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_13C2954(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C21A8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13C29E4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_13C2398(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 32);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C2B7C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    unint64_t v4 = sub_13C253C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13C2C4C(std::string *result, uint64_t a2)
{
  char v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v7 = (void *)*v7;
        }
        data = (std::string *)sub_13D9C64((uint64_t)v7);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v8 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v8 = &off_2536278;
      }
      uint64_t result = sub_1113E40(data, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      LODWORD(v3[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13C2D1C()
{
  return 1;
}

void *sub_13C2D24@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.EVChargingPreference");
}

uint64_t sub_13C2D34(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24AFE88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    unint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if ((v6 & 8) != 0)
  {
    unint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v10);
  }
  uint64_t v11 = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(void *)(a1 + 56) = v11;
  return a1;
}

void sub_13C2E80(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_13C2EB0(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C2F90(uint64_t a1)
{
  sub_13C2EB0(a1);

  operator delete();
}

uint64_t sub_13C2FC8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_19:
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
      }
      goto LABEL_22;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_22:
  if ((v1 & 0x30) != 0)
  {
    *(_DWORD *)(a1 + 64) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_13C30C4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v32 + 1);
    unsigned int v9 = **(unsigned char **)v32;
    if ((char)**(unsigned char **)v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v32 + 2);
      }
    }
    *(void *)unsigned int v32 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v9 != 18) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v9 != 26) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v9 != 34) {
          goto LABEL_39;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
LABEL_25:
        uint64_t v18 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v19 = (void *)sub_188C244(v18, *(char **)v32, (uint64_t)a3);
        goto LABEL_26;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        int v20 = v8 + 1;
        uint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v22 = *v20;
        uint64_t v21 = v21 + (v22 << 7) - 128;
        if (v22 < 0)
        {
          uint64_t v28 = sub_188C138((uint64_t)v8, v21);
          *(void *)unsigned int v32 = v28;
          *(void *)(a1 + 56) = v29;
          if (!v28) {
            goto LABEL_53;
          }
        }
        else
        {
          int v20 = v8 + 2;
LABEL_33:
          *(void *)unsigned int v32 = v20;
          *(void *)(a1 + 56) = v21;
        }
        goto LABEL_27;
      case 6u:
        if (v9 != 48) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        int v23 = v8 + 1;
        int v24 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v24);
          *(void *)unsigned int v32 = v30;
          *(_DWORD *)(a1 + 64) = v31;
          if (!v30) {
            goto LABEL_53;
          }
        }
        else
        {
          int v23 = v8 + 2;
LABEL_38:
          *(void *)unsigned int v32 = v23;
          *(_DWORD *)(a1 + 64) = v24;
        }
        goto LABEL_27;
      default:
LABEL_39:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            unint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v32;
          }
          uint64_t v19 = sub_1885AC0(v9, v27, v8, a3);
LABEL_26:
          *(void *)unsigned int v32 = v19;
          if (!v19) {
            goto LABEL_53;
          }
LABEL_27:
          if (sub_11947B8((uint64_t)a3, (char **)v32, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)unsigned int v32 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v32;
    }
  }
}

unsigned char *sub_13C33EC(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_11;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0) {
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(void *)(a1 + 56);
  unsigned char *v4 = 40;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_17:
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 64);
    unsigned char *v4 = 48;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C3624(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v11 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0)
    {
LABEL_14:
      if ((v1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_25;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v14 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 0x10) == 0)
  {
LABEL_15:
    if ((v1 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
LABEL_25:
  v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if ((v1 & 0x20) != 0) {
LABEL_16:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_17:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v17 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13C37E4(std::string *result, uint64_t a2)
{
  unint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      unint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unsigned int v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_26:
    v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13C395C()
{
  return 1;
}

void *sub_13C3964@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.VehicleSpecifications.LPRInfo");
}

uint64_t sub_13C3974(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24AFF08;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if ((v6 & 8) != 0)
  {
    unsigned int v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v10);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  long long v11 = *(_OWORD *)(a2 + 64);
  long long v12 = *(_OWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 64) = v11;
  *(_OWORD *)(a1 + 80) = v12;
  return a1;
}

void sub_13C3AF8()
{
}

uint64_t sub_13C3B48(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if ((uint64_t (***)())a1 != &off_2536310)
  {
    int v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_13946E8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C3C58(uint64_t a1)
{
  sub_13C3B48(a1);

  operator delete();
}

uint64_t sub_13C3C90(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_20:
    unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v2 & 4) != 0) {
        goto LABEL_24;
      }
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_20;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_24:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) != 0) {
      goto LABEL_28;
    }
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  unint64_t v8 = *(void *)(result + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v8 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v8 = 0;
    *(unsigned char *)(v8 + 23) = 0;
    if ((v2 & 0x10) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    uint64_t result = sub_13947AC(*(void *)(result + 56));
    goto LABEL_8;
  }
  **(unsigned char **)unint64_t v8 = 0;
  *(void *)(v8 + 8) = 0;
  if ((v2 & 0x10) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if ((v2 & 0xE0) != 0)
  {
    *(_DWORD *)(v1 + 72) = 0;
    *(void *)(v1 + 64) = 0;
  }
  if ((v2 & 0x3F00) != 0)
  {
    *(void *)(v1 + 84) = 0;
    *(void *)(v1 + 76) = 0;
    *(void *)(v1 + 92) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_13C3DEC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v69 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v69, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v69 + 1);
    unsigned int v9 = **(unsigned char **)v69;
    if ((char)**(unsigned char **)v69 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v69, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v69 + 2);
      }
    }
    *(void *)uint64_t v69 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_80;
        }
        v5 |= 0x20u;
        long long v12 = (char *)(v8 + 1);
        int v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          long long v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v69 = v12;
          *(_DWORD *)(a1 + 64) = v13;
          goto LABEL_78;
        }
        uint64_t v51 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)uint64_t v69 = v51;
        *(_DWORD *)(a1 + 64) = v52;
        if (v51) {
          goto LABEL_78;
        }
        goto LABEL_108;
      case 3u:
        if (v9 != 24) {
          goto LABEL_80;
        }
        v5 |= 0x40u;
        uint64_t v15 = (char *)(v8 + 1);
        int v16 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v53 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)uint64_t v69 = v53;
          *(_DWORD *)(a1 + 68) = v54;
          if (!v53) {
            goto LABEL_108;
          }
        }
        else
        {
          uint64_t v15 = (char *)(v8 + 2);
LABEL_18:
          *(void *)uint64_t v69 = v15;
          *(_DWORD *)(a1 + 68) = v16;
        }
        goto LABEL_78;
      case 4u:
        if (v9 != 34) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 24);
        goto LABEL_76;
      case 5u:
        if (v9 != 42) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v21 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 32);
        goto LABEL_76;
      case 6u:
        if (v9 != 48) {
          goto LABEL_80;
        }
        v5 |= 0x80u;
        int v22 = (char *)(v8 + 1);
        int v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v55 = sub_188C0D0((uint64_t)v8, v23);
          *(void *)uint64_t v69 = v55;
          *(_DWORD *)(a1 + 72) = v56;
          if (!v55) {
            goto LABEL_108;
          }
        }
        else
        {
          int v22 = (char *)(v8 + 2);
LABEL_31:
          *(void *)uint64_t v69 = v22;
          *(_DWORD *)(a1 + 72) = v23;
        }
        goto LABEL_78;
      case 7u:
        if (v9 != 56) {
          goto LABEL_80;
        }
        v5 |= 0x100u;
        int v25 = (char *)(v8 + 1);
        int v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v27 = *v25;
        int v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v57 = sub_188C0D0((uint64_t)v8, v26);
          *(void *)uint64_t v69 = v57;
          *(_DWORD *)(a1 + 76) = v58;
          if (!v57) {
            goto LABEL_108;
          }
        }
        else
        {
          int v25 = (char *)(v8 + 2);
LABEL_36:
          *(void *)uint64_t v69 = v25;
          *(_DWORD *)(a1 + 76) = v26;
        }
        goto LABEL_78;
      case 8u:
        if (v9 != 64) {
          goto LABEL_80;
        }
        v5 |= 0x200u;
        uint64_t v28 = (char *)(v8 + 1);
        uint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v59 = sub_188C138((uint64_t)v8, v29);
          *(void *)uint64_t v69 = v59;
          *(unsigned char *)(a1 + 80) = v60 != 0;
          if (!v59) {
            goto LABEL_108;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_41:
          *(void *)uint64_t v69 = v28;
          *(unsigned char *)(a1 + 80) = v29 != 0;
        }
        goto LABEL_78;
      case 9u:
        if (v9 != 72) {
          goto LABEL_80;
        }
        v5 |= 0x400u;
        int v31 = (char *)(v8 + 1);
        int v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v33 = *v31;
        int v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v61 = sub_188C0D0((uint64_t)v8, v32);
          *(void *)uint64_t v69 = v61;
          *(_DWORD *)(a1 + 84) = v62;
          if (!v61) {
            goto LABEL_108;
          }
        }
        else
        {
          int v31 = (char *)(v8 + 2);
LABEL_46:
          *(void *)uint64_t v69 = v31;
          *(_DWORD *)(a1 + 84) = v32;
        }
        goto LABEL_78;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v34 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
        if (v34) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 40);
        goto LABEL_76;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v35 = *(void *)(a1 + 56);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_13D8250((uint64_t)v36);
          *(void *)(a1 + 56) = v35;
          unint64_t v8 = *(unsigned __int8 **)v69;
        }
        uint64_t v37 = sub_1395470(a3, v35, v8);
        goto LABEL_77;
      case 0xCu:
        if (v9 != 96) {
          goto LABEL_80;
        }
        v5 |= 0x800u;
        unint64_t v38 = (char *)(v8 + 1);
        int v39 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        int v40 = *v38;
        int v39 = v39 + (v40 << 7) - 128;
        if (v40 < 0)
        {
          uint64_t v63 = sub_188C0D0((uint64_t)v8, v39);
          *(void *)uint64_t v69 = v63;
          *(_DWORD *)(a1 + 88) = v64;
          if (!v63) {
            goto LABEL_108;
          }
        }
        else
        {
          unint64_t v38 = (char *)(v8 + 2);
LABEL_61:
          *(void *)uint64_t v69 = v38;
          *(_DWORD *)(a1 + 88) = v39;
        }
        goto LABEL_78;
      case 0xDu:
        if (v9 != 104) {
          goto LABEL_80;
        }
        v5 |= 0x1000u;
        uint64_t v41 = (char *)(v8 + 1);
        int v42 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_66;
        }
        int v43 = *v41;
        int v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v65 = sub_188C0D0((uint64_t)v8, v42);
          *(void *)uint64_t v69 = v65;
          *(_DWORD *)(a1 + 92) = v66;
          if (!v65) {
            goto LABEL_108;
          }
        }
        else
        {
          uint64_t v41 = (char *)(v8 + 2);
LABEL_66:
          *(void *)uint64_t v69 = v41;
          *(_DWORD *)(a1 + 92) = v42;
        }
        goto LABEL_78;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_80;
        }
        v5 |= 0x2000u;
        int v44 = (char *)(v8 + 1);
        int v45 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_71;
        }
        int v46 = *v44;
        int v45 = v45 + (v46 << 7) - 128;
        if (v46 < 0)
        {
          uint64_t v67 = sub_188C0D0((uint64_t)v8, v45);
          *(void *)uint64_t v69 = v67;
          *(_DWORD *)(a1 + 96) = v68;
          if (!v67) {
            goto LABEL_108;
          }
        }
        else
        {
          int v44 = (char *)(v8 + 2);
LABEL_71:
          *(void *)uint64_t v69 = v44;
          *(_DWORD *)(a1 + 96) = v45;
        }
        goto LABEL_78;
      case 0xFu:
        if (v9 != 122) {
          goto LABEL_80;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v47 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v47 & 0xFFFFFFFFFFFFFFFCLL);
        if (v47) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        int v20 = (void *)(a1 + 48);
LABEL_76:
        uint64_t v48 = (std::string *)sub_1880F84(v20, v19);
        uint64_t v37 = (void *)sub_188C244(v48, *(char **)v69, (uint64_t)a3);
        goto LABEL_77;
      default:
LABEL_80:
        if (v9) {
          BOOL v49 = (v9 & 7) == 4;
        }
        else {
          BOOL v49 = 1;
        }
        if (!v49)
        {
          if (*v7)
          {
            uint64_t v50 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(unsigned __int8 **)v69;
          }
          uint64_t v37 = sub_1885AC0(v9, v50, (char *)v8, a3);
LABEL_77:
          *(void *)uint64_t v69 = v37;
          if (!v37) {
            goto LABEL_108;
          }
LABEL_78:
          if (sub_11947B8((uint64_t)a3, (char **)v69, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_108:
        }
          *(void *)uint64_t v69 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v69;
    }
  }
}

char *sub_13C441C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 64);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 68);
    char *v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 2) == 0)
    {
LABEL_17:
      if ((v6 & 0x80) == 0) {
        goto LABEL_27;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_17;
  }
  char v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_27;
  }
LABEL_21:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v13 = *(_DWORD *)(a1 + 72);
  char *v4 = 48;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unsigned int v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_27:
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 76);
    char *v4 = 56;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 80);
    char *v4 = 64;
    v4[1] = v19;
    v4 += 2;
  }
  if ((v6 & 0x400) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 84);
    char *v4 = 72;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    char v4 = sub_117A0AC(a3, 10, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
    if ((v6 & 0x10) == 0)
    {
LABEL_47:
      if ((v6 & 0x800) == 0) {
        goto LABEL_62;
      }
      goto LABEL_56;
    }
  }
  else if ((v6 & 0x10) == 0)
  {
    goto LABEL_47;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 56);
  char *v4 = 90;
  unsigned int v24 = *(_DWORD *)(v23 + 64);
  v4[1] = v24;
  if (v24 > 0x7F) {
    int v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    int v25 = v4 + 2;
  }
  char v4 = sub_1394B28(v23, v25, a3);
  if ((v6 & 0x800) != 0)
  {
LABEL_56:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v26 = *(_DWORD *)(a1 + 88);
    char *v4 = 96;
    v4[1] = v26;
    if (v26 > 0x7F)
    {
      v4[1] = v26 | 0x80;
      unsigned int v27 = v26 >> 7;
      v4[2] = v26 >> 7;
      v4 += 3;
      if (v26 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v28 = v27 >> 14;
          v27 >>= 7;
          *v4++ = v27;
        }
        while (v28);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_62:
  if ((v6 & 0x1000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v29 = *(_DWORD *)(a1 + 92);
    char *v4 = 104;
    v4[1] = v29;
    if (v29 > 0x7F)
    {
      v4[1] = v29 | 0x80;
      unsigned int v30 = v29 >> 7;
      v4[2] = v29 >> 7;
      v4 += 3;
      if (v29 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v31 = v30 >> 14;
          v30 >>= 7;
          *v4++ = v30;
        }
        while (v31);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x2000) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v32 = *(_DWORD *)(a1 + 96);
    char *v4 = 112;
    v4[1] = v32;
    if (v32 > 0x7F)
    {
      v4[1] = v32 | 0x80;
      unsigned int v33 = v32 >> 7;
      v4[2] = v32 >> 7;
      v4 += 3;
      if (v32 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v34 = v33 >> 14;
          v33 >>= 7;
          *v4++ = v33;
        }
        while (v34);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0) {
    char v4 = sub_117A0AC(a3, 15, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v35 = *(void *)(a1 + 8);
  if ((v35 & 1) == 0) {
    return v4;
  }
  unint64_t v37 = v35 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v37 + 31) < 0)
  {
    unint64_t v38 = *(void **)(v37 + 8);
    uint64_t v39 = *(void *)(v37 + 16);
  }
  else
  {
    unint64_t v38 = (void *)(v37 + 8);
    LODWORD(v39) = *(unsigned __int8 *)(v37 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v39)
  {
    uint64_t v40 = (int)v39;
    memcpy(v4, v38, (int)v39);
    v4 += v40;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v38, v39, v4);
}

uint64_t sub_13C49E8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_19;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    unint64_t v12 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
    uint64_t v14 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      uint64_t v14 = v13;
    }
    v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  unint64_t v15 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v18 = sub_1394CF0(*(void *)(a1 + 56));
  v3 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 64) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x40) == 0)
  {
LABEL_17:
    if ((v2 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_39:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 68) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x80) != 0) {
LABEL_18:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_19:
  if ((v2 & 0x3F00) == 0) {
    goto LABEL_29;
  }
  if ((v2 & 0x100) != 0) {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 76) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 0x200) != 0) {
    v3 += 2;
  }
  if ((v2 & 0x400) != 0)
  {
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 0x800) == 0)
    {
LABEL_26:
      if ((v2 & 0x1000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_43;
    }
  }
  else if ((v2 & 0x800) == 0)
  {
    goto LABEL_26;
  }
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 88) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x1000) == 0)
  {
LABEL_27:
    if ((v2 & 0x2000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_28;
  }
LABEL_43:
  v3 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x2000) != 0) {
LABEL_28:
  }
    v3 += ((9 * (__clz(*(_DWORD *)(a1 + 96) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_29:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v19 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_13C4D1C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_31:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_45;
    }
LABEL_37:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    unint64_t v19 = (std::string *)v3[2].__r_.__value_.__l.__size_;
    if (!v19)
    {
      std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
      unsigned int v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unsigned int v21 = (void *)*v21;
      }
      unint64_t v19 = (std::string *)sub_13D8250((uint64_t)v21);
      v3[2].__r_.__value_.__l.__size_ = (std::string::size_type)v19;
    }
    if (*(void *)(a2 + 56)) {
      unsigned int v22 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unsigned int v22 = &off_2535228;
    }
    uint64_t result = sub_1394DF0(v19, (uint64_t)v22);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_46;
    }
LABEL_45:
    LODWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 64);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      LODWORD(v3[3].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
LABEL_46:
    HIDWORD(v3[2].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 68);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x3F00) == 0) {
    goto LABEL_21;
  }
  if ((v4 & 0x100) != 0)
  {
    HIDWORD(v3[3].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 76);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_50;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  v3[3].__r_.__value_.__s.__data_[8] = *(unsigned char *)(a2 + 80);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_51;
  }
LABEL_50:
  HIDWORD(v3[3].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 84);
  if ((v4 & 0x800) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
LABEL_52:
    HIDWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_51:
  LODWORD(v3[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_52;
  }
LABEL_18:
  if ((v4 & 0x2000) != 0) {
LABEL_19:
  }
    LODWORD(v3[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
LABEL_20:
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
LABEL_21:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13C4F68()
{
  return 1;
}

void *sub_13C4F70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.VehicleSpecifications.EVInfo");
}

uint64_t sub_13C4F80(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24AFF88;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_13C4FFC(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13C502C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C50A0(void *a1)
{
  sub_13C502C(a1);

  operator delete();
}

uint64_t sub_13C50D8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13C50FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v25 + 2;
      }
    }
    int v25 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 16) {
      goto LABEL_13;
    }
    std::string::size_type v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        int v25 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v25) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_26;
      }
      std::string::size_type v14 = v7 + 2;
    }
    int v25 = v14;
LABEL_26:
    if (v15 > 1)
    {
      if (*v6) {
        uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v24 = 2;
      goto LABEL_46;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v15;
LABEL_34:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v8 >> 3 == 1 && v8 == 8)
  {
    uint64_t v18 = v7 + 1;
    unint64_t v15 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v19 = *v18;
    int v20 = v15 + (v19 << 7);
    unint64_t v15 = (v20 - 128);
    if (v19 < 0)
    {
      int v25 = (char *)sub_188C138((uint64_t)v7, (v20 - 128));
      if (!v25) {
        return 0;
      }
      unint64_t v15 = v22;
    }
    else
    {
      uint64_t v18 = v7 + 2;
LABEL_31:
      int v25 = v18;
    }
    if (v15 <= 1)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v15;
      goto LABEL_34;
    }
    if (*v6) {
      uint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v24 = 1;
LABEL_46:
    sub_188C020(v24, v15, v23);
    goto LABEL_34;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v25;
    }
    int v25 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v25) {
      return 0;
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_13C5354(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C54F8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_14;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_13C55B8()
{
  return 1;
}

void *sub_13C55C0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.VehicleSpecifications.VehicleInfo");
}

uint64_t sub_13C55D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0008;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v5 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_13C56F4()
{
}

uint64_t sub_13C5774(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2536398)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_13C2EB0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_13C3B48(v6);
      operator delete();
    }
    unint64_t v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_13C502C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C5864(uint64_t a1)
{
  sub_13C5774(a1);

  operator delete();
}

uint64_t sub_13C589C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_13C2FC8(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(v1 + 48) = 1;
          goto LABEL_7;
        }
LABEL_5:
        uint64_t result = sub_13C50D8(*(void *)(v1 + 40));
        goto LABEL_6;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_13C3C90(*(void *)(v1 + 32));
    if ((v2 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_13C592C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v27 + 2;
      }
    }
    unsigned int v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 24);
        if (!v11)
        {
          unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_13D9D5C((uint64_t)v12);
          *(void *)(a1 + 24) = v11;
          unint64_t v7 = v27;
        }
        uint64_t v13 = (char *)sub_13C5C14(a3, v11, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 2u:
        if (v8 != 18) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 32);
        if (!v14)
        {
          unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v15 = (void *)*v15;
          }
          sub_13D9DEC((uint64_t)v15);
          uint64_t v14 = v16;
          *(void *)(a1 + 32) = v16;
          unint64_t v7 = v27;
        }
        uint64_t v13 = (char *)sub_13C5CA4(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 3u:
        if (v8 != 26) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v17 = *(void **)(a1 + 40);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_13D9E84((uint64_t)v18);
          *(void *)(a1 + 40) = v17;
          unint64_t v7 = v27;
        }
        uint64_t v13 = sub_13C5D34(a3, (uint64_t)v17, (unsigned __int8 *)v7);
        goto LABEL_41;
      case 5u:
        if (v8 != 40) {
          goto LABEL_34;
        }
        int v19 = v7 + 1;
        unint64_t v20 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          unsigned int v27 = (char *)sub_188C138((uint64_t)v7, (v22 - 128));
          if (!v27) {
            return 0;
          }
          unint64_t v20 = v25;
        }
        else
        {
          int v19 = v7 + 2;
LABEL_31:
          unsigned int v27 = v19;
        }
        if ((v20 - 1) > 2)
        {
          if (*v6) {
            unsigned int v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unsigned int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(5, v20, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 48) = v20;
        }
        goto LABEL_42;
      default:
LABEL_34:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if (*v6)
          {
            int v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = v27;
          }
          uint64_t v13 = (char *)sub_1885AC0(v8, v24, v7, a3);
LABEL_41:
          unsigned int v27 = v13;
          if (!v13) {
            return 0;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
            return v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v27;
    }
  }
}

uint64_t sub_13C5C14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C30C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_13C5CA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C3DEC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13C5D34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C50FC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13C5DC4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_13C33EC(v7, v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  unsigned char *v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    unint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    unint64_t v12 = v4 + 2;
  }
  char v4 = sub_13C441C(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  unsigned char *v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    unint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    unint64_t v15 = v4 + 2;
  }
  char v4 = sub_13C5354(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 48);
    unsigned char *v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_30:
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_13C6034(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v4 = sub_13C3624(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_13C49E8(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v6 = sub_13C54F8(*(void *)(a1 + 40));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_16;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_16;
  }
  int v7 = *(_DWORD *)(a1 + 48);
  if (v7 < 0) {
    uint64_t v8 = 11;
  }
  else {
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v8;
LABEL_16:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_13C6178(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_13D9D5C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_25362C8;
      }
      uint64_t result = sub_13C37E4(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_13D9DEC((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2536310;
    }
    uint64_t result = sub_13C4D1C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_13D9E84((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      unint64_t v17 = &off_2536378;
    }
    uint64_t result = sub_117EF04(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13C62F0()
{
  return 1;
}

void *sub_13C62F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.VehicleSpecifications");
}

uint64_t sub_13C6308(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B0088;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_10FAFC0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  return a1;
}

void sub_13C63FC(_Unwind_Exception *a1)
{
  sub_148C848(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13C6440(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148C848(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C64C0(void *a1)
{
  sub_13C6440(a1);

  operator delete();
}

uint64_t sub_13C64F8(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13C26E4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_WORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_13C657C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v32 + 2;
      }
    }
    unsigned int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      int v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        int v22 = v8 + 2;
LABEL_36:
        unsigned int v32 = v22;
        *(unsigned char *)(a1 + 49) = v23 != 0;
        goto LABEL_41;
      }
      unsigned int v28 = (char *)sub_188C138((uint64_t)v8, v23);
      unsigned int v32 = v28;
      *(unsigned char *)(a1 + 49) = v29 != 0;
      if (!v28) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      unint64_t v25 = v8 + 1;
      uint64_t v26 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_40;
      }
      int v27 = *v25;
      uint64_t v26 = v26 + (v27 << 7) - 128;
      if ((v27 & 0x80000000) == 0)
      {
        unint64_t v25 = v8 + 2;
LABEL_40:
        unsigned int v32 = v25;
        *(unsigned char *)(a1 + 48) = v26 != 0;
        goto LABEL_41;
      }
      unsigned int v30 = (char *)sub_188C138((uint64_t)v8, v26);
      unsigned int v32 = v30;
      *(unsigned char *)(a1 + 48) = v31 != 0;
      if (!v30) {
        goto LABEL_50;
      }
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    unint64_t v16 = v8 - 1;
    while (1)
    {
      unint64_t v17 = (unsigned __int8 *)(v16 + 1);
      unsigned int v32 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_13D9CE0(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, v21);
        unint64_t v17 = (unsigned __int8 *)v32;
      }
      unint64_t v16 = sub_13C6824(a3, v20, v17);
      unsigned int v32 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      std::string::size_type v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v32;
    }
    unsigned int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  unsigned int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_13C6824(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C2744(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13C68B4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v8 = *(unsigned char *)(a1 + 49);
    unsigned char *v4 = 16;
    v4[1] = v8;
    v4 += 2;
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      unsigned char *v4 = 26;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_13C29E4(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    unint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    unint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_13C6A6C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13C2B7C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  uint64_t v9 = v2 + 2;
  if ((v8 & 1) == 0) {
    uint64_t v9 = v2;
  }
  if ((v8 & 2) != 0) {
    v9 += 2;
  }
  if ((v8 & 3) != 0) {
    uint64_t result = v9;
  }
  else {
    uint64_t result = v2;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13C6B3C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_10FAFC0((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      v3[2].__r_.__value_.__s.__data_[1] = *(unsigned char *)(a2 + 49);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13C6C3C()
{
  return 1;
}

void *sub_13C6C44@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AutomobileOptions.UserPreferences");
}

uint64_t sub_13C6C54(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0108;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  return a1;
}

void sub_13C6D48()
{
}

uint64_t sub_13C6DAC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2536408)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_13C6440(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_13C5774(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C6E7C(uint64_t a1)
{
  sub_13C6DAC(a1);

  operator delete();
}

char *sub_13C6EB4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v36 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v36 + 1;
    unsigned int v9 = *v36;
    if (*v36 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v36, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v36 + 2;
      }
    }
    uint64_t v36 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_38;
        }
        v5 |= 4u;
        unint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v36 = v12;
          *(unsigned char *)(a1 + 40) = v13 != 0;
          goto LABEL_46;
        }
        unsigned int v30 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v36 = v30;
        *(unsigned char *)(a1 + 40) = v31 != 0;
        if (v30) {
          goto LABEL_46;
        }
        goto LABEL_61;
      case 2u:
        if (v9 != 16) {
          goto LABEL_38;
        }
        std::string::size_type v15 = v8 + 1;
        unint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v18 = v16 + (v17 << 7);
        unint64_t v16 = (v18 - 128);
        if (v17 < 0)
        {
          uint64_t v36 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
          if (!v36) {
            goto LABEL_61;
          }
          unint64_t v16 = v32;
        }
        else
        {
          std::string::size_type v15 = v8 + 2;
LABEL_18:
          uint64_t v36 = v15;
        }
        if ((v16 - 1) > 2)
        {
          if (*v7) {
            uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(2, v16, v35);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 44) = v16;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_38;
        }
        v5 |= 0x10u;
        uint64_t v19 = v8 + 1;
        uint64_t v20 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_25;
        }
        int v21 = *v19;
        uint64_t v20 = v20 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unsigned int v33 = (char *)sub_188C138((uint64_t)v8, v20);
          uint64_t v36 = v33;
          *(unsigned char *)(a1 + 48) = v34 != 0;
          if (!v33) {
            goto LABEL_61;
          }
        }
        else
        {
          uint64_t v19 = v8 + 2;
LABEL_25:
          uint64_t v36 = v19;
          *(unsigned char *)(a1 + 48) = v20 != 0;
        }
        goto LABEL_46;
      case 6u:
        if (v9 != 50) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v22 = *(void *)(a1 + 24);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_13D9F80((uint64_t)v23);
          *(void *)(a1 + 24) = v22;
          int v8 = v36;
        }
        int v24 = sub_13C724C(a3, v22, (unsigned __int8 *)v8);
        goto LABEL_45;
      case 9u:
        if (v9 != 74) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v25 = *(void *)(a1 + 32);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          sub_13D9EFC((uint64_t)v26);
          uint64_t v25 = v27;
          *(void *)(a1 + 32) = v27;
          int v8 = v36;
        }
        int v24 = sub_13C72DC(a3, v25, (unsigned __int8 *)v8);
        goto LABEL_45;
      default:
LABEL_38:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v7)
          {
            uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v36;
          }
          int v24 = (char *)sub_1885AC0(v9, v29, v8, a3);
LABEL_45:
          uint64_t v36 = v24;
          if (!v24) {
            goto LABEL_61;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v36, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_61:
        }
          uint64_t v36 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v36;
    }
  }
}

char *sub_13C724C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C657C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13C72DC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C592C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13C736C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 40);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 44);
    unsigned char *v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v11 = *(unsigned char *)(a1 + 48);
    unsigned char *v4 = 24;
    v4[1] = v11;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_14:
      if ((v6 & 2) == 0) {
        goto LABEL_31;
      }
      goto LABEL_25;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_14;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v12 = *(void *)(a1 + 24);
  unsigned char *v4 = 50;
  unsigned int v13 = *(_DWORD *)(v12 + 20);
  v4[1] = v13;
  if (v13 > 0x7F) {
    int v14 = sub_188A9CC(v13, v4 + 1);
  }
  else {
    int v14 = v4 + 2;
  }
  uint64_t v4 = sub_13C68B4(v12, (unint64_t)v14, a3);
  if ((v6 & 2) != 0)
  {
LABEL_25:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 32);
    unsigned char *v4 = 74;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    uint64_t v4 = sub_13C5DC4(v15, (unint64_t)v17, a3);
  }
LABEL_31:
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_13C75E4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x1F) == 0)
  {
    uint64_t result = 0;
    goto LABEL_18;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_13C6A6C(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_13C6034(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = v3 + 2;
  if ((v2 & 4) == 0) {
    uint64_t v7 = v3;
  }
  if ((v2 & 8) != 0)
  {
    int v8 = *(_DWORD *)(a1 + 44);
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v8 >= 0) {
      uint64_t v10 = v9;
    }
    else {
      uint64_t v10 = 11;
    }
    v7 += v10;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v7 + 2;
  }
  else {
    uint64_t result = v7;
  }
LABEL_18:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13C7704(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_13AE7D8((uint64_t)result);
    return sub_13B122C(v4, a2);
  }
  return result;
}

uint64_t sub_13C7750()
{
  return 1;
}

void *sub_13C7758@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.AutomobileOptions");
}

uint64_t sub_13C7768(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2536440)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1374224(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C7820(uint64_t a1)
{
  sub_13C7768(a1);

  operator delete();
}

uint64_t sub_13C7858(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1369E6C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 24) = 0;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_13C78B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v24 + 2;
      }
    }
    int v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      unint64_t v20 = v8 + 2;
LABEL_31:
      int v24 = v20;
      *(_DWORD *)(a1 + 32) = v19;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C138((uint64_t)v8, v19);
    int v24 = v22;
    *(_DWORD *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_39;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 24);
    if (!v16)
    {
      int v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        int v17 = (void *)*v17;
      }
      sub_13D6A1C((uint64_t)v17);
      uint64_t v16 = v18;
      *(void *)(a1 + 24) = v18;
      int v8 = v24;
    }
    uint64_t v15 = (char *)sub_13319DC(a3, v16, (unsigned __int8 *)v8);
LABEL_26:
    int v24 = v15;
    if (!v15) {
      goto LABEL_39;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v24;
    }
    uint64_t v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_26;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  int v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v24;
}

char *sub_13C7A98(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 32);
    char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C7C24(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_11;
  }
  if (v2)
  {
    uint64_t v4 = sub_1374EEC(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v5 = *(_DWORD *)(a1 + 32);
  if (v5 < 0) {
    uint64_t v6 = 11;
  }
  else {
    uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v6;
LABEL_11:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_13C7CF4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_136ADBC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_13C7D20@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RequestOptions.RequestOption");
}

uint64_t sub_13C7D30(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24B0208;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  int v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_148E384(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_13C7E24(_Unwind_Exception *a1)
{
  sub_148C8C8(v3);
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13C7E6C(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_148C8C8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C7EEC(void *a1)
{
  sub_13C7E6C(a1);

  operator delete();
}

uint64_t sub_13C7F24(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    char v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_13C7858(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_13C7FA8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v16 = v8 + 1;
    LODWORD(v15) = *v8;
    if ((v15 & 0x80) == 0) {
      goto LABEL_25;
    }
    int v17 = *v16;
    uint64_t v15 = v15 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_25:
      uint64_t v26 = v16;
      *(_DWORD *)(a1 + 48) = v15;
      int v5 = 1;
      goto LABEL_36;
    }
    int v24 = (char *)sub_188C138((uint64_t)v8, v15);
    uint64_t v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v26 = v18 + 1;
      unint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_13DA0A8(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, v23);
        uint64_t v19 = (unsigned __int8 *)v26;
      }
      uint64_t v18 = sub_13C81CC(a3, v22, v19);
      uint64_t v26 = v18;
      if (!v18) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_13C81CC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C78B8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13C825C(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_13C7A98(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v11 = *(int *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v11;
    if (v11 > 0x7F)
    {
      __dst[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      __dst[2] = v11 >> 7;
      __dst += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *__dst++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_13C8420(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_13C7C24(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_13C8508(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_148E384((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      *int v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_13C85F4(uint64_t a1)
{
  return sub_13349CC(a1 + 24);
}

void *sub_13C85FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.RequestOptions");
}

uint64_t sub_13C860C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0288;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  __int16 v5 = *(_WORD *)(a2 + 24);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(_WORD *)(a1 + 24) = v5;
  return a1;
}

void sub_13C8690(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13C86C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C8734(void *a1)
{
  sub_13C86C0(a1);

  operator delete();
}

uint64_t sub_13C876C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 18) = 0;
  *(_WORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13C8788(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v31 + 1;
    unsigned int v9 = *v31;
    if (*v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v31 + 2;
      }
    }
    uint64_t v31 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v16 = v8 + 1;
      uint64_t v17 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_26;
      }
      int v18 = *v16;
      uint64_t v17 = v17 + (v18 << 7) - 128;
      if ((v18 & 0x80000000) == 0)
      {
        unint64_t v16 = v8 + 2;
LABEL_26:
        uint64_t v31 = v16;
        *(unsigned char *)(a1 + 26) = v17 != 0;
        goto LABEL_36;
      }
      int v25 = (char *)sub_188C138((uint64_t)v8, v17);
      uint64_t v31 = v25;
      *(unsigned char *)(a1 + 26) = v26 != 0;
      if (!v25) {
        goto LABEL_47;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v31 = v19;
      *(unsigned char *)(a1 + 25) = v20 != 0;
      goto LABEL_36;
    }
    uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v20);
    uint64_t v31 = v27;
    *(unsigned char *)(a1 + 25) = v28 != 0;
    if (!v27) {
      goto LABEL_47;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v31, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v22 = v8 + 1;
    uint64_t v23 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_35;
    }
    int v24 = *v22;
    uint64_t v23 = v23 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      uint64_t v22 = v8 + 2;
LABEL_35:
      uint64_t v31 = v22;
      *(unsigned char *)(a1 + 24) = v23 != 0;
      goto LABEL_36;
    }
    uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v23);
    uint64_t v31 = v29;
    *(unsigned char *)(a1 + 24) = v30 != 0;
    if (!v29) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v8 = v31;
    }
    uint64_t v31 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v31) {
      goto LABEL_47;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  uint64_t v31 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v31;
}

unsigned char *sub_13C8A0C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 25);
  unsigned char *v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) != 0)
  {
LABEL_11:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v9 = *(unsigned char *)(a1 + 26);
    unsigned char *v4 = 24;
    v4[1] = v9;
    v4 += 2;
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_13C8B6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  uint64_t v2 = 2 * (v1 & 1);
  if ((v1 & 2) != 0) {
    v2 += 2;
  }
  if ((v1 & 4) != 0) {
    v2 += 2;
  }
  if ((v1 & 7) != 0) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v3 += v7;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_13C8BD0()
{
  return 1;
}

void *sub_13C8BD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.CyclingOptions.CyclingUserPreferences");
}

uint64_t sub_13C8BE8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0308;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

void sub_13C8C64(_Unwind_Exception *a1)
{
  *int v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13C8C94(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C8D08(void *a1)
{
  sub_13C8C94(a1);

  operator delete();
}

uint64_t sub_13C8D40(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13C8D58(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    unint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      unint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_13C8EE8(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_13C8FCC(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_13C900C()
{
  return 1;
}

void *sub_13C9014@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.CyclingOptions.CyclingVehicleSpecifications");
}

uint64_t sub_13C9024(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0388;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v5 = *(_DWORD *)(a2 + 16);
  if (v5) {
    operator new();
  }
  *(void *)(a1 + 24) = 0;
  if ((v5 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_13C9108()
{
}

uint64_t sub_13C916C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_25364E0)
  {
    int v5 = *(void **)(a1 + 24);
    if (v5)
    {
      sub_13C86C0(v5);
      operator delete();
    }
    char v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_13C8C94(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C923C(uint64_t a1)
{
  sub_13C916C(a1);

  operator delete();
}

char *sub_13C9274(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      unint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_13DA23C((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = v19;
    }
    uint64_t v14 = sub_13C94C4(a3, v15, (unsigned __int8 *)v7);
LABEL_31:
    uint64_t v19 = v14;
    if (!v14) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 24);
    if (!v17)
    {
      int v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        int v18 = (void *)*v18;
      }
      uint64_t v17 = sub_13DA1C0((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v7 = v19;
    }
    uint64_t v14 = sub_13C9434(a3, v17, (unsigned __int8 *)v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    uint64_t v14 = (char *)sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v19;
  }
  return 0;
}

char *sub_13C9434(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C8788(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_13C94C4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_13C8D58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_13C9554(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    unsigned char *v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_13C8A0C(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    unsigned char *v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      BOOL v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      BOOL v12 = v4 + 2;
    }
    uint64_t v4 = sub_13C8EE8(v10, (unint64_t)v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_13C96D4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_9;
  }
  if (v2)
  {
    uint64_t v4 = sub_13C8B6C(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t result = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_9;
    }
  }
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = 2 * (*(_DWORD *)(v5 + 16) & 1);
  uint64_t v7 = *(void *)(v5 + 8);
  if (v7)
  {
    unint64_t v11 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v6 += v12;
  }
  *(_DWORD *)(v5 + 20) = v6;
  result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_9:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_13C97D0(std::string *result, uint64_t a2)
{
  if ((std::string *)a2 != result)
  {
    uint64_t v4 = result;
    sub_13AE954((uint64_t)result);
    return sub_13B1644(v4, a2);
  }
  return result;
}

uint64_t sub_13C981C()
{
  return 1;
}

void *sub_13C9824@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.CyclingOptions");
}

uint64_t sub_13C9834(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24B0408;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_13C98B0(_Unwind_Exception *a1)
{
  *uint64_t v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_13C98E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_13C9954(void *a1)
{
  sub_13C98E0(a1);

  operator delete();
}

uint64_t sub_13C998C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_13C99B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v20 = v8 + 1;
    LODWORD(v19) = *v8;
    if ((v19 & 0x80) == 0) {
      goto LABEL_31;
    }
    int v21 = *v20;
    uint64_t v19 = v19 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v20 = v8 + 2;
LABEL_31:
      uint64_t v26 = v20;
      *(_DWORD *)(a1 + 24) = v19;
      int v5 = 1;
      goto LABEL_32;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
    uint64_t v26 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    int v5 = 1;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    unint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v26) {
          goto LABEL_45;
        }
        unint64_t v16 = v22;
        goto LABEL_26;
      }
      unint64_t v15 = v8 + 2;
    }
    uint64_t v26 = v15;
LABEL_26:
    if (v16 > 1)
    {
      if (*v7) {
        int v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v16;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_13C9BE4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    unsigned char *v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    unsigned char *v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    unint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    unint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}