uint64_t sub_16BC274(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;

  v2 = sub_1889280(a1 + 16);
  v3 = *(unsigned int *)(a1 + 56);
  v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      v6 = *v5++;
      v7 = *(unsigned __int8 *)(v6 + 23);
      v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  v9 = *(unsigned int *)(a1 + 80);
  v10 = v4 + v9;
  if ((int)v9 >= 1)
  {
    v11 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      v12 = *v11++;
      v13 = *(unsigned __int8 *)(v12 + 23);
      v14 = *(void *)(v12 + 8);
      if ((v13 & 0x80u) == 0) {
        v14 = v13;
      }
      v10 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      --v9;
    }
    while (v9);
  }
  v15 = *(unsigned int *)(a1 + 104);
  v16 = v10 + v15;
  if ((int)v15 >= 1)
  {
    v17 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      v18 = *v17++;
      v19 = *(unsigned __int8 *)(v18 + 23);
      v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        v20 = v19;
      }
      v16 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6);
      --v15;
    }
    while (v15);
  }
  v21 = *(int *)(a1 + 128);
  v22 = v16 + v21;
  v23 = *(void *)(a1 + 136);
  if (v23) {
    v24 = (uint64_t *)(v23 + 8);
  }
  else {
    v24 = 0;
  }
  if (v21)
  {
    v25 = 8 * v21;
    do
    {
      v26 = *v24++;
      v27 = sub_15B2F90(v26);
      v22 += v27 + ((9 * (__clz(v27 | 1) ^ 0x1F) + 73) >> 6);
      v25 -= 8;
    }
    while (v25);
  }
  v28 = *(int *)(a1 + 152);
  v29 = v22 + v28;
  v30 = *(void *)(a1 + 160);
  if (v30) {
    v31 = (uint64_t *)(v30 + 8);
  }
  else {
    v31 = 0;
  }
  if (v28)
  {
    v32 = 8 * v28;
    do
    {
      v33 = *v31++;
      v34 = sub_15B2F90(v33);
      v29 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6);
      v32 -= 8;
    }
    while (v32);
  }
  v35 = *(int *)(a1 + 176);
  v36 = v29 + v35;
  v37 = *(void *)(a1 + 184);
  if (v37) {
    v38 = (uint64_t *)(v37 + 8);
  }
  else {
    v38 = 0;
  }
  if (v35)
  {
    v39 = 8 * v35;
    do
    {
      v40 = *v38++;
      v41 = sub_16B76F0(v40);
      v36 += v41 + ((9 * (__clz(v41 | 1) ^ 0x1F) + 73) >> 6);
      v39 -= 8;
    }
    while (v39);
  }
  v42 = *(unsigned int *)(a1 + 192);
  if (v42)
  {
    v43 = 0;
    v44 = 0;
    do
    {
      v45 = *(_DWORD *)(*(void *)(a1 + 200) + 4 * v43);
      if (v45 < 0) {
        v46 = 10;
      }
      else {
        v46 = (9 * (__clz(v45 | 1) ^ 0x1F) + 73) >> 6;
      }
      v44 += v46;
      ++v43;
    }
    while (v42 != v43);
  }
  else
  {
    v44 = 0;
  }
  v47 = *(int *)(a1 + 216);
  v48 = v44 + v36 + 2 * (v47 + v42);
  v49 = *(void *)(a1 + 224);
  if (v49) {
    v50 = (uint64_t *)(v49 + 8);
  }
  else {
    v50 = 0;
  }
  if (v47)
  {
    v51 = 8 * v47;
    do
    {
      v52 = *v50++;
      v53 = sub_15B2F90(v52);
      v48 += v53 + ((9 * (__clz(v53 | 1) ^ 0x1F) + 73) >> 6);
      v51 -= 8;
    }
    while (v51);
  }
  v54 = *(int *)(a1 + 240);
  v55 = v48 + 2 * v54;
  v56 = *(void *)(a1 + 248);
  if (v56) {
    v57 = (uint64_t *)(v56 + 8);
  }
  else {
    v57 = 0;
  }
  if (v54)
  {
    v58 = 8 * v54;
    do
    {
      v59 = *v57++;
      v60 = sub_16B76F0(v59);
      v55 += v60 + ((9 * (__clz(v60 | 1) ^ 0x1F) + 73) >> 6);
      v58 -= 8;
    }
    while (v58);
  }
  v61 = *(unsigned int *)(a1 + 264);
  v62 = v55 + 2 * v61;
  if ((int)v61 >= 1)
  {
    v63 = (uint64_t *)(*(void *)(a1 + 272) + 8);
    do
    {
      v64 = *v63++;
      v65 = *(unsigned __int8 *)(v64 + 23);
      v66 = *(void *)(v64 + 8);
      if ((v65 & 0x80u) == 0) {
        v66 = v65;
      }
      v62 += v66 + ((9 * (__clz(v66 | 1) ^ 0x1F) + 73) >> 6);
      --v61;
    }
    while (v61);
  }
  v67 = sub_188D5A8((unsigned int *)(a1 + 280)) + v62 + 2 * *(unsigned int *)(a1 + 280);
  v68 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v68) {
    goto LABEL_69;
  }
  if (v68)
  {
    v83 = *(void *)(a1 + 296) & 0xFFFFFFFFFFFFFFFELL;
    v84 = *(unsigned __int8 *)(v83 + 23);
    v85 = *(void *)(v83 + 8);
    if ((v84 & 0x80u) == 0) {
      v85 = v84;
    }
    v67 += v85 + ((9 * (__clz(v85 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v68 & 2) == 0)
    {
LABEL_62:
      if ((v68 & 4) == 0) {
        goto LABEL_63;
      }
      goto LABEL_126;
    }
  }
  else if ((v68 & 2) == 0)
  {
    goto LABEL_62;
  }
  v86 = *(void *)(a1 + 304) & 0xFFFFFFFFFFFFFFFELL;
  v87 = *(unsigned __int8 *)(v86 + 23);
  v88 = *(void *)(v86 + 8);
  if ((v87 & 0x80u) == 0) {
    v88 = v87;
  }
  v67 += v88 + ((9 * (__clz(v88 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v68 & 4) == 0)
  {
LABEL_63:
    if ((v68 & 8) == 0) {
      goto LABEL_64;
    }
    goto LABEL_129;
  }
LABEL_126:
  v89 = *(void *)(a1 + 312) & 0xFFFFFFFFFFFFFFFELL;
  v90 = *(unsigned __int8 *)(v89 + 23);
  v91 = *(void *)(v89 + 8);
  if ((v90 & 0x80u) == 0) {
    v91 = v90;
  }
  v67 += v91 + ((9 * (__clz(v91 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v68 & 8) == 0)
  {
LABEL_64:
    if ((v68 & 0x10) == 0) {
      goto LABEL_65;
    }
    goto LABEL_132;
  }
LABEL_129:
  v92 = *(void *)(a1 + 320) & 0xFFFFFFFFFFFFFFFELL;
  v93 = *(unsigned __int8 *)(v92 + 23);
  v94 = *(void *)(v92 + 8);
  if ((v93 & 0x80u) == 0) {
    v94 = v93;
  }
  v67 += v94 + ((9 * (__clz(v94 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v68 & 0x10) == 0)
  {
LABEL_65:
    if ((v68 & 0x20) == 0) {
      goto LABEL_66;
    }
LABEL_135:
    v98 = *(void *)(a1 + 336) & 0xFFFFFFFFFFFFFFFELL;
    v99 = *(unsigned __int8 *)(v98 + 23);
    v100 = *(void *)(v98 + 8);
    if ((v99 & 0x80u) == 0) {
      v100 = v99;
    }
    v67 += v100 + ((9 * (__clz(v100 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v68 & 0x40) == 0)
    {
LABEL_67:
      if ((v68 & 0x80) == 0) {
        goto LABEL_69;
      }
      goto LABEL_68;
    }
    goto LABEL_138;
  }
LABEL_132:
  v95 = *(void *)(a1 + 328) & 0xFFFFFFFFFFFFFFFELL;
  v96 = *(unsigned __int8 *)(v95 + 23);
  v97 = *(void *)(v95 + 8);
  if ((v96 & 0x80u) == 0) {
    v97 = v96;
  }
  v67 += v97 + ((9 * (__clz(v97 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v68 & 0x20) != 0) {
    goto LABEL_135;
  }
LABEL_66:
  if ((v68 & 0x40) == 0) {
    goto LABEL_67;
  }
LABEL_138:
  v101 = sub_15B2F90(*(void *)(a1 + 344));
  v67 += v101 + ((9 * (__clz(v101 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v68 & 0x80) != 0)
  {
LABEL_68:
    v69 = sub_15B2F90(*(void *)(a1 + 352));
    v67 += v69 + ((9 * (__clz(v69 | 1) ^ 0x1F) + 73) >> 6) + 2;
  }
LABEL_69:
  if ((v68 & 0xFF00) == 0) {
    goto LABEL_86;
  }
  if ((v68 & 0x100) != 0)
  {
    v102 = sub_1460320(*(void *)(a1 + 360));
    v67 += v102 + ((9 * (__clz(v102 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v68 & 0x200) == 0)
    {
LABEL_72:
      if ((v68 & 0x400) == 0) {
        goto LABEL_73;
      }
      goto LABEL_142;
    }
  }
  else if ((v68 & 0x200) == 0)
  {
    goto LABEL_72;
  }
  v103 = sub_16B8018(*(void *)(a1 + 368));
  v67 += v103 + ((9 * (__clz(v103 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v68 & 0x400) == 0)
  {
LABEL_73:
    if ((v68 & 0x800) == 0) {
      goto LABEL_74;
    }
LABEL_143:
    v105 = sub_16B8668(*(void *)(a1 + 384));
    v67 += v105 + ((9 * (__clz(v105 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if ((v68 & 0x1000) != 0) {
      goto LABEL_75;
    }
    goto LABEL_79;
  }
LABEL_142:
  v104 = sub_15B2F90(*(void *)(a1 + 376));
  v67 += v104 + ((9 * (__clz(v104 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((v68 & 0x800) != 0) {
    goto LABEL_143;
  }
LABEL_74:
  if ((v68 & 0x1000) != 0)
  {
LABEL_75:
    v70 = *(_DWORD *)(a1 + 392);
    v71 = (9 * (__clz(v70 | 1) ^ 0x1F) + 73) >> 6;
    if (v70 >= 0) {
      v72 = v71;
    }
    else {
      v72 = 10;
    }
    v67 += v72 + 1;
  }
LABEL_79:
  v73 = v67 + 2;
  if ((v68 & 0x2000) == 0) {
    v73 = v67;
  }
  if ((v68 & 0x4000) != 0) {
    v73 += 2;
  }
  if ((v68 & 0x8000) != 0) {
    v67 = v73 + 2;
  }
  else {
    v67 = v73;
  }
LABEL_86:
  if ((v68 & 0xFF0000) == 0) {
    goto LABEL_104;
  }
  v74 = v67 + 2;
  if ((v68 & 0x10000) == 0) {
    v74 = v67;
  }
  if ((v68 & 0x20000) != 0)
  {
    v106 = *(_DWORD *)(a1 + 400);
    v107 = (9 * (__clz(v106 | 1) ^ 0x1F) + 73) >> 6;
    if (v106 >= 0) {
      v108 = v107;
    }
    else {
      v108 = 10;
    }
    v74 += v108 + 2;
    if ((v68 & 0x40000) == 0)
    {
LABEL_91:
      if ((v68 & 0x80000) == 0) {
        goto LABEL_92;
      }
LABEL_153:
      v74 += ((9 * (__clz(*(void *)(a1 + 408) | 1) ^ 0x3F) + 73) >> 6) + 2;
      if ((v68 & 0x100000) != 0) {
        goto LABEL_93;
      }
      goto LABEL_97;
    }
  }
  else if ((v68 & 0x40000) == 0)
  {
    goto LABEL_91;
  }
  v109 = *(_DWORD *)(a1 + 404);
  v110 = ((9 * (__clz(v109 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v109 >= 0) {
    v111 = v110;
  }
  else {
    v111 = 12;
  }
  v74 += v111;
  if ((v68 & 0x80000) != 0) {
    goto LABEL_153;
  }
LABEL_92:
  if ((v68 & 0x100000) != 0)
  {
LABEL_93:
    v75 = *(_DWORD *)(a1 + 416);
    v76 = ((9 * (__clz(v75 | 1) ^ 0x1F) + 73) >> 6) + 2;
    if (v75 >= 0) {
      v77 = v76;
    }
    else {
      v77 = 12;
    }
    v74 += v77;
  }
LABEL_97:
  if ((v68 & 0x200000) != 0) {
    v74 += 3;
  }
  if ((v68 & 0x400000) != 0) {
    v67 = v74 + 3;
  }
  else {
    v67 = v74;
  }
  if ((v68 & 0x800000) != 0) {
    v67 += ((9 * (__clz(*(void *)(a1 + 424) | 1) ^ 0x3F) + 73) >> 6) + 2;
  }
LABEL_104:
  if ((v68 & 0x3F000000) == 0) {
    goto LABEL_118;
  }
  if ((v68 & 0x1000000) != 0) {
    v67 += ((9 * (__clz(*(void *)(a1 + 432) | 1) ^ 0x3F) + 73) >> 6) + 2;
  }
  if ((v68 & 0x2000000) != 0) {
    v67 += ((9 * (__clz(*(void *)(a1 + 440) | 1) ^ 0x3F) + 73) >> 6) + 2;
  }
  if ((v68 & 0x4000000) != 0) {
    v67 += 6;
  }
  if ((v68 & 0x8000000) == 0)
  {
    if ((v68 & 0x10000000) == 0) {
      goto LABEL_113;
    }
LABEL_159:
    v67 += ((9 * (__clz(*(void *)(a1 + 456) | 1) ^ 0x3F) + 73) >> 6) + 2;
    if ((v68 & 0x20000000) == 0) {
      goto LABEL_118;
    }
    goto LABEL_114;
  }
  v112 = *(_DWORD *)(a1 + 452);
  v113 = ((9 * (__clz(v112 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v112 >= 0) {
    v114 = v113;
  }
  else {
    v114 = 12;
  }
  v67 += v114;
  if ((v68 & 0x10000000) != 0) {
    goto LABEL_159;
  }
LABEL_113:
  if ((v68 & 0x20000000) == 0) {
    goto LABEL_118;
  }
LABEL_114:
  v78 = *(_DWORD *)(a1 + 464);
  v79 = ((9 * (__clz(v78 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if (v78 >= 0) {
    v80 = v79;
  }
  else {
    v80 = 12;
  }
  v67 += v80;
LABEL_118:
  v81 = *(void *)(a1 + 8);
  if (v81)
  {
    v115 = v81 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v115 + 31) < 0) {
      v116 = *(void *)(v115 + 16);
    }
    else {
      v116 = *(unsigned __int8 *)(v115 + 31);
    }
    v67 += v116;
  }
  *(_DWORD *)(a1 + 44) = v67;
  return v67;
}

void sub_16BCBA4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    v10 = (const std::string **)(*(void *)(a2 + 88) + 8);
    v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_188FB98(a1 + 72, v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    v15 = (const std::string **)(*(void *)(a2 + 112) + 8);
    v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_12C1E38((std::string *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_12C1E38((std::string *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 176);
  if (v29)
  {
    v30 = (uint64_t *)(*(void *)(a2 + 184) + 8);
    v31 = (std::string **)sub_188CCE4(a1 + 168, *(_DWORD *)(a2 + 176));
    sub_187103C((uint64_t *)(a1 + 168), v31, v30, v29, **(_DWORD **)(a1 + 184) - *(_DWORD *)(a1 + 176));
    int v32 = *(_DWORD *)(a1 + 176) + v29;
    *(_DWORD *)(a1 + 176) = v32;
    v33 = *(int **)(a1 + 184);
    if (*v33 < v32) {
      int *v33 = v32;
    }
  }
  int v34 = *(_DWORD *)(a2 + 192);
  if (v34)
  {
    uint64_t v35 = *(int *)(a1 + 192);
    sub_188C80C((unsigned int *)(a1 + 192), v35 + v34);
    uint64_t v36 = *(void *)(a1 + 200);
    *(_DWORD *)(a1 + 192) += *(_DWORD *)(a2 + 192);
    memcpy((void *)(v36 + 4 * v35), *(const void **)(a2 + 200), 4 * *(int *)(a2 + 192));
  }
  int v37 = *(_DWORD *)(a2 + 216);
  if (v37)
  {
    v38 = (uint64_t *)(*(void *)(a2 + 224) + 8);
    v39 = (std::string **)sub_188CCE4(a1 + 208, *(_DWORD *)(a2 + 216));
    sub_12C1E38((std::string *)(a1 + 208), v39, v38, v37, **(_DWORD **)(a1 + 224) - *(_DWORD *)(a1 + 216));
    int v40 = *(_DWORD *)(a1 + 216) + v37;
    *(_DWORD *)(a1 + 216) = v40;
    v41 = *(int **)(a1 + 224);
    if (*v41 < v40) {
      int *v41 = v40;
    }
  }
  int v42 = *(_DWORD *)(a2 + 240);
  if (v42)
  {
    v43 = (uint64_t *)(*(void *)(a2 + 248) + 8);
    v44 = (std::string **)sub_188CCE4(a1 + 232, *(_DWORD *)(a2 + 240));
    sub_187103C((uint64_t *)(a1 + 232), v44, v43, v42, **(_DWORD **)(a1 + 248) - *(_DWORD *)(a1 + 240));
    int v45 = *(_DWORD *)(a1 + 240) + v42;
    *(_DWORD *)(a1 + 240) = v45;
    v46 = *(int **)(a1 + 248);
    if (*v46 < v45) {
      int *v46 = v45;
    }
  }
  int v47 = *(_DWORD *)(a2 + 264);
  if (v47)
  {
    v48 = (const std::string **)(*(void *)(a2 + 272) + 8);
    v49 = (std::string **)sub_188CCE4(a1 + 256, *(_DWORD *)(a2 + 264));
    sub_188FB98(a1 + 256, v49, v48, v47, **(_DWORD **)(a1 + 272) - *(_DWORD *)(a1 + 264));
    int v50 = *(_DWORD *)(a1 + 264) + v47;
    *(_DWORD *)(a1 + 264) = v50;
    v51 = *(int **)(a1 + 272);
    if (*v51 < v50) {
      int *v51 = v50;
    }
  }
  int v52 = *(_DWORD *)(a2 + 280);
  if (v52)
  {
    uint64_t v53 = *(int *)(a1 + 280);
    sub_188CA54((unsigned int *)(a1 + 280), v53 + v52);
    uint64_t v54 = *(void *)(a1 + 288);
    *(_DWORD *)(a1 + 280) += *(_DWORD *)(a2 + 280);
    memcpy((void *)(v54 + 8 * v53), *(const void **)(a2 + 288), 8 * *(int *)(a2 + 280));
  }
  int v55 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v55)
  {
    if (v55)
    {
      v56 = (long long *)(*(void *)(a2 + 296) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v57 = *(void *)(a1 + 8);
      v58 = (uint64_t *)(v57 & 0xFFFFFFFFFFFFFFFCLL);
      if (v57) {
        v58 = (uint64_t *)*v58;
      }
      sub_1881DF4((std::string **)(a1 + 296), v56, v58);
      if ((v55 & 2) == 0)
      {
LABEL_35:
        if ((v55 & 4) == 0) {
          goto LABEL_36;
        }
        goto LABEL_46;
      }
    }
    else if ((v55 & 2) == 0)
    {
      goto LABEL_35;
    }
    v59 = (long long *)(*(void *)(a2 + 304) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v60 = *(void *)(a1 + 8);
    v61 = (uint64_t *)(v60 & 0xFFFFFFFFFFFFFFFCLL);
    if (v60) {
      v61 = (uint64_t *)*v61;
    }
    sub_1881DF4((std::string **)(a1 + 304), v59, v61);
    if ((v55 & 4) == 0)
    {
LABEL_36:
      if ((v55 & 8) == 0) {
        goto LABEL_37;
      }
      goto LABEL_49;
    }
LABEL_46:
    v62 = (long long *)(*(void *)(a2 + 312) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v63 = *(void *)(a1 + 8);
    v64 = (uint64_t *)(v63 & 0xFFFFFFFFFFFFFFFCLL);
    if (v63) {
      v64 = (uint64_t *)*v64;
    }
    sub_1881DF4((std::string **)(a1 + 312), v62, v64);
    if ((v55 & 8) == 0)
    {
LABEL_37:
      if ((v55 & 0x10) == 0) {
        goto LABEL_38;
      }
      goto LABEL_52;
    }
LABEL_49:
    v65 = (long long *)(*(void *)(a2 + 320) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v66 = *(void *)(a1 + 8);
    v67 = (uint64_t *)(v66 & 0xFFFFFFFFFFFFFFFCLL);
    if (v66) {
      v67 = (uint64_t *)*v67;
    }
    sub_1881DF4((std::string **)(a1 + 320), v65, v67);
    if ((v55 & 0x10) == 0)
    {
LABEL_38:
      if ((v55 & 0x20) == 0)
      {
LABEL_58:
        if ((v55 & 0x40) != 0)
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          v74 = *(std::string **)(a1 + 344);
          if (!v74)
          {
            uint64_t v75 = *(void *)(a1 + 8);
            v76 = (void *)(v75 & 0xFFFFFFFFFFFFFFFCLL);
            if (v75) {
              v76 = (void *)*v76;
            }
            v74 = (std::string *)sub_15C1B30((uint64_t)v76);
            *(void *)(a1 + 344) = v74;
          }
          if (*(void *)(a2 + 344)) {
            v77 = *(uint64_t (****)())(a2 + 344);
          }
          else {
            v77 = &off_253F2A0;
          }
          sub_11EC100(v74, (uint64_t)v77);
        }
        if ((v55 & 0x80) != 0)
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          v78 = *(std::string **)(a1 + 352);
          if (!v78)
          {
            uint64_t v79 = *(void *)(a1 + 8);
            v80 = (void *)(v79 & 0xFFFFFFFFFFFFFFFCLL);
            if (v79) {
              v80 = (void *)*v80;
            }
            v78 = (std::string *)sub_15C1B30((uint64_t)v80);
            *(void *)(a1 + 352) = v78;
          }
          if (*(void *)(a2 + 352)) {
            v81 = *(uint64_t (****)())(a2 + 352);
          }
          else {
            v81 = &off_253F2A0;
          }
          sub_11EC100(v78, (uint64_t)v81);
        }
        goto LABEL_76;
      }
LABEL_55:
      v71 = (long long *)(*(void *)(a2 + 336) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 0x20u;
      uint64_t v72 = *(void *)(a1 + 8);
      v73 = (uint64_t *)(v72 & 0xFFFFFFFFFFFFFFFCLL);
      if (v72) {
        v73 = (uint64_t *)*v73;
      }
      sub_1881DF4((std::string **)(a1 + 336), v71, v73);
      goto LABEL_58;
    }
LABEL_52:
    v68 = (long long *)(*(void *)(a2 + 328) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v69 = *(void *)(a1 + 8);
    v70 = (uint64_t *)(v69 & 0xFFFFFFFFFFFFFFFCLL);
    if (v69) {
      v70 = (uint64_t *)*v70;
    }
    sub_1881DF4((std::string **)(a1 + 328), v68, v70);
    if ((v55 & 0x20) == 0) {
      goto LABEL_58;
    }
    goto LABEL_55;
  }
LABEL_76:
  if ((v55 & 0xFF00) == 0) {
    goto LABEL_87;
  }
  if ((v55 & 0x100) != 0)
  {
    *(_DWORD *)(a1 + 40) |= 0x100u;
    v83 = *(void **)(a1 + 360);
    if (!v83)
    {
      uint64_t v84 = *(void *)(a1 + 8);
      v85 = (void *)(v84 & 0xFFFFFFFFFFFFFFFCLL);
      if (v84) {
        v85 = (void *)*v85;
      }
      v83 = sub_1478C60((uint64_t)v85);
      *(void *)(a1 + 360) = v83;
    }
    if (*(void *)(a2 + 360)) {
      v86 = *(uint64_t (****)())(a2 + 360);
    }
    else {
      v86 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v83, (uint64_t)v86);
    if ((v55 & 0x200) == 0)
    {
LABEL_79:
      if ((v55 & 0x400) == 0) {
        goto LABEL_80;
      }
      goto LABEL_127;
    }
  }
  else if ((v55 & 0x200) == 0)
  {
    goto LABEL_79;
  }
  *(_DWORD *)(a1 + 40) |= 0x200u;
  v87 = *(std::string **)(a1 + 368);
  if (!v87)
  {
    uint64_t v88 = *(void *)(a1 + 8);
    v89 = (void *)(v88 & 0xFFFFFFFFFFFFFFFCLL);
    if (v88) {
      v89 = (void *)*v89;
    }
    v87 = (std::string *)sub_1786248((uint64_t)v89);
    *(void *)(a1 + 368) = v87;
  }
  if (*(void *)(a2 + 368)) {
    v90 = *(uint64_t (****)())(a2 + 368);
  }
  else {
    v90 = &off_2544490;
  }
  sub_13B15D0(v87, (uint64_t)v90);
  if ((v55 & 0x400) == 0)
  {
LABEL_80:
    if ((v55 & 0x800) == 0) {
      goto LABEL_81;
    }
    goto LABEL_135;
  }
LABEL_127:
  *(_DWORD *)(a1 + 40) |= 0x400u;
  v91 = *(std::string **)(a1 + 376);
  if (!v91)
  {
    uint64_t v92 = *(void *)(a1 + 8);
    v93 = (void *)(v92 & 0xFFFFFFFFFFFFFFFCLL);
    if (v92) {
      v93 = (void *)*v93;
    }
    v91 = (std::string *)sub_15C1B30((uint64_t)v93);
    *(void *)(a1 + 376) = v91;
  }
  if (*(void *)(a2 + 376)) {
    v94 = *(uint64_t (****)())(a2 + 376);
  }
  else {
    v94 = &off_253F2A0;
  }
  sub_11EC100(v91, (uint64_t)v94);
  if ((v55 & 0x800) == 0)
  {
LABEL_81:
    if ((v55 & 0x1000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_143;
  }
LABEL_135:
  *(_DWORD *)(a1 + 40) |= 0x800u;
  v95 = *(std::string **)(a1 + 384);
  if (!v95)
  {
    uint64_t v96 = *(void *)(a1 + 8);
    v97 = (void *)(v96 & 0xFFFFFFFFFFFFFFFCLL);
    if (v96) {
      v97 = (void *)*v97;
    }
    v95 = (std::string *)sub_17862C4((uint64_t)v97);
    *(void *)(a1 + 384) = v95;
  }
  if (*(void *)(a2 + 384)) {
    v98 = *(uint64_t (****)())(a2 + 384);
  }
  else {
    v98 = &off_25444B0;
  }
  sub_16B874C(v95, (uint64_t)v98);
  if ((v55 & 0x1000) == 0)
  {
LABEL_82:
    if ((v55 & 0x2000) == 0) {
      goto LABEL_83;
    }
    goto LABEL_144;
  }
LABEL_143:
  *(_DWORD *)(a1 + 392) = *(_DWORD *)(a2 + 392);
  if ((v55 & 0x2000) == 0)
  {
LABEL_83:
    if ((v55 & 0x4000) == 0) {
      goto LABEL_84;
    }
LABEL_145:
    *(unsigned char *)(a1 + 397) = *(unsigned char *)(a2 + 397);
    if ((v55 & 0x8000) == 0) {
      goto LABEL_86;
    }
    goto LABEL_85;
  }
LABEL_144:
  *(unsigned char *)(a1 + 396) = *(unsigned char *)(a2 + 396);
  if ((v55 & 0x4000) != 0) {
    goto LABEL_145;
  }
LABEL_84:
  if ((v55 & 0x8000) != 0) {
LABEL_85:
  }
    *(unsigned char *)(a1 + 398) = *(unsigned char *)(a2 + 398);
LABEL_86:
  *(_DWORD *)(a1 + 40) |= v55;
LABEL_87:
  if ((v55 & 0xFF0000) == 0) {
    goto LABEL_98;
  }
  if ((v55 & 0x10000) != 0)
  {
    *(unsigned char *)(a1 + 399) = *(unsigned char *)(a2 + 399);
    if ((v55 & 0x20000) == 0)
    {
LABEL_90:
      if ((v55 & 0x40000) == 0) {
        goto LABEL_91;
      }
      goto LABEL_149;
    }
  }
  else if ((v55 & 0x20000) == 0)
  {
    goto LABEL_90;
  }
  *(_DWORD *)(a1 + 400) = *(_DWORD *)(a2 + 400);
  if ((v55 & 0x40000) == 0)
  {
LABEL_91:
    if ((v55 & 0x80000) == 0) {
      goto LABEL_92;
    }
    goto LABEL_150;
  }
LABEL_149:
  *(_DWORD *)(a1 + 404) = *(_DWORD *)(a2 + 404);
  if ((v55 & 0x80000) == 0)
  {
LABEL_92:
    if ((v55 & 0x100000) == 0) {
      goto LABEL_93;
    }
    goto LABEL_151;
  }
LABEL_150:
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  if ((v55 & 0x100000) == 0)
  {
LABEL_93:
    if ((v55 & 0x200000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_152;
  }
LABEL_151:
  *(_DWORD *)(a1 + 416) = *(_DWORD *)(a2 + 416);
  if ((v55 & 0x200000) == 0)
  {
LABEL_94:
    if ((v55 & 0x400000) == 0) {
      goto LABEL_95;
    }
LABEL_153:
    *(unsigned char *)(a1 + 421) = *(unsigned char *)(a2 + 421);
    if ((v55 & 0x800000) == 0) {
      goto LABEL_97;
    }
    goto LABEL_96;
  }
LABEL_152:
  *(unsigned char *)(a1 + 420) = *(unsigned char *)(a2 + 420);
  if ((v55 & 0x400000) != 0) {
    goto LABEL_153;
  }
LABEL_95:
  if ((v55 & 0x800000) != 0) {
LABEL_96:
  }
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
LABEL_97:
  *(_DWORD *)(a1 + 40) |= v55;
LABEL_98:
  if ((v55 & 0x3F000000) == 0) {
    goto LABEL_107;
  }
  if ((v55 & 0x1000000) != 0)
  {
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    if ((v55 & 0x2000000) == 0)
    {
LABEL_101:
      if ((v55 & 0x4000000) == 0) {
        goto LABEL_102;
      }
      goto LABEL_157;
    }
  }
  else if ((v55 & 0x2000000) == 0)
  {
    goto LABEL_101;
  }
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  if ((v55 & 0x4000000) == 0)
  {
LABEL_102:
    if ((v55 & 0x8000000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_158;
  }
LABEL_157:
  *(_DWORD *)(a1 + 448) = *(_DWORD *)(a2 + 448);
  if ((v55 & 0x8000000) == 0)
  {
LABEL_103:
    if ((v55 & 0x10000000) == 0) {
      goto LABEL_104;
    }
LABEL_159:
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    if ((v55 & 0x20000000) == 0) {
      goto LABEL_106;
    }
    goto LABEL_105;
  }
LABEL_158:
  *(_DWORD *)(a1 + 452) = *(_DWORD *)(a2 + 452);
  if ((v55 & 0x10000000) != 0) {
    goto LABEL_159;
  }
LABEL_104:
  if ((v55 & 0x20000000) != 0) {
LABEL_105:
  }
    *(_DWORD *)(a1 + 464) = *(_DWORD *)(a2 + 464);
LABEL_106:
  *(_DWORD *)(a1 + 40) |= v55;
LABEL_107:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v82 = *(void *)(a2 + 8);
  if (v82)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v82 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16BD4AC(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_16B95B4(a1);
    sub_16BCBA4(a1, a2);
  }
}

uint64_t sub_16BD4F8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 41) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_136AEA0(*(void *)(a1 + 360));
    if (result) {
      return 1;
    }
  }
  return result;
}

void sub_16BD53C(uint64_t a1, uint64_t a2)
{
  sub_1885338((uint64_t *)(a1 + 16), (uint64_t *)(a2 + 16));
  uint64_t v4 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a2 + 8) = v4;
  LODWORD(v4) = *(_DWORD *)(a1 + 40);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a2 + 40) = v4;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v6;
  uint64_t v7 = *(void *)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a2 + 64) = v7;
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v9 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a2 + 72) = v8;
  *(void *)(a2 + 80) = v9;
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a2 + 88) = v10;
  uint64_t v11 = *(void *)(a1 + 96);
  uint64_t v12 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  uint64_t v13 = *(void *)(a1 + 112);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a2 + 112) = v13;
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a2 + 120) = v14;
  *(void *)(a2 + 128) = v15;
  uint64_t v16 = *(void *)(a1 + 136);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a2 + 136) = v16;
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v18 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(void *)(a2 + 144) = v17;
  *(void *)(a2 + 152) = v18;
  uint64_t v19 = *(void *)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a2 + 160) = v19;
  uint64_t v20 = *(void *)(a1 + 168);
  uint64_t v21 = *(void *)(a1 + 176);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a2 + 168) = v20;
  *(void *)(a2 + 176) = v21;
  uint64_t v22 = *(void *)(a1 + 184);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a2 + 184) = v22;
  uint64_t v23 = *(void *)(a1 + 192);
  uint64_t v24 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(void *)(a2 + 192) = v23;
  *(void *)(a2 + 200) = v24;
  uint64_t v25 = *(void *)(a1 + 208);
  uint64_t v26 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a2 + 208) = v25;
  *(void *)(a2 + 216) = v26;
  uint64_t v27 = *(void *)(a1 + 224);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a2 + 224) = v27;
  uint64_t v28 = *(void *)(a1 + 232);
  uint64_t v29 = *(void *)(a1 + 240);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(void *)(a2 + 232) = v28;
  *(void *)(a2 + 240) = v29;
  uint64_t v30 = *(void *)(a1 + 248);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a2 + 248) = v30;
  uint64_t v31 = *(void *)(a1 + 256);
  uint64_t v32 = *(void *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(void *)(a2 + 256) = v31;
  *(void *)(a2 + 264) = v32;
  uint64_t v33 = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a2 + 272) = v33;
  uint64_t v34 = *(void *)(a1 + 280);
  uint64_t v35 = *(void *)(a1 + 288);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(void *)(a2 + 280) = v34;
  *(void *)(a2 + 288) = v35;
  uint64_t v36 = *(void *)(a2 + 296);
  *(void *)(a2 + 296) = *(void *)(a1 + 296);
  *(void *)(a1 + 296) = v36;
  uint64_t v37 = *(void *)(a2 + 304);
  *(void *)(a2 + 304) = *(void *)(a1 + 304);
  *(void *)(a1 + 304) = v37;
  uint64_t v38 = *(void *)(a2 + 312);
  *(void *)(a2 + 312) = *(void *)(a1 + 312);
  *(void *)(a1 + 312) = v38;
  uint64_t v39 = *(void *)(a2 + 320);
  *(void *)(a2 + 320) = *(void *)(a1 + 320);
  *(void *)(a1 + 320) = v39;
  uint64_t v40 = *(void *)(a2 + 328);
  *(void *)(a2 + 328) = *(void *)(a1 + 328);
  *(void *)(a1 + 328) = v40;
  uint64_t v41 = *(void *)(a2 + 336);
  *(void *)(a2 + 336) = *(void *)(a1 + 336);
  *(void *)(a1 + 336) = v41;
  sub_124F1D8((void *)(a1 + 344), a2 + 344);
  int v42 = *(_DWORD *)(a1 + 464);
  *(_DWORD *)(a1 + 464) = *(_DWORD *)(a2 + 464);
  *(_DWORD *)(a2 + 464) = v42;
}

void *sub_16BD750@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Entity");
}

uint64_t sub_16BD760(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D0C98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 48) = 0;
  return a1;
}

void sub_16BD7C8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16BD7F8(void *a1)
{
  v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16BD874(void *a1)
{
  sub_16BD7F8(a1);

  operator delete();
}

unsigned char *sub_16BD8AC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16BD904(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_29;
        }
        v5 |= 1u;
        uint64_t v12 = v8 + 1;
        uint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v35 = v12;
          *(unsigned char *)(a1 + 48) = v13 != 0;
          goto LABEL_39;
        }
        uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v13);
        uint64_t v35 = v27;
        *(unsigned char *)(a1 + 48) = v28 != 0;
        if (v27) {
          goto LABEL_39;
        }
        goto LABEL_52;
      case 2u:
        if (v9 != 16) {
          goto LABEL_29;
        }
        v5 |= 2u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v29 = (char *)sub_188C138((uint64_t)v8, v16);
          uint64_t v35 = v29;
          *(unsigned char *)(a1 + 49) = v30 != 0;
          if (!v29) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v35 = v15;
          *(unsigned char *)(a1 + 49) = v16 != 0;
        }
        goto LABEL_39;
      case 3u:
        if (v9 != 24) {
          goto LABEL_29;
        }
        v5 |= 4u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v35 = v31;
          *(unsigned char *)(a1 + 50) = v32 != 0;
          if (!v31) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v35 = v18;
          *(unsigned char *)(a1 + 50) = v19 != 0;
        }
        goto LABEL_39;
      case 4u:
        if (v9 != 32) {
          goto LABEL_29;
        }
        v5 |= 8u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v35 = v33;
          *(unsigned char *)(a1 + 51) = v34 != 0;
          if (!v33) {
            goto LABEL_52;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v35 = v21;
          *(unsigned char *)(a1 + 51) = v22 != 0;
        }
        goto LABEL_39;
      default:
LABEL_29:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v35;
            }
            uint64_t v25 = sub_1885AC0(v9, v26, v8, a3);
          }
          else
          {
            uint64_t v25 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25446B0, (uint64_t *)(a1 + 8), a3);
          }
          uint64_t v35 = (char *)v25;
          if (!v25) {
            goto LABEL_52;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v35;
    }
  }
}

char *sub_16BDC60(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v7 = *(unsigned char *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v7;
    v4 += 2;
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v8 = *(unsigned char *)(a1 + 49);
  *char v4 = 16;
  v4[1] = v8;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 50);
  *char v4 = 24;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 8) != 0)
  {
LABEL_15:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 51);
    *char v4 = 32;
    v4[1] = v10;
    v4 += 2;
  }
LABEL_18:
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_16BDE20(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) != 0)
  {
    uint64_t v4 = result + 2;
    if ((v3 & 1) == 0) {
      uint64_t v4 = result;
    }
    if ((v3 & 2) != 0) {
      v4 += 2;
    }
    if ((v3 & 4) != 0) {
      v4 += 2;
    }
    if ((v3 & 8) != 0) {
      uint64_t result = v4 + 2;
    }
    else {
      uint64_t result = v4;
    }
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16BDEB4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_14;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
      goto LABEL_7;
    }
LABEL_14:
    *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16BDF6C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16BDF74@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EntityFilter");
}

uint64_t sub_16BDF84(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D0D18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_16BE030(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16BE060(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16BE100(uint64_t a1)
{
  sub_16BE060(a1);

  operator delete();
}

uint64_t sub_16BE138(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16BE17C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      int v14 = (uint64_t *)*v14;
    }
    uint64_t v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    uint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = *(char **)v17;
    }
    uint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_16BE2D4(uint64_t a1, char *__dst, void *a3)
{
  int v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16BE3A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_16BE424()
{
  return 1;
}

void *sub_16BE42C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BasemapRegionMetadata");
}

uint64_t sub_16BE43C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D0D98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  return a1;
}

void sub_16BE4B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16BE4E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D0D98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18710C8(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void sub_16BE5F8(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16BE648(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F3BC(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16BE6D0(void *a1)
{
  sub_16BE648(a1);

  operator delete();
}

uint64_t sub_16BE708(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16BF04C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(unsigned char *)(v6 + 64) = 1;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_16BE798(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v27 + 2;
      }
    }
    uint64_t v27 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_23:
      uint64_t v27 = v15;
      *(unsigned char *)(a1 + 72) = v16 != 0;
      int v5 = 1;
      goto LABEL_37;
    }
    uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v27 = v25;
    *(unsigned char *)(a1 + 72) = v26 != 0;
    int v5 = 1;
    if (!v25) {
      goto LABEL_44;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v27 = v18 + 1;
      int v20 = *(_DWORD **)(a1 + 64);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 56) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_17864E0(*(void *)(a1 + 48));
        uint64_t v22 = sub_188CDC8(a1 + 48, v23);
        uint64_t v19 = (unsigned __int8 *)v27;
      }
      uint64_t v18 = (char *)sub_16BEA1C(a3, v22, v19);
      uint64_t v27 = v18;
      if (!v18) {
        goto LABEL_44;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_37;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        BOOL v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        BOOL v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v27;
      }
      int v14 = sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      int v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2544708, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v27 = (char *)v14;
    if (!v14) {
      goto LABEL_44;
    }
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v27;
}

uint64_t sub_16BEA1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16BF1E0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16BEAAC(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16BF4F4(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v11 = *(unsigned char *)(a1 + 72);
    *a2 = 16;
    a2[1] = v11;
    a2 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return a2;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(a2, v15, (int)v16);
    a2 += v17;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, a2);
}

uint64_t sub_16BEC50(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16BF700(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16BED10(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18710C8((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    char v9 = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(unsigned char *)(a1 + 72) = v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16BEE08(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16BFAD8(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_16BEE70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnnotatedItemList.PictureItemContainer");
}

uint64_t sub_16BEE80(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D0E18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_16BEEF4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16BEF24(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2544758)
  {
    uint64_t v6 = *(void *)(a1 + 64);
    if (v6)
    {
      sub_16EB850(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16BF014(uint64_t a1)
{
  sub_16BEF24(a1);

  operator delete();
}

uint64_t sub_16BF04C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_16BF128(*(void *)(a1 + 64));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16BF128(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16EAF38(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v6 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_16BF1E0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v11 = *(void **)(a1 + 64);
        if (!v11)
        {
          unint64_t v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unint64_t v12 = (void *)*v12;
          }
          uint64_t v11 = sub_1788710((uint64_t)v12);
          *(void *)(a1 + 64) = v11;
          uint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v13 = sub_1550A68(a3, (uint64_t)v11, v7);
        goto LABEL_24;
      case 2u:
        if (v8 != 18) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 48);
        goto LABEL_23;
      case 3u:
        if (v8 != 26) {
          goto LABEL_35;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 56);
LABEL_23:
        uint64_t v18 = (std::string *)sub_1880F84(v16, v15);
        uint64_t v13 = (uint64_t)sub_188C244(v18, *(char **)v27, (uint64_t)a3);
        goto LABEL_24;
      case 4u:
        if (v8 != 32) {
          goto LABEL_35;
        }
        uint64_t v19 = (char *)(v7 + 1);
        unint64_t v20 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v22 - 128));
          if (!*(void *)v27) {
            return 0;
          }
          unint64_t v20 = v25;
        }
        else
        {
          uint64_t v19 = (char *)(v7 + 2);
LABEL_30:
          *(void *)uint64_t v27 = v19;
        }
        if (v20 > 3)
        {
          if (*v6) {
            uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v20, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 72) = v20;
        }
        goto LABEL_33;
      default:
LABEL_35:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              BOOL v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              BOOL v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = *(unsigned __int8 **)v27;
            }
            uint64_t v13 = (uint64_t)sub_1885AC0(v8, v24, (char *)v7, a3);
          }
          else
          {
            uint64_t v13 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2544758, (uint64_t *)(a1 + 8), a3);
          }
LABEL_24:
          *(void *)uint64_t v27 = v13;
          if (!v13) {
            return 0;
          }
LABEL_33:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

char *sub_16BF4F4(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16EBC08(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0) {
    goto LABEL_20;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v10 = *(int *)(a1 + 72);
  *uint64_t v4 = 32;
  v4[1] = v10;
  if (v10 > 0x7F)
  {
    v4[1] = v10 | 0x80;
    unint64_t v11 = v10 >> 7;
    v4[2] = v10 >> 7;
    v4 += 3;
    if (v10 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v12 = v11 >> 14;
        v11 >>= 7;
        *v4++ = v11;
      }
      while (v12);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_20:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16BF700(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_18;
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v8 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v11 = sub_16EBD94(*(void *)(a1 + 64));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_14:
  int v12 = *(_DWORD *)(a1 + 72);
  if (v12 < 0) {
    uint64_t v13 = 11;
  }
  else {
    uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v13;
LABEL_18:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_16BF870(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    int v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      int v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_18:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void **)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_1788710((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v16 = &off_2545A18;
    }
    sub_16BF9C4((uint64_t)v13, (uint64_t)v16);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16BF9C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871AEC((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v10 = *(void *)(a1 + 8);
    uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
    if (v10) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 72), v9, v11);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16BFAD8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 64) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_16BFB20(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16BFB28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnnotatedItemList.PictureItem");
}

void *sub_16BFB38(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D0E98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_16BFBA8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16BFBD8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D0E98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871154(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_16BFD20()
{
}

uint64_t sub_16BFD90(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_25447A8)
  {
    uint64_t v6 = *(void **)(a1 + 72);
    if (v6)
    {
      sub_16C07D4(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_186F43C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16BFE5C(uint64_t a1)
{
  sub_16BFD90(a1);

  operator delete();
}

uint64_t sub_16BFE94(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_16C0E50(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_16BFF2C(*(void *)(a1 + 72));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_16BFF2C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0x300000004;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16BFF58(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v24 + 1;
    unsigned int v8 = *v24;
    if (*v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v24 + 2;
      }
    }
    BOOL v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v14 = *(void *)(a1 + 72);
    if (!v14)
    {
      unint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unint64_t v15 = (void *)*v15;
      }
      sub_1786598((uint64_t)v15);
      uint64_t v14 = v16;
      *(void *)(a1 + 72) = v16;
      char v7 = v24;
    }
    uint64_t v13 = sub_16C0234(a3, v14, (unsigned __int8 *)v7);
LABEL_37:
    BOOL v24 = v13;
    if (!v13) {
      return 0;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      uint64_t v18 = (unsigned __int8 *)(v17 + 1);
      BOOL v24 = v17 + 1;
      uint64_t v19 = *(_DWORD **)(a1 + 64);
      if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
      {
        *(_DWORD *)(a1 + 56) = v20 + 1;
        uint64_t v21 = *(void *)&v19[2 * v20 + 2];
      }
      else
      {
        int v22 = sub_1786618(*(void *)(a1 + 48));
        uint64_t v21 = sub_188CDC8(a1 + 48, (uint64_t)v22);
        uint64_t v18 = (unsigned __int8 *)v24;
      }
      uint64_t v17 = (char *)sub_16C01A4(a3, v21, v18);
      BOOL v24 = v17;
      if (!v17) {
        return 0;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 10) {
        goto LABEL_38;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        BOOL v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        BOOL v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v7 = v24;
      }
      uint64_t v13 = (char *)sub_1885AC0(v8, v23, v7, a3);
    }
    else
    {
      uint64_t v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25447A8, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_37;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v24;
  }
  return 0;
}

uint64_t sub_16C01A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C0ED4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16C0234(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C0880(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16C02C4(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16C1070(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v11 = *(void *)(a1 + 72);
    *a2 = 18;
    unsigned int v12 = *(_DWORD *)(v11 + 20);
    a2[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, a2 + 1);
    }
    else {
      uint64_t v13 = a2 + 2;
    }
    a2 = sub_16C0A70(v11, (unint64_t)v13, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return a2;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*a3 - (void)a2 >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(a2, v17, (int)v18);
    a2 += v19;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, a2);
}

uint64_t sub_16C0494(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16C1160(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v10 = sub_16C0C14(*(void *)(a1 + 72));
    v4 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v4 += v14;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16C057C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871154((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v9 = *(uint64_t (****)())(a2 + 72);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v10 = *(std::string **)(a1 + 72);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      unsigned int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        unsigned int v12 = (void *)*v12;
      }
      sub_1786598((uint64_t)v12);
      *(void *)(a1 + 72) = v10;
      uint64_t v9 = *(uint64_t (****)())(a2 + 72);
    }
    if (v9) {
      unint64_t v13 = v9;
    }
    else {
      unint64_t v13 = &off_25447F8;
    }
    sub_117EF04(v10, (uint64_t)v13);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16C06AC(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_18856CC(*(void *)(*(void *)(a1 + 64) + 8 * v2) + 16);
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_16C0718@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnnotatedItemList.TextItemContainer");
}

uint64_t sub_16C0728(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D0F18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_16C07A4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C07D4(void *a1)
{
  BOOL v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C0848(void *a1)
{
  sub_16C07D4(a1);

  operator delete();
}

char *sub_16C0880(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    unint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    unint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      unint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    unint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      unint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    BOOL v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    unint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v25;
    }
    unint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  unint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_16C0A70(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16C0C14(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16C0CB8()
{
  return 1;
}

void *sub_16C0CC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnnotatedItemList.TextItemDisplayConfig");
}

void *sub_16C0CD0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D0F98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  return a1;
}

void sub_16C0D40(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C0D70(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  unint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C0E18(uint64_t a1)
{
  sub_16C0D70(a1);

  operator delete();
}

unsigned char *sub_16C0E50(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16C0ED4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  char v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
    if (v12) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
    unsigned int v11 = (void *)sub_188C244(v14, *(char **)v17, (uint64_t)a3);
LABEL_20:
    *(void *)uint64_t v17 = v11;
    if (!v11) {
      goto LABEL_27;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if ((v7 - 8000) >> 6 > 0x7C)
    {
      if (*v5)
      {
        unint64_t v15 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = *(char **)v17;
      }
      unsigned int v11 = sub_1885AC0(v7, v15, v6, a3);
    }
    else
    {
      unsigned int v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2544818, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_27:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_16C1070(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16C1160(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    result += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16C1200(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v4 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = (std::string **)(a1 + 48);
    uint64_t v6 = *(void *)(a1 + 8);
    unint64_t v7 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
    if (v6) {
      unint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4(v5, v4, v7);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16C1298(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C12A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnnotatedItemList.TextItem");
}

uint64_t sub_16C12B0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1018;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = 0;
  return a1;
}

void sub_16C1324(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C1354(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D1018;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

void sub_16C149C()
{
}

uint64_t sub_16C150C(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2544850)
  {
    uint64_t v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_16BE648(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_16BFD90(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C1600(uint64_t a1)
{
  sub_16C150C(a1);

  operator delete();
}

uint64_t sub_16C1638(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_14;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_14;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  *(unsigned char *)unint64_t v6 = 0;
  *(unsigned char *)(v6 + 23) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_14:
  uint64_t result = sub_16BE708(*(void *)(a1 + 56));
  if ((v3 & 4) != 0) {
LABEL_5:
  }
    uint64_t result = sub_16BFE94(*(void *)(a1 + 64));
LABEL_6:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 64) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16C16F0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)uint64_t v27 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (std::string *)sub_1880F84((void *)(a1 + 48), v12);
        uint64_t v14 = (void *)sub_188C244(v13, *(char **)v27, (uint64_t)a3);
        goto LABEL_41;
      case 2u:
        if (v8 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 56);
        if (!v15)
        {
          int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v16 = (void *)*v16;
          }
          uint64_t v15 = sub_1786484((uint64_t)v16);
          *(void *)(a1 + 56) = v15;
          uint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_16C1A14(a3, v15, v7);
        goto LABEL_41;
      case 3u:
        if (v8 != 26) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v17 = *(void **)(a1 + 64);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_178653C((uint64_t)v18);
          *(void *)(a1 + 64) = v17;
          uint64_t v7 = *(unsigned __int8 **)v27;
        }
        uint64_t v14 = sub_16C1AA4(a3, (uint64_t)v17, v7);
        goto LABEL_41;
      case 4u:
        if (v8 != 32) {
          goto LABEL_32;
        }
        int v19 = (char *)(v7 + 1);
        unint64_t v20 = *v7;
        if (((char)*v7 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v21 = *v19;
        int v22 = v20 + (v21 << 7);
        unint64_t v20 = (v22 - 128);
        if (v21 < 0)
        {
          *(void *)uint64_t v27 = sub_188C138((uint64_t)v7, (v22 - 128));
          if (!*(void *)v27) {
            return 0;
          }
          unint64_t v20 = v25;
        }
        else
        {
          int v19 = (char *)(v7 + 2);
LABEL_29:
          *(void *)uint64_t v27 = v19;
        }
        if (v20 > 1)
        {
          if (*v6) {
            uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v20, v26);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 72) = v20;
        }
        goto LABEL_42;
      default:
LABEL_32:
        if (v8) {
          BOOL v23 = (v8 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              int v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v7 = *(unsigned __int8 **)v27;
            }
            uint64_t v14 = sub_1885AC0(v8, v24, (char *)v7, a3);
          }
          else
          {
            uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2544850, (uint64_t *)(a1 + 8), a3);
          }
LABEL_41:
          *(void *)uint64_t v27 = v14;
          if (!v14) {
            return 0;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
            return *(void *)v27;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v27;
    }
  }
}

char *sub_16C1A14(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16BE798(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16C1AA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16BFF58(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16C1B34(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 56);
  *uint64_t v4 = 18;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_16BEAAC(v7, v9, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
LABEL_13:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  *uint64_t v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_16C02C4(v10, v12, a3);
  if ((v6 & 8) != 0)
  {
LABEL_19:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 72);
    *uint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_25:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_16C1D84(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_16;
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v8 = sub_16BEC50(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v9 = sub_16C0494(*(void *)(a1 + 64));
  v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0) {
    goto LABEL_16;
  }
LABEL_12:
  int v10 = *(_DWORD *)(a1 + 72);
  if (v10 < 0) {
    uint64_t v11 = 11;
  }
  else {
    uint64_t v11 = ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v11;
LABEL_16:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v3 += v15;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_16C1EE0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void *)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1786484((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v13 = &off_2544708;
    }
    sub_16BED10(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_23:
    *(_DWORD *)(a1 + 40) |= 4u;
    unint64_t v14 = *(void **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v14 = sub_178653C((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v17 = &off_25447A8;
    }
    sub_16C057C((uint64_t)v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16C204C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_16BEE08(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_16C06AC(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16C20A4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnnotatedItemList");
}

uint64_t sub_16C20B4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D1098;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16C2124(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C2154(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F4BC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C21DC(void *a1)
{
  sub_16C2154(a1);

  operator delete();
}

uint64_t sub_16C2214(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16B6BB4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_16C2298(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1786128(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, (uint64_t)v17);
            unint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = sub_16C247C(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_25448A0, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_16C247C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16B6BD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16C250C(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        uint64_t v10 = a2 + 2;
      }
      a2 = sub_16B6DC8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_16C2674(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16B6F6C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void sub_16C2728(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18711E0((std::string *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16C2804(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C280C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AnnotatedItemListFilter");
}

uint64_t sub_16C281C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1118;
  sub_1882BC4(a1 + 16, a2);
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_16C2890(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C28C4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D1118;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  if ((v6 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  return a1;
}

void sub_16C2A7C()
{
}

void *sub_16C2B00(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16C2B8C((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_16C2B8C(uint64_t result)
{
  if ((uint64_t (***)())result != &off_25448E8)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 48))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(result + 56))
    {
      sub_15BC200();
      operator delete();
    }
    uint64_t v2 = *(void *)(result + 64);
    if (v2)
    {
      sub_16BE060(v2);
      operator delete();
    }
    if (*(void *)(v1 + 72))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t result = *(void *)(v1 + 80);
    if (result)
    {
      sub_15B0994();
      operator delete();
    }
  }
  return result;
}

void sub_16C2C78(void *a1)
{
  sub_16C2B00(a1);

  operator delete();
}

uint64_t sub_16C2CB0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 48));
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_16:
      uint64_t result = sub_16BE138(*(void *)(a1 + 64));
      if ((v3 & 8) == 0)
      {
LABEL_6:
        if ((v3 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_17;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t result = sub_15BC23C(*(void *)(a1 + 56));
  if ((v3 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_17:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 72));
  if ((v3 & 0x10) != 0) {
LABEL_7:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 80));
LABEL_8:
  if ((v3 & 0xE0) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(void *)(a1 + 96) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

char *sub_16C2D6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (v12) {
          goto LABEL_51;
        }
        uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_15C1918((uint64_t)v13);
        *(void *)(a1 + 48) = v12;
        goto LABEL_50;
      case 2u:
        if (v9 != 17) {
          goto LABEL_55;
        }
        v5 |= 0x20u;
        *(void *)(a1 + 88) = *(void *)v8;
        uint64_t v34 = v8 + 8;
        goto LABEL_53;
      case 4u:
        if (v9 != 34) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        unint64_t v14 = *(void **)(a1 + 56);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v15 = (void *)*v15;
          }
          unint64_t v14 = sub_15C221C((uint64_t)v15);
          *(void *)(a1 + 56) = v14;
          uint64_t v8 = v34;
        }
        uint64_t v16 = (char *)sub_123B1B4(a3, (uint64_t)v14, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 5u:
        if (v9 != 40) {
          goto LABEL_55;
        }
        v5 |= 0x40u;
        uint64_t v17 = v8 + 1;
        uint64_t v18 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_26;
        }
        int v19 = *v17;
        uint64_t v18 = v18 + (v19 << 7) - 128;
        if (v19 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v18);
          uint64_t v34 = v30;
          *(unsigned char *)(a1 + 96) = v31 != 0;
          if (!v30) {
            goto LABEL_75;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_26:
          uint64_t v34 = v17;
          *(unsigned char *)(a1 + 96) = v18 != 0;
        }
        goto LABEL_53;
      case 6u:
        if (v9 != 48) {
          goto LABEL_55;
        }
        uint64_t v20 = v8 + 1;
        unint64_t v21 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v22 = *v20;
        int v23 = v21 + (v22 << 7);
        unint64_t v21 = (v23 - 128);
        if (v22 < 0)
        {
          uint64_t v34 = (char *)sub_188C138((uint64_t)v8, (v23 - 128));
          if (!v34) {
            goto LABEL_75;
          }
          unint64_t v21 = v32;
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_31:
          uint64_t v34 = v20;
        }
        if (v21 > 5)
        {
          if (*v7) {
            uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(6, v21, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          *(_DWORD *)(a1 + 100) = v21;
        }
        goto LABEL_53;
      case 7u:
        if (v9 != 58) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        int v24 = *(void **)(a1 + 64);
        if (!v24)
        {
          unint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v25 = (void *)*v25;
          }
          int v24 = sub_1786400((uint64_t)v25);
          *(void *)(a1 + 64) = v24;
          uint64_t v8 = v34;
        }
        uint64_t v16 = (char *)sub_119BC44(a3, (uint64_t)v24, (unsigned __int8 *)v8);
        goto LABEL_52;
      case 8u:
        if (v9 != 66) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v12 = *(void *)(a1 + 72);
        if (v12) {
          goto LABEL_51;
        }
        uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v26 = (void *)*v26;
        }
        uint64_t v12 = sub_15C1918((uint64_t)v26);
        *(void *)(a1 + 72) = v12;
        goto LABEL_50;
      case 9u:
        if (v9 != 74) {
          goto LABEL_55;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v12 = *(void *)(a1 + 80);
        if (v12) {
          goto LABEL_51;
        }
        uint64_t v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v12 = sub_15C1918((uint64_t)v27);
        *(void *)(a1 + 80) = v12;
LABEL_50:
        uint64_t v8 = v34;
LABEL_51:
        uint64_t v16 = sub_1198F14(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_52;
      default:
LABEL_55:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v34;
            }
            uint64_t v16 = (char *)sub_1885AC0(v9, v29, v8, a3);
          }
          else
          {
            uint64_t v16 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25448E8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_52:
          uint64_t v34 = v16;
          if (!v16) {
            goto LABEL_75;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_75:
        }
          uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v34;
    }
  }
}

char *sub_16C31C8(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v7, v9, a3);
    if ((v6 & 0x20) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 0x20) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 88);
  *uint64_t v4 = 17;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_16:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 56);
  *uint64_t v4 = 34;
  unsigned int v12 = *(_DWORD *)(v11 + 20);
  v4[1] = v12;
  if (v12 > 0x7F) {
    uint64_t v13 = sub_188A9CC(v12, v4 + 1);
  }
  else {
    uint64_t v13 = v4 + 2;
  }
  uint64_t v4 = sub_15BC3D8(v11, v13, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 96);
  *uint64_t v4 = 40;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x80) != 0)
  {
LABEL_25:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(int *)(a1 + 100);
    *uint64_t v4 = 48;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_31:
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 64);
    *uint64_t v4 = 58;
    unsigned int v19 = *(_DWORD *)(v18 + 20);
    v4[1] = v19;
    if (v19 > 0x7F) {
      uint64_t v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      uint64_t v20 = v4 + 2;
    }
    uint64_t v4 = sub_16BE2D4(v18, v20, a3);
    if ((v6 & 8) == 0)
    {
LABEL_33:
      if ((v6 & 0x10) == 0) {
        goto LABEL_53;
      }
      goto LABEL_47;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_33;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 72);
  *uint64_t v4 = 66;
  unsigned int v22 = *(_DWORD *)(v21 + 44);
  v4[1] = v22;
  if (v22 > 0x7F) {
    int v23 = sub_188A9CC(v22, v4 + 1);
  }
  else {
    int v23 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v21, v23, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_47:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v24 = *(void *)(a1 + 80);
    *uint64_t v4 = 74;
    unsigned int v25 = *(_DWORD *)(v24 + 44);
    v4[1] = v25;
    if (v25 > 0x7F) {
      uint64_t v26 = sub_188A9CC(v25, v4 + 1);
    }
    else {
      uint64_t v26 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v24, v26, a3);
  }
LABEL_53:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if ((v27 & 1) == 0) {
    return v4;
  }
  unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v29 + 31) < 0)
  {
    uint64_t v30 = *(void **)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
  }
  else
  {
    uint64_t v30 = (void *)(v29 + 8);
    LODWORD(v31) = *(unsigned __int8 *)(v29 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v31)
  {
    uint64_t v32 = (int)v31;
    memcpy(v4, v30, (int)v31);
    v4 += v32;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v30, v31, v4);
}

uint64_t sub_16C35A4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 40);
  if (!v3) {
    goto LABEL_18;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v11 = sub_15B0D90(*(void *)(a1 + 48));
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_22;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v12 = sub_15BC4A4(*(void *)(a1 + 56));
  v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
LABEL_23:
    uint64_t v14 = sub_15B0D90(*(void *)(a1 + 72));
    v2 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_22:
  uint64_t v13 = sub_16BE3A0(*(void *)(a1 + 64));
  v2 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) != 0) {
    goto LABEL_23;
  }
LABEL_6:
  if ((v3 & 0x10) != 0)
  {
LABEL_7:
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 80));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v5 = v2 + 9;
  if ((v3 & 0x20) == 0) {
    uint64_t v5 = v2;
  }
  if ((v3 & 0x40) != 0) {
    uint64_t v2 = v5 + 2;
  }
  else {
    uint64_t v2 = v5;
  }
  if (v3 < 0)
  {
    int v6 = *(_DWORD *)(a1 + 100);
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v6 >= 0) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 11;
    }
    v2 += v8;
  }
LABEL_18:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v15 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_16C3764(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C1918((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_253F1A0;
      }
      sub_15B0E24(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_32;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(std::string **)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_15C221C((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      uint64_t v13 = &off_253F5C0;
    }
    sub_12329D0(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_40;
    }
LABEL_32:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v14 = *(std::string **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_1786400((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v17 = &off_25446E8;
    }
    sub_12329D0(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_48;
    }
LABEL_40:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v18 = *(void *)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_253F1A0;
    }
    sub_15B0E24(v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_56;
    }
LABEL_48:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v22 = *(void *)(a1 + 80);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_15C1918((uint64_t)v24);
      *(void *)(a1 + 80) = v22;
    }
    if (*(void *)(a2 + 80)) {
      unsigned int v25 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unsigned int v25 = &off_253F1A0;
    }
    sub_15B0E24(v22, (uint64_t)v25);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_57;
    }
LABEL_56:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_11;
    }
LABEL_57:
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16C3998(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_15BC528(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 72));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16C3A18@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceInfo");
}

uint64_t sub_16C3A28(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1198;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16C3A8C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C3ABC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C3B38(void *a1)
{
  sub_16C3ABC(a1);

  operator delete();
}

unsigned char *sub_16C3B70(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16C3BC0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2544950, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16C3D10(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16C3DDC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16C3E34(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C3E3C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlaceInfoFilter");
}

uint64_t sub_16C3E4C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24D1218;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1301B24(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_16C3F2C(_Unwind_Exception *a1)
{
  sub_1301628(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C3F70(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1301628(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C3FF0(void *a1)
{
  sub_16C3F70(a1);

  operator delete();
}

unsigned char *sub_16C4028(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 4) + 8);
    do
    {
      unint64_t v4 = *v3++;
      uint64_t result = sub_15BB0EC(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_16C40A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_15C219C(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_11FF458(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_16C4244(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15BB7A0(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16C4388(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    unint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    unint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15BBC64(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_16C4438(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1301B24((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16C4508(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15BC024(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_16C4560@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RoadAccessInfo");
}

uint64_t sub_16C4570(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1298;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16C45D4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C4604(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C4680(void *a1)
{
  sub_16C4604(a1);

  operator delete();
}

unsigned char *sub_16C46B8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16C4708(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      int v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          int v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v13 = (std::string *)sub_188DBD8(v5);
          int v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25449B0, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16C4858(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16C4924(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16C497C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C4984@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RoadAccessInfoFilter");
}

uint64_t sub_16C4994(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1318;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 72) = 0;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  return a1;
}

void sub_16C4A04(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C4A38(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D1318;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  int v6 = *(_DWORD *)(a2 + 40);
  if (v6) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void sub_16C4B80()
{
}

uint64_t sub_16C4BF4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_25449E0)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
    uint64_t v7 = *(void *)(a1 + 64);
    if (v7)
    {
      sub_17831A4(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C4CEC(uint64_t a1)
{
  sub_16C4BF4(a1);

  operator delete();
}

uint64_t sub_16C4D24(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 48));
      if ((v3 & 2) == 0)
      {
LABEL_4:
        if ((v3 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v3 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(a1 + 56));
    if ((v3 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_16C4DC0(*(void *)(a1 + 64));
  }
LABEL_6:
  if ((v3 & 0x18) != 0) {
    *(void *)(a1 + 72) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16C4DC0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = sub_14152BC(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_17832AC(*(void *)(v1 + 32));
    }
  }
  if ((v2 & 0x1C) != 0)
  {
    *(_DWORD *)(v1 + 48) = 0;
    *(void *)(v1 + 40) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16C4E40(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = v24 + 1;
    unsigned int v9 = *v24;
    if (*v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v24 + 2;
      }
    }
    uint64_t v24 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 48);
        if (v12) {
          goto LABEL_20;
        }
        unint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_15C19EC((uint64_t)v13);
        *(void *)(a1 + 48) = v12;
        goto LABEL_19;
      case 2u:
        if (v9 != 18) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void *)(a1 + 56);
        if (!v12)
        {
          uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v14 = (void *)*v14;
          }
          uint64_t v12 = sub_15C19EC((uint64_t)v14);
          *(void *)(a1 + 56) = v12;
LABEL_19:
          unint64_t v8 = v24;
        }
LABEL_20:
        uint64_t v15 = sub_11E1C60(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_41;
      case 3u:
        if (v9 != 29) {
          goto LABEL_32;
        }
        int v17 = *(_DWORD *)v8;
        uint64_t v16 = v8 + 4;
        v5 |= 8u;
        *(_DWORD *)(a1 + 72) = v17;
        goto LABEL_25;
      case 4u:
        if (v9 != 37) {
          goto LABEL_32;
        }
        int v18 = *(_DWORD *)v8;
        uint64_t v16 = v8 + 4;
        v5 |= 0x10u;
        *(_DWORD *)(a1 + 76) = v18;
LABEL_25:
        uint64_t v24 = v16;
        goto LABEL_42;
      case 5u:
        if (v9 != 42) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v19 = *(void *)(a1 + 64);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          sub_178ED2C((uint64_t)v20);
          uint64_t v19 = v21;
          *(void *)(a1 + 64) = v21;
          unint64_t v8 = v24;
        }
        uint64_t v15 = sub_1415A58(a3, v19, (unsigned __int8 *)v8);
        goto LABEL_41;
      default:
LABEL_32:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = v24;
            }
            uint64_t v15 = (char *)sub_1885AC0(v9, v23, v8, a3);
          }
          else
          {
            uint64_t v15 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25449E0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_41:
          uint64_t v24 = v15;
          if (!v15) {
            goto LABEL_47;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          uint64_t v24 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v24;
    }
  }
}

char *sub_16C5108(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *char v4 = 18;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  char v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_19:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v13 = *(_DWORD *)(a1 + 72);
  *char v4 = 29;
  *(_DWORD *)(v4 + 1) = v13;
  v4 += 5;
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 4) == 0) {
      goto LABEL_31;
    }
    goto LABEL_25;
  }
LABEL_22:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  int v14 = *(_DWORD *)(a1 + 76);
  *char v4 = 37;
  *(_DWORD *)(v4 + 1) = v14;
  v4 += 5;
  if ((v6 & 4) != 0)
  {
LABEL_25:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 64);
    *char v4 = 42;
    unsigned int v16 = *(_DWORD *)(v15 + 20);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    char v4 = sub_1783610(v15, (unint64_t)v17, a3);
  }
LABEL_31:
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_16C5394(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x1F) == 0) {
    goto LABEL_11;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_14:
    uint64_t v9 = sub_15B1D1C(*(void *)(a1 + 56));
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  uint64_t v8 = sub_15B1D1C(*(void *)(a1 + 48));
  v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v3 & 4) != 0)
  {
LABEL_5:
    uint64_t v4 = sub_178384C(*(void *)(a1 + 64));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v5 = v2 + 5;
  if ((v3 & 8) == 0) {
    uint64_t v5 = v2;
  }
  if ((v3 & 0x10) != 0) {
    uint64_t v2 = v5 + 5;
  }
  else {
    uint64_t v2 = v5;
  }
LABEL_11:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v10 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_16C54BC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = *(void *)(a1 + 48);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        uint64_t v6 = sub_15C19EC((uint64_t)v8);
        *(void *)(a1 + 48) = v6;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v9 = &off_253F208;
      }
      sub_15B1E3C(v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void *)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_15C19EC((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      int v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v13 = &off_253F208;
    }
    sub_15B1E3C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_37;
    }
LABEL_29:
    *(_DWORD *)(a1 + 40) |= 4u;
    int v14 = *(std::string **)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unsigned int v16 = (void *)*v16;
      }
      sub_178ED2C((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      int v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      int v17 = &off_2549550;
    }
    sub_16C5648(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
      goto LABEL_8;
    }
LABEL_37:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_16C5648(std::string *result, uint64_t a2)
{
  int v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        sub_1481CB0((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        uint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        uint64_t v9 = &off_2539D18;
      }
      uint64_t result = sub_1415F98(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_29;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_178EDAC((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      int v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      int v13 = &off_2549588;
    }
    uint64_t result = sub_1783944(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
LABEL_29:
    LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
      goto LABEL_8;
    }
LABEL_30:
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16C5790(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if (v3)
    {
      uint64_t result = sub_15B1FC0(*(void *)(a1 + 48));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16C57E8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Bounds");
}

uint64_t sub_16C57F8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1398;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16C585C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C588C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C5908(void *a1)
{
  sub_16C588C(a1);

  operator delete();
}

unsigned char *sub_16C5940(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16C5990(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          int v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          int v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2544A30, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16C5AE0(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16C5BAC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16C5C04(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C5C0C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BoundsFilter");
}

uint64_t sub_16C5C1C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2544A60 && *(void *)(a1 + 32))
  {
    sub_15B8F7C();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C5CE8(uint64_t a1)
{
  sub_16C5C1C(a1);

  operator delete();
}

uint64_t sub_16C5D20(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B8FB8(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16C5DB4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void *)(a1 + 32);
    if (!v15)
    {
      unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v16 = (void *)*v16;
      }
      uint64_t v15 = sub_15C1EF4((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1198E84(a3, v15, v7);
LABEL_29:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      int v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_16C5F74(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 26;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B9320(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    int v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    int v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16C60A4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B956C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16C6188(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      uint64_t result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_15C1EF4((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_253F4C8;
      }
      uint64_t result = sub_15B9698(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_16C6274(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  BOOL result = sub_15B9824(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16C62A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Address.LocalizedAddress");
}

uint64_t sub_16C62B0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2544A88 && *(void *)(a1 + 32))
  {
    sub_15B6D48();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C637C(uint64_t a1)
{
  sub_16C62B0(a1);

  operator delete();
}

uint64_t sub_16C63B4(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      BOOL result = sub_15B6D84(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16C6448(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 != 26) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      unsigned int v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        unsigned int v16 = (void *)*v16;
      }
      uint64_t v15 = sub_15C1E94((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_11EA9CC(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (void *)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_16C6608(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 26;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_15B7AE4(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16C6738(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_15B806C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16C681C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      uint64_t v6 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      BOOL result = sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      unsigned int v9 = (std::string *)v3[1].__r_.__value_.__l.__size_;
      if (!v9)
      {
        std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = (std::string *)sub_15C1E94((uint64_t)v11);
        v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_253F3D0;
      }
      BOOL result = sub_15B86B8(v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

BOOL sub_16C6908(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  BOOL result = sub_15B8CAC(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16C6934@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Address.LocalizedSpokenStructuredAddress");
}

uint64_t sub_16C6944(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D1518;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(_DWORD *)(a1 + 120) = 0;
  return a1;
}

void sub_16C69C0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C69F0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D1518;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_163892C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unsigned int v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *unsigned int v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_187125C((std::string *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
  return a1;
}

void sub_16C6BE0(_Unwind_Exception *a1)
{
  sub_12C1DB8(v5);
  sub_1638720(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C6C58(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F53C(a1 + 12);
  sub_12C1DB8(a1 + 9);
  sub_1638720(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C6CF8(void *a1)
{
  sub_16C6C58(a1);

  operator delete();
}

uint64_t sub_16C6D30(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16C5D20(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_15B2C80(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_16C63B4(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  char v13 = *(unsigned char *)(a1 + 8);
  uint64_t v12 = a1 + 8;
  *(_DWORD *)(v12 + 112) = 0;
  *(_DWORD *)(v12 + 32) = 0;
  if (v13)
  {
    return sub_188B4AC((uint64_t *)v12);
  }
  return result;
}

char *sub_16C6E0C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v38 = a2;
  if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
    return v38;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    int v7 = v38 + 1;
    unsigned int v8 = *v38;
    if (*v38 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v38, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v38 + 2;
      }
    }
    uint64_t v38 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_46;
        }
        uint64_t v11 = v7 - 1;
        while (1)
        {
          uint64_t v12 = (unsigned __int8 *)(v11 + 1);
          uint64_t v38 = v11 + 1;
          char v13 = *(_DWORD **)(a1 + 64);
          if (v13 && (uint64_t v14 = *(int *)(a1 + 56), (int)v14 < *v13))
          {
            *(_DWORD *)(a1 + 56) = v14 + 1;
            uint64_t v15 = *(void *)&v13[2 * v14 + 2];
          }
          else
          {
            unsigned int v16 = sub_1786998(*(void *)(a1 + 48));
            uint64_t v15 = sub_188CDC8(a1 + 48, (uint64_t)v16);
            uint64_t v12 = (unsigned __int8 *)v38;
          }
          uint64_t v11 = (char *)sub_159D170(a3, v15, v12);
          uint64_t v38 = v11;
          if (!v11) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v11 || *v11 != 10) {
            goto LABEL_56;
          }
        }
      case 2u:
        if (v8 != 18) {
          goto LABEL_46;
        }
        int v17 = v7 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v38 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 88);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 80), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 80) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_15C1B30(*(void *)(a1 + 72));
            uint64_t v21 = sub_188CDC8(a1 + 72, (uint64_t)v22);
            uint64_t v18 = (unsigned __int8 *)v38;
          }
          int v17 = (char *)sub_125CF74(a3, v21, v18);
          uint64_t v38 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 18) {
            goto LABEL_56;
          }
        }
      case 3u:
        if (v8 != 26) {
          goto LABEL_46;
        }
        uint64_t v23 = v7 - 1;
        while (1)
        {
          uint64_t v24 = (unsigned __int8 *)(v23 + 1);
          uint64_t v38 = v23 + 1;
          unsigned int v25 = *(_DWORD **)(a1 + 112);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 104), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 104) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            BOOL v28 = sub_1786A1C(*(void *)(a1 + 96));
            uint64_t v27 = sub_188CDC8(a1 + 96, (uint64_t)v28);
            uint64_t v24 = (unsigned __int8 *)v38;
          }
          uint64_t v23 = (char *)sub_16C71F8(a3, v27, v24);
          uint64_t v38 = v23;
          if (!v23) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 26) {
            goto LABEL_56;
          }
        }
      case 4u:
        if (v8 != 32) {
          goto LABEL_46;
        }
        unint64_t v29 = v7 + 1;
        unint64_t v30 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_43;
        }
        int v31 = *v29;
        int v32 = v30 + (v31 << 7);
        unint64_t v30 = (v32 - 128);
        if (v31 < 0)
        {
          uint64_t v38 = (char *)sub_188C138((uint64_t)v7, (v32 - 128));
          if (!v38) {
            return 0;
          }
          unint64_t v30 = v36;
        }
        else
        {
          unint64_t v29 = v7 + 2;
LABEL_43:
          uint64_t v38 = v29;
        }
        if (v30 > 5)
        {
          if (*v6) {
            uint64_t v37 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v30, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          *(_DWORD *)(a1 + 120) = v30;
        }
        goto LABEL_56;
      default:
LABEL_46:
        if (v8) {
          BOOL v33 = (v8 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (v8 - 1600 > 0xF9F)
          {
            if (*v6)
            {
              uint64_t v35 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v7 = v38;
            }
            uint64_t v34 = sub_1885AC0(v8, v35, v7, a3);
          }
          else
          {
            uint64_t v34 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2544AB0, (uint64_t *)(a1 + 8), a3);
          }
          uint64_t v38 = (char *)v34;
          if (!v34) {
            return 0;
          }
LABEL_56:
          if (sub_11947B8((uint64_t)a3, &v38, a3[11].i32[1])) {
            return v38;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v38;
    }
  }
}

uint64_t sub_16C71F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C6448(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16C7288(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16C5F74(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_15B2EA4(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 104);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *a2 = 26;
      unsigned int v19 = *(_DWORD *)(v18 + 20);
      a2[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        uint64_t v20 = a2 + 2;
      }
      a2 = sub_16C6608(v18, v20, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v21 = *(int *)(a1 + 120);
    *a2 = 32;
    a2[1] = v21;
    if (v21 > 0x7F)
    {
      a2[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      a2[2] = v21 >> 7;
      a2 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *a2++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return a2;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(a2, v27, (int)v28);
    a2 += v29;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, a2);
}

uint64_t sub_16C7578(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16C60A4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B2F90(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_16C6738(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    int v24 = *(_DWORD *)(a1 + 120);
    uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v24 >= 0) {
      uint64_t v26 = v25;
    }
    else {
      uint64_t v26 = 11;
    }
    v18 += v26;
  }
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v29 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v29 + 31) < 0) {
      uint64_t v30 = *(void *)(v29 + 16);
    }
    else {
      uint64_t v30 = *(unsigned __int8 *)(v29 + 31);
    }
    v18 += v30;
  }
  *(_DWORD *)(a1 + 44) = v18;
  return v18;
}

void sub_16C7704(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_163892C((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_187125C((std::string *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    int v19 = *(_DWORD *)(a2 + 120);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(_DWORD *)(a1 + 120) = v19;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16C78C4(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16) || !sub_16C7920(a1 + 48)) {
    return 0;
  }

  return sub_16C7990(a1 + 96);
}

BOOL sub_16C7920(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 2) != 0)
    {
      BOOL result = sub_15B9824(*(void *)(v5 + 32));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

BOOL sub_16C7990(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if ((*(unsigned char *)(v5 + 16) & 2) != 0)
    {
      BOOL result = sub_15B8CAC(*(void *)(v5 + 32));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_16C7A00@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Address");
}

uint64_t sub_16C7A10(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1598;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16C7A74(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C7AA4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C7B20(void *a1)
{
  sub_16C7AA4(a1);

  operator delete();
}

unsigned char *sub_16C7B58(uint64_t a1)
{
  BOOL result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16C7BA8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    int v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      int v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          int v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          int v7 = v15;
        }
        int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2544B30, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16C7CF8(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16C7DC4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16C7E1C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C7E24@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressFilter");
}

void *sub_16C7E34(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D1618;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  return a1;
}

void sub_16C7EA4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C7ED4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D1618;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v7);
  }
  return a1;
}

void sub_16C7FA4(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C7FE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C8088(uint64_t a1)
{
  sub_16C7FE0(a1);

  operator delete();
}

unsigned char *sub_16C80C0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16C8144(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  char v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
    if (v12) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    int v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
    uint64_t v11 = (void *)sub_188C244(v14, *(char **)v17, (uint64_t)a3);
LABEL_20:
    *(void *)int v17 = v11;
    if (!v11) {
      goto LABEL_27;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (v7 - 1600 > 0xF9F)
    {
      if (*v5)
      {
        uint64_t v15 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = *(char **)v17;
      }
      uint64_t v11 = sub_1885AC0(v7, v15, v6, a3);
    }
    else
    {
      uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2544B60, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_27:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_16C82D8(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16C83C8(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    result += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

uint64_t sub_16C8468(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C8470@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressObject");
}

void *sub_16C8480(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C84FC(void *a1)
{
  sub_16C8480(a1);

  operator delete();
}

uint64_t sub_16C8534(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_16C858C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (uint64_t **)(a1 + 24);
  uint64_t v8 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v9 = (char *)(*(void *)v28 + 1);
    unsigned int v10 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if (*v9 < 0)
      {
        unsigned int v9 = (char *)sub_188C180(*(uint64_t *)v28, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unsigned int v9 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v9;
    if (v10 >> 3 != 2) {
      break;
    }
    if (v10 != 16) {
      goto LABEL_13;
    }
    uint64_t v16 = v9 + 1;
    uint64_t v17 = *v9;
    if ((*v9 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v9 + 2;
LABEL_25:
      *(void *)uint64_t v28 = v16;
      *(unsigned char *)(a1 + 48) = v17 != 0;
      int v5 = 1;
      goto LABEL_38;
    }
    uint64_t v26 = sub_188C138((uint64_t)v9, v17);
    *(void *)uint64_t v28 = v26;
    *(unsigned char *)(a1 + 48) = v27 != 0;
    int v5 = 1;
    if (!v26) {
      goto LABEL_43;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v10 >> 3 == 1 && v10 == 10)
  {
    int v19 = v9 - 1;
    while (1)
    {
      uint64_t v20 = (char *)(v19 + 1);
      *(void *)uint64_t v28 = v19 + 1;
      uint64_t v21 = *(_DWORD **)(a1 + 40);
      if (v21 && (uint64_t v22 = *(int *)(a1 + 32), (int)v22 < *v21))
      {
        *(_DWORD *)(a1 + 32) = v22 + 1;
        uint64_t v23 = *(std::string **)&v21[2 * v22 + 2];
      }
      else
      {
        if (!*v7) {
          operator new();
        }
        void *v25 = v24;
        v25[1] = sub_3A6EDC;
        *int v24 = 0;
        v24[1] = 0;
        v24[2] = 0;
        uint64_t v23 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v24);
        uint64_t v20 = *(char **)v28;
      }
      int v19 = sub_188C244(v23, v20, (uint64_t)a3);
      *(void *)uint64_t v28 = v19;
      if (!v19) {
        goto LABEL_43;
      }
      if (*(void *)a3 <= (unint64_t)v19 || *v19 != 10) {
        goto LABEL_38;
      }
    }
  }
LABEL_13:
  if (v10) {
    BOOL v14 = (v10 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v8)
    {
      uint64_t v15 = (std::string *)((*v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v9 = *(char **)v28;
    }
    *(void *)uint64_t v28 = sub_1885AC0(v10, v15, v9, a3);
    if (!*(void *)v28) {
      goto LABEL_43;
    }
    goto LABEL_38;
  }
  if (v9)
  {
    a3[10].i32[0] = v10 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)uint64_t v28 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v28;
}

char *sub_16C8818(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)__dst + 14 >= v10)
      {
        *__dst = 10;
        __dst[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = __dst + 2;
        memcpy(v11, v9, v10);
        __dst = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      __dst = (char *)sub_188A868(a3, 1, (uint64_t)v9, __dst);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v12 = *(unsigned char *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v12;
    __dst += 2;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return __dst;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(__dst, v16, (int)v17);
    __dst += v18;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, __dst);
}

uint64_t sub_16C89BC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  uint64_t v7 = v3 + 2;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    uint64_t v7 = v3;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v7 += v11;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

uint64_t sub_16C8A64()
{
  return 1;
}

void *sub_16C8A6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AddressObjectFilter");
}

uint64_t sub_16C8A7C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C8B24(uint64_t a1)
{
  sub_16C8A7C(a1);

  operator delete();
}

uint64_t sub_16C8B5C(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16C8BE0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  uint64_t v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      int v24 = (uint64_t *)*v24;
    }
    uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    unint64_t v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)uint64_t v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (char *)(v16 + 1);
      *(void *)uint64_t v26 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *uint64_t v22 = v21;
        v22[1] = sub_3A6EDC;
        *uint64_t v21 = 0;
        v21[1] = 0;
        v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)uint64_t v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      BOOL v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    unint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)uint64_t v26 = 0;
  return *(void *)v26;
}

char *sub_16C8E34(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        *uint64_t v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_16C8FC0(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_16C90A0()
{
  return 1;
}

void *sub_16C90A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SimpleRestaurantMenuText.SimpleRestaurantMenuTextGroup");
}

uint64_t sub_16C90B8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D1798;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16C9128(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16C9158(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D1798;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (std::string *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18712E8(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unsigned int v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16C9258(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16C92A8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F5BC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C9330(void *a1)
{
  sub_16C92A8(a1);

  operator delete();
}

uint64_t sub_16C9368(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16C8B5C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_16C93EC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1786C50(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = (char *)sub_16C95C8(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (v7 - 1600 > 0xF9F)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        unsigned int v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        unsigned int v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2544BD0, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

uint64_t sub_16C95C8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C8BE0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16C9658(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_16C8E34(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_16C97C0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16C8FC0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void sub_16C9874(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18712E8((std::string *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16C9950(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16C9958@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SimpleRestaurantMenuText");
}

void *sub_16C9968(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C99DC(void *a1)
{
  sub_16C9968(a1);

  operator delete();
}

uint64_t *sub_16C9A14(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16C9A24(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16C9B24(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16C9BBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16C9BF0(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16C9C0C()
{
  return 1;
}

void *sub_16C9C14@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SimpleRestaurantMenuTextFilter");
}

uint64_t sub_16C9C24(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 40);
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16C9CE4(uint64_t a1)
{
  sub_16C9C24(a1);

  operator delete();
}

uint64_t sub_16C9D1C(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16C9D9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v31 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    return *(void *)v31;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = (char *)(*(void *)v31 + 1);
    unsigned int v8 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        unsigned int v7 = (char *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        unsigned int v7 = (char *)(*(void *)v31 + 2);
      }
    }
    *(void *)int v31 = v7;
    unsigned int v12 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 == 24)
    {
      uint64_t v17 = (uint64_t)(v7 - 1);
      while (1)
      {
        *(void *)int v31 = v17 + 1;
        unint64_t v18 = *(unsigned __int8 *)(v17 + 1);
        uint64_t v19 = (char *)(v17 + 2);
        if (*(char *)(v17 + 1) < 0)
        {
          int v20 = *v19;
          int v21 = v18 + (v20 << 7);
          unint64_t v18 = (v21 - 128);
          if (v20 < 0)
          {
            *(void *)int v31 = sub_188C138(v17 + 1, (v21 - 128));
            if (!*(void *)v31) {
              return 0;
            }
            unint64_t v18 = v24;
            goto LABEL_27;
          }
          uint64_t v19 = (char *)(v17 + 3);
        }
        *(void *)int v31 = v19;
LABEL_27:
        if (v18 > 2)
        {
          if (*v6) {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v25);
        }
        else
        {
          uint64_t v22 = *(unsigned int *)(a1 + 24);
          if (v22 == *(_DWORD *)(a1 + 28))
          {
            int v23 = v22 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
            int v23 = v22 + 1;
          }
          *(_DWORD *)(a1 + 24) = v23;
        }
        uint64_t v17 = *(void *)v31;
        if (*(void *)a3 <= *(void *)v31 || **(unsigned char **)v31 != 24) {
          goto LABEL_50;
        }
      }
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(void *)&long long v32 = a1 + 24;
    *((void *)&v32 + 1) = sub_16B596C;
    uint64_t v33 = a1 + 8;
    int v34 = 3;
    uint64_t v16 = sub_1112E88((uint64_t)a3, v7, &v32);
LABEL_49:
    *(void *)int v31 = v16;
    if (!v16) {
      return 0;
    }
LABEL_50:
    if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
      return *(void *)v31;
    }
  }
  if (v12 == 2)
  {
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v26 = *(void *)(a1 + 8);
    uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
    if (v26) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    uint64_t v28 = (void *)(a1 + 48);
    goto LABEL_48;
  }
  if (v12 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v29 = *(void *)(a1 + 8);
    uint64_t v27 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
    if (v29) {
      uint64_t v27 = (uint64_t *)*v27;
    }
    uint64_t v28 = (void *)(a1 + 40);
LABEL_48:
    uint64_t v30 = (std::string *)sub_1880F84(v28, v27);
    uint64_t v16 = (void *)sub_188C244(v30, *(char **)v31, (uint64_t)a3);
    goto LABEL_49;
  }
LABEL_14:
  if (v8) {
    BOOL v14 = (v8 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v6)
    {
      uint64_t v15 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = *(char **)v31;
    }
    uint64_t v16 = sub_1885AC0(v8, v15, v7, a3);
    goto LABEL_49;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return *(void *)v31;
}

unsigned char *sub_16CA088(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 24);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v9 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *unint64_t v4 = 24;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unint64_t v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_16CA21C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 3) != 0)
  {
    if (v7)
    {
      unint64_t v8 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
      uint64_t v10 = *(void *)(v8 + 8);
      if ((v9 & 0x80u) == 0) {
        uint64_t v10 = v9;
      }
      v6 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v7 & 2) != 0)
    {
      unint64_t v11 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v6 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v6 += v17;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_16CA340(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
      std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
      unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (uint64_t *)*v11;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v9, v11);
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
      std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
      uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
      if (v13) {
        uint64_t v14 = (uint64_t *)*v14;
      }
      uint64_t result = sub_1881DF4((std::string **)&v3[2], v12, v14);
    }
  }
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16CA458()
{
  return 1;
}

void *sub_16CA460@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RestaurantReservationLink.VendorIDLink");
}

uint64_t sub_16CA470(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (std::string *)(a1 + 16);
  *(void *)a1 = off_24D1918;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    int v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1871364(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    std::string::size_type v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *std::string::size_type v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_16CA550(_Unwind_Exception *a1)
{
  sub_186F63C(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16CA594(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F63C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CA614(void *a1)
{
  sub_16CA594(a1);

  operator delete();
}

uint64_t sub_16CA64C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16C9D1C(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_16CA6C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          std::string::size_type v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1786DC8(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            std::string::size_type v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_16CA868(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

uint64_t sub_16CA868(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16C9D9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16CA8F8(uint64_t a1, char *__dst, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        std::string::size_type v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        std::string::size_type v10 = __dst + 2;
      }
      __dst = sub_16CA088(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16CAA3C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16CA21C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_16CAAEC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_1871364((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16CABBC()
{
  return 1;
}

void *sub_16CABC4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RestaurantReservationLink");
}

void *sub_16CABD4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CAC48(void *a1)
{
  sub_16CABD4(a1);

  operator delete();
}

uint64_t *sub_16CAC80(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16CAC90(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16CAD90(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16CAE28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16CAE5C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16CAE78()
{
  return 1;
}

void *sub_16CAE80@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RestaurantReservationLinkFilter");
}

uint64_t sub_16CAE90(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D1A18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    unint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_16CAFC0()
{
}

uint64_t sub_16CB034(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2544C78)
  {
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_16C4BF4(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CB10C(uint64_t a1)
{
  sub_16CB034(a1);

  operator delete();
}

uint64_t sub_16CB144(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 40));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_16C4D24(*(void *)(v1 + 48));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16CB1B8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    unsigned int v12 = v8 >> 3;
    if (v8 >> 3 != 3) {
      break;
    }
    if (v8 == 24)
    {
      uint64_t v17 = v7 - 1;
      while (1)
      {
        uint64_t v30 = v17 + 1;
        unint64_t v18 = v17[1];
        uint64_t v19 = v17 + 2;
        if (v17[1] < 0)
        {
          int v20 = *v19;
          int v21 = v18 + (v20 << 7);
          unint64_t v18 = (v21 - 128);
          if (v20 < 0)
          {
            uint64_t v30 = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
            if (!v30) {
              return 0;
            }
            unint64_t v18 = v24;
            goto LABEL_27;
          }
          uint64_t v19 = v17 + 3;
        }
        uint64_t v30 = v19;
LABEL_27:
        if (v18 > 0x16)
        {
          if (*v6) {
            uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v18, v25);
        }
        else
        {
          uint64_t v22 = *(unsigned int *)(a1 + 24);
          if (v22 == *(_DWORD *)(a1 + 28))
          {
            int v23 = v22 + 1;
            sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
            int v23 = v22 + 1;
          }
          *(_DWORD *)(a1 + 24) = v23;
        }
        uint64_t v17 = v30;
        if (*(void *)a3 <= (unint64_t)v30 || *v30 != 24) {
          goto LABEL_53;
        }
      }
    }
    if (v8 != 26) {
      goto LABEL_14;
    }
    *(void *)&long long v31 = a1 + 24;
    *((void *)&v31 + 1) = sub_16CB4C4;
    uint64_t v32 = a1 + 8;
    int v33 = 3;
    uint64_t v16 = sub_1112E88((uint64_t)a3, v7, &v31);
LABEL_52:
    uint64_t v30 = v16;
    if (!v16) {
      return 0;
    }
LABEL_53:
    if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
      return v30;
    }
  }
  if (v12 == 2)
  {
    if (v8 == 18)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v26 = *(void *)(a1 + 48);
      if (!v26)
      {
        uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v27 = (void *)*v27;
        }
        uint64_t v26 = sub_17868E0((uint64_t)v27);
        *(void *)(a1 + 48) = v26;
        uint64_t v7 = v30;
      }
      uint64_t v16 = sub_154985C(a3, v26, (unsigned __int8 *)v7);
      goto LABEL_52;
    }
  }
  else if (v12 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v28 = *(void *)(a1 + 40);
    if (!v28)
    {
      uint64_t v29 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v28 = sub_15C1918((uint64_t)v29);
      *(void *)(a1 + 40) = v28;
      uint64_t v7 = v30;
    }
    uint64_t v16 = sub_1198F14(a3, v28, (unsigned __int8 *)v7);
    goto LABEL_52;
  }
LABEL_14:
  if (v8) {
    BOOL v14 = (v8 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v6)
    {
      uint64_t v15 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v30;
    }
    uint64_t v16 = (char *)sub_1885AC0(v8, v15, v7, a3);
    goto LABEL_52;
  }
  if (!v7) {
    return 0;
  }
  a3[10].i32[0] = v8 - 1;
  return v30;
}

BOOL sub_16CB4C4(unsigned int a1)
{
  return a1 < 0x17;
}

char *sub_16CB4D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    char v4 = sub_16C5108(v10, v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    int v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    int v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_16CB6EC(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B0D90(*(void *)(a1 + 40));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_16C5394(*(void *)(a1 + 48));
      v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v7 += v14;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_16CB80C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v9 = *(void *)(a1 + 40);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_15C1918((uint64_t)v11);
        *(void *)(a1 + 40) = v9;
      }
      if (*(void *)(a2 + 40)) {
        unsigned int v12 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        unsigned int v12 = &off_253F1A0;
      }
      sub_15B0E24(v9, (uint64_t)v12);
    }
    if ((v8 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(void *)(a1 + 48);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_17868E0((uint64_t)v15);
        *(void *)(a1 + 48) = v13;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v16 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v16 = &off_25449E0;
      }
      sub_16C54BC(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16CB954(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_16C5790(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16CB9A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SpatialLookupResult");
}

uint64_t sub_16CB9B0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2544CB0)
  {
    if (*(void *)(a1 + 72))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v5 = *(void *)(a1 + 80);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    uint64_t v6 = *(void **)(a1 + 88);
    if (v6)
    {
      sub_12A1ED8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DA8(a1 + 56);
  sub_1889DA8(a1 + 40);
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CBAB8(uint64_t a1)
{
  sub_16CB9B0(a1);

  operator delete();
}

uint64_t sub_16CBAF0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  *(_DWORD *)(result + 40) = 0;
  *(_DWORD *)(result + 56) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 72));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 80));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_1292140(*(void *)(v1 + 88));
  }
LABEL_6:
  if ((v2 & 0x38) != 0)
  {
    *(void *)(v1 + 96) = 0xC800000000;
    *(_DWORD *)(v1 + 104) = 200;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16CBBA0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v60 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v60, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = v60 + 1;
      unsigned int v9 = *v60;
      if (*v60 < 0)
      {
        int v10 = *v8;
        unsigned int v11 = v9 + (v10 << 7);
        unsigned int v9 = v11 - 128;
        if (v10 < 0)
        {
          int v8 = (char *)sub_188C180((uint64_t)v60, v11 - 128);
          unsigned int v9 = v12;
        }
        else
        {
          int v8 = v60 + 2;
        }
      }
      uint64_t v60 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_105;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v13 = *(void *)(a1 + 72);
          if (!v13)
          {
            uint64_t v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v14 = (void *)*v14;
            }
            uint64_t v13 = sub_15C1918((uint64_t)v14);
            *(void *)(a1 + 72) = v13;
            int v8 = v60;
          }
          unint64_t v15 = sub_1198F14(a3, v13, (unsigned __int8 *)v8);
          goto LABEL_112;
        case 2u:
          if (v9 != 16) {
            goto LABEL_105;
          }
          v5 |= 0x10u;
          uint64_t v17 = v8 + 1;
          LODWORD(v16) = *v8;
          if ((v16 & 0x80) == 0) {
            goto LABEL_19;
          }
          int v18 = *v17;
          uint64_t v16 = v16 + (v18 << 7) - 128;
          if (v18 < 0)
          {
            v51 = (char *)sub_188C138((uint64_t)v8, v16);
            uint64_t v60 = v51;
            *(_DWORD *)(a1 + 100) = v52;
            if (!v51) {
              goto LABEL_122;
            }
          }
          else
          {
            uint64_t v17 = v8 + 2;
LABEL_19:
            uint64_t v60 = v17;
            *(_DWORD *)(a1 + 100) = v16;
          }
          goto LABEL_113;
        case 3u:
          if (v9 != 24) {
            goto LABEL_105;
          }
          v5 |= 0x20u;
          unint64_t v20 = v8 + 1;
          LODWORD(v19) = *v8;
          if ((v19 & 0x80) == 0) {
            goto LABEL_24;
          }
          int v21 = *v20;
          uint64_t v19 = v19 + (v21 << 7) - 128;
          if (v21 < 0)
          {
            uint64_t v53 = (char *)sub_188C138((uint64_t)v8, v19);
            uint64_t v60 = v53;
            *(_DWORD *)(a1 + 104) = v54;
            if (!v53) {
              goto LABEL_122;
            }
          }
          else
          {
            unint64_t v20 = v8 + 2;
LABEL_24:
            uint64_t v60 = v20;
            *(_DWORD *)(a1 + 104) = v19;
          }
          goto LABEL_113;
        case 4u:
          if (v9 == 32)
          {
            uint64_t v22 = v8 - 1;
            while (1)
            {
              uint64_t v60 = v22 + 1;
              unint64_t v23 = v22[1];
              unint64_t v24 = v22 + 2;
              if (v22[1] < 0)
              {
                int v25 = *v24;
                int v26 = v23 + (v25 << 7);
                unint64_t v23 = (v26 - 128);
                if (v25 < 0)
                {
                  uint64_t v60 = (char *)sub_188C138((uint64_t)(v22 + 1), (v26 - 128));
                  if (!v60) {
                    goto LABEL_122;
                  }
                  unint64_t v23 = v29;
                  goto LABEL_31;
                }
                unint64_t v24 = v22 + 3;
              }
              uint64_t v60 = v24;
LABEL_31:
              if (v23 > 0x17)
              {
                if (*v7) {
                  uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
                }
                else {
                  uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
                }
                sub_188C020(4, v23, v30);
              }
              else
              {
                uint64_t v27 = *(unsigned int *)(a1 + 24);
                if (v27 == *(_DWORD *)(a1 + 28))
                {
                  int v28 = v27 + 1;
                  sub_188C80C((unsigned int *)(a1 + 24), v27 + 1);
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                }
                else
                {
                  *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                  int v28 = v27 + 1;
                }
                *(_DWORD *)(a1 + 24) = v28;
              }
              uint64_t v22 = v60;
              if (*(void *)a3 <= (unint64_t)v60 || *v60 != 32) {
                goto LABEL_113;
              }
            }
          }
          if (v9 == 34)
          {
            *(void *)&long long v61 = a1 + 24;
            *((void *)&v61 + 1) = sub_16BAFD8;
            uint64_t v62 = a1 + 8;
            int v63 = 4;
            unint64_t v15 = sub_1112E88((uint64_t)a3, v8, &v61);
          }
          else
          {
LABEL_105:
            if (v9) {
              BOOL v57 = (v9 & 7) == 4;
            }
            else {
              BOOL v57 = 1;
            }
            if (v57)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_122:
              uint64_t v60 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              v58 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              v58 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = v60;
            }
            unint64_t v15 = (char *)sub_1885AC0(v9, v58, v8, a3);
          }
LABEL_112:
          uint64_t v60 = v15;
          if (!v15) {
            goto LABEL_122;
          }
LABEL_113:
          if (sub_11947B8((uint64_t)a3, &v60, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 5u:
          if (v9 == 40)
          {
            long long v31 = v8 - 1;
            while (1)
            {
              uint64_t v60 = v31 + 1;
              int v32 = v31[1];
              if (v31[1] < 0)
              {
                int v33 = v32 + (v31[2] << 7);
                int v32 = v33 - 128;
                if (v31[2] < 0)
                {
                  long long v31 = (char *)sub_188C0D0((uint64_t)(v31 + 1), v33 - 128);
                  int v32 = v34;
                }
                else
                {
                  v31 += 3;
                }
              }
              else
              {
                v31 += 2;
              }
              uint64_t v60 = v31;
              uint64_t v35 = *(unsigned int *)(a1 + 40);
              if (v35 == *(_DWORD *)(a1 + 44))
              {
                int v36 = v35 + 1;
                sub_188C80C((unsigned int *)(a1 + 40), v35 + 1);
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v35) = v32;
                long long v31 = v60;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 48) + 4 * v35) = v32;
                int v36 = v35 + 1;
              }
              *(_DWORD *)(a1 + 40) = v36;
              if (!v31) {
                goto LABEL_122;
              }
              if (*(void *)a3 <= (unint64_t)v31 || *v31 != 40) {
                goto LABEL_113;
              }
            }
          }
          if (v9 != 42) {
            goto LABEL_105;
          }
          v56 = (unsigned int *)(a1 + 40);
LABEL_104:
          unint64_t v15 = (char *)sub_188C2CC(v56, (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_112;
        case 6u:
          if (v9 == 48)
          {
            uint64_t v37 = v8 - 1;
            while (1)
            {
              uint64_t v60 = v37 + 1;
              int v38 = v37[1];
              if (v37[1] < 0)
              {
                int v39 = v38 + (v37[2] << 7);
                int v38 = v39 - 128;
                if (v37[2] < 0)
                {
                  uint64_t v37 = (char *)sub_188C0D0((uint64_t)(v37 + 1), v39 - 128);
                  int v38 = v40;
                }
                else
                {
                  v37 += 3;
                }
              }
              else
              {
                v37 += 2;
              }
              uint64_t v60 = v37;
              uint64_t v41 = *(unsigned int *)(a1 + 56);
              if (v41 == *(_DWORD *)(a1 + 60))
              {
                int v42 = v41 + 1;
                sub_188C80C((unsigned int *)(a1 + 56), v41 + 1);
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v41) = v38;
                uint64_t v37 = v60;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 64) + 4 * v41) = v38;
                int v42 = v41 + 1;
              }
              *(_DWORD *)(a1 + 56) = v42;
              if (!v37) {
                goto LABEL_122;
              }
              if (*(void *)a3 <= (unint64_t)v37 || *v37 != 48) {
                goto LABEL_113;
              }
            }
          }
          if (v9 != 50) {
            goto LABEL_105;
          }
          v56 = (unsigned int *)(a1 + 56);
          goto LABEL_104;
        case 7u:
          if (v9 != 58) {
            goto LABEL_105;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v43 = *(void *)(a1 + 80);
          if (!v43)
          {
            v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v44 = (void *)*v44;
            }
            uint64_t v43 = sub_15C19EC((uint64_t)v44);
            *(void *)(a1 + 80) = v43;
            int v8 = v60;
          }
          unint64_t v15 = sub_11E1C60(a3, v43, (unsigned __int8 *)v8);
          goto LABEL_112;
        case 8u:
          if (v9 != 66) {
            goto LABEL_105;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v45 = *(void *)(a1 + 88);
          if (!v45)
          {
            v46 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              v46 = (void *)*v46;
            }
            uint64_t v45 = sub_12BBC50((uint64_t)v46);
            *(void *)(a1 + 88) = v45;
            int v8 = v60;
          }
          unint64_t v15 = sub_1292FD0(a3, v45, (unsigned __int8 *)v8);
          goto LABEL_112;
        case 9u:
          if (v9 != 72) {
            goto LABEL_105;
          }
          int v47 = v8 + 1;
          unint64_t v48 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_89;
          }
          int v49 = *v47;
          int v50 = v48 + (v49 << 7);
          unint64_t v48 = (v50 - 128);
          if (v49 < 0)
          {
            uint64_t v60 = (char *)sub_188C138((uint64_t)v8, (v50 - 128));
            if (!v60) {
              goto LABEL_122;
            }
            unint64_t v48 = v55;
          }
          else
          {
            int v47 = v8 + 2;
LABEL_89:
            uint64_t v60 = v47;
          }
          if (v48 > 2)
          {
            if (*v7) {
              v59 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              v59 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(9, v48, v59);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 8u;
            *(_DWORD *)(a1 + 96) = v48;
          }
          goto LABEL_113;
        default:
          goto LABEL_105;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v60;
}

char *sub_16CC250(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 100);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 104);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v21 = *(unsigned int *)(a1 + 40);
  if ((int)v21 >= 1)
  {
    for (uint64_t j = 0; j != v21; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v23 = *(_DWORD *)(*(void *)(a1 + 48) + 4 * j);
      *char v4 = 40;
      v4[1] = v23;
      if (v23 > 0x7F)
      {
        v4[1] = v23 | 0x80;
        unsigned int v24 = v23 >> 7;
        v4[2] = v23 >> 7;
        v4 += 3;
        if (v23 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v25 = v24 >> 14;
            v24 >>= 7;
            *v4++ = v24;
          }
          while (v25);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v26 = *(unsigned int *)(a1 + 56);
  if ((int)v26 >= 1)
  {
    for (uint64_t k = 0; k != v26; ++k)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v28 = *(_DWORD *)(*(void *)(a1 + 64) + 4 * k);
      *char v4 = 48;
      v4[1] = v28;
      if (v28 > 0x7F)
      {
        v4[1] = v28 | 0x80;
        unsigned int v29 = v28 >> 7;
        v4[2] = v28 >> 7;
        v4 += 3;
        if (v28 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v30 = v29 >> 14;
            v29 >>= 7;
            *v4++ = v29;
          }
          while (v30);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v31 = *(void *)(a1 + 80);
    *char v4 = 58;
    unsigned int v32 = *(_DWORD *)(v31 + 20);
    v4[1] = v32;
    if (v32 > 0x7F) {
      int v33 = sub_188A9CC(v32, v4 + 1);
    }
    else {
      int v33 = v4 + 2;
    }
    char v4 = sub_15B1A68(v31, (unint64_t)v33, a3);
    if ((v6 & 4) == 0)
    {
LABEL_51:
      if ((v6 & 8) == 0) {
        goto LABEL_71;
      }
      goto LABEL_65;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_51;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v34 = *(void *)(a1 + 88);
  *char v4 = 66;
  unsigned int v35 = *(_DWORD *)(v34 + 48);
  v4[1] = v35;
  if (v35 > 0x7F) {
    int v36 = sub_188A9CC(v35, v4 + 1);
  }
  else {
    int v36 = v4 + 2;
  }
  char v4 = sub_12A21F4(v34, v36, a3);
  if ((v6 & 8) != 0)
  {
LABEL_65:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v37 = *(int *)(a1 + 96);
    *char v4 = 72;
    v4[1] = v37;
    if (v37 > 0x7F)
    {
      v4[1] = v37 | 0x80;
      unint64_t v38 = v37 >> 7;
      v4[2] = v37 >> 7;
      v4 += 3;
      if (v37 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v39 = v38 >> 14;
          v38 >>= 7;
          *v4++ = v38;
        }
        while (v39);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_71:
  uint64_t v40 = *(void *)(a1 + 8);
  if ((v40 & 1) == 0) {
    return v4;
  }
  unint64_t v42 = v40 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v42 + 31) < 0)
  {
    uint64_t v43 = *(void **)(v42 + 8);
    uint64_t v44 = *(void *)(v42 + 16);
  }
  else
  {
    uint64_t v43 = (void *)(v42 + 8);
    LODWORD(v44) = *(unsigned __int8 *)(v42 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v44)
  {
    uint64_t v45 = (int)v44;
    memcpy(v4, v43, (int)v44);
    v4 += v45;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v43, v44, v4);
}

uint64_t sub_16CC794(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = sub_188D4F0((unsigned int *)(a1 + 40));
  uint64_t v8 = *(unsigned int *)(a1 + 40);
  uint64_t v9 = v3 + v7 + v2 + v8 + sub_188D4F0((unsigned int *)(a1 + 56)) + *(unsigned int *)(a1 + 56);
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 0x3F) == 0) {
    goto LABEL_20;
  }
  if (v10)
  {
    uint64_t v16 = sub_15B0D90(*(void *)(a1 + 72));
    v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 2) == 0)
    {
LABEL_12:
      if ((v10 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v17 = sub_15B1D1C(*(void *)(a1 + 80));
  v9 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 4) == 0)
  {
LABEL_13:
    if ((v10 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_25:
    int v19 = *(_DWORD *)(a1 + 96);
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v19 >= 0) {
      uint64_t v21 = v20;
    }
    else {
      uint64_t v21 = 11;
    }
    v9 += v21;
    if ((v10 & 0x10) == 0)
    {
LABEL_15:
      if ((v10 & 0x20) == 0) {
        goto LABEL_20;
      }
      goto LABEL_16;
    }
    goto LABEL_29;
  }
LABEL_24:
  uint64_t v18 = sub_12A23E0(*(void *)(a1 + 88));
  v9 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v10 & 8) != 0) {
    goto LABEL_25;
  }
LABEL_14:
  if ((v10 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_29:
  int v22 = *(_DWORD *)(a1 + 100);
  uint64_t v23 = ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v22 >= 0) {
    uint64_t v24 = v23;
  }
  else {
    uint64_t v24 = 11;
  }
  v9 += v24;
  if ((v10 & 0x20) != 0)
  {
LABEL_16:
    int v11 = *(_DWORD *)(a1 + 104);
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v11 >= 0) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 11;
    }
    v9 += v13;
  }
LABEL_20:
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v25 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v25 + 31) < 0) {
      uint64_t v26 = *(void *)(v25 + 16);
    }
    else {
      uint64_t v26 = *(unsigned __int8 *)(v25 + 31);
    }
    v9 += v26;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_16CC9CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 40);
    sub_188C80C((unsigned int *)(a1 + 40), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 48);
    *(_DWORD *)(a1 + 40) += *(_DWORD *)(a2 + 40);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 48), 4 * *(int *)(a2 + 40));
  }
  int v11 = *(_DWORD *)(a2 + 56);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 56);
    sub_188C80C((unsigned int *)(a1 + 56), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 64);
    *(_DWORD *)(a1 + 56) += *(_DWORD *)(a2 + 56);
    memcpy((void *)(v13 + 4 * v12), *(const void **)(a2 + 64), 4 * *(int *)(a2 + 56));
  }
  int v14 = *(_DWORD *)(a2 + 16);
  if ((v14 & 0x3F) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v16 = *(void *)(a1 + 72);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = sub_15C1918((uint64_t)v18);
        *(void *)(a1 + 72) = v16;
      }
      if (*(void *)(a2 + 72)) {
        int v19 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v19 = &off_253F1A0;
      }
      sub_15B0E24(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_36;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v20 = *(void *)(a1 + 80);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      int v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        int v22 = (void *)*v22;
      }
      uint64_t v20 = sub_15C19EC((uint64_t)v22);
      *(void *)(a1 + 80) = v20;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v23 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v23 = &off_253F208;
    }
    sub_15B1E3C(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_44;
    }
LABEL_36:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v24 = *(std::string **)(a1 + 88);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = (std::string *)sub_12BBC50((uint64_t)v26);
      *(void *)(a1 + 88) = v24;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v27 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v27 = &off_25308E8;
    }
    sub_11D640C(v24, (uint64_t)v27);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_45;
    }
LABEL_44:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0)
      {
LABEL_15:
        *(_DWORD *)(a1 + 16) |= v14;
        goto LABEL_16;
      }
LABEL_14:
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
      goto LABEL_15;
    }
LABEL_45:
    *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
    if ((v14 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_16:
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16CCC30(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B1FC0(*(void *)(a1 + 80));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16CCC7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SpatialPlaceLookupParameters");
}

uint64_t sub_16CCC8C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2544D20)
  {
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    int v5 = *(void **)(a1 + 48);
    if (v5)
    {
      sub_16B660C(v5);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CCD64(uint64_t a1)
{
  sub_16CCC8C(a1);

  operator delete();
}

uint64_t sub_16CCD9C(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_15B09D0(*(void *)(result + 40));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_16B5E18(*(void *)(v1 + 48));
    }
    *(void *)(v1 + 56) = 0xC8000000C8;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16CCE18(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v39 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v39 + 1;
    unsigned int v9 = *v39;
    if (*v39 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v39, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        int v8 = v39 + 2;
      }
    }
    unint64_t v39 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v13 = *(void *)(a1 + 40);
        if (!v13)
        {
          int v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v14 = (void *)*v14;
          }
          uint64_t v13 = sub_15C1918((uint64_t)v14);
          *(void *)(a1 + 40) = v13;
          int v8 = v39;
        }
        uint64_t v15 = sub_1198F14(a3, v13, (unsigned __int8 *)v8);
        goto LABEL_64;
      case 2u:
        if (v9 != 16) {
          goto LABEL_57;
        }
        v5 |= 4u;
        uint64_t v17 = v8 + 1;
        LODWORD(v16) = *v8;
        if ((v16 & 0x80) == 0) {
          goto LABEL_19;
        }
        int v18 = *v17;
        uint64_t v16 = v16 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          int v33 = (char *)sub_188C138((uint64_t)v8, v16);
          unint64_t v39 = v33;
          *(_DWORD *)(a1 + 56) = v34;
          if (!v33) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v17 = v8 + 2;
LABEL_19:
          unint64_t v39 = v17;
          *(_DWORD *)(a1 + 56) = v16;
        }
        goto LABEL_65;
      case 3u:
        if (v9 != 24) {
          goto LABEL_57;
        }
        v5 |= 8u;
        uint64_t v20 = v8 + 1;
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_24;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unsigned int v35 = (char *)sub_188C138((uint64_t)v8, v19);
          unint64_t v39 = v35;
          *(_DWORD *)(a1 + 60) = v36;
          if (!v35) {
            goto LABEL_70;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_24:
          unint64_t v39 = v20;
          *(_DWORD *)(a1 + 60) = v19;
        }
        goto LABEL_65;
      case 4u:
        if (v9 == 32)
        {
          int v22 = v8 - 1;
          while (1)
          {
            unint64_t v39 = v22 + 1;
            unint64_t v23 = v22[1];
            uint64_t v24 = v22 + 2;
            if (v22[1] < 0)
            {
              int v25 = *v24;
              int v26 = v23 + (v25 << 7);
              unint64_t v23 = (v26 - 128);
              if (v25 < 0)
              {
                unint64_t v39 = (char *)sub_188C138((uint64_t)(v22 + 1), (v26 - 128));
                if (!v39) {
                  goto LABEL_70;
                }
                unint64_t v23 = v29;
                goto LABEL_31;
              }
              uint64_t v24 = v22 + 3;
            }
            unint64_t v39 = v24;
LABEL_31:
            if (v23 > 0xD)
            {
              if (*v7) {
                unsigned int v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                unsigned int v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v23, v30);
            }
            else
            {
              uint64_t v27 = *(unsigned int *)(a1 + 24);
              if (v27 == *(_DWORD *)(a1 + 28))
              {
                int v28 = v27 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v27 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                int v28 = v27 + 1;
              }
              *(_DWORD *)(a1 + 24) = v28;
            }
            int v22 = v39;
            if (*(void *)a3 <= (unint64_t)v39 || *v39 != 32) {
              goto LABEL_65;
            }
          }
        }
        if (v9 == 34)
        {
          *(void *)&long long v40 = a1 + 24;
          *((void *)&v40 + 1) = sub_16CD218;
          uint64_t v41 = a1 + 8;
          int v42 = 4;
          uint64_t v15 = sub_1112E88((uint64_t)a3, v8, &v40);
LABEL_64:
          unint64_t v39 = v15;
          if (!v15) {
            goto LABEL_70;
          }
LABEL_65:
          if (sub_11947B8((uint64_t)a3, &v39, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_57:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (*v7)
          {
            unint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v39;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v38, v8, a3);
          goto LABEL_64;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_70:
        }
          unint64_t v39 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v39;
      case 5u:
        if (v9 != 42) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v31 = *(void **)(a1 + 48);
        if (!v31)
        {
          unsigned int v32 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unsigned int v32 = (void *)*v32;
          }
          uint64_t v31 = sub_17860B0((uint64_t)v32);
          *(void *)(a1 + 48) = v31;
          int v8 = v39;
        }
        uint64_t v15 = sub_16B6084(a3, (uint64_t)v31, (unsigned __int8 *)v8);
        goto LABEL_64;
      default:
        goto LABEL_57;
    }
  }
}

BOOL sub_16CD218(unsigned int a1)
{
  return a1 < 0xE;
}

char *sub_16CD224(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 60);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(unsigned int *)(a1 + 24);
  if ((int)v16 >= 1)
  {
    for (uint64_t i = 0; i != v16; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v18 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 32;
      v4[1] = v18;
      if (v18 > 0x7F)
      {
        v4[1] = v18 | 0x80;
        unint64_t v19 = v18 >> 7;
        v4[2] = v18 >> 7;
        v4 += 3;
        if (v18 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v20 = v19 >> 14;
            v19 >>= 7;
            *v4++ = v19;
          }
          while (v20);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 48);
    *char v4 = 42;
    unsigned int v22 = *(_DWORD *)(v21 + 20);
    v4[1] = v22;
    if (v22 > 0x7F) {
      unint64_t v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      unint64_t v23 = v4 + 2;
    }
    char v4 = sub_16B68A8(v21, (unint64_t)v23, a3);
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if ((v24 & 1) == 0) {
    return v4;
  }
  unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v26 + 31) < 0)
  {
    uint64_t v27 = *(void **)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v27 = (void *)(v26 + 8);
    LODWORD(v28) = *(unsigned __int8 *)(v26 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v28)
  {
    uint64_t v29 = (int)v28;
    memcpy(v4, v27, (int)v28);
    v4 += v29;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v27, v28, v4);
}

uint64_t sub_16CD544(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 0xF) == 0) {
    goto LABEL_25;
  }
  if ((v8 & 1) == 0)
  {
    if ((v8 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_16:
    uint64_t v10 = sub_16B6A4C(*(void *)(a1 + 48));
    v7 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) == 0)
    {
LABEL_13:
      if ((v8 & 8) == 0) {
        goto LABEL_25;
      }
      goto LABEL_21;
    }
    goto LABEL_17;
  }
  uint64_t v9 = sub_15B0D90(*(void *)(a1 + 40));
  v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_12:
  if ((v8 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_17:
  int v11 = *(_DWORD *)(a1 + 56);
  if (v11 < 0) {
    uint64_t v12 = 11;
  }
  else {
    uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v7 += v12;
  if ((v8 & 8) != 0)
  {
LABEL_21:
    int v13 = *(_DWORD *)(a1 + 60);
    if (v13 < 0) {
      uint64_t v14 = 11;
    }
    else {
      uint64_t v14 = ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v7 += v14;
  }
LABEL_25:
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v7 += v18;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_16CD6DC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0xF) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C1918((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        int v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        int v13 = &off_253F1A0;
      }
      sub_15B0E24(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_30;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(std::string **)(a1 + 48);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = (std::string *)sub_17860B0((uint64_t)v16);
      *(void *)(a1 + 48) = v14;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v17 = &off_2544470;
    }
    sub_117EF04(v14, (uint64_t)v17);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0)
      {
LABEL_9:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_10;
      }
LABEL_8:
      *(_DWORD *)(a1 + 60) = *(_DWORD *)(a2 + 60);
      goto LABEL_9;
    }
LABEL_30:
    *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    if ((v8 & 8) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16CD858(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16CD884@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SpatialEventLookupParameters");
}

unsigned char *sub_16CD894(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_184A280(*(unsigned char **)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_16CD900(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2544D60)
  {
    uint64_t v5 = *(void *)(a1 + 40);
    if (v5)
    {
      sub_184AFBC(v5);
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_16C4BF4(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CD9F8(uint64_t a1)
{
  sub_16CD900(a1);

  operator delete();
}

uint64_t sub_16CDA30(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(result + 40));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 48));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_16C4D24(*(void *)(v1 + 56));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16CDABC(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    unsigned int v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 40);
        if (!v12)
        {
          int v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 40) = v12;
          uint64_t v7 = v30;
        }
        uint64_t v14 = sub_12688D0(a3, v12, (unsigned __int8 *)v7);
        goto LABEL_56;
      case 2u:
        if (v8 != 18) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 48);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_15C1918((uint64_t)v16);
          *(void *)(a1 + 48) = v15;
          uint64_t v7 = v30;
        }
        uint64_t v14 = sub_1198F14(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_56;
      case 3u:
        if (v8 == 24)
        {
          unint64_t v17 = v7 - 1;
          while (1)
          {
            unsigned int v30 = v17 + 1;
            unint64_t v18 = v17[1];
            unint64_t v19 = v17 + 2;
            if (v17[1] < 0)
            {
              int v20 = *v19;
              int v21 = v18 + (v20 << 7);
              unint64_t v18 = (v21 - 128);
              if (v20 < 0)
              {
                unsigned int v30 = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
                if (!v30) {
                  return 0;
                }
                unint64_t v18 = v24;
                goto LABEL_27;
              }
              unint64_t v19 = v17 + 3;
            }
            unsigned int v30 = v19;
LABEL_27:
            if (v18 > 0x17)
            {
              if (*v6) {
                int v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(3, v18, v25);
            }
            else
            {
              uint64_t v22 = *(unsigned int *)(a1 + 24);
              if (v22 == *(_DWORD *)(a1 + 28))
              {
                int v23 = v22 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
                int v23 = v22 + 1;
              }
              *(_DWORD *)(a1 + 24) = v23;
            }
            unint64_t v17 = v30;
            if (*(void *)a3 <= (unint64_t)v30 || *v30 != 24) {
              goto LABEL_57;
            }
          }
        }
        if (v8 == 26)
        {
          *(void *)&long long v31 = a1 + 24;
          *((void *)&v31 + 1) = sub_16BAFD8;
          uint64_t v32 = a1 + 8;
          int v33 = 3;
          uint64_t v14 = sub_1112E88((uint64_t)a3, v7, &v31);
LABEL_56:
          unsigned int v30 = v14;
          if (!v14) {
            return 0;
          }
LABEL_57:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            return v30;
          }
          continue;
        }
LABEL_49:
        if (v8) {
          BOOL v28 = (v8 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (*v6)
          {
            uint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v30;
          }
          uint64_t v14 = (char *)sub_1885AC0(v8, v29, v7, a3);
          goto LABEL_56;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v30;
      case 4u:
        if (v8 != 34) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v26 = *(void *)(a1 + 56);
        if (!v26)
        {
          uint64_t v27 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v27 = (void *)*v27;
          }
          uint64_t v26 = sub_17868E0((uint64_t)v27);
          *(void *)(a1 + 56) = v26;
          uint64_t v7 = v30;
        }
        uint64_t v14 = sub_154985C(a3, v26, (unsigned __int8 *)v7);
        goto LABEL_56;
      default:
        goto LABEL_49;
    }
  }
}

char *sub_16CDE44(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    char v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 48);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v10, v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *char v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v18 = *(void *)(a1 + 56);
    *char v4 = 34;
    unsigned int v19 = *(_DWORD *)(v18 + 44);
    v4[1] = v19;
    if (v19 > 0x7F) {
      int v20 = sub_188A9CC(v19, v4 + 1);
    }
    else {
      int v20 = v4 + 2;
    }
    char v4 = sub_16C5108(v18, v20, a3);
  }
  uint64_t v21 = *(void *)(a1 + 8);
  if ((v21 & 1) == 0) {
    return v4;
  }
  unint64_t v23 = v21 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v23 + 31) < 0)
  {
    unint64_t v24 = *(void **)(v23 + 8);
    uint64_t v25 = *(void *)(v23 + 16);
  }
  else
  {
    unint64_t v24 = (void *)(v23 + 8);
    LODWORD(v25) = *(unsigned __int8 *)(v23 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v25)
  {
    uint64_t v26 = (int)v25;
    memcpy(v4, v24, (int)v25);
    v4 += v26;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v24, v25, v4);
}

uint64_t sub_16CE0D0(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      uint64_t v12 = sub_184B568(*(void *)(a1 + 40));
      v7 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v8 & 2) == 0)
      {
LABEL_12:
        if ((v8 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t v13 = sub_15B0D90(*(void *)(a1 + 48));
    v7 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 4) != 0)
    {
LABEL_13:
      uint64_t v9 = sub_16C5394(*(void *)(a1 + 56));
      v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_14:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v14 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    v7 += v15;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_16CE22C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v9 = *(void *)(a1 + 40);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unsigned int v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unsigned int v11 = (void *)*v11;
        }
        uint64_t v9 = sub_185089C((uint64_t)v11);
        *(void *)(a1 + 40) = v9;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v12 = &off_254D2B0;
      }
      sub_16CE3CC(v9, (uint64_t)v12);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_32;
        }
        goto LABEL_24;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v13 = *(void *)(a1 + 48);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        uint64_t v15 = (void *)*v15;
      }
      uint64_t v13 = sub_15C1918((uint64_t)v15);
      *(void *)(a1 + 48) = v13;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v16 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v16 = &off_253F1A0;
    }
    sub_15B0E24(v13, (uint64_t)v16);
    if ((v8 & 4) != 0)
    {
LABEL_24:
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v17 = *(void *)(a1 + 56);
      if (!v17)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        unsigned int v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unsigned int v19 = (void *)*v19;
        }
        uint64_t v17 = sub_17868E0((uint64_t)v19);
        *(void *)(a1 + 56) = v17;
      }
      if (*(void *)(a2 + 56)) {
        int v20 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        int v20 = &off_25449E0;
      }
      sub_16C54BC(v17, (uint64_t)v20);
    }
  }
LABEL_32:
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16CE3CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v5 = *(void *)(a1 + 48);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        sub_1850814((uint64_t)v7);
        *(void *)(a1 + 48) = v5;
      }
      if (*(void *)(a2 + 48)) {
        int v8 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        int v8 = &off_254D270;
      }
      sub_184AC8C(v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 40) |= v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16CE4A8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) == 0) {
    return 1;
  }
  uint64_t result = sub_16C5790(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

uint64_t sub_16CE508(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t v3 = *(void *)(a1 + 48);
    if ((*(unsigned char *)(v3 + 16) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_15B0F18(*(void *)(v3 + 24));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16CE558@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SpatialPlaceLookupResponse");
}

void *sub_16CE568(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16CE600((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_186F6BC(a1 + 5);
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t sub_16CE600(uint64_t result)
{
  if ((uint64_t (***)())result != &off_2544DA0)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + 64);
    if (v2)
    {
      sub_184AFBC(v2);
      operator delete();
    }
    if (v1[9])
    {
      sub_15B0994();
      operator delete();
    }
    if (v1[10])
    {
      sub_15BC200();
      operator delete();
    }
    uint64_t result = v1[11];
    if (result)
    {
      sub_184AFBC(result);
      operator delete();
    }
  }
  return result;
}

void sub_16CE6CC(void *a1)
{
  sub_16CE568(a1);

  operator delete();
}

uint64_t sub_16CE704(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16E8D08(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 0xF) == 0) {
    goto LABEL_11;
  }
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 72));
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    goto LABEL_17;
  }
  uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 64));
  if ((v5 & 2) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v5 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_17:
  uint64_t result = sub_15BC23C(*(void *)(v1 + 80));
  if ((v5 & 8) != 0) {
LABEL_10:
  }
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(v1 + 88));
LABEL_11:
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_16CE7D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v37 = a2;
  if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
    return v37;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = v37 + 1;
    unsigned int v8 = *v37;
    if (*v37 < 0)
    {
      int v9 = *v7;
      unsigned int v10 = v8 + (v9 << 7);
      unsigned int v8 = v10 - 128;
      if (v9 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v37, v10 - 128);
        unsigned int v8 = v11;
      }
      else
      {
        char v7 = v37 + 2;
      }
    }
    BOOL v37 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 64);
        if (v12) {
          goto LABEL_62;
        }
        uint64_t v13 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v12 = sub_185089C((uint64_t)v13);
        *(void *)(a1 + 64) = v12;
        goto LABEL_61;
      case 2u:
        if (v8 != 18) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 72);
        if (!v14)
        {
          uint64_t v15 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v15 = (void *)*v15;
          }
          uint64_t v14 = sub_15C1918((uint64_t)v15);
          *(void *)(a1 + 72) = v14;
          char v7 = v37;
        }
        unint64_t v16 = sub_1198F14(a3, v14, (unsigned __int8 *)v7);
        goto LABEL_72;
      case 3u:
        if (v8 == 24)
        {
          uint64_t v17 = v7 - 1;
          while (1)
          {
            BOOL v37 = v17 + 1;
            unint64_t v18 = v17[1];
            unsigned int v19 = v17 + 2;
            if (v17[1] < 0)
            {
              int v20 = *v19;
              int v21 = v18 + (v20 << 7);
              unint64_t v18 = (v21 - 128);
              if (v20 < 0)
              {
                BOOL v37 = (char *)sub_188C138((uint64_t)(v17 + 1), (v21 - 128));
                if (!v37) {
                  return 0;
                }
                unint64_t v18 = v24;
                goto LABEL_26;
              }
              unsigned int v19 = v17 + 3;
            }
            BOOL v37 = v19;
LABEL_26:
            if (v18 > 0xD)
            {
              if (*v6) {
                uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(3, v18, v25);
            }
            else
            {
              uint64_t v22 = *(unsigned int *)(a1 + 24);
              if (v22 == *(_DWORD *)(a1 + 28))
              {
                int v23 = v22 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v22 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v22) = v18;
                int v23 = v22 + 1;
              }
              *(_DWORD *)(a1 + 24) = v23;
            }
            uint64_t v17 = v37;
            if (*(void *)a3 <= (unint64_t)v37 || *v37 != 24) {
              goto LABEL_73;
            }
          }
        }
        if (v8 == 26)
        {
          *(void *)&long long v38 = a1 + 24;
          *((void *)&v38 + 1) = sub_16CD218;
          uint64_t v39 = a1 + 8;
          int v40 = 3;
          unint64_t v16 = sub_1112E88((uint64_t)a3, v7, &v38);
LABEL_72:
          BOOL v37 = v16;
          if (!v16) {
            return 0;
          }
LABEL_73:
          if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
            return v37;
          }
          continue;
        }
LABEL_65:
        if (v8) {
          BOOL v35 = (v8 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if (*v6)
          {
            int v36 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = v37;
          }
          unint64_t v16 = (char *)sub_1885AC0(v8, v36, v7, a3);
          goto LABEL_72;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v37;
      case 4u:
        if (v8 != 34) {
          goto LABEL_65;
        }
        uint64_t v26 = v7 - 1;
        while (1)
        {
          uint64_t v27 = (unsigned __int8 *)(v26 + 1);
          BOOL v37 = v26 + 1;
          BOOL v28 = *(_DWORD **)(a1 + 56);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 48), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 48) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            uint64_t v31 = sub_17884D8(*(void *)(a1 + 40));
            uint64_t v30 = sub_188CDC8(a1 + 40, v31);
            uint64_t v27 = (unsigned __int8 *)v37;
          }
          uint64_t v26 = sub_16CEC40(a3, v30, v27);
          BOOL v37 = v26;
          if (!v26) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 34) {
            goto LABEL_73;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v32 = *(void **)(a1 + 80);
        if (!v32)
        {
          int v33 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v33 = (void *)*v33;
          }
          uint64_t v32 = sub_15C221C((uint64_t)v33);
          *(void *)(a1 + 80) = v32;
          char v7 = v37;
        }
        unint64_t v16 = (char *)sub_123B1B4(a3, (uint64_t)v32, (unsigned __int8 *)v7);
        goto LABEL_72;
      case 6u:
        if (v8 != 50) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v12 = *(void *)(a1 + 88);
        if (!v12)
        {
          int v34 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v34 = (void *)*v34;
          }
          uint64_t v12 = sub_185089C((uint64_t)v34);
          *(void *)(a1 + 88) = v12;
LABEL_61:
          char v7 = v37;
        }
LABEL_62:
        unint64_t v16 = sub_12688D0(a3, v12, (unsigned __int8 *)v7);
        goto LABEL_72;
      default:
        goto LABEL_65;
    }
  }
}

char *sub_16CEC40(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E8D98(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16CECD0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 64);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    *uint64_t v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  }
  uint64_t v13 = *(unsigned int *)(a1 + 24);
  if ((int)v13 >= 1)
  {
    for (uint64_t i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v15 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 24;
      v4[1] = v15;
      if (v15 > 0x7F)
      {
        v4[1] = v15 | 0x80;
        unint64_t v16 = v15 >> 7;
        v4[2] = v15 >> 7;
        v4 += 3;
        if (v15 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v17 = v16 >> 14;
            v16 >>= 7;
            *v4++ = v16;
          }
          while (v17);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  int v18 = *(_DWORD *)(a1 + 48);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *uint64_t v4 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_16E90B0(v20, (unint64_t)v22, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v23 = *(void *)(a1 + 80);
    *uint64_t v4 = 42;
    unsigned int v24 = *(_DWORD *)(v23 + 20);
    v4[1] = v24;
    if (v24 > 0x7F) {
      uint64_t v25 = sub_188A9CC(v24, v4 + 1);
    }
    else {
      uint64_t v25 = v4 + 2;
    }
    uint64_t v4 = sub_15BC3D8(v23, v25, a3);
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v26 = *(void *)(a1 + 88);
    *uint64_t v4 = 50;
    unsigned int v27 = *(_DWORD *)(v26 + 44);
    v4[1] = v27;
    if (v27 > 0x7F) {
      BOOL v28 = sub_188A9CC(v27, v4 + 1);
    }
    else {
      BOOL v28 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v26, v28, a3);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_16CF044(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    uint64_t v3 = 0;
    int v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v4);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v6;
      ++v4;
    }
    while (v2 != v4);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v7 = v3 + v2;
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v7 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    unsigned int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16E92F0(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  int v15 = *(_DWORD *)(a1 + 16);
  if ((v15 & 0xF) == 0) {
    goto LABEL_21;
  }
  if ((v15 & 1) == 0)
  {
    if ((v15 & 2) == 0) {
      goto LABEL_18;
    }
LABEL_24:
    uint64_t v20 = sub_15B0D90(*(void *)(a1 + 72));
    v9 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v15 & 4) == 0)
    {
LABEL_19:
      if ((v15 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_25;
  }
  uint64_t v19 = sub_184B568(*(void *)(a1 + 64));
  v9 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 2) != 0) {
    goto LABEL_24;
  }
LABEL_18:
  if ((v15 & 4) == 0) {
    goto LABEL_19;
  }
LABEL_25:
  uint64_t v21 = sub_15BC4A4(*(void *)(a1 + 80));
  v9 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v15 & 8) != 0)
  {
LABEL_20:
    uint64_t v16 = sub_184B568(*(void *)(a1 + 88));
    v9 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_21:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v22 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v22 + 31) < 0) {
      uint64_t v23 = *(void *)(v22 + 16);
    }
    else {
      uint64_t v23 = *(unsigned __int8 *)(v22 + 31);
    }
    v9 += v23;
  }
  *(_DWORD *)(a1 + 20) = v9;
  return v9;
}

void sub_16CF224(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18713F0((uint64_t *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 0xF) == 0) {
    goto LABEL_44;
  }
  if ((v13 & 1) == 0)
  {
    if ((v13 & 2) == 0) {
      goto LABEL_9;
    }
LABEL_20:
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v18 = *(void *)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v21 = &off_253F1A0;
    }
    sub_15B0E24(v18, (uint64_t)v21);
    if ((v13 & 4) == 0)
    {
LABEL_10:
      if ((v13 & 8) == 0) {
        goto LABEL_44;
      }
      goto LABEL_36;
    }
    goto LABEL_28;
  }
  *(_DWORD *)(a1 + 16) |= 1u;
  uint64_t v14 = *(void *)(a1 + 64);
  if (!v14)
  {
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (void *)*v16;
    }
    uint64_t v14 = sub_185089C((uint64_t)v16);
    *(void *)(a1 + 64) = v14;
  }
  if (*(void *)(a2 + 64)) {
    uint64_t v17 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    uint64_t v17 = &off_254D2B0;
  }
  sub_16CE3CC(v14, (uint64_t)v17);
  if ((v13 & 2) != 0) {
    goto LABEL_20;
  }
LABEL_9:
  if ((v13 & 4) == 0) {
    goto LABEL_10;
  }
LABEL_28:
  *(_DWORD *)(a1 + 16) |= 4u;
  unint64_t v22 = *(std::string **)(a1 + 80);
  if (!v22)
  {
    uint64_t v23 = *(void *)(a1 + 8);
    unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      unsigned int v24 = (void *)*v24;
    }
    unint64_t v22 = (std::string *)sub_15C221C((uint64_t)v24);
    *(void *)(a1 + 80) = v22;
  }
  if (*(void *)(a2 + 80)) {
    uint64_t v25 = *(uint64_t (****)())(a2 + 80);
  }
  else {
    uint64_t v25 = &off_253F5C0;
  }
  sub_12329D0(v22, (uint64_t)v25);
  if ((v13 & 8) != 0)
  {
LABEL_36:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v26 = *(void *)(a1 + 88);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      BOOL v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        BOOL v28 = (void *)*v28;
      }
      uint64_t v26 = sub_185089C((uint64_t)v28);
      *(void *)(a1 + 88) = v26;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v29 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v29 = &off_254D2B0;
    }
    sub_16CE3CC(v26, (uint64_t)v29);
  }
LABEL_44:
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16CF47C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 64));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 72));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15BC528(*(void *)(a1 + 80));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_16CE508(*(void *)(a1 + 88));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16CF4F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SpatialEventLookupResponse");
}

void *sub_16CF500(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CF574(void *a1)
{
  sub_16CF500(a1);

  operator delete();
}

uint64_t *sub_16CF5AC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16CF5BC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    int v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        int v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        int v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      int v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16CF6BC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16CF754(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16CF788(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16CF7A4()
{
  return 1;
}

void *sub_16CF7AC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SpatialLookupFilter");
}

uint64_t sub_16CF7BC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D1D18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  return a1;
}

void sub_16CF838(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16CF868(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D1D18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  unint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187147C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *int v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1871508((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v18 = *(_DWORD *)(a2 + 40);
  if (v18) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  if ((v18 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v18 & 4) != 0) {
    operator new();
  }
  uint64_t v19 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = v19;
  return a1;
}

void sub_16CFA8C()
{
}

uint64_t sub_16CFB30(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2544E18)
  {
    uint64_t v5 = *(void *)(a1 + 96);
    if (v5)
    {
      sub_16B5CC0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 104);
    if (v6)
    {
      sub_16B5CC0(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 112);
    if (v7)
    {
      sub_16B660C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_186F7BC((void *)(a1 + 72));
  sub_186F73C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16CFC40(uint64_t a1)
{
  sub_16CFB30(a1);

  operator delete();
}

uint64_t sub_16CFC78(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16D21E4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16D1624(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t result = sub_16B5DB0(*(void *)(a1 + 96));
      if ((v9 & 2) == 0)
      {
LABEL_12:
        if ((v9 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_13;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_12;
    }
    uint64_t result = sub_16B5DB0(*(void *)(a1 + 104));
    if ((v9 & 4) != 0) {
LABEL_13:
    }
      uint64_t result = sub_16B5E18(*(void *)(a1 + 112));
  }
LABEL_14:
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(void *)(v10 + 112) = 0;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

char *sub_16CFD68(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v37 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v37 + 1;
    unsigned int v9 = *v37;
    if (*v37 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v37, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v37 + 2;
      }
    }
    BOOL v37 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_52;
        }
        int v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          BOOL v37 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_17874D8(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = (unsigned __int8 *)v37;
          }
          int v12 = (char *)sub_16D017C(a3, v16, v13);
          BOOL v37 = v12;
          if (!v12) {
            goto LABEL_69;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_62;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        int v18 = *(void **)(a1 + 96);
        if (v18) {
          goto LABEL_30;
        }
        uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v19 = (void *)*v19;
        }
        int v18 = sub_1786034((uint64_t)v19);
        *(void *)(a1 + 96) = v18;
        goto LABEL_29;
      case 3u:
        if (v9 != 26) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        int v18 = *(void **)(a1 + 104);
        if (v18) {
          goto LABEL_30;
        }
        uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          uint64_t v20 = (void *)*v20;
        }
        int v18 = sub_1786034((uint64_t)v20);
        *(void *)(a1 + 104) = v18;
LABEL_29:
        uint64_t v8 = v37;
LABEL_30:
        uint64_t v21 = sub_16D020C(a3, (uint64_t)v18, (unsigned __int8 *)v8);
        goto LABEL_61;
      case 4u:
        if (v9 != 34) {
          goto LABEL_52;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        unint64_t v22 = *(void **)(a1 + 112);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v23 = (void *)*v23;
          }
          unint64_t v22 = sub_17860B0((uint64_t)v23);
          *(void *)(a1 + 112) = v22;
          uint64_t v8 = v37;
        }
        uint64_t v21 = sub_16B6084(a3, (uint64_t)v22, (unsigned __int8 *)v8);
        goto LABEL_61;
      case 5u:
        if (v9 != 40) {
          goto LABEL_52;
        }
        v5 |= 8u;
        unsigned int v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          BOOL v35 = (char *)sub_188C138((uint64_t)v8, v25);
          BOOL v37 = v35;
          *(void *)(a1 + 120) = v36;
          if (!v35) {
            goto LABEL_69;
          }
        }
        else
        {
          unsigned int v24 = v8 + 2;
LABEL_41:
          BOOL v37 = v24;
          *(void *)(a1 + 120) = v25;
        }
        goto LABEL_62;
      case 6u:
        if (v9 != 50) {
          goto LABEL_52;
        }
        uint64_t v27 = v8 - 1;
        while (1)
        {
          BOOL v28 = (unsigned __int8 *)(v27 + 1);
          BOOL v37 = v27 + 1;
          uint64_t v29 = *(_DWORD **)(a1 + 88);
          if (v29 && (uint64_t v30 = *(int *)(a1 + 80), (int)v30 < *v29))
          {
            *(_DWORD *)(a1 + 80) = v30 + 1;
            uint64_t v31 = *(void *)&v29[2 * v30 + 2];
          }
          else
          {
            uint64_t v32 = sub_1787428(*(void *)(a1 + 72));
            uint64_t v31 = sub_188CDC8(a1 + 72, v32);
            BOOL v28 = (unsigned __int8 *)v37;
          }
          uint64_t v27 = (char *)sub_16D029C(a3, v31, v28);
          BOOL v37 = v27;
          if (!v27) {
            goto LABEL_69;
          }
          if (*(void *)a3 <= (unint64_t)v27 || *v27 != 50) {
            goto LABEL_62;
          }
        }
      default:
LABEL_52:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v37;
            }
            uint64_t v21 = (char *)sub_1885AC0(v9, v34, v8, a3);
          }
          else
          {
            uint64_t v21 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2544E18, (uint64_t *)(a1 + 8), a3);
          }
LABEL_61:
          BOOL v37 = v21;
          if (!v21) {
            goto LABEL_69;
          }
LABEL_62:
          if (sub_11947B8((uint64_t)a3, &v37, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_69:
        }
          BOOL v37 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v37;
    }
  }
}

uint64_t sub_16D017C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D23BC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16D020C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16B5E3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16D029C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D16DC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16D032C(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16D2BC4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v12 = *(void *)(a1 + 96);
    *a2 = 18;
    unsigned int v13 = *(_DWORD *)(v12 + 20);
    a2[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, a2 + 1);
    }
    else {
      uint64_t v14 = a2 + 2;
    }
    a2 = sub_16B6114(v12, (unint64_t)v14, a3);
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 4) == 0) {
        goto LABEL_12;
      }
      goto LABEL_26;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v15 = *(void *)(a1 + 104);
  *a2 = 26;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  a2[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, a2 + 1);
  }
  else {
    uint64_t v17 = a2 + 2;
  }
  a2 = sub_16B6114(v15, (unint64_t)v17, a3);
  if ((v11 & 4) == 0)
  {
LABEL_12:
    if ((v11 & 8) == 0) {
      goto LABEL_38;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v18 = *(void *)(a1 + 112);
  *a2 = 34;
  unsigned int v19 = *(_DWORD *)(v18 + 20);
  a2[1] = v19;
  if (v19 > 0x7F) {
    uint64_t v20 = sub_188A9CC(v19, a2 + 1);
  }
  else {
    uint64_t v20 = a2 + 2;
  }
  a2 = sub_16B68A8(v18, (unint64_t)v20, a3);
  if ((v11 & 8) != 0)
  {
LABEL_32:
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v21 = *(void *)(a1 + 120);
    *a2 = 40;
    a2[1] = v21;
    if (v21 > 0x7F)
    {
      a2[1] = v21 | 0x80;
      unint64_t v22 = v21 >> 7;
      a2[2] = v21 >> 7;
      a2 += 3;
      if (v21 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v23 = v22 >> 14;
          v22 >>= 7;
          *a2++ = v22;
        }
        while (v23);
      }
    }
    else
    {
      a2 += 2;
    }
  }
LABEL_38:
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 50;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      a2[1] = v27;
      if (v27 > 0x7F) {
        BOOL v28 = sub_188A9CC(v27, a2 + 1);
      }
      else {
        BOOL v28 = a2 + 2;
      }
      a2 = sub_16D1A74(v26, v28, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return a2;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    uint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    uint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(a2, v32, (int)v33);
    a2 += v34;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, a2);
}

uint64_t sub_16D06D4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16D312C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_16D1CB0(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 0xF) == 0) {
    goto LABEL_19;
  }
  if ((v17 & 1) == 0)
  {
    if ((v17 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_22:
    uint64_t v21 = sub_16B6328(*(void *)(a1 + 104));
    v11 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 4) == 0)
    {
LABEL_17:
      if ((v17 & 8) == 0) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    goto LABEL_23;
  }
  uint64_t v20 = sub_16B6328(*(void *)(a1 + 96));
  v11 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_16:
  if ((v17 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_23:
  uint64_t v22 = sub_16B6A4C(*(void *)(a1 + 112));
  v11 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 8) != 0) {
LABEL_18:
  }
    v11 += ((9 * (__clz(*(void *)(a1 + 120) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_19:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v23 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v11 += v24;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_16D08A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187147C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1871508((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0xF) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v16 = *(std::string **)(a1 + 96);
      if (!v16)
      {
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v18 = (void *)*v18;
        }
        uint64_t v16 = (std::string *)sub_1786034((uint64_t)v18);
        *(void *)(a1 + 96) = v16;
      }
      if (*(void *)(a2 + 96)) {
        unsigned int v19 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        unsigned int v19 = &off_2544448;
      }
      sub_16B6414(v16, (uint64_t)v19);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_34;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v20 = *(std::string **)(a1 + 104);
    if (!v20)
    {
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = (void *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (void *)*v22;
      }
      uint64_t v20 = (std::string *)sub_1786034((uint64_t)v22);
      *(void *)(a1 + 104) = v20;
    }
    if (*(void *)(a2 + 104)) {
      unint64_t v23 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unint64_t v23 = &off_2544448;
    }
    sub_16B6414(v20, (uint64_t)v23);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_14;
      }
LABEL_12:
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      goto LABEL_13;
    }
LABEL_34:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v24 = *(std::string **)(a1 + 112);
    if (!v24)
    {
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (void *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (void *)*v26;
      }
      uint64_t v24 = (std::string *)sub_17860B0((uint64_t)v26);
      *(void *)(a1 + 112) = v24;
    }
    if (*(void *)(a2 + 112)) {
      unsigned int v27 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      unsigned int v27 = &off_2544470;
    }
    sub_117EF04(v24, (uint64_t)v27);
    if ((v14 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16D0AF8(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16D37C8(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }

  return sub_16D0B6C(a1 + 72);
}

uint64_t sub_16D0B6C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 >= 1)
  {
    do
    {
      uint64_t v3 = v1--;
      uint64_t v4 = *(void *)(*(void *)(a1 + 16) + 8 * v1 + 8);
      uint64_t v5 = *(unsigned int *)(v4 + 48);
      while ((int)v5 >= 1)
      {
        uint64_t v6 = v5 - 1;
        char v7 = sub_16DA478(*(void *)(*(void *)(v4 + 56) + 8 * v5));
        uint64_t v5 = v6;
        if ((v7 & 1) == 0) {
          return 0;
        }
      }
    }
    while (v3 >= 2);
  }
  return 1;
}

void *sub_16D0BF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitSchedule");
}

uint64_t sub_16D0C08(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2544E98)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_16B5CC0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_16B5CC0(v6);
      operator delete();
    }
    char v7 = *(void **)(a1 + 40);
    if (v7)
    {
      sub_16B660C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D0CF8(uint64_t a1)
{
  sub_16D0C08(a1);

  operator delete();
}

uint64_t sub_16D0D30(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 7) != 0)
  {
    if (v2)
    {
      uint64_t result = sub_16B5DB0(*(void *)(result + 24));
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_6;
        }
        goto LABEL_5;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t result = sub_16B5DB0(*(void *)(v1 + 32));
    if ((v2 & 4) != 0) {
LABEL_5:
    }
      uint64_t result = sub_16B5E18(*(void *)(v1 + 40));
  }
LABEL_6:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16D0DBC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    switch(v9 >> 3)
    {
      case 5u:
        if (v9 != 42) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        int v12 = *(void **)(a1 + 24);
        if (v12) {
          goto LABEL_20;
        }
        unsigned int v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          unsigned int v13 = (void *)*v13;
        }
        int v12 = sub_1786034((uint64_t)v13);
        *(void *)(a1 + 24) = v12;
        goto LABEL_19;
      case 6u:
        if (v9 != 50) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        int v12 = *(void **)(a1 + 32);
        if (!v12)
        {
          int v14 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v14 = (void *)*v14;
          }
          int v12 = sub_1786034((uint64_t)v14);
          *(void *)(a1 + 32) = v12;
LABEL_19:
          uint64_t v8 = v25;
        }
LABEL_20:
        uint64_t v15 = sub_16D020C(a3, (uint64_t)v12, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 7u:
        if (v9 != 58) {
          goto LABEL_32;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void **)(a1 + 40);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_17860B0((uint64_t)v17);
          *(void *)(a1 + 40) = v16;
          uint64_t v8 = v25;
        }
        uint64_t v15 = sub_16B6084(a3, (uint64_t)v16, (unsigned __int8 *)v8);
        goto LABEL_39;
      case 8u:
        if (v9 != 64) {
          goto LABEL_32;
        }
        v5 |= 8u;
        uint64_t v18 = v8 + 1;
        uint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_31;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          unint64_t v23 = (char *)sub_188C138((uint64_t)v8, v19);
          uint64_t v25 = v23;
          *(unsigned char *)(a1 + 48) = v24 != 0;
          if (!v23) {
            goto LABEL_47;
          }
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_31:
          uint64_t v25 = v18;
          *(unsigned char *)(a1 + 48) = v19 != 0;
        }
        goto LABEL_40;
      default:
LABEL_32:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            uint64_t v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v25;
          }
          uint64_t v15 = (char *)sub_1885AC0(v9, v22, v8, a3);
LABEL_39:
          uint64_t v25 = v15;
          if (!v15) {
            goto LABEL_47;
          }
LABEL_40:
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          uint64_t v25 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v25;
    }
  }
}

unsigned char *sub_16D1074(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *char v4 = 42;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16B6114(v7, (unint64_t)v9, a3);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 32);
  *char v4 = 50;
  unsigned int v11 = *(_DWORD *)(v10 + 20);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  char v4 = sub_16B6114(v10, (unint64_t)v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
LABEL_18:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *char v4 = 58;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_16B68A8(v13, (unint64_t)v15, a3);
  if ((v6 & 8) != 0)
  {
LABEL_24:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v16 = *(unsigned char *)(a1 + 48);
    *char v4 = 64;
    v4[1] = v16;
    v4 += 2;
  }
LABEL_27:
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return v4;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    int v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    int v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(v4, v20, (int)v21);
    v4 += v22;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v20, v21, v4);
}

uint64_t sub_16D12A0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t result = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v5 = sub_16B6328(*(void *)(a1 + 24));
  uint64_t v3 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v6 = sub_16B6328(*(void *)(a1 + 32));
    v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = sub_16B6A4C(*(void *)(a1 + 40));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v3 + 2;
  }
  else {
    uint64_t result = v3;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16D13B0(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        uint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          uint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_1786034((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2544448;
      }
      uint64_t result = sub_16B6414(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_28;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    uint64_t v10 = (std::string *)v3[1].__r_.__value_.__l.__size_;
    if (!v10)
    {
      std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
      int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        int v12 = (void *)*v12;
      }
      uint64_t v10 = (std::string *)sub_1786034((uint64_t)v12);
      v3[1].__r_.__value_.__l.__size_ = (std::string::size_type)v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_2544448;
    }
    uint64_t result = sub_16B6414(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      v3[2].__r_.__value_.__s.__data_[0] = *(unsigned char *)(a2 + 48);
      goto LABEL_7;
    }
LABEL_28:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    unsigned int v14 = (std::string *)v3[1].__r_.__value_.__r.__words[2];
    if (!v14)
    {
      std::string::size_type v15 = v3->__r_.__value_.__l.__size_;
      char v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        char v16 = (void *)*v16;
      }
      unsigned int v14 = (std::string *)sub_17860B0((uint64_t)v16);
      v3[1].__r_.__value_.__r.__words[2] = (std::string::size_type)v14;
    }
    if (*(void *)(a2 + 40)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 40);
    }
    else {
      uint64_t v17 = &off_2544470;
    }
    uint64_t result = sub_117EF04(v14, (uint64_t)v17);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16D1520()
{
  return 1;
}

void *sub_16D1528@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitScheduleFilter");
}

uint64_t sub_16D1538(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_154AD28((void *)(a1 + 40));
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D15EC(uint64_t a1)
{
  sub_16D1538(a1);

  operator delete();
}

uint64_t sub_16D1624(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  uint64_t v2 = *(unsigned int *)(result + 48);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16D9D14(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 48) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(unsigned char *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_16D16DC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v35 + 2);
      }
    }
    *(void *)BOOL v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8)
        {
          if (v9 != 10) {
            goto LABEL_46;
          }
          uint64_t v30 = sub_188C2EC((unsigned int *)(a1 + 24), v8, (uint64_t)a3);
          goto LABEL_53;
        }
        int v12 = v8 - 1;
        while (1)
        {
          *(void *)BOOL v35 = v12 + 1;
          uint64_t v13 = v12[1];
          if ((char)v12[1] < 0)
          {
            int v14 = v13 + (v12[2] << 7);
            uint64_t v13 = (v14 - 128);
            if ((char)v12[2] < 0)
            {
              int v12 = (unsigned __int8 *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
              uint64_t v13 = v15;
            }
            else
            {
              v12 += 3;
            }
          }
          else
          {
            v12 += 2;
          }
          *(void *)BOOL v35 = v12;
          uint64_t v16 = *(unsigned int *)(a1 + 24);
          if (v16 == *(_DWORD *)(a1 + 28))
          {
            int v17 = v16 + 1;
            sub_188CA54((unsigned int *)(a1 + 24), v16 + 1);
            *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
            int v12 = *(unsigned __int8 **)v35;
          }
          else
          {
            *(void *)(*(void *)(a1 + 32) + 8 * v16) = v13;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 24) = v17;
          if (!v12) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
            goto LABEL_54;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_46;
        }
        uint64_t v18 = v8 - 1;
        while (1)
        {
          unint64_t v19 = v18 + 1;
          *(void *)BOOL v35 = v18 + 1;
          int v20 = *(_DWORD **)(a1 + 56);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 48), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 48) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_1787818(*(void *)(a1 + 40));
            uint64_t v22 = sub_188CDC8(a1 + 40, v23);
            unint64_t v19 = *(unsigned __int8 **)v35;
          }
          uint64_t v18 = (unsigned __int8 *)sub_1536B70(a3, v22, v19);
          *(void *)BOOL v35 = v18;
          if (!v18) {
            goto LABEL_59;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_54;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_46;
        }
        v5 |= 2u;
        uint64_t v24 = (char *)(v8 + 1);
        uint64_t v25 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          uint64_t v31 = sub_188C138((uint64_t)v8, v25);
          *(void *)BOOL v35 = v31;
          *(unsigned char *)(a1 + 72) = v32 != 0;
          if (!v31) {
            goto LABEL_59;
          }
        }
        else
        {
          uint64_t v24 = (char *)(v8 + 2);
LABEL_37:
          *(void *)BOOL v35 = v24;
          *(unsigned char *)(a1 + 72) = v25 != 0;
        }
        goto LABEL_54;
      case 4u:
        if (v9 != 34) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v27 = *(void *)(a1 + 8);
        BOOL v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          BOOL v28 = (uint64_t *)*v28;
        }
        uint64_t v29 = (std::string *)sub_1880F84((void *)(a1 + 64), v28);
        uint64_t v30 = (void *)sub_188C244(v29, *(char **)v35, (uint64_t)a3);
        goto LABEL_53;
      default:
LABEL_46:
        if (v9) {
          BOOL v33 = (v9 & 7) == 4;
        }
        else {
          BOOL v33 = 1;
        }
        if (!v33)
        {
          if (*v7)
          {
            uint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(unsigned __int8 **)v35;
          }
          uint64_t v30 = sub_1885AC0(v9, v34, (char *)v8, a3);
LABEL_53:
          *(void *)BOOL v35 = v30;
          if (!v30) {
            goto LABEL_59;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_59:
        }
          *(void *)BOOL v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v35;
    }
  }
}

char *sub_16D1A74(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_16DA058(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 16);
  if ((v16 & 2) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v17 = *(unsigned char *)(a1 + 72);
    *__dst = 24;
    __dst[1] = v17;
    __dst += 2;
  }
  if (v16) {
    __dst = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return __dst;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)__dst >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(__dst, v21, (int)v22);
    __dst += v23;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, __dst);
}

uint64_t sub_16D1CB0(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24));
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + *(unsigned int *)(a1 + 24) + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    uint64_t v6 = (uint64_t *)(v5 + 8);
  }
  else {
    uint64_t v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16DA234(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 16);
  if ((v10 & 3) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v10 & 2) != 0) {
      v4 += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v4 += v17;
  }
  *(_DWORD *)(a1 + 20) = v4;
  return v4;
}

void sub_16D1DC8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 48);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v10 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_154B228((uint64_t *)(a1 + 40), v10, v9, v8, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v11 = *(_DWORD *)(a1 + 48) + v8;
    *(_DWORD *)(a1 + 48) = v11;
    uint64_t v12 = *(int **)(a1 + 56);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  int v13 = *(_DWORD *)(a2 + 16);
  if ((v13 & 3) != 0)
  {
    if (v13)
    {
      uint64_t v14 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      sub_1881DF4((std::string **)(a1 + 64), v14, v16);
    }
    if ((v13 & 2) != 0) {
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    }
    *(_DWORD *)(a1 + 16) |= v13;
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16D1F34(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16DA478(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_16D1F8C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DepartureSequenceContainer");
}

uint64_t sub_16D1F9C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D1E98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = a2;
  *(void *)(a1 + 136) = &qword_2550250;
  *(void *)(a1 + 144) = &qword_2550250;
  *(void *)(a1 + 152) = &qword_2550250;
  *(void *)(a1 + 160) = &qword_2550250;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  return a1;
}

void sub_16D2038(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16D2068(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 136);
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 144) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 144));
  }
  if (*(uint64_t **)(a1 + 152) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 152));
  }
  if (*(uint64_t **)(a1 + 160) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 160));
  }
  if ((uint64_t (***)())a1 != &off_2544ED0 && *(void *)(a1 + 168))
  {
    sub_13D2884();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_1889DA8(a1 + 120);
  sub_186F93C((void *)(a1 + 96));
  sub_186F8BC((void *)(a1 + 72));
  sub_186F83C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D21AC(uint64_t a1)
{
  sub_16D2068(a1);

  operator delete();
}

uint64_t sub_16D21E4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16D3A1C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16D46D0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_16B5E18(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  *(_DWORD *)(a1 + 120) = 0;
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 0x1F) == 0) {
    goto LABEL_20;
  }
  if ((v12 & 1) == 0)
  {
    if ((v12 & 2) == 0) {
      goto LABEL_16;
    }
LABEL_30:
    unint64_t v16 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v16 + 23) < 0)
    {
      **(unsigned char **)unint64_t v16 = 0;
      *(void *)(v16 + 8) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_34;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v16 = 0;
      *(unsigned char *)(v16 + 23) = 0;
      if ((v12 & 4) != 0) {
        goto LABEL_34;
      }
    }
LABEL_17:
    if ((v12 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
  unint64_t v15 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v15 + 23) < 0)
  {
    **(unsigned char **)unint64_t v15 = 0;
    *(void *)(v15 + 8) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_30;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v15 = 0;
    *(unsigned char *)(v15 + 23) = 0;
    if ((v12 & 2) != 0) {
      goto LABEL_30;
    }
  }
LABEL_16:
  if ((v12 & 4) == 0) {
    goto LABEL_17;
  }
LABEL_34:
  unint64_t v17 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v17 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v17 = 0;
    *(unsigned char *)(v17 + 23) = 0;
    if ((v12 & 8) != 0) {
      goto LABEL_38;
    }
LABEL_18:
    if ((v12 & 0x10) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  **(unsigned char **)unint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  if ((v12 & 8) == 0) {
    goto LABEL_18;
  }
LABEL_38:
  unint64_t v18 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v18 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v18 = 0;
    *(unsigned char *)(v18 + 23) = 0;
    if ((v12 & 0x10) == 0) {
      goto LABEL_20;
    }
LABEL_19:
    uint64_t result = sub_1369F48(*(void *)(a1 + 168));
    goto LABEL_20;
  }
  **(unsigned char **)unint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  if ((v12 & 0x10) != 0) {
    goto LABEL_19;
  }
LABEL_20:
  if ((v12 & 0xE0) != 0)
  {
    *(void *)(a1 + 176) = 0;
    *(void *)(a1 + 184) = 0;
    *(void *)(a1 + 192) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_16D23BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v63 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v63, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v62 = (uint64_t *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = (unsigned __int8 *)(*(void *)v63 + 1);
      unsigned int v8 = **(unsigned char **)v63;
      if ((char)**(unsigned char **)v63 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v63, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = (unsigned __int8 *)(*(void *)v63 + 2);
        }
      }
      *(void *)int v63 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 8) {
            goto LABEL_102;
          }
          v5 |= 0x20u;
          uint64_t v11 = (char *)(v7 + 1);
          uint64_t v12 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_13;
          }
          int v13 = *v11;
          uint64_t v12 = v12 + (v13 << 7) - 128;
          if ((v13 & 0x80000000) == 0)
          {
            uint64_t v11 = (char *)(v7 + 2);
LABEL_13:
            *(void *)int v63 = v11;
            *(void *)(a1 + 176) = v12;
            goto LABEL_92;
          }
          uint64_t v54 = sub_188C138((uint64_t)v7, v12);
          *(void *)int v63 = v54;
          *(void *)(a1 + 176) = v55;
          if (!v54) {
            goto LABEL_115;
          }
          goto LABEL_92;
        case 2u:
          if (v8 != 16) {
            goto LABEL_102;
          }
          v5 |= 0x40u;
          char v14 = (char *)(v7 + 1);
          uint64_t v15 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_18;
          }
          int v16 = *v14;
          uint64_t v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            uint64_t v56 = sub_188C138((uint64_t)v7, v15);
            *(void *)int v63 = v56;
            *(void *)(a1 + 184) = v57;
            if (!v56) {
              goto LABEL_115;
            }
          }
          else
          {
            char v14 = (char *)(v7 + 2);
LABEL_18:
            *(void *)int v63 = v14;
            *(void *)(a1 + 184) = v15;
          }
          goto LABEL_92;
        case 5u:
          if (v8 != 42) {
            goto LABEL_102;
          }
          unint64_t v17 = v7 - 1;
          while (1)
          {
            unint64_t v18 = v17 + 1;
            *(void *)int v63 = v17 + 1;
            unint64_t v19 = *(_DWORD **)(a1 + 64);
            if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
            {
              *(_DWORD *)(a1 + 56) = v20 + 1;
              uint64_t v21 = *(void *)&v19[2 * v20 + 2];
            }
            else
            {
              uint64_t v22 = sub_1787534(*(void *)(a1 + 48));
              uint64_t v21 = sub_188CDC8(a1 + 48, v22);
              unint64_t v18 = *(unsigned __int8 **)v63;
            }
            unint64_t v17 = (unsigned __int8 *)sub_16D2AA4(a3, v21, v18);
            *(void *)int v63 = v17;
            if (!v17) {
              goto LABEL_115;
            }
            if (*(void *)a3 <= (unint64_t)v17 || *v17 != 42) {
              goto LABEL_92;
            }
          }
        case 6u:
          if (v8 != 50) {
            goto LABEL_102;
          }
          uint64_t v23 = (char *)(v7 - 1);
          while (1)
          {
            uint64_t v24 = (unsigned __int8 *)(v23 + 1);
            *(void *)int v63 = v23 + 1;
            uint64_t v25 = *(_DWORD **)(a1 + 88);
            if (v25 && (uint64_t v26 = *(int *)(a1 + 80), (int)v26 < *v25))
            {
              *(_DWORD *)(a1 + 80) = v26 + 1;
              uint64_t v27 = *(void *)&v25[2 * v26 + 2];
            }
            else
            {
              sub_1787590(*(void *)(a1 + 72));
              uint64_t v27 = sub_188CDC8(a1 + 72, v28);
              uint64_t v24 = *(unsigned __int8 **)v63;
            }
            uint64_t v23 = sub_16D2B34(a3, v27, v24);
            *(void *)int v63 = v23;
            if (!v23) {
              goto LABEL_115;
            }
            if (*(void *)a3 <= (unint64_t)v23 || *v23 != 50) {
              goto LABEL_92;
            }
          }
        case 0xBu:
          if (v8 != 90) {
            goto LABEL_102;
          }
          uint64_t v29 = (char *)(v7 - 1);
          while (1)
          {
            uint64_t v30 = (unsigned __int8 *)(v29 + 1);
            *(void *)int v63 = v29 + 1;
            uint64_t v31 = *(_DWORD **)(a1 + 112);
            if (v31 && (uint64_t v32 = *(int *)(a1 + 104), (int)v32 < *v31))
            {
              *(_DWORD *)(a1 + 104) = v32 + 1;
              uint64_t v33 = *(void *)&v31[2 * v32 + 2];
            }
            else
            {
              uint64_t v34 = sub_17860B0(*(void *)(a1 + 96));
              uint64_t v33 = sub_188CDC8(a1 + 96, (uint64_t)v34);
              uint64_t v30 = *(unsigned __int8 **)v63;
            }
            uint64_t v29 = sub_16B6084(a3, v33, v30);
            *(void *)int v63 = v29;
            if (!v29) {
              goto LABEL_115;
            }
            if (*(void *)a3 <= (unint64_t)v29 || *v29 != 90) {
              goto LABEL_92;
            }
          }
        case 0xCu:
          if (v8 != 98) {
            goto LABEL_102;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v35 = *(void *)(a1 + 8);
          uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
          if (v35) {
            uint64_t v36 = (uint64_t *)*v36;
          }
          BOOL v37 = (void *)(a1 + 136);
          goto LABEL_90;
        case 0xDu:
          if (v8 != 106) {
            goto LABEL_102;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v38 = *(void *)(a1 + 8);
          uint64_t v36 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
          if (v38) {
            uint64_t v36 = (uint64_t *)*v36;
          }
          BOOL v37 = (void *)(a1 + 144);
          goto LABEL_90;
        case 0xEu:
          if (v8 == 112)
          {
            uint64_t v39 = v7 - 1;
            while (1)
            {
              *(void *)int v63 = v39 + 1;
              uint64_t v40 = v39[1];
              if ((char)v39[1] < 0)
              {
                int v41 = v40 + (v39[2] << 7);
                uint64_t v40 = (v41 - 128);
                if ((char)v39[2] < 0)
                {
                  uint64_t v39 = (unsigned __int8 *)sub_188C138((uint64_t)(v39 + 1), (v41 - 128));
                  uint64_t v40 = v42;
                }
                else
                {
                  v39 += 3;
                }
              }
              else
              {
                v39 += 2;
              }
              *(void *)int v63 = v39;
              uint64_t v43 = *(unsigned int *)(a1 + 120);
              if (v43 == *(_DWORD *)(a1 + 124))
              {
                int v44 = v43 + 1;
                sub_188CA54((unsigned int *)(a1 + 120), v43 + 1);
                *(void *)(*(void *)(a1 + 128) + 8 * v43) = v40;
                uint64_t v39 = *(unsigned __int8 **)v63;
              }
              else
              {
                *(void *)(*(void *)(a1 + 128) + 8 * v43) = v40;
                int v44 = v43 + 1;
              }
              *(_DWORD *)(a1 + 120) = v44;
              if (!v39) {
                goto LABEL_115;
              }
              if (*(void *)a3 <= (unint64_t)v39 || *v39 != 112) {
                goto LABEL_92;
              }
            }
          }
          if (v8 == 114)
          {
            uint64_t v47 = (uint64_t)sub_188C2EC((unsigned int *)(a1 + 120), v7, (uint64_t)a3);
          }
          else
          {
LABEL_102:
            if (v8) {
              BOOL v60 = (v8 & 7) == 4;
            }
            else {
              BOOL v60 = 1;
            }
            if (v60)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_115:
              *(void *)int v63 = 0;
              goto LABEL_2;
            }
            if (v8 - 1600 < 0xFA0 || (v8 - 8000) >> 6 <= 0x7C)
            {
              uint64_t v47 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2544ED0, v62, a3);
            }
            else
            {
              if (*v62)
              {
                long long v61 = (std::string *)((*v62 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                long long v61 = (std::string *)sub_188DBD8(v62);
                uint64_t v7 = *(unsigned __int8 **)v63;
              }
              uint64_t v47 = (uint64_t)sub_1885AC0(v8, v61, (char *)v7, a3);
            }
          }
LABEL_91:
          *(void *)int v63 = v47;
          if (!v47) {
            goto LABEL_115;
          }
LABEL_92:
          if (sub_11947B8((uint64_t)a3, (char **)v63, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 0xFu:
          if (v8 != 122) {
            goto LABEL_102;
          }
          *(_DWORD *)(a1 + 40) |= 0x10u;
          uint64_t v45 = *(void *)(a1 + 168);
          if (!v45)
          {
            v46 = (void *)(*v62 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v62) {
              v46 = (void *)*v46;
            }
            uint64_t v45 = sub_13DAB08((uint64_t)v46);
            *(void *)(a1 + 168) = v45;
            uint64_t v7 = *(unsigned __int8 **)v63;
          }
          uint64_t v47 = sub_1323390(a3, v45, v7);
          goto LABEL_91;
        case 0x10u:
          if (v8 != 128) {
            goto LABEL_102;
          }
          v5 |= 0x80u;
          unint64_t v48 = (char *)(v7 + 1);
          uint64_t v49 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_81;
          }
          int v50 = *v48;
          uint64_t v49 = v49 + (v50 << 7) - 128;
          if (v50 < 0)
          {
            uint64_t v58 = sub_188C138((uint64_t)v7, v49);
            *(void *)int v63 = v58;
            *(void *)(a1 + 192) = v59;
            if (!v58) {
              goto LABEL_115;
            }
          }
          else
          {
            unint64_t v48 = (char *)(v7 + 2);
LABEL_81:
            *(void *)int v63 = v48;
            *(void *)(a1 + 192) = v49;
          }
          goto LABEL_92;
        case 0x11u:
          if (v8 != 138) {
            goto LABEL_102;
          }
          *(_DWORD *)(a1 + 40) |= 4u;
          uint64_t v51 = *(void *)(a1 + 8);
          uint64_t v36 = (uint64_t *)(v51 & 0xFFFFFFFFFFFFFFFCLL);
          if (v51) {
            uint64_t v36 = (uint64_t *)*v36;
          }
          BOOL v37 = (void *)(a1 + 152);
          goto LABEL_90;
        case 0x12u:
          if (v8 != 146) {
            goto LABEL_102;
          }
          *(_DWORD *)(a1 + 40) |= 8u;
          uint64_t v52 = *(void *)(a1 + 8);
          uint64_t v36 = (uint64_t *)(v52 & 0xFFFFFFFFFFFFFFFCLL);
          if (v52) {
            uint64_t v36 = (uint64_t *)*v36;
          }
          BOOL v37 = (void *)(a1 + 160);
LABEL_90:
          uint64_t v53 = (std::string *)sub_1880F84(v37, v36);
          uint64_t v47 = (uint64_t)sub_188C244(v53, *(char **)v63, (uint64_t)a3);
          goto LABEL_91;
        default:
          goto LABEL_102;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v63;
}

uint64_t sub_16D2AA4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D3B08(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16D2B34(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D46F8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16D2BC4(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 176);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 184);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 42;
      unsigned int v16 = *(_DWORD *)(v15 + 44);
      v4[1] = v16;
      if (v16 > 0x7F) {
        unint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        unint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_16D3F58(v15, v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 50;
      unsigned int v21 = *(_DWORD *)(v20 + 20);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      uint64_t v4 = sub_16D4AA4(v20, (unint64_t)v22, a3);
    }
  }
  int v23 = *(_DWORD *)(a1 + 104);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *uint64_t v4 = 90;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      v4[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, v4 + 1);
      }
      else {
        uint64_t v27 = v4 + 2;
      }
      uint64_t v4 = sub_16B68A8(v25, (unint64_t)v27, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 12, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v28 = *(unsigned int *)(a1 + 120);
  if ((int)v28 >= 1)
  {
    for (uint64_t m = 0; m != v28; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v30 = *(void *)(*(void *)(a1 + 128) + 8 * m);
      *uint64_t v4 = 112;
      v4[1] = v30;
      if (v30 > 0x7F)
      {
        v4[1] = v30 | 0x80;
        unint64_t v31 = v30 >> 7;
        v4[2] = v30 >> 7;
        v4 += 3;
        if (v30 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v32 = v31 >> 14;
            v31 >>= 7;
            *v4++ = v31;
          }
          while (v32);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v33 = *(void *)(a1 + 168);
    *uint64_t v4 = 122;
    unsigned int v34 = *(_DWORD *)(v33 + 44);
    v4[1] = v34;
    if (v34 > 0x7F) {
      uint64_t v35 = sub_188A9CC(v34, v4 + 1);
    }
    else {
      uint64_t v35 = v4 + 2;
    }
    uint64_t v4 = sub_13D2F58(v33, v35, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v36 = *(void *)(a1 + 192);
    *(_WORD *)uint64_t v4 = 384;
    v4[2] = v36;
    if (v36 > 0x7F)
    {
      v4[2] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      v4[3] = v36 >> 7;
      v4 += 4;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 3;
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 17, (const void **)(*(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 18, (const void **)(*(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 2000, v4, a3);
  }
  uint64_t v39 = *(void *)(a1 + 8);
  if ((v39 & 1) == 0) {
    return v4;
  }
  unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v41 + 31) < 0)
  {
    uint64_t v42 = *(void **)(v41 + 8);
    uint64_t v43 = *(void *)(v41 + 16);
  }
  else
  {
    uint64_t v42 = (void *)(v41 + 8);
    LODWORD(v43) = *(unsigned __int8 *)(v41 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v43)
  {
    uint64_t v44 = (int)v43;
    memcpy(v4, v42, (int)v43);
    v4 += v44;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v42, v43, v4);
}

uint64_t sub_16D312C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16D428C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_16D4DF4(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_16B6A4C(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = sub_188D5A8((unsigned int *)(a1 + 120)) + v18 + *(unsigned int *)(a1 + 120);
  char v25 = *(unsigned char *)(a1 + 40);
  if (!v25) {
    goto LABEL_29;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v28 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
    uint64_t v30 = *(void *)(v28 + 8);
    if ((v29 & 0x80u) == 0) {
      uint64_t v30 = v29;
    }
    v24 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 40) & 2) == 0)
    {
LABEL_22:
      if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_37;
    }
  }
  else if ((*(unsigned char *)(a1 + 40) & 2) == 0)
  {
    goto LABEL_22;
  }
  unint64_t v31 = *(void *)(a1 + 144) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
  uint64_t v33 = *(void *)(v31 + 8);
  if ((v32 & 0x80u) == 0) {
    uint64_t v33 = v32;
  }
  v24 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 40) & 4) == 0)
  {
LABEL_23:
    if ((*(unsigned char *)(a1 + 40) & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_40;
  }
LABEL_37:
  unint64_t v34 = *(void *)(a1 + 152) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v35 = *(unsigned __int8 *)(v34 + 23);
  uint64_t v36 = *(void *)(v34 + 8);
  if ((v35 & 0x80u) == 0) {
    uint64_t v36 = v35;
  }
  v24 += v36 + ((9 * (__clz(v36 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((*(unsigned char *)(a1 + 40) & 8) == 0)
  {
LABEL_24:
    if ((*(unsigned char *)(a1 + 40) & 0x10) == 0) {
      goto LABEL_25;
    }
    goto LABEL_43;
  }
LABEL_40:
  unint64_t v37 = *(void *)(a1 + 160) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v38 = *(unsigned __int8 *)(v37 + 23);
  uint64_t v39 = *(void *)(v37 + 8);
  if ((v38 & 0x80u) == 0) {
    uint64_t v39 = v38;
  }
  v24 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 2;
  if ((*(unsigned char *)(a1 + 40) & 0x10) == 0)
  {
LABEL_25:
    if ((*(unsigned char *)(a1 + 40) & 0x20) == 0) {
      goto LABEL_26;
    }
LABEL_44:
    v24 += ((9 * (__clz(*(void *)(a1 + 176) | 1) ^ 0x3F) + 73) >> 6) + 1;
    if ((v25 & 0x40) == 0)
    {
LABEL_27:
      if ((v25 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_28;
    }
    goto LABEL_45;
  }
LABEL_43:
  uint64_t v40 = sub_13D3304(*(void *)(a1 + 168));
  v24 += v40 + ((9 * (__clz(v40 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v25 & 0x20) != 0) {
    goto LABEL_44;
  }
LABEL_26:
  if ((v25 & 0x40) == 0) {
    goto LABEL_27;
  }
LABEL_45:
  v24 += ((9 * (__clz(*(void *)(a1 + 184) | 1) ^ 0x3F) + 73) >> 6) + 1;
  if (v25 < 0) {
LABEL_28:
  }
    v24 += ((9 * (__clz(*(void *)(a1 + 192) | 1) ^ 0x3F) + 73) >> 6) + 2;
LABEL_29:
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v41 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v41 + 31) < 0) {
      uint64_t v42 = *(void *)(v41 + 16);
    }
    else {
      uint64_t v42 = *(unsigned __int8 *)(v41 + 31);
    }
    v24 += v42;
  }
  *(_DWORD *)(a1 + 44) = v24;
  return v24;
}

void sub_16D3468(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871594((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1871620((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_18716AC((std::string *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 120);
  if (v19)
  {
    uint64_t v20 = *(int *)(a1 + 120);
    sub_188CA54((unsigned int *)(a1 + 120), v20 + v19);
    uint64_t v21 = *(void *)(a1 + 128);
    *(_DWORD *)(a1 + 120) += *(_DWORD *)(a2 + 120);
    memcpy((void *)(v21 + 8 * v20), *(const void **)(a2 + 128), 8 * *(int *)(a2 + 120));
  }
  int v22 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v22)
  {
    if (v22)
    {
      uint64_t v24 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v25 = *(void *)(a1 + 8);
      uint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
      if (v25) {
        uint64_t v26 = (uint64_t *)*v26;
      }
      sub_1881DF4((std::string **)(a1 + 136), v24, v26);
      if ((v22 & 2) == 0)
      {
LABEL_15:
        if ((v22 & 4) == 0) {
          goto LABEL_16;
        }
        goto LABEL_33;
      }
    }
    else if ((v22 & 2) == 0)
    {
      goto LABEL_15;
    }
    uint64_t v27 = (long long *)(*(void *)(a2 + 144) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v28 = *(void *)(a1 + 8);
    uint64_t v29 = (uint64_t *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
    if (v28) {
      uint64_t v29 = (uint64_t *)*v29;
    }
    sub_1881DF4((std::string **)(a1 + 144), v27, v29);
    if ((v22 & 4) == 0)
    {
LABEL_16:
      if ((v22 & 8) == 0) {
        goto LABEL_17;
      }
      goto LABEL_36;
    }
LABEL_33:
    uint64_t v30 = (long long *)(*(void *)(a2 + 152) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v31 = *(void *)(a1 + 8);
    uint64_t v32 = (uint64_t *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
    if (v31) {
      uint64_t v32 = (uint64_t *)*v32;
    }
    sub_1881DF4((std::string **)(a1 + 152), v30, v32);
    if ((v22 & 8) == 0)
    {
LABEL_17:
      if ((v22 & 0x10) == 0) {
        goto LABEL_18;
      }
      goto LABEL_39;
    }
LABEL_36:
    uint64_t v33 = (long long *)(*(void *)(a2 + 160) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v34 = *(void *)(a1 + 8);
    uint64_t v35 = (uint64_t *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
    if (v34) {
      uint64_t v35 = (uint64_t *)*v35;
    }
    sub_1881DF4((std::string **)(a1 + 160), v33, v35);
    if ((v22 & 0x10) == 0)
    {
LABEL_18:
      if ((v22 & 0x20) == 0) {
        goto LABEL_19;
      }
      goto LABEL_47;
    }
LABEL_39:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v36 = *(void *)(a1 + 168);
    if (!v36)
    {
      uint64_t v37 = *(void *)(a1 + 8);
      uint64_t v38 = (void *)(v37 & 0xFFFFFFFFFFFFFFFCLL);
      if (v37) {
        uint64_t v38 = (void *)*v38;
      }
      uint64_t v36 = sub_13DAB08((uint64_t)v38);
      *(void *)(a1 + 168) = v36;
    }
    if (*(void *)(a2 + 168)) {
      uint64_t v39 = *(uint64_t (****)())(a2 + 168);
    }
    else {
      uint64_t v39 = &off_2536850;
    }
    sub_136AA7C(v36, (uint64_t)v39);
    if ((v22 & 0x20) == 0)
    {
LABEL_19:
      if ((v22 & 0x40) == 0) {
        goto LABEL_20;
      }
      goto LABEL_48;
    }
LABEL_47:
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    if ((v22 & 0x40) == 0)
    {
LABEL_20:
      if ((v22 & 0x80) == 0)
      {
LABEL_22:
        *(_DWORD *)(a1 + 40) |= v22;
        goto LABEL_23;
      }
LABEL_21:
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      goto LABEL_22;
    }
LABEL_48:
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    if ((v22 & 0x80) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_23:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v23 = *(void *)(a2 + 8);
  if (v23)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v23 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16D37C8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16D45D0(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 168));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16D3838@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DepartureSequence");
}

uint64_t sub_16D3848(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D1F18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(void *)(a1 + 96) = 0;
  return a1;
}

void sub_16D38C4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16D38F4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2544F98 && *(void *)(a1 + 64))
  {
    sub_1374318();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D39E4(uint64_t a1)
{
  sub_16D38F4(a1);

  operator delete();
}

uint64_t sub_16D3A1C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_6;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_16;
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_16:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) == 0) {
      goto LABEL_6;
    }
LABEL_5:
    uint64_t result = sub_1369E6C(*(void *)(a1 + 64));
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v3 & 4) != 0) {
    goto LABEL_5;
  }
LABEL_6:
  if ((v3 & 0xF8) != 0)
  {
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16D3B08(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v42 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 1);
    unsigned int v9 = **(unsigned char **)v42;
    if ((char)**(unsigned char **)v42 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v42, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v42 + 2);
      }
    }
    *(void *)uint64_t v42 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 9) {
          goto LABEL_49;
        }
        uint64_t v13 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 72) = v13;
        goto LABEL_17;
      case 3u:
        if (v9 != 26) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 48);
        goto LABEL_45;
      case 5u:
        if (v9 != 41) {
          goto LABEL_49;
        }
        uint64_t v17 = *(void *)v8;
        int v12 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 80) = v17;
LABEL_17:
        *(void *)uint64_t v42 = v12;
        goto LABEL_47;
      case 6u:
        if (v9 != 48) {
          goto LABEL_49;
        }
        v5 |= 0x40u;
        uint64_t v18 = (char *)(v8 + 1);
        uint64_t v19 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_22;
        }
        int v20 = *v18;
        uint64_t v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v19);
          *(void *)uint64_t v42 = v36;
          *(unsigned char *)(a1 + 96) = v37 != 0;
          if (!v36) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v18 = (char *)(v8 + 2);
LABEL_22:
          *(void *)uint64_t v42 = v18;
          *(unsigned char *)(a1 + 96) = v19 != 0;
        }
        goto LABEL_47;
      case 7u:
        if (v9 != 56) {
          goto LABEL_49;
        }
        v5 |= 0x20u;
        uint64_t v21 = (char *)(v8 + 1);
        uint64_t v22 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v42 = v38;
          *(void *)(a1 + 88) = v39;
          if (!v38) {
            goto LABEL_72;
          }
        }
        else
        {
          uint64_t v21 = (char *)(v8 + 2);
LABEL_27:
          *(void *)uint64_t v42 = v21;
          *(void *)(a1 + 88) = v22;
        }
        goto LABEL_47;
      case 8u:
        if (v9 != 66) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 64);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          sub_13D6A1C((uint64_t)v25);
          uint64_t v24 = v26;
          *(void *)(a1 + 64) = v26;
          uint64_t v8 = *(unsigned __int8 **)v42;
        }
        uint64_t v27 = sub_13319DC(a3, v24, v8);
        goto LABEL_46;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_49;
        }
        uint64_t v28 = (char *)(v8 + 1);
        unint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v30 = *v28;
        int v31 = v29 + (v30 << 7);
        unint64_t v29 = (v31 - 128);
        if (v30 < 0)
        {
          *(void *)uint64_t v42 = sub_188C138((uint64_t)v8, (v31 - 128));
          if (!*(void *)v42) {
            goto LABEL_72;
          }
          unint64_t v29 = v40;
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_38:
          *(void *)uint64_t v42 = v28;
        }
        if (v29 > 3)
        {
          if (*v7) {
            unint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(10, v29, v41);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          *(_DWORD *)(a1 + 100) = v29;
        }
        goto LABEL_47;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_49;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v32 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 56);
LABEL_45:
        uint64_t v33 = (std::string *)sub_1880F84(v16, v15);
        uint64_t v27 = (uint64_t)sub_188C244(v33, *(char **)v42, (uint64_t)a3);
        goto LABEL_46;
      default:
LABEL_49:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if (v9 - 1600 < 0xFA0 || (v9 - 8000) >> 6 <= 0x7C)
          {
            uint64_t v27 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2544F98, (uint64_t *)(a1 + 8), a3);
          }
          else
          {
            if (*v7)
            {
              uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v42;
            }
            uint64_t v27 = (uint64_t)sub_1885AC0(v9, v35, (char *)v8, a3);
          }
LABEL_46:
          *(void *)uint64_t v42 = v27;
          if (!v27) {
            goto LABEL_72;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v42, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_72:
        }
          *(void *)uint64_t v42 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v42;
    }
  }
}

unsigned char *sub_16D3F58(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 72);
    *uint64_t v4 = 9;
    *(void *)(v4 + 1) = v7;
    v4 += 9;
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 0x10) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_4:
    if ((v6 & 0x40) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v8 = *(void *)(a1 + 80);
  *uint64_t v4 = 41;
  *(void *)(v4 + 1) = v8;
  v4 += 9;
  if ((v6 & 0x40) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_23;
    }
    goto LABEL_17;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 96);
  *uint64_t v4 = 48;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 0x20) != 0)
  {
LABEL_17:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 88);
    *uint64_t v4 = 56;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_23:
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 64);
    *uint64_t v4 = 66;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    uint64_t v4 = sub_1374B08(v13, v15, a3);
  }
  if ((v6 & 0x80) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(int *)(a1 + 100);
    *uint64_t v4 = 80;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 2000, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_16D428C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  char v4 = *(unsigned char *)(a1 + 40);
  if (!v4) {
    goto LABEL_20;
  }
  if ((*(unsigned char *)(a1 + 40) & 1) == 0)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      goto LABEL_4;
    }
LABEL_25:
    unint64_t v15 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v17 = *(void *)(v15 + 8);
    if ((v16 & 0x80u) == 0) {
      uint64_t v17 = v16;
    }
    v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  unint64_t v12 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  uint64_t v3 = v2 + v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((*(unsigned char *)(a1 + 40) & 2) != 0) {
    goto LABEL_25;
  }
LABEL_4:
  if ((*(unsigned char *)(a1 + 40) & 4) != 0)
  {
LABEL_5:
    uint64_t v5 = sub_1374EEC(*(void *)(a1 + 64));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_6:
  uint64_t v6 = v3 + 9;
  if ((v4 & 8) == 0) {
    uint64_t v6 = v3;
  }
  if ((v4 & 0x10) != 0) {
    v6 += 9;
  }
  if ((v4 & 0x20) != 0) {
    v6 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  if ((v4 & 0x40) != 0) {
    uint64_t v3 = v6 + 2;
  }
  else {
    uint64_t v3 = v6;
  }
  if (v4 < 0)
  {
    int v7 = *(_DWORD *)(a1 + 100);
    uint64_t v8 = ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if (v7 >= 0) {
      uint64_t v9 = v8;
    }
    else {
      uint64_t v9 = 11;
    }
    v3 += v9;
  }
LABEL_20:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v18 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v3 += v19;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_16D443C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      int v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_30;
    }
LABEL_22:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void *)(a1 + 64);
    if (!v13)
    {
      uint64_t v14 = *(void *)(a1 + 8);
      unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
      if (v14) {
        unint64_t v15 = (void *)*v15;
      }
      sub_13D6A1C((uint64_t)v15);
      *(void *)(a1 + 64) = v13;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v16 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v16 = &off_2534750;
    }
    sub_136A7DC(v13, (uint64_t)v16);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_31;
    }
LABEL_30:
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_32;
    }
LABEL_31:
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_33;
    }
LABEL_32:
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
      goto LABEL_11;
    }
LABEL_33:
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16D45D0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_136ADBC(*(void *)(a1 + 64));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16D4614@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Departure");
}

void *sub_16D4624(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D4698(void *a1)
{
  sub_16D4624(a1);

  operator delete();
}

uint64_t sub_16D46D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 0x3F) != 0)
  {
    *(void *)(a1 + 24) = 0;
    *(void *)(a1 + 32) = 0;
    *(void *)(a1 + 40) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16D46F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v44 + 1;
    unsigned int v9 = *v44;
    if (*v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v44 + 2;
      }
    }
    uint64_t v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_39;
        }
        v5 |= 1u;
        unint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unint64_t v12 = v8 + 2;
LABEL_13:
          uint64_t v44 = v12;
          *(_DWORD *)(a1 + 24) = v13;
          goto LABEL_46;
        }
        uint64_t v32 = (char *)sub_188C0D0((uint64_t)v8, v13);
        uint64_t v44 = v32;
        *(_DWORD *)(a1 + 24) = v33;
        if (v32) {
          goto LABEL_46;
        }
        goto LABEL_63;
      case 2u:
        if (v9 != 16) {
          goto LABEL_39;
        }
        v5 |= 2u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          BOOL v34 = (char *)sub_188C0D0((uint64_t)v8, v16);
          uint64_t v44 = v34;
          *(_DWORD *)(a1 + 28) = v35;
          if (!v34) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          uint64_t v44 = v15;
          *(_DWORD *)(a1 + 28) = v16;
        }
        goto LABEL_46;
      case 3u:
        if (v9 != 24) {
          goto LABEL_39;
        }
        v5 |= 4u;
        unint64_t v18 = v8 + 1;
        int v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v19 = v19 + (v20 << 7) - 128;
        if (v20 < 0)
        {
          uint64_t v36 = (char *)sub_188C0D0((uint64_t)v8, v19);
          uint64_t v44 = v36;
          *(_DWORD *)(a1 + 32) = v37;
          if (!v36) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v18 = v8 + 2;
LABEL_23:
          uint64_t v44 = v18;
          *(_DWORD *)(a1 + 32) = v19;
        }
        goto LABEL_46;
      case 4u:
        if (v9 != 32) {
          goto LABEL_39;
        }
        v5 |= 8u;
        unint64_t v21 = v8 + 1;
        int v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_28;
        }
        int v23 = *v21;
        int v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v38 = (char *)sub_188C0D0((uint64_t)v8, v22);
          uint64_t v44 = v38;
          *(_DWORD *)(a1 + 36) = v39;
          if (!v38) {
            goto LABEL_63;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_28:
          uint64_t v44 = v21;
          *(_DWORD *)(a1 + 36) = v22;
        }
        goto LABEL_46;
      case 5u:
        if (v9 != 40) {
          goto LABEL_39;
        }
        v5 |= 0x10u;
        uint64_t v24 = v8 + 1;
        uint64_t v25 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v26 = *v24;
        uint64_t v25 = v25 + (v26 << 7) - 128;
        if (v26 < 0)
        {
          unint64_t v40 = (char *)sub_188C138((uint64_t)v8, v25);
          uint64_t v44 = v40;
          *(unsigned char *)(a1 + 40) = v41 != 0;
          if (!v40) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v24 = v8 + 2;
LABEL_33:
          uint64_t v44 = v24;
          *(unsigned char *)(a1 + 40) = v25 != 0;
        }
        goto LABEL_46;
      case 7u:
        if (v9 != 56) {
          goto LABEL_39;
        }
        v5 |= 0x20u;
        uint64_t v27 = v8 + 1;
        int v28 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v29 = *v27;
        int v28 = v28 + (v29 << 7) - 128;
        if (v29 < 0)
        {
          uint64_t v42 = (char *)sub_188C0D0((uint64_t)v8, v28);
          uint64_t v44 = v42;
          *(_DWORD *)(a1 + 44) = v43;
          if (!v42) {
            goto LABEL_63;
          }
        }
        else
        {
          uint64_t v27 = v8 + 2;
LABEL_38:
          uint64_t v44 = v27;
          *(_DWORD *)(a1 + 44) = v28;
        }
        goto LABEL_46;
      default:
LABEL_39:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if (*v7)
          {
            int v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = v44;
          }
          uint64_t v44 = (char *)sub_1885AC0(v9, v31, v8, a3);
          if (!v44) {
            goto LABEL_63;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, &v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_63:
        }
          uint64_t v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v44;
    }
  }
}

unsigned char *sub_16D4AA4(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *int v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *int v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 36);
    *int v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v19 = *(unsigned char *)(a1 + 40);
    *int v4 = 40;
    v4[1] = v19;
    v4 += 2;
  }
  if ((v6 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v20 = *(_DWORD *)(a1 + 44);
    *int v4 = 56;
    v4[1] = v20;
    if (v20 > 0x7F)
    {
      v4[1] = v20 | 0x80;
      unsigned int v21 = v20 >> 7;
      v4[2] = v20 >> 7;
      v4 += 3;
      if (v20 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v22 = v21 >> 14;
          v21 >>= 7;
          *v4++ = v21;
        }
        while (v22);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_16D4DF4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_15;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if ((v1 & 8) != 0) {
LABEL_10:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_11:
  if ((v1 & 0x10) != 0) {
    v2 += 2;
  }
  if ((v1 & 0x20) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 44) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16D4F24(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((v2 & 0x3F) == 0) {
    goto LABEL_10;
  }
  if (v2)
  {
    LODWORD(result[1].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 24);
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  HIDWORD(result[1].__r_.__value_.__r.__words[0]) = *(_DWORD *)(a2 + 28);
  if ((v2 & 4) == 0)
  {
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  LODWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 32);
  if ((v2 & 8) == 0)
  {
LABEL_6:
    if ((v2 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    result[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
    if ((v2 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_15:
  HIDWORD(result[1].__r_.__value_.__r.__words[1]) = *(_DWORD *)(a2 + 36);
  if ((v2 & 0x10) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v2 & 0x20) != 0) {
LABEL_8:
  }
    HIDWORD(result[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
LABEL_9:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_10:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16D4FB8()
{
  return 1;
}

void *sub_16D4FC0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DepartureFrequency");
}

uint64_t sub_16D4FD0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2018;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = &qword_2550250;
  *(void *)(a1 + 128) = &qword_2550250;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(unsigned char *)(a1 + 168) = 0;
  return a1;
}

void sub_16D5068(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16D5098(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2018;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unsigned int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unsigned int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1368448((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unsigned int v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *unsigned int v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    char v19 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_154B228((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    unsigned int v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *unsigned int v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 120) = &qword_2550250;
  int v23 = *(_DWORD *)(a2 + 40);
  if (v23)
  {
    uint64_t v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v23 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v23 & 2) != 0)
  {
    unint64_t v25 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v25);
    int v23 = *(_DWORD *)(a2 + 40);
  }
  if ((v23 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  if ((v23 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v23 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  uint64_t v26 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v26;
  return a1;
}

void sub_16D53A0()
{
}

void *sub_16D5464(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16D5510((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_154AD28(a1 + 12);
  sub_1367398(a1 + 9);
  sub_1889DE8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_16D5510(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 120);
  uint64_t v2 = (void ***)(a1 + 120);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  uint64_t result = (void ***)(a1 + 128);
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2545000)
  {
    if (*(void *)(a1 + 136))
    {
      sub_15BC200();
      operator delete();
    }
    if (*(void *)(a1 + 144))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 152);
    if (result)
    {
      sub_145FE08();
      operator delete();
    }
  }
  return result;
}

void sub_16D55E8(void *a1)
{
  sub_16D5464(a1);

  operator delete();
}

uint64_t sub_16D5620(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  uint64_t v3 = *(unsigned int *)(a1 + 80);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1369F48(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 104);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16D9D14(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 104) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0x1F) == 0) {
    goto LABEL_16;
  }
  if (v9)
  {
    unint64_t v12 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_26;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_13;
    }
LABEL_30:
    uint64_t result = sub_15BC23C(*(void *)(a1 + 136));
    if ((v9 & 8) == 0)
    {
LABEL_14:
      if ((v9 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_31;
  }
  if ((v9 & 2) == 0) {
    goto LABEL_12;
  }
LABEL_26:
  unint64_t v13 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v13 + 23) < 0)
  {
    **(unsigned char **)unint64_t v13 = 0;
    *(void *)(v13 + 8) = 0;
    if ((v9 & 4) != 0) {
      goto LABEL_30;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v13 = 0;
    *(unsigned char *)(v13 + 23) = 0;
    if ((v9 & 4) != 0) {
      goto LABEL_30;
    }
  }
LABEL_13:
  if ((v9 & 8) == 0) {
    goto LABEL_14;
  }
LABEL_31:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 144));
  if ((v9 & 0x10) != 0) {
LABEL_15:
  }
    uint64_t result = sub_1369BB4(*(void *)(a1 + 152));
LABEL_16:
  if ((v9 & 0x60) != 0)
  {
    *(unsigned char *)(a1 + 168) = 0;
    *(void *)(a1 + 160) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_16D578C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v56 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    int v9 = (unsigned __int8 *)(*(void *)v56 + 1);
    unsigned int v10 = **(unsigned char **)v56;
    if ((char)**(unsigned char **)v56 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v56, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        int v9 = (unsigned __int8 *)(*(void *)v56 + 2);
      }
    }
    *(void *)uint64_t v56 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_78;
        }
        unint64_t v13 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          unsigned int v14 = (char *)(v13 + 1);
          *(void *)uint64_t v56 = v13 + 1;
          int v15 = *(_DWORD **)(a1 + 64);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 56), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 56) = v16 + 1;
            int v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *char v19 = v18;
            v19[1] = sub_3A6EDC;
            void *v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            int v17 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v18);
            unsigned int v14 = *(char **)v56;
          }
          unint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)uint64_t v56 = v13;
          if (!v13) {
            goto LABEL_97;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_88;
          }
        }
      case 2u:
        if (v10 != 18) {
          goto LABEL_78;
        }
        int v20 = v9 - 1;
        while (1)
        {
          unsigned int v21 = v20 + 1;
          *(void *)uint64_t v56 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 88);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 80), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 80) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_13DAB08(*(void *)(a1 + 72));
            uint64_t v24 = sub_188CDC8(a1 + 72, v25);
            unsigned int v21 = *(unsigned __int8 **)v56;
          }
          int v20 = (unsigned __int8 *)sub_1323390(a3, v24, v21);
          *(void *)uint64_t v56 = v20;
          if (!v20) {
            goto LABEL_97;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 18) {
            goto LABEL_88;
          }
        }
      case 3u:
        if (v10 != 26) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v26 = *(void *)(a1 + 8);
        uint64_t v27 = (uint64_t *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
        if (v26) {
          uint64_t v27 = (uint64_t *)*v27;
        }
        uint64_t v28 = (void *)(a1 + 120);
        goto LABEL_60;
      case 4u:
        if (v10 != 34) {
          goto LABEL_78;
        }
        int v29 = v9 - 1;
        while (1)
        {
          BOOL v30 = v29 + 1;
          *(void *)uint64_t v56 = v29 + 1;
          int v31 = *(_DWORD **)(a1 + 112);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 104), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 104) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_1787818(*(void *)(a1 + 96));
            uint64_t v33 = sub_188CDC8(a1 + 96, v34);
            BOOL v30 = *(unsigned __int8 **)v56;
          }
          int v29 = (unsigned __int8 *)sub_1536B70(a3, v33, v30);
          *(void *)uint64_t v56 = v29;
          if (!v29) {
            goto LABEL_97;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 34) {
            goto LABEL_88;
          }
        }
      case 5u:
        if (v10 != 40) {
          goto LABEL_78;
        }
        v5 |= 0x20u;
        int v35 = (char *)(v9 + 1);
        uint64_t v36 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_49;
        }
        int v37 = *v35;
        uint64_t v36 = v36 + (v37 << 7) - 128;
        if (v37 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v9, v36);
          *(void *)uint64_t v56 = v52;
          *(void *)(a1 + 160) = v53;
          if (!v52) {
            goto LABEL_97;
          }
        }
        else
        {
          int v35 = (char *)(v9 + 2);
LABEL_49:
          *(void *)uint64_t v56 = v35;
          *(void *)(a1 + 160) = v36;
        }
        goto LABEL_88;
      case 6u:
        if (v10 != 50) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v38 = *(void **)(a1 + 136);
        if (!v38)
        {
          int v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v39 = (void *)*v39;
          }
          uint64_t v38 = sub_15C221C((uint64_t)v39);
          *(void *)(a1 + 136) = v38;
          int v9 = *(unsigned __int8 **)v56;
        }
        uint64_t v40 = sub_123B1B4(a3, (uint64_t)v38, v9);
        goto LABEL_87;
      case 7u:
        if (v10 != 58) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v41 = *(void *)(a1 + 8);
        uint64_t v27 = (uint64_t *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
        if (v41) {
          uint64_t v27 = (uint64_t *)*v27;
        }
        uint64_t v28 = (void *)(a1 + 128);
LABEL_60:
        uint64_t v42 = (std::string *)sub_1880F84(v28, v27);
        uint64_t v40 = (uint64_t)sub_188C244(v42, *(char **)v56, (uint64_t)a3);
        goto LABEL_87;
      case 8u:
        if (v10 != 66) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v43 = *(void *)(a1 + 144);
        if (!v43)
        {
          uint64_t v44 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v44 = (void *)*v44;
          }
          uint64_t v43 = sub_15C1918((uint64_t)v44);
          *(void *)(a1 + 144) = v43;
          int v9 = *(unsigned __int8 **)v56;
        }
        uint64_t v40 = (uint64_t)sub_1198F14(a3, v43, v9);
        goto LABEL_87;
      case 9u:
        if (v10 != 74) {
          goto LABEL_78;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v45 = *(void **)(a1 + 152);
        if (!v45)
        {
          v46 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            v46 = (void *)*v46;
          }
          uint64_t v45 = sub_1478C60((uint64_t)v46);
          *(void *)(a1 + 152) = v45;
          int v9 = *(unsigned __int8 **)v56;
        }
        uint64_t v40 = (uint64_t)sub_129760C(a3, (uint64_t)v45, v9);
        goto LABEL_87;
      case 0xAu:
        if (v10 != 80) {
          goto LABEL_78;
        }
        v5 |= 0x40u;
        uint64_t v47 = (char *)(v9 + 1);
        uint64_t v48 = *v9;
        if (((char)*v9 & 0x80000000) == 0) {
          goto LABEL_77;
        }
        int v49 = *v47;
        uint64_t v48 = v48 + (v49 << 7) - 128;
        if (v49 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v9, v48);
          *(void *)uint64_t v56 = v54;
          *(unsigned char *)(a1 + 168) = v55 != 0;
          if (!v54) {
            goto LABEL_97;
          }
        }
        else
        {
          uint64_t v47 = (char *)(v9 + 2);
LABEL_77:
          *(void *)uint64_t v56 = v47;
          *(unsigned char *)(a1 + 168) = v48 != 0;
        }
        goto LABEL_88;
      default:
LABEL_78:
        if (v10) {
          BOOL v50 = (v10 & 7) == 4;
        }
        else {
          BOOL v50 = 1;
        }
        if (!v50)
        {
          if (v10 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v51 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v51 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v9 = *(unsigned __int8 **)v56;
            }
            uint64_t v40 = (uint64_t)sub_1885AC0(v10, v51, (char *)v9, a3);
          }
          else
          {
            uint64_t v40 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_2545000, (uint64_t *)(a1 + 8), a3);
          }
LABEL_87:
          *(void *)uint64_t v56 = v40;
          if (!v40) {
            goto LABEL_97;
          }
LABEL_88:
          if (sub_11947B8((uint64_t)a3, (char **)v56, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_97:
        }
          *(void *)uint64_t v56 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v56;
    }
  }
}

char *sub_16D5D84(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      int v9 = *(void **)(*(void *)(a1 + 64) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v10)
      {
        *a2 = 10;
        a2[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          int v9 = (void *)*v9;
        }
        unsigned int v11 = a2 + 2;
        memcpy(v11, v9, v10);
        a2 = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      a2 = (char *)sub_188A868(a3, 1, (uint64_t)v9, a2);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 80);
  if (v12)
  {
    for (int i = 0; i != v12; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 88) + 8 * i + 8);
      *a2 = 18;
      unsigned int v15 = *(_DWORD *)(v14 + 44);
      a2[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, a2 + 1);
      }
      else {
        uint64_t v16 = a2 + 2;
      }
      a2 = sub_13D2F58(v14, v16, a3);
    }
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if (v17) {
    a2 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v18 = *(_DWORD *)(a1 + 104);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 112) + 8 * j + 8);
      *a2 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 44);
      a2[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, a2 + 1);
      }
      else {
        uint64_t v22 = a2 + 2;
      }
      a2 = sub_16DA058(v20, v22, a3);
    }
  }
  if ((v17 & 0x20) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v23 = *(void *)(a1 + 160);
    *a2 = 40;
    a2[1] = v23;
    if (v23 > 0x7F)
    {
      a2[1] = v23 | 0x80;
      unint64_t v24 = v23 >> 7;
      a2[2] = v23 >> 7;
      a2 += 3;
      if (v23 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v25 = v24 >> 14;
          v24 >>= 7;
          *a2++ = v24;
        }
        while (v25);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v17 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v26 = *(void *)(a1 + 136);
    *a2 = 50;
    unsigned int v27 = *(_DWORD *)(v26 + 20);
    a2[1] = v27;
    if (v27 > 0x7F) {
      uint64_t v28 = sub_188A9CC(v27, a2 + 1);
    }
    else {
      uint64_t v28 = a2 + 2;
    }
    a2 = sub_15BC3D8(v26, v28, a3);
    if ((v17 & 2) == 0)
    {
LABEL_40:
      if ((v17 & 8) == 0) {
        goto LABEL_41;
      }
      goto LABEL_51;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_40;
  }
  a2 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v17 & 8) == 0)
  {
LABEL_41:
    if ((v17 & 0x10) == 0) {
      goto LABEL_42;
    }
    goto LABEL_57;
  }
LABEL_51:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v29 = *(void *)(a1 + 144);
  *a2 = 66;
  unsigned int v30 = *(_DWORD *)(v29 + 44);
  a2[1] = v30;
  if (v30 > 0x7F) {
    int v31 = sub_188A9CC(v30, a2 + 1);
  }
  else {
    int v31 = a2 + 2;
  }
  a2 = sub_15B0C0C(v29, v31, a3);
  if ((v17 & 0x10) == 0)
  {
LABEL_42:
    if ((v17 & 0x40) == 0) {
      goto LABEL_66;
    }
    goto LABEL_63;
  }
LABEL_57:
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v32 = *(void *)(a1 + 152);
  *a2 = 74;
  unsigned int v33 = *(_DWORD *)(v32 + 44);
  a2[1] = v33;
  if (v33 > 0x7F) {
    uint64_t v34 = sub_188A9CC(v33, a2 + 1);
  }
  else {
    uint64_t v34 = a2 + 2;
  }
  a2 = sub_1460138(v32, v34, a3);
  if ((v17 & 0x40) != 0)
  {
LABEL_63:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v35 = *(unsigned char *)(a1 + 168);
    *a2 = 80;
    a2[1] = v35;
    a2 += 2;
  }
LABEL_66:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v36 = *(void *)(a1 + 8);
  if ((v36 & 1) == 0) {
    return a2;
  }
  unint64_t v38 = v36 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v38 + 31) < 0)
  {
    int v39 = *(void **)(v38 + 8);
    uint64_t v40 = *(void *)(v38 + 16);
  }
  else
  {
    int v39 = (void *)(v38 + 8);
    LODWORD(v40) = *(unsigned __int8 *)(v38 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v40)
  {
    uint64_t v41 = (int)v40;
    memcpy(a2, v39, (int)v40);
    a2 += v41;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v39, v40, a2);
}

uint64_t sub_16D6250(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(int *)(a1 + 80);
  uint64_t v10 = v4 + v9;
  uint64_t v11 = *(void *)(a1 + 88);
  if (v11) {
    int v12 = (uint64_t *)(v11 + 8);
  }
  else {
    int v12 = 0;
  }
  if (v9)
  {
    uint64_t v13 = 8 * v9;
    do
    {
      uint64_t v14 = *v12++;
      uint64_t v15 = sub_13D3304(v14);
      v10 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6);
      v13 -= 8;
    }
    while (v13);
  }
  uint64_t v16 = *(int *)(a1 + 104);
  uint64_t v17 = v10 + v16;
  uint64_t v18 = *(void *)(a1 + 112);
  if (v18) {
    char v19 = (uint64_t *)(v18 + 8);
  }
  else {
    char v19 = 0;
  }
  if (v16)
  {
    uint64_t v20 = 8 * v16;
    do
    {
      uint64_t v21 = *v19++;
      uint64_t v22 = sub_16DA234(v21);
      v17 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      v20 -= 8;
    }
    while (v20);
  }
  int v23 = *(_DWORD *)(a1 + 40);
  if ((v23 & 0x7F) != 0)
  {
    if (v23)
    {
      unint64_t v26 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
      uint64_t v28 = *(void *)(v26 + 8);
      if ((v27 & 0x80u) == 0) {
        uint64_t v28 = v27;
      }
      v17 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v23 & 2) == 0)
      {
LABEL_21:
        if ((v23 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_36;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_21;
    }
    unint64_t v29 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v30 = *(unsigned __int8 *)(v29 + 23);
    uint64_t v31 = *(void *)(v29 + 8);
    if ((v30 & 0x80u) == 0) {
      uint64_t v31 = v30;
    }
    v17 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 4) == 0)
    {
LABEL_22:
      if ((v23 & 8) == 0) {
        goto LABEL_23;
      }
      goto LABEL_37;
    }
LABEL_36:
    uint64_t v32 = sub_15BC4A4(*(void *)(a1 + 136));
    v17 += v32 + ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 8) == 0)
    {
LABEL_23:
      if ((v23 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_38;
    }
LABEL_37:
    uint64_t v33 = sub_15B0D90(*(void *)(a1 + 144));
    v17 += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 0x10) == 0)
    {
LABEL_24:
      if ((v23 & 0x20) == 0) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }
LABEL_38:
    uint64_t v34 = sub_1460320(*(void *)(a1 + 152));
    v17 += v34 + ((9 * (__clz(v34 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 0x20) == 0)
    {
LABEL_26:
      if ((v23 & 0x40) != 0) {
        v17 += 2;
      }
      goto LABEL_28;
    }
LABEL_25:
    v17 += ((9 * (__clz(*(void *)(a1 + 160) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_26;
  }
LABEL_28:
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v35 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v35 + 31) < 0) {
      uint64_t v36 = *(void *)(v35 + 16);
    }
    else {
      uint64_t v36 = *(unsigned __int8 *)(v35 + 31);
    }
    v17 += v36;
  }
  *(_DWORD *)(a1 + 44) = v17;
  return v17;
}

void sub_16D6518(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1368448((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_154B228((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if ((v19 & 0x7F) != 0)
  {
    if (v19)
    {
      uint64_t v21 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v22 = *(void *)(a1 + 8);
      int v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
      if (v22) {
        int v23 = (uint64_t *)*v23;
      }
      sub_1881DF4((std::string **)(a1 + 120), v21, v23);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_14;
        }
        goto LABEL_30;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    uint64_t v24 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v25 = *(void *)(a1 + 8);
    unint64_t v26 = (uint64_t *)(v25 & 0xFFFFFFFFFFFFFFFCLL);
    if (v25) {
      unint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 128), v24, v26);
    if ((v19 & 4) == 0)
    {
LABEL_14:
      if ((v19 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v27 = *(std::string **)(a1 + 136);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      unint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        unint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = (std::string *)sub_15C221C((uint64_t)v29);
      *(void *)(a1 + 136) = v27;
    }
    if (*(void *)(a2 + 136)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      uint64_t v30 = &off_253F5C0;
    }
    sub_12329D0(v27, (uint64_t)v30);
    if ((v19 & 8) == 0)
    {
LABEL_15:
      if ((v19 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v31 = *(void *)(a1 + 144);
    if (!v31)
    {
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (void *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (void *)*v33;
      }
      uint64_t v31 = sub_15C1918((uint64_t)v33);
      *(void *)(a1 + 144) = v31;
    }
    if (*(void *)(a2 + 144)) {
      uint64_t v34 = *(uint64_t (****)())(a2 + 144);
    }
    else {
      uint64_t v34 = &off_253F1A0;
    }
    sub_15B0E24(v31, (uint64_t)v34);
    if ((v19 & 0x10) == 0)
    {
LABEL_16:
      if ((v19 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_54;
    }
LABEL_46:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    unint64_t v35 = *(void **)(a1 + 152);
    if (!v35)
    {
      uint64_t v36 = *(void *)(a1 + 8);
      int v37 = (void *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
      if (v36) {
        int v37 = (void *)*v37;
      }
      unint64_t v35 = sub_1478C60((uint64_t)v37);
      *(void *)(a1 + 152) = v35;
    }
    if (*(void *)(a2 + 152)) {
      unint64_t v38 = *(uint64_t (****)())(a2 + 152);
    }
    else {
      unint64_t v38 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v35, (uint64_t)v38);
    if ((v19 & 0x20) == 0)
    {
LABEL_17:
      if ((v19 & 0x40) == 0)
      {
LABEL_19:
        *(_DWORD *)(a1 + 40) |= v19;
        goto LABEL_20;
      }
LABEL_18:
      *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
      goto LABEL_19;
    }
LABEL_54:
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    if ((v19 & 0x40) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_20:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16D6854(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 80);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_136AE2C(*(void *)(*(void *)(a1 + 88) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 104);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_16DA478(*(void *)(*(void *)(a1 + 112) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if ((v9 & 4) != 0)
    {
      uint64_t result = sub_15BC528(*(void *)(a1 + 136));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 8) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_136AEA0(*(void *)(a1 + 152));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16D6914@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitInfoSnippet");
}

void *sub_16D6924(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D6998(void *a1)
{
  sub_16D6924(a1);

  operator delete();
}

uint64_t *sub_16D69D0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16D69E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16D6AE0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16D6B78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16D6BAC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16D6BC8()
{
  return 1;
}

void *sub_16D6BD0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitInfoSnippetFilter");
}

uint64_t sub_16D6BE0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_25450C8 && *(void *)(a1 + 24))
  {
    sub_15BC200();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D6C98(uint64_t a1)
{
  sub_16D6BE0(a1);

  operator delete();
}

uint64_t sub_16D6CD0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if (v2) {
    uint64_t result = sub_15BC23C(*(void *)(result + 24));
  }
  if ((v2 & 6) != 0)
  {
    *(_DWORD *)(v1 + 40) = 0;
    *(void *)(v1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16D6D3C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    unint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 4) {
      break;
    }
    if (v12 == 3)
    {
      if (v9 != 24) {
        goto LABEL_14;
      }
      v5 |= 4u;
      int v19 = v8 + 1;
      int v20 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_33;
      }
      int v21 = *v19;
      int v20 = v20 + (v21 << 7) - 128;
      if ((v21 & 0x80000000) == 0)
      {
        int v19 = v8 + 2;
LABEL_33:
        unint64_t v29 = v19;
        *(_DWORD *)(a1 + 40) = v20;
        goto LABEL_38;
      }
      uint64_t v25 = (char *)sub_188C0D0((uint64_t)v8, v20);
      unint64_t v29 = v25;
      *(_DWORD *)(a1 + 40) = v26;
      if (!v25) {
        goto LABEL_47;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_37;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = v8 + 2;
LABEL_37:
        unint64_t v29 = v22;
        *(void *)(a1 + 32) = v23;
        goto LABEL_38;
      }
      uint64_t v27 = (char *)sub_188C138((uint64_t)v8, v23);
      unint64_t v29 = v27;
      *(void *)(a1 + 32) = v28;
      if (!v27) {
        goto LABEL_47;
      }
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 34)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    int v17 = *(void **)(a1 + 24);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v18 = (void *)*v18;
      }
      int v17 = sub_15C221C((uint64_t)v18);
      *(void *)(a1 + 24) = v17;
      uint64_t v8 = v29;
    }
    uint64_t v16 = (char *)sub_123B1B4(a3, (uint64_t)v17, (unsigned __int8 *)v8);
LABEL_27:
    unint64_t v29 = v16;
    if (!v16) {
      goto LABEL_47;
    }
    goto LABEL_38;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v29;
    }
    uint64_t v16 = (char *)sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_27;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_47:
  unint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v29;
}

char *sub_16D6F84(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 40);
    *char v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 24);
    *char v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_15BC3D8(v13, v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_16D718C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t result = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    uint64_t v4 = sub_15BC4A4(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  if ((v2 & 4) != 0) {
    result += ((9 * (__clz(*(_DWORD *)(a1 + 40) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_16D7274(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      data = (std::string *)result[1].__r_.__value_.__l.__data_;
      if (!data)
      {
        std::string::size_type size = v3->__r_.__value_.__l.__size_;
        unint64_t v8 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
        if (size) {
          unint64_t v8 = (void *)*v8;
        }
        data = (std::string *)sub_15C221C((uint64_t)v8);
        v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_253F5C0;
      }
      uint64_t result = sub_12329D0(data, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        LODWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    v3[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16D735C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15BC528(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16D7388@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitInfo.StopInfo");
}

void *sub_16D7398(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D2198;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = a2;
  a1[13] = 0;
  a1[14] = 0;
  a1[15] = a2;
  a1[16] = 0;
  a1[17] = 0;
  a1[18] = a2;
  a1[19] = 0;
  a1[20] = 0;
  a1[21] = &qword_2550250;
  a1[22] = &qword_2550250;
  a1[23] = &qword_2550250;
  a1[24] = 0;
  a1[25] = 0;
  return a1;
}

void sub_16D7430(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16D7460(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2198;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  unint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1368074(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unsigned int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unsigned int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_13682A4((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    int v19 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_154B228((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 136);
    int v24 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1871728((uint64_t *)(a1 + 120), v24, (uint64_t *)(v23 + 8), v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    int v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      *int v26 = v25;
    }
  }
  *(void *)(a1 + 144) = 0;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  int v27 = *(_DWORD *)(a2 + 152);
  if (v27)
  {
    uint64_t v28 = *(void *)(a2 + 160);
    unint64_t v29 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_18717B4((uint64_t *)(a1 + 144), v29, (uint64_t *)(v28 + 8), v27, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v30 = *(_DWORD *)(a1 + 152) + v27;
    *(_DWORD *)(a1 + 152) = v30;
    uint64_t v31 = *(int **)(a1 + 160);
    if (*v31 < v30) {
      *uint64_t v31 = v30;
    }
  }
  uint64_t v32 = *(void *)(a2 + 8);
  if (v32) {
    sub_188B4F8(v4, (v32 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 168) = &qword_2550250;
  int v33 = *(_DWORD *)(a2 + 40);
  if (v33)
  {
    uint64_t v34 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v34 = (uint64_t *)*v34;
    }
    sub_1881DF4((std::string **)(a1 + 168), (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL), v34);
    int v33 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 176) = &qword_2550250;
  if ((v33 & 2) != 0)
  {
    unint64_t v35 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v35 = (uint64_t *)*v35;
    }
    sub_1881DF4((std::string **)(a1 + 176), (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL), v35);
    int v33 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 184) = &qword_2550250;
  if ((v33 & 4) != 0)
  {
    uint64_t v36 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v36 = (uint64_t *)*v36;
    }
    sub_1881DF4((std::string **)(a1 + 184), (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL), v36);
    int v33 = *(_DWORD *)(a2 + 40);
  }
  if ((v33 & 8) != 0) {
    operator new();
  }
  uint64_t v37 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = v37;
  return a1;
}

void sub_16D77F8()
{
}

uint64_t sub_16D78B8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 168);
  if (*(uint64_t **)(a1 + 168) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 176) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 176));
  }
  if (*(uint64_t **)(a1 + 184) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 184));
  }
  if ((uint64_t (***)())a1 != &off_25450F8)
  {
    uint64_t v6 = *(void *)(a1 + 192);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_186FA3C((void *)(a1 + 144));
  sub_186F9BC((void *)(a1 + 120));
  sub_154AD28((void *)(a1 + 96));
  sub_1367218((void *)(a1 + 72));
  sub_1367018((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D79F8(uint64_t a1)
{
  sub_16D78B8(a1);

  operator delete();
}

uint64_t sub_16D7A30(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13229F8(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_1326034(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_16D9D14(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_16D9180(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  uint64_t v15 = *(unsigned int *)(a1 + 152);
  if ((int)v15 >= 1)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 160) + 8);
    do
    {
      uint64_t v17 = *v16++;
      uint64_t result = sub_16D6CD0(v17);
      --v15;
    }
    while (v15);
    *(_DWORD *)(a1 + 152) = 0;
  }
  int v18 = *(_DWORD *)(a1 + 40);
  if ((v18 & 0xF) == 0) {
    goto LABEL_27;
  }
  if (v18)
  {
    unint64_t v21 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v21 + 23) < 0)
    {
      **(unsigned char **)unint64_t v21 = 0;
      *(void *)(v21 + 8) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_35;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v21 = 0;
      *(unsigned char *)(v21 + 23) = 0;
      if ((v18 & 2) != 0) {
        goto LABEL_35;
      }
    }
LABEL_24:
    if ((v18 & 4) == 0) {
      goto LABEL_25;
    }
    goto LABEL_39;
  }
  if ((v18 & 2) == 0) {
    goto LABEL_24;
  }
LABEL_35:
  unint64_t v22 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v22 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v22 = 0;
    *(unsigned char *)(v22 + 23) = 0;
    if ((v18 & 4) != 0) {
      goto LABEL_39;
    }
LABEL_25:
    if ((v18 & 8) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  **(unsigned char **)unint64_t v22 = 0;
  *(void *)(v22 + 8) = 0;
  if ((v18 & 4) == 0) {
    goto LABEL_25;
  }
LABEL_39:
  unint64_t v23 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v23 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v23 = 0;
    *(unsigned char *)(v23 + 23) = 0;
    if ((v18 & 8) == 0) {
      goto LABEL_27;
    }
LABEL_26:
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 192));
    goto LABEL_27;
  }
  **(unsigned char **)unint64_t v23 = 0;
  *(void *)(v23 + 8) = 0;
  if ((v18 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_27:
  char v20 = *(unsigned char *)(a1 + 8);
  uint64_t v19 = a1 + 8;
  *(void *)(v19 + 192) = 0;
  *(_DWORD *)(v19 + 32) = 0;
  if (v20)
  {
    return sub_188B4AC((uint64_t *)v19);
  }
  return result;
}

uint64_t sub_16D7C14(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v58 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v58 + 1);
    unsigned int v9 = **(unsigned char **)v58;
    if ((char)**(unsigned char **)v58 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v58, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v58 + 2);
      }
    }
    *(void *)uint64_t v58 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_86;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v13 = v12 + 1;
          *(void *)uint64_t v58 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_13321CC(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, v17);
            uint64_t v13 = *(unsigned __int8 **)v58;
          }
          uint64_t v12 = (unsigned __int8 *)sub_134AE4C(a3, v16, v13);
          *(void *)uint64_t v58 = v12;
          if (!v12) {
            goto LABEL_100;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_69;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_86;
        }
        int v18 = v8 - 1;
        while (1)
        {
          uint64_t v19 = v18 + 1;
          *(void *)uint64_t v58 = v18 + 1;
          char v20 = *(_DWORD **)(a1 + 88);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 80), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 80) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            uint64_t v23 = sub_13322E0(*(void *)(a1 + 72));
            uint64_t v22 = sub_188CDC8(a1 + 72, v23);
            uint64_t v19 = *(unsigned __int8 **)v58;
          }
          int v18 = (unsigned __int8 *)sub_134B08C(a3, v22, v19);
          *(void *)uint64_t v58 = v18;
          if (!v18) {
            goto LABEL_100;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 18) {
            goto LABEL_69;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_86;
        }
        int v24 = v8 - 1;
        while (1)
        {
          int v25 = v24 + 1;
          *(void *)uint64_t v58 = v24 + 1;
          int v26 = *(_DWORD **)(a1 + 112);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 104), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 104) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_1787818(*(void *)(a1 + 96));
            uint64_t v28 = sub_188CDC8(a1 + 96, v29);
            int v25 = *(unsigned __int8 **)v58;
          }
          int v24 = (unsigned __int8 *)sub_1536B70(a3, v28, v25);
          *(void *)uint64_t v58 = v24;
          if (!v24) {
            goto LABEL_100;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 74) {
            goto LABEL_69;
          }
        }
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_86;
        }
        int v30 = v8 - 1;
        while (1)
        {
          uint64_t v31 = v30 + 1;
          *(void *)uint64_t v58 = v30 + 1;
          uint64_t v32 = *(_DWORD **)(a1 + 136);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 128), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 128) = v33 + 1;
            uint64_t v34 = *(void *)&v32[2 * v33 + 2];
          }
          else
          {
            unint64_t v35 = sub_17877BC(*(void *)(a1 + 120));
            uint64_t v34 = sub_188CDC8(a1 + 120, (uint64_t)v35);
            uint64_t v31 = *(unsigned __int8 **)v58;
          }
          int v30 = (unsigned __int8 *)sub_15497CC(a3, v34, v31);
          *(void *)uint64_t v58 = v30;
          if (!v30) {
            goto LABEL_100;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 82) {
            goto LABEL_69;
          }
        }
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        unint64_t v38 = (void *)(a1 + 168);
        goto LABEL_67;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v39 = *(void *)(a1 + 192);
        if (!v39)
        {
          uint64_t v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v40 = (void *)*v40;
          }
          uint64_t v39 = sub_185089C((uint64_t)v40);
          *(void *)(a1 + 192) = v39;
          uint64_t v8 = *(unsigned __int8 **)v58;
        }
        uint64_t v41 = sub_12688D0(a3, v39, v8);
        goto LABEL_68;
      case 0xDu:
        if (v9 != 106) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v42 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v42 & 0xFFFFFFFFFFFFFFFCLL);
        if (v42) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        unint64_t v38 = (void *)(a1 + 176);
        goto LABEL_67;
      case 0xEu:
        if (v9 != 114) {
          goto LABEL_86;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v43 = *(void *)(a1 + 8);
        uint64_t v37 = (uint64_t *)(v43 & 0xFFFFFFFFFFFFFFFCLL);
        if (v43) {
          uint64_t v37 = (uint64_t *)*v37;
        }
        unint64_t v38 = (void *)(a1 + 184);
LABEL_67:
        uint64_t v44 = (std::string *)sub_1880F84(v38, v37);
        uint64_t v41 = (void *)sub_188C244(v44, *(char **)v58, (uint64_t)a3);
        goto LABEL_68;
      case 0xFu:
        if (v9 != 120) {
          goto LABEL_86;
        }
        v5 |= 0x10u;
        uint64_t v45 = (char *)(v8 + 1);
        uint64_t v46 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        int v47 = *v45;
        uint64_t v46 = v46 + (v47 << 7) - 128;
        if (v47 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v8, v46);
          *(void *)uint64_t v58 = v56;
          *(void *)(a1 + 200) = v57;
          if (!v56) {
            goto LABEL_100;
          }
        }
        else
        {
          uint64_t v45 = (char *)(v8 + 2);
LABEL_75:
          *(void *)uint64_t v58 = v45;
          *(void *)(a1 + 200) = v46;
        }
        goto LABEL_69;
      case 0x10u:
        if (v9 != 130) {
          goto LABEL_86;
        }
        uint64_t v48 = (char *)(v8 - 2);
        while (1)
        {
          int v49 = (unsigned __int8 *)(v48 + 2);
          *(void *)uint64_t v58 = v48 + 2;
          BOOL v50 = *(_DWORD **)(a1 + 160);
          if (v50 && (uint64_t v51 = *(int *)(a1 + 152), (int)v51 < *v50))
          {
            *(_DWORD *)(a1 + 152) = v51 + 1;
            uint64_t v52 = *(void *)&v50[2 * v51 + 2];
          }
          else
          {
            uint64_t v53 = sub_17876E0(*(void *)(a1 + 144));
            uint64_t v52 = sub_188CDC8(a1 + 144, v53);
            int v49 = *(unsigned __int8 **)v58;
          }
          uint64_t v48 = sub_16D8228(a3, v52, v49);
          *(void *)uint64_t v58 = v48;
          if (!v48) {
            goto LABEL_100;
          }
          if (*(void *)a3 <= (unint64_t)v48 || *(_WORD *)v48 != 386) {
            goto LABEL_69;
          }
        }
      default:
LABEL_86:
        if (v9) {
          BOOL v54 = (v9 & 7) == 4;
        }
        else {
          BOOL v54 = 1;
        }
        if (!v54)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v55 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v55 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v58;
            }
            uint64_t v41 = sub_1885AC0(v9, v55, (char *)v8, a3);
          }
          else
          {
            uint64_t v41 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25450F8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_68:
          *(void *)uint64_t v58 = v41;
          if (!v41) {
            goto LABEL_100;
          }
LABEL_69:
          if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_100:
        }
          *(void *)uint64_t v58 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v58;
    }
  }
}

char *sub_16D8228(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16D6D3C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16D82B8(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1323540(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_1326538(v13, v15, a3);
    }
  }
  int v16 = *(_DWORD *)(a1 + 104);
  if (v16)
  {
    for (int k = 0; k != v16; ++k)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *a2 = 74;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      a2[1] = v19;
      if (v19 > 0x7F) {
        char v20 = sub_188A9CC(v19, a2 + 1);
      }
      else {
        char v20 = a2 + 2;
      }
      a2 = sub_16DA058(v18, v20, a3);
    }
  }
  int v21 = *(_DWORD *)(a1 + 128);
  if (v21)
  {
    for (int m = 0; m != v21; ++m)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v23 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *a2 = 82;
      unsigned int v24 = *(_DWORD *)(v23 + 44);
      a2[1] = v24;
      if (v24 > 0x7F) {
        int v25 = sub_188A9CC(v24, a2 + 1);
      }
      else {
        int v25 = a2 + 2;
      }
      a2 = sub_16D9588(v23, v25, a3);
    }
  }
  int v26 = *(_DWORD *)(a1 + 40);
  if (v26)
  {
    a2 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v26 & 8) == 0)
    {
LABEL_35:
      if ((v26 & 2) == 0) {
        goto LABEL_36;
      }
      goto LABEL_46;
    }
  }
  else if ((v26 & 8) == 0)
  {
    goto LABEL_35;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v27 = *(void *)(a1 + 192);
  *a2 = 98;
  unsigned int v28 = *(_DWORD *)(v27 + 44);
  a2[1] = v28;
  if (v28 > 0x7F) {
    uint64_t v29 = sub_188A9CC(v28, a2 + 1);
  }
  else {
    uint64_t v29 = a2 + 2;
  }
  a2 = sub_184B3AC(v27, v29, a3);
  if ((v26 & 2) == 0)
  {
LABEL_36:
    if ((v26 & 4) == 0) {
      goto LABEL_37;
    }
    goto LABEL_47;
  }
LABEL_46:
  a2 = sub_117A0AC(a3, 13, (const void **)(*(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v26 & 4) == 0)
  {
LABEL_37:
    if ((v26 & 0x10) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_47:
  a2 = sub_117A0AC(a3, 14, (const void **)(*(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v26 & 0x10) == 0) {
    goto LABEL_54;
  }
LABEL_48:
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  unint64_t v30 = *(void *)(a1 + 200);
  *a2 = 120;
  a2[1] = v30;
  if (v30 > 0x7F)
  {
    a2[1] = v30 | 0x80;
    unint64_t v31 = v30 >> 7;
    a2[2] = v30 >> 7;
    a2 += 3;
    if (v30 >= 0x4000)
    {
      do
      {
        *(a2 - 1) |= 0x80u;
        unint64_t v32 = v31 >> 14;
        v31 >>= 7;
        *a2++ = v31;
      }
      while (v32);
    }
  }
  else
  {
    a2 += 2;
  }
LABEL_54:
  int v33 = *(_DWORD *)(a1 + 152);
  if (v33)
  {
    for (int n = 0; n != v33; ++n)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v35 = *(void *)(*(void *)(a1 + 160) + 8 * n + 8);
      *(_WORD *)a2 = 386;
      unsigned int v36 = *(_DWORD *)(v35 + 20);
      a2[2] = v36;
      if (v36 > 0x7F) {
        uint64_t v37 = sub_188A9CC(v36, a2 + 2);
      }
      else {
        uint64_t v37 = a2 + 3;
      }
      a2 = sub_16D6F84(v35, (unint64_t)v37, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v38 = *(void *)(a1 + 8);
  if ((v38 & 1) == 0) {
    return a2;
  }
  unint64_t v40 = v38 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v40 + 31) < 0)
  {
    uint64_t v41 = *(void **)(v40 + 8);
    uint64_t v42 = *(void *)(v40 + 16);
  }
  else
  {
    uint64_t v41 = (void *)(v40 + 8);
    LODWORD(v42) = *(unsigned __int8 *)(v40 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v42)
  {
    uint64_t v43 = (int)v42;
    memcpy(a2, v41, (int)v42);
    a2 += v43;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v41, v42, a2);
}

uint64_t sub_16D8788(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1323CC0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_132689C(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    char v20 = (uint64_t *)(v19 + 8);
  }
  else {
    char v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_16DA234(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_16D97F4(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  uint64_t v31 = *(int *)(a1 + 152);
  uint64_t v32 = v25 + 2 * v31;
  uint64_t v33 = *(void *)(a1 + 160);
  if (v33) {
    uint64_t v34 = (uint64_t *)(v33 + 8);
  }
  else {
    uint64_t v34 = 0;
  }
  if (v31)
  {
    uint64_t v35 = 8 * v31;
    do
    {
      uint64_t v36 = *v34++;
      uint64_t v37 = sub_16D718C(v36);
      v32 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6);
      v35 -= 8;
    }
    while (v35);
  }
  int v38 = *(_DWORD *)(a1 + 40);
  if ((v38 & 0x1F) == 0) {
    goto LABEL_38;
  }
  if (v38)
  {
    unint64_t v41 = *(void *)(a1 + 168) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v42 = *(unsigned __int8 *)(v41 + 23);
    uint64_t v43 = *(void *)(v41 + 8);
    if ((v42 & 0x80u) == 0) {
      uint64_t v43 = v42;
    }
    v32 += v43 + ((9 * (__clz(v43 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v38 & 2) == 0)
    {
LABEL_34:
      if ((v38 & 4) == 0) {
        goto LABEL_35;
      }
LABEL_46:
      unint64_t v47 = *(void *)(a1 + 184) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v48 = *(unsigned __int8 *)(v47 + 23);
      uint64_t v49 = *(void *)(v47 + 8);
      if ((v48 & 0x80u) == 0) {
        uint64_t v49 = v48;
      }
      v32 += v49 + ((9 * (__clz(v49 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v38 & 8) == 0)
      {
LABEL_36:
        if ((v38 & 0x10) == 0) {
          goto LABEL_38;
        }
        goto LABEL_37;
      }
      goto LABEL_49;
    }
  }
  else if ((v38 & 2) == 0)
  {
    goto LABEL_34;
  }
  unint64_t v44 = *(void *)(a1 + 176) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v45 = *(unsigned __int8 *)(v44 + 23);
  uint64_t v46 = *(void *)(v44 + 8);
  if ((v45 & 0x80u) == 0) {
    uint64_t v46 = v45;
  }
  v32 += v46 + ((9 * (__clz(v46 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 4) != 0) {
    goto LABEL_46;
  }
LABEL_35:
  if ((v38 & 8) == 0) {
    goto LABEL_36;
  }
LABEL_49:
  uint64_t v50 = sub_184B568(*(void *)(a1 + 192));
  v32 += v50 + ((9 * (__clz(v50 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v38 & 0x10) != 0) {
LABEL_37:
  }
    v32 += ((9 * (__clz(*(void *)(a1 + 200) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_38:
  uint64_t v39 = *(void *)(a1 + 8);
  if (v39)
  {
    unint64_t v51 = v39 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v51 + 31) < 0) {
      uint64_t v52 = *(void *)(v51 + 16);
    }
    else {
      uint64_t v52 = *(unsigned __int8 *)(v51 + 31);
    }
    v32 += v52;
  }
  *(_DWORD *)(a1 + 44) = v32;
  return v32;
}

void sub_16D8ABC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1368074((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_13682A4((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (uint64_t *)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_154B228((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    char v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (uint64_t *)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_1871728((uint64_t *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 152);
  if (v24)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(a2 + 160) + 8);
    uint64_t v26 = (std::string **)sub_188CCE4(a1 + 144, *(_DWORD *)(a2 + 152));
    sub_18717B4((uint64_t *)(a1 + 144), v26, v25, v24, **(_DWORD **)(a1 + 160) - *(_DWORD *)(a1 + 152));
    int v27 = *(_DWORD *)(a1 + 152) + v24;
    *(_DWORD *)(a1 + 152) = v27;
    uint64_t v28 = *(int **)(a1 + 160);
    if (*v28 < v27) {
      int *v28 = v27;
    }
  }
  int v29 = *(_DWORD *)(a2 + 40);
  if ((v29 & 0x1F) != 0)
  {
    if (v29)
    {
      uint64_t v31 = (long long *)(*(void *)(a2 + 168) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v32 = *(void *)(a1 + 8);
      uint64_t v33 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
      if (v32) {
        uint64_t v33 = (uint64_t *)*v33;
      }
      sub_1881DF4((std::string **)(a1 + 168), v31, v33);
      if ((v29 & 2) == 0)
      {
LABEL_19:
        if ((v29 & 4) == 0) {
          goto LABEL_20;
        }
        goto LABEL_34;
      }
    }
    else if ((v29 & 2) == 0)
    {
      goto LABEL_19;
    }
    uint64_t v34 = (long long *)(*(void *)(a2 + 176) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v35 = *(void *)(a1 + 8);
    uint64_t v36 = (uint64_t *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
    if (v35) {
      uint64_t v36 = (uint64_t *)*v36;
    }
    sub_1881DF4((std::string **)(a1 + 176), v34, v36);
    if ((v29 & 4) == 0)
    {
LABEL_20:
      if ((v29 & 8) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v37 = (long long *)(*(void *)(a2 + 184) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v38 = *(void *)(a1 + 8);
    uint64_t v39 = (uint64_t *)(v38 & 0xFFFFFFFFFFFFFFFCLL);
    if (v38) {
      uint64_t v39 = (uint64_t *)*v39;
    }
    sub_1881DF4((std::string **)(a1 + 184), v37, v39);
    if ((v29 & 8) == 0)
    {
LABEL_21:
      if ((v29 & 0x10) == 0)
      {
LABEL_23:
        *(_DWORD *)(a1 + 40) |= v29;
        goto LABEL_24;
      }
LABEL_22:
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      goto LABEL_23;
    }
LABEL_37:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v40 = *(void *)(a1 + 192);
    if (!v40)
    {
      uint64_t v41 = *(void *)(a1 + 8);
      uint64_t v42 = (void *)(v41 & 0xFFFFFFFFFFFFFFFCLL);
      if (v41) {
        uint64_t v42 = (void *)*v42;
      }
      uint64_t v40 = sub_185089C((uint64_t)v42);
      *(void *)(a1 + 192) = v40;
    }
    if (*(void *)(a2 + 192)) {
      uint64_t v43 = *(uint64_t (****)())(a2 + 192);
    }
    else {
      uint64_t v43 = &off_254D2B0;
    }
    sub_16CE3CC(v40, (uint64_t)v43);
    if ((v29 & 0x10) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_24:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v30 = *(void *)(a2 + 8);
  if (v30)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v30 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16D8E48(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_132447C(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_1326C4C(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v9 = *(unsigned int *)(a1 + 104);
    while ((int)v9 >= 1)
    {
      uint64_t v10 = v9 - 1;
      char v11 = sub_16DA478(*(void *)(*(void *)(a1 + 112) + 8 * v9));
      uint64_t v9 = v10;
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v12 = *(unsigned int *)(a1 + 128);
    while ((int)v12 >= 1)
    {
      uint64_t v13 = v12 - 1;
      char v14 = sub_16D9AE4(*(void *)(*(void *)(a1 + 136) + 8 * v12));
      uint64_t v12 = v13;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    uint64_t result = sub_16D8F3C(a1 + 144);
    if (result)
    {
      if ((*(unsigned char *)(a1 + 40) & 8) == 0) {
        return 1;
      }
      uint64_t result = sub_16CE508(*(void *)(a1 + 192));
      if (result) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_16D8F3C(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_15BC528(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_16D8FAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitInfo");
}

void *sub_16D8FBC(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D2218;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = 0;
  a1[11] = 0;
  return a1;
}

void sub_16D9038(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16D9068(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25451C8)
  {
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_154AD28((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D9148(uint64_t a1)
{
  sub_16D9068(a1);

  operator delete();
}

uint64_t sub_16D9180(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16D9D14(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 3) != 0)
  {
    if ((v6 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v7 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
LABEL_9:
      if ((v6 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v6 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 80));
  }
LABEL_11:
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(void *)(v8 + 80) = 0;
  *(_DWORD *)(v8 + 32) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_16D9254(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v31 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 1);
    unsigned int v9 = **(unsigned char **)v31;
    if ((char)**(unsigned char **)v31 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v31, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v31 + 2);
      }
    }
    *(void *)uint64_t v31 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_34;
        }
        v5 |= 4u;
        uint64_t v12 = (char *)(v8 + 1);
        uint64_t v13 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        uint64_t v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = (char *)(v8 + 2);
LABEL_13:
          *(void *)uint64_t v31 = v12;
          *(void *)(a1 + 88) = v13;
          goto LABEL_44;
        }
        uint64_t v29 = sub_188C138((uint64_t)v8, v13);
        *(void *)uint64_t v31 = v29;
        *(void *)(a1 + 88) = v30;
        if (v29) {
          goto LABEL_44;
        }
        goto LABEL_51;
      case 3u:
        if (v9 != 26) {
          goto LABEL_34;
        }
        uint64_t v15 = v8 - 1;
        while (1)
        {
          uint64_t v16 = v15 + 1;
          *(void *)uint64_t v31 = v15 + 1;
          int v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_1787818(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            uint64_t v16 = *(unsigned __int8 **)v31;
          }
          uint64_t v15 = (unsigned __int8 *)sub_1536B70(a3, v19, v16);
          *(void *)uint64_t v31 = v15;
          if (!v15) {
            goto LABEL_51;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 26) {
            goto LABEL_44;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        int v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          int v22 = (uint64_t *)*v22;
        }
        uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 72), v22);
        int v24 = (void *)sub_188C244(v23, *(char **)v31, (uint64_t)a3);
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_34;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v25 = *(void *)(a1 + 80);
        if (!v25)
        {
          uint64_t v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v26 = (void *)*v26;
          }
          uint64_t v25 = sub_185089C((uint64_t)v26);
          *(void *)(a1 + 80) = v25;
          uint64_t v8 = *(unsigned __int8 **)v31;
        }
        int v24 = sub_12688D0(a3, v25, v8);
        goto LABEL_43;
      default:
LABEL_34:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v31;
            }
            int v24 = sub_1885AC0(v9, v28, (char *)v8, a3);
          }
          else
          {
            int v24 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25451C8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_43:
          *(void *)uint64_t v31 = v24;
          if (!v24) {
            goto LABEL_51;
          }
LABEL_44:
          if (sub_11947B8((uint64_t)a3, (char **)v31, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_51:
        }
          *(void *)uint64_t v31 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v31;
    }
  }
}

char *sub_16D9588(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(void *)(a1 + 88);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_16DA058(v12, v14, a3);
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v15 = *(void *)(a1 + 80);
    *uint64_t v4 = 42;
    unsigned int v16 = *(_DWORD *)(v15 + 44);
    v4[1] = v16;
    if (v16 > 0x7F) {
      int v17 = sub_188A9CC(v16, v4 + 1);
    }
    else {
      int v17 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v15, v17, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_16D97F4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16DA234(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 7) != 0)
  {
    if (v10)
    {
      unint64_t v13 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v15 = *(void *)(v13 + 8);
      if ((v14 & 0x80u) == 0) {
        uint64_t v15 = v14;
      }
      v4 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v16 = sub_184B568(*(void *)(a1 + 80));
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) != 0) {
LABEL_11:
    }
      v4 += ((9 * (__clz(*(void *)(a1 + 88) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v17 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v4 += v18;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16D9958(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_154B228((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        unint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 40) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 80);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_185089C((uint64_t)v16);
      *(void *)(a1 + 80) = v14;
    }
    if (*(void *)(a2 + 80)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      unint64_t v17 = &off_254D2B0;
    }
    sub_16CE3CC(v14, (uint64_t)v17);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16D9AE4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16DA478(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 80));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16D9B54@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitConnection");
}

uint64_t sub_16D9B64(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D2298;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16D9BD8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16D9C08(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2545228 && *(void *)(a1 + 56))
  {
    sub_13D2884();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16D9CDC(uint64_t a1)
{
  sub_16D9C08(a1);

  operator delete();
}

uint64_t sub_16D9D14(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1369F48(*(void *)(a1 + 56));
  }
LABEL_7:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 56) = 0;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_16D9DB4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)BOOL v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 5)
    {
      if (v8 != 42) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (uint64_t *)*v16;
      }
      unint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
      uint64_t v14 = (uint64_t)sub_188C244(v17, *(char **)v27, (uint64_t)a3);
      goto LABEL_39;
    }
    if (v11 != 4) {
      break;
    }
    if (v8 != 34) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v18 = *(void *)(a1 + 56);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_13DAB08((uint64_t)v19);
      *(void *)(a1 + 56) = v18;
      int v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v14 = sub_1323390(a3, v18, v7);
LABEL_39:
    *(void *)BOOL v27 = v14;
    if (!v14) {
      goto LABEL_51;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    unint64_t v20 = (char *)(v7 + 1);
    unint64_t v21 = *v7;
    if (((char)*v7 & 0x80000000) == 0) {
      goto LABEL_33;
    }
    int v22 = *v20;
    int v23 = v21 + (v22 << 7);
    unint64_t v21 = (v23 - 128);
    if (v22 < 0)
    {
      *(void *)BOOL v27 = sub_188C138((uint64_t)v7, (v23 - 128));
      if (!*(void *)v27) {
        goto LABEL_51;
      }
      unint64_t v21 = v25;
    }
    else
    {
      unint64_t v20 = (char *)(v7 + 2);
LABEL_33:
      *(void *)BOOL v27 = v20;
    }
    if (v21 > 4)
    {
      if (*v6) {
        uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v21, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 40) |= 4u;
      *(_DWORD *)(a1 + 64) = v21;
    }
    goto LABEL_40;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (v8 - 1600 > 0xF9F)
    {
      if (*v6)
      {
        int v24 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v14 = (uint64_t)sub_1885AC0(v8, v24, (char *)v7, a3);
    }
    else
    {
      uint64_t v14 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2545228, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_39;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_51:
  *(void *)BOOL v27 = 0;
  return *(void *)v27;
}

char *sub_16DA058(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *unint64_t v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    unint64_t v4 = sub_13D2F58(v10, v12, a3);
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16DA234(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 7) == 0) {
    goto LABEL_14;
  }
  if (v4)
  {
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
    uint64_t v7 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      uint64_t v7 = v6;
    }
    uint64_t v3 = v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_14;
      }
      goto LABEL_10;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v8 = sub_13D3304(*(void *)(a1 + 56));
  v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  int v9 = *(_DWORD *)(a1 + 64);
  if (v9 < 0) {
    uint64_t v10 = 11;
  }
  else {
    uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v3 += v10;
LABEL_14:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_16DA35C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      int v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        int v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void *)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_13DAB08((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v13 = &off_2536850;
    }
    sub_136AA7C(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16DA478(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16DA4BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitLabel");
}

void *sub_16DA4CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DA540(void *a1)
{
  sub_16DA4CC(a1);

  operator delete();
}

uint64_t *sub_16DA578(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16DA588(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16DA688(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16DA720(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16DA754(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16DA770()
{
  return 1;
}

void *sub_16DA778@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitInfoFilter");
}

uint64_t sub_16DA788(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24D2398;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1368330(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_16DA868(_Unwind_Exception *a1)
{
  sub_1367298(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16DA8AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1367298(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DA92C(void *a1)
{
  sub_16DA8AC(a1);

  operator delete();
}

uint64_t sub_16DA964(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_132AAF4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_16DA9E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_13324AC(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = (char *)sub_134B11C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_16DAB80(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_132B4E0(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16DACC4(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_132BB2C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_16DAD74(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1368330((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16DAE44(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_132C244(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_16DAE9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitIncident");
}

void *sub_16DAEAC(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DAF20(void *a1)
{
  sub_16DAEAC(a1);

  operator delete();
}

uint64_t *sub_16DAF58(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16DAF68(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16DB068(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16DB100(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16DB134(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16DB150()
{
  return 1;
}

void *sub_16DB158@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitIncidentFilter");
}

uint64_t sub_16DB168(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2498;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16DB1D8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16DB208(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2498;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = a1 + 40;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16DB308(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16DB354(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DB3D8(void *a1)
{
  sub_16DB354(a1);

  operator delete();
}

uint64_t sub_16DB410(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_16DB468(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v22 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 40);
    while (1)
    {
      int v7 = (char *)(*(void *)v22 + 1);
      unsigned int v8 = **(unsigned char **)v22;
      if ((char)**(unsigned char **)v22 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          int v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = (char *)(*(void *)v22 + 2);
        }
      }
      *(void *)int v22 = v7;
      if (v8 == 10)
      {
        unint64_t v13 = v7 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)int v22 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 56);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 48), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 48) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v19 = v18;
            v19[1] = sub_3A6EDC;
            void *v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v18);
            uint64_t v14 = *(char **)v22;
          }
          unint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)int v22 = v13;
          if (!v13) {
            goto LABEL_34;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_29;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 1600 > 0xF9F)
      {
        if (*v5)
        {
          unint64_t v20 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          int v7 = *(char **)v22;
        }
        uint64_t v12 = sub_1885AC0(v8, v20, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25452D0, (uint64_t *)(a1 + 8), a3);
      }
      *(void *)int v22 = v12;
      if (!v12) {
        goto LABEL_34;
      }
LABEL_29:
      if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
        return *(void *)v22;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return *(void *)v22;
    }
LABEL_34:
    *(void *)int v22 = 0;
  }
  return *(void *)v22;
}

char *sub_16DB690(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 56) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v10)
      {
        *a2 = 10;
        a2[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        uint64_t v11 = a2 + 2;
        memcpy(v11, v9, v10);
        a2 = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      a2 = (char *)sub_188A868(a3, 1, (uint64_t)v9, a2);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return a2;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(a2, v15, (int)v16);
    a2 += v17;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, a2);
}

uint64_t sub_16DB81C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t result = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      result += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 64) = result;
  return result;
}

void sub_16DB8CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 56) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_188FB98(a1 + 40, v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16DB9A8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16DB9B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitAttribution");
}

void *sub_16DB9C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DBA34(void *a1)
{
  sub_16DB9C0(a1);

  operator delete();
}

uint64_t *sub_16DBA6C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16DBA7C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16DBB7C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16DBC14(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16DBC48(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16DBC64()
{
  return 1;
}

void *sub_16DBC6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitAttributionFilter");
}

uint64_t sub_16DBC7C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2598;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16DBCEC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16DBD1C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2598;
  *(_DWORD *)(a1 + 24) = 0;
  unint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871840(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16DBE1C(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16DBE6C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186FABC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DBEF4(void *a1)
{
  sub_16DBE6C(a1);

  operator delete();
}

uint64_t sub_16DBF2C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16D5620(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  unint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_16DBFB0(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v20 + 2;
        }
      }
      unint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_178760C(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            unint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = (char *)sub_15494FC(a3, v16, v13);
          unint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (v7 - 4000 > 0xF9F)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          unint64_t v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2545330, (uint64_t *)(a1 + 8), a3);
      }
      unint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_16DC18C(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_16D5D84(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 500, 1000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_16DC2F4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16D6250(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void sub_16DC3A8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871840((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16DC484(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16D6854(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_16DC4EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitTripStop");
}

uint64_t sub_16DC4FC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2618;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16DC56C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16DC59C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2618;
  *(_DWORD *)(a1 + 24) = 0;
  int v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_187147C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16DC69C(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16DC6EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F73C(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DC774(void *a1)
{
  sub_16DC6EC(a1);

  operator delete();
}

uint64_t sub_16DC7AC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16D21E4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  int v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_16DC830(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v20 + 2;
        }
      }
      unint64_t v20 = v6;
      if (v7 == 18)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          unint64_t v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_17874D8(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = (char *)sub_16D017C(a3, v16, v13);
          unint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 18) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (v7 - 4000 > 0xF9F)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          int v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2545378, (uint64_t *)(a1 + 8), a3);
      }
      unint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_16DCA0C(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_16D2BC4(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 500, 1000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_16DCB74(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16D312C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void sub_16DCC28(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_187147C((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16DCD04(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16D37C8(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_16DCD6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitTripStopTime");
}

uint64_t sub_16DCD7C(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DCE1C(uint64_t a1)
{
  sub_16DCD7C(a1);

  operator delete();
}

uint64_t sub_16DCE54(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(void *)(result + 24) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16DCE9C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_29:
      *(void *)int v24 = v19;
      *(void *)(a1 + 32) = v20;
      goto LABEL_30;
    }
    uint64_t v22 = sub_188C138((uint64_t)v8, v20);
    *(void *)int v24 = v22;
    *(void *)(a1 + 32) = v23;
    if (!v22) {
      goto LABEL_37;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 24), v17);
    uint64_t v15 = (void *)sub_188C244(v18, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)int v24 = v15;
    if (!v15) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v24;
    }
    uint64_t v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_24;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_37:
  *(void *)int v24 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v24;
}

unsigned char *sub_16DD078(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    BOOL v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    BOOL v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16DD1C0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_10;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16DD27C()
{
  return 1;
}

void *sub_16DD284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitTripGeometry.TripLink");
}

uint64_t sub_16DD294(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2718;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_DWORD *)(a1 + 80) = 0;
  return a1;
}

void sub_16DD308(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16DD338(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2718;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (std::string *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18718CC(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unsigned int v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  int v12 = *(_DWORD *)(a2 + 64);
  if (v12)
  {
    sub_188C80C((unsigned int *)(a1 + 64), v12);
    BOOL v13 = *(void **)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy(v13, *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  *(_DWORD *)(a1 + 80) = 0;
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14) {
    sub_188B4F8(v4, (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16DD474(_Unwind_Exception *a1)
{
  sub_186FB3C(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16DD4D4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 8));
  sub_186FB3C(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DD564(void *a1)
{
  sub_16DD4D4(a1);

  operator delete();
}

uint64_t sub_16DD59C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16DCE54(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 56) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_16DD624(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v27 + 2;
      }
    }
    BOOL v27 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 16)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          BOOL v27 = v14 + 1;
          int v15 = v14[1];
          if (v14[1] < 0)
          {
            int v16 = v15 + (v14[2] << 7);
            int v15 = v16 - 128;
            if (v14[2] < 0)
            {
              uint64_t v14 = (char *)sub_188C0D0((uint64_t)(v14 + 1), v16 - 128);
              int v15 = v17;
            }
            else
            {
              v14 += 3;
            }
          }
          else
          {
            v14 += 2;
          }
          BOOL v27 = v14;
          uint64_t v18 = *(unsigned int *)(a1 + 64);
          if (v18 == *(_DWORD *)(a1 + 68))
          {
            int v19 = v18 + 1;
            sub_188C80C((unsigned int *)(a1 + 64), v18 + 1);
            *(_DWORD *)(*(void *)(a1 + 72) + 4 * v18) = v15;
            uint64_t v14 = v27;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 72) + 4 * v18) = v15;
            int v19 = v18 + 1;
          }
          *(_DWORD *)(a1 + 64) = v19;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 16) {
            goto LABEL_46;
          }
        }
      }
      if (v8 == 18)
      {
        BOOL v13 = sub_188C2CC((unsigned int *)(a1 + 64), (unsigned __int8 *)v7, (uint64_t)a3);
        goto LABEL_45;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      uint64_t v20 = v7 - 1;
      while (1)
      {
        int v21 = (unsigned __int8 *)(v20 + 1);
        BOOL v27 = v20 + 1;
        uint64_t v22 = *(_DWORD **)(a1 + 56);
        if (v22 && (uint64_t v23 = *(int *)(a1 + 48), (int)v23 < *v22))
        {
          *(_DWORD *)(a1 + 48) = v23 + 1;
          uint64_t v24 = *(void *)&v22[2 * v23 + 2];
        }
        else
        {
          unint64_t v25 = sub_1787B90(*(void *)(a1 + 40));
          uint64_t v24 = sub_188CDC8(a1 + 40, (uint64_t)v25);
          int v21 = (unsigned __int8 *)v27;
        }
        uint64_t v20 = (char *)sub_16DD8FC(a3, v24, v21);
        BOOL v27 = v20;
        if (!v20) {
          return 0;
        }
        if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
          goto LABEL_46;
        }
      }
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (v8 - 4000 > 0xF9F)
    {
      if (*v6)
      {
        uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v7 = v27;
      }
      BOOL v13 = sub_1885AC0(v8, v26, v7, a3);
    }
    else
    {
      BOOL v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25453C0, (uint64_t *)(a1 + 8), a3);
    }
LABEL_45:
    BOOL v27 = (char *)v13;
    if (!v13) {
      return 0;
    }
LABEL_46:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      return v27;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v27;
  }
  return 0;
}

uint64_t sub_16DD8FC(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DCE9C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16DD98C(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16DD078(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(unsigned int *)(a1 + 64);
  if ((int)v11 >= 1)
  {
    for (uint64_t j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unsigned int v13 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * j);
      *a2 = 16;
      a2[1] = v13;
      if (v13 > 0x7F)
      {
        a2[1] = v13 | 0x80;
        unsigned int v14 = v13 >> 7;
        a2[2] = v13 >> 7;
        a2 += 3;
        if (v13 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unsigned int v15 = v14 >> 14;
            v14 >>= 7;
            *a2++ = v14;
          }
          while (v15);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 500, 1000, a2, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return a2;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(a2, v19, (int)v20);
    a2 += v21;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, a2);
}

uint64_t sub_16DDB90(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16DD1C0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t result = sub_188D4F0((unsigned int *)(a1 + 64)) + v4 + *(unsigned int *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 80) = result;
  return result;
}

void sub_16DDC54(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_18718CC((std::string *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 64);
  if (v9)
  {
    uint64_t v10 = *(int *)(a1 + 64);
    sub_188C80C((unsigned int *)(a1 + 64), v10 + v9);
    uint64_t v11 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v11 + 4 * v10), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16DDD74(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16DDD7C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitTripGeometry");
}

uint64_t sub_16DDD8C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2798;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_16DDE00(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16DDE30(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2798;
  *(_DWORD *)(a1 + 24) = 0;
  int v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871958(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 80);
    unsigned int v14 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_18719E4((uint64_t *)(a1 + 64), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    uint64_t v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(_DWORD *)(a1 + 88) = 0;
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16DDF98(_Unwind_Exception *a1)
{
  sub_186FBBC(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16DDFFC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186FC3C(a1 + 8);
  sub_186FBBC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DE090(void *a1)
{
  sub_16DDFFC(a1);

  operator delete();
}

uint64_t sub_16DE0C8(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16DEBA4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_16DF58C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  int v9 = (uint64_t *)(a1 + 8);
  if (v10)
  {
    return sub_188B4AC(v9);
  }
  return result;
}

char *sub_16DE174(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v27 = a2;
  if ((sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      int v7 = v27 + 1;
      unsigned int v8 = *v27;
      if (*v27 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          int v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = v27 + 2;
        }
      }
      BOOL v27 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          unsigned int v14 = v7 - 1;
          while (1)
          {
            int v15 = (unsigned __int8 *)(v14 + 1);
            BOOL v27 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 80);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 72), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 72) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_1787D28(*(void *)(a1 + 64));
              uint64_t v18 = sub_188CDC8(a1 + 64, v19);
              int v15 = (unsigned __int8 *)v27;
            }
            unsigned int v14 = (char *)sub_16DE488(a3, v18, v15);
            BOOL v27 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_42;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          BOOL v27 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 56);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 48), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 48) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            unint64_t v25 = sub_1787CCC(*(void *)(a1 + 40));
            uint64_t v24 = sub_188CDC8(a1 + 40, (uint64_t)v25);
            uint64_t v21 = (unsigned __int8 *)v27;
          }
          uint64_t v20 = (char *)sub_16DE3F8(a3, v24, v21);
          BOOL v27 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_42;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 4000 > 0xF9F)
      {
        if (*v6)
        {
          uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          int v7 = v27;
        }
        uint64_t v13 = sub_1885AC0(v8, v26, v7, a3);
      }
      else
      {
        uint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545418, (uint64_t *)(a1 + 8), a3);
      }
      BOOL v27 = (char *)v13;
      if (!v13) {
        return 0;
      }
LABEL_42:
      if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
        return v27;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v27;
    }
    return 0;
  }
  return v27;
}

uint64_t sub_16DE3F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DEC44(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16DE488(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16DF664(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16DE518(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16DEF2C(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      a2[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        int v15 = a2 + 2;
      }
      a2 = sub_16DFD48(v13, v15, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 500, 1000, a2, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return a2;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)a2 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(a2, v19, (int)v20);
    a2 += v21;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, a2);
}

uint64_t sub_16DE704(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16DF134(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_16E02B0(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v11 += v20;
  }
  *(_DWORD *)(a1 + 88) = v11;
  return v11;
}

void sub_16DE808(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871958((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_18719E4((uint64_t *)(a1 + 64), v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16DE948(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16DF364(*(void *)(*(void *)(a1 + 56) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 72);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_18856CC(*(void *)(*(void *)(a1 + 80) + 8 * v7) + 16);
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_16DE9D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitNearbySchedule");
}

void *sub_16DE9E8(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D2818;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = a2;
  a1[8] = &qword_2550250;
  a1[9] = 0;
  return a1;
}

void sub_16DEA60(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16DEA90(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 64);
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2545478 && *(void *)(a1 + 72))
  {
    sub_13D2884();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DEB6C(uint64_t a1)
{
  sub_16DEA90(a1);

  operator delete();
}

uint64_t sub_16DEBA4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_1369F48(*(void *)(a1 + 72));
  }
LABEL_7:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_16DEC44(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)BOOL v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v15 = *(void *)(a1 + 72);
      if (!v15)
      {
        uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v16 = (void *)*v16;
        }
        uint64_t v15 = sub_13DAB08((uint64_t)v16);
        *(void *)(a1 + 72) = v15;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v14 = sub_1323390(a3, v15, v7);
      goto LABEL_46;
    }
    if (v11 == 2) {
      break;
    }
    if (v11 != 1 || v8 != 10) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    unint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 64), v24);
    uint64_t v14 = (uint64_t)sub_188C244(v25, *(char **)v27, (uint64_t)a3);
LABEL_46:
    *(void *)BOOL v27 = v14;
    if (!v14) {
      goto LABEL_54;
    }
LABEL_47:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 16)
  {
    uint64_t v17 = v7 - 1;
    while (1)
    {
      *(void *)BOOL v27 = v17 + 1;
      int v18 = v17[1];
      if ((char)v17[1] < 0)
      {
        int v19 = v18 + (v17[2] << 7);
        int v18 = v19 - 128;
        if ((char)v17[2] < 0)
        {
          uint64_t v17 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v17 + 1), v19 - 128);
          int v18 = v20;
        }
        else
        {
          v17 += 3;
        }
      }
      else
      {
        v17 += 2;
      }
      *(void *)BOOL v27 = v17;
      uint64_t v21 = *(unsigned int *)(a1 + 48);
      if (v21 == *(_DWORD *)(a1 + 52))
      {
        int v22 = v21 + 1;
        sub_188C80C((unsigned int *)(a1 + 48), v21 + 1);
        *(_DWORD *)(*(void *)(a1 + 56) + 4 * v21) = v18;
        uint64_t v17 = *(unsigned __int8 **)v27;
      }
      else
      {
        *(_DWORD *)(*(void *)(a1 + 56) + 4 * v21) = v18;
        int v22 = v21 + 1;
      }
      *(_DWORD *)(a1 + 48) = v22;
      if (!v17) {
        goto LABEL_54;
      }
      if (*(void *)a3 <= (unint64_t)v17 || *v17 != 16) {
        goto LABEL_47;
      }
    }
  }
  if (v8 == 18)
  {
    uint64_t v14 = (uint64_t)sub_188C2CC((unsigned int *)(a1 + 48), v7, (uint64_t)a3);
    goto LABEL_46;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (v8 - 4000 > 0xF9F)
    {
      if (*v6)
      {
        uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v14 = (uint64_t)sub_1885AC0(v8, v26, (char *)v7, a3);
    }
    else
    {
      uint64_t v14 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2545478, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_46;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_54:
  *(void *)BOOL v27 = 0;
  return *(void *)v27;
}

char *sub_16DEF2C(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  uint64_t v7 = *(unsigned int *)(a1 + 48);
  if ((int)v7 >= 1)
  {
    for (uint64_t i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v9 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * i);
      *unint64_t v4 = 16;
      v4[1] = v9;
      if (v9 > 0x7F)
      {
        v4[1] = v9 | 0x80;
        unsigned int v10 = v9 >> 7;
        v4[2] = v9 >> 7;
        v4 += 3;
        if (v9 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v11 = v10 >> 14;
            v10 >>= 7;
            *v4++ = v10;
          }
          while (v11);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v12 = *(void *)(a1 + 72);
    *unint64_t v4 = 26;
    unsigned int v13 = *(_DWORD *)(v12 + 44);
    v4[1] = v13;
    if (v13 > 0x7F) {
      uint64_t v14 = sub_188A9CC(v13, v4 + 1);
    }
    else {
      uint64_t v14 = v4 + 2;
    }
    unint64_t v4 = sub_13D2F58(v12, v14, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 500, 1000, v4, a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    int v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    int v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*a3 - (void)v4 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_16DF134(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D4F0((unsigned int *)(a1 + 48)) + v2 + *(unsigned int *)(a1 + 48);
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      unint64_t v5 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v8 = sub_13D3304(*(void *)(a1 + 72));
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_16DF228(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    unint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v10 = *(void *)(a1 + 8);
      unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
      if (v10) {
        unint64_t v11 = (uint64_t *)*v11;
      }
      sub_1881DF4((std::string **)(a1 + 64), v9, v11);
    }
    if ((v8 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v12 = *(void *)(a1 + 72);
      if (!v12)
      {
        uint64_t v13 = *(void *)(a1 + 8);
        uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
        if (v13) {
          uint64_t v14 = (void *)*v14;
        }
        uint64_t v12 = sub_13DAB08((uint64_t)v14);
        *(void *)(a1 + 72) = v12;
      }
      if (*(void *)(a2 + 72)) {
        uint64_t v15 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        uint64_t v15 = &off_2536850;
      }
      sub_136AA7C(v12, (uint64_t)v15);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16DF364(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_136AE2C(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16DF3A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitScheduleCategory");
}

uint64_t sub_16DF3B8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2898;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = a2;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = a2;
  *(void *)(a1 + 96) = &qword_2550250;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 104) = &qword_2550250;
  *(_DWORD *)(a1 + 128) = 0;
  return a1;
}

void sub_16DF44C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16DF47C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1889DA8(a1 + 80);
  sub_1889DA8(a1 + 64);
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16DF554(uint64_t a1)
{
  sub_16DF47C(a1);

  operator delete();
}

unsigned char *sub_16DF58C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 64) = 0;
  *(_DWORD *)(a1 + 80) = 0;
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  if ((v3 & 0x7C) != 0)
  {
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 120) = 0;
    *(_DWORD *)(a1 + 128) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_16DF664(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)v65 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, (char **)v65, a3[11].i32[1]) & 1) == 0)
  {
    v64 = (uint64_t *)(a1 + 8);
    while (1)
    {
      char v7 = (unsigned __int8 *)(*(void *)v65 + 1);
      unsigned int v8 = **(unsigned char **)v65;
      if ((char)**(unsigned char **)v65 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if ((char)*v7 < 0)
        {
          char v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v65, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          char v7 = (unsigned __int8 *)(*(void *)v65 + 2);
        }
      }
      *(void *)v65 = v7;
      switch(v8 >> 3)
      {
        case 1u:
          if (v8 != 10) {
            goto LABEL_108;
          }
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v11 = *(void *)(a1 + 8);
          uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
          if (v11) {
            uint64_t v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 96);
          goto LABEL_79;
        case 2u:
          if (v8 != 16) {
            goto LABEL_108;
          }
          v5 |= 4u;
          uint64_t v14 = (char *)(v7 + 1);
          int v15 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_17;
          }
          int v16 = *v14;
          int v15 = v15 + (v16 << 7) - 128;
          if (v16 < 0)
          {
            uint64_t v51 = sub_188C0D0((uint64_t)v7, v15);
            *(void *)v65 = v51;
            *(_DWORD *)(a1 + 112) = v52;
            if (!v51) {
              goto LABEL_124;
            }
          }
          else
          {
            uint64_t v14 = (char *)(v7 + 2);
LABEL_17:
            *(void *)v65 = v14;
            *(_DWORD *)(a1 + 112) = v15;
          }
          goto LABEL_89;
        case 3u:
          if (v8 != 24) {
            goto LABEL_108;
          }
          v5 |= 8u;
          unint64_t v17 = (char *)(v7 + 1);
          int v18 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_22;
          }
          int v19 = *v17;
          int v18 = v18 + (v19 << 7) - 128;
          if (v19 < 0)
          {
            uint64_t v53 = sub_188C0D0((uint64_t)v7, v18);
            *(void *)v65 = v53;
            *(_DWORD *)(a1 + 116) = v54;
            if (!v53) {
              goto LABEL_124;
            }
          }
          else
          {
            unint64_t v17 = (char *)(v7 + 2);
LABEL_22:
            *(void *)v65 = v17;
            *(_DWORD *)(a1 + 116) = v18;
          }
          goto LABEL_89;
        case 4u:
          if (v8 != 32) {
            goto LABEL_108;
          }
          v5 |= 0x10u;
          uint64_t v20 = (char *)(v7 + 1);
          int v21 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_27;
          }
          int v22 = *v20;
          int v21 = v21 + (v22 << 7) - 128;
          if (v22 < 0)
          {
            uint64_t v55 = sub_188C0D0((uint64_t)v7, v21);
            *(void *)v65 = v55;
            *(_DWORD *)(a1 + 120) = v56;
            if (!v55) {
              goto LABEL_124;
            }
          }
          else
          {
            uint64_t v20 = (char *)(v7 + 2);
LABEL_27:
            *(void *)v65 = v20;
            *(_DWORD *)(a1 + 120) = v21;
          }
          goto LABEL_89;
        case 5u:
          if (v8 != 40) {
            goto LABEL_108;
          }
          v5 |= 0x20u;
          uint64_t v23 = (char *)(v7 + 1);
          int v24 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_32;
          }
          int v25 = *v23;
          int v24 = v24 + (v25 << 7) - 128;
          if (v25 < 0)
          {
            uint64_t v57 = sub_188C0D0((uint64_t)v7, v24);
            *(void *)v65 = v57;
            *(_DWORD *)(a1 + 124) = v58;
            if (!v57) {
              goto LABEL_124;
            }
          }
          else
          {
            uint64_t v23 = (char *)(v7 + 2);
LABEL_32:
            *(void *)v65 = v23;
            *(_DWORD *)(a1 + 124) = v24;
          }
          goto LABEL_89;
        case 6u:
          if (v8 == 48)
          {
            uint64_t v26 = v7 - 1;
            while (1)
            {
              *(void *)v65 = v26 + 1;
              int v27 = v26[1];
              if ((char)v26[1] < 0)
              {
                int v28 = v27 + (v26[2] << 7);
                int v27 = v28 - 128;
                if ((char)v26[2] < 0)
                {
                  uint64_t v26 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v26 + 1), v28 - 128);
                  int v27 = v29;
                }
                else
                {
                  v26 += 3;
                }
              }
              else
              {
                v26 += 2;
              }
              *(void *)v65 = v26;
              uint64_t v30 = *(unsigned int *)(a1 + 48);
              if (v30 == *(_DWORD *)(a1 + 52))
              {
                int v31 = v30 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v30 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v27;
                uint64_t v26 = *(unsigned __int8 **)v65;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v30) = v27;
                int v31 = v30 + 1;
              }
              *(_DWORD *)(a1 + 48) = v31;
              if (!v26) {
                goto LABEL_124;
              }
              if (*(void *)a3 <= (unint64_t)v26 || *v26 != 48) {
                goto LABEL_89;
              }
            }
          }
          if (v8 == 50)
          {
            BOOL v60 = (unsigned int *)(a1 + 48);
LABEL_105:
            uint64_t v46 = sub_188C2CC(v60, v7, (uint64_t)a3);
          }
          else
          {
LABEL_108:
            if (v8) {
              BOOL v61 = (v8 & 7) == 4;
            }
            else {
              BOOL v61 = 1;
            }
            if (v61)
            {
              if (v7)
              {
                a3[10].i32[0] = v8 - 1;
                goto LABEL_2;
              }
LABEL_124:
              *(void *)v65 = 0;
              goto LABEL_2;
            }
            if (v8 - 4000 > 0xF9F)
            {
              if (*v64)
              {
                uint64_t v62 = (std::string *)((*v64 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else
              {
                uint64_t v62 = (std::string *)sub_188DBD8(v64);
                char v7 = *(unsigned __int8 **)v65;
              }
              uint64_t v46 = sub_1885AC0(v8, v62, (char *)v7, a3);
            }
            else
            {
              uint64_t v46 = sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_25454C8, v64, a3);
            }
          }
LABEL_80:
          *(void *)v65 = v46;
          if (!v46) {
            goto LABEL_124;
          }
LABEL_89:
          if (sub_11947B8((uint64_t)a3, (char **)v65, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        case 7u:
          if (v8 == 56)
          {
            uint64_t v32 = v7 - 1;
            while (1)
            {
              *(void *)v65 = v32 + 1;
              int v33 = v32[1];
              if ((char)v32[1] < 0)
              {
                int v34 = v33 + (v32[2] << 7);
                int v33 = v34 - 128;
                if ((char)v32[2] < 0)
                {
                  uint64_t v32 = (unsigned __int8 *)sub_188C0D0((uint64_t)(v32 + 1), v34 - 128);
                  int v33 = v35;
                }
                else
                {
                  v32 += 3;
                }
              }
              else
              {
                v32 += 2;
              }
              *(void *)v65 = v32;
              uint64_t v36 = *(unsigned int *)(a1 + 64);
              if (v36 == *(_DWORD *)(a1 + 68))
              {
                int v37 = v36 + 1;
                sub_188C80C((unsigned int *)(a1 + 64), v36 + 1);
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v36) = v33;
                uint64_t v32 = *(unsigned __int8 **)v65;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 72) + 4 * v36) = v33;
                int v37 = v36 + 1;
              }
              *(_DWORD *)(a1 + 64) = v37;
              if (!v32) {
                goto LABEL_124;
              }
              if (*(void *)a3 <= (unint64_t)v32 || *v32 != 56) {
                goto LABEL_89;
              }
            }
          }
          if (v8 != 58) {
            goto LABEL_108;
          }
          BOOL v60 = (unsigned int *)(a1 + 64);
          goto LABEL_105;
        case 8u:
          if (v8 == 64)
          {
            uint64_t v38 = v7 - 1;
            while (1)
            {
              *(void *)v65 = v38 + 1;
              uint64_t v39 = v38[1];
              if ((char)v38[1] < 0)
              {
                int v40 = v39 + (v38[2] << 7);
                uint64_t v39 = (v40 - 128);
                if ((char)v38[2] < 0)
                {
                  uint64_t v38 = (unsigned __int8 *)sub_188C138((uint64_t)(v38 + 1), (v40 - 128));
                  uint64_t v39 = v41;
                }
                else
                {
                  v38 += 3;
                }
              }
              else
              {
                v38 += 2;
              }
              *(void *)v65 = v38;
              uint64_t v42 = *(unsigned int *)(a1 + 80);
              if (v42 == *(_DWORD *)(a1 + 84))
              {
                int v43 = v42 + 1;
                sub_188CA54((unsigned int *)(a1 + 80), v42 + 1);
                *(void *)(*(void *)(a1 + 88) + 8 * v42) = v39;
                uint64_t v38 = *(unsigned __int8 **)v65;
              }
              else
              {
                *(void *)(*(void *)(a1 + 88) + 8 * v42) = v39;
                int v43 = v42 + 1;
              }
              *(_DWORD *)(a1 + 80) = v43;
              if (!v38) {
                goto LABEL_124;
              }
              if (*(void *)a3 <= (unint64_t)v38 || *v38 != 64) {
                goto LABEL_89;
              }
            }
          }
          if (v8 != 66) {
            goto LABEL_108;
          }
          uint64_t v46 = sub_188C2EC((unsigned int *)(a1 + 80), v7, (uint64_t)a3);
          goto LABEL_80;
        case 9u:
          if (v8 != 74) {
            goto LABEL_108;
          }
          *(_DWORD *)(a1 + 40) |= 2u;
          uint64_t v44 = *(void *)(a1 + 8);
          uint64_t v12 = (uint64_t *)(v44 & 0xFFFFFFFFFFFFFFFCLL);
          if (v44) {
            uint64_t v12 = (uint64_t *)*v12;
          }
          uint64_t v13 = (void *)(a1 + 104);
LABEL_79:
          uint64_t v45 = (std::string *)sub_1880F84(v13, v12);
          uint64_t v46 = (void *)sub_188C244(v45, *(char **)v65, (uint64_t)a3);
          goto LABEL_80;
        case 0xAu:
          if (v8 != 80) {
            goto LABEL_108;
          }
          unint64_t v47 = (char *)(v7 + 1);
          unint64_t v48 = *v7;
          if (((char)*v7 & 0x80000000) == 0) {
            goto LABEL_86;
          }
          int v49 = *v47;
          int v50 = v48 + (v49 << 7);
          unint64_t v48 = (v50 - 128);
          if (v49 < 0)
          {
            *(void *)v65 = sub_188C138((uint64_t)v7, (v50 - 128));
            if (!*(void *)v65) {
              goto LABEL_124;
            }
            unint64_t v48 = v59;
          }
          else
          {
            unint64_t v47 = (char *)(v7 + 2);
LABEL_86:
            *(void *)v65 = v47;
          }
          if (v48 > 4)
          {
            if (*v64) {
              int v63 = (std::string *)((*v64 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v63 = (std::string *)sub_188DBD8(v64);
            }
            sub_188C020(10, v48, v63);
          }
          else
          {
            *(_DWORD *)(a1 + 40) |= 0x40u;
            *(_DWORD *)(a1 + 128) = v48;
          }
          goto LABEL_89;
        default:
          goto LABEL_108;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v65;
}

char *sub_16DFD48(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 112);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 116);
    *unint64_t v4 = 24;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 120);
    *unint64_t v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 124);
    *unint64_t v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v19 = *(unsigned int *)(a1 + 48);
  if ((int)v19 >= 1)
  {
    for (uint64_t i = 0; i != v19; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v21 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * i);
      *unint64_t v4 = 48;
      v4[1] = v21;
      if (v21 > 0x7F)
      {
        v4[1] = v21 | 0x80;
        unsigned int v22 = v21 >> 7;
        v4[2] = v21 >> 7;
        v4 += 3;
        if (v21 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v23 = v22 >> 14;
            v22 >>= 7;
            *v4++ = v22;
          }
          while (v23);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v24 = *(unsigned int *)(a1 + 64);
  if ((int)v24 >= 1)
  {
    for (uint64_t j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unsigned int v26 = *(_DWORD *)(*(void *)(a1 + 72) + 4 * j);
      *unint64_t v4 = 56;
      v4[1] = v26;
      if (v26 > 0x7F)
      {
        v4[1] = v26 | 0x80;
        unsigned int v27 = v26 >> 7;
        v4[2] = v26 >> 7;
        v4 += 3;
        if (v26 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unsigned int v28 = v27 >> 14;
            v27 >>= 7;
            *v4++ = v27;
          }
          while (v28);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v29 = *(unsigned int *)(a1 + 80);
  if ((int)v29 >= 1)
  {
    for (uint64_t k = 0; k != v29; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v31 = *(void *)(*(void *)(a1 + 88) + 8 * k);
      *unint64_t v4 = 64;
      v4[1] = v31;
      if (v31 > 0x7F)
      {
        v4[1] = v31 | 0x80;
        unint64_t v32 = v31 >> 7;
        v4[2] = v31 >> 7;
        v4 += 3;
        if (v31 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v33 = v32 >> 14;
            v32 >>= 7;
            *v4++ = v32;
          }
          while (v33);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 9, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v34 = *(int *)(a1 + 128);
    *unint64_t v4 = 80;
    v4[1] = v34;
    if (v34 > 0x7F)
    {
      v4[1] = v34 | 0x80;
      unint64_t v35 = v34 >> 7;
      v4[2] = v34 >> 7;
      v4 += 3;
      if (v34 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v36 = v35 >> 14;
          v35 >>= 7;
          *v4++ = v35;
        }
        while (v36);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 500, 1000, v4, a3);
  }
  uint64_t v37 = *(void *)(a1 + 8);
  if ((v37 & 1) == 0) {
    return v4;
  }
  unint64_t v39 = v37 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v39 + 31) < 0)
  {
    int v40 = *(void **)(v39 + 8);
    uint64_t v41 = *(void *)(v39 + 16);
  }
  else
  {
    int v40 = (void *)(v39 + 8);
    LODWORD(v41) = *(unsigned __int8 *)(v39 + 31);
  }
  if (*a3 - (void)v4 >= (int)v41)
  {
    uint64_t v42 = (int)v41;
    memcpy(v4, v40, (int)v41);
    v4 += v42;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v40, v41, v4);
}

uint64_t sub_16E02B0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D4F0((unsigned int *)(a1 + 48));
  uint64_t v4 = *(unsigned int *)(a1 + 48);
  uint64_t v5 = sub_188D4F0((unsigned int *)(a1 + 64));
  uint64_t v6 = *(unsigned int *)(a1 + 64);
  uint64_t result = v3 + v2 + v5 + v4 + v6 + sub_188D5A8((unsigned int *)(a1 + 80)) + *(unsigned int *)(a1 + 80);
  int v8 = *(_DWORD *)(a1 + 40);
  if ((v8 & 0x7F) == 0) {
    goto LABEL_13;
  }
  if (v8)
  {
    unint64_t v13 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
    uint64_t v15 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      uint64_t v15 = v14;
    }
    result += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_4:
      if ((v8 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_21;
    }
  }
  else if ((v8 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v16 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  result += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_5:
    if ((v8 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  result += ((9 * (__clz(*(_DWORD *)(a1 + 112) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) == 0)
  {
LABEL_6:
    if ((v8 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  result += ((9 * (__clz(*(_DWORD *)(a1 + 116) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x10) == 0)
  {
LABEL_7:
    if ((v8 & 0x20) == 0) {
      goto LABEL_8;
    }
LABEL_24:
    result += ((9 * (__clz(*(_DWORD *)(a1 + 124) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
LABEL_23:
  result += ((9 * (__clz(*(_DWORD *)(a1 + 120) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_8:
  if ((v8 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_9:
  int v9 = *(_DWORD *)(a1 + 128);
  uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if (v9 >= 0) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = 11;
  }
  result += v11;
LABEL_13:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v19 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    result += v20;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16E04E4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 64);
  if (v8)
  {
    uint64_t v9 = *(int *)(a1 + 64);
    sub_188C80C((unsigned int *)(a1 + 64), v9 + v8);
    uint64_t v10 = *(void *)(a1 + 72);
    *(_DWORD *)(a1 + 64) += *(_DWORD *)(a2 + 64);
    memcpy((void *)(v10 + 4 * v9), *(const void **)(a2 + 72), 4 * *(int *)(a2 + 64));
  }
  int v11 = *(_DWORD *)(a2 + 80);
  if (v11)
  {
    uint64_t v12 = *(int *)(a1 + 80);
    sub_188CA54((unsigned int *)(a1 + 80), v12 + v11);
    uint64_t v13 = *(void *)(a1 + 88);
    *(_DWORD *)(a1 + 80) += *(_DWORD *)(a2 + 80);
    memcpy((void *)(v13 + 8 * v12), *(const void **)(a2 + 88), 8 * *(int *)(a2 + 80));
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0x7F) != 0)
  {
    if (v14)
    {
      unint64_t v16 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 96), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_27;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v19 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    unsigned int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unsigned int v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 104), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_29;
    }
LABEL_28:
    *(_DWORD *)(a1 + 116) = *(_DWORD *)(a2 + 116);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_30;
    }
LABEL_29:
    *(_DWORD *)(a1 + 120) = *(_DWORD *)(a2 + 120);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_17;
      }
LABEL_15:
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      goto LABEL_16;
    }
LABEL_30:
    *(_DWORD *)(a1 + 124) = *(_DWORD *)(a2 + 124);
    if ((v14 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E06F4(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E06FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitScheduleGroup");
}

void *sub_16E070C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D2918;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = 0;
  return a1;
}

void sub_16E0780(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E07B0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2918;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1367A80(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *int v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_163A2E8((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *unint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

void sub_16E0930(_Unwind_Exception *a1)
{
  sub_1366A98(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16E0994(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_163A0C4(a1 + 9);
  sub_1366A98(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E0A28(void *a1)
{
  sub_16E0994(a1);

  operator delete();
}

uint64_t sub_16E0A60(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_1330AF0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_132FBB0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(void *)(v9 + 88) = 0;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_16E0B14(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v29 + 1;
    unsigned int v9 = *v29;
    if (*v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v29 + 2;
      }
    }
    uint64_t v29 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 == 25)
      {
        *(void *)(a1 + 96) = *(void *)v8;
        uint64_t v29 = v8 + 8;
        int v5 = 1;
        goto LABEL_45;
      }
    }
    else if (v12 == 2)
    {
      if (v9 == 18)
      {
        unint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v29 = v16 + 1;
          uint64_t v18 = *(_DWORD **)(a1 + 88);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 80), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 80) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            unsigned int v21 = sub_133276C(*(void *)(a1 + 72));
            uint64_t v20 = sub_188CDC8(a1 + 72, (uint64_t)v21);
            uint64_t v17 = (unsigned __int8 *)v29;
          }
          unint64_t v16 = sub_162F46C(a3, v20, v17);
          uint64_t v29 = v16;
          if (!v16) {
            goto LABEL_50;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_45;
          }
        }
      }
    }
    else if (v12 == 1 && v9 == 10)
    {
      unsigned int v22 = v8 - 1;
      while (1)
      {
        unsigned int v23 = (unsigned __int8 *)(v22 + 1);
        uint64_t v29 = v22 + 1;
        uint64_t v24 = *(_DWORD **)(a1 + 64);
        if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
        {
          *(_DWORD *)(a1 + 56) = v25 + 1;
          uint64_t v26 = *(void *)&v24[2 * v25 + 2];
        }
        else
        {
          unsigned int v27 = sub_133280C(*(void *)(a1 + 48));
          uint64_t v26 = sub_188CDC8(a1 + 48, (uint64_t)v27);
          unsigned int v23 = (unsigned __int8 *)v29;
        }
        unsigned int v22 = (char *)sub_133F570(a3, v26, v23);
        uint64_t v29 = v22;
        if (!v22) {
          goto LABEL_50;
        }
        if (*(void *)a3 <= (unint64_t)v22 || *v22 != 10) {
          goto LABEL_45;
        }
      }
    }
    if (!v9 || (v9 & 7) == 4) {
      break;
    }
    if (v9 - 4000 > 0xF9F)
    {
      if (*v7)
      {
        unsigned int v28 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unsigned int v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v29;
      }
      int v15 = sub_1885AC0(v9, v28, v8, a3);
    }
    else
    {
      int v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2545550, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v29 = (char *)v15;
    if (!v15) {
      goto LABEL_50;
    }
LABEL_45:
    if (sub_11947B8((uint64_t)a3, &v29, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  uint64_t v29 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v29;
}

char *sub_16E0DD8(uint64_t a1, char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_1330F84(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 80);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        int v15 = a2 + 2;
      }
      a2 = sub_1330158(v13, v15, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v16 = *(void *)(a1 + 96);
    *a2 = 25;
    *(void *)(a2 + 1) = v16;
    a2 += 9;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 500, 1000, a2, a3);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if ((v17 & 1) == 0) {
    return a2;
  }
  unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(a2, v20, (int)v21);
    a2 += v22;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, a2);
}

uint64_t sub_16E1000(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1331208(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1330408(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = v11 + 9;
  }
  else {
    uint64_t result = v11;
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v19 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    result += v20;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16E1110(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1367A80((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_163A2E8((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v14 = *(void *)(a2 + 96);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(void *)(a1 + 96) = v14;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16E126C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_13314B8(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_133088C(*(void *)(*(void *)(a1 + 88) + 8 * v7));
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_16E12F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitPaymentMethodInfo");
}

void *sub_16E1308(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E137C(void *a1)
{
  sub_16E1308(a1);

  operator delete();
}

uint64_t *sub_16E13B4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16E13C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  char v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    BOOL v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        BOOL v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        BOOL v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      BOOL v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16E14C4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16E155C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16E1590(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16E15AC()
{
  return 1;
}

void *sub_16E15B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitPaymentMethodInfoFilter");
}

uint64_t sub_16E15C4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D2A18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(_WORD *)(a1 + 56) = 0;
  return a1;
}

void sub_16E1638(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E1668(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2A18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    unsigned int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v7);
  }
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  return a1;
}

void sub_16E1740(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E177C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E1824(uint64_t a1)
{
  sub_16E177C(a1);

  operator delete();
}

unsigned char *sub_16E185C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_WORD *)(v4 + 48) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16E18E4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v30 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v30 + 1);
    unsigned int v9 = **(unsigned char **)v30;
    if ((char)**(unsigned char **)v30 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v30, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v30 + 2);
      }
    }
    *(void *)uint64_t v30 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 4u;
      unint64_t v19 = v8 + 1;
      uint64_t v20 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_28;
      }
      int v21 = *v19;
      uint64_t v20 = v20 + (v21 << 7) - 128;
      if ((v21 & 0x80000000) == 0)
      {
        unint64_t v19 = v8 + 2;
LABEL_28:
        *(void *)uint64_t v30 = v19;
        *(unsigned char *)(a1 + 57) = v20 != 0;
        goto LABEL_37;
      }
      uint64_t v26 = sub_188C138((uint64_t)v8, v20);
      *(void *)uint64_t v30 = v26;
      *(unsigned char *)(a1 + 57) = v27 != 0;
      if (!v26) {
        goto LABEL_46;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 2u;
      uint64_t v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_32;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        uint64_t v22 = v8 + 2;
LABEL_32:
        *(void *)uint64_t v30 = v22;
        *(unsigned char *)(a1 + 56) = v23 != 0;
        goto LABEL_37;
      }
      uint64_t v28 = sub_188C138((uint64_t)v8, v23);
      *(void *)uint64_t v30 = v28;
      *(unsigned char *)(a1 + 56) = v29 != 0;
      if (!v28) {
        goto LABEL_46;
      }
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, (char **)v30, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    uint64_t v18 = (std::string *)sub_1880F84((void *)(a1 + 48), v17);
    uint64_t v15 = (void *)sub_188C244(v18, *(char **)v30, (uint64_t)a3);
LABEL_36:
    *(void *)uint64_t v30 = v15;
    if (!v15) {
      goto LABEL_46;
    }
    goto LABEL_37;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = *(char **)v30;
      }
      uint64_t v15 = sub_1885AC0(v9, v25, v8, a3);
    }
    else
    {
      uint64_t v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25455D0, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_46:
  *(void *)uint64_t v30 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return *(void *)v30;
}

char *sub_16E1B90(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v9 = *(unsigned char *)(a1 + 56);
    *uint64_t v4 = 8;
    v4[1] = v9;
    v4 += 2;
    if ((v6 & 4) == 0)
    {
LABEL_3:
      if ((v6 & 1) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 57);
  *uint64_t v4 = 16;
  v4[1] = v10;
  v4 += 2;
  if (v6) {
LABEL_4:
  }
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    unsigned int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    unsigned int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16E1CFC(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    uint64_t v7 = result + 2;
    if ((v3 & 2) == 0) {
      uint64_t v7 = result;
    }
    if ((v3 & 4) != 0) {
      uint64_t result = v7 + 2;
    }
    else {
      uint64_t result = v7;
    }
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    result += v10;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16E1DBC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      unint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 40) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E1E98(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E1EA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.POIClaim");
}

void *sub_16E1EB0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E1F24(void *a1)
{
  sub_16E1EB0(a1);

  operator delete();
}

uint64_t *sub_16E1F5C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16E1F6C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16E206C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16E2104(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16E2138(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16E2154()
{
  return 1;
}

void *sub_16E215C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.POIClaimFilter");
}

void *sub_16E216C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E21E0(void *a1)
{
  sub_16E216C(a1);

  operator delete();
}

uint64_t *sub_16E2218(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16E2228(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16E2328(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16E23C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16E23F4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16E2410()
{
  return 1;
}

void *sub_16E2418@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EVChargerFilter");
}

uint64_t sub_16E2428(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D2B98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 64) = &qword_2550250;
  *(unsigned char *)(a1 + 72) = 0;
  return a1;
}

void sub_16E249C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E24CC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2B98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    unint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v7 & 4) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v10);
  }
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void sub_16E2604(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E2640(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E2714(uint64_t a1)
{
  sub_16E2640(a1);

  operator delete();
}

unsigned char *sub_16E274C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
LABEL_17:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(unsigned char *)(v7 + 64) = 0;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_16E2848(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)uint64_t v26 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_26;
      case 2u:
        if (v9 != 16) {
          goto LABEL_30;
        }
        v5 |= 8u;
        uint64_t v15 = v8 + 1;
        uint64_t v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_17;
        }
        int v17 = *v15;
        uint64_t v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v24 = sub_188C138((uint64_t)v8, v16);
          *(void *)uint64_t v26 = v24;
          *(unsigned char *)(a1 + 72) = v25 != 0;
          if (!v24) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v15 = v8 + 2;
LABEL_17:
          *(void *)uint64_t v26 = v15;
          *(unsigned char *)(a1 + 72) = v16 != 0;
        }
        goto LABEL_28;
      case 3u:
        if (v9 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
        goto LABEL_26;
      case 4u:
        if (v9 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 64);
LABEL_26:
        uint64_t v20 = (std::string *)sub_1880F84(v14, v13);
        int v21 = (void *)sub_188C244(v20, *(char **)v26, (uint64_t)a3);
        goto LABEL_27;
      default:
LABEL_30:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(char **)v26;
            }
            int v21 = sub_1885AC0(v9, v23, v8, a3);
          }
          else
          {
            int v21 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2545640, (uint64_t *)(a1 + 8), a3);
          }
LABEL_27:
          *(void *)uint64_t v26 = v21;
          if (!v21) {
            goto LABEL_44;
          }
LABEL_28:
          if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_44:
        }
          *(void *)uint64_t v26 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v26;
    }
  }
}

char *sub_16E2B1C(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 8) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_3;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v9 = *(unsigned char *)(a1 + 72);
  *unint64_t v4 = 16;
  v4[1] = v9;
  v4 += 2;
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_14:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_5:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_16E2C94(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_10;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_5;
  }
  unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 2) != 0) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v3 & 4) != 0)
  {
LABEL_5:
    unint64_t v4 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v3 & 8) != 0) {
    result += 2;
  }
LABEL_10:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16E2DDC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_18;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0)
      {
LABEL_7:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_8;
      }
LABEL_6:
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      goto LABEL_7;
    }
LABEL_18:
    uint64_t v13 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), v13, v15);
    if ((v4 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_8:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E2F18(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E2F20@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BusinessClaim");
}

void *sub_16E2F30(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E2FA4(void *a1)
{
  sub_16E2F30(a1);

  operator delete();
}

uint64_t *sub_16E2FDC(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16E2FEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16E30EC(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16E3184(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16E31B8(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16E31D4()
{
  return 1;
}

void *sub_16E31DC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BusinessClaimFilter");
}

uint64_t sub_16E31EC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2C98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(void *)(a1 + 88) = 0x4014000000000000;
  return a1;
}

void sub_16E3268(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E3298(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2C98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  unint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  long long v13 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v13;
  return a1;
}

void sub_16E33B8(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16E340C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E3494(void *a1)
{
  sub_16E340C(a1);

  operator delete();
}

uint64_t sub_16E34CC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  if ((*(unsigned char *)(a1 + 40) & 0xF) != 0)
  {
    *(void *)(a1 + 72) = 0;
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0x4014000000000000;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_16E356C(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v35 + 1;
    unsigned int v9 = *v35;
    if (*v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v35 + 2;
      }
    }
    unint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_36;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          unint64_t v35 = (char *)sub_188C138((uint64_t)v8, (v15 - 128));
          if (!v35) {
            goto LABEL_60;
          }
          unint64_t v13 = v31;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          unint64_t v35 = v12;
        }
        if (v13 > 4)
        {
          if (*v7) {
            unint64_t v34 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v34 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v34);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 2u;
          *(_DWORD *)(a1 + 80) = v13;
        }
        goto LABEL_47;
      case 2u:
        if (v9 != 17) {
          goto LABEL_36;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 72) = v17;
        goto LABEL_20;
      case 3u:
        if (v9 != 25) {
          goto LABEL_36;
        }
        uint64_t v18 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 88) = v18;
LABEL_20:
        unint64_t v35 = v16;
        goto LABEL_47;
      case 4u:
        if (v9 != 32) {
          goto LABEL_36;
        }
        v5 |= 4u;
        uint64_t v20 = v8 + 1;
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_25;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          unint64_t v32 = (char *)sub_188C138((uint64_t)v8, v19);
          unint64_t v35 = v32;
          *(_DWORD *)(a1 + 84) = v33;
          if (!v32) {
            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_25:
          unint64_t v35 = v20;
          *(_DWORD *)(a1 + 84) = v19;
        }
        goto LABEL_47;
      case 5u:
        if (v9 != 42) {
          goto LABEL_36;
        }
        BOOL v22 = v8 - 1;
        while (1)
        {
          uint64_t v23 = (unsigned __int8 *)(v22 + 1);
          unint64_t v35 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 64);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 56), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 56) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v26 = sub_188CDC8(a1 + 48, (uint64_t)v27);
            uint64_t v23 = (unsigned __int8 *)v35;
          }
          BOOL v22 = (char *)sub_125CF74(a3, v26, v23);
          unint64_t v35 = v22;
          if (!v22) {
            goto LABEL_60;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 42) {
            goto LABEL_47;
          }
        }
      default:
LABEL_36:
        if (v9) {
          BOOL v28 = (v9 & 7) == 4;
        }
        else {
          BOOL v28 = 1;
        }
        if (!v28)
        {
          if (v9 - 1600 < 0xFA0 || (v9 - 8000) >> 6 <= 0x7C)
          {
            uint64_t v30 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25456A8, (uint64_t *)(a1 + 8), a3);
          }
          else
          {
            if (*v7)
            {
              uint64_t v29 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v35;
            }
            uint64_t v30 = sub_1885AC0(v9, v29, v8, a3);
          }
          unint64_t v35 = (char *)v30;
          if (!v30) {
            goto LABEL_60;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, &v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_60:
        }
          unint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v35;
    }
  }
}

char *sub_16E38F4(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 80);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    *unint64_t v4 = 17;
    *(void *)(v4 + 1) = v10;
    v4 += 9;
    if ((v6 & 8) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_24;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v11 = *(void *)(a1 + 88);
  *unint64_t v4 = 25;
  *(void *)(v4 + 1) = v11;
  v4 += 9;
  if ((v6 & 4) != 0)
  {
LABEL_18:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v12 = *(int *)(a1 + 84);
    *unint64_t v4 = 32;
    v4[1] = v12;
    if (v12 > 0x7F)
    {
      v4[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      v4[2] = v12 >> 7;
      v4 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *v4++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_24:
  int v15 = *(_DWORD *)(a1 + 56);
  if (v15)
  {
    for (int i = 0; i != v15; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v17 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *unint64_t v4 = 42;
      unsigned int v18 = *(_DWORD *)(v17 + 20);
      v4[1] = v18;
      if (v18 > 0x7F) {
        uint64_t v19 = sub_188A9CC(v18, v4 + 1);
      }
      else {
        uint64_t v19 = v4 + 2;
      }
      unint64_t v4 = sub_15B2EA4(v17, v19, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 200, 2000, v4, a3);
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if (*a3 - (void)v4 >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_16E3BD4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0xF) != 0)
  {
    uint64_t v11 = v4 + 9;
    if ((v10 & 1) == 0) {
      uint64_t v11 = v4;
    }
    if ((v10 & 2) != 0)
    {
      int v12 = *(_DWORD *)(a1 + 80);
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v12 >= 0) {
        uint64_t v14 = v13;
      }
      else {
        uint64_t v14 = 11;
      }
      v11 += v14;
    }
    if ((v10 & 4) != 0)
    {
      int v15 = *(_DWORD *)(a1 + 84);
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v15 >= 0) {
        uint64_t v17 = v16;
      }
      else {
        uint64_t v17 = 11;
      }
      v11 += v17;
    }
    if ((v10 & 8) != 0) {
      uint64_t v4 = v11 + 9;
    }
    else {
      uint64_t v4 = v11;
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v20 + 31) < 0) {
      uint64_t v21 = *(void *)(v20 + 16);
    }
    else {
      uint64_t v21 = *(unsigned __int8 *)(v20 + 31);
    }
    v4 += v21;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16E3D14(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_17;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      goto LABEL_10;
    }
LABEL_17:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E3E48(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E3E50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Rating");
}

uint64_t sub_16E3E60(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D2D18;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16E3EC4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16E3EF4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E3F70(void *a1)
{
  sub_16E3EF4(a1);

  operator delete();
}

unsigned char *sub_16E3FA8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16E3FF8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    int v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      int v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          int v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = v15 + 2;
        }
      }
      int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          int v7 = v15;
        }
        int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2545708, v5, a3);
      }
      int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16E4148(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16E4214(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16E426C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E4274@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RatingFilter");
}

uint64_t sub_16E4284(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D2D98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_16E4368()
{
}

uint64_t sub_16E43B8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2545738)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_16EB850(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E4484(uint64_t a1)
{
  sub_16E43B8(a1);

  operator delete();
}

uint64_t sub_16E44BC(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_16BF128(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16E4550(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)unint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    int v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      int v15 = sub_1788710((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1550A68(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)unint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)unint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_16E4710(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16EBC08(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16E4840(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16EBD94(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_16E4924(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      unsigned int v9 = *(void **)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        unsigned int v9 = sub_1788710((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_2545A18;
      }
      sub_16BF9C4((uint64_t)v9, (uint64_t)v12);
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E4A10(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 32) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16E4A40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Review.User");
}

void *sub_16E4A50(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D2E18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[11] = 0;
  a1[12] = 0;
  a1[10] = 0;
  return a1;
}

void sub_16E4AD0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E4B00(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2E18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v13 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  return a1;
}

void sub_16E4CC0()
{
}

uint64_t sub_16E4D44(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2545760)
  {
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_16E43B8(v6);
      operator delete();
    }
    int v7 = *(void **)(a1 + 88);
    if (v7)
    {
      sub_16E340C(v7);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_12C1DB8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E4E44(uint64_t a1)
{
  sub_16E4D44(a1);

  operator delete();
}

uint64_t sub_16E4E7C(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 7) == 0) {
    goto LABEL_10;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_18;
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  *(unsigned char *)unint64_t v9 = 0;
  *(unsigned char *)(v9 + 23) = 0;
  if ((v6 & 2) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  uint64_t result = sub_16E44BC(*(void *)(a1 + 80));
  if ((v6 & 4) != 0) {
LABEL_9:
  }
    uint64_t result = sub_16E34CC(*(void *)(a1 + 88));
LABEL_10:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(void *)(v7 + 88) = 0;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_16E4F68(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v9 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)BOOL v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_37;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          int v13 = v12 + 1;
          *(void *)BOOL v28 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, (uint64_t)v17);
            int v13 = *(unsigned __int8 **)v28;
          }
          uint64_t v12 = (unsigned __int8 *)sub_125CF74(a3, v16, v13);
          *(void *)BOOL v28 = v12;
          if (!v12) {
            goto LABEL_52;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_47;
          }
        }
      case 2u:
        if (v9 != 17) {
          goto LABEL_37;
        }
        v5 |= 8u;
        *(void *)(a1 + 96) = *(void *)v8;
        *(void *)BOOL v28 = v8 + 8;
        goto LABEL_47;
      case 4u:
        if (v9 != 34) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v18 = *(void **)(a1 + 80);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_1788130((uint64_t)v19);
          *(void *)(a1 + 80) = v18;
          char v8 = *(unsigned __int8 **)v28;
        }
        uint64_t v20 = sub_16E52B4(a3, (uint64_t)v18, v8);
        goto LABEL_46;
      case 5u:
        if (v9 != 42) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v22 = (uint64_t *)*v22;
        }
        uint64_t v23 = (std::string *)sub_1880F84((void *)(a1 + 72), v22);
        uint64_t v20 = (uint64_t)sub_188C244(v23, *(char **)v28, (uint64_t)a3);
        goto LABEL_46;
      case 6u:
        if (v9 != 50) {
          goto LABEL_37;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v24 = *(void *)(a1 + 88);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1788078((uint64_t)v25);
          *(void *)(a1 + 88) = v24;
          char v8 = *(unsigned __int8 **)v28;
        }
        uint64_t v20 = (uint64_t)sub_16E5344(a3, v24, v8);
        goto LABEL_46;
      default:
LABEL_37:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(unsigned __int8 **)v28;
            }
            uint64_t v20 = (uint64_t)sub_1885AC0(v9, v27, (char *)v8, a3);
          }
          else
          {
            uint64_t v20 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2545760, (uint64_t *)(a1 + 8), a3);
          }
LABEL_46:
          *(void *)BOOL v28 = v20;
          if (!v20) {
            goto LABEL_52;
          }
LABEL_47:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_52:
        }
          *(void *)BOOL v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v28;
    }
  }
}

uint64_t sub_16E52B4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E4550(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16E5344(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E356C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16E53D4(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_15B2EA4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if ((v11 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v12 = *(void *)(a1 + 96);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
    if ((v11 & 2) == 0)
    {
LABEL_11:
      if ((v11 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_23;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_11;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v13 = *(void *)(a1 + 80);
  *a2 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  a2[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, a2 + 1);
  }
  else {
    uint64_t v15 = a2 + 2;
  }
  a2 = sub_16E4710(v13, v15, a3);
  if ((v11 & 1) == 0)
  {
LABEL_12:
    if ((v11 & 4) == 0) {
      goto LABEL_30;
    }
    goto LABEL_24;
  }
LABEL_23:
  a2 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  if ((v11 & 4) == 0) {
    goto LABEL_30;
  }
LABEL_24:
  if (*a3 <= (unint64_t)a2) {
    a2 = sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v16 = *(void *)(a1 + 88);
  *a2 = 50;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  a2[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, a2 + 1);
  }
  else {
    uint64_t v18 = a2 + 2;
  }
  a2 = sub_16E38F4(v16, v18, a3);
LABEL_30:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return a2;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    unint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    unint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(a2, v22, (int)v23);
    a2 += v24;
    return a2;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, a2);
}

uint64_t sub_16E5670(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0xF) != 0)
  {
    if (v10)
    {
      unint64_t v14 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
      uint64_t v16 = *(void *)(v14 + 8);
      if ((v15 & 0x80u) == 0) {
        uint64_t v16 = v15;
      }
      v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_12;
        }
        goto LABEL_11;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    uint64_t v17 = sub_16E4840(*(void *)(a1 + 80));
    v4 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_12:
      if ((v10 & 8) != 0) {
        v4 += 9;
      }
      goto LABEL_14;
    }
LABEL_11:
    uint64_t v11 = sub_16E3BD4(*(void *)(a1 + 88));
    v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v18 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v4 += v19;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16E57EC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0xF) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_26;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    unint64_t v14 = *(void **)(a1 + 80);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v14 = sub_1788130((uint64_t)v16);
      *(void *)(a1 + 80) = v14;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v17 = &off_2545738;
    }
    sub_16E4924((uint64_t)v14, (uint64_t)v17);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_11;
      }
LABEL_9:
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      goto LABEL_10;
    }
LABEL_26:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 88);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v18 = sub_1788078((uint64_t)v20);
      *(void *)(a1 + 88) = v18;
    }
    if (*(void *)(a2 + 88)) {
      unint64_t v21 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      unint64_t v21 = &off_25456A8;
    }
    sub_16E3D14(v18, (uint64_t)v21);
    if ((v9 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E59C8(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t v4 = *(void *)(a1 + 80);
      if ((*(unsigned char *)(v4 + 16) & 2) != 0)
      {
        uint64_t result = sub_18856CC(*(void *)(v4 + 32) + 16);
        if (!result) {
          return result;
        }
        int v3 = *(_DWORD *)(a1 + 40);
      }
    }
    if ((v3 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16E5A34@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Review");
}

uint64_t sub_16E5A44(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D2E98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  return a1;
}

void sub_16E5AB4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16E5AE4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F4BC(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E5B6C(void *a1)
{
  sub_16E5AE4(a1);

  operator delete();
}

uint64_t sub_16E5BA4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16B6BB4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(unsigned char *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_16E5C30(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v27 + 2;
      }
    }
    uint64_t v27 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_23:
      uint64_t v27 = v15;
      *(unsigned char *)(a1 + 72) = v16 != 0;
      int v5 = 1;
      goto LABEL_37;
    }
    uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v27 = v25;
    *(unsigned char *)(a1 + 72) = v26 != 0;
    int v5 = 1;
    if (!v25) {
      goto LABEL_44;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v27 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 64);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 56) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1786128(*(void *)(a1 + 48));
        uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
        uint64_t v19 = (unsigned __int8 *)v27;
      }
      uint64_t v18 = sub_16C247C(a3, v22, v19);
      uint64_t v27 = v18;
      if (!v18) {
        goto LABEL_44;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_37;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v27;
      }
      unint64_t v14 = sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      unint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25457C8, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v27 = (char *)v14;
    if (!v14) {
      goto LABEL_44;
    }
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v27;
}

char *sub_16E5EB4(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16B6DC8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v11 = *(unsigned char *)(a1 + 72);
    *a2 = 16;
    a2[1] = v11;
    a2 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return a2;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(a2, v15, (int)v16);
    a2 += v17;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, a2);
}

uint64_t sub_16E6058(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16B6F6C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16E6118(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18711E0((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    char v9 = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(unsigned char *)(a1 + 72) = v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E6210(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E6218@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ReviewFilter");
}

uint64_t sub_16E6228(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D2F18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  return a1;
}

void sub_16E630C()
{
}

uint64_t sub_16E635C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2545818)
  {
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_16EB850(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E6428(uint64_t a1)
{
  sub_16E635C(a1);

  operator delete();
}

uint64_t sub_16E6460(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_16BF128(*(void *)(result + 32));
  }
LABEL_7:
  char v5 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = v1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16E64F4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        int v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)uint64_t v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v15 = *(void **)(a1 + 32);
    if (!v15)
    {
      uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v15 = sub_1788710((uint64_t)v16);
      *(void *)(a1 + 32) = v15;
      int v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = sub_1550A68(a3, (uint64_t)v15, v7);
LABEL_29:
    *(void *)uint64_t v20 = v14;
    if (!v14) {
      goto LABEL_35;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (std::string *)sub_1880F84((void *)(a1 + 24), v18);
    uint64_t v14 = (uint64_t)sub_188C244(v19, *(char **)v20, (uint64_t)a3);
    goto LABEL_29;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v14 = (uint64_t)sub_1885AC0(v8, v13, (char *)v7, a3);
    goto LABEL_29;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_35:
  *(void *)uint64_t v20 = 0;
  return *(void *)v20;
}

char *sub_16E66B4(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16EBC08(v7, v9, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_16E67E4(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_10;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_16EBD94(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_16E68C8(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_18856CC(*(void *)(a1 + 32) + 16);
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16E68F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Tip.User");
}

void *sub_16E6908(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D2F98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = 0;
  a1[11] = 0;
  return a1;
}

void sub_16E6984(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E69B4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D2F98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  if ((v13 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

void sub_16E6B3C()
{
}

uint64_t sub_16E6BA8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2545840)
  {
    uint64_t v6 = *(void *)(a1 + 80);
    if (v6)
    {
      sub_16E635C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1889DE8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E6C84(uint64_t a1)
{
  sub_16E6BA8(a1);

  operator delete();
}

uint64_t sub_16E6CBC(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_16E6460(*(void *)(a1 + 80));
  }
LABEL_7:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(void *)(v5 + 80) = 0;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_16E6D64(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  uint64_t v8 = (uint64_t **)(a1 + 48);
  while (2)
  {
    unsigned int v9 = (unsigned __int8 *)(*(void *)v28 + 1);
    unsigned int v10 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v11 = v10 + (*v9 << 7);
      unsigned int v10 = v11 - 128;
      if ((char)*v9 < 0)
      {
        unsigned int v9 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v28, v11 - 128);
        unsigned int v10 = v12;
      }
      else
      {
        unsigned int v9 = (unsigned __int8 *)(*(void *)v28 + 2);
      }
    }
    *(void *)BOOL v28 = v9;
    switch(v10 >> 3)
    {
      case 1u:
        if (v10 != 10) {
          goto LABEL_33;
        }
        int v13 = (const std::string::value_type *)(v9 - 1);
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)BOOL v28 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 64);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 56), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 56) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v8) {
              operator new();
            }
            *uint64_t v19 = v18;
            v19[1] = sub_3A6EDC;
            void *v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v18);
            uint64_t v14 = *(char **)v28;
          }
          int v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)BOOL v28 = v13;
          if (!v13) {
            goto LABEL_48;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_43;
          }
        }
      case 2u:
        if (v10 != 17) {
          goto LABEL_33;
        }
        v5 |= 4u;
        *(void *)(a1 + 88) = *(void *)v9;
        *(void *)BOOL v28 = v9 + 8;
        goto LABEL_43;
      case 3u:
        if (v10 != 26) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v20 = *(void **)(a1 + 80);
        if (!v20)
        {
          uint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_178826C((uint64_t)v21);
          *(void *)(a1 + 80) = v20;
          unsigned int v9 = *(unsigned __int8 **)v28;
        }
        uint64_t v22 = sub_16E70A4(a3, (uint64_t)v20, v9);
        goto LABEL_42;
      case 4u:
        if (v10 != 34) {
          goto LABEL_33;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v23 = *(void *)(a1 + 8);
        uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
        if (v23) {
          uint64_t v24 = (uint64_t *)*v24;
        }
        uint64_t v25 = (std::string *)sub_1880F84((void *)(a1 + 72), v24);
        uint64_t v22 = (uint64_t)sub_188C244(v25, *(char **)v28, (uint64_t)a3);
        goto LABEL_42;
      default:
LABEL_33:
        if (v10) {
          BOOL v26 = (v10 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (v10 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unsigned int v9 = *(unsigned __int8 **)v28;
            }
            uint64_t v22 = (uint64_t)sub_1885AC0(v10, v27, (char *)v9, a3);
          }
          else
          {
            uint64_t v22 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v10, (char *)v9, (uint64_t)&off_2545840, (uint64_t *)(a1 + 8), a3);
          }
LABEL_42:
          *(void *)BOOL v28 = v22;
          if (!v22) {
            goto LABEL_48;
          }
LABEL_43:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v9) {
          a3[10].i32[0] = v10 - 1;
        }
        else {
LABEL_48:
        }
          *(void *)BOOL v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v28;
    }
  }
}

uint64_t sub_16E70A4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E64F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16E7134(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 56);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 64) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if ((uint64_t)(*a3 - (void)a2 + 14) >= v10)
      {
        *a2 = 10;
        a2[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = a2 + 2;
        memcpy(v11, v9, v10);
        a2 = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      a2 = (char *)sub_188A868(a3, 1, (uint64_t)v9, a2);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  int v12 = *(_DWORD *)(a1 + 40);
  if ((v12 & 4) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v15 = *(void *)(a1 + 88);
    *a2 = 17;
    *(void *)(a2 + 1) = v15;
    a2 += 9;
    if ((v12 & 2) == 0)
    {
LABEL_15:
      if ((v12 & 1) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
  }
  else if ((v12 & 2) == 0)
  {
    goto LABEL_15;
  }
  if (*a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  uint64_t v16 = *(void *)(a1 + 80);
  *a2 = 26;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  a2[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, a2 + 1);
  }
  else {
    uint64_t v18 = a2 + 2;
  }
  a2 = sub_16E66B4(v16, v18, a3);
  if (v12) {
LABEL_16:
  }
    a2 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
LABEL_17:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return a2;
  }
  unint64_t v19 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v19 + 31) < 0)
  {
    uint64_t v20 = *(void **)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
  }
  else
  {
    uint64_t v20 = (void *)(v19 + 8);
    LODWORD(v21) = *(unsigned __int8 *)(v19 + 31);
  }
  if ((uint64_t)(*a3 - (void)a2) >= (int)v21)
  {
    uint64_t v22 = (int)v21;
    memcpy(a2, v20, (int)v21);
    a2 += v22;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v20, v21, a2);
}

uint64_t sub_16E738C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  if ((int)v3 >= 1)
  {
    int v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      v4 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
      uint64_t v12 = *(void *)(v10 + 8);
      if ((v11 & 0x80u) == 0) {
        uint64_t v12 = v11;
      }
      v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v9 & 2) != 0)
    {
      uint64_t v13 = sub_16E67E4(*(void *)(a1 + 80));
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v9 & 4) != 0) {
      v4 += 9;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v4 += v17;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16E74D4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    int v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 7) != 0)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0)
        {
LABEL_9:
          *(_DWORD *)(a1 + 40) |= v9;
          goto LABEL_10;
        }
LABEL_8:
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        goto LABEL_9;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void **)(a1 + 80);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_178826C((uint64_t)v16);
      *(void *)(a1 + 80) = v14;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v17 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v17 = &off_2545818;
    }
    sub_16E4924((uint64_t)v14, (uint64_t)v17);
    if ((v9 & 4) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16E7660(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t v3 = *(void *)(a1 + 80);
    if ((*(unsigned char *)(v3 + 16) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(v3 + 32) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16E76B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Tip");
}

uint64_t sub_16E76C4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D3018;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16E7734(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16E7764(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F4BC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E77EC(void *a1)
{
  sub_16E7764(a1);

  operator delete();
}

uint64_t sub_16E7824(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16B6BB4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_16E78A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          uint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          uint64_t v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1786128(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = sub_16C247C(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          uint64_t v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_25458A0, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_16E7A8C(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        uint64_t v10 = a2 + 2;
      }
      a2 = sub_16B6DC8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_16E7BF4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16B6F6C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

uint64_t sub_16E7CA8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E7CB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TipFilter");
}

void *sub_16E7CC0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D3098;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  return a1;
}

void sub_16E7D30(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E7D60(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3098;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v7);
  }
  return a1;
}

void sub_16E7E30(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E7E6C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E7F14(uint64_t a1)
{
  sub_16E7E6C(a1);

  operator delete();
}

unsigned char *sub_16E7F4C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16E7FD0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  char v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
    if (v12) {
      uint64_t v13 = (uint64_t *)*v13;
    }
    uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 48), v13);
    uint64_t v11 = (void *)sub_188C244(v14, *(char **)v17, (uint64_t)a3);
LABEL_20:
    *(void *)uint64_t v17 = v11;
    if (!v11) {
      goto LABEL_27;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (v7 - 1600 > 0xF9F)
    {
      if (*v5)
      {
        uint64_t v15 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v6 = *(char **)v17;
      }
      uint64_t v11 = sub_1885AC0(v7, v15, v6, a3);
    }
    else
    {
      uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_25458E8, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_27:
  *(void *)uint64_t v17 = 0;
  return *(void *)v17;
}

char *sub_16E8164(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16E8254(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    result += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    result += v8;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

uint64_t sub_16E82F4(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E82FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PriceDescription");
}

uint64_t sub_16E830C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D3118;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16E8370(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16E83A0(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E841C(void *a1)
{
  sub_16E83A0(a1);

  operator delete();
}

unsigned char *sub_16E8454(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  unint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16E84A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          unint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2545920, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16E85F4(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16E86C0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16E8718(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16E8720@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PriceDescriptionFilter");
}

void *sub_16E8730(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E87A4(void *a1)
{
  sub_16E8730(a1);

  operator delete();
}

uint64_t sub_16E87DC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16E8800(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v25 = v15;
      *(_DWORD *)(a1 + 28) = v16;
      goto LABEL_30;
    }
    uint64_t v21 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v25 = v21;
    *(_DWORD *)(a1 + 28) = v22;
    if (!v21) {
      goto LABEL_39;
    }
LABEL_30:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_29;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_29:
      uint64_t v25 = v18;
      *(_DWORD *)(a1 + 24) = v19;
      goto LABEL_30;
    }
    uint64_t v23 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v25 = v23;
    *(_DWORD *)(a1 + 24) = v24;
    if (!v23) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v25;
    }
    uint64_t v25 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v25) {
      goto LABEL_39;
    }
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_39:
  uint64_t v25 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v25;
}

unsigned char *sub_16E89F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 24);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 28);
    *unint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16E8B94(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_8;
  }
  if (v1)
  {
    uint64_t v2 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0) {
LABEL_7:
  }
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 28) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v2 += v6;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16E8C38()
{
  return 1;
}

void *sub_16E8C40@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LocalTimeRange");
}

void *sub_16E8C50(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186FCBC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E8CD0(void *a1)
{
  sub_16E8C50(a1);

  operator delete();
}

uint64_t sub_16E8D08(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16E87DC(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if ((*(unsigned char *)(v1 + 16) & 3) != 0)
  {
    *(void *)(v1 + 48) = 0;
    *(void *)(v1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_16E8D98(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v32 + 2;
      }
    }
    unint64_t v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3) {
      break;
    }
    if (v12 == 2)
    {
      if (v9 != 16) {
        goto LABEL_14;
      }
      v5 |= 2u;
      int v22 = v8 + 1;
      uint64_t v23 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_36;
      }
      int v24 = *v22;
      uint64_t v23 = v23 + (v24 << 7) - 128;
      if ((v24 & 0x80000000) == 0)
      {
        int v22 = v8 + 2;
LABEL_36:
        unint64_t v32 = v22;
        *(void *)(a1 + 56) = v23;
        goto LABEL_41;
      }
      BOOL v28 = (char *)sub_188C138((uint64_t)v8, v23);
      unint64_t v32 = v28;
      *(void *)(a1 + 56) = v29;
      if (!v28) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v12 != 1 || v9 != 8) {
        goto LABEL_14;
      }
      v5 |= 1u;
      uint64_t v25 = v8 + 1;
      uint64_t v26 = *v8;
      if ((*v8 & 0x80000000) == 0) {
        goto LABEL_40;
      }
      int v27 = *v25;
      uint64_t v26 = v26 + (v27 << 7) - 128;
      if ((v27 & 0x80000000) == 0)
      {
        uint64_t v25 = v8 + 2;
LABEL_40:
        unint64_t v32 = v25;
        *(void *)(a1 + 48) = v26;
        goto LABEL_41;
      }
      uint64_t v30 = (char *)sub_188C138((uint64_t)v8, v26);
      unint64_t v32 = v30;
      *(void *)(a1 + 48) = v31;
      if (!v30) {
        goto LABEL_50;
      }
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 26)
  {
    int v16 = v8 - 1;
    while (1)
    {
      uint64_t v17 = (unsigned __int8 *)(v16 + 1);
      unint64_t v32 = v16 + 1;
      uint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_1788460(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, (uint64_t)v21);
        uint64_t v17 = (unsigned __int8 *)v32;
      }
      int v16 = sub_16E9020(a3, v20, v17);
      unint64_t v32 = v16;
      if (!v16) {
        goto LABEL_50;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      unint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v32;
    }
    unint64_t v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_50;
    }
    goto LABEL_41;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_50:
  unint64_t v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

char *sub_16E9020(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E8800(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16E90B0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(void *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 56);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        uint64_t v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        uint64_t v17 = v4 + 2;
      }
      uint64_t v4 = sub_16E89F0(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_16E92F0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16E8B94(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8) {
      v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0) {
      v2 += ((9 * (__clz(*(void *)(a1 + 56) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v2 += v12;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16E93F4(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1871A70(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9) {
      v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    }
    if ((v9 & 2) != 0) {
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    }
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16E94F4()
{
  return 1;
}

void *sub_16E94FC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.DateTimeRange");
}

void *sub_16E950C(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D3298;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[7] = a2;
  a1[8] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[9] = 0;
  return a1;
}

void sub_16E9580(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16E95B0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3298;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188C80C((unsigned int *)(a1 + 48), v6);
    int v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v8 = *(_DWORD *)(a2 + 72);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 80);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1871A70((std::string *)(a1 + 64), v10, (uint64_t *)(v9 + 8), v8, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v11 = *(_DWORD *)(a1 + 72) + v8;
    *(_DWORD *)(a1 + 72) = v11;
    uint64_t v12 = *(int **)(a1 + 80);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13) {
    sub_188B4F8(v4, (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  return a1;
}

void sub_16E9734()
{
}

uint64_t sub_16E97B4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2545950)
  {
    int v6 = *(void **)(a1 + 88);
    if (v6)
    {
      sub_16EA4D0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_186FCBC((void *)(a1 + 64));
  sub_1889DA8(a1 + 48);
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16E9888(uint64_t a1)
{
  sub_16E97B4(a1);

  operator delete();
}

uint64_t sub_16E98C0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  uint64_t v3 = *(unsigned int *)(a1 + 72);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16E87DC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 72) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = (uint64_t)sub_16E995C(*(void *)(a1 + 88));
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

unsigned char *sub_16E995C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  if ((*(unsigned char *)(a1 + 40) & 3) != 0) {
    *(void *)(a1 + 48) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16E99C0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v33 = a2;
  if ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    do
    {
      char v7 = v33 + 1;
      unsigned int v8 = *v33;
      if (*v33 < 0)
      {
        int v9 = *v7;
        unsigned int v10 = v8 + (v9 << 7);
        unsigned int v8 = v10 - 128;
        if (v9 < 0)
        {
          char v7 = (char *)sub_188C180((uint64_t)v33, v10 - 128);
          unsigned int v8 = v11;
        }
        else
        {
          char v7 = v33 + 2;
        }
      }
      int v33 = v7;
      unsigned int v12 = v8 >> 3;
      if (v8 >> 3 == 3)
      {
        if (v8 == 26)
        {
          *(_DWORD *)(a1 + 40) |= 1u;
          uint64_t v22 = *(void **)(a1 + 88);
          if (!v22)
          {
            uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v6) {
              uint64_t v23 = (void *)*v23;
            }
            uint64_t v22 = sub_17885D0((uint64_t)v23);
            *(void *)(a1 + 88) = v22;
            char v7 = v33;
          }
          int v24 = sub_16E9D4C(a3, (uint64_t)v22, (unsigned __int8 *)v7);
          goto LABEL_58;
        }
      }
      else if (v12 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v25 = v7 - 1;
          while (1)
          {
            uint64_t v26 = (unsigned __int8 *)(v25 + 1);
            int v33 = v25 + 1;
            int v27 = *(_DWORD **)(a1 + 80);
            if (v27 && (uint64_t v28 = *(int *)(a1 + 72), (int)v28 < *v27))
            {
              *(_DWORD *)(a1 + 72) = v28 + 1;
              uint64_t v29 = *(void *)&v27[2 * v28 + 2];
            }
            else
            {
              uint64_t v30 = sub_1788460(*(void *)(a1 + 64));
              uint64_t v29 = sub_188CDC8(a1 + 64, (uint64_t)v30);
              uint64_t v26 = (unsigned __int8 *)v33;
            }
            uint64_t v25 = sub_16E9020(a3, v29, v26);
            int v33 = v25;
            if (!v25) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v25 || *v25 != 18) {
              goto LABEL_59;
            }
          }
        }
      }
      else if (v12 == 1)
      {
        if (v8 == 8)
        {
          uint64_t v13 = v7 - 1;
          while (1)
          {
            int v33 = v13 + 1;
            unint64_t v14 = v13[1];
            uint64_t v15 = v13 + 2;
            if (v13[1] < 0)
            {
              int v16 = *v15;
              int v17 = v14 + (v16 << 7);
              unint64_t v14 = (v17 - 128);
              if (v16 < 0)
              {
                int v33 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
                if (!v33) {
                  return 0;
                }
                unint64_t v14 = v20;
                goto LABEL_17;
              }
              uint64_t v15 = v13 + 3;
            }
            int v33 = v15;
LABEL_17:
            if (v14 > 7)
            {
              if (*v6) {
                uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v14, v21);
            }
            else
            {
              uint64_t v18 = *(unsigned int *)(a1 + 48);
              if (v18 == *(_DWORD *)(a1 + 52))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 48), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v18) = v14;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 56) + 4 * v18) = v14;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 48) = v19;
            }
            uint64_t v13 = v33;
            if (*(void *)a3 <= (unint64_t)v33 || *v33 != 8) {
              goto LABEL_59;
            }
          }
        }
        if (v8 == 10)
        {
          *(void *)&long long v34 = a1 + 48;
          *((void *)&v34 + 1) = sub_16B5978;
          uint64_t v35 = a1 + 8;
          int v36 = 1;
          int v24 = sub_1112E88((uint64_t)a3, v7, &v34);
          goto LABEL_58;
        }
      }
      if (v8) {
        BOOL v31 = (v8 & 7) == 4;
      }
      else {
        BOOL v31 = 1;
      }
      if (v31)
      {
        if (v7)
        {
          a3[10].i32[0] = v8 - 1;
          return v33;
        }
        return 0;
      }
      if (v8 - 1600 > 0xF9F)
      {
        if (*v6)
        {
          unint64_t v32 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          char v7 = v33;
        }
        int v24 = (char *)sub_1885AC0(v8, v32, v7, a3);
      }
      else
      {
        int v24 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545950, (uint64_t *)(a1 + 8), a3);
      }
LABEL_58:
      int v33 = v24;
      if (!v24) {
        return 0;
      }
LABEL_59:
      ;
    }
    while ((sub_11947B8((uint64_t)a3, &v33, a3[11].i32[1]) & 1) == 0);
  }
  return v33;
}

char *sub_16E9D4C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EA584(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16E9DDC(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 56) + 4 * i);
      *a2 = 8;
      a2[1] = v8;
      if (v8 > 0x7F)
      {
        a2[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        a2[2] = v8 >> 7;
        a2 += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *a2++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      a2[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        uint64_t v15 = a2 + 2;
      }
      a2 = sub_16E89F0(v13, (unint64_t)v15, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v16 = *(void *)(a1 + 88);
    *a2 = 26;
    unsigned int v17 = *(_DWORD *)(v16 + 44);
    a2[1] = v17;
    if (v17 > 0x7F) {
      uint64_t v18 = sub_188A9CC(v17, a2 + 1);
    }
    else {
      uint64_t v18 = a2 + 2;
    }
    a2 = sub_16EA7B0(v16, v18, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return a2;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(a2, v22, (int)v23);
    a2 += v24;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, a2);
}

uint64_t sub_16EA048(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if (v3)
  {
    uint64_t v4 = 0;
    int v5 = 0;
    do
    {
      int v6 = *(_DWORD *)(*(void *)(a1 + 56) + 4 * v5);
      if (v6 < 0) {
        uint64_t v7 = 10;
      }
      else {
        uint64_t v7 = (9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v7;
      ++v5;
    }
    while (v3 != v5);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 72);
  uint64_t v9 = v2 + v3 + v4 + v8;
  uint64_t v10 = *(void *)(a1 + 80);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16E8B94(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v15 = sub_16EA978(*(void *)(a1 + 88));
    v9 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v9 += v19;
  }
  *(_DWORD *)(a1 + 44) = v9;
  return v9;
}

void sub_16EA18C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188C80C((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 56), 4 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 72);
  if (v8)
  {
    uint64_t v9 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v10 = (std::string **)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1871A70((std::string *)(a1 + 64), v10, v9, v8, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v11 = *(_DWORD *)(a1 + 72) + v8;
    *(_DWORD *)(a1 + 72) = v11;
    uint64_t v12 = *(int **)(a1 + 80);
    if (*v12 < v11) {
      *uint64_t v12 = v11;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v13 = *(uint64_t (****)())(a2 + 88);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v14 = *(void **)(a1 + 88);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_17885D0((uint64_t)v16);
      *(void *)(a1 + 88) = v14;
      uint64_t v13 = *(uint64_t (****)())(a2 + 88);
    }
    if (v13) {
      unsigned int v17 = v13;
    }
    else {
      unsigned int v17 = &off_25459B0;
    }
    sub_1305F18((uint64_t)v14, (uint64_t)v17);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16EA300(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 88) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_16EA348(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16EA350@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Hours");
}

void *sub_16EA360(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D3318;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_16EA3C4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16EA3F4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D3318;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_16EA494(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16EA4D0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EA54C(void *a1)
{
  sub_16EA4D0(a1);

  operator delete();
}

char *sub_16EA584(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    int v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v15 = v8 + 1;
    int v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v17 = *v15;
    int v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_23:
      uint64_t v26 = v15;
      *(_DWORD *)(a1 + 52) = v16;
      goto LABEL_32;
    }
    uint64_t v22 = (char *)sub_188C0D0((uint64_t)v8, v16);
    uint64_t v26 = v22;
    *(_DWORD *)(a1 + 52) = v23;
    if (!v22) {
      goto LABEL_41;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 8)
  {
    v5 |= 1u;
    uint64_t v18 = v8 + 1;
    int v19 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_27;
    }
    int v20 = *v18;
    int v19 = v19 + (v20 << 7) - 128;
    if ((v20 & 0x80000000) == 0)
    {
      uint64_t v18 = v8 + 2;
LABEL_27:
      uint64_t v26 = v18;
      *(_DWORD *)(a1 + 48) = v19;
      goto LABEL_32;
    }
    uint64_t v24 = (char *)sub_188C0D0((uint64_t)v8, v19);
    uint64_t v26 = v24;
    *(_DWORD *)(a1 + 48) = v25;
    if (!v24) {
      goto LABEL_41;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (v9 - 1600 > 0xF9F)
    {
      if (*v7)
      {
        unint64_t v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v8 = v26;
      }
      uint64_t v14 = sub_1885AC0(v9, v21, v8, a3);
    }
    else
    {
      uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25459B0, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v26 = (char *)v14;
    if (!v14) {
      goto LABEL_41;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v26;
}

char *sub_16EA7B0(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 52);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16EA978(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 48) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0) {
      result += ((9 * (__clz(*(_DWORD *)(a1 + 52) | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void *sub_16EAA2C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HoursThreshold");
}

uint64_t sub_16EAA3C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D3398;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16EAAA0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16EAAD0(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EAB4C(void *a1)
{
  sub_16EAAD0(a1);

  operator delete();
}

unsigned char *sub_16EAB84(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16EABD4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    unint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unsigned int v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unsigned int v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unsigned int v7 = v15 + 2;
        }
      }
      unint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          unsigned int v7 = v15;
        }
        unsigned int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unsigned int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25459E8, v5, a3);
      }
      unint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16EAD24(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16EADF0(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16EAE48(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16EAE50@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.HoursFilter");
}

uint64_t sub_16EAE60(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EAF00(uint64_t a1)
{
  sub_16EAE60(a1);

  operator delete();
}

uint64_t sub_16EAF38(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
  }
  if ((v1 & 0xE) != 0)
  {
    *(_DWORD *)(a1 + 40) = 0;
    *(void *)(a1 + 32) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v4) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16EAF8C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)long long v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v34 + 1);
    unsigned int v9 = **(unsigned char **)v34;
    if ((char)**(unsigned char **)v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v34 + 2);
      }
    }
    *(void *)long long v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_30;
        }
        v5 |= 2u;
        unsigned int v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          unsigned int v12 = v8 + 2;
LABEL_13:
          *(void *)long long v34 = v12;
          *(_DWORD *)(a1 + 32) = v13;
          goto LABEL_38;
        }
        uint64_t v28 = sub_188C0D0((uint64_t)v8, v13);
        *(void *)long long v34 = v28;
        *(_DWORD *)(a1 + 32) = v29;
        if (v28) {
          goto LABEL_38;
        }
        goto LABEL_53;
      case 2u:
        if (v9 != 16) {
          goto LABEL_30;
        }
        v5 |= 4u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v30 = sub_188C0D0((uint64_t)v8, v16);
          *(void *)long long v34 = v30;
          *(_DWORD *)(a1 + 36) = v31;
          if (!v30) {
            goto LABEL_53;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          *(void *)long long v34 = v15;
          *(_DWORD *)(a1 + 36) = v16;
        }
        goto LABEL_38;
      case 3u:
        if (v9 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        int v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          int v19 = (uint64_t *)*v19;
        }
        int v20 = (std::string *)sub_1880F84((void *)(a1 + 24), v19);
        unint64_t v21 = (void *)sub_188C244(v20, *(char **)v34, (uint64_t)a3);
        goto LABEL_37;
      case 4u:
        if (v9 != 32) {
          goto LABEL_30;
        }
        uint64_t v22 = v8 + 1;
        unint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v24 = *v22;
        int v25 = v23 + (v24 << 7);
        unint64_t v23 = (v25 - 128);
        if (v24 < 0)
        {
          *(void *)long long v34 = sub_188C138((uint64_t)v8, (v25 - 128));
          if (!*(void *)v34) {
            goto LABEL_53;
          }
          unint64_t v23 = v32;
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_27:
          *(void *)long long v34 = v22;
        }
        if (v23 > 1)
        {
          if (*v7) {
            int v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(4, v23, v33);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 8u;
          *(_DWORD *)(a1 + 40) = v23;
        }
        goto LABEL_38;
      default:
LABEL_30:
        if (v9) {
          BOOL v26 = (v9 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v7)
          {
            int v27 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v8 = *(char **)v34;
          }
          unint64_t v21 = sub_1885AC0(v9, v27, v8, a3);
LABEL_37:
          *(void *)long long v34 = v21;
          if (!v21) {
            goto LABEL_53;
          }
LABEL_38:
          if (sub_11947B8((uint64_t)a3, (char **)v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)long long v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v34;
    }
  }
}

unsigned char *sub_16EB294(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 32);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 36);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 40);
    *char v4 = 32;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_16EB4D4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_18;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v1 & 4) != 0)
  {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 36) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 8) == 0) {
      goto LABEL_18;
    }
  }
  else if ((v1 & 8) == 0)
  {
    goto LABEL_18;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6 < 0) {
    uint64_t v7 = 11;
  }
  else {
    uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v7;
LABEL_18:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_16EB5F8()
{
  return 1;
}

void *sub_16EB600@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Photo.PhotoContent");
}

void *sub_16EB610(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D3498;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  return a1;
}

void sub_16EB688(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16EB6B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3498;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871AEC(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v13);
  }
  return a1;
}

void sub_16EB800(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16EB850(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_186FD3C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EB904(uint64_t a1)
{
  sub_16EB850(a1);

  operator delete();
}

uint64_t sub_16EB93C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)int v24 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t v22 = (std::string *)sub_1880F84((void *)(a1 + 72), v21);
    unint64_t v13 = (void *)sub_188C244(v22, *(char **)v24, (uint64_t)a3);
LABEL_35:
    *(void *)int v24 = v13;
    if (!v13) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 == 18)
  {
    unint64_t v14 = v7 - 1;
    while (1)
    {
      unint64_t v15 = (unsigned __int8 *)(v14 + 1);
      *(void *)int v24 = v14 + 1;
      uint64_t v16 = *(_DWORD **)(a1 + 64);
      if (v16 && (uint64_t v17 = *(int *)(a1 + 56), (int)v17 < *v16))
      {
        *(_DWORD *)(a1 + 56) = v17 + 1;
        uint64_t v18 = *(void *)&v16[2 * v17 + 2];
      }
      else
      {
        uint64_t v19 = sub_1788688(*(void *)(a1 + 48));
        uint64_t v18 = sub_188CDC8(a1 + 48, v19);
        unint64_t v15 = *(unsigned __int8 **)v24;
      }
      unint64_t v14 = (char *)sub_16EBB78(a3, v18, v15);
      *(void *)int v24 = v14;
      if (!v14) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (v8 - 1600 > 0xF9F)
    {
      if (*v6)
      {
        unint64_t v23 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = *(char **)v24;
      }
      unint64_t v13 = sub_1885AC0(v8, v23, v7, a3);
    }
    else
    {
      unint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545A18, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_35;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_41:
  *(void *)int v24 = 0;
  return *(void *)v24;
}

uint64_t sub_16EBB78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16EAF8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16EBC08(uint64_t a1, char *a2, unint64_t *a3)
{
  uint64_t v4 = a2;
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      v4[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, v4 + 1);
      }
      else {
        unsigned int v10 = v4 + 2;
      }
      uint64_t v4 = sub_16EB294(v8, (unint64_t)v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_16EBD94(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16EB4D4(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v10 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v4 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v4 += v16;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void *sub_16EBE90@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Photo");
}

uint64_t sub_16EBEA0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D3518;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16EBF10(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16EBF40(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F4BC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EBFC8(void *a1)
{
  sub_16EBF40(a1);

  operator delete();
}

uint64_t sub_16EC000(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16B6BB4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  int v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_16EC084(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      int v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          int v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          int v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1786128(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = sub_16C247C(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          int v6 = v20;
        }
        uint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        uint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2545A68, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_16EC268(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unint64_t v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unint64_t v10 = a2 + 2;
      }
      a2 = sub_16B6DC8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_16EC3D0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16B6F6C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

uint64_t sub_16EC484(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16EC48C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PhotoFilter");
}

uint64_t sub_16EC49C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D3598;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = 0;
  return a1;
}

void sub_16EC504(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16EC534(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D3598;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  return a1;
}

void sub_16EC60C()
{
}

uint64_t sub_16EC668(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2545AB0)
  {
    uint64_t v6 = *(void *)(a1 + 48);
    if (v6)
    {
      sub_16EB850(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EC728(uint64_t a1)
{
  sub_16EC668(a1);

  operator delete();
}

uint64_t sub_16EC760(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_16BF128(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 48) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16EC7C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    return v23;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v23 + 1;
    unsigned int v8 = *v23;
    if (*v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v23 + 2;
      }
    }
    unint64_t v23 = v7;
    if (v8 >> 3 == 2) {
      break;
    }
    if (v8 >> 3 != 1 || v8 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v18 = *(void **)(a1 + 48);
    if (!v18)
    {
      uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v19 = (void *)*v19;
      }
      uint64_t v18 = sub_1788710((uint64_t)v19);
      *(void *)(a1 + 48) = v18;
      uint64_t v7 = v23;
    }
    uint64_t v13 = (char *)sub_1550A68(a3, (uint64_t)v18, (unsigned __int8 *)v7);
LABEL_34:
    unint64_t v23 = v13;
    if (!v13) {
      return 0;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      return v23;
    }
  }
  if (v8 == 16)
  {
    unint64_t v14 = v7 + 1;
    unint64_t v15 = *v7;
    if (*v7 < 0)
    {
      int v16 = *v14;
      int v17 = v15 + (v16 << 7);
      unint64_t v15 = (v17 - 128);
      if (v16 < 0)
      {
        unint64_t v23 = (char *)sub_188C138((uint64_t)v7, (v17 - 128));
        if (!v23) {
          return 0;
        }
        unint64_t v15 = v21;
        goto LABEL_24;
      }
      unint64_t v14 = v7 + 2;
    }
    unint64_t v23 = v14;
LABEL_24:
    if (v15 > 3)
    {
      if (*v6) {
        uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v15, v22);
    }
    else
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      *(_DWORD *)(a1 + 56) = v15;
    }
    goto LABEL_35;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (v8 - 1600 > 0xF9F)
    {
      if (*v6)
      {
        uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v23;
      }
      uint64_t v13 = (char *)sub_1885AC0(v8, v20, v7, a3);
    }
    else
    {
      uint64_t v13 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545AB0, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_34;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v23;
  }
  return 0;
}

char *sub_16ECA14(uint64_t a1, char *a2, unint64_t *a3)
{
  char v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_16EBC08(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 56);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    int v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    int v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16ECBD0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      uint64_t v4 = sub_16EBD94(*(void *)(a1 + 48));
      v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0)
    {
      int v5 = *(_DWORD *)(a1 + 56);
      if (v5 < 0) {
        uint64_t v6 = 11;
      }
      else {
        uint64_t v6 = ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v6;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v2 += v10;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_16ECCA8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      int v5 = *(void **)(a1 + 48);
      if (!v5)
      {
        uint64_t v6 = *(void *)(a1 + 8);
        uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (v6) {
          uint64_t v7 = (void *)*v7;
        }
        int v5 = sub_1788710((uint64_t)v7);
        *(void *)(a1 + 48) = v5;
      }
      if (*(void *)(a2 + 48)) {
        unsigned int v8 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unsigned int v8 = &off_2545A18;
      }
      sub_16BF9C4((uint64_t)v5, (uint64_t)v8);
    }
    if ((v4 & 2) != 0) {
      *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
    }
    *(_DWORD *)(a1 + 40) |= v4;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16ECD84(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 48) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16ECDCC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Icon");
}

uint64_t sub_16ECDDC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D3618;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16ECE40(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16ECE70(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16ECEEC(void *a1)
{
  sub_16ECE70(a1);

  operator delete();
}

unsigned char *sub_16ECF24(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16ECF74(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    int v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      unint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2545AF0, v5, a3);
      }
      unint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16ED0C4(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16ED190(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16ED1E8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16ED1F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.IconFilter");
}

uint64_t sub_16ED200(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D3698;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 84) = 0u;
  return a1;
}

void sub_16ED278(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16ED2A8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3698;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F25C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  long long v13 = *(_OWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = v13;
  return a1;
}

void sub_16ED400()
{
}

uint64_t sub_16ED470(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2545B20)
  {
    uint64_t v6 = *(void *)(a1 + 72);
    if (v6)
    {
      sub_13CC81C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_148EF3C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16ED53C(uint64_t a1)
{
  sub_16ED470(a1);

  operator delete();
}

uint64_t sub_16ED574(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_13BB1A4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    uint64_t result = sub_13CC858(*(void *)(a1 + 72));
  }
  if ((v6 & 0x3E) != 0)
  {
    *(void *)(a1 + 80) = 0;
    *(void *)(a1 + 88) = 0;
    *(_DWORD *)(a1 + 96) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

char *sub_16ED61C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v49 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v49 + 1;
    unsigned int v9 = *v49;
    if (*v49 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v49, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = v49 + 2;
      }
    }
    int v49 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_54;
        }
        v5 |= 2u;
        uint64_t v12 = v8 + 1;
        int v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v13 = v13 + (v14 << 7) - 128;
        if ((v14 & 0x80000000) == 0)
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          int v49 = v12;
          *(_DWORD *)(a1 + 80) = v13;
          goto LABEL_64;
        }
        unint64_t v39 = (char *)sub_188C0D0((uint64_t)v8, v13);
        int v49 = v39;
        *(_DWORD *)(a1 + 80) = v40;
        if (v39) {
          goto LABEL_64;
        }
        goto LABEL_88;
      case 2u:
        if (v9 != 16) {
          goto LABEL_54;
        }
        v5 |= 4u;
        unint64_t v15 = v8 + 1;
        int v16 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v17 = *v15;
        int v16 = v16 + (v17 << 7) - 128;
        if (v17 < 0)
        {
          uint64_t v41 = (char *)sub_188C0D0((uint64_t)v8, v16);
          int v49 = v41;
          *(_DWORD *)(a1 + 84) = v42;
          if (!v41) {
            goto LABEL_88;
          }
        }
        else
        {
          unint64_t v15 = v8 + 2;
LABEL_18:
          int v49 = v15;
          *(_DWORD *)(a1 + 84) = v16;
        }
        goto LABEL_64;
      case 3u:
        if (v9 != 24) {
          goto LABEL_54;
        }
        uint64_t v18 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_23;
        }
        int v20 = *v18;
        int v21 = v19 + (v20 << 7);
        unint64_t v19 = (v21 - 128);
        if (v20 < 0)
        {
          int v49 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
          if (!v49) {
            goto LABEL_88;
          }
          unint64_t v19 = v43;
        }
        else
        {
          uint64_t v18 = v8 + 2;
LABEL_23:
          int v49 = v18;
        }
        if (sub_138DE04(v19))
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 88) = v19;
          goto LABEL_64;
        }
        if (*v7) {
          unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v48 = 3;
        goto LABEL_82;
      case 4u:
        if (v9 != 32) {
          goto LABEL_54;
        }
        v5 |= 0x10u;
        uint64_t v22 = v8 + 1;
        int v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_30;
        }
        int v24 = *v22;
        int v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v44 = (char *)sub_188C0D0((uint64_t)v8, v23);
          int v49 = v44;
          *(_DWORD *)(a1 + 92) = v45;
          if (!v44) {
            goto LABEL_88;
          }
        }
        else
        {
          uint64_t v22 = v8 + 2;
LABEL_30:
          int v49 = v22;
          *(_DWORD *)(a1 + 92) = v23;
        }
        goto LABEL_64;
      case 5u:
        if (v9 != 42) {
          goto LABEL_54;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v25 = *(void *)(a1 + 72);
        if (!v25)
        {
          BOOL v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v26 = (void *)*v26;
          }
          uint64_t v25 = sub_13DA5AC((uint64_t)v26);
          *(void *)(a1 + 72) = v25;
          char v8 = v49;
        }
        int v27 = (char *)sub_13EF668(a3, v25, (unsigned __int8 *)v8);
        goto LABEL_63;
      case 6u:
        if (v9 != 48) {
          goto LABEL_54;
        }
        uint64_t v28 = v8 + 1;
        unint64_t v19 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v29 = *v28;
        int v30 = v19 + (v29 << 7);
        unint64_t v19 = (v30 - 128);
        if (v29 < 0)
        {
          int v49 = (char *)sub_188C138((uint64_t)v8, (v30 - 128));
          if (!v49) {
            goto LABEL_88;
          }
          unint64_t v19 = v46;
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_41:
          int v49 = v28;
        }
        if (sub_1369B80(v19))
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 96) = v19;
        }
        else
        {
          if (*v7) {
            unint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v48 = 6;
LABEL_82:
          sub_188C020(v48, v19, v47);
        }
        goto LABEL_64;
      case 7u:
        if (v9 != 58) {
          goto LABEL_54;
        }
        int v31 = v8 - 1;
        while (1)
        {
          unint64_t v32 = (unsigned __int8 *)(v31 + 1);
          int v49 = v31 + 1;
          int v33 = *(_DWORD **)(a1 + 64);
          if (v33 && (uint64_t v34 = *(int *)(a1 + 56), (int)v34 < *v33))
          {
            *(_DWORD *)(a1 + 56) = v34 + 1;
            uint64_t v35 = *(void *)&v33[2 * v34 + 2];
          }
          else
          {
            uint64_t v36 = sub_13D9664(*(void *)(a1 + 48));
            uint64_t v35 = sub_188CDC8(a1 + 48, v36);
            unint64_t v32 = (unsigned __int8 *)v49;
          }
          int v31 = sub_13F0F64(a3, v35, v32);
          int v49 = v31;
          if (!v31) {
            goto LABEL_88;
          }
          if (*(void *)a3 <= (unint64_t)v31 || *v31 != 58) {
            goto LABEL_64;
          }
        }
      default:
LABEL_54:
        if (v9) {
          BOOL v37 = (v9 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = v49;
            }
            int v27 = (char *)sub_1885AC0(v9, v38, v8, a3);
          }
          else
          {
            int v27 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2545B20, (uint64_t *)(a1 + 8), a3);
          }
LABEL_63:
          int v49 = v27;
          if (!v27) {
            goto LABEL_88;
          }
LABEL_64:
          if (sub_11947B8((uint64_t)a3, &v49, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_88:
        }
          int v49 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v49;
    }
  }
}

char *sub_16EDB00(uint64_t a1, char *a2, unint64_t *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unsigned int v7 = *(_DWORD *)(a1 + 80);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unsigned int v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 84);
    *unint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 88);
    *unint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v16 = *(_DWORD *)(a1 + 92);
    *unint64_t v4 = 32;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unsigned int v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v19 = *(void *)(a1 + 72);
    *unint64_t v4 = 42;
    unsigned int v20 = *(_DWORD *)(v19 + 20);
    v4[1] = v20;
    if (v20 > 0x7F) {
      int v21 = sub_188A9CC(v20, v4 + 1);
    }
    else {
      int v21 = v4 + 2;
    }
    unint64_t v4 = sub_13CCBCC(v19, (unint64_t)v21, a3);
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v22 = *(int *)(a1 + 96);
    *unint64_t v4 = 48;
    v4[1] = v22;
    if (v22 > 0x7F)
    {
      v4[1] = v22 | 0x80;
      unint64_t v23 = v22 >> 7;
      v4[2] = v22 >> 7;
      v4 += 3;
      if (v22 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v24 = v23 >> 14;
          v23 >>= 7;
          *v4++ = v23;
        }
        while (v24);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v25 = *(_DWORD *)(a1 + 56);
  if (v25)
  {
    for (int i = 0; i != v25; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v27 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *unint64_t v4 = 58;
      unsigned int v28 = *(_DWORD *)(v27 + 20);
      v4[1] = v28;
      if (v28 > 0x7F) {
        int v29 = sub_188A9CC(v28, v4 + 1);
      }
      else {
        int v29 = v4 + 2;
      }
      unint64_t v4 = sub_13BB3E8(v27, (unint64_t)v29, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    int v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    int v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_16EDF3C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_13BB580(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x3F) != 0)
  {
    if (v10)
    {
      uint64_t v11 = sub_13CCD60(*(void *)(a1 + 72));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 80) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
LABEL_17:
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 84) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0)
    {
LABEL_12:
      if ((v10 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_22;
    }
LABEL_18:
    int v12 = *(_DWORD *)(a1 + 88);
    if (v12 < 0) {
      uint64_t v13 = 11;
    }
    else {
      uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v13;
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_27;
      }
      goto LABEL_23;
    }
LABEL_22:
    v4 += ((9 * (__clz(*(_DWORD *)(a1 + 92) | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x20) == 0) {
      goto LABEL_27;
    }
LABEL_23:
    int v14 = *(_DWORD *)(a1 + 96);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v15;
  }
LABEL_27:
  uint64_t v16 = *(void *)(a1 + 8);
  if (v16)
  {
    unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v18 + 31) < 0) {
      uint64_t v19 = *(void *)(v18 + 16);
    }
    else {
      uint64_t v19 = *(unsigned __int8 *)(v18 + 31);
    }
    v4 += v19;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16EE124(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_148F25C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x3F) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v11 = *(std::string **)(a1 + 72);
      if (!v11)
      {
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (void *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (void *)*v13;
        }
        uint64_t v11 = (std::string *)sub_13DA5AC((uint64_t)v13);
        *(void *)(a1 + 72) = v11;
      }
      if (*(void *)(a2 + 72)) {
        int v14 = *(uint64_t (****)())(a2 + 72);
      }
      else {
        int v14 = &off_2536610;
      }
      sub_12C8C1C(v11, (uint64_t)v14);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_26;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
LABEL_26:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
LABEL_27:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0)
      {
LABEL_12:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_13;
      }
LABEL_11:
      *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
      goto LABEL_12;
    }
LABEL_28:
    *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
    if ((v9 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
LABEL_13:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16EE2B8(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_13BB714(*(void *)(*(void *)(a1 + 64) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_16EE320@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ETA");
}

double sub_16EE330(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3 = a2 | 2;
  if (!a3) {
    uint64_t v3 = a2;
  }
  *(void *)a1 = off_24D3718;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = a2;
  double result = 0.0;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 67) = 0u;
  return result;
}

uint64_t sub_16EE374(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D3718;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188C80C((unsigned int *)(a1 + 24), v5);
    int v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v8 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v8 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v8 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  __int16 v9 = *(_WORD *)(a2 + 80);
  *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
  *(_WORD *)(a1 + 80) = v9;
  return a1;
}

void sub_16EE55C()
{
}

uint64_t sub_16EE610(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16EE69C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_16EE69C(uint64_t (***result)()))()
{
  if (result != &off_2545B88)
  {
    int v1 = result;
    uint64_t v2 = result[5];
    if (v2)
    {
      sub_13C6E78(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[6];
    if (v3)
    {
      sub_13CA15C(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[7];
    if (v4)
    {
      sub_13CB398(v4);
      operator delete();
    }
    int v5 = v1[8];
    if (v5)
    {
      sub_13C9238(v5);
      operator delete();
    }
    double result = (uint64_t (***)())v1[9];
    if (result)
    {
      sub_145A81C();
      operator delete();
    }
  }
  return result;
}

void sub_16EE788(uint64_t a1)
{
  sub_16EE610(a1);

  operator delete();
}

uint64_t sub_16EE7C0(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v2)
  {
    double result = sub_13AE7D8(*(void *)(result + 40));
    if ((v2 & 2) == 0)
    {
LABEL_4:
      if ((v2 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      double result = sub_13AE8DC(*(void *)(v1 + 56));
      if ((v2 & 8) == 0)
      {
LABEL_6:
        if ((v2 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((v2 & 2) == 0)
  {
    goto LABEL_4;
  }
  double result = sub_13AE860(*(void *)(v1 + 48));
  if ((v2 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v2 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_15:
  double result = sub_13AE954(*(void *)(v1 + 64));
  if ((v2 & 0x10) != 0) {
LABEL_7:
  }
    double result = sub_13E0F24(*(void *)(v1 + 72));
LABEL_8:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(unsigned char *)(v3 + 74) = 0;
  *(_WORD *)(v3 + 72) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16EE874(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v51 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v51, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = v51 + 1;
    unsigned int v9 = *v51;
    if (*v51 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        int v8 = (char *)sub_188C180((uint64_t)v51, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        int v8 = v51 + 2;
      }
    }
    uint64_t v51 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 == 8)
        {
          uint64_t v13 = v8 - 1;
          while (1)
          {
            uint64_t v51 = v13 + 1;
            unint64_t v14 = v13[1];
            uint64_t v15 = v13 + 2;
            if (v13[1] < 0)
            {
              int v16 = *v15;
              int v17 = v14 + (v16 << 7);
              unint64_t v14 = (v17 - 128);
              if (v16 < 0)
              {
                uint64_t v51 = (char *)sub_188C138((uint64_t)(v13 + 1), (v17 - 128));
                if (!v51) {
                  goto LABEL_95;
                }
                unint64_t v14 = v20;
                goto LABEL_15;
              }
              uint64_t v15 = v13 + 3;
            }
            uint64_t v51 = v15;
LABEL_15:
            if (sub_138DE04(v14))
            {
              uint64_t v18 = *(unsigned int *)(a1 + 24);
              if (v18 == *(_DWORD *)(a1 + 28))
              {
                int v19 = v18 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v18 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v18) = v14;
                int v19 = v18 + 1;
              }
              *(_DWORD *)(a1 + 24) = v19;
            }
            else
            {
              if (*v7) {
                int v21 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                int v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(1, v14, v21);
            }
            uint64_t v13 = v51;
            if (*(void *)a3 <= (unint64_t)v51 || *v51 != 8) {
              goto LABEL_90;
            }
          }
        }
        if (v9 != 10) {
          goto LABEL_82;
        }
        *(void *)&long long v52 = a1 + 24;
        *((void *)&v52 + 1) = sub_138DE04;
        uint64_t v53 = a1 + 8;
        int v54 = 1;
        uint64_t v27 = sub_1112E88((uint64_t)a3, v8, &v52);
        goto LABEL_89;
      case 2u:
        if (v9 != 16) {
          goto LABEL_82;
        }
        v5 |= 0x20u;
        unint64_t v22 = v8 + 1;
        uint64_t v23 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_33;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          unint64_t v43 = (char *)sub_188C138((uint64_t)v8, v23);
          uint64_t v51 = v43;
          *(unsigned char *)(a1 + 80) = v44 != 0;
          if (!v43) {
            goto LABEL_95;
          }
        }
        else
        {
          unint64_t v22 = v8 + 2;
LABEL_33:
          uint64_t v51 = v22;
          *(unsigned char *)(a1 + 80) = v23 != 0;
        }
        goto LABEL_90;
      case 3u:
        if (v9 != 26) {
          goto LABEL_82;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v25 = *(void *)(a1 + 40);
        if (!v25)
        {
          BOOL v26 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v26 = (void *)*v26;
          }
          uint64_t v25 = sub_13DA01C((uint64_t)v26);
          *(void *)(a1 + 40) = v25;
          int v8 = v51;
        }
        uint64_t v27 = sub_13AFAA0(a3, v25, (unsigned __int8 *)v8);
        goto LABEL_89;
      case 4u:
        if (v9 != 34) {
          goto LABEL_82;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v28 = *(void *)(a1 + 48);
        if (!v28)
        {
          int v29 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v29 = (void *)*v29;
          }
          uint64_t v28 = sub_13DA3AC((uint64_t)v29);
          *(void *)(a1 + 48) = v28;
          int v8 = v51;
        }
        uint64_t v27 = sub_13AFB30(a3, v28, (unsigned __int8 *)v8);
        goto LABEL_89;
      case 5u:
        if (v9 != 42) {
          goto LABEL_82;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v30 = *(void **)(a1 + 56);
        if (!v30)
        {
          int v31 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v31 = (void *)*v31;
          }
          uint64_t v30 = sub_13DA484((uint64_t)v31);
          *(void *)(a1 + 56) = v30;
          int v8 = v51;
        }
        uint64_t v27 = sub_13AFBC0(a3, (uint64_t)v30, (unsigned __int8 *)v8);
        goto LABEL_89;
      case 6u:
        if (v9 != 48) {
          goto LABEL_82;
        }
        v5 |= 0x40u;
        unint64_t v32 = v8 + 1;
        uint64_t v33 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v34 = *v32;
        uint64_t v33 = v33 + (v34 << 7) - 128;
        if (v34 < 0)
        {
          int v45 = (char *)sub_188C138((uint64_t)v8, v33);
          uint64_t v51 = v45;
          *(unsigned char *)(a1 + 81) = v46 != 0;
          if (!v45) {
            goto LABEL_95;
          }
        }
        else
        {
          unint64_t v32 = v8 + 2;
LABEL_56:
          uint64_t v51 = v32;
          *(unsigned char *)(a1 + 81) = v33 != 0;
        }
        goto LABEL_90;
      case 7u:
        if (v9 != 58) {
          goto LABEL_82;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v35 = *(void **)(a1 + 64);
        if (!v35)
        {
          uint64_t v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v36 = (void *)*v36;
          }
          uint64_t v35 = sub_13DA2B8((uint64_t)v36);
          *(void *)(a1 + 64) = v35;
          int v8 = v51;
        }
        uint64_t v27 = sub_13AFCE0(a3, (uint64_t)v35, (unsigned __int8 *)v8);
        goto LABEL_89;
      case 8u:
        if (v9 != 66) {
          goto LABEL_82;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v37 = *(void *)(a1 + 72);
        if (!v37)
        {
          uint64_t v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v38 = (void *)*v38;
          }
          sub_1478B2C((uint64_t)v38);
          uint64_t v37 = v39;
          *(void *)(a1 + 72) = v39;
          int v8 = v51;
        }
        uint64_t v27 = (char *)sub_1281B58(a3, v37, (unsigned __int8 *)v8);
        goto LABEL_89;
      case 9u:
        if (v9 != 72) {
          goto LABEL_82;
        }
        v5 |= 0x80u;
        int v40 = v8 + 1;
        uint64_t v41 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_73;
        }
        int v42 = *v40;
        uint64_t v41 = v41 + (v42 << 7) - 128;
        if (v42 < 0)
        {
          unint64_t v47 = (char *)sub_188C138((uint64_t)v8, v41);
          uint64_t v51 = v47;
          *(unsigned char *)(a1 + 82) = v48 != 0;
          if (!v47) {
            goto LABEL_95;
          }
        }
        else
        {
          int v40 = v8 + 2;
LABEL_73:
          uint64_t v51 = v40;
          *(unsigned char *)(a1 + 82) = v41 != 0;
        }
        goto LABEL_90;
      default:
LABEL_82:
        if (v9) {
          BOOL v49 = (v9 & 7) == 4;
        }
        else {
          BOOL v49 = 1;
        }
        if (!v49)
        {
          if (*v7)
          {
            int v50 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v50 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            int v8 = v51;
          }
          uint64_t v27 = (char *)sub_1885AC0(v9, v50, v8, a3);
LABEL_89:
          uint64_t v51 = v27;
          if (!v27) {
            goto LABEL_95;
          }
LABEL_90:
          if (sub_11947B8((uint64_t)a3, &v51, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_95:
        }
          uint64_t v51 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v51;
    }
  }
}

char *sub_16EEE18(uint64_t a1, char *__dst, unint64_t *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 24);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 16);
  if ((v11 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v12 = *(unsigned char *)(a1 + 80);
    *__dst = 16;
    __dst[1] = v12;
    __dst += 2;
    if ((v11 & 1) == 0)
    {
LABEL_12:
      if ((v11 & 2) == 0) {
        goto LABEL_13;
      }
      goto LABEL_28;
    }
  }
  else if ((v11 & 1) == 0)
  {
    goto LABEL_12;
  }
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v13 = *(void *)(a1 + 40);
  *__dst = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 20);
  __dst[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, __dst + 1);
  }
  else {
    uint64_t v15 = __dst + 2;
  }
  __dst = sub_13C736C(v13, (unint64_t)v15, a3);
  if ((v11 & 2) == 0)
  {
LABEL_13:
    if ((v11 & 4) == 0) {
      goto LABEL_14;
    }
    goto LABEL_34;
  }
LABEL_28:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v16 = *(void *)(a1 + 48);
  *__dst = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 44);
  __dst[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, __dst + 1);
  }
  else {
    uint64_t v18 = __dst + 2;
  }
  __dst = sub_13CA708(v16, v18, a3);
  if ((v11 & 4) == 0)
  {
LABEL_14:
    if ((v11 & 0x40) == 0) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_34:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  *__dst = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  __dst[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, __dst + 1);
  }
  else {
    int v21 = __dst + 2;
  }
  __dst = sub_13CB748(v19, (unint64_t)v21, a3);
  if ((v11 & 0x40) == 0)
  {
LABEL_15:
    if ((v11 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_43;
  }
LABEL_40:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  char v22 = *(unsigned char *)(a1 + 81);
  *__dst = 48;
  __dst[1] = v22;
  __dst += 2;
  if ((v11 & 8) == 0)
  {
LABEL_16:
    if ((v11 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_43:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v23 = *(void *)(a1 + 64);
  *__dst = 58;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  __dst[1] = v24;
  if (v24 > 0x7F) {
    uint64_t v25 = sub_188A9CC(v24, __dst + 1);
  }
  else {
    uint64_t v25 = __dst + 2;
  }
  __dst = sub_13C9554(v23, (unint64_t)v25, a3);
  if ((v11 & 0x10) == 0)
  {
LABEL_17:
    if ((v11 & 0x80) == 0) {
      goto LABEL_58;
    }
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)__dst) {
    __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
  }
  uint64_t v26 = *(void *)(a1 + 72);
  *__dst = 66;
  unsigned int v27 = *(_DWORD *)(v26 + 24);
  __dst[1] = v27;
  if (v27 > 0x7F) {
    uint64_t v28 = sub_188A9CC(v27, __dst + 1);
  }
  else {
    uint64_t v28 = __dst + 2;
  }
  __dst = sub_145CBCC(v26, v28, a3);
  if ((v11 & 0x80) != 0)
  {
LABEL_55:
    if (*a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    char v29 = *(unsigned char *)(a1 + 82);
    *__dst = 72;
    __dst[1] = v29;
    __dst += 2;
  }
LABEL_58:
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return __dst;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    uint64_t v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    uint64_t v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(__dst, v33, (int)v34);
    __dst += v35;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, __dst);
}

uint64_t sub_16EF228(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  if (v2)
  {
    int v3 = 0;
    uint64_t v4 = 0;
    do
    {
      int v5 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v3);
      if (v5 < 0) {
        uint64_t v6 = 10;
      }
      else {
        uint64_t v6 = (9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6;
      }
      v4 += v6;
      ++v3;
    }
    while (v2 != v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v7 = v4 + v2;
  char v8 = *(unsigned char *)(a1 + 16);
  if (!v8) {
    goto LABEL_23;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v13 = sub_13C75E4(*(void *)(a1 + 40));
    v7 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 2) == 0)
    {
LABEL_12:
      if ((v8 & 4) == 0) {
        goto LABEL_13;
      }
      goto LABEL_27;
    }
  }
  else if ((*(unsigned char *)(a1 + 16) & 2) == 0)
  {
    goto LABEL_12;
  }
  uint64_t v14 = sub_13CAA14(*(void *)(a1 + 48));
  v7 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 4) == 0)
  {
LABEL_13:
    if ((v8 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    uint64_t v16 = sub_13C96D4(*(void *)(a1 + 64));
    v7 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v8 & 0x10) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_27:
  uint64_t v15 = sub_13CB944(*(void *)(a1 + 56));
  v7 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v8 & 8) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v8 & 0x10) != 0)
  {
LABEL_15:
    uint64_t v9 = sub_145DF38(*(void *)(a1 + 72));
    v7 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v10 = v7 + 2;
  if ((v8 & 0x20) == 0) {
    uint64_t v10 = v7;
  }
  if ((v8 & 0x40) != 0) {
    v10 += 2;
  }
  if (v8 < 0) {
    uint64_t v7 = v10 + 2;
  }
  else {
    uint64_t v7 = v10;
  }
LABEL_23:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v17 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v7 += v18;
  }
  *(_DWORD *)(a1 + 20) = v7;
  return v7;
}

void sub_16EF40C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    int v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188C80C((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 4 * v6), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v8)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(std::string **)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        char v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          char v12 = (void *)*v12;
        }
        uint64_t v10 = (std::string *)sub_13DA01C((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v13 = &off_2536408;
      }
      sub_13B122C(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_34;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v14 = *(void *)(a1 + 48);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_13DA3AC((uint64_t)v16);
      *(void *)(a1 + 48) = v14;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v17 = &off_2536528;
    }
    sub_13B1374(v14, (uint64_t)v17);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_42;
    }
LABEL_34:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(std::string **)(a1 + 56);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = (std::string *)sub_13DA484((uint64_t)v20);
      *(void *)(a1 + 56) = v18;
    }
    if (*(void *)(a2 + 56)) {
      int v21 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v21 = &off_25365A0;
    }
    sub_13B14BC(v18, (uint64_t)v21);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_50;
    }
LABEL_42:
    *(_DWORD *)(a1 + 16) |= 8u;
    char v22 = *(std::string **)(a1 + 64);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      unsigned int v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        unsigned int v24 = (void *)*v24;
      }
      char v22 = (std::string *)sub_13DA2B8((uint64_t)v24);
      *(void *)(a1 + 64) = v22;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v25 = &off_25364E0;
    }
    sub_13B1644(v22, (uint64_t)v25);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_58;
    }
LABEL_50:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v26 = *(void *)(a1 + 72);
    if (!v26)
    {
      uint64_t v27 = *(void *)(a1 + 8);
      uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        uint64_t v28 = (void *)*v28;
      }
      sub_1478B2C((uint64_t)v28);
      *(void *)(a1 + 72) = v26;
    }
    if (*(void *)(a2 + 72)) {
      char v29 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      char v29 = &off_2539290;
    }
    sub_13E582C(v26, (uint64_t)v29);
    if ((v8 & 0x20) == 0)
    {
LABEL_10:
      if ((v8 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_59;
    }
LABEL_58:
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    if ((v8 & 0x40) == 0)
    {
LABEL_11:
      if ((v8 & 0x80) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_14;
      }
LABEL_12:
      *(unsigned char *)(a1 + 82) = *(unsigned char *)(a2 + 82);
      goto LABEL_13;
    }
LABEL_59:
    *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
    if ((v8 & 0x80) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16EF688(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_13B1778(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 0x10) == 0) {
    return 1;
  }
  uint64_t result = sub_13E62E4(*(void *)(a1 + 72));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16EF6D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ETAFilter");
}

void *sub_16EF6E4(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EF758(void *a1)
{
  sub_16EF6E4(a1);

  operator delete();
}

uint64_t *sub_16EF790(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16EF7A0(uint64_t a1, char *a2, int32x2_t *a3)
{
  char v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    int v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        int v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        int v5 = v12 + 2;
      }
    }
    char v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      int v5 = v12;
    }
    char v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16EF8A0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16EF938(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16EF96C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16EF988()
{
  return 1;
}

void *sub_16EF990@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FlyoverFilter");
}

void *sub_16EF9A0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D3818;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  return a1;
}

void sub_16EFA10(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16EFA40(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3818;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
  }
  return a1;
}

void sub_16EFB40(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16EFB7C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16EFC3C(uint64_t a1)
{
  sub_16EFB7C(a1);

  operator delete();
}

unsigned char *sub_16EFC74(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v4 + 23) < 0)
      {
        **(unsigned char **)unint64_t v4 = 0;
        *(void *)(v4 + 8) = 0;
        if ((v3 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
    if ((v3 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
LABEL_11:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_16EFD30(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v20 + 2);
      }
    }
    *(void *)unsigned int v20 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (uint64_t *)*v15;
        }
        uint64_t v16 = (void *)(a1 + 56);
        goto LABEL_26;
      }
    }
    else if (v8 >> 3 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v15 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v15 = (uint64_t *)*v15;
      }
      uint64_t v16 = (void *)(a1 + 48);
LABEL_26:
      uint64_t v18 = (std::string *)sub_1880F84(v16, v15);
      uint64_t v13 = (void *)sub_188C244(v18, *(char **)v20, (uint64_t)a3);
      goto LABEL_27;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (v8 - 1600 > 0xF9F)
    {
      if (*v6)
      {
        uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v7 = *(char **)v20;
      }
      uint64_t v13 = sub_1885AC0(v8, v19, v7, a3);
    }
    else
    {
      uint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545BF8, (uint64_t *)(a1 + 8), a3);
    }
LABEL_27:
    *(void *)unsigned int v20 = v13;
    if (!v13) {
      goto LABEL_36;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_36:
  *(void *)unsigned int v20 = 0;
  return *(void *)v20;
}

char *sub_16EFF14(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_16F0024(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if (v3)
    {
      unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v3 & 2) != 0)
    {
      unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
      uint64_t v9 = *(void *)(v7 + 8);
      if ((v8 & 0x80u) == 0) {
        uint64_t v9 = v8;
      }
      result += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v11 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    result += v12;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

uint64_t sub_16F0110(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F0118@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RawAttribute");
}

uint64_t sub_16F0128(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D3898;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16F0198(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F01C8(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DE8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F024C(void *a1)
{
  sub_16F01C8(a1);

  operator delete();
}

uint64_t sub_16F0284(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 40);
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return sub_188B4AC(v3);
  }
  return result;
}

uint64_t sub_16F02DC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)char v22 = a2;
  if ((sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 40);
    while (1)
    {
      unint64_t v7 = (char *)(*(void *)v22 + 1);
      unsigned int v8 = **(unsigned char **)v22;
      if ((char)**(unsigned char **)v22 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = (char *)(*(void *)v22 + 2);
        }
      }
      *(void *)char v22 = v7;
      if (v8 == 10)
      {
        uint64_t v13 = v7 - 1;
        while (1)
        {
          uint64_t v14 = (char *)(v13 + 1);
          *(void *)char v22 = v13 + 1;
          uint64_t v15 = *(_DWORD **)(a1 + 56);
          if (v15 && (uint64_t v16 = *(int *)(a1 + 48), (int)v16 < *v15))
          {
            *(_DWORD *)(a1 + 48) = v16 + 1;
            uint64_t v17 = *(std::string **)&v15[2 * v16 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v19 = v18;
            v19[1] = sub_3A6EDC;
            void *v18 = 0;
            v18[1] = 0;
            v18[2] = 0;
            uint64_t v17 = (std::string *)sub_188CDC8(a1 + 40, (uint64_t)v18);
            uint64_t v14 = *(char **)v22;
          }
          uint64_t v13 = sub_188C244(v17, v14, (uint64_t)a3);
          *(void *)char v22 = v13;
          if (!v13) {
            goto LABEL_34;
          }
          if (*(void *)a3 <= (unint64_t)v13 || *v13 != 10) {
            goto LABEL_29;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unsigned int v20 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unsigned int v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          unint64_t v7 = *(char **)v22;
        }
        uint64_t v12 = sub_1885AC0(v8, v20, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545C38, (uint64_t *)(a1 + 8), a3);
      }
      *(void *)char v22 = v12;
      if (!v12) {
        goto LABEL_34;
      }
LABEL_29:
      if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
        return *(void *)v22;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return *(void *)v22;
    }
LABEL_34:
    *(void *)char v22 = 0;
  }
  return *(void *)v22;
}

char *sub_16F0514(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 56) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_12;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*(void *)a3 - (void)a2 + 14 >= v10)
      {
        *a2 = 10;
        a2[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unint64_t v11 = a2 + 2;
        memcpy(v11, v9, v10);
        a2 = &v11[v10];
        goto LABEL_10;
      }
LABEL_12:
      a2 = (char *)sub_188A868(a3, 1, (uint64_t)v9, a2);
LABEL_10:
      v7 += 8;
    }
    while (v8 != v7);
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return a2;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(a2, v15, (int)v16);
    a2 += v17;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, a2);
}

uint64_t sub_16F06A0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  uint64_t result = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      result += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    result += v11;
  }
  *(_DWORD *)(a1 + 64) = result;
  return result;
}

uint64_t sub_16F0750(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F0758@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.RawAttributeFilter");
}

uint64_t sub_16F0768(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 56);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    uint64_t v3 = (uint64_t *)(*(void *)(result + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 56) = 0;
  }
  return result;
}

uint64_t sub_16F07B8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D3918;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(void *)(a1 + 88) = &qword_2550250;
  *(_DWORD *)(a1 + 96) = 0;
  *(unsigned char *)(a1 + 100) = 0;
  return a1;
}

void sub_16F083C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F086C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3918;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    unint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v13 & 2) != 0)
  {
    uint64_t v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v13 & 4) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v16);
  }
  int v17 = *(_DWORD *)(a2 + 96);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = v17;
  return a1;
}

void sub_16F0A24(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F0A78(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_12C1DB8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F0B58(uint64_t a1)
{
  sub_16F0A78(a1);

  operator delete();
}

uint64_t sub_16F0B90(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 7) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_14:
      unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) == 0) {
          goto LABEL_21;
        }
      }
      goto LABEL_18;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_14;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_14;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_21;
    }
LABEL_18:
    unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
LABEL_21:
  if ((v6 & 0x18) != 0)
  {
    *(unsigned char *)(a1 + 100) = 0;
    *(_DWORD *)(a1 + 96) = 0;
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_16F0CCC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v38 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (char *)(*(void *)v38 + 1);
    unsigned int v9 = **(unsigned char **)v38;
    if ((char)**(unsigned char **)v38 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180(*(uint64_t *)v38, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (char *)(*(void *)v38 + 2);
      }
    }
    *(void *)uint64_t v38 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_47;
        }
        uint64_t v12 = v8 + 1;
        unint64_t v13 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          *(void *)uint64_t v38 = sub_188C138((uint64_t)v8, (v15 - 128));
          if (!*(void *)v38) {
            goto LABEL_67;
          }
          unint64_t v13 = v34;
        }
        else
        {
          uint64_t v12 = v8 + 2;
LABEL_13:
          *(void *)uint64_t v38 = v12;
        }
        if (v13 > 0x3E)
        {
          if (*v7) {
            uint64_t v37 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v37 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v13, v37);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 8u;
          *(_DWORD *)(a1 + 96) = v13;
        }
        goto LABEL_45;
      case 2u:
        if (v9 != 16) {
          goto LABEL_47;
        }
        v5 |= 0x10u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_20;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v35 = sub_188C138((uint64_t)v8, v17);
          *(void *)uint64_t v38 = v35;
          *(unsigned char *)(a1 + 100) = v36 != 0;
          if (!v35) {
            goto LABEL_67;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_20:
          *(void *)uint64_t v38 = v16;
          *(unsigned char *)(a1 + 100) = v17 != 0;
        }
        goto LABEL_45;
      case 3u:
        if (v9 != 26) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v19 = *(void *)(a1 + 8);
        unsigned int v20 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          unsigned int v20 = (uint64_t *)*v20;
        }
        int v21 = (void *)(a1 + 72);
        goto LABEL_43;
      case 4u:
        if (v9 != 34) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v22 = *(void *)(a1 + 8);
        unsigned int v20 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
        if (v22) {
          unsigned int v20 = (uint64_t *)*v20;
        }
        int v21 = (void *)(a1 + 80);
        goto LABEL_43;
      case 5u:
        if (v9 != 42) {
          goto LABEL_47;
        }
        uint64_t v23 = v8 - 1;
        while (1)
        {
          unsigned int v24 = (unsigned __int8 *)(v23 + 1);
          *(void *)uint64_t v38 = v23 + 1;
          uint64_t v25 = *(_DWORD **)(a1 + 64);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 56), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 56) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v27 = sub_188CDC8(a1 + 48, (uint64_t)v28);
            unsigned int v24 = *(unsigned __int8 **)v38;
          }
          uint64_t v23 = (char *)sub_125CF74(a3, v27, v24);
          *(void *)uint64_t v38 = v23;
          if (!v23) {
            goto LABEL_67;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 42) {
            goto LABEL_45;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v29 = *(void *)(a1 + 8);
        unsigned int v20 = (uint64_t *)(v29 & 0xFFFFFFFFFFFFFFFCLL);
        if (v29) {
          unsigned int v20 = (uint64_t *)*v20;
        }
        int v21 = (void *)(a1 + 88);
LABEL_43:
        uint64_t v30 = (std::string *)sub_1880F84(v21, v20);
        int v31 = (void *)sub_188C244(v30, *(char **)v38, (uint64_t)a3);
        goto LABEL_44;
      default:
LABEL_47:
        if (v9) {
          BOOL v32 = (v9 & 7) == 4;
        }
        else {
          BOOL v32 = 1;
        }
        if (!v32)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v33 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v33 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = *(char **)v38;
            }
            int v31 = sub_1885AC0(v9, v33, v8, a3);
          }
          else
          {
            int v31 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2545C80, (uint64_t *)(a1 + 8), a3);
          }
LABEL_44:
          *(void *)uint64_t v38 = v31;
          if (!v31) {
            goto LABEL_67;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v38, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_67:
        }
          *(void *)uint64_t v38 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v38;
    }
  }
}

char *sub_16F10D8(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v7 = *(int *)(a1 + 96);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v17 = *(unsigned char *)(a1 + 100);
    *uint64_t v4 = 16;
    v4[1] = v17;
    v4 += 2;
    if ((v6 & 1) == 0)
    {
LABEL_10:
      if ((v6 & 2) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) != 0) {
LABEL_11:
  }
    uint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_12:
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 42;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v12, v14, a3);
    }
  }
  if ((v6 & 4) != 0) {
    uint64_t v4 = sub_117A0AC(a3, 6, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_16F1364(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x1F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_19;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v14 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_26;
      }
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v17 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0) {
      goto LABEL_26;
    }
LABEL_22:
    int v20 = *(_DWORD *)(a1 + 96);
    if (v20 < 0) {
      uint64_t v21 = 11;
    }
    else {
      uint64_t v21 = ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v21;
LABEL_26:
    if ((v10 & 0x10) != 0) {
      v4 += 2;
    }
  }
  uint64_t v22 = *(void *)(a1 + 8);
  if (v22)
  {
    unint64_t v24 = v22 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    v4 += v25;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16F1540(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_22;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v17 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 88), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
      goto LABEL_11;
    }
LABEL_25:
    *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16F16FC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F1704@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Amenities.AmenityValue");
}

uint64_t sub_16F1714(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D3998;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_16F1788(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F17BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3998;
  *(_DWORD *)(a1 + 24) = 0;
  int v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    int v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1491D9C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 80);
    unint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1491D9C((uint64_t *)(a1 + 64), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    uint64_t v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(_DWORD *)(a1 + 88) = 0;
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16F1924(_Unwind_Exception *a1)
{
  sub_14901FC(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F1988(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_14901FC(a1 + 8);
  sub_14901FC(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F1A1C(void *a1)
{
  sub_16F1988(a1);

  operator delete();
}

uint64_t sub_16F1A54(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16F0B90(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16F0B90(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  int v9 = (uint64_t *)(a1 + 8);
  if (v10)
  {
    return sub_188B4AC(v9);
  }
  return result;
}

char *sub_16F1B00(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  if ((sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      int v7 = v27 + 1;
      unsigned int v8 = *v27;
      if (*v27 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          int v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = v27 + 2;
        }
      }
      uint64_t v27 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          unint64_t v14 = v7 - 1;
          while (1)
          {
            int v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v27 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 80);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 72), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 72) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_1788ABC(*(void *)(a1 + 64));
              uint64_t v18 = sub_188CDC8(a1 + 64, v19);
              int v15 = (unsigned __int8 *)v27;
            }
            unint64_t v14 = (char *)sub_1415938(a3, v18, v15);
            uint64_t v27 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_42;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        int v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v27 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 56);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 48), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 48) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_1788ABC(*(void *)(a1 + 40));
            uint64_t v24 = sub_188CDC8(a1 + 40, v25);
            uint64_t v21 = (unsigned __int8 *)v27;
          }
          int v20 = (char *)sub_1415938(a3, v24, v21);
          uint64_t v27 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_42;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (v8 - 1600 > 0xF9F)
      {
        if (*v6)
        {
          uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          int v7 = v27;
        }
        uint64_t v13 = sub_1885AC0(v8, v26, v7, a3);
      }
      else
      {
        uint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545CE8, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v27 = (char *)v13;
      if (!v13) {
        return 0;
      }
LABEL_42:
      if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
        return v27;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v27;
    }
    return 0;
  }
  return v27;
}

char *sub_16F1D84(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16F10D8(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      a2[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        int v15 = a2 + 2;
      }
      a2 = sub_16F10D8(v13, v15, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 200, 700, a2, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return a2;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)a2 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(a2, v19, (int)v20);
    a2 += v21;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, a2);
}

uint64_t sub_16F1F70(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16F1364(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_16F1364(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v11 += v20;
  }
  *(_DWORD *)(a1 + 88) = v11;
  return v11;
}

void sub_16F2074(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1491D9C((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1491D9C((uint64_t *)(a1 + 64), v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16F21B4(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_18856CC(*(void *)(*(void *)(a1 + 56) + 8 * v2) + 16);
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 72);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_18856CC(*(void *)(*(void *)(a1 + 80) + 8 * v7) + 16);
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_16F2248@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Amenities");
}

uint64_t sub_16F2258(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D3A18;
  sub_1882BC4(a1 + 16, a2);
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_16F22C0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F22F0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F236C(void *a1)
{
  sub_16F22F0(a1);

  operator delete();
}

unsigned char *sub_16F23A4(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16F23FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_29;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_17:
      uint64_t v20 = v13;
      *(unsigned char *)(a1 + 48) = v14 != 0;
      int v5 = 1;
      goto LABEL_22;
    }
    uint64_t v17 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v20 = v17;
    *(unsigned char *)(a1 + 48) = v18 != 0;
    int v5 = 1;
    if (!v17) {
      goto LABEL_30;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v20;
      }
      int v12 = sub_1885AC0(v8, v16, v7, a3);
    }
    else
    {
      int v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545D48, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v20 = (char *)v12;
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v20 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v5;
  return v20;
}

char *sub_16F25D0(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v6 = *(unsigned char *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_16F26D8(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40)) {
    result += 2;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

uint64_t sub_16F2740(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F2748@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AmenitiesFilter");
}

uint64_t sub_16F2758(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D3A98;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_16F27BC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F27EC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F2868(void *a1)
{
  sub_16F27EC(a1);

  operator delete();
}

unsigned char *sub_16F28A0(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_16F28F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    char v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        uint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        uint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2545D80, v5, a3);
      }
      int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_16F2A40(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_16F2B0C(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_16F2B64(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F2B6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.VendorAmenitiesFilter");
}

void *sub_16F2B7C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F2BF0(void *a1)
{
  sub_16F2B7C(a1);

  operator delete();
}

uint64_t *sub_16F2C28(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16F2C38(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16F2D38(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16F2DD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16F2E04(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16F2E20()
{
  return 1;
}

void *sub_16F2E28@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.StyleAttributesFilter");
}

uint64_t sub_16F2E38(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  if ((uint64_t (***)())a1 != &off_2545DC8 && *(void *)(a1 + 24))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(void *)(a1 + 8)) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F2EF0(uint64_t a1)
{
  sub_16F2E38(a1);

  operator delete();
}

unsigned char *sub_16F2F28(unsigned char *result)
{
  uint64_t v1 = result;
  if (result[16]) {
    uint64_t result = sub_15B09D0(*((void *)result + 3));
  }
  char v3 = v1[8];
  uint64_t v2 = v1 + 8;
  *((void *)v2 + 3) = 0;
  *((_DWORD *)v2 + 2) = 0;
  if (v3)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_16F2F88(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v23 + 1;
    unsigned int v9 = *v23;
    if (*v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v23 + 2;
      }
    }
    uint64_t v23 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    v5 |= 2u;
    uint64_t v16 = v8 + 1;
    uint64_t v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_24;
    }
    int v18 = *v16;
    uint64_t v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_24:
      uint64_t v23 = v16;
      *(void *)(a1 + 32) = v17;
      goto LABEL_31;
    }
    uint64_t v21 = (char *)sub_188C138((uint64_t)v8, v17);
    uint64_t v23 = v21;
    *(void *)(a1 + 32) = v22;
    if (!v21) {
      goto LABEL_38;
    }
LABEL_31:
    if (sub_11947B8((uint64_t)a3, &v23, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v19 = *(void *)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v7) {
        uint64_t v20 = (void *)*v20;
      }
      uint64_t v19 = sub_15C1918((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v8 = v23;
    }
    int v15 = sub_1198F14(a3, v19, (unsigned __int8 *)v8);
LABEL_30:
    uint64_t v23 = v15;
    if (!v15) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v23;
    }
    int v15 = (char *)sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_38:
  uint64_t v23 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v23;
}

char *sub_16F316C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  unint64_t v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 24);
    *unint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_15B0C0C(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(void *)(a1 + 32);
    *unint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_16F3304(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 3) == 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if (v2)
  {
    uint64_t v4 = sub_15B0D90(*(void *)(a1 + 24));
    uint64_t result = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t result = 0;
  if ((v2 & 2) != 0) {
LABEL_7:
  }
    result += ((9 * (__clz(*(void *)(a1 + 32) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v6 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    result += v7;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

uint64_t sub_16F33C4(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_16F33F0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitAssociatedInfo.TransitAssociatedEntity");
}

uint64_t sub_16F3400(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D3C18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unsigned int v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1871B68(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_16F34F4(_Unwind_Exception *a1)
{
  sub_186FDBC(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F3538(void *a1)
{
  char v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186FDBC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F35B8(void *a1)
{
  sub_16F3538(a1);

  operator delete();
}

unsigned char *sub_16F35F0(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    char v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16F2F28(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = v1 + 8;
  *((void *)v5 + 5) = 0;
  *((_DWORD *)v5 + 2) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_16F3674(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unsigned int v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unsigned int v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    unint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_25;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      unint64_t v15 = v8 + 2;
LABEL_25:
      uint64_t v26 = v15;
      *(void *)(a1 + 48) = v16;
      int v5 = 1;
      goto LABEL_36;
    }
    uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v26 = v24;
    *(void *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v26 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1788CA4(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
        uint64_t v19 = (unsigned __int8 *)v26;
      }
      uint64_t v18 = sub_16F389C(a3, v22, v19);
      uint64_t v26 = v18;
      if (!v18) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_41;
    }
    goto LABEL_36;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_41:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

char *sub_16F389C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F2F88(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16F392C(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_16F316C(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= (unint64_t)__dst) {
      __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
    }
    unint64_t v11 = *(void *)(a1 + 48);
    *__dst = 16;
    __dst[1] = v11;
    if (v11 > 0x7F)
    {
      __dst[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      __dst[2] = v11 >> 7;
      __dst += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(__dst - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *__dst++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      __dst += 2;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return __dst;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    int v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    int v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(__dst, v17, (int)v18);
    __dst += v19;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, __dst);
}

uint64_t sub_16F3AF0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16F3304(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_16F3BC8(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1871B68((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    uint64_t v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = *(void *)(a2 + 48);
    *(_DWORD *)(a1 + 16) |= 1u;
    *(void *)(a1 + 48) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16F3CB4(uint64_t a1)
{
  return sub_11A0A80(a1 + 24);
}

void *sub_16F3CBC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitAssociatedInfo");
}

void *sub_16F3CCC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F3D40(void *a1)
{
  sub_16F3CCC(a1);

  operator delete();
}

uint64_t *sub_16F3D78(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16F3D88(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16F3E88(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16F3F20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16F3F54(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16F3F70()
{
  return 1;
}

void *sub_16F3F78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TransitAssociatedInfoFilter");
}

void *sub_16F3F88(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D3D18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = &qword_2550250;
  return a1;
}

void sub_16F3FFC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F402C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3D18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v7 & 4) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v10);
  }
  return a1;
}

void sub_16F415C(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F419C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F4270(uint64_t a1)
{
  sub_16F419C(a1);

  operator delete();
}

unsigned char *sub_16F42A8(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
  }
LABEL_17:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_16F43A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (char *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 64);
        goto LABEL_31;
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        int v17 = (void *)(a1 + 56);
        goto LABEL_31;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v19 = *(void *)(a1 + 8);
      unint64_t v16 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unint64_t v16 = (uint64_t *)*v16;
      }
      int v17 = (void *)(a1 + 48);
LABEL_31:
      uint64_t v20 = (std::string *)sub_1880F84(v17, v16);
      uint64_t v14 = (void *)sub_188C244(v20, *(char **)v22, (uint64_t)a3);
      goto LABEL_32;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(char **)v22;
      }
      uint64_t v14 = sub_1885AC0(v8, v21, v7, a3);
    }
    else
    {
      uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545E40, (uint64_t *)(a1 + 8), a3);
    }
LABEL_32:
    *(void *)uint64_t v22 = v14;
    if (!v14) {
      goto LABEL_41;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
      return *(void *)v22;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v22;
  }
LABEL_41:
  *(void *)uint64_t v22 = 0;
  return *(void *)v22;
}

char *sub_16F45D4(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_16F4710(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 7) == 0) {
    goto LABEL_8;
  }
  if (v3)
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    result += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_8;
      }
      goto LABEL_5;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
  uint64_t v13 = *(void *)(v11 + 8);
  if ((v12 & 0x80u) == 0) {
    uint64_t v13 = v12;
  }
  result += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) != 0)
  {
LABEL_5:
    unint64_t v4 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v14 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v14 + 31) < 0) {
      uint64_t v15 = *(void *)(v14 + 16);
    }
    else {
      uint64_t v15 = *(unsigned __int8 *)(v14 + 31);
    }
    result += v15;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16F484C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 7) == 0) {
    goto LABEL_15;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    unint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 56), v9, v11);
  if ((v4 & 4) != 0)
  {
LABEL_12:
    uint64_t v12 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v13 = *(void *)(a1 + 8);
    unint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 64), v12, v14);
  }
LABEL_15:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16F496C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F4974@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TextBlock");
}

void *sub_16F4984(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F49F8(void *a1)
{
  sub_16F4984(a1);

  operator delete();
}

uint64_t *sub_16F4A30(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16F4A40(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16F4B40(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16F4BD8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16F4C0C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16F4C28()
{
  return 1;
}

void *sub_16F4C30@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.TextBlockFilter");
}

uint64_t sub_16F4C40(uint64_t result)
{
  uint64_t v1 = *(unsigned int *)(result + 48);
  if ((int)v1 >= 1)
  {
    uint64_t v2 = result;
    int v3 = (uint64_t *)(*(void *)(result + 56) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B2C80(v4);
      --v1;
    }
    while (v1);
    *(_DWORD *)(v2 + 48) = 0;
  }
  return result;
}

uint64_t sub_16F4C90(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D3E18;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 40) = a2;
  *(_DWORD *)(a1 + 64) = 0;
  return a1;
}

void sub_16F4D00(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F4D30(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3E18;
  *(_DWORD *)(a1 + 24) = 0;
  unint64_t v6 = (std::string *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    unint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_16F4E30(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F4E80(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_12C1DB8(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F4F08(void *a1)
{
  sub_16F4E80(a1);

  operator delete();
}

uint64_t sub_16F4F40(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  unint64_t v6 = (uint64_t *)(a1 + 8);
  if (v7)
  {
    return sub_188B4AC(v6);
  }
  return result;
}

char *sub_16F4FC4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  if ((sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      unint64_t v6 = v20 + 1;
      unsigned int v7 = *v20;
      if (*v20 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          unint64_t v6 = (char *)sub_188C180((uint64_t)v20, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          unint64_t v6 = v20 + 2;
        }
      }
      uint64_t v20 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v20 = v12 + 1;
          unint64_t v14 = *(_DWORD **)(a1 + 56);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 48), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 48) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_15C1B30(*(void *)(a1 + 40));
            uint64_t v16 = sub_188CDC8(a1 + 40, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v20;
          }
          uint64_t v12 = (char *)sub_125CF74(a3, v16, v13);
          uint64_t v20 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_27;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if ((v7 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          uint64_t v18 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v18 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          unint64_t v6 = v20;
        }
        unint64_t v11 = sub_1885AC0(v7, v18, v6, a3);
      }
      else
      {
        unint64_t v11 = sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2545EA0, (uint64_t *)(a1 + 8), a3);
      }
      uint64_t v20 = (char *)v11;
      if (!v11) {
        return 0;
      }
LABEL_27:
      if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
        return v20;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v20;
    }
    return 0;
  }
  return v20;
}

char *sub_16F51A8(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        int v10 = a2 + 2;
      }
      a2 = sub_15B2EA4(v8, v10, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return a2;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    unint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    unint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*a3 - (void)a2 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(a2, v14, (int)v15);
    a2 += v16;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, a2);
}

uint64_t sub_16F5310(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v4 += v13;
  }
  *(_DWORD *)(a1 + 64) = v4;
  return v4;
}

void sub_16F53C4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_12C1E38((std::string *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16F54A0(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F54A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.About");
}

void *sub_16F54B8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F552C(void *a1)
{
  sub_16F54B8(a1);

  operator delete();
}

uint64_t *sub_16F5564(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16F5574(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16F5674(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16F570C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16F5740(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16F575C()
{
  return 1;
}

void *sub_16F5764@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AboutFilter");
}

void *sub_16F5774(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D3F18;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = a2;
  a1[10] = 0;
  a1[11] = 0;
  a1[12] = a2;
  a1[13] = 0;
  a1[14] = 0;
  a1[15] = &qword_2550250;
  a1[16] = &qword_2550250;
  a1[17] = &qword_2550250;
  return a1;
}

void sub_16F57FC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F582C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D3F18;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  unint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unint64_t v14 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v19, (const std::string **)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    uint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *uint64_t v21 = v20;
    }
  }
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22) {
    sub_188B4F8(v4, (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 120) = &qword_2550250;
  int v23 = *(_DWORD *)(a2 + 40);
  if (v23)
  {
    uint64_t v24 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 120), (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL), v24);
    int v23 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 128) = &qword_2550250;
  if ((v23 & 2) != 0)
  {
    uint64_t v25 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 128), (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL), v25);
    int v23 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 136) = &qword_2550250;
  if ((v23 & 4) != 0)
  {
    uint64_t v26 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v26 = (uint64_t *)*v26;
    }
    sub_1881DF4((std::string **)(a1 + 136), (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL), v26);
  }
  return a1;
}

void sub_16F5AAC(_Unwind_Exception *a1)
{
  sub_12C1DB8(v5);
  sub_12C1DB8(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F5B20(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 120);
  if (*(uint64_t **)(a1 + 120) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 128) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 128));
  }
  if (*(uint64_t **)(a1 + 136) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 136));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  sub_1889DE8((void *)(a1 + 96));
  sub_12C1DB8((void *)(a1 + 72));
  sub_12C1DB8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F5C14(uint64_t a1)
{
  sub_16F5B20(a1);

  operator delete();
}

uint64_t sub_16F5C4C(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v2 = *(unsigned int *)(a1 + 56);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v4 = *v3++;
      sub_15B2C80(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v5 = *(unsigned int *)(a1 + 80);
  if ((int)v5 >= 1)
  {
    unint64_t v6 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v7 = *v6++;
      sub_15B2C80(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t result = sub_188CC00(a1 + 96);
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 7) != 0)
  {
    if ((v9 & 1) == 0)
    {
      if ((v9 & 2) == 0) {
        goto LABEL_12;
      }
LABEL_18:
      unint64_t v11 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v11 + 23) < 0)
      {
        **(unsigned char **)unint64_t v11 = 0;
        *(void *)(v11 + 8) = 0;
        if ((v9 & 4) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v11 = 0;
        *(unsigned char *)(v11 + 23) = 0;
        if ((v9 & 4) == 0) {
          goto LABEL_25;
        }
      }
      goto LABEL_22;
    }
    unint64_t v10 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_18;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v9 & 2) != 0) {
        goto LABEL_18;
      }
    }
LABEL_12:
    if ((v9 & 4) == 0) {
      goto LABEL_25;
    }
LABEL_22:
    unint64_t v12 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v12 + 23) < 0)
    {
      **(unsigned char **)unint64_t v12 = 0;
      *(void *)(v12 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v12 = 0;
      *(unsigned char *)(v12 + 23) = 0;
    }
  }
LABEL_25:
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_16F5DA8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v40 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
    return *(void *)v40;
  }
  unint64_t v6 = (uint64_t **)(a1 + 96);
  uint64_t v39 = (uint64_t *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (char *)(*(void *)v40 + 1);
    unsigned int v8 = **(unsigned char **)v40;
    if ((char)**(unsigned char **)v40 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180(*(uint64_t *)v40, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (char *)(*(void *)v40 + 2);
      }
    }
    *(void *)int v40 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 120);
        goto LABEL_21;
      case 2u:
        if (v8 != 18) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 128);
        goto LABEL_21;
      case 3u:
        if (v8 != 26) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 136);
LABEL_21:
        uint64_t v16 = (std::string *)sub_1880F84(v13, v12);
        int v17 = (void *)sub_188C244(v16, *(char **)v40, (uint64_t)a3);
        goto LABEL_22;
      case 4u:
        if (v8 != 34) {
          goto LABEL_57;
        }
        uint64_t v18 = v7 - 1;
        while (1)
        {
          uint64_t v19 = (unsigned __int8 *)(v18 + 1);
          *(void *)int v40 = v18 + 1;
          int v20 = *(_DWORD **)(a1 + 64);
          if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
          {
            *(_DWORD *)(a1 + 56) = v21 + 1;
            uint64_t v22 = *(void *)&v20[2 * v21 + 2];
          }
          else
          {
            int v23 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v22 = sub_188CDC8(a1 + 48, (uint64_t)v23);
            uint64_t v19 = *(unsigned __int8 **)v40;
          }
          uint64_t v18 = (char *)sub_125CF74(a3, v22, v19);
          *(void *)int v40 = v18;
          if (!v18) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v18 || *v18 != 34) {
            goto LABEL_23;
          }
        }
      case 5u:
        if (v8 != 42) {
          goto LABEL_57;
        }
        uint64_t v24 = v7 - 1;
        while (1)
        {
          uint64_t v25 = (unsigned __int8 *)(v24 + 1);
          *(void *)int v40 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 88);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 80), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 80) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_15C1B30(*(void *)(a1 + 72));
            uint64_t v28 = sub_188CDC8(a1 + 72, (uint64_t)v29);
            uint64_t v25 = *(unsigned __int8 **)v40;
          }
          uint64_t v24 = (char *)sub_125CF74(a3, v28, v25);
          *(void *)int v40 = v24;
          if (!v24) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 42) {
            goto LABEL_23;
          }
        }
      case 6u:
        if (v8 != 50) {
          goto LABEL_57;
        }
        uint64_t v30 = v7 - 1;
        while (1)
        {
          int v31 = (char *)(v30 + 1);
          *(void *)int v40 = v30 + 1;
          BOOL v32 = *(_DWORD **)(a1 + 112);
          if (v32 && (uint64_t v33 = *(int *)(a1 + 104), (int)v33 < *v32))
          {
            *(_DWORD *)(a1 + 104) = v33 + 1;
            unint64_t v34 = *(std::string **)&v32[2 * v33 + 2];
          }
          else
          {
            if (!*v6) {
              operator new();
            }
            *uint64_t v36 = v35;
            v36[1] = sub_3A6EDC;
            *uint64_t v35 = 0;
            v35[1] = 0;
            int v35[2] = 0;
            unint64_t v34 = (std::string *)sub_188CDC8(a1 + 96, (uint64_t)v35);
            int v31 = *(char **)v40;
          }
          uint64_t v30 = sub_188C244(v34, v31, (uint64_t)a3);
          *(void *)int v40 = v30;
          if (!v30) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v30 || *v30 != 50) {
            goto LABEL_23;
          }
        }
      default:
LABEL_57:
        if (v8) {
          BOOL v37 = (v8 & 7) == 4;
        }
        else {
          BOOL v37 = 1;
        }
        if (!v37)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v39)
            {
              uint64_t v38 = (std::string *)((*v39 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v38 = (std::string *)sub_188DBD8(v39);
              uint64_t v7 = *(char **)v40;
            }
            int v17 = sub_1885AC0(v8, v38, v7, a3);
          }
          else
          {
            int v17 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2545F00, v39, a3);
          }
LABEL_22:
          *(void *)int v40 = v17;
          if (!v17) {
            return 0;
          }
LABEL_23:
          if (sub_11947B8((uint64_t)a3, (char **)v40, a3[11].i32[1])) {
            return *(void *)v40;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v40;
    }
  }
}

char *sub_16F6208(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    uint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 34;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        uint64_t v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        uint64_t v11 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v9, v11, a3);
    }
  }
  int v12 = *(_DWORD *)(a1 + 80);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *uint64_t v4 = 42;
      unsigned int v15 = *(_DWORD *)(v14 + 20);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v14, v16, a3);
    }
  }
  uint64_t v17 = *(unsigned int *)(a1 + 104);
  if ((int)v17 >= 1)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 8 * v17;
    do
    {
      int v20 = *(void **)(*(void *)(a1 + 112) + v18 + 8);
      if (*((char *)v20 + 23) < 0)
      {
        int64_t v21 = v20[1];
        if (v21 > 127) {
          goto LABEL_32;
        }
      }
      else
      {
        int64_t v21 = *((unsigned __int8 *)v20 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v21)
      {
        *uint64_t v4 = 50;
        v4[1] = v21;
        if (*((char *)v20 + 23) < 0) {
          int v20 = (void *)*v20;
        }
        uint64_t v22 = v4 + 2;
        memcpy(v22, v20, v21);
        uint64_t v4 = &v22[v21];
        goto LABEL_30;
      }
LABEL_32:
      uint64_t v4 = (char *)sub_188A868(a3, 6, (uint64_t)v20, v4);
LABEL_30:
      v18 += 8;
    }
    while (v19 != v18);
  }
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_16F650C(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_15B2F90(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(unsigned int *)(a1 + 104);
  uint64_t result = v11 + v17;
  if ((int)v17 >= 1)
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v20 = *v19++;
      uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
      uint64_t v22 = *(void *)(v20 + 8);
      if ((v21 & 0x80u) == 0) {
        uint64_t v22 = v21;
      }
      result += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6);
      --v17;
    }
    while (v17);
  }
  int v23 = *(_DWORD *)(a1 + 40);
  if ((v23 & 7) != 0)
  {
    if (v23)
    {
      unint64_t v28 = *(void *)(a1 + 120) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v29 = *(unsigned __int8 *)(v28 + 23);
      uint64_t v30 = *(void *)(v28 + 8);
      if ((v29 & 0x80u) == 0) {
        uint64_t v30 = v29;
      }
      result += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v23 & 2) == 0)
      {
LABEL_21:
        if ((v23 & 4) == 0) {
          goto LABEL_25;
        }
        goto LABEL_22;
      }
    }
    else if ((v23 & 2) == 0)
    {
      goto LABEL_21;
    }
    unint64_t v31 = *(void *)(a1 + 128) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v32 = *(unsigned __int8 *)(v31 + 23);
    uint64_t v33 = *(void *)(v31 + 8);
    if ((v32 & 0x80u) == 0) {
      uint64_t v33 = v32;
    }
    result += v33 + ((9 * (__clz(v33 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v23 & 4) != 0)
    {
LABEL_22:
      unint64_t v24 = *(void *)(a1 + 136) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v25 = *(unsigned __int8 *)(v24 + 23);
      uint64_t v26 = *(void *)(v24 + 8);
      if ((v25 & 0x80u) == 0) {
        uint64_t v26 = v25;
      }
      result += v26 + ((9 * (__clz(v26 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
LABEL_25:
  uint64_t v27 = *(void *)(a1 + 8);
  if (v27)
  {
    unint64_t v34 = v27 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v34 + 31) < 0) {
      uint64_t v35 = *(void *)(v34 + 16);
    }
    else {
      uint64_t v35 = *(unsigned __int8 *)(v34 + 31);
    }
    result += v35;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16F6748(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (std::string **)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C1E38((std::string *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (const std::string **)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_188FB98(a1 + 96, v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 40);
  if ((v19 & 7) != 0)
  {
    if (v19)
    {
      uint64_t v20 = (long long *)(*(void *)(a2 + 120) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v21 = *(void *)(a1 + 8);
      uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
      if (v21) {
        uint64_t v22 = (uint64_t *)*v22;
      }
      sub_1881DF4((std::string **)(a1 + 120), v20, v22);
      if ((v19 & 2) == 0)
      {
LABEL_13:
        if ((v19 & 4) == 0) {
          goto LABEL_24;
        }
        goto LABEL_21;
      }
    }
    else if ((v19 & 2) == 0)
    {
      goto LABEL_13;
    }
    int v23 = (long long *)(*(void *)(a2 + 128) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v24 = *(void *)(a1 + 8);
    uint64_t v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
    if (v24) {
      uint64_t v25 = (uint64_t *)*v25;
    }
    sub_1881DF4((std::string **)(a1 + 128), v23, v25);
    if ((v19 & 4) != 0)
    {
LABEL_21:
      uint64_t v26 = (long long *)(*(void *)(a2 + 136) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 4u;
      uint64_t v27 = *(void *)(a1 + 8);
      unint64_t v28 = (uint64_t *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
      if (v27) {
        unint64_t v28 = (uint64_t *)*v28;
      }
      sub_1881DF4((std::string **)(a1 + 136), v26, v28);
    }
  }
LABEL_24:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v29 = *(void *)(a2 + 8);
  if (v29)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v29 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16F69A0(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F69A8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnrichmentInfo");
}

void *sub_16F69B8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F6A2C(void *a1)
{
  sub_16F69B8(a1);

  operator delete();
}

uint64_t *sub_16F6A64(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16F6A74(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16F6B74(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16F6C0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16F6C40(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16F6C5C()
{
  return 1;
}

void *sub_16F6C64@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnrichmentInfoFilter");
}

void *sub_16F6C74(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_11DB7D4(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F6CF4(void *a1)
{
  sub_16F6C74(a1);

  operator delete();
}

unsigned char *sub_16F6D2C(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 6);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*((void *)result + 4) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_15B09D0(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 6) = 0;
  }
  char v6 = v1[8];
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return (unsigned char *)sub_188B4AC(v5);
  }
  return result;
}

char *sub_16F6DA8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      int v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          int v19 = v12 + 1;
          int v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_15C1918(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_1198F14(a3, v16, v13);
          int v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      int v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_16F6F48(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_15B0C0C(v8, v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16F708C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B0D90(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

BOOL sub_16F713C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  do
  {
    int v3 = v2;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_15B0F18(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3 < 1;
}

void *sub_16F7194@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LabelGeometry.LineString");
}

uint64_t sub_16F71A4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D4098;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  return a1;
}

void sub_16F7214(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F7244(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D4098;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unsigned int v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871BF4(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

void sub_16F735C(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F73AC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186FE3C(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F7434(void *a1)
{
  sub_16F73AC(a1);

  operator delete();
}

unsigned char *sub_16F746C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (unsigned char **)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16F6D2C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = a1 + 8;
  *(unsigned char *)(v6 + 64) = 0;
  *(_DWORD *)(v6 + 32) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_16F74F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  char v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v27 + 1;
    unsigned int v9 = *v27;
    if (*v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v27 + 2;
      }
    }
    uint64_t v27 = v8;
    if (v9 >> 3 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_13;
    }
    uint64_t v15 = v8 + 1;
    uint64_t v16 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_23;
    }
    int v17 = *v15;
    uint64_t v16 = v16 + (v17 << 7) - 128;
    if ((v17 & 0x80000000) == 0)
    {
      uint64_t v15 = v8 + 2;
LABEL_23:
      uint64_t v27 = v15;
      *(unsigned char *)(a1 + 72) = v16 != 0;
      int v5 = 1;
      goto LABEL_37;
    }
    uint64_t v25 = (char *)sub_188C138((uint64_t)v8, v16);
    uint64_t v27 = v25;
    *(unsigned char *)(a1 + 72) = v26 != 0;
    int v5 = 1;
    if (!v25) {
      goto LABEL_44;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 >> 3 == 1 && v9 == 10)
  {
    uint64_t v18 = v8 - 1;
    while (1)
    {
      int v19 = (unsigned __int8 *)(v18 + 1);
      uint64_t v27 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 64);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 56), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 56) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_17890B0(*(void *)(a1 + 48));
        uint64_t v22 = sub_188CDC8(a1 + 48, v23);
        int v19 = (unsigned __int8 *)v27;
      }
      uint64_t v18 = sub_16F777C(a3, v22, v19);
      uint64_t v27 = v18;
      if (!v18) {
        goto LABEL_44;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_37;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if ((v9 - 8000) >> 6 > 0x7C)
    {
      if (*v7)
      {
        uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v8 = v27;
      }
      int v14 = sub_1885AC0(v9, v24, v8, a3);
    }
    else
    {
      int v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2545FA8, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v27 = (char *)v14;
    if (!v14) {
      goto LABEL_44;
    }
    goto LABEL_37;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_44:
  uint64_t v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 40) |= v5;
  return v27;
}

char *sub_16F777C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F6DA8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_16F780C(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 40);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16F6F48(v8, v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v11 = *(unsigned char *)(a1 + 72);
    *a2 = 16;
    a2[1] = v11;
    a2 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return a2;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    uint64_t v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    uint64_t v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(a2, v15, (int)v16);
    a2 += v17;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, a2);
}

uint64_t sub_16F79B0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16F708C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = v4 + 2;
  }
  else {
    uint64_t result = v4;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    result += v13;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16F7A70(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871BF4((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 40))
  {
    char v9 = *(unsigned char *)(a2 + 72);
    *(_DWORD *)(a1 + 40) |= 1u;
    *(unsigned char *)(a1 + 72) = v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16F7B68(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    return sub_168448C(a1 + 48);
  }
  return result;
}

void *sub_16F7BB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LabelGeometry");
}

void *sub_16F7BC4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F7C38(void *a1)
{
  sub_16F7BC4(a1);

  operator delete();
}

uint64_t *sub_16F7C70(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16F7C80(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16F7D80(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16F7E18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16F7E4C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16F7E68()
{
  return 1;
}

void *sub_16F7E70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LabelGeometryFilter");
}

void *sub_16F7E80(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D4198;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  a1[8] = 0;
  a1[9] = 0;
  a1[7] = a2;
  return a1;
}

void sub_16F7EF0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F7F20(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D4198;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  *(void *)(a1 + 52) = 0;
  int v6 = *(_DWORD *)(a2 + 48);
  if (v6)
  {
    sub_188CA54((unsigned int *)(a1 + 48), v6);
    unsigned int v7 = *(void **)(a1 + 56);
    *(_DWORD *)(a1 + 48) += *(_DWORD *)(a2 + 48);
    memcpy(v7, *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  uint64_t v8 = *(void *)(a2 + 8);
  if (v8) {
    sub_188B4F8(v4, (v8 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  return a1;
}

void sub_16F8004(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F8050(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 6));
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F80D4(void *a1)
{
  sub_16F8050(a1);

  operator delete();
}

unsigned char *sub_16F810C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  *(_DWORD *)(a1 + 48) = 0;
  if ((*(unsigned char *)(a1 + 40) & 7) != 0)
  {
    *(void *)(a1 + 64) = 0;
    *(void *)(a1 + 72) = 0;
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16F8174(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v25 + 1;
    unsigned int v9 = *v25;
    if (*v25 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v25, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v25 + 2;
      }
    }
    uint64_t v25 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8)
        {
          if (v9 != 10) {
            goto LABEL_32;
          }
          uint64_t v22 = sub_188C2EC((unsigned int *)(a1 + 48), (unsigned __int8 *)v8, (uint64_t)a3);
          goto LABEL_41;
        }
        unint64_t v12 = v8 - 1;
        while (1)
        {
          uint64_t v25 = v12 + 1;
          uint64_t v13 = v12[1];
          if (v12[1] < 0)
          {
            int v14 = v13 + (v12[2] << 7);
            uint64_t v13 = (v14 - 128);
            if (v12[2] < 0)
            {
              unint64_t v12 = (char *)sub_188C138((uint64_t)(v12 + 1), (v14 - 128));
              uint64_t v13 = v15;
            }
            else
            {
              v12 += 3;
            }
          }
          else
          {
            v12 += 2;
          }
          uint64_t v25 = v12;
          uint64_t v16 = *(unsigned int *)(a1 + 48);
          if (v16 == *(_DWORD *)(a1 + 52))
          {
            int v17 = v16 + 1;
            sub_188CA54((unsigned int *)(a1 + 48), v16 + 1);
            *(void *)(*(void *)(a1 + 56) + 8 * v16) = v13;
            unint64_t v12 = v25;
          }
          else
          {
            *(void *)(*(void *)(a1 + 56) + 8 * v16) = v13;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 48) = v17;
          if (!v12) {
            goto LABEL_47;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 8) {
            goto LABEL_42;
          }
        }
      case 2u:
        if (v9 != 17) {
          goto LABEL_32;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 1u;
        *(void *)(a1 + 64) = v19;
        goto LABEL_29;
      case 3u:
        if (v9 != 29) {
          goto LABEL_32;
        }
        int v20 = *(_DWORD *)v8;
        uint64_t v18 = v8 + 4;
        v5 |= 2u;
        *(_DWORD *)(a1 + 72) = v20;
        goto LABEL_29;
      case 4u:
        if (v9 != 37) {
          goto LABEL_32;
        }
        int v21 = *(_DWORD *)v8;
        uint64_t v18 = v8 + 4;
        v5 |= 4u;
        *(_DWORD *)(a1 + 76) = v21;
LABEL_29:
        uint64_t v25 = v18;
        goto LABEL_42;
      default:
LABEL_32:
        if (v9) {
          BOOL v23 = (v9 & 7) == 4;
        }
        else {
          BOOL v23 = 1;
        }
        if (!v23)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v24 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v24 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v25;
            }
            uint64_t v22 = sub_1885AC0(v9, v24, v8, a3);
          }
          else
          {
            uint64_t v22 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2546010, (uint64_t *)(a1 + 8), a3);
          }
LABEL_41:
          uint64_t v25 = (char *)v22;
          if (!v22) {
            goto LABEL_47;
          }
LABEL_42:
          if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_47:
        }
          uint64_t v25 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v25;
    }
  }
}

char *sub_16F8458(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      unint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i);
      *a2 = 8;
      a2[1] = v8;
      if (v8 > 0x7F)
      {
        a2[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        a2[2] = v8 >> 7;
        a2 += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(a2 - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *a2++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        a2 += 2;
      }
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v12 = *(void *)(a1 + 64);
    *a2 = 17;
    *(void *)(a2 + 1) = v12;
    a2 += 9;
    if ((v11 & 2) == 0)
    {
LABEL_12:
      if ((v11 & 4) == 0) {
        goto LABEL_23;
      }
      goto LABEL_20;
    }
  }
  else if ((v11 & 2) == 0)
  {
    goto LABEL_12;
  }
  if (*(void *)a3 <= (unint64_t)a2) {
    a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
  }
  int v13 = *(_DWORD *)(a1 + 72);
  *a2 = 29;
  *(_DWORD *)(a2 + 1) = v13;
  a2 += 5;
  if ((v11 & 4) != 0)
  {
LABEL_20:
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    int v14 = *(_DWORD *)(a1 + 76);
    *a2 = 37;
    *(_DWORD *)(a2 + 1) = v14;
    a2 += 5;
  }
LABEL_23:
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return a2;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    uint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    uint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(a2, v18, (int)v19);
    a2 += v20;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v18, v19, a2);
}

uint64_t sub_16F8684(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = sub_188D5A8((unsigned int *)(a1 + 48));
  int v4 = *(_DWORD *)(a1 + 40);
  uint64_t v5 = v3 + v2 + *(unsigned int *)(a1 + 48) + 9;
  if ((v4 & 1) == 0) {
    uint64_t v5 = v3 + v2 + *(unsigned int *)(a1 + 48);
  }
  if ((v4 & 2) != 0) {
    v5 += 5;
  }
  if ((v4 & 4) != 0) {
    v5 += 5;
  }
  if ((v4 & 7) != 0) {
    uint64_t result = v5;
  }
  else {
    uint64_t result = v3 + v2 + *(unsigned int *)(a1 + 48);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    result += v9;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_16F8724(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 48);
    uint64_t v6 = *(int *)(a1 + 48);
    sub_188CA54((unsigned int *)(a1 + 48), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 56);
    *v5 += *(_DWORD *)(a2 + 48);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 56), 8 * *(int *)(a2 + 48));
  }
  int v8 = *(_DWORD *)(a2 + 40);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          *(_DWORD *)(a1 + 40) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16F881C(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16F8824@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnhancedPlacement");
}

void *sub_16F8834(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F88A8(void *a1)
{
  sub_16F8834(a1);

  operator delete();
}

uint64_t *sub_16F88E0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_16F88F0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_16F89F0(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_16F8A88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_16F8ABC(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16F8AD8()
{
  return 1;
}

void *sub_16F8AE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.EnhancedPlacementFilter");
}

uint64_t sub_16F8AF0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D4298;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_16F8B6C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_16F8B9C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16F8C10(void *a1)
{
  sub_16F8B9C(a1);

  operator delete();
}

uint64_t sub_16F8C48(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16F8C60(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    return v19;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v6 = v19 + 1;
    unsigned int v7 = *v19;
    if (*v19 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        unint64_t v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        unint64_t v6 = v19 + 2;
      }
    }
    uint64_t v19 = v6;
    if (v7 == 8)
    {
      uint64_t v12 = v6 + 1;
      unint64_t v13 = *v6;
      if (*v6 < 0)
      {
        int v14 = *v12;
        int v15 = v13 + (v14 << 7);
        unint64_t v13 = (v15 - 128);
        if (v14 < 0)
        {
          uint64_t v19 = (char *)sub_188C138((uint64_t)v6, (v15 - 128));
          if (!v19) {
            return 0;
          }
          unint64_t v13 = v16;
          goto LABEL_20;
        }
        uint64_t v12 = v6 + 2;
      }
      uint64_t v19 = v12;
LABEL_20:
      if (v13 > 5)
      {
        if (*v5) {
          unint64_t v17 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          unint64_t v17 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v13, v17);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 24) = v13;
      }
      goto LABEL_22;
    }
    if (!v7 || (v7 & 7) == 4) {
      break;
    }
    if (*v5)
    {
      int v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v6 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
    if (!v19) {
      return 0;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      return v19;
    }
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v19;
  }
  return 0;
}

unsigned char *sub_16F8E08(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16F8F30(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_16F8FA4()
{
  return 1;
}

void *sub_16F8FAC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Factoid.Color");
}

uint64_t sub_16F8FBC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D4318;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = &qword_2550250;
  *(void *)(a1 + 88) = &qword_2550250;
  *(void *)(a1 + 96) = &qword_2550250;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(unsigned char *)(a1 + 136) = 0;
  return a1;
}

void sub_16F904C(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16F9080(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D4318;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v13 & 2) != 0)
  {
    int v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v13 & 4) != 0)
  {
    unint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if ((v13 & 8) != 0)
  {
    unint64_t v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  if ((v13 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  if ((v13 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 112) = 0;
  long long v18 = *(_OWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = v18;
  return a1;
}

void sub_16F92D8()
{
}

void *sub_16F9368(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16F9400((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_12C1DB8(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_16F9400(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 72);
  uint64_t v2 = (void ***)(a1 + 72);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  uint64_t result = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2546098)
  {
    uint64_t v5 = *(void *)(a1 + 104);
    if (v5)
    {
      sub_184AFBC(v5);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 112);
    if (result)
    {
      sub_16F8B9C(result);
      operator delete();
    }
  }
  return result;
}

void sub_16F94E0(void *a1)
{
  sub_16F9368(a1);

  operator delete();
}

uint64_t sub_16F9518(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x3F) != 0)
  {
    if ((v6 & 1) == 0)
    {
      if ((v6 & 2) == 0) {
        goto LABEL_8;
      }
LABEL_17:
      unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_21;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
        if ((v6 & 4) != 0) {
          goto LABEL_21;
        }
      }
LABEL_9:
      if ((v6 & 8) == 0) {
        goto LABEL_10;
      }
LABEL_25:
      unint64_t v10 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v10 + 23) < 0)
      {
        **(unsigned char **)unint64_t v10 = 0;
        *(void *)(v10 + 8) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_29;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v10 = 0;
        *(unsigned char *)(v10 + 23) = 0;
        if ((v6 & 0x10) != 0) {
          goto LABEL_29;
        }
      }
LABEL_11:
      if ((v6 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_30;
    }
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
      if ((v6 & 2) != 0) {
        goto LABEL_17;
      }
    }
LABEL_8:
    if ((v6 & 4) == 0) {
      goto LABEL_9;
    }
LABEL_21:
    unint64_t v9 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_25;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
      if ((v6 & 8) != 0) {
        goto LABEL_25;
      }
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_11;
    }
LABEL_29:
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 104));
    if ((v6 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_30:
    uint64_t v11 = *(void *)(a1 + 112);
    char v12 = *(unsigned char *)(v11 + 8);
    uint64_t result = v11 + 8;
    *(_DWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 8) = 0;
    if (v12) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
LABEL_32:
  if ((v6 & 0xC0) != 0)
  {
    *(_DWORD *)(a1 + 128) = 0;
    *(void *)(a1 + 120) = 0;
  }
  if ((v6 & 0x300) != 0)
  {
    *(unsigned char *)(a1 + 136) = 0;
    *(_DWORD *)(a1 + 132) = 0;
  }
  char v14 = *(unsigned char *)(a1 + 8);
  uint64_t v13 = a1 + 8;
  *(_DWORD *)(v13 + 32) = 0;
  if (v14)
  {
    return sub_188B4AC((uint64_t *)v13);
  }
  return result;
}

uint64_t sub_16F96CC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v48 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v48, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v8 = (unsigned __int8 *)(*(void *)v48 + 1);
    unsigned int v9 = **(unsigned char **)v48;
    if ((char)**(unsigned char **)v48 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        unint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v48, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = (unsigned __int8 *)(*(void *)v48 + 2);
      }
    }
    *(void *)uint64_t v48 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 72);
        goto LABEL_62;
      case 2u:
        if (v9 != 18) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 80);
        goto LABEL_62;
      case 3u:
        if (v9 != 25) {
          goto LABEL_69;
        }
        v5 |= 0x40u;
        *(void *)(a1 + 120) = *(void *)v8;
        *(void *)uint64_t v48 = v8 + 8;
        goto LABEL_79;
      case 5u:
        if (v9 != 42) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 88);
        goto LABEL_62;
      case 6u:
        if (v9 != 48) {
          goto LABEL_69;
        }
        unint64_t v17 = (char *)(v8 + 1);
        unint64_t v18 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_27;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)uint64_t v48 = sub_188C138((uint64_t)v8, (v20 - 128));
          if (!*(void *)v48) {
            goto LABEL_99;
          }
          unint64_t v18 = v42;
        }
        else
        {
          unint64_t v17 = (char *)(v8 + 2);
LABEL_27:
          *(void *)uint64_t v48 = v17;
        }
        if (v18 <= 8)
        {
          *(_DWORD *)(a1 + 40) |= 0x80u;
          *(_DWORD *)(a1 + 128) = v18;
          goto LABEL_79;
        }
        if (*v7) {
          uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v47 = 6;
        goto LABEL_93;
      case 7u:
        if (v9 != 58) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v21 = *(void *)(a1 + 104);
        if (!v21)
        {
          uint64_t v22 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v22 = (void *)*v22;
          }
          uint64_t v21 = sub_185089C((uint64_t)v22);
          *(void *)(a1 + 104) = v21;
          unint64_t v8 = *(unsigned __int8 **)v48;
        }
        BOOL v23 = sub_12688D0(a3, v21, v8);
        goto LABEL_78;
      case 8u:
        if (v9 != 66) {
          goto LABEL_69;
        }
        uint64_t v24 = v8 - 1;
        while (1)
        {
          uint64_t v25 = v24 + 1;
          *(void *)uint64_t v48 = v24 + 1;
          uint64_t v26 = *(_DWORD **)(a1 + 64);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 56), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 56) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v28 = sub_188CDC8(a1 + 48, (uint64_t)v29);
            uint64_t v25 = *(unsigned __int8 **)v48;
          }
          uint64_t v24 = (unsigned __int8 *)sub_125CF74(a3, v28, v25);
          *(void *)uint64_t v48 = v24;
          if (!v24) {
            goto LABEL_99;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 66) {
            goto LABEL_79;
          }
        }
      case 9u:
        if (v9 != 72) {
          goto LABEL_69;
        }
        uint64_t v30 = (char *)(v8 + 1);
        unint64_t v18 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_50;
        }
        int v31 = *v30;
        int v32 = v18 + (v31 << 7);
        unint64_t v18 = (v32 - 128);
        if (v31 < 0)
        {
          *(void *)uint64_t v48 = sub_188C138((uint64_t)v8, (v32 - 128));
          if (!*(void *)v48) {
            goto LABEL_99;
          }
          unint64_t v18 = v43;
        }
        else
        {
          uint64_t v30 = (char *)(v8 + 2);
LABEL_50:
          *(void *)uint64_t v48 = v30;
        }
        if (v18 > 5)
        {
          if (*v7) {
            uint64_t v46 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v46 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v47 = 9;
LABEL_93:
          sub_188C020(v47, v18, v46);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x100u;
          *(_DWORD *)(a1 + 132) = v18;
        }
        goto LABEL_79;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_69;
        }
        v5 |= 0x200u;
        uint64_t v33 = (char *)(v8 + 1);
        uint64_t v34 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_57;
        }
        int v35 = *v33;
        uint64_t v34 = v34 + (v35 << 7) - 128;
        if (v35 < 0)
        {
          uint64_t v44 = sub_188C138((uint64_t)v8, v34);
          *(void *)uint64_t v48 = v44;
          *(unsigned char *)(a1 + 136) = v45 != 0;
          if (!v44) {
            goto LABEL_99;
          }
        }
        else
        {
          uint64_t v33 = (char *)(v8 + 2);
LABEL_57:
          *(void *)uint64_t v48 = v33;
          *(unsigned char *)(a1 + 136) = v34 != 0;
        }
        goto LABEL_79;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v36 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v36 & 0xFFFFFFFFFFFFFFFCLL);
        if (v36) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        char v14 = (void *)(a1 + 96);
LABEL_62:
        BOOL v37 = (std::string *)sub_1880F84(v14, v13);
        BOOL v23 = (void *)sub_188C244(v37, *(char **)v48, (uint64_t)a3);
        goto LABEL_78;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_69;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v38 = *(void *)(a1 + 112);
        if (!v38)
        {
          uint64_t v39 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v39 = (void *)*v39;
          }
          uint64_t v38 = sub_17892F8((uint64_t)v39);
          *(void *)(a1 + 112) = v38;
          unint64_t v8 = *(unsigned __int8 **)v48;
        }
        BOOL v23 = sub_16F9C84(a3, v38, v8);
        goto LABEL_78;
      default:
LABEL_69:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v8 = *(unsigned __int8 **)v48;
            }
            BOOL v23 = sub_1885AC0(v9, v41, (char *)v8, a3);
          }
          else
          {
            BOOL v23 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2546098, (uint64_t *)(a1 + 8), a3);
          }
LABEL_78:
          *(void *)uint64_t v48 = v23;
          if (!v23) {
            goto LABEL_99;
          }
LABEL_79:
          if (sub_11947B8((uint64_t)a3, (char **)v48, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_99:
        }
          *(void *)uint64_t v48 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v48;
    }
  }
}

char *sub_16F9C84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16F8C60(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16F9D14(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x40) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_9:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 120);
  *uint64_t v4 = 25;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 4) == 0)
  {
LABEL_5:
    if ((v6 & 0x80) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x80) == 0) {
    goto LABEL_19;
  }
LABEL_13:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v8 = *(int *)(a1 + 128);
  *uint64_t v4 = 48;
  v4[1] = v8;
  if (v8 > 0x7F)
  {
    v4[1] = v8 | 0x80;
    unint64_t v9 = v8 >> 7;
    v4[2] = v8 >> 7;
    v4 += 3;
    if (v8 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v10 = v9 >> 14;
        v9 >>= 7;
        *v4++ = v9;
      }
      while (v10);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_19:
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v11 = *(void *)(a1 + 104);
    *uint64_t v4 = 58;
    unsigned int v12 = *(_DWORD *)(v11 + 44);
    v4[1] = v12;
    if (v12 > 0x7F) {
      uint64_t v13 = sub_188A9CC(v12, v4 + 1);
    }
    else {
      uint64_t v13 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v11, v13, a3);
  }
  int v14 = *(_DWORD *)(a1 + 56);
  if (v14)
  {
    for (int i = 0; i != v14; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v16 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *uint64_t v4 = 66;
      unsigned int v17 = *(_DWORD *)(v16 + 20);
      v4[1] = v17;
      if (v17 > 0x7F) {
        unint64_t v18 = sub_188A9CC(v17, v4 + 1);
      }
      else {
        unint64_t v18 = v4 + 2;
      }
      uint64_t v4 = sub_15B2EA4(v16, v18, a3);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v19 = *(int *)(a1 + 132);
    *uint64_t v4 = 72;
    v4[1] = v19;
    if (v19 > 0x7F)
    {
      v4[1] = v19 | 0x80;
      unint64_t v20 = v19 >> 7;
      v4[2] = v19 >> 7;
      v4 += 3;
      if (v19 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v21 = v20 >> 14;
          v20 >>= 7;
          *v4++ = v20;
        }
        while (v21);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x200) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 136);
    *uint64_t v4 = 80;
    v4[1] = v22;
    v4 += 2;
    if ((v6 & 8) == 0)
    {
LABEL_43:
      if ((v6 & 0x20) == 0) {
        goto LABEL_55;
      }
      goto LABEL_49;
    }
  }
  else if ((v6 & 8) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v4 = sub_117A0AC(a3, 11, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_55;
  }
LABEL_49:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v23 = *(void *)(a1 + 112);
  *uint64_t v4 = 98;
  unsigned int v24 = *(_DWORD *)(v23 + 20);
  v4[1] = v24;
  if (v24 > 0x7F) {
    uint64_t v25 = sub_188A9CC(v24, v4 + 1);
  }
  else {
    uint64_t v25 = v4 + 2;
  }
  uint64_t v4 = sub_16F8E08(v23, (unint64_t)v25, a3);
LABEL_55:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if ((v26 & 1) == 0) {
    return v4;
  }
  unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v28 + 31) < 0)
  {
    uint64_t v29 = *(void **)(v28 + 8);
    uint64_t v30 = *(void *)(v28 + 16);
  }
  else
  {
    uint64_t v29 = (void *)(v28 + 8);
    LODWORD(v30) = *(unsigned __int8 *)(v28 + 31);
  }
  if (*a3 - (void)v4 >= (int)v30)
  {
    uint64_t v31 = (int)v30;
    memcpy(v4, v29, (int)v30);
    v4 += v31;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v29, v30, v4);
}

uint64_t sub_16FA150(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((_BYTE)v10)
  {
    if (v10)
    {
      unint64_t v17 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
      uint64_t v19 = *(void *)(v17 + 8);
      if ((v18 & 0x80u) == 0) {
        uint64_t v19 = v18;
      }
      v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_32;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v20 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_35;
    }
LABEL_32:
    unint64_t v23 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
    uint64_t v25 = *(void *)(v23 + 8);
    if ((v24 & 0x80u) == 0) {
      uint64_t v25 = v24;
    }
    v4 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0)
    {
LABEL_12:
      if ((v10 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_38;
    }
LABEL_35:
    unint64_t v26 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
    uint64_t v28 = *(void *)(v26 + 8);
    if ((v27 & 0x80u) == 0) {
      uint64_t v28 = v27;
    }
    v4 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0)
      {
LABEL_15:
        if ((v10 & 0x40) != 0) {
          v4 += 9;
        }
        if ((v10 & 0x80) != 0)
        {
          int v12 = *(_DWORD *)(a1 + 128);
          uint64_t v13 = ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
          if (v12 >= 0) {
            uint64_t v14 = v13;
          }
          else {
            uint64_t v14 = 11;
          }
          v4 += v14;
        }
        goto LABEL_22;
      }
LABEL_14:
      uint64_t v11 = sub_16F8F30(*(void *)(a1 + 112));
      v4 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      goto LABEL_15;
    }
LABEL_38:
    uint64_t v29 = sub_184B568(*(void *)(a1 + 104));
    v4 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
LABEL_22:
  if ((v10 & 0x300) != 0)
  {
    if ((v10 & 0x100) != 0)
    {
      int v15 = *(_DWORD *)(a1 + 132);
      if (v15 < 0) {
        uint64_t v16 = 11;
      }
      else {
        uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v4 += v16;
    }
    if ((v10 & 0x200) != 0) {
      v4 += 2;
    }
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if (v30)
  {
    unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v4 += v33;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16FA420(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v9)
  {
    if (v9)
    {
      uint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_31;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    uint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_34;
    }
LABEL_31:
    unint64_t v17 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 88), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_37;
    }
LABEL_34:
    unint64_t v20 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 96), v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v23 = *(void *)(a1 + 104);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = sub_185089C((uint64_t)v25);
      *(void *)(a1 + 104) = v23;
    }
    if (*(void *)(a2 + 104)) {
      unint64_t v26 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      unint64_t v26 = &off_254D2B0;
    }
    sub_16CE3CC(v23, (uint64_t)v26);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v27 = *(std::string **)(a1 + 112);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = (std::string *)sub_17892F8((uint64_t)v29);
      *(void *)(a1 + 112) = v27;
    }
    if (*(void *)(a2 + 112)) {
      uint64_t v30 = *(uint64_t (****)())(a2 + 112);
    }
    else {
      uint64_t v30 = &off_2546078;
    }
    sub_11A7934(v27, (uint64_t)v30);
    if ((v9 & 0x40) == 0)
    {
LABEL_12:
      if ((v9 & 0x80) == 0)
      {
LABEL_14:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_15;
      }
LABEL_13:
      *(_DWORD *)(a1 + 128) = *(_DWORD *)(a2 + 128);
      goto LABEL_14;
    }
LABEL_53:
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    if ((v9 & 0x80) == 0) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_15:
  if ((v9 & 0x300) != 0)
  {
    if ((v9 & 0x100) != 0) {
      *(_DWORD *)(a1 + 132) = *(_DWORD *)(a2 + 132);
    }
    if ((v9 & 0x200) != 0) {
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    }
    *(_DWORD *)(a1 + 40) |= v9;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16FA6E0(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 104));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16FA724@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Factoid");
}

void *sub_16FA734(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16FA7A8(void *a1)
{
  sub_16FA734(a1);

  operator delete();
}

uint64_t sub_16FA7E0(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_16FA7F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(unsigned char *)(a1 + 24) = v14 != 0;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(unsigned char *)(a1 + 24) = v17 != 0;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      uint64_t v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_16FA988(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  int v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      int v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v6 = *(unsigned char *)(a1 + 24);
    *int v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_16FAA6C(uint64_t a1)
{
  uint64_t v1 = 2 * (*(_DWORD *)(a1 + 16) & 1);
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_16FAAAC()
{
  return 1;
}

void *sub_16FAAB4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.FactoidFilter");
}

uint64_t sub_16FAAC4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D4418;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    unsigned int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 40) = &qword_2550250;
  if ((v6 & 4) != 0)
  {
    unint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 40), (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if ((v6 & 8) != 0)
  {
    unsigned int v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v10);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v6 & 0x10) != 0)
  {
    uint64_t v11 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v11);
  }
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

void sub_16FAC38(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16FAC68(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16FAD5C(uint64_t a1)
{
  sub_16FAC68(a1);

  operator delete();
}

uint64_t sub_16FAD94(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0) {
    goto LABEL_27;
  }
  if (v1)
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v1 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v6 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
    }
    goto LABEL_27;
  }
  if ((v1 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_12:
  unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v3 + 23) < 0)
  {
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v3 = 0;
    *(unsigned char *)(v3 + 23) = 0;
    if ((v1 & 4) != 0) {
      goto LABEL_16;
    }
  }
LABEL_5:
  if ((v1 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_20:
  unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v1 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
  *(unsigned char *)unint64_t v5 = 0;
  *(unsigned char *)(v5 + 23) = 0;
  if ((v1 & 0x10) != 0) {
    goto LABEL_24;
  }
LABEL_27:
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(unsigned char *)(result + 56) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v8) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_16FAEB8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v28 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (char *)(*(void *)v28 + 1);
    unsigned int v9 = **(unsigned char **)v28;
    if ((char)**(unsigned char **)v28 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        char v8 = (char *)sub_188C180(*(uint64_t *)v28, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (char *)(*(void *)v28 + 2);
      }
    }
    *(void *)uint64_t v28 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_29;
      case 2u:
        if (v9 != 18) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
        goto LABEL_29;
      case 3u:
        if (v9 != 26) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 40);
        goto LABEL_29;
      case 4u:
        if (v9 != 34) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 48);
        goto LABEL_29;
      case 5u:
        if (v9 != 42) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 56);
LABEL_29:
        uint64_t v19 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v20 = (void *)sub_188C244(v19, *(char **)v28, (uint64_t)a3);
        goto LABEL_30;
      case 6u:
        if (v9 != 48) {
          goto LABEL_38;
        }
        v5 |= 0x20u;
        uint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          uint64_t v26 = sub_188C138((uint64_t)v8, v22);
          *(void *)uint64_t v28 = v26;
          *(unsigned char *)(a1 + 64) = v27 != 0;
          if (!v26) {
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v21 = v8 + 2;
LABEL_37:
          *(void *)uint64_t v28 = v21;
          *(unsigned char *)(a1 + 64) = v22 != 0;
        }
        goto LABEL_31;
      default:
LABEL_38:
        if (v9) {
          BOOL v24 = (v9 & 7) == 4;
        }
        else {
          BOOL v24 = 1;
        }
        if (!v24)
        {
          if (*v7)
          {
            uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = *(char **)v28;
          }
          unint64_t v20 = sub_1885AC0(v9, v25, v8, a3);
LABEL_30:
          *(void *)uint64_t v28 = v20;
          if (!v20) {
            goto LABEL_50;
          }
LABEL_31:
          if (sub_11947B8((uint64_t)a3, (char **)v28, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_50:
        }
          *(void *)uint64_t v28 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v28;
    }
  }
}

unsigned char *sub_16FB1CC(uint64_t a1, unsigned char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_16;
  }
LABEL_13:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v7 = *(unsigned char *)(a1 + 64);
  *unint64_t v4 = 48;
  v4[1] = v7;
  v4 += 2;
LABEL_16:
  uint64_t v8 = *(void *)(a1 + 8);
  if ((v8 & 1) == 0) {
    return v4;
  }
  unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v10 + 31) < 0)
  {
    unsigned int v11 = *(void **)(v10 + 8);
    uint64_t v12 = *(void *)(v10 + 16);
  }
  else
  {
    unsigned int v11 = (void *)(v10 + 8);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + 31);
  }
  if (*a3 - (void)v4 >= (int)v12)
  {
    uint64_t v13 = (int)v12;
    memcpy(v4, v11, (int)v12);
    v4 += v13;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v11, v12, v4);
}

uint64_t sub_16FB368(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_26:
    unint64_t v18 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
    uint64_t v20 = *(void *)(v18 + 8);
    if ((v19 & 0x80u) == 0) {
      uint64_t v20 = v19;
    }
    v2 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 0x10) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
  unint64_t v15 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v2 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_14:
  if ((v1 & 0x10) != 0)
  {
LABEL_15:
    unint64_t v10 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_18:
  if ((v1 & 0x20) != 0) {
    uint64_t v3 = v2 + 2;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v21 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v3 += v22;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_16FB528(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_20;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_20:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v16 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    std::string::size_type v17 = v3->__r_.__value_.__l.__size_;
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0)
      {
LABEL_9:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_10;
      }
LABEL_8:
      v3[2].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 64);
      goto LABEL_9;
    }
LABEL_26:
    uint64_t v19 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 0x10u;
    std::string::size_type v20 = v3->__r_.__value_.__l.__size_;
    unint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      unint64_t v21 = (uint64_t *)*v21;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2].__r_.__value_.__l.__size_, v19, v21);
    if ((v4 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16FB6C8()
{
  return 1;
}

void *sub_16FB6D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CaptionedPhoto.JoeColor");
}

uint64_t sub_16FB6E0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D4498;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(void *)(a1 + 56) = &qword_2550250;
  *(void *)(a1 + 64) = &qword_2550250;
  *(void *)(a1 + 72) = &qword_2550250;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(void *)(a1 + 112) = 0;
  return a1;
}

void sub_16FB760(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16FB790(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D4498;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    uint64_t v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v7 & 4) != 0)
  {
    unint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v10);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v7 & 8) != 0)
  {
    std::string::size_type v11 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      std::string::size_type v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v11);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 80) = 0;
  if ((v7 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 88) = 0;
  if ((v7 & 0x40) != 0) {
    operator new();
  }
  *(void *)(a1 + 96) = 0;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  return a1;
}

void sub_16FB9A0()
{
}

void *sub_16FBA2C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_16FBAB8((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_16FBAB8(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 48);
  uint64_t v2 = (void ***)(a1 + 48);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  uint64_t result = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2546190)
  {
    uint64_t v5 = *(void *)(a1 + 80);
    if (v5)
    {
      sub_16EB850(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 88);
    if (v6)
    {
      sub_16FAC68(v6);
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 96);
    if (result)
    {
      sub_171A51C((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_16FBBB8(void *a1)
{
  sub_16FBA2C(a1);

  operator delete();
}

uint64_t sub_16FBBF0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x7F) == 0) {
    goto LABEL_10;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_20;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_24:
    unint64_t v8 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v8 + 23) < 0)
    {
      **(unsigned char **)unint64_t v8 = 0;
      *(void *)(v8 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_28;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v8 = 0;
      *(unsigned char *)(v8 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_28;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
LABEL_32:
    uint64_t result = sub_16BF128(*(void *)(a1 + 80));
    if ((v3 & 0x20) == 0)
    {
LABEL_8:
      if ((v3 & 0x40) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
    goto LABEL_33;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_20:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_24;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_24;
    }
  }
LABEL_5:
  if ((v3 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_28:
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_32;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v3 & 0x10) != 0) {
      goto LABEL_32;
    }
  }
LABEL_7:
  if ((v3 & 0x20) == 0) {
    goto LABEL_8;
  }
LABEL_33:
  uint64_t result = sub_16FAD94(*(void *)(a1 + 88));
  if ((v3 & 0x40) != 0) {
LABEL_9:
  }
    uint64_t result = sub_16FBD64(*(void *)(a1 + 96));
LABEL_10:
  *(unsigned char *)(a1 + 104) = 0;
  if ((v3 & 0x3F00) != 0)
  {
    *(void *)(a1 + 112) = 0;
    *(void *)(a1 + 105) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_16FBD64(uint64_t a1)
{
  sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t result = sub_188CC00(a1 + 48);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_11:
      unint64_t v5 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_15;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_15;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_22;
      }
LABEL_19:
      unint64_t v7 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
      }
      goto LABEL_22;
    }
    unint64_t v4 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_11;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_11;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_15:
    unint64_t v6 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) == 0) {
        goto LABEL_22;
      }
    }
    goto LABEL_19;
  }
LABEL_22:
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 32) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_16FBE98(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v58 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v58 + 1);
    unsigned int v9 = **(unsigned char **)v58;
    if ((char)**(unsigned char **)v58 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v58, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v58 + 2);
      }
    }
    *(void *)int v58 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 48);
        goto LABEL_25;
      case 2u:
        if (v9 != 18) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 56);
        goto LABEL_25;
      case 3u:
        if (v9 != 26) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 64);
        goto LABEL_25;
      case 4u:
        if (v9 != 34) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v17 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        std::string::size_type v14 = (void *)(a1 + 72);
LABEL_25:
        unint64_t v18 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v19 = (uint64_t)sub_188C244(v18, *(char **)v58, (uint64_t)a3);
        goto LABEL_85;
      case 5u:
        if (v9 != 42) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        std::string::size_type v20 = *(void **)(a1 + 80);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v21 = (void *)*v21;
          }
          std::string::size_type v20 = sub_1788710((uint64_t)v21);
          *(void *)(a1 + 80) = v20;
          uint64_t v8 = *(unsigned __int8 **)v58;
        }
        uint64_t v19 = sub_1550A68(a3, (uint64_t)v20, v8);
        goto LABEL_85;
      case 6u:
        if (v9 != 48) {
          goto LABEL_76;
        }
        v5 |= 0x80u;
        uint64_t v22 = (char *)(v8 + 1);
        uint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v46 = sub_188C138((uint64_t)v8, v23);
          *(void *)int v58 = v46;
          *(unsigned char *)(a1 + 104) = v47 != 0;
          if (!v46) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_36:
          *(void *)int v58 = v22;
          *(unsigned char *)(a1 + 104) = v23 != 0;
        }
        goto LABEL_86;
      case 7u:
        if (v9 != 56) {
          goto LABEL_76;
        }
        v5 |= 0x100u;
        uint64_t v25 = (char *)(v8 + 1);
        uint64_t v26 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_41;
        }
        int v27 = *v25;
        uint64_t v26 = v26 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v48 = sub_188C138((uint64_t)v8, v26);
          *(void *)int v58 = v48;
          *(unsigned char *)(a1 + 105) = v49 != 0;
          if (!v48) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v25 = (char *)(v8 + 2);
LABEL_41:
          *(void *)int v58 = v25;
          *(unsigned char *)(a1 + 105) = v26 != 0;
        }
        goto LABEL_86;
      case 8u:
        if (v9 != 64) {
          goto LABEL_76;
        }
        v5 |= 0x200u;
        uint64_t v28 = (char *)(v8 + 1);
        uint64_t v29 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_46;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v50 = sub_188C138((uint64_t)v8, v29);
          *(void *)int v58 = v50;
          *(unsigned char *)(a1 + 106) = v51 != 0;
          if (!v50) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v28 = (char *)(v8 + 2);
LABEL_46:
          *(void *)int v58 = v28;
          *(unsigned char *)(a1 + 106) = v29 != 0;
        }
        goto LABEL_86;
      case 9u:
        if (v9 != 72) {
          goto LABEL_76;
        }
        v5 |= 0x400u;
        uint64_t v31 = (char *)(v8 + 1);
        uint64_t v32 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_51;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v52 = sub_188C138((uint64_t)v8, v32);
          *(void *)int v58 = v52;
          *(unsigned char *)(a1 + 107) = v53 != 0;
          if (!v52) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v31 = (char *)(v8 + 2);
LABEL_51:
          *(void *)int v58 = v31;
          *(unsigned char *)(a1 + 107) = v32 != 0;
        }
        goto LABEL_86;
      case 0xAu:
        if (v9 != 80) {
          goto LABEL_76;
        }
        v5 |= 0x800u;
        uint64_t v34 = (char *)(v8 + 1);
        uint64_t v35 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_56;
        }
        int v36 = *v34;
        uint64_t v35 = v35 + (v36 << 7) - 128;
        if (v36 < 0)
        {
          uint64_t v54 = sub_188C138((uint64_t)v8, v35);
          *(void *)int v58 = v54;
          *(unsigned char *)(a1 + 108) = v55 != 0;
          if (!v54) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v34 = (char *)(v8 + 2);
LABEL_56:
          *(void *)int v58 = v34;
          *(unsigned char *)(a1 + 108) = v35 != 0;
        }
        goto LABEL_86;
      case 0xBu:
        if (v9 != 90) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        uint64_t v37 = *(void *)(a1 + 88);
        if (!v37)
        {
          uint64_t v38 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v38 = (void *)*v38;
          }
          uint64_t v37 = sub_178944C((uint64_t)v38);
          *(void *)(a1 + 88) = v37;
          uint64_t v8 = *(unsigned __int8 **)v58;
        }
        uint64_t v19 = sub_16FC4F8(a3, v37, v8);
        goto LABEL_85;
      case 0xCu:
        if (v9 != 98) {
          goto LABEL_76;
        }
        *(_DWORD *)(a1 + 40) |= 0x40u;
        uint64_t v39 = *(void **)(a1 + 96);
        if (!v39)
        {
          BOOL v40 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            BOOL v40 = (void *)*v40;
          }
          uint64_t v39 = sub_178B1A8((uint64_t)v40);
          *(void *)(a1 + 96) = v39;
          uint64_t v8 = *(unsigned __int8 **)v58;
        }
        uint64_t v19 = sub_16FC588(a3, (uint64_t)v39, v8);
        goto LABEL_85;
      case 0xDu:
        if (v9 != 105) {
          goto LABEL_76;
        }
        v5 |= 0x2000u;
        *(void *)(a1 + 112) = *(void *)v8;
        *(void *)int v58 = v8 + 8;
        goto LABEL_86;
      case 0xEu:
        if (v9 != 112) {
          goto LABEL_76;
        }
        v5 |= 0x1000u;
        uint64_t v41 = (char *)(v8 + 1);
        uint64_t v42 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_75;
        }
        int v43 = *v41;
        uint64_t v42 = v42 + (v43 << 7) - 128;
        if (v43 < 0)
        {
          uint64_t v56 = sub_188C138((uint64_t)v8, v42);
          *(void *)int v58 = v56;
          *(unsigned char *)(a1 + 109) = v57 != 0;
          if (!v56) {
            goto LABEL_103;
          }
        }
        else
        {
          uint64_t v41 = (char *)(v8 + 2);
LABEL_75:
          *(void *)int v58 = v41;
          *(unsigned char *)(a1 + 109) = v42 != 0;
        }
        goto LABEL_86;
      default:
LABEL_76:
        if (v9) {
          BOOL v44 = (v9 & 7) == 4;
        }
        else {
          BOOL v44 = 1;
        }
        if (!v44)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v45 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v45 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v58;
            }
            uint64_t v19 = (uint64_t)sub_1885AC0(v9, v45, (char *)v8, a3);
          }
          else
          {
            uint64_t v19 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2546190, (uint64_t *)(a1 + 8), a3);
          }
LABEL_85:
          *(void *)int v58 = v19;
          if (!v19) {
            goto LABEL_103;
          }
LABEL_86:
          if (sub_11947B8((uint64_t)a3, (char **)v58, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_103:
        }
          *(void *)int v58 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v58;
    }
  }
}

uint64_t sub_16FC4F8(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16FAEB8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_16FC588(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_171A644(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_16FC618(uint64_t a1, unsigned char *a2, unint64_t *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x80) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 80);
  *unint64_t v4 = 42;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  unint64_t v4 = sub_16EBC08(v7, v9, a3);
  if ((v6 & 0x80) == 0)
  {
LABEL_7:
    if ((v6 & 0x100) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v10 = *(unsigned char *)(a1 + 104);
  *unint64_t v4 = 48;
  v4[1] = v10;
  v4 += 2;
  if ((v6 & 0x100) == 0)
  {
LABEL_8:
    if ((v6 & 0x200) == 0) {
      goto LABEL_9;
    }
    goto LABEL_32;
  }
LABEL_29:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v11 = *(unsigned char *)(a1 + 105);
  *unint64_t v4 = 56;
  v4[1] = v11;
  v4 += 2;
  if ((v6 & 0x200) == 0)
  {
LABEL_9:
    if ((v6 & 0x400) == 0) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v12 = *(unsigned char *)(a1 + 106);
  *unint64_t v4 = 64;
  v4[1] = v12;
  v4 += 2;
  if ((v6 & 0x400) == 0)
  {
LABEL_10:
    if ((v6 & 0x800) == 0) {
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_35:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v13 = *(unsigned char *)(a1 + 107);
  *unint64_t v4 = 72;
  v4[1] = v13;
  v4 += 2;
  if ((v6 & 0x800) == 0)
  {
LABEL_11:
    if ((v6 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_38:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v14 = *(unsigned char *)(a1 + 108);
  *unint64_t v4 = 80;
  v4[1] = v14;
  v4 += 2;
  if ((v6 & 0x20) == 0)
  {
LABEL_12:
    if ((v6 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_47;
  }
LABEL_41:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v15 = *(void *)(a1 + 88);
  *unint64_t v4 = 90;
  unsigned int v16 = *(_DWORD *)(v15 + 20);
  v4[1] = v16;
  if (v16 > 0x7F) {
    uint64_t v17 = sub_188A9CC(v16, v4 + 1);
  }
  else {
    uint64_t v17 = v4 + 2;
  }
  unint64_t v4 = sub_16FB1CC(v15, v17, a3);
  if ((v6 & 0x40) == 0)
  {
LABEL_13:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_53;
  }
LABEL_47:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v18 = *(void *)(a1 + 96);
  *unint64_t v4 = 98;
  unsigned int v19 = *(_DWORD *)(v18 + 44);
  v4[1] = v19;
  if (v19 > 0x7F) {
    std::string::size_type v20 = sub_188A9CC(v19, v4 + 1);
  }
  else {
    std::string::size_type v20 = v4 + 2;
  }
  unint64_t v4 = sub_171A9B4(v18, v20, a3);
  if ((v6 & 0x2000) == 0)
  {
LABEL_14:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_56;
  }
LABEL_53:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v21 = *(void *)(a1 + 112);
  *unint64_t v4 = 105;
  *(void *)(v4 + 1) = v21;
  v4 += 9;
  if ((v6 & 0x1000) != 0)
  {
LABEL_56:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v22 = *(unsigned char *)(a1 + 109);
    *unint64_t v4 = 112;
    v4[1] = v22;
    v4 += 2;
  }
LABEL_59:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    uint64_t v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    uint64_t v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_16FCA60(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if (!(_BYTE)v4) {
    goto LABEL_12;
  }
  if (v4)
  {
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    uint64_t v3 = v2 + v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_34;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v12 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v13 = *(unsigned __int8 *)(v12 + 23);
  uint64_t v14 = *(void *)(v12 + 8);
  if ((v13 & 0x80u) == 0) {
    uint64_t v14 = v13;
  }
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_37;
  }
LABEL_34:
  unint64_t v15 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v16 = *(unsigned __int8 *)(v15 + 23);
  uint64_t v17 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    uint64_t v17 = v16;
  }
  v3 += v17 + ((9 * (__clz(v17 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) == 0)
  {
LABEL_6:
    if ((v4 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_40;
  }
LABEL_37:
  unint64_t v18 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
  uint64_t v20 = *(void *)(v18 + 8);
  if ((v19 & 0x80u) == 0) {
    uint64_t v20 = v19;
  }
  v3 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) == 0)
  {
LABEL_7:
    if ((v4 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_41;
  }
LABEL_40:
  uint64_t v21 = sub_16EBD94(*(void *)(a1 + 80));
  v3 += v21 + ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x20) == 0)
  {
LABEL_8:
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_41:
  uint64_t v22 = sub_16FB368(*(void *)(a1 + 88));
  v3 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x40) != 0)
  {
LABEL_9:
    uint64_t v5 = sub_171ABD0(*(void *)(a1 + 96));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v4 & 0x80) != 0) {
    v3 += 2;
  }
LABEL_12:
  if ((v4 & 0x3F00) != 0)
  {
    uint64_t v6 = v3 + 2;
    if ((v4 & 0x100) == 0) {
      uint64_t v6 = v3;
    }
    if ((v4 & 0x200) != 0) {
      v6 += 2;
    }
    if ((v4 & 0x400) != 0) {
      v6 += 2;
    }
    if ((v4 & 0x800) != 0) {
      v6 += 2;
    }
    if ((v4 & 0x1000) != 0) {
      v6 += 2;
    }
    if ((v4 & 0x2000) != 0) {
      uint64_t v3 = v6 + 9;
    }
    else {
      uint64_t v3 = v6;
    }
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v23 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    v3 += v24;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_16FCCEC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      unint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        unint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_31;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_34;
    }
LABEL_31:
    uint64_t v13 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_37;
    }
LABEL_34:
    uint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v17 = *(void *)(a1 + 8);
    unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 72), v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_45;
    }
LABEL_37:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v19 = *(void **)(a1 + 80);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      uint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        uint64_t v21 = (void *)*v21;
      }
      uint64_t v19 = sub_1788710((uint64_t)v21);
      *(void *)(a1 + 80) = v19;
    }
    if (*(void *)(a2 + 80)) {
      uint64_t v22 = *(uint64_t (****)())(a2 + 80);
    }
    else {
      uint64_t v22 = &off_2545A18;
    }
    sub_16BF9C4((uint64_t)v19, (uint64_t)v22);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_53;
    }
LABEL_45:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    unint64_t v23 = *(std::string **)(a1 + 88);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      unint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        unint64_t v25 = (void *)*v25;
      }
      unint64_t v23 = (std::string *)sub_178944C((uint64_t)v25);
      *(void *)(a1 + 88) = v23;
    }
    if (*(void *)(a2 + 88)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 88);
    }
    else {
      uint64_t v26 = &off_2546148;
    }
    sub_16FB528(v23, (uint64_t)v26);
    if ((v4 & 0x40) == 0)
    {
LABEL_9:
      if ((v4 & 0x80) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      goto LABEL_11;
    }
LABEL_53:
    *(_DWORD *)(a1 + 40) |= 0x40u;
    uint64_t v27 = *(void **)(a1 + 96);
    if (!v27)
    {
      uint64_t v28 = *(void *)(a1 + 8);
      uint64_t v29 = (void *)(v28 & 0xFFFFFFFFFFFFFFFCLL);
      if (v28) {
        uint64_t v29 = (void *)*v29;
      }
      uint64_t v27 = sub_178B1A8((uint64_t)v29);
      *(void *)(a1 + 96) = v27;
    }
    if (*(void *)(a2 + 96)) {
      int v30 = *(uint64_t (****)())(a2 + 96);
    }
    else {
      int v30 = &off_2546DD0;
    }
    sub_16FCFC4((uint64_t)v27, (uint64_t)v30);
    if ((v4 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v4 & 0x3F00) == 0) {
    goto LABEL_21;
  }
  if ((v4 & 0x100) != 0)
  {
    *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
    if ((v4 & 0x200) == 0)
    {
LABEL_15:
      if ((v4 & 0x400) == 0) {
        goto LABEL_16;
      }
      goto LABEL_64;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_15;
  }
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  if ((v4 & 0x400) == 0)
  {
LABEL_16:
    if ((v4 & 0x800) == 0) {
      goto LABEL_17;
    }
    goto LABEL_65;
  }
LABEL_64:
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  if ((v4 & 0x800) == 0)
  {
LABEL_17:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_18;
    }
LABEL_66:
    *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_19;
  }
LABEL_65:
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  if ((v4 & 0x1000) != 0) {
    goto LABEL_66;
  }
LABEL_18:
  if ((v4 & 0x2000) != 0) {
LABEL_19:
  }
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
LABEL_20:
  *(_DWORD *)(a1 + 40) |= v4;
LABEL_21:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

void sub_16FCFC4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (const std::string **)(*(void *)(a2 + 64) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(a1 + 48, v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_7;
    }
LABEL_13:
    uint64_t v13 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v14 = *(void *)(a1 + 8);
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), v13, v15);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_22;
      }
      goto LABEL_19;
    }
    goto LABEL_16;
  }
  uint64_t v10 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 1u;
  uint64_t v11 = *(void *)(a1 + 8);
  unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
  if (v11) {
    unint64_t v12 = (uint64_t *)*v12;
  }
  sub_1881DF4((std::string **)(a1 + 72), v10, v12);
  if ((v9 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_7:
  if ((v9 & 4) == 0) {
    goto LABEL_8;
  }
LABEL_16:
  uint64_t v16 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v17 = *(void *)(a1 + 8);
  unint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
  if (v17) {
    unint64_t v18 = (uint64_t *)*v18;
  }
  sub_1881DF4((std::string **)(a1 + 88), v16, v18);
  if ((v9 & 8) != 0)
  {
LABEL_19:
    uint64_t v19 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 96), v19, v21);
  }
LABEL_22:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v22 = *(void *)(a2 + 8);
  if (v22)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v22 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16FD18C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 0x10) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 80) + 16);
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 0x40) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 96) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_16FD1EC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16FD1F4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CaptionedPhoto");
}

uint64_t sub_16FD204(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D4518;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = &qword_2550250;
  *(_DWORD *)(a1 + 104) = 0;
  return a1;
}

void sub_16FD288(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16FD2B8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D4518;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (std::string *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_154B658((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 96) = &qword_2550250;
  if (*(unsigned char *)(a2 + 40))
  {
    unint64_t v18 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v18);
  }
  *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
  return a1;
}

void sub_16FD470(_Unwind_Exception *a1)
{
  sub_12C1DB8(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16FD4D4(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 96);
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_154B128((void *)(a1 + 72));
  sub_12C1DB8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16FD594(uint64_t a1)
{
  sub_16FD4D4(a1);

  operator delete();
}

uint64_t sub_16FD5CC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_15B2C80(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_16FBBF0(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  if (*(unsigned char *)(a1 + 40))
  {
    unint64_t v9 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v9 + 23) < 0)
    {
      **(unsigned char **)unint64_t v9 = 0;
      *(void *)(v9 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v9 = 0;
      *(unsigned char *)(v9 + 23) = 0;
    }
  }
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 96) = 0;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_16FD6B0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v35 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v35 + 1);
    unsigned int v9 = **(unsigned char **)v35;
    if ((char)**(unsigned char **)v35 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v35, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v35 + 2);
      }
    }
    *(void *)uint64_t v35 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_38;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (std::string *)sub_1880F84((void *)(a1 + 96), v13);
        int v15 = (void *)sub_188C244(v14, *(char **)v35, (uint64_t)a3);
        goto LABEL_47;
      case 2u:
        if (v9 != 18) {
          goto LABEL_38;
        }
        uint64_t v16 = v8 - 1;
        while (1)
        {
          uint64_t v17 = (unsigned __int8 *)(v16 + 1);
          *(void *)uint64_t v35 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 64);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 56), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 56) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15C1B30(*(void *)(a1 + 48));
            uint64_t v20 = sub_188CDC8(a1 + 48, (uint64_t)v21);
            uint64_t v17 = *(unsigned __int8 **)v35;
          }
          uint64_t v16 = (char *)sub_125CF74(a3, v20, v17);
          *(void *)uint64_t v35 = v16;
          if (!v16) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
            goto LABEL_48;
          }
        }
      case 3u:
        if (v9 != 26) {
          goto LABEL_38;
        }
        uint64_t v22 = v8 - 1;
        while (1)
        {
          unint64_t v23 = (unsigned __int8 *)(v22 + 1);
          *(void *)uint64_t v35 = v22 + 1;
          uint64_t v24 = *(_DWORD **)(a1 + 88);
          if (v24 && (uint64_t v25 = *(int *)(a1 + 80), (int)v25 < *v24))
          {
            *(_DWORD *)(a1 + 80) = v25 + 1;
            uint64_t v26 = *(void *)&v24[2 * v25 + 2];
          }
          else
          {
            uint64_t v27 = sub_17894DC(*(void *)(a1 + 72));
            uint64_t v26 = sub_188CDC8(a1 + 72, v27);
            unint64_t v23 = *(unsigned __int8 **)v35;
          }
          uint64_t v22 = (char *)sub_15435C4(a3, v26, v23);
          *(void *)uint64_t v35 = v22;
          if (!v22) {
            goto LABEL_55;
          }
          if (*(void *)a3 <= (unint64_t)v22 || *v22 != 26) {
            goto LABEL_48;
          }
        }
      case 4u:
        if (v9 != 32) {
          goto LABEL_38;
        }
        v5 |= 2u;
        uint64_t v29 = v8 + 1;
        LODWORD(v28) = *v8;
        if ((v28 & 0x80) == 0) {
          goto LABEL_37;
        }
        int v30 = *v29;
        uint64_t v28 = v28 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v33 = sub_188C138((uint64_t)v8, v28);
          *(void *)uint64_t v35 = v33;
          *(_DWORD *)(a1 + 104) = v34;
          if (!v33) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v29 = v8 + 2;
LABEL_37:
          *(void *)uint64_t v35 = v29;
          *(_DWORD *)(a1 + 104) = v28;
        }
        goto LABEL_48;
      default:
LABEL_38:
        if (v9) {
          BOOL v31 = (v9 & 7) == 4;
        }
        else {
          BOOL v31 = 1;
        }
        if (!v31)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v32 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v32 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(char **)v35;
            }
            int v15 = sub_1885AC0(v9, v32, v8, a3);
          }
          else
          {
            int v15 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2546208, (uint64_t *)(a1 + 8), a3);
          }
LABEL_47:
          *(void *)uint64_t v35 = v15;
          if (!v15) {
            goto LABEL_55;
          }
LABEL_48:
          if (sub_11947B8((uint64_t)a3, (char **)v35, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_55:
        }
          *(void *)uint64_t v35 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v35;
    }
  }
}

char *sub_16FDA20(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6) {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  int v7 = *(_DWORD *)(a1 + 56);
  if (v7)
  {
    for (int i = 0; i != v7; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v9 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 18;
      unsigned int v10 = *(_DWORD *)(v9 + 20);
      v4[1] = v10;
      if (v10 > 0x7F) {
        unsigned int v11 = sub_188A9CC(v10, v4 + 1);
      }
      else {
        unsigned int v11 = v4 + 2;
      }
      int v4 = sub_15B2EA4(v9, v11, a3);
    }
  }
  int v12 = *(_DWORD *)(a1 + 80);
  if (v12)
  {
    for (int j = 0; j != v12; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *int v4 = 26;
      unsigned int v15 = *(_DWORD *)(v14 + 44);
      v4[1] = v15;
      if (v15 > 0x7F) {
        uint64_t v16 = sub_188A9CC(v15, v4 + 1);
      }
      else {
        uint64_t v16 = v4 + 2;
      }
      int v4 = sub_16FC618(v14, v16, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v17 = *(int *)(a1 + 104);
    *int v4 = 32;
    v4[1] = v17;
    if (v17 > 0x7F)
    {
      v4[1] = v17 | 0x80;
      unint64_t v18 = v17 >> 7;
      v4[2] = v17 >> 7;
      v4 += 3;
      if (v17 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v19 = v18 >> 14;
          v18 >>= 7;
          *v4++ = v18;
        }
        while (v19);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return v4;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    unint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    unint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(v4, v23, (int)v24);
    v4 += v25;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v23, v24, v4);
}

uint64_t sub_16FDCAC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_15B2F90(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_16FCA60(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 3) != 0)
  {
    if (v17)
    {
      unint64_t v18 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v19 = *(unsigned __int8 *)(v18 + 23);
      uint64_t v20 = *(void *)(v18 + 8);
      if ((v19 & 0x80u) == 0) {
        uint64_t v20 = v19;
      }
      v11 += v20 + ((9 * (__clz(v20 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v17 & 2) != 0)
    {
      int v21 = *(_DWORD *)(a1 + 104);
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v21 >= 0) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 11;
      }
      v11 += v23;
    }
  }
  uint64_t v24 = *(void *)(a1 + 8);
  if (v24)
  {
    unint64_t v26 = v24 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v26 + 31) < 0) {
      uint64_t v27 = *(void *)(v26 + 16);
    }
    else {
      uint64_t v27 = *(unsigned __int8 *)(v26 + 31);
    }
    v11 += v27;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_16FDE34(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_12C1E38((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_154B658((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    uint64_t v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      uint64_t v15 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v16 = *(void *)(a1 + 8);
      int v17 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        int v17 = (uint64_t *)*v17;
      }
      sub_1881DF4((std::string **)(a1 + 96), v15, v17);
    }
    if ((v14 & 2) != 0) {
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    }
    *(_DWORD *)(a1 + 40) |= v14;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_16FDFCC(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 80);
  do
  {
    BOOL v3 = (int)v2 < 1;
    if ((int)v2 < 1) {
      break;
    }
    uint64_t v4 = v2 - 1;
    char v5 = sub_16FD18C(*(void *)(*(void *)(a1 + 88) + 8 * v2));
    uint64_t v2 = v4;
  }
  while ((v5 & 1) != 0);
  return v3;
}

void *sub_16FE034@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategorizedPhotos");
}

uint64_t sub_16FE044(uint64_t a1)
{
  BOOL v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  char v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_186F4BC((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16FE0F0(uint64_t a1)
{
  sub_16FE044(a1);

  operator delete();
}

uint64_t sub_16FE128(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    BOOL v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16B6BB4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  if (*(unsigned char *)(v1 + 16))
  {
    unint64_t v5 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
  }
  char v7 = *(unsigned char *)(v1 + 8);
  uint64_t v6 = v1 + 8;
  *(_DWORD *)(v6 + 8) = 0;
  if (v7)
  {
    return sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

uint64_t sub_16FE1D8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    return *(void *)v24;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = (char *)(*(void *)v24 + 1);
    unsigned int v8 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v24, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    int v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
    int v14 = (void *)sub_188C244(v17, *(char **)v24, (uint64_t)a3);
LABEL_24:
    *(void *)uint64_t v24 = v14;
    if (!v14) {
      goto LABEL_39;
    }
LABEL_25:
    if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
      return *(void *)v24;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    uint64_t v18 = v7 - 1;
    while (1)
    {
      uint64_t v19 = (unsigned __int8 *)(v18 + 1);
      *(void *)uint64_t v24 = v18 + 1;
      uint64_t v20 = *(_DWORD **)(a1 + 40);
      if (v20 && (uint64_t v21 = *(int *)(a1 + 32), (int)v21 < *v20))
      {
        *(_DWORD *)(a1 + 32) = v21 + 1;
        uint64_t v22 = *(void *)&v20[2 * v21 + 2];
      }
      else
      {
        uint64_t v23 = sub_1786128(*(void *)(a1 + 24));
        uint64_t v22 = sub_188CDC8(a1 + 24, (uint64_t)v23);
        uint64_t v19 = *(unsigned __int8 **)v24;
      }
      uint64_t v18 = sub_16C247C(a3, v22, v19);
      *(void *)uint64_t v24 = v18;
      if (!v18) {
        goto LABEL_39;
      }
      if (*(void *)a3 <= (unint64_t)v18 || *v18 != 10) {
        goto LABEL_25;
      }
    }
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = *(char **)v24;
    }
    int v14 = sub_1885AC0(v8, v13, v7, a3);
    goto LABEL_24;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v24;
  }
LABEL_39:
  *(void *)uint64_t v24 = 0;
  return *(void *)v24;
}

char *sub_16FE3D8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 32);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_16B6DC8(v8, (unint64_t)v10, a3);
    }
  }
  if (*(unsigned char *)(a1 + 16)) {
    __dst = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16FE540(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16B6F6C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
    uint64_t v10 = *(void *)(v8 + 8);
    if ((v9 & 0x80u) == 0) {
      uint64_t v10 = v9;
    }
    v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_16FE638(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_18711E0(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    unint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v9 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v11 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v11 = (uint64_t *)*v11;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[2], v9, v11);
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_16FE740()
{
  return 1;
}

void *sub_16FE748@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CaptionedPhotoFilter");
}

uint64_t sub_16FE758(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D4618;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = &qword_2550250;
  *(void *)(a1 + 80) = 0;
  *(_WORD *)(a1 + 88) = 0;
  return a1;
}

void sub_16FE7D8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16FE808(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_186F4BC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16FE8BC(uint64_t a1)
{
  sub_16FE808(a1);

  operator delete();
}

uint64_t sub_16FE8F4(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16B6BB4(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v7 + 23) < 0)
    {
      **(unsigned char **)unint64_t v7 = 0;
      *(void *)(v7 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v7 = 0;
      *(unsigned char *)(v7 + 23) = 0;
    }
  }
  if ((v6 & 0x1E) != 0)
  {
    *(_WORD *)(a1 + 88) = 0;
    *(void *)(a1 + 80) = 0;
  }
  char v9 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = a1 + 8;
  *(_DWORD *)(v8 + 32) = 0;
  if (v9)
  {
    return sub_188B4AC((uint64_t *)v8);
  }
  return result;
}

uint64_t sub_16FE9BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v44 + 1);
    unsigned int v9 = **(unsigned char **)v44;
    if ((char)**(unsigned char **)v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v44 + 2);
      }
    }
    *(void *)BOOL v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_43;
        }
        uint64_t v12 = v8 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          *(void *)BOOL v44 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 64);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 56), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 56) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            int v17 = sub_1786128(*(void *)(a1 + 48));
            uint64_t v16 = sub_188CDC8(a1 + 48, (uint64_t)v17);
            unint64_t v13 = *(unsigned __int8 **)v44;
          }
          uint64_t v12 = sub_16C247C(a3, v16, v13);
          *(void *)BOOL v44 = v12;
          if (!v12) {
            goto LABEL_66;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_53;
          }
        }
      case 2u:
        if (v9 != 18) {
          goto LABEL_43;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (uint64_t *)*v19;
        }
        uint64_t v20 = (std::string *)sub_1880F84((void *)(a1 + 72), v19);
        uint64_t v21 = (void *)sub_188C244(v20, *(char **)v44, (uint64_t)a3);
        goto LABEL_52;
      case 3u:
        if (v9 != 24) {
          goto LABEL_43;
        }
        v5 |= 2u;
        uint64_t v23 = v8 + 1;
        LODWORD(v22) = *v8;
        if ((v22 & 0x80) == 0) {
          goto LABEL_27;
        }
        int v24 = *v23;
        uint64_t v22 = v22 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v36 = sub_188C138((uint64_t)v8, v22);
          *(void *)BOOL v44 = v36;
          *(_DWORD *)(a1 + 80) = v37;
          if (!v36) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v23 = v8 + 2;
LABEL_27:
          *(void *)BOOL v44 = v23;
          *(_DWORD *)(a1 + 80) = v22;
        }
        goto LABEL_53;
      case 4u:
        if (v9 != 32) {
          goto LABEL_43;
        }
        v5 |= 4u;
        unint64_t v26 = v8 + 1;
        LODWORD(v25) = *v8;
        if ((v25 & 0x80) == 0) {
          goto LABEL_32;
        }
        int v27 = *v26;
        uint64_t v25 = v25 + (v27 << 7) - 128;
        if (v27 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v25);
          *(void *)BOOL v44 = v38;
          *(_DWORD *)(a1 + 84) = v39;
          if (!v38) {
            goto LABEL_66;
          }
        }
        else
        {
          unint64_t v26 = v8 + 2;
LABEL_32:
          *(void *)BOOL v44 = v26;
          *(_DWORD *)(a1 + 84) = v25;
        }
        goto LABEL_53;
      case 5u:
        if (v9 != 40) {
          goto LABEL_43;
        }
        v5 |= 8u;
        uint64_t v28 = v8 + 1;
        uint64_t v29 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_37;
        }
        int v30 = *v28;
        uint64_t v29 = v29 + (v30 << 7) - 128;
        if (v30 < 0)
        {
          uint64_t v40 = sub_188C138((uint64_t)v8, v29);
          *(void *)BOOL v44 = v40;
          *(unsigned char *)(a1 + 88) = v41 != 0;
          if (!v40) {
            goto LABEL_66;
          }
        }
        else
        {
          uint64_t v28 = v8 + 2;
LABEL_37:
          *(void *)BOOL v44 = v28;
          *(unsigned char *)(a1 + 88) = v29 != 0;
        }
        goto LABEL_53;
      case 6u:
        if (v9 != 48) {
          goto LABEL_43;
        }
        v5 |= 0x10u;
        BOOL v31 = v8 + 1;
        uint64_t v32 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_42;
        }
        int v33 = *v31;
        uint64_t v32 = v32 + (v33 << 7) - 128;
        if (v33 < 0)
        {
          uint64_t v42 = sub_188C138((uint64_t)v8, v32);
          *(void *)BOOL v44 = v42;
          *(unsigned char *)(a1 + 89) = v43 != 0;
          if (!v42) {
            goto LABEL_66;
          }
        }
        else
        {
          BOOL v31 = v8 + 2;
LABEL_42:
          *(void *)BOOL v44 = v31;
          *(unsigned char *)(a1 + 89) = v32 != 0;
        }
        goto LABEL_53;
      default:
LABEL_43:
        if (v9) {
          BOOL v34 = (v9 & 7) == 4;
        }
        else {
          BOOL v34 = 1;
        }
        if (!v34)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v35 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v35 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(char **)v44;
            }
            uint64_t v21 = sub_1885AC0(v9, v35, v8, a3);
          }
          else
          {
            uint64_t v21 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_25462B0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_52:
          *(void *)BOOL v44 = v21;
          if (!v21) {
            goto LABEL_66;
          }
LABEL_53:
          if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_66:
        }
          *(void *)BOOL v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v44;
    }
  }
}

char *sub_16FEDD8(uint64_t a1, char *a2, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 56);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_16B6DC8(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 40);
  if (v11) {
    a2 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
  }
  if ((v11 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v12 = *(int *)(a1 + 80);
    *a2 = 24;
    a2[1] = v12;
    if (v12 > 0x7F)
    {
      a2[1] = v12 | 0x80;
      unint64_t v13 = v12 >> 7;
      a2[2] = v12 >> 7;
      a2 += 3;
      if (v12 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v14 = v13 >> 14;
          v13 >>= 7;
          *a2++ = v13;
        }
        while (v14);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    unint64_t v15 = *(int *)(a1 + 84);
    *a2 = 32;
    a2[1] = v15;
    if (v15 > 0x7F)
    {
      a2[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      a2[2] = v15 >> 7;
      a2 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(a2 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *a2++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      a2 += 2;
    }
  }
  if ((v11 & 8) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v18 = *(unsigned char *)(a1 + 88);
    *a2 = 40;
    a2[1] = v18;
    a2 += 2;
  }
  if ((v11 & 0x10) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v19 = *(unsigned char *)(a1 + 89);
    *a2 = 48;
    a2[1] = v19;
    a2 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v20 = *(void *)(a1 + 8);
  if ((v20 & 1) == 0) {
    return a2;
  }
  unint64_t v22 = v20 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v22 + 31) < 0)
  {
    uint64_t v23 = *(void **)(v22 + 8);
    uint64_t v24 = *(void *)(v22 + 16);
  }
  else
  {
    uint64_t v23 = (void *)(v22 + 8);
    LODWORD(v24) = *(unsigned __int8 *)(v22 + 31);
  }
  if (*(void *)a3 - (void)a2 >= (int)v24)
  {
    uint64_t v25 = (int)v24;
    memcpy(a2, v23, (int)v24);
    a2 += v25;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v23, v24, a2);
}

uint64_t sub_16FF0CC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16B6F6C(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x1F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0)
        {
LABEL_23:
          uint64_t v18 = v4 + 2;
          if ((v10 & 8) == 0) {
            uint64_t v18 = v4;
          }
          if ((v10 & 0x10) != 0) {
            uint64_t v4 = v18 + 2;
          }
          else {
            uint64_t v4 = v18;
          }
          goto LABEL_28;
        }
LABEL_19:
        int v16 = *(_DWORD *)(a1 + 84);
        if (v16 < 0) {
          uint64_t v17 = 11;
        }
        else {
          uint64_t v17 = ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
        }
        v4 += v17;
        goto LABEL_23;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    int v14 = *(_DWORD *)(a1 + 80);
    if (v14 < 0) {
      uint64_t v15 = 11;
    }
    else {
      uint64_t v15 = ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v15;
    if ((v10 & 4) == 0) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
LABEL_28:
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v4 += v22;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_16FF25C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_18711E0((std::string *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x1F) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_20;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_21;
    }
LABEL_20:
    *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_12;
      }
LABEL_10:
      *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
      goto LABEL_11;
    }
LABEL_21:
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    if ((v9 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16FF3C8(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_16FF3D0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.CategorizedPhotosFilter");
}

void *sub_16FF3E0(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D4698;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = 0;
  return a1;
}

void sub_16FF444(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_16FF474(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  uint64_t v4 = a1 + 16;
  *(void *)a1 = off_24D4698;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v4, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_16FF544()
{
}

uint64_t sub_16FF5A0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2546310)
  {
    int v6 = *(void **)(a1 + 48);
    if (v6)
    {
      sub_16FBA2C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16FF660(uint64_t a1)
{
  sub_16FF5A0(a1);

  operator delete();
}

uint64_t sub_16FF698(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_16FBBF0(*(void *)(a1 + 48));
  }
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_16FF6FC(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    int v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        int v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        int v6 = v16 + 2;
      }
    }
    int v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v12 = *(void *)(a1 + 48);
    if (!v12)
    {
      uint64_t v13 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v13 = (void *)*v13;
      }
      uint64_t v12 = sub_17894DC((uint64_t)v13);
      *(void *)(a1 + 48) = v12;
      int v6 = v16;
    }
    unint64_t v11 = (char *)sub_15435C4(a3, v12, (unsigned __int8 *)v6);
LABEL_22:
    int v16 = v11;
    if (!v11) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if ((v7 - 8000) >> 6 > 0x7C)
    {
      if (*v5)
      {
        int v14 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v6 = v16;
      }
      unint64_t v11 = (char *)sub_1885AC0(v7, v14, v6, a3);
    }
    else
    {
      unint64_t v11 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v7, v6, (uint64_t)&off_2546310, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_22;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_16FF8A0(uint64_t a1, char *a2, unint64_t *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v6 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 44);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    char v4 = sub_16FC618(v6, v8, a3);
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_16FF9D4(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40))
  {
    uint64_t v3 = sub_16FCA60(*(void *)(a1 + 48));
    v2 += v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v6 + 31) < 0) {
      uint64_t v7 = *(void *)(v6 + 16);
    }
    else {
      uint64_t v7 = *(unsigned __int8 *)(v6 + 31);
    }
    v2 += v7;
  }
  *(_DWORD *)(a1 + 44) = v2;
  return v2;
}

void sub_16FFA68(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 40))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v5 = *(void *)(a1 + 48);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_17894DC((uint64_t)v7);
      *(void *)(a1 + 48) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 48);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_2546190;
    }
    sub_16FCCEC(v5, (uint64_t)v8);
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_16FFB1C(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_16FD18C(*(void *)(a1 + 48));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_16FFB60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchResultPlacePhoto");
}

void *sub_16FFB70(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F4BC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_16FFBF0(void *a1)
{
  sub_16FFB70(a1);

  operator delete();
}

uint64_t sub_16FFC28(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16B6BB4(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_16FFCA4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        uint64_t v12 = v6 - 1;
        while (1)
        {
          uint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            uint64_t v17 = sub_1786128(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, (uint64_t)v17);
            uint64_t v13 = (unsigned __int8 *)v19;
          }
          uint64_t v12 = sub_16C247C(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_16FFE44(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        BOOL v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        BOOL v10 = __dst + 2;
      }
      __dst = sub_16B6DC8(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_16FFF88(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16B6F6C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

std::string *sub_1700038(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result->__r_.__value_.__r.__words[2], *(_DWORD *)(a2 + 24));
    uint64_t result = sub_18711E0((std::string *)&v3->__r_.__value_.__r.__words[2], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__l.__size_ - LODWORD(v3[1].__r_.__value_.__l.__data_));
    int v7 = LODWORD(v3[1].__r_.__value_.__l.__data_) + v4;
    LODWORD(v3[1].__r_.__value_.__l.__data_) = v7;
    std::string::size_type size = (int *)v3[1].__r_.__value_.__l.__size_;
    if (*size < v7) {
      *std::string::size_type size = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1700108()
{
  return 1;
}

void *sub_1700110@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SearchResultPlacePhotoFilter");
}

uint64_t sub_1700120(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24D4798;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_154B658(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    unint64_t v13 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_154B658((uint64_t *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    uint64_t v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      *uint64_t v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1700270(_Unwind_Exception *a1)
{
  sub_154B128(v4);
  sub_154B128(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17002C8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_154B128(a1 + 5);
  sub_154B128(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1700354(void *a1)
{
  sub_17002C8(a1);

  operator delete();
}

uint64_t sub_170038C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16FBBF0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_16FBBF0(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_1700430(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      unint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v14 = v7 - 1;
          while (1)
          {
            uint64_t v15 = (unsigned __int8 *)(v14 + 1);
            unint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              uint64_t v19 = sub_17894DC(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              uint64_t v15 = (unsigned __int8 *)v26;
            }
            int v14 = (char *)sub_15435C4(a3, v18, v15);
            unint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          unint64_t v21 = (unsigned __int8 *)(v20 + 1);
          unint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_17894DC(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            unint64_t v21 = (unsigned __int8 *)v26;
          }
          uint64_t v20 = (char *)sub_15435C4(a3, v24, v21);
          unint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        unint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        unint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      unint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_1700678(uint64_t a1, char *__dst, unint64_t *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_16FC618(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        uint64_t v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        uint64_t v15 = __dst + 2;
      }
      __dst = sub_16FC618(v13, v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)__dst) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1700840(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16FCA60(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16FCA60(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_1700940(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_154B658((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_154B658((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_1700A74(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 24);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_16FD18C(*(void *)(*(void *)(a1 + 32) + 8 * v2));
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = *(unsigned int *)(a1 + 48);
  do
  {
    BOOL v5 = (int)v6 < 1;
    if ((int)v6 < 1) {
      break;
    }
    uint64_t v7 = v6 - 1;
    char v8 = sub_16FD18C(*(void *)(*(void *)(a1 + 56) + 8 * v6));
    uint64_t v6 = v7;
  }
  while ((v8 & 1) != 0);
  return v5;
}

void *sub_1700AF4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.BusinessAssets");
}

uint64_t sub_1700B04(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
  }
  if ((v1 & 0x700) != 0)
  {
    *(void *)(a1 + 88) = 0;
    *(_DWORD *)(a1 + 96) = 1065353216;
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1700B4C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D4818;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 32) = 0;
  if ((v6 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v6 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  return a1;
}

void sub_1700CA0()
{
}

uint64_t sub_1700D10(uint64_t a1)
{
  char v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_25463C0)
  {
    int v6 = *(void **)(a1 + 32);
    if (v6)
    {
      sub_178F184(v6);
      operator delete();
    }
    if (*(void *)(a1 + 40))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 48))
    {
      sub_15B0994();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1700E1C(uint64_t a1)
{
  sub_1700D10(a1);

  operator delete();
}

uint64_t sub_1700E54(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t result = sub_1700B04(*(void *)(result + 32));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v5 + 23) < 0)
  {
    **(unsigned char **)unint64_t v5 = 0;
    *(void *)(v5 + 8) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v5 = 0;
    *(unsigned char *)(v5 + 23) = 0;
    if ((v2 & 2) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 40));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 48));
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_1700F10(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  int v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v11 = *(void *)(a1 + 32);
        if (!v11)
        {
          int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v12 = (void *)*v12;
          }
          sub_1791234((uint64_t)v12);
          uint64_t v11 = v13;
          *(void *)(a1 + 32) = v13;
          uint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v14 = sub_1264784(a3, v11, v7);
        goto LABEL_38;
      case 2u:
        if (v8 != 18) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v16 = (uint64_t *)*v16;
        }
        unint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 24), v16);
        uint64_t v14 = (void *)sub_188C244(v17, *(char **)v23, (uint64_t)a3);
        goto LABEL_38;
      case 3u:
        if (v8 != 26) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 40);
        if (v18) {
          goto LABEL_30;
        }
        uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v18 = sub_15C1918((uint64_t)v19);
        *(void *)(a1 + 40) = v18;
        goto LABEL_29;
      case 4u:
        if (v8 != 34) {
          goto LABEL_31;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v18 = *(void *)(a1 + 48);
        if (v18) {
          goto LABEL_30;
        }
        uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v20 = (void *)*v20;
        }
        uint64_t v18 = sub_15C1918((uint64_t)v20);
        *(void *)(a1 + 48) = v18;
LABEL_29:
        uint64_t v7 = *(unsigned __int8 **)v23;
LABEL_30:
        uint64_t v14 = sub_1198F14(a3, v18, v7);
        goto LABEL_38;
      default:
LABEL_31:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v6)
          {
            uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = *(unsigned __int8 **)v23;
          }
          uint64_t v14 = sub_1885AC0(v8, v22, (char *)v7, a3);
LABEL_38:
          *(void *)uint64_t v23 = v14;
          if (!v14) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

unsigned char *sub_1701194(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 32);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_178F4EC(v7, (unint64_t)v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_25;
    }
    goto LABEL_19;
  }
LABEL_13:
  if (*(void *)a3 <= (unint64_t)v4) {
    char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 40);
  *char v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    int v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    int v12 = v4 + 2;
  }
  char v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 8) != 0)
  {
LABEL_19:
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 48);
    *char v4 = 34;
    unsigned int v14 = *(_DWORD *)(v13 + 44);
    v4[1] = v14;
    if (v14 > 0x7F) {
      uint64_t v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      uint64_t v15 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v13, v15, a3);
  }
LABEL_25:
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_17013A8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    uint64_t v7 = sub_178F82C(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v11 = sub_15B0D90(*(void *)(a1 + 40));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_12:
    uint64_t v8 = sub_15B0D90(*(void *)(a1 + 48));
    v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_13:
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v12 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17014FC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) != 0)
  {
    if (v4)
    {
      uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 24);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v9 = *(std::string **)(a1 + 32);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        uint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          uint64_t v11 = (void *)*v11;
        }
        sub_1791234((uint64_t)v11);
        *(void *)(a1 + 32) = v9;
      }
      if (*(void *)(a2 + 32)) {
        unint64_t v12 = *(uint64_t (****)())(a2 + 32);
      }
      else {
        unint64_t v12 = &off_25496B0;
      }
      sub_1701678(v9, (uint64_t)v12);
    }
    if ((v4 & 4) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      uint64_t v13 = *(void *)(a1 + 40);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_15C1918((uint64_t)v15);
        *(void *)(a1 + 40) = v13;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v16 = &off_253F1A0;
      }
      sub_15B0E24(v13, (uint64_t)v16);
    }
    if ((v4 & 8) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 8u;
      uint64_t v17 = *(void *)(a1 + 48);
      if (!v17)
      {
        uint64_t v18 = *(void *)(a1 + 8);
        uint64_t v19 = (void *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          uint64_t v19 = (void *)*v19;
        }
        uint64_t v17 = sub_15C1918((uint64_t)v19);
        *(void *)(a1 + 48) = v17;
      }
      if (*(void *)(a2 + 48)) {
        uint64_t v20 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        uint64_t v20 = &off_253F1A0;
      }
      sub_15B0E24(v17, (uint64_t)v20);
    }
  }
  uint64_t v21 = *(void *)(a2 + 8);
  if (v21)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v21 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

std::string *sub_1701678(std::string *result, uint64_t a2)
{
  int v2 = *(_DWORD *)(a2 + 16);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      result[1].__r_.__value_.__r.__words[0] = *(void *)(a2 + 24);
      if ((v2 & 2) == 0)
      {
LABEL_4:
        if ((v2 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_22;
      }
    }
    else if ((v2 & 2) == 0)
    {
      goto LABEL_4;
    }
    result[1].__r_.__value_.__l.__size_ = *(void *)(a2 + 32);
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_23;
    }
LABEL_22:
    result[1].__r_.__value_.__r.__words[2] = *(void *)(a2 + 40);
    if ((v2 & 8) == 0)
    {
LABEL_6:
      if ((v2 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
LABEL_23:
    result[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v2 & 0x10) == 0)
    {
LABEL_7:
      if ((v2 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_24:
    result[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
    if ((v2 & 0x20) == 0)
    {
LABEL_8:
      if ((v2 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_26;
    }
LABEL_25:
    result[2].__r_.__value_.__r.__words[2] = *(void *)(a2 + 64);
    if ((v2 & 0x40) == 0)
    {
LABEL_9:
      if ((v2 & 0x80) == 0)
      {
LABEL_11:
        LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
        goto LABEL_12;
      }
LABEL_10:
      result[3].__r_.__value_.__l.__size_ = *(void *)(a2 + 80);
      goto LABEL_11;
    }
LABEL_26:
    result[3].__r_.__value_.__r.__words[0] = *(void *)(a2 + 72);
    if ((v2 & 0x80) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  if ((v2 & 0x700) == 0) {
    goto LABEL_18;
  }
  if ((v2 & 0x100) == 0)
  {
    if ((v2 & 0x200) == 0) {
      goto LABEL_15;
    }
LABEL_29:
    HIDWORD(result[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 92);
    if ((v2 & 0x400) == 0) {
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  LODWORD(result[3].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 88);
  if ((v2 & 0x200) != 0) {
    goto LABEL_29;
  }
LABEL_15:
  if ((v2 & 0x400) != 0) {
LABEL_16:
  }
    LODWORD(result[4].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 96);
LABEL_17:
  LODWORD(result->__r_.__value_.__r.__words[2]) |= v2;
LABEL_18:
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v3 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1701770(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B0F18(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 48));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_17017BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundView");
}

void *sub_17017CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1701840(void *a1)
{
  sub_17017CC(a1);

  operator delete();
}

uint64_t *sub_1701878(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1701888(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1701988(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1701A20(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1701A54(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1701A70()
{
  return 1;
}

void *sub_1701A78@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundViewFilter");
}

uint64_t sub_1701A88(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 48));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1701B68(uint64_t a1)
{
  sub_1701A88(a1);

  operator delete();
}

uint64_t sub_1701BA0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0) {
    goto LABEL_22;
  }
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_11:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
      if ((v1 & 4) != 0) {
        goto LABEL_15;
      }
    }
LABEL_5:
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_19:
    unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
    }
    goto LABEL_22;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v2 + 23) < 0)
  {
    **(unsigned char **)unint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    if ((v1 & 2) != 0) {
      goto LABEL_11;
    }
  }
LABEL_4:
  if ((v1 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v4 + 23) < 0)
  {
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  *(unsigned char *)unint64_t v4 = 0;
  *(unsigned char *)(v4 + 23) = 0;
  if ((v1 & 8) != 0) {
    goto LABEL_19;
  }
LABEL_22:
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v7) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1701C8C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v21 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
    return *(void *)v21;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    char v7 = (char *)(*(void *)v21 + 1);
    unsigned int v8 = **(unsigned char **)v21;
    if ((char)**(unsigned char **)v21 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180(*(uint64_t *)v21, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = (char *)(*(void *)v21 + 2);
      }
    }
    *(void *)uint64_t v21 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 24);
        goto LABEL_25;
      case 2u:
        if (v8 != 18) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 32);
        goto LABEL_25;
      case 3u:
        if (v8 != 26) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 40);
        goto LABEL_25;
      case 4u:
        if (v8 != 34) {
          goto LABEL_29;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
LABEL_25:
        uint64_t v17 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v18 = (void *)sub_188C244(v17, *(char **)v21, (uint64_t)a3);
        goto LABEL_26;
      default:
LABEL_29:
        if (v8) {
          BOOL v19 = (v8 & 7) == 4;
        }
        else {
          BOOL v19 = 1;
        }
        if (!v19)
        {
          if (*v6)
          {
            uint64_t v20 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v20 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v7 = *(char **)v21;
          }
          uint64_t v18 = sub_1885AC0(v8, v20, v7, a3);
LABEL_26:
          *(void *)uint64_t v21 = v18;
          if (!v18) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v21, a3[11].i32[1])) {
            return *(void *)v21;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v21;
    }
  }
}

char *sub_1701EDC(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_5:
  }
    unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_1702018(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
  uint64_t v5 = *(void *)(v3 + 8);
  if ((v4 & 0x80u) == 0) {
    uint64_t v5 = v4;
  }
  uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) == 0)
  {
    if ((v1 & 8) == 0) {
      goto LABEL_17;
    }
    goto LABEL_14;
  }
  unint64_t v14 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  v2 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v1 & 8) != 0)
  {
LABEL_14:
    unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
    uint64_t v11 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      uint64_t v11 = v10;
    }
    v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_17:
  uint64_t v12 = *(void *)(a1 + 8);
  if (v12)
  {
    unint64_t v17 = v12 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v2 += v18;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1702184()
{
  return 1;
}

void *sub_170218C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExternalAction.ExternalActionDetail");
}

uint64_t sub_170219C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D4998;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1871C70(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  return a1;
}

void sub_1702290(_Unwind_Exception *a1)
{
  sub_186FEBC(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_17022D4(void *a1)
{
  unint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186FEBC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1702354(void *a1)
{
  sub_17022D4(a1);

  operator delete();
}

uint64_t sub_170238C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    unint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1701BA0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1702410(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v26 + 2;
      }
    }
    unint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        unint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          unint64_t v26 = v14 + 1;
          uint64_t v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            BOOL v19 = sub_1789934(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, (uint64_t)v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          unint64_t v14 = (char *)sub_170266C(a3, v18, v15);
          unint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      uint64_t v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        unint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        uint64_t v20 = v7 + 2;
LABEL_34:
        unint64_t v26 = v20;
      }
      if (sub_16B59C0())
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      else
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v26;
    }
    unint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

uint64_t sub_170266C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1701C8C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17026FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        uint64_t v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        uint64_t v13 = v4 + 2;
      }
      uint64_t v4 = sub_1701EDC(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17028C0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1702018(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_17029A8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_1871C70(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1702A94()
{
  return 1;
}

void *sub_1702A9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExternalAction");
}

void *sub_1702AAC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 2));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1702B28(void *a1)
{
  sub_1702AAC(a1);

  operator delete();
}

uint64_t sub_1702B60(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1702B74(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v24 = a2;
  if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
    return v24;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v24 + 1;
    unsigned int v7 = *v24;
    if (*v24 < 0)
    {
      int v8 = *v6;
      unsigned int v9 = v7 + (v8 << 7);
      unsigned int v7 = v9 - 128;
      if (v8 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v24, v9 - 128);
        unsigned int v7 = v10;
      }
      else
      {
        uint64_t v6 = v24 + 2;
      }
    }
    unint64_t v24 = v6;
    if ((v7 & 0xFFFFFFF8) != 8) {
      break;
    }
    if (v7 == 8)
    {
      uint64_t v11 = v6 - 1;
      while (1)
      {
        unint64_t v24 = v11 + 1;
        unint64_t v12 = v11[1];
        uint64_t v13 = v11 + 2;
        if (v11[1] < 0)
        {
          int v14 = *v13;
          int v15 = v12 + (v14 << 7);
          unint64_t v12 = (v15 - 128);
          if (v14 < 0)
          {
            unint64_t v24 = (char *)sub_188C138((uint64_t)(v11 + 1), (v15 - 128));
            if (!v24) {
              return 0;
            }
            unint64_t v12 = v18;
            goto LABEL_14;
          }
          uint64_t v13 = v11 + 3;
        }
        unint64_t v24 = v13;
LABEL_14:
        if (sub_16B59C0())
        {
          uint64_t v16 = *(unsigned int *)(a1 + 16);
          if (v16 == *(_DWORD *)(a1 + 20))
          {
            int v17 = v16 + 1;
            sub_188C80C((unsigned int *)(a1 + 16), v16 + 1);
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v16) = v12;
          }
          else
          {
            *(_DWORD *)(*(void *)(a1 + 24) + 4 * v16) = v12;
            int v17 = v16 + 1;
          }
          *(_DWORD *)(a1 + 16) = v17;
        }
        else
        {
          if (*v5) {
            uint64_t v19 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v19);
        }
        uint64_t v11 = v24;
        if (*(void *)a3 <= (unint64_t)v24 || *v24 != 8) {
          goto LABEL_38;
        }
      }
    }
    if (v7 != 10) {
      break;
    }
    *(void *)&long long v25 = a1 + 16;
    *((void *)&v25 + 1) = sub_16B59C0;
    uint64_t v26 = a1 + 8;
    int v27 = 1;
    uint64_t v20 = sub_1112E88((uint64_t)a3, v6, &v25);
LABEL_37:
    unint64_t v24 = v20;
    if (!v20) {
      return 0;
    }
LABEL_38:
    if (sub_11947B8((uint64_t)a3, &v24, a3[11].i32[1])) {
      return v24;
    }
  }
  if (v7) {
    BOOL v21 = (v7 & 7) == 4;
  }
  else {
    BOOL v21 = 1;
  }
  if (!v21)
  {
    if (*v5)
    {
      int v22 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v24;
    }
    uint64_t v20 = (char *)sub_1885AC0(v7, v22, v6, a3);
    goto LABEL_37;
  }
  if (!v6) {
    return 0;
  }
  a3[10].i32[0] = v7 - 1;
  return v24;
}

char *sub_1702DC8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v6 = *(unsigned int *)(a1 + 16);
  if ((int)v6 >= 1)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      unint64_t v8 = *(int *)(*(void *)(a1 + 24) + 4 * i);
      *__dst = 8;
      __dst[1] = v8;
      if (v8 > 0x7F)
      {
        __dst[1] = v8 | 0x80;
        unint64_t v9 = v8 >> 7;
        __dst[2] = v8 >> 7;
        __dst += 3;
        if (v8 >= 0x4000)
        {
          do
          {
            *(__dst - 1) |= 0x80u;
            unint64_t v10 = v9 >> 14;
            v9 >>= 7;
            *__dst++ = v9;
          }
          while (v10);
        }
      }
      else
      {
        __dst += 2;
      }
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    int v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    int v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1702F18(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 16);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 24) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v7)
  {
    unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v9 + 31) < 0) {
      uint64_t v10 = *(void *)(v9 + 16);
    }
    else {
      uint64_t v10 = *(unsigned __int8 *)(v9 + 31);
    }
    v6 += v10;
  }
  *(_DWORD *)(a1 + 32) = v6;
  return v6;
}

uint64_t sub_1702FA8()
{
  return 1;
}

void *sub_1702FB0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ExternalActionFilter");
}

uint64_t sub_1702FC0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D4A98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1871CEC(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12)
  {
    unint64_t v13 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v13 = (uint64_t *)*v13;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v13);
    int v12 = *(_DWORD *)(a2 + 16);
  }
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_170311C()
{
}

uint64_t sub_1703180(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2546470)
  {
    int v6 = *(void **)(a1 + 56);
    if (v6)
    {
      sub_16FBA2C(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_186FF3C((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1703258(uint64_t a1)
{
  sub_1703180(a1);

  operator delete();
}

uint64_t sub_1703290(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_17485D0(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  int v5 = *(_DWORD *)(v1 + 16);
  if ((v5 & 3) != 0)
  {
    if ((v5 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v6 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
LABEL_9:
      if ((v5 & 2) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v5 & 2) != 0) {
LABEL_10:
    }
      uint64_t result = sub_16FBBF0(*(void *)(v1 + 56));
  }
LABEL_11:
  char v8 = *(unsigned char *)(v1 + 8);
  uint64_t v7 = v1 + 8;
  *(_DWORD *)(v7 + 8) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_1703358(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v27 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    return *(void *)v27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v8 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)int v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3) {
      break;
    }
    if (v11 == 2)
    {
      if (v8 != 18) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v22 = *(void *)(a1 + 56);
      if (!v22)
      {
        int v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          int v23 = (void *)*v23;
        }
        uint64_t v22 = sub_17894DC((uint64_t)v23);
        *(void *)(a1 + 56) = v22;
        uint64_t v7 = *(unsigned __int8 **)v27;
      }
      uint64_t v15 = sub_15435C4(a3, v22, v7);
    }
    else
    {
      if (v11 != 1 || v8 != 10) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v24 = *(void *)(a1 + 8);
      long long v25 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        long long v25 = (uint64_t *)*v25;
      }
      uint64_t v26 = (std::string *)sub_1880F84((void *)(a1 + 48), v25);
      uint64_t v15 = (uint64_t)sub_188C244(v26, *(char **)v27, (uint64_t)a3);
    }
LABEL_40:
    *(void *)int v27 = v15;
    if (!v15) {
      goto LABEL_46;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      return *(void *)v27;
    }
  }
  if (v8 == 26)
  {
    uint64_t v16 = (char *)(v7 - 1);
    while (1)
    {
      int v17 = (unsigned __int8 *)(v16 + 1);
      *(void *)int v27 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(void *)&v18[2 * v19 + 2];
      }
      else
      {
        uint64_t v21 = sub_178B6A4(*(void *)(a1 + 24));
        uint64_t v20 = sub_188CDC8(a1 + 24, v21);
        int v17 = *(unsigned __int8 **)v27;
      }
      uint64_t v16 = sub_17035B0(a3, v20, v17);
      *(void *)int v27 = v16;
      if (!v16) {
        goto LABEL_46;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
        goto LABEL_41;
      }
    }
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      int v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = *(unsigned __int8 **)v27;
    }
    uint64_t v15 = (uint64_t)sub_1885AC0(v8, v14, (char *)v7, a3);
    goto LABEL_40;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v27;
  }
LABEL_46:
  *(void *)int v27 = 0;
  return *(void *)v27;
}

char *sub_17035B0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1748630(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_1703640(uint64_t a1, unsigned char *__dst, unint64_t *a3)
{
  uint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 18;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_16FC618(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 32);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 26;
      unsigned int v13 = *(_DWORD *)(v12 + 20);
      v4[1] = v13;
      if (v13 > 0x7F) {
        int v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        int v14 = v4 + 2;
      }
      uint64_t v4 = sub_1748840(v12, (unint64_t)v14, a3);
    }
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v17 + 31) < 0)
  {
    unint64_t v18 = *(void **)(v17 + 8);
    uint64_t v19 = *(void *)(v17 + 16);
  }
  else
  {
    unint64_t v18 = (void *)(v17 + 8);
    LODWORD(v19) = *(unsigned __int8 *)(v17 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v19)
  {
    uint64_t v20 = (int)v19;
    memcpy(v4, v18, (int)v19);
    v4 += v20;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v18, v19, v4);
}

uint64_t sub_170380C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_17489CC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      unint64_t v9 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v11 = *(void *)(v9 + 8);
      if ((v10 & 0x80u) == 0) {
        uint64_t v11 = v10;
      }
      v2 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v12 = sub_16FCA60(*(void *)(a1 + 56));
      v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v2 += v16;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_170393C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_1871CEC((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      uint64_t v10 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (uint64_t *)*v12;
      }
      sub_1881DF4((std::string **)(a1 + 48), v10, v12);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v13 = *(void *)(a1 + 56);
      if (!v13)
      {
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (void *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (void *)*v15;
        }
        uint64_t v13 = sub_17894DC((uint64_t)v15);
        *(void *)(a1 + 56) = v13;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v16 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v16 = &off_2546190;
      }
      sub_16FCCEC(v13, (uint64_t)v16);
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1703A98(uint64_t a1)
{
  uint64_t result = sub_1703ADC(a1 + 24);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_16FD18C(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_1703ADC(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 8);
  if ((int)v1 < 1) {
    return 1;
  }
  uint64_t v3 = v1 + 1;
  for (unsigned int i = v1 - 1; ; --i)
  {
    uint64_t v5 = *(void *)(*(void *)(a1 + 16) + 8 * i + 8);
    if (*(unsigned char *)(v5 + 16))
    {
      uint64_t result = sub_16FD18C(*(void *)(v5 + 24));
      if (!result) {
        break;
      }
    }
    if (--v3 <= 1) {
      return 1;
    }
  }
  return result;
}

void *sub_1703B4C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesLocationEntry.GuidesLocationEntryTypeWorldWide");
}

uint64_t sub_1703B5C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D4B18;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  *(void *)(a1 + 28) = 0;
  int v5 = *(_DWORD *)(a2 + 24);
  if (v5)
  {
    sub_188CA54((unsigned int *)(a1 + 24), v5);
    uint64_t v6 = *(void **)(a1 + 32);
    *(_DWORD *)(a1 + 24) += *(_DWORD *)(a2 + 24);
    memcpy(v6, *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  uint64_t v7 = *(void *)(a2 + 8);
  if (v7) {
    sub_188B4F8(v4, (v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if (v8) {
    operator new();
  }
  *(void *)(a1 + 40) = 0;
  if ((v8 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v8 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v8 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

void sub_1703D04()
{
}

uint64_t sub_1703DA0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_1703E2C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_1889DA8(a1 + 24);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_1703E2C(uint64_t (***result)()))()
{
  if (result != &off_25464B0)
  {
    uint64_t v1 = result;
    uint64_t v2 = (uint64_t)result[5];
    if (v2)
    {
      sub_184AFBC(v2);
      operator delete();
    }
    uint64_t v3 = (uint64_t)v1[6];
    if (v3)
    {
      sub_1703180(v3);
      operator delete();
    }
    int v4 = v1[7];
    if (v4)
    {
      sub_15B1678(v4);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[8];
    if (result)
    {
      sub_15B0994();
      operator delete();
    }
  }
  return result;
}

void sub_1703EF8(uint64_t a1)
{
  sub_1703DA0(a1);

  operator delete();
}

uint64_t sub_1703F30(uint64_t result)
{
  uint64_t v1 = result;
  *(_DWORD *)(result + 24) = 0;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v2 & 1) == 0)
  {
    if ((v2 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_14:
    uint64_t result = sub_1703290(*(void *)(v1 + 48));
    if ((v2 & 4) == 0)
    {
LABEL_5:
      if ((v2 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  uint64_t result = (uint64_t)sub_16CD894(*(void *)(result + 40));
  if ((v2 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_4:
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  uint64_t result = (uint64_t)sub_15B16B4(*(unsigned char **)(v1 + 56));
  if ((v2 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = (uint64_t)sub_15B09D0(*(void *)(v1 + 64));
LABEL_7:
  if ((v2 & 0x30) != 0) {
    *(void *)(v1 + 72) = 0;
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1703FD8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v40 = a2;
  int v5 = 0;
  if ((sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v7 = (void *)(a1 + 8);
    while (1)
    {
      int v8 = v40 + 1;
      unsigned int v9 = *v40;
      if (*v40 < 0)
      {
        unsigned int v10 = v9 + (*v8 << 7);
        unsigned int v9 = v10 - 128;
        if (*v8 < 0)
        {
          int v8 = (char *)sub_188C180((uint64_t)v40, v10 - 128);
          unsigned int v9 = v11;
        }
        else
        {
          int v8 = v40 + 2;
        }
      }
      uint64_t v40 = v8;
      switch(v9 >> 3)
      {
        case 1u:
          if (v9 != 10) {
            goto LABEL_65;
          }
          *(_DWORD *)(a1 + 16) |= 1u;
          uint64_t v12 = *(void *)(a1 + 40);
          if (!v12)
          {
            uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              uint64_t v13 = (void *)*v13;
            }
            uint64_t v12 = sub_185089C((uint64_t)v13);
            *(void *)(a1 + 40) = v12;
            int v8 = v40;
          }
          uint64_t v14 = sub_12688D0(a3, v12, (unsigned __int8 *)v8);
          goto LABEL_72;
        case 2u:
          if (v9 != 16) {
            goto LABEL_65;
          }
          v5 |= 0x10u;
          unint64_t v15 = v8 + 1;
          int v16 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_19;
          }
          int v17 = *v15;
          int v16 = v16 + (v17 << 7) - 128;
          if (v17 < 0)
          {
            BOOL v34 = (char *)sub_188C0D0((uint64_t)v8, v16);
            uint64_t v40 = v34;
            *(_DWORD *)(a1 + 72) = v35;
            if (!v34) {
              goto LABEL_82;
            }
          }
          else
          {
            unint64_t v15 = v8 + 2;
LABEL_19:
            uint64_t v40 = v15;
            *(_DWORD *)(a1 + 72) = v16;
          }
          goto LABEL_73;
        case 3u:
          if (v9 != 24) {
            goto LABEL_65;
          }
          unint64_t v18 = v8 + 1;
          unint64_t v19 = *v8;
          if ((*v8 & 0x80000000) == 0) {
            goto LABEL_24;
          }
          int v20 = *v18;
          int v21 = v19 + (v20 << 7);
          unint64_t v19 = (v21 - 128);
          if (v20 < 0)
          {
            uint64_t v40 = (char *)sub_188C138((uint64_t)v8, (v21 - 128));
            if (!v40) {
              goto LABEL_82;
            }
            unint64_t v19 = v36;
          }
          else
          {
            unint64_t v18 = v8 + 2;
LABEL_24:
            uint64_t v40 = v18;
          }
          if (v19 > 2)
          {
            if (*v7) {
              int v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else {
              int v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            }
            sub_188C020(3, v19, v39);
          }
          else
          {
            *(_DWORD *)(a1 + 16) |= 0x20u;
            *(_DWORD *)(a1 + 76) = v19;
          }
          goto LABEL_73;
        case 4u:
          if (v9 != 34) {
            goto LABEL_65;
          }
          *(_DWORD *)(a1 + 16) |= 2u;
          uint64_t v22 = *(void **)(a1 + 48);
          if (!v22)
          {
            int v23 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v23 = (void *)*v23;
            }
            uint64_t v22 = sub_1789AEC((uint64_t)v23);
            *(void *)(a1 + 48) = v22;
            int v8 = v40;
          }
          uint64_t v14 = (char *)sub_170446C(a3, (uint64_t)v22, (unsigned __int8 *)v8);
          goto LABEL_72;
        case 5u:
          if (v9 != 42) {
            goto LABEL_65;
          }
          *(_DWORD *)(a1 + 16) |= 4u;
          uint64_t v24 = *(void *)(a1 + 56);
          if (!v24)
          {
            long long v25 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              long long v25 = (void *)*v25;
            }
            uint64_t v24 = sub_15C19EC((uint64_t)v25);
            *(void *)(a1 + 56) = v24;
            int v8 = v40;
          }
          uint64_t v14 = sub_11E1C60(a3, v24, (unsigned __int8 *)v8);
          goto LABEL_72;
        case 6u:
          if (v9 != 50) {
            goto LABEL_65;
          }
          *(_DWORD *)(a1 + 16) |= 8u;
          uint64_t v26 = *(void *)(a1 + 64);
          if (!v26)
          {
            int v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
            if (*v7) {
              int v27 = (void *)*v27;
            }
            uint64_t v26 = sub_15C1918((uint64_t)v27);
            *(void *)(a1 + 64) = v26;
            int v8 = v40;
          }
          uint64_t v14 = sub_1198F14(a3, v26, (unsigned __int8 *)v8);
          goto LABEL_72;
        case 7u:
          if (v9 == 56)
          {
            uint64_t v28 = v8 - 1;
            while (1)
            {
              uint64_t v40 = v28 + 1;
              uint64_t v29 = v28[1];
              if (v28[1] < 0)
              {
                int v30 = v29 + (v28[2] << 7);
                uint64_t v29 = (v30 - 128);
                if (v28[2] < 0)
                {
                  uint64_t v28 = (char *)sub_188C138((uint64_t)(v28 + 1), (v30 - 128));
                  uint64_t v29 = v31;
                }
                else
                {
                  v28 += 3;
                }
              }
              else
              {
                v28 += 2;
              }
              uint64_t v40 = v28;
              uint64_t v32 = *(unsigned int *)(a1 + 24);
              if (v32 == *(_DWORD *)(a1 + 28))
              {
                int v33 = v32 + 1;
                sub_188CA54((unsigned int *)(a1 + 24), v32 + 1);
                *(void *)(*(void *)(a1 + 32) + 8 * v32) = v29;
                uint64_t v28 = v40;
              }
              else
              {
                *(void *)(*(void *)(a1 + 32) + 8 * v32) = v29;
                int v33 = v32 + 1;
              }
              *(_DWORD *)(a1 + 24) = v33;
              if (!v28) {
                goto LABEL_82;
              }
              if (*(void *)a3 <= (unint64_t)v28 || *v28 != 56) {
                goto LABEL_73;
              }
            }
          }
          if (v9 == 58)
          {
            uint64_t v14 = (char *)sub_188C2EC((unsigned int *)(a1 + 24), (unsigned __int8 *)v8, (uint64_t)a3);
          }
          else
          {
LABEL_65:
            if (v9) {
              BOOL v37 = (v9 & 7) == 4;
            }
            else {
              BOOL v37 = 1;
            }
            if (v37)
            {
              if (v8)
              {
                a3[10].i32[0] = v9 - 1;
                goto LABEL_2;
              }
LABEL_82:
              uint64_t v40 = 0;
              goto LABEL_2;
            }
            if (*v7)
            {
              uint64_t v38 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v38 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = v40;
            }
            uint64_t v14 = (char *)sub_1885AC0(v9, v38, v8, a3);
          }
LABEL_72:
          uint64_t v40 = v14;
          if (!v14) {
            goto LABEL_82;
          }
LABEL_73:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          break;
        default:
          goto LABEL_65;
      }
    }
  }
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v40;
}

uint64_t sub_170446C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1703358(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17044FC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 40);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v10 = *(_DWORD *)(a1 + 72);
    *char v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unsigned int v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v13 = *(int *)(a1 + 76);
    *char v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unint64_t v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v16 = *(void *)(a1 + 48);
    *char v4 = 34;
    unsigned int v17 = *(_DWORD *)(v16 + 20);
    v4[1] = v17;
    if (v17 > 0x7F) {
      unint64_t v18 = sub_188A9CC(v17, v4 + 1);
    }
    else {
      unint64_t v18 = v4 + 2;
    }
    char v4 = sub_1703640(v16, v18, a3);
    if ((v6 & 4) == 0)
    {
LABEL_24:
      if ((v6 & 8) == 0) {
        goto LABEL_44;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 4) == 0)
  {
    goto LABEL_24;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 56);
  *char v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  char v4 = sub_15B1A68(v19, (unint64_t)v21, a3);
  if ((v6 & 8) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 64);
    *char v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 44);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    char v4 = sub_15B0C0C(v22, v24, a3);
  }
LABEL_44:
  uint64_t v25 = *(unsigned int *)(a1 + 24);
  if ((int)v25 >= 1)
  {
    for (uint64_t i = 0; i != v25; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v27 = *(void *)(*(void *)(a1 + 32) + 8 * i);
      *char v4 = 56;
      v4[1] = v27;
      if (v27 > 0x7F)
      {
        v4[1] = v27 | 0x80;
        unint64_t v28 = v27 >> 7;
        v4[2] = v27 >> 7;
        v4 += 3;
        if (v27 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v29 = v28 >> 14;
            v28 >>= 7;
            *v4++ = v28;
          }
          while (v29);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v30 = *(void *)(a1 + 8);
  if ((v30 & 1) == 0) {
    return v4;
  }
  unint64_t v32 = v30 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v32 + 31) < 0)
  {
    int v33 = *(void **)(v32 + 8);
    uint64_t v34 = *(void *)(v32 + 16);
  }
  else
  {
    int v33 = (void *)(v32 + 8);
    LODWORD(v34) = *(unsigned __int8 *)(v32 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v34)
  {
    uint64_t v35 = (int)v34;
    memcpy(v4, v33, (int)v34);
    v4 += v35;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v33, v34, v4);
}

uint64_t sub_17048E4(uint64_t a1)
{
  uint64_t v2 = sub_188D5A8((unsigned int *)(a1 + 24)) + *(unsigned int *)(a1 + 24);
  int v3 = *(_DWORD *)(a1 + 16);
  if ((v3 & 0x3F) == 0) {
    goto LABEL_18;
  }
  if (v3)
  {
    uint64_t v4 = sub_184B568(*(void *)(a1 + 40));
    v2 += v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_11;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v5 = sub_170380C(*(void *)(a1 + 48));
  v2 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v6 = sub_15B1D1C(*(void *)(a1 + 56));
  v2 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v7 = sub_15B0D90(*(void *)(a1 + 64));
  v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_18;
    }
    goto LABEL_14;
  }
LABEL_13:
  v2 += ((9 * (__clz(*(_DWORD *)(a1 + 72) | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) == 0) {
    goto LABEL_18;
  }
LABEL_14:
  int v8 = *(_DWORD *)(a1 + 76);
  if (v8 < 0) {
    uint64_t v9 = 11;
  }
  else {
    uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v9;
LABEL_18:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_1704A90(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (_DWORD *)(a1 + 24);
    uint64_t v6 = *(int *)(a1 + 24);
    sub_188CA54((unsigned int *)(a1 + 24), v6 + v4);
    uint64_t v7 = *(void *)(a1 + 32);
    *v5 += *(_DWORD *)(a2 + 24);
    memcpy((void *)(v7 + 8 * v6), *(const void **)(a2 + 32), 8 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 0x3F) != 0)
  {
    if (v8)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 40);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (void *)*v12;
        }
        uint64_t v10 = sub_185089C((uint64_t)v12);
        *(void *)(a1 + 40) = v10;
      }
      if (*(void *)(a2 + 40)) {
        uint64_t v13 = *(uint64_t (****)())(a2 + 40);
      }
      else {
        uint64_t v13 = &off_254D2B0;
      }
      sub_16CE3CC(v10, (uint64_t)v13);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_32;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    unint64_t v14 = *(void **)(a1 + 48);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      uint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        uint64_t v16 = (void *)*v16;
      }
      unint64_t v14 = sub_1789AEC((uint64_t)v16);
      *(void *)(a1 + 48) = v14;
    }
    if (*(void *)(a2 + 48)) {
      unsigned int v17 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unsigned int v17 = &off_2546470;
    }
    sub_170393C((uint64_t)v14, (uint64_t)v17);
    if ((v8 & 4) == 0)
    {
LABEL_7:
      if ((v8 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_40;
    }
LABEL_32:
    *(_DWORD *)(a1 + 16) |= 4u;
    uint64_t v18 = *(void *)(a1 + 56);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      unsigned int v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        unsigned int v20 = (void *)*v20;
      }
      uint64_t v18 = sub_15C19EC((uint64_t)v20);
      *(void *)(a1 + 56) = v18;
    }
    if (*(void *)(a2 + 56)) {
      int v21 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      int v21 = &off_253F208;
    }
    sub_15B1E3C(v18, (uint64_t)v21);
    if ((v8 & 8) == 0)
    {
LABEL_8:
      if ((v8 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_48;
    }
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 8u;
    uint64_t v22 = *(void *)(a1 + 64);
    if (!v22)
    {
      uint64_t v23 = *(void *)(a1 + 8);
      uint64_t v24 = (void *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
      if (v23) {
        uint64_t v24 = (void *)*v24;
      }
      uint64_t v22 = sub_15C1918((uint64_t)v24);
      *(void *)(a1 + 64) = v22;
    }
    if (*(void *)(a2 + 64)) {
      uint64_t v25 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      uint64_t v25 = &off_253F1A0;
    }
    sub_15B0E24(v22, (uint64_t)v25);
    if ((v8 & 0x10) == 0)
    {
LABEL_9:
      if ((v8 & 0x20) == 0)
      {
LABEL_11:
        *(_DWORD *)(a1 + 16) |= v8;
        goto LABEL_12;
      }
LABEL_10:
      *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
      goto LABEL_11;
    }
LABEL_48:
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    if ((v8 & 0x20) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1704CAC(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_16CE508(*(void *)(a1 + 40));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) != 0)
  {
    uint64_t result = sub_1703A98(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_15B1FC0(*(void *)(a1 + 56));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 8) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1704D20@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GuidesLocationEntry");
}

void *sub_1704D30(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D4B98;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = 0;
  return a1;
}

void sub_1704DA0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1704DD0(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2546500)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1704EA4(uint64_t a1)
{
  sub_1704DD0(a1);

  operator delete();
}

unsigned char *sub_1704EDC(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 3) != 0)
  {
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v4 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
LABEL_5:
      if ((v3 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v4 = 0;
    *(void *)(v4 + 8) = 0;
    if ((v3 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_16CD894(*(void *)(a1 + 56));
  }
LABEL_7:
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = a1 + 8;
  *(_DWORD *)(v5 + 32) = 0;
  if (v6)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

uint64_t sub_1704F78(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unsigned int v20 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
    return *(void *)v20;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 1);
    unsigned int v8 = **(unsigned char **)v20;
    if ((char)**(unsigned char **)v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        uint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = (unsigned __int8 *)(*(void *)v20 + 2);
      }
    }
    *(void *)unsigned int v20 = v7;
    if (v8 >> 3 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t v16 = (std::string *)sub_1880F84((void *)(a1 + 48), v15);
    uint64_t v13 = (void *)sub_188C244(v16, *(char **)v20, (uint64_t)a3);
LABEL_31:
    *(void *)unsigned int v20 = v13;
    if (!v13) {
      goto LABEL_37;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v20, a3[11].i32[1])) {
      return *(void *)v20;
    }
  }
  if (v8 >> 3 == 1 && v8 == 10)
  {
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v17 = *(void *)(a1 + 56);
    if (!v17)
    {
      uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v17 = sub_185089C((uint64_t)v18);
      *(void *)(a1 + 56) = v17;
      uint64_t v7 = *(unsigned __int8 **)v20;
    }
    uint64_t v13 = sub_12688D0(a3, v17, v7);
    goto LABEL_31;
  }
LABEL_13:
  if (v8) {
    BOOL v12 = (v8 & 7) == 4;
  }
  else {
    BOOL v12 = 1;
  }
  if (!v12)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v19 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v19 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = *(unsigned __int8 **)v20;
      }
      uint64_t v13 = sub_1885AC0(v8, v19, (char *)v7, a3);
    }
    else
    {
      uint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2546500, (uint64_t *)(a1 + 8), a3);
    }
    goto LABEL_31;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return *(void *)v20;
  }
LABEL_37:
  *(void *)unsigned int v20 = 0;
  return *(void *)v20;
}

char *sub_170517C(uint64_t a1, char *a2, _DWORD *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *unint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    unint64_t v4 = sub_184B3AC(v7, v9, a3);
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_17052DC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      unint64_t v5 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v7 = *(void *)(v5 + 8);
      if ((v6 & 0x80u) == 0) {
        uint64_t v7 = v6;
      }
      uint64_t v3 = v2 + v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v8 = sub_184B568(*(void *)(a1 + 56));
      v3 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v11 + 31) < 0) {
      uint64_t v12 = *(void *)(v11 + 16);
    }
    else {
      uint64_t v12 = *(unsigned __int8 *)(v11 + 31);
    }
    v3 += v12;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_17053BC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 3) != 0)
  {
    if (v4)
    {
      unint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v6 = (std::string **)(a1 + 48);
      uint64_t v7 = *(void *)(a1 + 8);
      uint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
      if (v7) {
        uint64_t v8 = (uint64_t *)*v8;
      }
      sub_1881DF4(v6, v5, v8);
    }
    if ((v4 & 2) != 0)
    {
      *(_DWORD *)(a1 + 40) |= 2u;
      uint64_t v9 = *(void *)(a1 + 56);
      if (!v9)
      {
        uint64_t v10 = *(void *)(a1 + 8);
        unint64_t v11 = (void *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
        if (v10) {
          unint64_t v11 = (void *)*v11;
        }
        uint64_t v9 = sub_185089C((uint64_t)v11);
        *(void *)(a1 + 56) = v9;
      }
      if (*(void *)(a2 + 56)) {
        uint64_t v12 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        uint64_t v12 = &off_254D2B0;
      }
      sub_16CE3CC(v9, (uint64_t)v12);
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v13 = *(void *)(a2 + 8);
  if (v13)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v13 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17054B4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    if ((*(unsigned char *)(a1 + 40) & 2) == 0) {
      return 1;
    }
    uint64_t result = sub_16CE508(*(void *)(a1 + 56));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_17054F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildPlace");
}

void *sub_1705508(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170557C(void *a1)
{
  sub_1705508(a1);

  operator delete();
}

uint64_t *sub_17055B4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17055C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17056C4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_170575C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1705790(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17057AC()
{
  return 1;
}

void *sub_17057B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildAction.ChildActionDirections");
}

void *sub_17057C4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1705838(void *a1)
{
  sub_17057C4(a1);

  operator delete();
}

uint64_t *sub_1705870(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1705880(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    unint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        unint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        unint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      unint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1705980(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1705A18(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1705A4C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1705A68()
{
  return 1;
}

void *sub_1705A70@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildAction.ChildActionFlyover");
}

uint64_t sub_1705A80(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2546570)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_12A17E0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1705B38(uint64_t a1)
{
  sub_1705A80(a1);

  operator delete();
}

uint64_t sub_1705B70(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_12A181C(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_1705BCC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v16 = a2;
  if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
    return v16;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v16 + 1;
    unsigned int v7 = *v16;
    if (*v16 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v16, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v16 + 2;
      }
    }
    uint64_t v16 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void **)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      uint64_t v13 = sub_12BBBC8((uint64_t)v14);
      *(void *)(a1 + 24) = v13;
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_12B117C(a3, (uint64_t)v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v16 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v16, a3[11].i32[1])) {
      return v16;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v16;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v16;
  }
  return 0;
}

char *sub_1705D24(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *unint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    unint64_t v4 = sub_12A1AC4(v6, v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1705E34(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_12A1BDC(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

std::string *sub_1705EBC(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    data = (std::string *)result[1].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      unsigned int v7 = (void *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        unsigned int v7 = (void *)*v7;
      }
      data = (std::string *)sub_12BBBC8((uint64_t)v7);
      v3[1].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_25308B8;
    }
    uint64_t result = sub_11D2930(data, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1705F64()
{
  return 1;
}

void *sub_1705F6C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildAction.ChildActionSearch");
}

uint64_t sub_1705F7C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2546590)
  {
    uint64_t v6 = *(void *)(a1 + 24);
    if (v6)
    {
      sub_1703DA0(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1706034(uint64_t a1)
{
  sub_1705F7C(a1);

  operator delete();
}

uint64_t sub_170606C(uint64_t result)
{
  uint64_t v1 = result;
  if (*(unsigned char *)(result + 16)) {
    uint64_t result = sub_1703F30(*(void *)(result + 24));
  }
  char v3 = *(unsigned char *)(v1 + 8);
  uint64_t v2 = v1 + 8;
  *(_DWORD *)(v2 + 8) = 0;
  if (v3)
  {
    return sub_188B4AC((uint64_t *)v2);
  }
  return result;
}

char *sub_17060C8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v17 = a2;
  if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
    return v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = v17 + 1;
    unsigned int v7 = *v17;
    if (*v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180((uint64_t)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = v17 + 2;
      }
    }
    uint64_t v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 24);
    if (!v13)
    {
      uint64_t v14 = (void *)(*v5 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v5) {
        uint64_t v14 = (void *)*v14;
      }
      sub_1789B90((uint64_t)v14);
      uint64_t v13 = v15;
      *(void *)(a1 + 24) = v15;
      uint64_t v6 = v17;
    }
    uint64_t v12 = sub_1706220(a3, v13, (unsigned __int8 *)v6);
LABEL_20:
    uint64_t v17 = v12;
    if (!v12) {
      return 0;
    }
    if (sub_11947B8((uint64_t)a3, &v17, a3[11].i32[1])) {
      return v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      unint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = v17;
    }
    uint64_t v12 = (char *)sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_20;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return v17;
  }
  return 0;
}

char *sub_1706220(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1703FD8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

unsigned char *sub_17062B0(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v6 = *(void *)(a1 + 24);
    *uint64_t v4 = 10;
    unsigned int v7 = *(_DWORD *)(v6 + 20);
    v4[1] = v7;
    if (v7 > 0x7F) {
      unsigned int v8 = sub_188A9CC(v7, v4 + 1);
    }
    else {
      unsigned int v8 = v4 + 2;
    }
    uint64_t v4 = sub_17044FC(v6, (unint64_t)v8, a3);
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17063C0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    uint64_t v3 = sub_17048E4(*(void *)(a1 + 24));
    uint64_t result = v3 + ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t result = 0;
  }
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4)
  {
    unint64_t v5 = v4 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    result += v6;
  }
  *(_DWORD *)(a1 + 20) = result;
  return result;
}

void sub_1706448(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      unsigned int v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        unsigned int v7 = (void *)*v7;
      }
      sub_1789B90((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
      uint64_t v4 = *(uint64_t (****)())(a2 + 24);
    }
    if (v4) {
      unsigned int v8 = v4;
    }
    else {
      unsigned int v8 = &off_25464B0;
    }
    sub_1704A90(v5, (uint64_t)v8);
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17064F0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_1704CAC(*(void *)(a1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_170651C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildAction.ChildActionGuides");
}

void *sub_170652C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17065A0(void *a1)
{
  sub_170652C(a1);

  operator delete();
}

uint64_t *sub_17065D8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17065E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      BOOL v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      BOOL v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17066E8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1706780(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17067B4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17067D0()
{
  return 1;
}

void *sub_17067D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildAction.ChildActionDownloadOfflineMap");
}

uint64_t sub_17067E8(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_170686C((uint64_t (***)())a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

uint64_t (***sub_170686C(uint64_t (***result)()))()
{
  if (result != &off_25465C8)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[3];
    if (v2)
    {
      sub_1705508(v2);
      operator delete();
    }
    uint64_t v3 = v1[4];
    if (v3)
    {
      sub_17057C4(v3);
      operator delete();
    }
    uint64_t v4 = (uint64_t)v1[5];
    if (v4)
    {
      sub_1705A80(v4);
      operator delete();
    }
    uint64_t v5 = (uint64_t)v1[6];
    if (v5)
    {
      sub_1705F7C(v5);
      operator delete();
    }
    uint64_t result = (uint64_t (***)())v1[7];
    if (result)
    {
      sub_170652C(result);
      operator delete();
    }
  }
  return result;
}

void sub_1706958(uint64_t a1)
{
  sub_17067E8(a1);

  operator delete();
}

uint64_t sub_1706990(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0x1F) == 0) {
    goto LABEL_16;
  }
  if (v2)
  {
    uint64_t v3 = *(void *)(result + 24);
    char v4 = *(unsigned char *)(v3 + 8);
    uint64_t result = v3 + 8;
    if (v4) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v2 & 2) != 0)
  {
    uint64_t v5 = *(void *)(v1 + 32);
    char v6 = *(unsigned char *)(v5 + 8);
    uint64_t result = v5 + 8;
    if (v6) {
      uint64_t result = sub_188B4AC((uint64_t *)result);
    }
  }
  if ((v2 & 4) != 0)
  {
    uint64_t result = sub_1705B70(*(void *)(v1 + 40));
    if ((v2 & 8) == 0)
    {
LABEL_10:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_10;
  }
  uint64_t result = sub_170606C(*(void *)(v1 + 48));
  if ((v2 & 0x10) == 0) {
    goto LABEL_16;
  }
LABEL_14:
  uint64_t v7 = *(void *)(v1 + 56);
  char v8 = *(unsigned char *)(v7 + 8);
  uint64_t result = v7 + 8;
  if (v8) {
    uint64_t result = sub_188B4AC((uint64_t *)result);
  }
LABEL_16:
  char v10 = *(unsigned char *)(v1 + 8);
  uint64_t v9 = v1 + 8;
  *(_DWORD *)(v9 + 56) = 0;
  *(_DWORD *)(v9 + 8) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_1706A4C(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v30 = a2;
  if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
    return v30;
  }
  char v6 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v7 = v30 + 1;
    unsigned int v8 = *v30;
    if (*v30 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v30, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v30 + 2;
      }
    }
    uint64_t v30 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 8) {
          goto LABEL_46;
        }
        unint64_t v11 = v7 + 1;
        unint64_t v12 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_13;
        }
        int v13 = *v11;
        int v14 = v12 + (v13 << 7);
        unint64_t v12 = (v14 - 128);
        if (v13 < 0)
        {
          uint64_t v30 = (char *)sub_188C138((uint64_t)v7, (v14 - 128));
          if (!v30) {
            return 0;
          }
          unint64_t v12 = v28;
        }
        else
        {
          unint64_t v11 = v7 + 2;
LABEL_13:
          uint64_t v30 = v11;
        }
        if (v12 > 8)
        {
          if (*v6) {
            unint64_t v29 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            unint64_t v29 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(1, v12, v29);
        }
        else
        {
          *(_DWORD *)(a1 + 16) |= 0x20u;
          *(_DWORD *)(a1 + 64) = v12;
        }
        goto LABEL_54;
      case 2u:
        if (v8 != 18) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v15 = *(void *)(a1 + 24);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v16 = (void *)*v16;
          }
          uint64_t v15 = sub_1789C98((uint64_t)v16);
          *(void *)(a1 + 24) = v15;
          uint64_t v7 = v30;
        }
        uint64_t v17 = sub_1706DD4(a3, v15, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 3u:
        if (v8 != 26) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v18 = *(void *)(a1 + 32);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_1789D10((uint64_t)v19);
          *(void *)(a1 + 32) = v18;
          uint64_t v7 = v30;
        }
        uint64_t v17 = sub_1706E64(a3, v18, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 4u:
        if (v8 != 34) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        unsigned int v20 = *(void **)(a1 + 40);
        if (!v20)
        {
          int v21 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            int v21 = (void *)*v21;
          }
          unsigned int v20 = sub_1789D88((uint64_t)v21);
          *(void *)(a1 + 40) = v20;
          uint64_t v7 = v30;
        }
        uint64_t v17 = sub_1706EF4(a3, (uint64_t)v20, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 5u:
        if (v8 != 42) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v22 = *(void **)(a1 + 48);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_1789E00((uint64_t)v23);
          *(void *)(a1 + 48) = v22;
          uint64_t v7 = v30;
        }
        uint64_t v17 = sub_1706F84(a3, (uint64_t)v22, (unsigned __int8 *)v7);
        goto LABEL_53;
      case 6u:
        if (v8 != 50) {
          goto LABEL_46;
        }
        *(_DWORD *)(a1 + 16) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 56);
        if (!v24)
        {
          uint64_t v25 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v25 = (void *)*v25;
          }
          uint64_t v24 = sub_1789E78((uint64_t)v25);
          *(void *)(a1 + 56) = v24;
          uint64_t v7 = v30;
        }
        uint64_t v17 = sub_1707014(a3, v24, (unsigned __int8 *)v7);
        goto LABEL_53;
      default:
LABEL_46:
        if (v8) {
          BOOL v26 = (v8 & 7) == 4;
        }
        else {
          BOOL v26 = 1;
        }
        if (!v26)
        {
          if (*v6)
          {
            unint64_t v27 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            unint64_t v27 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v7 = v30;
          }
          uint64_t v17 = (char *)sub_1885AC0(v8, v27, v7, a3);
LABEL_53:
          uint64_t v30 = v17;
          if (!v17) {
            return 0;
          }
LABEL_54:
          if (sub_11947B8((uint64_t)a3, &v30, a3[11].i32[1])) {
            return v30;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return v30;
    }
  }
}

char *sub_1706DD4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17055C4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1706E64(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1705880(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1706EF4(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1705BCC(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1706F84(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17060C8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1707014(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17065E8(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17070A4(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 64);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 16);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    char v4 = sub_17056C4(v10, v12, a3);
    if ((v6 & 2) == 0)
    {
LABEL_10:
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_10;
  }
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 32);
  *char v4 = 26;
  unsigned int v14 = *(_DWORD *)(v13 + 16);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  char v4 = sub_1705980(v13, v15, a3);
  if ((v6 & 4) == 0)
  {
LABEL_11:
    if ((v6 & 8) == 0) {
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_26:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v16 = *(void *)(a1 + 40);
  *char v4 = 34;
  unsigned int v17 = *(_DWORD *)(v16 + 20);
  v4[1] = v17;
  if (v17 > 0x7F) {
    uint64_t v18 = sub_188A9CC(v17, v4 + 1);
  }
  else {
    uint64_t v18 = v4 + 2;
  }
  char v4 = sub_1705D24(v16, (unint64_t)v18, a3);
  if ((v6 & 8) == 0)
  {
LABEL_12:
    if ((v6 & 0x10) == 0) {
      goto LABEL_44;
    }
    goto LABEL_38;
  }
LABEL_32:
  if (*a3 <= (unint64_t)v4) {
    char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v19 = *(void *)(a1 + 48);
  *char v4 = 42;
  unsigned int v20 = *(_DWORD *)(v19 + 20);
  v4[1] = v20;
  if (v20 > 0x7F) {
    int v21 = sub_188A9CC(v20, v4 + 1);
  }
  else {
    int v21 = v4 + 2;
  }
  char v4 = sub_17062B0(v19, (unint64_t)v21, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_38:
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v22 = *(void *)(a1 + 56);
    *char v4 = 50;
    unsigned int v23 = *(_DWORD *)(v22 + 16);
    v4[1] = v23;
    if (v23 > 0x7F) {
      uint64_t v24 = sub_188A9CC(v23, v4 + 1);
    }
    else {
      uint64_t v24 = v4 + 2;
    }
    char v4 = sub_17066E8(v22, v24, a3);
  }
LABEL_44:
  uint64_t v25 = *(void *)(a1 + 8);
  if ((v25 & 1) == 0) {
    return v4;
  }
  unint64_t v27 = v25 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v27 + 31) < 0)
  {
    unint64_t v28 = *(void **)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
  }
  else
  {
    unint64_t v28 = (void *)(v27 + 8);
    LODWORD(v29) = *(unsigned __int8 *)(v27 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v29)
  {
    uint64_t v30 = (int)v29;
    memcpy(v4, v28, (int)v29);
    v4 += v30;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v28, v29, v4);
}

uint64_t sub_17073E0(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0x3F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_26;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(v4 + 8);
  if (v5)
  {
    unint64_t v21 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v6 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v21 + 31);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  *(_DWORD *)(v4 + 16) = v6;
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = *(void *)(a1 + 32);
    uint64_t v8 = *(void *)(v7 + 8);
    if (v8)
    {
      unint64_t v22 = v8 & 0xFFFFFFFFFFFFFFFCLL;
      if (*(char *)(v22 + 31) < 0) {
        uint64_t v9 = *(void *)(v22 + 16);
      }
      else {
        uint64_t v9 = *(unsigned __int8 *)(v22 + 31);
      }
    }
    else
    {
      uint64_t v9 = 0;
    }
    *(_DWORD *)(v7 + 16) = v9;
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = sub_1705E34(*(void *)(a1 + 40));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 8) == 0)
    {
LABEL_14:
      if ((v2 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_19;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v11 = sub_17063C0(*(void *)(a1 + 48));
  v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x10) == 0)
  {
LABEL_15:
    if ((v2 & 0x20) == 0) {
      goto LABEL_26;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(v12 + 8);
  if (v13)
  {
    unint64_t v23 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v14 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v23 + 31);
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  *(_DWORD *)(v12 + 16) = v14;
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 0x20) != 0)
  {
LABEL_22:
    int v15 = *(_DWORD *)(a1 + 64);
    if (v15 < 0) {
      uint64_t v16 = 11;
    }
    else {
      uint64_t v16 = ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v16;
  }
LABEL_26:
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v3 += v20;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_1707604(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x3F) == 0) {
    goto LABEL_51;
  }
  if (v4)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v5 = *(void *)(a1 + 24);
    if (!v5)
    {
      uint64_t v6 = *(void *)(a1 + 8);
      uint64_t v7 = (void *)(v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (v6) {
        uint64_t v7 = (void *)*v7;
      }
      uint64_t v5 = sub_1789C98((uint64_t)v7);
      *(void *)(a1 + 24) = v5;
    }
    uint64_t v8 = *(uint64_t (****)())(a2 + 24);
    if (!v8) {
      uint64_t v8 = &off_2546540;
    }
    unint64_t v9 = (unint64_t)v8[1];
    if (v9) {
      sub_188B4F8((uint64_t *)(v5 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 2) != 0)
  {
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_1789D10((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    if (!v13) {
      uint64_t v13 = &off_2546558;
    }
    unint64_t v14 = (unint64_t)v13[1];
    if (v14) {
      sub_188B4F8((uint64_t *)(v10 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
  if ((v4 & 4) == 0)
  {
    if ((v4 & 8) == 0) {
      goto LABEL_22;
    }
LABEL_32:
    *(_DWORD *)(a1 + 16) |= 8u;
    unint64_t v19 = *(void **)(a1 + 48);
    if (!v19)
    {
      uint64_t v20 = *(void *)(a1 + 8);
      unint64_t v21 = (void *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
      if (v20) {
        unint64_t v21 = (void *)*v21;
      }
      unint64_t v19 = sub_1789E00((uint64_t)v21);
      *(void *)(a1 + 48) = v19;
    }
    if (*(void *)(a2 + 48)) {
      unint64_t v22 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      unint64_t v22 = &off_2546590;
    }
    sub_1706448((uint64_t)v19, (uint64_t)v22);
    if ((v4 & 0x10) == 0) {
      goto LABEL_48;
    }
    goto LABEL_40;
  }
  *(_DWORD *)(a1 + 16) |= 4u;
  int v15 = *(std::string **)(a1 + 40);
  if (!v15)
  {
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
    if (v16) {
      uint64_t v17 = (void *)*v17;
    }
    int v15 = (std::string *)sub_1789D88((uint64_t)v17);
    *(void *)(a1 + 40) = v15;
  }
  if (*(void *)(a2 + 40)) {
    uint64_t v18 = *(uint64_t (****)())(a2 + 40);
  }
  else {
    uint64_t v18 = &off_2546570;
  }
  sub_1705EBC(v15, (uint64_t)v18);
  if ((v4 & 8) != 0) {
    goto LABEL_32;
  }
LABEL_22:
  if ((v4 & 0x10) != 0)
  {
LABEL_40:
    *(_DWORD *)(a1 + 16) |= 0x10u;
    uint64_t v23 = *(void *)(a1 + 56);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = sub_1789E78((uint64_t)v25);
      *(void *)(a1 + 56) = v23;
    }
    BOOL v26 = *(uint64_t (****)())(a2 + 56);
    if (!v26) {
      BOOL v26 = &off_25465B0;
    }
    unint64_t v27 = (unint64_t)v26[1];
    if (v27) {
      sub_188B4F8((uint64_t *)(v23 + 8), (v27 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
  }
LABEL_48:
  if ((v4 & 0x20) != 0) {
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  }
  *(_DWORD *)(a1 + 16) |= v4;
LABEL_51:
  uint64_t v28 = *(void *)(a2 + 8);
  if (v28)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v28 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_170784C(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 8) == 0) {
    return 1;
  }
  uint64_t v1 = *(void *)(a1 + 48);
  if ((*(unsigned char *)(v1 + 16) & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_1704CAC(*(void *)(v1 + 24));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1707884@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildAction");
}

uint64_t sub_1707894(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2546610)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v5)
    {
      sub_1704DD0(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 32);
    if (v6)
    {
      sub_17067E8(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1707964(uint64_t a1)
{
  sub_1707894(a1);

  operator delete();
}

uint64_t sub_170799C(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 3) != 0)
  {
    if (v2) {
      uint64_t result = (uint64_t)sub_1704EDC(*(void *)(result + 24));
    }
    if ((v2 & 2) != 0) {
      uint64_t result = sub_1706990(*(void *)(v1 + 32));
    }
  }
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 32) = 0;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1707A10(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v27 = a2;
  if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
    return v27;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v27 + 1;
    unsigned int v8 = *v27;
    if (*v27 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v27 + 2;
      }
    }
    unint64_t v27 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v16 = *(void *)(a1 + 32);
      if (!v16)
      {
        uint64_t v17 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v17 = (void *)*v17;
        }
        sub_1789EF0((uint64_t)v17);
        uint64_t v16 = v18;
        *(void *)(a1 + 32) = v18;
        uint64_t v7 = v27;
      }
      int v15 = sub_1707D08(a3, v16, (unsigned __int8 *)v7);
      goto LABEL_33;
    }
    if (v11 != 2) {
      break;
    }
    if (v8 != 18) {
      goto LABEL_14;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    unint64_t v19 = *(void **)(a1 + 24);
    if (!v19)
    {
      uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
      if (*v6) {
        uint64_t v20 = (void *)*v20;
      }
      unint64_t v19 = sub_1789C3C((uint64_t)v20);
      *(void *)(a1 + 24) = v19;
      uint64_t v7 = v27;
    }
    int v15 = (char *)sub_1707C78(a3, (uint64_t)v19, (unsigned __int8 *)v7);
LABEL_33:
    unint64_t v27 = v15;
    if (!v15) {
      return 0;
    }
LABEL_41:
    if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
      return v27;
    }
  }
  if (v11 == 1 && v8 == 8)
  {
    unint64_t v21 = v7 + 1;
    unint64_t v22 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_38;
    }
    int v23 = *v21;
    int v24 = v22 + (v23 << 7);
    unint64_t v22 = (v24 - 128);
    if (v23 < 0)
    {
      unint64_t v27 = (char *)sub_188C138((uint64_t)v7, (v24 - 128));
      if (!v27) {
        return 0;
      }
      unint64_t v22 = v25;
    }
    else
    {
      unint64_t v21 = v7 + 2;
LABEL_38:
      unint64_t v27 = v21;
    }
    if (v22 > 2)
    {
      if (*v6) {
        BOOL v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        BOOL v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(1, v22, v26);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 4u;
      *(_DWORD *)(a1 + 40) = v22;
    }
    goto LABEL_41;
  }
LABEL_14:
  if (v8) {
    BOOL v13 = (v8 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v6)
    {
      unint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v27;
    }
    int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
    goto LABEL_33;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v27;
  }
  return 0;
}

uint64_t sub_1707C78(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1704F78(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1707D08(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1706A4C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1707D98(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *char v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 24);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    char v4 = sub_170517C(v10, v12, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v13 = *(void *)(a1 + 32);
    *char v4 = 26;
    unsigned int v14 = *(_DWORD *)(v13 + 20);
    v4[1] = v14;
    if (v14 > 0x7F) {
      int v15 = sub_188A9CC(v14, v4 + 1);
    }
    else {
      int v15 = v4 + 2;
    }
    char v4 = sub_17070A4(v13, (unint64_t)v15, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    unint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    unint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_1707F94(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_13;
  }
  if (v2)
  {
    uint64_t v4 = sub_17052DC(*(void *)(a1 + 24));
    uint64_t v3 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_7:
    uint64_t v5 = sub_17073E0(*(void *)(a1 + 32));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6 < 0) {
      uint64_t v7 = 11;
    }
    else {
      uint64_t v7 = ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v3 += v7;
  }
LABEL_13:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

void sub_17080A0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 7) != 0)
  {
    if (v4)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      int v6 = *(void **)(a1 + 24);
      if (!v6)
      {
        uint64_t v7 = *(void *)(a1 + 8);
        uint64_t v8 = (void *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (v7) {
          uint64_t v8 = (void *)*v8;
        }
        int v6 = sub_1789C3C((uint64_t)v8);
        *(void *)(a1 + 24) = v6;
      }
      if (*(void *)(a2 + 24)) {
        unint64_t v9 = *(uint64_t (****)())(a2 + 24);
      }
      else {
        unint64_t v9 = &off_2546500;
      }
      sub_17053BC((uint64_t)v6, (uint64_t)v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0)
        {
LABEL_6:
          *(_DWORD *)(a1 + 16) |= v4;
          goto LABEL_7;
        }
LABEL_5:
        *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
        goto LABEL_6;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    uint64_t v10 = *(void *)(a1 + 32);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      sub_1789EF0((uint64_t)v12);
      *(void *)(a1 + 32) = v10;
    }
    if (*(void *)(a2 + 32)) {
      uint64_t v13 = *(uint64_t (****)())(a2 + 32);
    }
    else {
      uint64_t v13 = &off_25465C8;
    }
    sub_1707604(v10, (uint64_t)v13);
    if ((v4 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_7:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17081C8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if (v2)
  {
    uint64_t result = sub_17054B4(*(void *)(a1 + 24));
    if (!result) {
      return result;
    }
    int v2 = *(_DWORD *)(a1 + 16);
  }
  if ((v2 & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_170784C(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1708214@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet.ChildItem");
}

uint64_t sub_1708224(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D4F98;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = &qword_2550250;
  *(void *)(a1 + 104) = &qword_2550250;
  *(void *)(a1 + 112) = &qword_2550250;
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = 0;
  return a1;
}

void sub_17082B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_17082E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D4F98;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871D78(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    unsigned int v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1871E04((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    uint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *uint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 96) = &qword_2550250;
  int v18 = *(_DWORD *)(a2 + 40);
  if (v18)
  {
    unint64_t v19 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v19);
    int v18 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 104) = &qword_2550250;
  if ((v18 & 2) != 0)
  {
    uint64_t v20 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v20 = (uint64_t *)*v20;
    }
    sub_1881DF4((std::string **)(a1 + 104), (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL), v20);
    int v18 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 112) = &qword_2550250;
  if ((v18 & 4) != 0)
  {
    uint64_t v21 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 112), (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL), v21);
    int v18 = *(_DWORD *)(a2 + 40);
  }
  if ((v18 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 120) = 0;
  if ((v18 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 128) = 0;
  if ((v18 & 0x20) != 0) {
    operator new();
  }
  *(void *)(a1 + 136) = 0;
  *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
  return a1;
}

void sub_17085A0()
{
}

void *sub_170864C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_5;
    }
  }
  else if (v4)
  {
    goto LABEL_5;
  }
  sub_17086F0((uint64_t)a1);
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_5:
  sub_187003C(a1 + 9);
  sub_186FFBC(a1 + 6);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void ***sub_17086F0(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)(a1 + 96);
  uint64_t v2 = (void ***)(a1 + 96);
  if (v3 != &qword_2550250) {
    sub_1881C6C(v2);
  }
  if (*(uint64_t **)(a1 + 104) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 104));
  }
  uint64_t result = (void ***)(a1 + 112);
  if (*(uint64_t **)(a1 + 112) != &qword_2550250) {
    sub_1881C6C(result);
  }
  if ((uint64_t (***)())a1 != &off_2546640)
  {
    uint64_t v5 = *(void **)(a1 + 120);
    if (v5)
    {
      sub_16E340C(v5);
      operator delete();
    }
    if (*(void *)(a1 + 128))
    {
      sub_15B0994();
      operator delete();
    }
    uint64_t result = *(void ****)(a1 + 136);
    if (result)
    {
      sub_16E7E6C((uint64_t)result);
      operator delete();
    }
  }
  return result;
}

void sub_17087DC(void *a1)
{
  sub_170864C(a1);

  operator delete();
}

uint64_t sub_1708814(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = (uint64_t)sub_1704EDC(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_170799C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0x3F) == 0) {
    goto LABEL_17;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_12;
    }
LABEL_25:
    unint64_t v13 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v13 + 23) < 0)
    {
      **(unsigned char **)unint64_t v13 = 0;
      *(void *)(v13 + 8) = 0;
      if ((v9 & 4) != 0) {
        goto LABEL_29;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v13 = 0;
      *(unsigned char *)(v13 + 23) = 0;
      if ((v9 & 4) != 0) {
        goto LABEL_29;
      }
    }
LABEL_13:
    if ((v9 & 8) == 0) {
      goto LABEL_14;
    }
LABEL_33:
    uint64_t result = sub_16E34CC(*(void *)(a1 + 120));
    if ((v9 & 0x10) == 0)
    {
LABEL_15:
      if ((v9 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    goto LABEL_34;
  }
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v12 + 23) < 0)
  {
    **(unsigned char **)unint64_t v12 = 0;
    *(void *)(v12 + 8) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_25;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v9 & 2) != 0) {
      goto LABEL_25;
    }
  }
LABEL_12:
  if ((v9 & 4) == 0) {
    goto LABEL_13;
  }
LABEL_29:
  unint64_t v14 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v14 + 23) < 0)
  {
    **(unsigned char **)unint64_t v14 = 0;
    *(void *)(v14 + 8) = 0;
    if ((v9 & 8) != 0) {
      goto LABEL_33;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v14 = 0;
    *(unsigned char *)(v14 + 23) = 0;
    if ((v9 & 8) != 0) {
      goto LABEL_33;
    }
  }
LABEL_14:
  if ((v9 & 0x10) == 0) {
    goto LABEL_15;
  }
LABEL_34:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 128));
  if ((v9 & 0x20) != 0) {
LABEL_16:
  }
    uint64_t result = (uint64_t)sub_16E7F4C(*(void *)(a1 + 136));
LABEL_17:
  char v11 = *(unsigned char *)(a1 + 8);
  uint64_t v10 = a1 + 8;
  *(_DWORD *)(v10 + 136) = 0;
  *(_DWORD *)(v10 + 32) = 0;
  if (v11)
  {
    return sub_188B4AC((uint64_t *)v10);
  }
  return result;
}

uint64_t sub_17089A0(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v44 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v44 + 1);
    unsigned int v9 = **(unsigned char **)v44;
    if ((char)**(unsigned char **)v44 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v44, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v44 + 2);
      }
    }
    *(void *)BOOL v44 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 96);
        goto LABEL_33;
      case 2u:
        if (v9 != 18) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 104);
        goto LABEL_33;
      case 3u:
        if (v9 != 26) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v16 = *(void *)(a1 + 120);
        if (!v16)
        {
          uint64_t v17 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v17 = (void *)*v17;
          }
          uint64_t v16 = sub_1788078((uint64_t)v17);
          *(void *)(a1 + 120) = v16;
          uint64_t v8 = *(unsigned __int8 **)v44;
        }
        uint64_t v18 = (uint64_t)sub_16E5344(a3, v16, v8);
        goto LABEL_74;
      case 4u:
        if (v9 != 34) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v19 = *(void *)(a1 + 128);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_15C1918((uint64_t)v20);
          *(void *)(a1 + 128) = v19;
          uint64_t v8 = *(unsigned __int8 **)v44;
        }
        uint64_t v18 = (uint64_t)sub_1198F14(a3, v19, v8);
        goto LABEL_74;
      case 5u:
        if (v9 != 42) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v21 = *(void *)(a1 + 8);
        unint64_t v13 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
        if (v21) {
          unint64_t v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 112);
LABEL_33:
        unint64_t v22 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v18 = (uint64_t)sub_188C244(v22, *(char **)v44, (uint64_t)a3);
        goto LABEL_74;
      case 6u:
        if (v9 != 48) {
          goto LABEL_65;
        }
        v5 |= 0x40u;
        int v23 = (char *)(v8 + 1);
        int v24 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_38;
        }
        int v25 = *v23;
        int v24 = v24 + (v25 << 7) - 128;
        if (v25 < 0)
        {
          uint64_t v42 = sub_188C0D0((uint64_t)v8, v24);
          *(void *)BOOL v44 = v42;
          *(_DWORD *)(a1 + 144) = v43;
          if (!v42) {
            goto LABEL_82;
          }
        }
        else
        {
          int v23 = (char *)(v8 + 2);
LABEL_38:
          *(void *)BOOL v44 = v23;
          *(_DWORD *)(a1 + 144) = v24;
        }
        goto LABEL_75;
      case 8u:
        if (v9 != 66) {
          goto LABEL_65;
        }
        BOOL v26 = v8 - 1;
        while (1)
        {
          unint64_t v27 = v26 + 1;
          *(void *)BOOL v44 = v26 + 1;
          uint64_t v28 = *(_DWORD **)(a1 + 64);
          if (v28 && (uint64_t v29 = *(int *)(a1 + 56), (int)v29 < *v28))
          {
            *(_DWORD *)(a1 + 56) = v29 + 1;
            uint64_t v30 = *(void *)&v28[2 * v29 + 2];
          }
          else
          {
            uint64_t v31 = sub_1789C3C(*(void *)(a1 + 48));
            uint64_t v30 = sub_188CDC8(a1 + 48, (uint64_t)v31);
            unint64_t v27 = *(unsigned __int8 **)v44;
          }
          BOOL v26 = (unsigned __int8 *)sub_1707C78(a3, v30, v27);
          *(void *)BOOL v44 = v26;
          if (!v26) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v26 || *v26 != 66) {
            goto LABEL_75;
          }
        }
      case 9u:
        if (v9 != 74) {
          goto LABEL_65;
        }
        *(_DWORD *)(a1 + 40) |= 0x20u;
        unint64_t v32 = *(void **)(a1 + 136);
        if (!v32)
        {
          int v33 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v33 = (void *)*v33;
          }
          unint64_t v32 = sub_17883A8((uint64_t)v33);
          *(void *)(a1 + 136) = v32;
          uint64_t v8 = *(unsigned __int8 **)v44;
        }
        uint64_t v18 = sub_1708E90(a3, (uint64_t)v32, v8);
        goto LABEL_74;
      case 0xAu:
        if (v9 != 82) {
          goto LABEL_65;
        }
        uint64_t v34 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v35 = (unsigned __int8 *)(v34 + 1);
          *(void *)BOOL v44 = v34 + 1;
          unint64_t v36 = *(_DWORD **)(a1 + 88);
          if (v36 && (uint64_t v37 = *(int *)(a1 + 80), (int)v37 < *v36))
          {
            *(_DWORD *)(a1 + 80) = v37 + 1;
            uint64_t v38 = *(void *)&v36[2 * v37 + 2];
          }
          else
          {
            uint64_t v39 = sub_1789F74(*(void *)(a1 + 72));
            uint64_t v38 = sub_188CDC8(a1 + 72, v39);
            uint64_t v35 = *(unsigned __int8 **)v44;
          }
          uint64_t v34 = sub_1708F20(a3, v38, v35);
          *(void *)BOOL v44 = v34;
          if (!v34) {
            goto LABEL_82;
          }
          if (*(void *)a3 <= (unint64_t)v34 || *v34 != 82) {
            goto LABEL_75;
          }
        }
      default:
LABEL_65:
        if (v9) {
          BOOL v40 = (v9 & 7) == 4;
        }
        else {
          BOOL v40 = 1;
        }
        if (!v40)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v41 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v41 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(unsigned __int8 **)v44;
            }
            uint64_t v18 = (uint64_t)sub_1885AC0(v9, v41, (char *)v8, a3);
          }
          else
          {
            uint64_t v18 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2546640, (uint64_t *)(a1 + 8), a3);
          }
LABEL_74:
          *(void *)BOOL v44 = v18;
          if (!v18) {
            goto LABEL_82;
          }
LABEL_75:
          if (sub_11947B8((uint64_t)a3, (char **)v44, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_82:
        }
          *(void *)BOOL v44 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v44;
    }
  }
}

uint64_t sub_1708E90(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_16E7FD0(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1708F20(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1707A10(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1708FB0(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    int v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  int v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_10:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 120);
  *int v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 44);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  int v4 = sub_16E38F4(v7, v9, a3);
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_16:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 128);
  *int v4 = 34;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  int v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 4) == 0)
  {
LABEL_6:
    if ((v6 & 0x40) == 0) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_23:
  if (*a3 <= (unint64_t)v4) {
    int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unsigned int v13 = *(_DWORD *)(a1 + 144);
  *int v4 = 48;
  v4[1] = v13;
  if (v13 > 0x7F)
  {
    v4[1] = v13 | 0x80;
    unsigned int v14 = v13 >> 7;
    v4[2] = v13 >> 7;
    v4 += 3;
    if (v13 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unsigned int v15 = v14 >> 14;
        v14 >>= 7;
        *v4++ = v14;
      }
      while (v15);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_29:
  int v16 = *(_DWORD *)(a1 + 56);
  if (v16)
  {
    for (int i = 0; i != v16; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v18 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 66;
      unsigned int v19 = *(_DWORD *)(v18 + 44);
      v4[1] = v19;
      if (v19 > 0x7F) {
        uint64_t v20 = sub_188A9CC(v19, v4 + 1);
      }
      else {
        uint64_t v20 = v4 + 2;
      }
      int v4 = sub_170517C(v18, v20, a3);
    }
  }
  if ((v6 & 0x20) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v21 = *(void *)(a1 + 136);
    *int v4 = 74;
    unsigned int v22 = *(_DWORD *)(v21 + 44);
    v4[1] = v22;
    if (v22 > 0x7F) {
      int v23 = sub_188A9CC(v22, v4 + 1);
    }
    else {
      int v23 = v4 + 2;
    }
    int v4 = sub_16E8164(v21, v23, a3);
  }
  int v24 = *(_DWORD *)(a1 + 80);
  if (v24)
  {
    for (int j = 0; j != v24; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v26 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *int v4 = 82;
      unsigned int v27 = *(_DWORD *)(v26 + 20);
      v4[1] = v27;
      if (v27 > 0x7F) {
        uint64_t v28 = sub_188A9CC(v27, v4 + 1);
      }
      else {
        uint64_t v28 = v4 + 2;
      }
      int v4 = sub_1707D98(v26, (unint64_t)v28, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v29 = *(void *)(a1 + 8);
  if ((v29 & 1) == 0) {
    return v4;
  }
  unint64_t v31 = v29 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v31 + 31) < 0)
  {
    unint64_t v32 = *(void **)(v31 + 8);
    uint64_t v33 = *(void *)(v31 + 16);
  }
  else
  {
    unint64_t v32 = (void *)(v31 + 8);
    LODWORD(v33) = *(unsigned __int8 *)(v31 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v33)
  {
    uint64_t v34 = (int)v33;
    memcpy(v4, v32, (int)v33);
    v4 += v34;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v32, v33, v4);
}

uint64_t sub_17093C0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17052DC(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1707F94(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 0x7F) == 0) {
    goto LABEL_22;
  }
  if (v17)
  {
    unint64_t v20 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v11 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 2) == 0)
    {
LABEL_16:
      if ((v17 & 4) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v17 & 2) == 0)
  {
    goto LABEL_16;
  }
  unint64_t v23 = *(void *)(a1 + 104) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v24 = *(unsigned __int8 *)(v23 + 23);
  uint64_t v25 = *(void *)(v23 + 8);
  if ((v24 & 0x80u) == 0) {
    uint64_t v25 = v24;
  }
  v11 += v25 + ((9 * (__clz(v25 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 4) == 0)
  {
LABEL_17:
    if ((v17 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_30:
  unint64_t v26 = *(void *)(a1 + 112) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v27 = *(unsigned __int8 *)(v26 + 23);
  uint64_t v28 = *(void *)(v26 + 8);
  if ((v27 & 0x80u) == 0) {
    uint64_t v28 = v27;
  }
  v11 += v28 + ((9 * (__clz(v28 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 8) == 0)
  {
LABEL_18:
    if ((v17 & 0x10) == 0) {
      goto LABEL_19;
    }
LABEL_34:
    uint64_t v30 = sub_15B0D90(*(void *)(a1 + 128));
    v11 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v17 & 0x20) == 0)
    {
LABEL_20:
      if ((v17 & 0x40) == 0) {
        goto LABEL_22;
      }
      goto LABEL_21;
    }
    goto LABEL_35;
  }
LABEL_33:
  uint64_t v29 = sub_16E3BD4(*(void *)(a1 + 120));
  v11 += v29 + ((9 * (__clz(v29 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 0x10) != 0) {
    goto LABEL_34;
  }
LABEL_19:
  if ((v17 & 0x20) == 0) {
    goto LABEL_20;
  }
LABEL_35:
  uint64_t v31 = sub_16E8254(*(void *)(a1 + 136));
  v11 += v31 + ((9 * (__clz(v31 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v17 & 0x40) != 0) {
LABEL_21:
  }
    v11 += ((9 * (__clz(*(_DWORD *)(a1 + 144) | 1) ^ 0x1F) + 73) >> 6) + 1;
LABEL_22:
  uint64_t v18 = *(void *)(a1 + 8);
  if (v18)
  {
    unint64_t v32 = v18 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v32 + 31) < 0) {
      uint64_t v33 = *(void *)(v32 + 16);
    }
    else {
      uint64_t v33 = *(unsigned __int8 *)(v32 + 31);
    }
    v11 += v33;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_1709670(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871D78((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1871E04((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 0x7F) != 0)
  {
    if (v14)
    {
      uint64_t v16 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      sub_1881DF4((std::string **)(a1 + 96), v16, v18);
      if ((v14 & 2) == 0)
      {
LABEL_10:
        if ((v14 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_27;
      }
    }
    else if ((v14 & 2) == 0)
    {
      goto LABEL_10;
    }
    unsigned int v19 = (long long *)(*(void *)(a2 + 104) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 104), v19, v21);
    if ((v14 & 4) == 0)
    {
LABEL_11:
      if ((v14 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_30;
    }
LABEL_27:
    uint64_t v22 = (long long *)(*(void *)(a2 + 112) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v23 = *(void *)(a1 + 8);
    uint64_t v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      uint64_t v24 = (uint64_t *)*v24;
    }
    sub_1881DF4((std::string **)(a1 + 112), v22, v24);
    if ((v14 & 8) == 0)
    {
LABEL_12:
      if ((v14 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v25 = *(void *)(a1 + 120);
    if (!v25)
    {
      uint64_t v26 = *(void *)(a1 + 8);
      uint64_t v27 = (void *)(v26 & 0xFFFFFFFFFFFFFFFCLL);
      if (v26) {
        uint64_t v27 = (void *)*v27;
      }
      uint64_t v25 = sub_1788078((uint64_t)v27);
      *(void *)(a1 + 120) = v25;
    }
    if (*(void *)(a2 + 120)) {
      uint64_t v28 = *(uint64_t (****)())(a2 + 120);
    }
    else {
      uint64_t v28 = &off_25456A8;
    }
    sub_16E3D14(v25, (uint64_t)v28);
    if ((v14 & 0x10) == 0)
    {
LABEL_13:
      if ((v14 & 0x20) == 0) {
        goto LABEL_14;
      }
      goto LABEL_46;
    }
LABEL_38:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v29 = *(void *)(a1 + 128);
    if (!v29)
    {
      uint64_t v30 = *(void *)(a1 + 8);
      uint64_t v31 = (void *)(v30 & 0xFFFFFFFFFFFFFFFCLL);
      if (v30) {
        uint64_t v31 = (void *)*v31;
      }
      uint64_t v29 = sub_15C1918((uint64_t)v31);
      *(void *)(a1 + 128) = v29;
    }
    if (*(void *)(a2 + 128)) {
      unint64_t v32 = *(uint64_t (****)())(a2 + 128);
    }
    else {
      unint64_t v32 = &off_253F1A0;
    }
    sub_15B0E24(v29, (uint64_t)v32);
    if ((v14 & 0x20) == 0)
    {
LABEL_14:
      if ((v14 & 0x40) == 0)
      {
LABEL_16:
        *(_DWORD *)(a1 + 40) |= v14;
        goto LABEL_17;
      }
LABEL_15:
      *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
      goto LABEL_16;
    }
LABEL_46:
    *(_DWORD *)(a1 + 40) |= 0x20u;
    uint64_t v33 = *(void **)(a1 + 136);
    if (!v33)
    {
      uint64_t v34 = *(void *)(a1 + 8);
      uint64_t v35 = (void *)(v34 & 0xFFFFFFFFFFFFFFFCLL);
      if (v34) {
        uint64_t v35 = (void *)*v35;
      }
      uint64_t v33 = sub_17883A8((uint64_t)v35);
      *(void *)(a1 + 136) = v33;
    }
    if (*(void *)(a2 + 136)) {
      unint64_t v36 = *(uint64_t (****)())(a2 + 136);
    }
    else {
      unint64_t v36 = &off_25458E8;
    }
    sub_16C1200((uint64_t)v33, (uint64_t)v36);
    if ((v14 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_17:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v15 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1709970(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_17054B4(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_17081C8(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    int v9 = *(_DWORD *)(a1 + 40);
    if ((v9 & 8) != 0)
    {
      uint64_t result = sub_18856CC(*(void *)(a1 + 120) + 16);
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x10) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 128));
      if (!result) {
        return result;
      }
      int v9 = *(_DWORD *)(a1 + 40);
    }
    if ((v9 & 0x20) == 0) {
      return 1;
    }
    uint64_t result = sub_18856CC(*(void *)(a1 + 136) + 16);
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1709A38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippet");
}

void *sub_1709A48(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1889DA8((uint64_t)(a1 + 3));
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1709AC4(void *a1)
{
  sub_1709A48(a1);

  operator delete();
}

uint64_t sub_1709AFC(uint64_t a1)
{
  *(_DWORD *)(a1 + 24) = 0;
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(unsigned char *)(a1 + 40) = 0;
    *(void *)(a1 + 44) = 0x300000003;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1709B2C(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v40 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = v40 + 1;
    unsigned int v9 = *v40;
    if (*v40 < 0)
    {
      int v10 = *v8;
      unsigned int v11 = v9 + (v10 << 7);
      unsigned int v9 = v11 - 128;
      if (v10 < 0)
      {
        char v8 = (char *)sub_188C180((uint64_t)v40, v11 - 128);
        unsigned int v9 = v12;
      }
      else
      {
        char v8 = v40 + 2;
      }
    }
    BOOL v40 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 8) {
          goto LABEL_52;
        }
        v5 |= 2u;
        int v14 = v8 + 1;
        LODWORD(v13) = *v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_13;
        }
        int v15 = *v14;
        uint64_t v13 = v13 + (v15 << 7) - 128;
        if ((v15 & 0x80000000) == 0)
        {
          int v14 = v8 + 2;
LABEL_13:
          BOOL v40 = v14;
          *(_DWORD *)(a1 + 44) = v13;
          goto LABEL_60;
        }
        uint64_t v31 = (char *)sub_188C138((uint64_t)v8, v13);
        BOOL v40 = v31;
        *(_DWORD *)(a1 + 44) = v32;
        if (!v31) {
          goto LABEL_65;
        }
        goto LABEL_60;
      case 2u:
        if (v9 != 16) {
          goto LABEL_52;
        }
        v5 |= 1u;
        uint64_t v16 = v8 + 1;
        uint64_t v17 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_18;
        }
        int v18 = *v16;
        uint64_t v17 = v17 + (v18 << 7) - 128;
        if (v18 < 0)
        {
          uint64_t v33 = (char *)sub_188C138((uint64_t)v8, v17);
          BOOL v40 = v33;
          *(unsigned char *)(a1 + 40) = v34 != 0;
          if (!v33) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v16 = v8 + 2;
LABEL_18:
          BOOL v40 = v16;
          *(unsigned char *)(a1 + 40) = v17 != 0;
        }
        goto LABEL_60;
      case 3u:
        if (v9 != 24) {
          goto LABEL_52;
        }
        v5 |= 4u;
        uint64_t v20 = v8 + 1;
        LODWORD(v19) = *v8;
        if ((v19 & 0x80) == 0) {
          goto LABEL_23;
        }
        int v21 = *v20;
        uint64_t v19 = v19 + (v21 << 7) - 128;
        if (v21 < 0)
        {
          uint64_t v35 = (char *)sub_188C138((uint64_t)v8, v19);
          BOOL v40 = v35;
          *(_DWORD *)(a1 + 48) = v36;
          if (!v35) {
            goto LABEL_65;
          }
        }
        else
        {
          uint64_t v20 = v8 + 2;
LABEL_23:
          BOOL v40 = v20;
          *(_DWORD *)(a1 + 48) = v19;
        }
        goto LABEL_60;
      case 4u:
        if (v9 == 32)
        {
          uint64_t v22 = v8 - 1;
          while (1)
          {
            BOOL v40 = v22 + 1;
            unint64_t v23 = v22[1];
            uint64_t v24 = v22 + 2;
            if (v22[1] < 0)
            {
              int v25 = *v24;
              int v26 = v23 + (v25 << 7);
              unint64_t v23 = (v26 - 128);
              if (v25 < 0)
              {
                BOOL v40 = (char *)sub_188C138((uint64_t)(v22 + 1), (v26 - 128));
                if (!v40) {
                  goto LABEL_65;
                }
                unint64_t v23 = v29;
                goto LABEL_30;
              }
              uint64_t v24 = v22 + 3;
            }
            BOOL v40 = v24;
LABEL_30:
            if (v23 > 8)
            {
              if (*v7) {
                uint64_t v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
              }
              else {
                uint64_t v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              }
              sub_188C020(4, v23, v30);
            }
            else
            {
              uint64_t v27 = *(unsigned int *)(a1 + 24);
              if (v27 == *(_DWORD *)(a1 + 28))
              {
                int v28 = v27 + 1;
                sub_188C80C((unsigned int *)(a1 + 24), v27 + 1);
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
              }
              else
              {
                *(_DWORD *)(*(void *)(a1 + 32) + 4 * v27) = v23;
                int v28 = v27 + 1;
              }
              *(_DWORD *)(a1 + 24) = v28;
            }
            uint64_t v22 = v40;
            if (*(void *)a3 <= (unint64_t)v40 || *v40 != 32) {
              goto LABEL_60;
            }
          }
        }
        if (v9 == 34)
        {
          *(void *)&long long v41 = a1 + 24;
          *((void *)&v41 + 1) = sub_16B59B4;
          uint64_t v42 = a1 + 8;
          int v43 = 4;
          uint64_t v37 = sub_1112E88((uint64_t)a3, v8, &v41);
LABEL_59:
          BOOL v40 = v37;
          if (!v37) {
            goto LABEL_65;
          }
LABEL_60:
          if (sub_11947B8((uint64_t)a3, &v40, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
LABEL_52:
        if (v9) {
          BOOL v38 = (v9 & 7) == 4;
        }
        else {
          BOOL v38 = 1;
        }
        if (!v38)
        {
          if (*v7)
          {
            uint64_t v39 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v39 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            char v8 = v40;
          }
          uint64_t v37 = (char *)sub_1885AC0(v9, v39, v8, a3);
          goto LABEL_59;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_65:
        }
          BOOL v40 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return v40;
      default:
        goto LABEL_52;
    }
  }
}

unsigned char *sub_1709EEC(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 44);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    char v10 = *(unsigned char *)(a1 + 40);
    *uint64_t v4 = 16;
    v4[1] = v10;
    v4 += 2;
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v11 = *(int *)(a1 + 48);
    *uint64_t v4 = 24;
    v4[1] = v11;
    if (v11 > 0x7F)
    {
      v4[1] = v11 | 0x80;
      unint64_t v12 = v11 >> 7;
      v4[2] = v11 >> 7;
      v4 += 3;
      if (v11 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v13 = v12 >> 14;
          v12 >>= 7;
          *v4++ = v12;
        }
        while (v13);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v14 = *(unsigned int *)(a1 + 24);
  if ((int)v14 >= 1)
  {
    for (uint64_t i = 0; i != v14; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      unint64_t v16 = *(int *)(*(void *)(a1 + 32) + 4 * i);
      *uint64_t v4 = 32;
      v4[1] = v16;
      if (v16 > 0x7F)
      {
        v4[1] = v16 | 0x80;
        unint64_t v17 = v16 >> 7;
        v4[2] = v16 >> 7;
        v4 += 3;
        if (v16 >= 0x4000)
        {
          do
          {
            *(v4 - 1) |= 0x80u;
            unint64_t v18 = v17 >> 14;
            v17 >>= 7;
            *v4++ = v17;
          }
          while (v18);
        }
      }
      else
      {
        v4 += 2;
      }
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_170A170(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 24);
  if (v1)
  {
    int v2 = 0;
    uint64_t v3 = 0;
    do
    {
      int v4 = *(_DWORD *)(*(void *)(a1 + 32) + 4 * v2);
      if (v4 < 0) {
        uint64_t v5 = 10;
      }
      else {
        uint64_t v5 = (9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6;
      }
      v3 += v5;
      ++v2;
    }
    while (v1 != v2);
  }
  else
  {
    uint64_t v3 = 0;
  }
  uint64_t v6 = v3 + v1;
  int v7 = *(_DWORD *)(a1 + 16);
  if ((v7 & 7) != 0)
  {
    if (v7) {
      v6 += 2;
    }
    if ((v7 & 2) != 0)
    {
      int v8 = *(_DWORD *)(a1 + 44);
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v8 >= 0) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = 11;
      }
      v6 += v10;
    }
    if ((v7 & 4) != 0)
    {
      int v11 = *(_DWORD *)(a1 + 48);
      uint64_t v12 = ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v11 >= 0) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 11;
      }
      v6 += v13;
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if (v14)
  {
    unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v6 += v17;
  }
  *(_DWORD *)(a1 + 20) = v6;
  return v6;
}

std::string *sub_170A280(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = result + 1;
    uint64_t data_low = SLODWORD(result[1].__r_.__value_.__l.__data_);
    sub_188C80C((unsigned int *)&result[1], data_low + v4);
    std::string::size_type size = v3[1].__r_.__value_.__l.__size_;
    LODWORD(v5->__r_.__value_.__l.__data_) += *(_DWORD *)(a2 + 24);
    uint64_t result = (std::string *)memcpy((void *)(size + 4 * data_low), *(const void **)(a2 + 32), 4 * *(int *)(a2 + 24));
  }
  int v8 = *(_DWORD *)(a2 + 16);
  if ((v8 & 7) != 0)
  {
    if (v8)
    {
      v3[1].__r_.__value_.__s.__data_[16] = *(unsigned char *)(a2 + 40);
      if ((v8 & 2) == 0)
      {
LABEL_6:
        if ((v8 & 4) == 0)
        {
LABEL_8:
          LODWORD(v3->__r_.__value_.__r.__words[2]) |= v8;
          goto LABEL_9;
        }
LABEL_7:
        LODWORD(v3[2].__r_.__value_.__l.__data_) = *(_DWORD *)(a2 + 48);
        goto LABEL_8;
      }
    }
    else if ((v8 & 2) == 0)
    {
      goto LABEL_6;
    }
    HIDWORD(v3[1].__r_.__value_.__r.__words[2]) = *(_DWORD *)(a2 + 44);
    if ((v8 & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_170A36C()
{
  return 1;
}

void *sub_170A374@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ResultSnippetFilter");
}

uint64_t sub_170A384(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D5098;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = &qword_2550250;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  return a1;
}

void sub_170A3FC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_170A42C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D5098;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    int v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v9;
  return a1;
}

void sub_170A5A8()
{
}

uint64_t sub_170A62C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2546710)
  {
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_184AFBC(v6);
      operator delete();
    }
    if (*(void *)(a1 + 64))
    {
      sub_15B0994();
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_145FE08();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170A740(uint64_t a1)
{
  sub_170A62C(a1);

  operator delete();
}

uint64_t sub_170A778(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v3 & 1) == 0)
  {
    if ((v3 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 56));
    if ((v3 & 4) == 0)
    {
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_16;
  }
  unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v6 + 23) < 0)
  {
    **(unsigned char **)unint64_t v6 = 0;
    *(void *)(v6 + 8) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_15;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v3 & 2) != 0) {
      goto LABEL_15;
    }
  }
LABEL_4:
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_16:
  uint64_t result = (uint64_t)sub_15B09D0(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1369BB4(*(void *)(a1 + 72));
LABEL_7:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(void *)(v4 + 72) = 0;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_170A840(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v29 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    int v8 = (unsigned __int8 *)(*(void *)v29 + 1);
    unsigned int v9 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        int v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        int v8 = (unsigned __int8 *)(*(void *)v29 + 2);
      }
    }
    *(void *)unint64_t v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v12 = *(void *)(a1 + 56);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 56) = v12;
          int v8 = *(unsigned __int8 **)v29;
        }
        uint64_t v14 = sub_12688D0(a3, v12, v8);
        goto LABEL_45;
      case 2u:
        if (v9 != 18) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v15 = *(void *)(a1 + 8);
        unint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unint64_t v16 = (uint64_t *)*v16;
        }
        uint64_t v17 = (std::string *)sub_1880F84((void *)(a1 + 48), v16);
        uint64_t v14 = (void *)sub_188C244(v17, *(char **)v29, (uint64_t)a3);
        goto LABEL_45;
      case 3u:
        if (v9 != 26) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v18 = *(void *)(a1 + 64);
        if (!v18)
        {
          uint64_t v19 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v19 = (void *)*v19;
          }
          uint64_t v18 = sub_15C1918((uint64_t)v19);
          *(void *)(a1 + 64) = v18;
          int v8 = *(unsigned __int8 **)v29;
        }
        uint64_t v14 = sub_1198F14(a3, v18, v8);
        goto LABEL_45;
      case 4u:
        if (v9 != 34) {
          goto LABEL_36;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v20 = *(void **)(a1 + 72);
        if (!v20)
        {
          unint64_t v21 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            unint64_t v21 = (void *)*v21;
          }
          uint64_t v20 = sub_1478C60((uint64_t)v21);
          *(void *)(a1 + 72) = v20;
          int v8 = *(unsigned __int8 **)v29;
        }
        uint64_t v14 = sub_129760C(a3, (uint64_t)v20, v8);
        goto LABEL_45;
      case 5u:
        if (v9 != 40) {
          goto LABEL_36;
        }
        v5 |= 0x10u;
        uint64_t v22 = (char *)(v8 + 1);
        uint64_t v23 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_35;
        }
        int v24 = *v22;
        uint64_t v23 = v23 + (v24 << 7) - 128;
        if (v24 < 0)
        {
          uint64_t v27 = sub_188C138((uint64_t)v8, v23);
          *(void *)unint64_t v29 = v27;
          *(void *)(a1 + 80) = v28;
          if (!v27) {
            goto LABEL_53;
          }
        }
        else
        {
          uint64_t v22 = (char *)(v8 + 2);
LABEL_35:
          *(void *)unint64_t v29 = v22;
          *(void *)(a1 + 80) = v23;
        }
        goto LABEL_46;
      default:
LABEL_36:
        if (v9) {
          BOOL v25 = (v9 & 7) == 4;
        }
        else {
          BOOL v25 = 1;
        }
        if (!v25)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              int v26 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              int v8 = *(unsigned __int8 **)v29;
            }
            uint64_t v14 = sub_1885AC0(v9, v26, (char *)v8, a3);
          }
          else
          {
            uint64_t v14 = sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_2546710, (uint64_t *)(a1 + 8), a3);
          }
LABEL_45:
          *(void *)unint64_t v29 = v14;
          if (!v14) {
            goto LABEL_53;
          }
LABEL_46:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_53:
        }
          *(void *)unint64_t v29 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v29;
    }
  }
}

char *sub_170AB8C(uint64_t a1, char *a2, _DWORD *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 56);
    *uint64_t v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    uint64_t v4 = sub_184B3AC(v7, v9, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_14:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 64);
  *uint64_t v4 = 26;
  unsigned int v11 = *(_DWORD *)(v10 + 44);
  v4[1] = v11;
  if (v11 > 0x7F) {
    uint64_t v12 = sub_188A9CC(v11, v4 + 1);
  }
  else {
    uint64_t v12 = v4 + 2;
  }
  uint64_t v4 = sub_15B0C0C(v10, v12, a3);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_32;
    }
    goto LABEL_26;
  }
LABEL_20:
  if (*(void *)a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v13 = *(void *)(a1 + 72);
  *uint64_t v4 = 34;
  unsigned int v14 = *(_DWORD *)(v13 + 44);
  v4[1] = v14;
  if (v14 > 0x7F) {
    uint64_t v15 = sub_188A9CC(v14, v4 + 1);
  }
  else {
    uint64_t v15 = v4 + 2;
  }
  uint64_t v4 = sub_1460138(v13, v15, a3);
  if ((v6 & 0x10) != 0)
  {
LABEL_26:
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v16 = *(void *)(a1 + 80);
    *uint64_t v4 = 40;
    v4[1] = v16;
    if (v16 > 0x7F)
    {
      v4[1] = v16 | 0x80;
      unint64_t v17 = v16 >> 7;
      v4[2] = v16 >> 7;
      v4 += 3;
      if (v16 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v18 = v17 >> 14;
          v17 >>= 7;
          *v4++ = v17;
        }
        while (v18);
      }
    }
    else
    {
      v4 += 2;
    }
  }
LABEL_32:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if ((v19 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    uint64_t v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    uint64_t v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_170AE44(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0x1F) == 0) {
    goto LABEL_8;
  }
  if (v4)
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    uint64_t v3 = v2 + v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t v11 = sub_15B0D90(*(void *)(a1 + 64));
      v3 += v11 + ((9 * (__clz(v11 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v4 & 8) == 0)
      {
LABEL_6:
        if ((v4 & 0x10) == 0) {
          goto LABEL_8;
        }
        goto LABEL_7;
      }
      goto LABEL_15;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v10 = sub_184B568(*(void *)(a1 + 56));
  v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 4) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v4 & 8) == 0) {
    goto LABEL_6;
  }
LABEL_15:
  uint64_t v12 = sub_1460320(*(void *)(a1 + 72));
  v3 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 0x10) != 0) {
LABEL_7:
  }
    v3 += ((9 * (__clz(*(void *)(a1 + 80) | 1) ^ 0x3F) + 73) >> 6) + 1;
LABEL_8:
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v13 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v3 += v14;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_170AFC4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      int v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_24;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v10 = *(void *)(a1 + 56);
    if (!v10)
    {
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
      if (v11) {
        uint64_t v12 = (void *)*v12;
      }
      uint64_t v10 = sub_185089C((uint64_t)v12);
      *(void *)(a1 + 56) = v10;
    }
    if (*(void *)(a2 + 56)) {
      unint64_t v13 = *(uint64_t (****)())(a2 + 56);
    }
    else {
      unint64_t v13 = &off_254D2B0;
    }
    sub_16CE3CC(v10, (uint64_t)v13);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_32;
    }
LABEL_24:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v14 = *(void *)(a1 + 64);
    if (!v14)
    {
      uint64_t v15 = *(void *)(a1 + 8);
      unint64_t v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
      if (v15) {
        unint64_t v16 = (void *)*v16;
      }
      uint64_t v14 = sub_15C1918((uint64_t)v16);
      *(void *)(a1 + 64) = v14;
    }
    if (*(void *)(a2 + 64)) {
      unint64_t v17 = *(uint64_t (****)())(a2 + 64);
    }
    else {
      unint64_t v17 = &off_253F1A0;
    }
    sub_15B0E24(v14, (uint64_t)v17);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      goto LABEL_8;
    }
LABEL_32:
    *(_DWORD *)(a1 + 40) |= 8u;
    unint64_t v18 = *(void **)(a1 + 72);
    if (!v18)
    {
      uint64_t v19 = *(void *)(a1 + 8);
      uint64_t v20 = (void *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
      if (v19) {
        uint64_t v20 = (void *)*v20;
      }
      unint64_t v18 = sub_1478C60((uint64_t)v20);
      *(void *)(a1 + 72) = v18;
    }
    if (*(void *)(a2 + 72)) {
      unint64_t v21 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      unint64_t v21 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v18, (uint64_t)v21);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_170B180(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    int v3 = *(_DWORD *)(a1 + 40);
    if ((v3 & 2) != 0)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 56));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 4) != 0)
    {
      uint64_t result = sub_15B0F18(*(void *)(a1 + 64));
      if (!result) {
        return result;
      }
      int v3 = *(_DWORD *)(a1 + 40);
    }
    if ((v3 & 8) == 0) {
      return 1;
    }
    uint64_t result = sub_136AEA0(*(void *)(a1 + 72));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_170B1EC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LinkedPlace");
}

uint64_t sub_170B1FC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D5118;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  return a1;
}

void sub_170B274(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_170B2A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D5118;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  int v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871E90(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1871E90((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *unint64_t v16 = v15;
    }
  }
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  if (*(unsigned char *)(a2 + 40)) {
    operator new();
  }
  uint64_t v18 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = v18;
  return a1;
}

void sub_170B458()
{
}

uint64_t sub_170B4DC(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_8;
    }
  }
  else if (v4)
  {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a1 + 8) & 1;
  if ((uint64_t (***)())a1 != &off_2546768)
  {
    uint64_t v6 = *(void *)(a1 + 96);
    if (v6)
    {
      sub_170A62C(v6);
      operator delete();
    }
  }
  if (v5) {
    sub_10E4F74(v3);
  }
LABEL_8:
  sub_18700BC((void *)(a1 + 72));
  sub_18700BC((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170B5B4(uint64_t a1)
{
  sub_170B4DC(a1);

  operator delete();
}

uint64_t sub_170B5EC(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_170A778(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_170A778(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  if (*(unsigned char *)(a1 + 40)) {
    uint64_t result = sub_170A778(*(void *)(a1 + 96));
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(void *)(v9 + 96) = 0;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

char *sub_170B6B0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v34 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v34 + 1;
    unsigned int v9 = *v34;
    if (*v34 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v34, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v34 + 2;
      }
    }
    uint64_t v34 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_40;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 96);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_178A0F4((uint64_t)v13);
          *(void *)(a1 + 96) = v12;
          uint64_t v8 = v34;
        }
        uint64_t v14 = (char *)sub_170BA30(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_49;
      case 2u:
        if (v9 != 18) {
          goto LABEL_40;
        }
        int v15 = v8 - 1;
        while (1)
        {
          unint64_t v16 = (unsigned __int8 *)(v15 + 1);
          uint64_t v34 = v15 + 1;
          uint64_t v17 = *(_DWORD **)(a1 + 64);
          if (v17 && (uint64_t v18 = *(int *)(a1 + 56), (int)v18 < *v17))
          {
            *(_DWORD *)(a1 + 56) = v18 + 1;
            uint64_t v19 = *(void *)&v17[2 * v18 + 2];
          }
          else
          {
            uint64_t v20 = sub_178A0F4(*(void *)(a1 + 48));
            uint64_t v19 = sub_188CDC8(a1 + 48, v20);
            unint64_t v16 = (unsigned __int8 *)v34;
          }
          int v15 = (char *)sub_170BA30(a3, v19, v16);
          uint64_t v34 = v15;
          if (!v15) {
            goto LABEL_57;
          }
          if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
            goto LABEL_50;
          }
        }
      case 3u:
        if (v9 != 24) {
          goto LABEL_40;
        }
        v5 |= 2u;
        unint64_t v21 = v8 + 1;
        uint64_t v22 = *v8;
        if ((*v8 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v23 = *v21;
        uint64_t v22 = v22 + (v23 << 7) - 128;
        if (v23 < 0)
        {
          int v32 = (char *)sub_188C138((uint64_t)v8, v22);
          uint64_t v34 = v32;
          *(void *)(a1 + 104) = v33;
          if (!v32) {
            goto LABEL_57;
          }
        }
        else
        {
          unint64_t v21 = v8 + 2;
LABEL_29:
          uint64_t v34 = v21;
          *(void *)(a1 + 104) = v22;
        }
        goto LABEL_50;
      case 4u:
        if (v9 != 34) {
          goto LABEL_40;
        }
        uint64_t v24 = v8 - 1;
        while (1)
        {
          BOOL v25 = (unsigned __int8 *)(v24 + 1);
          uint64_t v34 = v24 + 1;
          int v26 = *(_DWORD **)(a1 + 88);
          if (v26 && (uint64_t v27 = *(int *)(a1 + 80), (int)v27 < *v26))
          {
            *(_DWORD *)(a1 + 80) = v27 + 1;
            uint64_t v28 = *(void *)&v26[2 * v27 + 2];
          }
          else
          {
            uint64_t v29 = sub_178A0F4(*(void *)(a1 + 72));
            uint64_t v28 = sub_188CDC8(a1 + 72, v29);
            BOOL v25 = (unsigned __int8 *)v34;
          }
          uint64_t v24 = (char *)sub_170BA30(a3, v28, v25);
          uint64_t v34 = v24;
          if (!v24) {
            goto LABEL_57;
          }
          if (*(void *)a3 <= (unint64_t)v24 || *v24 != 34) {
            goto LABEL_50;
          }
        }
      default:
LABEL_40:
        if (v9) {
          BOOL v30 = (v9 & 7) == 4;
        }
        else {
          BOOL v30 = 1;
        }
        if (!v30)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              uint64_t v31 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v34;
            }
            uint64_t v14 = (char *)sub_1885AC0(v9, v31, v8, a3);
          }
          else
          {
            uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2546768, (uint64_t *)(a1 + 8), a3);
          }
LABEL_49:
          uint64_t v34 = v14;
          if (!v14) {
            goto LABEL_57;
          }
LABEL_50:
          if (sub_11947B8((uint64_t)a3, &v34, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_57:
        }
          uint64_t v34 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v34;
    }
  }
}

uint64_t sub_170BA30(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_170A840(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_170BAC0(uint64_t a1, char *a2, _DWORD *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 96);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_170AB8C(v7, v9, a3);
  }
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 18;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        uint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        uint64_t v14 = v4 + 2;
      }
      int v4 = sub_170AB8C(v12, v14, a3);
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v15 = *(void *)(a1 + 104);
    *int v4 = 24;
    v4[1] = v15;
    if (v15 > 0x7F)
    {
      v4[1] = v15 | 0x80;
      unint64_t v16 = v15 >> 7;
      v4[2] = v15 >> 7;
      v4 += 3;
      if (v15 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v17 = v16 >> 14;
          v16 >>= 7;
          *v4++ = v16;
        }
        while (v17);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *int v4 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 44);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      int v4 = sub_170AB8C(v20, v22, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v23 = *(void *)(a1 + 8);
  if ((v23 & 1) == 0) {
    return v4;
  }
  unint64_t v25 = v23 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v25 + 31) < 0)
  {
    int v26 = *(void **)(v25 + 8);
    uint64_t v27 = *(void *)(v25 + 16);
  }
  else
  {
    int v26 = (void *)(v25 + 8);
    LODWORD(v27) = *(unsigned __int8 *)(v25 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v27)
  {
    uint64_t v28 = (int)v27;
    memcpy(v4, v26, (int)v27);
    v4 += v28;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v26, v27, v4);
}

uint64_t sub_170BD90(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_170AE44(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    unsigned int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    unsigned int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_170AE44(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  int v17 = *(_DWORD *)(a1 + 40);
  if ((v17 & 3) != 0)
  {
    if (v17)
    {
      uint64_t v18 = sub_170AE44(*(void *)(a1 + 96));
      v11 += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v17 & 2) != 0) {
      v11 += ((9 * (__clz(*(void *)(a1 + 104) | 1) ^ 0x3F) + 73) >> 6) + 1;
    }
  }
  uint64_t v19 = *(void *)(a1 + 8);
  if (v19)
  {
    unint64_t v21 = v19 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v21 + 31) < 0) {
      uint64_t v22 = *(void *)(v21 + 16);
    }
    else {
      uint64_t v22 = *(unsigned __int8 *)(v21 + 31);
    }
    v11 += v22;
  }
  *(_DWORD *)(a1 + 44) = v11;
  return v11;
}

void sub_170BEF4(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1871E90((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_1871E90((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    unsigned int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 40);
  if ((v14 & 3) != 0)
  {
    if (v14)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v15 = *(void *)(a1 + 96);
      if (!v15)
      {
        uint64_t v16 = *(void *)(a1 + 8);
        int v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v17 = (void *)*v17;
        }
        uint64_t v15 = sub_178A0F4((uint64_t)v17);
        *(void *)(a1 + 96) = v15;
      }
      if (*(void *)(a2 + 96)) {
        uint64_t v18 = *(uint64_t (****)())(a2 + 96);
      }
      else {
        uint64_t v18 = &off_2546710;
      }
      sub_170AFC4(v15, (uint64_t)v18);
    }
    if ((v14 & 2) != 0) {
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
    }
    *(_DWORD *)(a1 + 40) |= v14;
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_170C0A4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_170B180(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    uint64_t v6 = *(unsigned int *)(a1 + 80);
    while ((int)v6 >= 1)
    {
      uint64_t v7 = v6 - 1;
      char v8 = sub_170B180(*(void *)(*(void *)(a1 + 88) + 8 * v6));
      uint64_t v6 = v7;
      if ((v8 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 1) == 0) {
      return 1;
    }
    uint64_t result = sub_170B180(*(void *)(a1 + 96));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_170C13C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ContainedPlace");
}

uint64_t sub_170C14C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D5198;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_170C1B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_170C1E0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170C25C(void *a1)
{
  sub_170C1E0(a1);

  operator delete();
}

unsigned char *sub_170C294(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_170C2E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    char v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      uint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v15 + 2;
        }
      }
      uint64_t v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unsigned int v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unsigned int v13 = (std::string *)sub_188DBD8(v5);
          uint64_t v7 = v15;
        }
        int v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        int v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_25467D8, v5, a3);
      }
      uint64_t v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_170C434(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_170C500(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_170C558(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_170C560@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.ContainedPlaceFilter");
}

uint64_t sub_170C570(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D5218;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  uint64_t v5 = *(void *)(a2 + 24);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  return a1;
}

void sub_170C5F4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_170C624(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170C698(void *a1)
{
  sub_170C624(a1);

  operator delete();
}

uint64_t sub_170C6D0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 7) != 0)
  {
    *(_DWORD *)(a1 + 32) = 0;
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_170C6F8(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v32 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v8 = v32 + 1;
    unsigned int v9 = *v32;
    if (*v32 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        unint64_t v8 = (char *)sub_188C180((uint64_t)v32, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        unint64_t v8 = v32 + 2;
      }
    }
    int v32 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 != 3) {
      break;
    }
    if (v9 != 24) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v16 = v8 + 1;
    int v17 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_26;
    }
    int v18 = *v16;
    int v17 = v17 + (v18 << 7) - 128;
    if ((v18 & 0x80000000) == 0)
    {
      uint64_t v16 = v8 + 2;
LABEL_26:
      int v32 = v16;
      *(_DWORD *)(a1 + 32) = v17;
      goto LABEL_40;
    }
    int v26 = (char *)sub_188C0D0((uint64_t)v8, v17);
    int v32 = v26;
    *(_DWORD *)(a1 + 32) = v27;
    if (!v26) {
      goto LABEL_60;
    }
LABEL_40:
    if (sub_11947B8((uint64_t)a3, &v32, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 2)
  {
    if (v9 != 16) {
      goto LABEL_14;
    }
    uint64_t v19 = v8 + 1;
    unint64_t v20 = *v8;
    if (*v8 < 0)
    {
      int v21 = *v19;
      int v22 = v20 + (v21 << 7);
      unint64_t v20 = (v22 - 128);
      if (v21 < 0)
      {
        int v32 = (char *)sub_188C138((uint64_t)v8, (v22 - 128));
        if (!v32) {
          goto LABEL_60;
        }
        unint64_t v20 = v28;
        goto LABEL_32;
      }
      uint64_t v19 = v8 + 2;
    }
    int v32 = v19;
LABEL_32:
    if (v20 > 2)
    {
      if (*v7) {
        BOOL v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        BOOL v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      int v31 = 2;
      goto LABEL_54;
    }
    *(_DWORD *)(a1 + 16) |= 2u;
    *(_DWORD *)(a1 + 28) = v20;
    goto LABEL_40;
  }
  if (v12 == 1 && v9 == 8)
  {
    uint64_t v23 = v8 + 1;
    unint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_37;
    }
    int v24 = *v23;
    int v25 = v20 + (v24 << 7);
    unint64_t v20 = (v25 - 128);
    if (v24 < 0)
    {
      int v32 = (char *)sub_188C138((uint64_t)v8, (v25 - 128));
      if (!v32) {
        goto LABEL_60;
      }
      unint64_t v20 = v29;
    }
    else
    {
      uint64_t v23 = v8 + 2;
LABEL_37:
      int v32 = v23;
    }
    if (sub_13E78E4(v20))
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      *(_DWORD *)(a1 + 24) = v20;
      goto LABEL_40;
    }
    if (*v7) {
      BOOL v30 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else {
      BOOL v30 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
    }
    int v31 = 1;
LABEL_54:
    sub_188C020(v31, v20, v30);
    goto LABEL_40;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v8 = v32;
    }
    int v32 = (char *)sub_1885AC0(v9, v15, v8, a3);
    if (!v32) {
      goto LABEL_60;
    }
    goto LABEL_40;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_60:
  int v32 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v32;
}

unsigned char *sub_170C9D0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unsigned int v13 = *(_DWORD *)(a1 + 32);
    *uint64_t v4 = 24;
    v4[1] = v13;
    if (v13 > 0x7F)
    {
      v4[1] = v13 | 0x80;
      unsigned int v14 = v13 >> 7;
      v4[2] = v13 >> 7;
      v4 += 3;
      if (v13 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v15 = v14 >> 14;
          v14 >>= 7;
          *v4++ = v14;
        }
        while (v15);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return v4;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(v4, v19, (int)v20);
    v4 += v21;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v19, v20, v4);
}

uint64_t sub_170CBF0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_16;
  }
  if (v1)
  {
    int v3 = *(_DWORD *)(a1 + 24);
    if (v3 < 0)
    {
      uint64_t v2 = 11;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v1 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    uint64_t v2 = 0;
    if ((v1 & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v4 = *(_DWORD *)(a1 + 28);
  if (v4 < 0) {
    uint64_t v5 = 11;
  }
  else {
    uint64_t v5 = ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  v2 += v5;
LABEL_14:
  if ((v1 & 4) != 0) {
    v2 += ((9 * (__clz(*(_DWORD *)(a1 + 32) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_16:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v8 + 31) < 0) {
      uint64_t v9 = *(void *)(v8 + 16);
    }
    else {
      uint64_t v9 = *(unsigned __int8 *)(v8 + 31);
    }
    v2 += v9;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_170CCD8()
{
  return 1;
}

void *sub_170CCE0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WifiFingerprint");
}

uint64_t sub_170CCF0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D5298;
  sub_1882BC4(a1 + 16, a2);
  *(_DWORD *)(a1 + 40) = 0;
  return a1;
}

void sub_170CD54(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_170CD84(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170CE00(void *a1)
{
  sub_170CD84(a1);

  operator delete();
}

unsigned char *sub_170CE38(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  int v3 = (uint64_t *)(a1 + 8);
  if (v4)
  {
    return (unsigned char *)sub_188B4AC(v3);
  }
  return result;
}

char *sub_170CE88(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v15 = a2;
  if ((sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (uint64_t *)(a1 + 8);
    uint64_t v6 = (uint64_t **)(a1 + 16);
    while (1)
    {
      unint64_t v7 = v15 + 1;
      unsigned int v8 = *v15;
      if (*v15 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          unint64_t v7 = (char *)sub_188C180((uint64_t)v15, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          unint64_t v7 = v15 + 2;
        }
      }
      unsigned int v15 = v7;
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v5)
        {
          unsigned int v13 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          unsigned int v13 = (std::string *)sub_188DBD8(v5);
          unint64_t v7 = v15;
        }
        unint64_t v12 = sub_1885AC0(v8, v13, v7, a3);
      }
      else
      {
        unint64_t v12 = sub_18859DC(v6, v8, v7, (uint64_t)&off_2546830, v5, a3);
      }
      unsigned int v15 = (char *)v12;
      if (!v12) {
        return 0;
      }
      if (sub_11947B8((uint64_t)a3, &v15, a3[11].i32[1])) {
        return v15;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v15;
    }
    return 0;
  }
  return v15;
}

char *sub_170CFD8(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_170D0A4(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 40) = result;
  return result;
}

uint64_t sub_170D0FC(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_170D104@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.WifiFingerprintFilter");
}

uint64_t sub_170D114(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D5318;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    uint64_t v6 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v6 = (uint64_t *)*v6;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v6);
  }
  return a1;
}

void sub_170D1C0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_170D1F0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170D290(uint64_t a1)
{
  sub_170D1F0(a1);

  operator delete();
}

uint64_t sub_170D2C8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v1 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v1 + 23) < 0)
    {
      **(unsigned char **)unint64_t v1 = 0;
      *(void *)(v1 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v1 = 0;
      *(unsigned char *)(v1 + 23) = 0;
    }
  }
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v3) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_170D30C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v17 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
    return *(void *)v17;
  }
  uint64_t v5 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v6 = (char *)(*(void *)v17 + 1);
    unsigned int v7 = **(unsigned char **)v17;
    if ((char)**(unsigned char **)v17 < 0)
    {
      unsigned int v8 = v7 + (*v6 << 7);
      unsigned int v7 = v8 - 128;
      if (*v6 < 0)
      {
        uint64_t v6 = (char *)sub_188C180(*(uint64_t *)v17, v8 - 128);
        unsigned int v7 = v9;
      }
      else
      {
        uint64_t v6 = (char *)(*(void *)v17 + 2);
      }
    }
    *(void *)int v17 = v6;
    if (v7 != 10) {
      break;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v13 = *(void *)(a1 + 8);
    unsigned int v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      unsigned int v14 = (uint64_t *)*v14;
    }
    unsigned int v15 = (std::string *)sub_1880F84((void *)(a1 + 24), v14);
    unint64_t v12 = (void *)sub_188C244(v15, *(char **)v17, (uint64_t)a3);
LABEL_18:
    *(void *)int v17 = v12;
    if (!v12) {
      goto LABEL_25;
    }
    if (sub_11947B8((uint64_t)a3, (char **)v17, a3[11].i32[1])) {
      return *(void *)v17;
    }
  }
  if (v7) {
    BOOL v10 = (v7 & 7) == 4;
  }
  else {
    BOOL v10 = 1;
  }
  if (!v10)
  {
    if (*v5)
    {
      uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v6 = *(char **)v17;
    }
    unint64_t v12 = sub_1885AC0(v7, v11, v6, a3);
    goto LABEL_18;
  }
  if (v6)
  {
    a3[10].i32[0] = v7 - 1;
    return *(void *)v17;
  }
LABEL_25:
  *(void *)int v17 = 0;
  return *(void *)v17;
}

char *sub_170D464(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(void *)(a1 + 8);
  if ((v6 & 1) == 0) {
    return v4;
  }
  unint64_t v8 = v6 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v8 + 31) < 0)
  {
    unsigned int v9 = *(void **)(v8 + 8);
    uint64_t v10 = *(void *)(v8 + 16);
  }
  else
  {
    unsigned int v9 = (void *)(v8 + 8);
    LODWORD(v10) = *(unsigned __int8 *)(v8 + 31);
  }
  if (*a3 - (void)v4 >= (int)v10)
  {
    uint64_t v11 = (int)v10;
    memcpy(v4, v9, (int)v10);
    v4 += v11;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v9, v10, v4);
}

uint64_t sub_170D530(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v3 = *(unsigned __int8 *)(v2 + 23);
    uint64_t v4 = *(void *)(v2 + 8);
    if ((v3 & 0x80u) == 0) {
      uint64_t v4 = v3;
    }
    uint64_t v1 = v4 + ((9 * (__clz(v4 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v1 += v8;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_170D5B4()
{
  return 1;
}

void *sub_170D5BC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardURL");
}

void *sub_170D5CC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170D640(void *a1)
{
  sub_170D5CC(a1);

  operator delete();
}

uint64_t *sub_170D678(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_170D688(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_170D788(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_170D820(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_170D854(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_170D870()
{
  return 1;
}

void *sub_170D878@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PlacecardURLFilter");
}

uint64_t sub_170D888(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D5418;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = a1 + 24;
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_188FB98(v5, v8, (const std::string **)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    uint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = &qword_2550250;
  if (*(unsigned char *)(a2 + 16))
  {
    unint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  return a1;
}

void sub_170D9AC(_Unwind_Exception *a1)
{
  sub_1889DE8(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_170D9EC(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_7;
    }
  }
  else if (v4)
  {
    goto LABEL_7;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (v2) {
    sub_10E4F74(v3);
  }
LABEL_7:
  sub_1889DE8((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170DA94(uint64_t a1)
{
  sub_170D9EC(a1);

  operator delete();
}

uint64_t sub_170DACC(uint64_t a1)
{
  uint64_t result = sub_188CC00(a1 + 24);
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v3 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 8) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_170DB50(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)int v26 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
    return *(void *)v26;
  }
  int v6 = (uint64_t **)(a1 + 24);
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v26 + 1);
    unsigned int v9 = **(unsigned char **)v26;
    if ((char)**(unsigned char **)v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v26 + 2);
      }
    }
    *(void *)int v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 10) {
      goto LABEL_13;
    }
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v23 = *(void *)(a1 + 8);
    int v24 = (uint64_t *)(v23 & 0xFFFFFFFFFFFFFFFCLL);
    if (v23) {
      int v24 = (uint64_t *)*v24;
    }
    int v25 = (std::string *)sub_1880F84((void *)(a1 + 48), v24);
    unsigned int v15 = (void *)sub_188C244(v25, *(char **)v26, (uint64_t)a3);
LABEL_35:
    *(void *)int v26 = v15;
    if (!v15) {
      goto LABEL_41;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v26, a3[11].i32[1])) {
      return *(void *)v26;
    }
  }
  if (v9 == 18)
  {
    uint64_t v16 = v8 - 1;
    while (1)
    {
      int v17 = (char *)(v16 + 1);
      *(void *)int v26 = v16 + 1;
      unint64_t v18 = *(_DWORD **)(a1 + 40);
      if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
      {
        *(_DWORD *)(a1 + 32) = v19 + 1;
        uint64_t v20 = *(std::string **)&v18[2 * v19 + 2];
      }
      else
      {
        if (!*v6) {
          operator new();
        }
        *int v22 = v21;
        v22[1] = sub_3A6EDC;
        *uint64_t v21 = 0;
        v21[1] = 0;
        int v21[2] = 0;
        uint64_t v20 = (std::string *)sub_188CDC8(a1 + 24, (uint64_t)v21);
        int v17 = *(char **)v26;
      }
      uint64_t v16 = sub_188C244(v20, v17, (uint64_t)a3);
      *(void *)int v26 = v16;
      if (!v16) {
        goto LABEL_41;
      }
      if (*(void *)a3 <= (unint64_t)v16 || *v16 != 18) {
        goto LABEL_36;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      unsigned int v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v26;
    }
    unsigned int v15 = sub_1885AC0(v9, v14, v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    return *(void *)v26;
  }
LABEL_41:
  *(void *)int v26 = 0;
  return *(void *)v26;
}

char *sub_170DDA4(uint64_t a1, char *__dst, void *a3)
{
  uint64_t v4 = __dst;
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  uint64_t v6 = *(unsigned int *)(a1 + 32);
  if ((int)v6 >= 1)
  {
    uint64_t v7 = 0;
    uint64_t v8 = 8 * v6;
    do
    {
      unsigned int v9 = *(void **)(*(void *)(a1 + 40) + v7 + 8);
      if (*((char *)v9 + 23) < 0)
      {
        int64_t v10 = v9[1];
        if (v10 > 127) {
          goto LABEL_14;
        }
      }
      else
      {
        int64_t v10 = *((unsigned __int8 *)v9 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v10)
      {
        *uint64_t v4 = 18;
        v4[1] = v10;
        if (*((char *)v9 + 23) < 0) {
          unsigned int v9 = (void *)*v9;
        }
        unsigned int v11 = v4 + 2;
        memcpy(v11, v9, v10);
        uint64_t v4 = &v11[v10];
        goto LABEL_12;
      }
LABEL_14:
      uint64_t v4 = (char *)sub_188A868(a3, 2, (uint64_t)v9, v4);
LABEL_12:
      v7 += 8;
    }
    while (v8 != v7);
  }
  uint64_t v12 = *(void *)(a1 + 8);
  if ((v12 & 1) == 0) {
    return v4;
  }
  unint64_t v14 = v12 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v14 + 31) < 0)
  {
    unsigned int v15 = *(void **)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
  }
  else
  {
    unsigned int v15 = (void *)(v14 + 8);
    LODWORD(v16) = *(unsigned __int8 *)(v14 + 31);
  }
  if (*a3 - (void)v4 >= (int)v16)
  {
    uint64_t v17 = (int)v16;
    memcpy(v4, v15, (int)v16);
    v4 += v17;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v15, v16, v4);
}

uint64_t sub_170DF30(uint64_t a1)
{
  uint64_t v1 = *(unsigned int *)(a1 + 32);
  if ((int)v1 < 1)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 32);
  }
  else
  {
    uint64_t v2 = (uint64_t *)(*(void *)(a1 + 40) + 8);
    uint64_t v3 = *(unsigned int *)(a1 + 32);
    do
    {
      uint64_t v4 = *v2++;
      uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
      uint64_t v6 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        uint64_t v6 = v5;
      }
      v3 += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6);
      --v1;
    }
    while (v1);
  }
  if (*(unsigned char *)(a1 + 16))
  {
    unint64_t v7 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_170E010()
{
  return 1;
}

void *sub_170E018@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AssociatedApp");
}

void *sub_170E028(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170E09C(void *a1)
{
  sub_170E028(a1);

  operator delete();
}

uint64_t *sub_170E0D4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_170E0E4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_170E1E4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_170E27C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_170E2B0(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_170E2CC()
{
  return 1;
}

void *sub_170E2D4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.AssociatedAppFilter");
}

void *sub_170E2E4(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D5518;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  a1[11] = &qword_2550250;
  a1[12] = &qword_2550250;
  a1[13] = 0;
  *(void *)((char *)a1 + 109) = 0;
  return a1;
}

void sub_170E368(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_170E398(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D5518;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  unint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1301BB0(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    unsigned int v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *unsigned int v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    unint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v13 & 2) != 0)
  {
    unsigned int v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v13 & 4) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if ((v13 & 8) != 0)
  {
    uint64_t v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v17);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  if ((v13 & 0x10) != 0) {
    operator new();
  }
  *(void *)(a1 + 104) = 0;
  int v18 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v18;
  return a1;
}

void sub_170E5B8()
{
}

uint64_t sub_170E628(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_16;
    }
  }
  else if (v4)
  {
    goto LABEL_16;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if ((uint64_t (***)())a1 != &off_25468E8 && *(void *)(a1 + 104))
  {
    sub_15BC200();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_16:
  sub_13016A8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170E74C(uint64_t a1)
{
  sub_170E628(a1);

  operator delete();
}

uint64_t sub_170E784(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    unint64_t v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_16E98C0(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  if ((v6 & 0x1F) == 0) {
    goto LABEL_12;
  }
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    unint64_t v10 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v10 + 23) < 0)
    {
      **(unsigned char **)unint64_t v10 = 0;
      *(void *)(v10 + 8) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_26;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v10 = 0;
      *(unsigned char *)(v10 + 23) = 0;
      if ((v6 & 4) != 0) {
        goto LABEL_26;
      }
    }
LABEL_9:
    if ((v6 & 8) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
  unint64_t v9 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v9 + 23) < 0)
  {
    **(unsigned char **)unint64_t v9 = 0;
    *(void *)(v9 + 8) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_22;
    }
  }
  else
  {
    *(unsigned char *)unint64_t v9 = 0;
    *(unsigned char *)(v9 + 23) = 0;
    if ((v6 & 2) != 0) {
      goto LABEL_22;
    }
  }
LABEL_8:
  if ((v6 & 4) == 0) {
    goto LABEL_9;
  }
LABEL_26:
  unint64_t v11 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v11 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v11 = 0;
    *(unsigned char *)(v11 + 23) = 0;
    if ((v6 & 8) != 0) {
      goto LABEL_30;
    }
LABEL_10:
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  **(unsigned char **)unint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  if ((v6 & 8) == 0) {
    goto LABEL_10;
  }
LABEL_30:
  unint64_t v12 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v12 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v12 = 0;
    *(unsigned char *)(v12 + 23) = 0;
    if ((v6 & 0x10) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    uint64_t result = sub_15BC23C(*(void *)(a1 + 104));
    goto LABEL_12;
  }
  **(unsigned char **)unint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  if ((v6 & 0x10) != 0) {
    goto LABEL_11;
  }
LABEL_12:
  if ((v6 & 0x60) != 0)
  {
    *(unsigned char *)(a1 + 116) = 0;
    *(_DWORD *)(a1 + 112) = 0;
  }
  char v8 = *(unsigned char *)(a1 + 8);
  uint64_t v7 = a1 + 8;
  *(_DWORD *)(v7 + 32) = 0;
  if (v8)
  {
    return sub_188B4AC((uint64_t *)v7);
  }
  return result;
}

uint64_t sub_170E908(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)long long v41 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (2)
  {
    char v8 = (unsigned __int8 *)(*(void *)v41 + 1);
    unsigned int v9 = **(unsigned char **)v41;
    if ((char)**(unsigned char **)v41 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        char v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v41, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        char v8 = (unsigned __int8 *)(*(void *)v41 + 2);
      }
    }
    *(void *)long long v41 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 72);
        goto LABEL_53;
      case 2u:
        if (v9 != 18) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 80);
        goto LABEL_53;
      case 3u:
        if (v9 != 24) {
          goto LABEL_57;
        }
        uint64_t v16 = (char *)(v8 + 1);
        unint64_t v17 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_21;
        }
        int v18 = *v16;
        int v19 = v17 + (v18 << 7);
        unint64_t v17 = (v19 - 128);
        if (v18 < 0)
        {
          *(void *)long long v41 = sub_188C138((uint64_t)v8, (v19 - 128));
          if (!*(void *)v41) {
            goto LABEL_77;
          }
          unint64_t v17 = v37;
        }
        else
        {
          uint64_t v16 = (char *)(v8 + 2);
LABEL_21:
          *(void *)long long v41 = v16;
        }
        if (sub_129EB9C(v17))
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 112) = v17;
        }
        else
        {
          if (*v7) {
            BOOL v40 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            BOOL v40 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          sub_188C020(3, v17, v40);
        }
        goto LABEL_55;
      case 4u:
        if (v9 != 34) {
          goto LABEL_57;
        }
        uint64_t v20 = (char *)(v8 - 1);
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          *(void *)long long v41 = v20 + 1;
          int v22 = *(_DWORD **)(a1 + 64);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 56), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 56) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            int v25 = sub_1788574(*(void *)(a1 + 48));
            uint64_t v24 = sub_188CDC8(a1 + 48, (uint64_t)v25);
            uint64_t v21 = *(unsigned __int8 **)v41;
          }
          uint64_t v20 = sub_12DE6D0(a3, v24, v21);
          *(void *)long long v41 = v20;
          if (!v20) {
            goto LABEL_77;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 34) {
            goto LABEL_55;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        int v26 = *(void **)(a1 + 104);
        if (!v26)
        {
          int v27 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v27 = (void *)*v27;
          }
          int v26 = sub_15C221C((uint64_t)v27);
          *(void *)(a1 + 104) = v26;
          char v8 = *(unsigned __int8 **)v41;
        }
        uint64_t v28 = sub_123B1B4(a3, (uint64_t)v26, v8);
        goto LABEL_54;
      case 6u:
        if (v9 != 48) {
          goto LABEL_57;
        }
        v5 |= 0x40u;
        unint64_t v29 = (char *)(v8 + 1);
        uint64_t v30 = *v8;
        if (((char)*v8 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        int v31 = *v29;
        uint64_t v30 = v30 + (v31 << 7) - 128;
        if (v31 < 0)
        {
          uint64_t v38 = sub_188C138((uint64_t)v8, v30);
          *(void *)long long v41 = v38;
          *(unsigned char *)(a1 + 116) = v39 != 0;
          if (!v38) {
            goto LABEL_77;
          }
        }
        else
        {
          unint64_t v29 = (char *)(v8 + 2);
LABEL_44:
          *(void *)long long v41 = v29;
          *(unsigned char *)(a1 + 116) = v30 != 0;
        }
        goto LABEL_55;
      case 7u:
        if (v9 != 58) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v32 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v32 & 0xFFFFFFFFFFFFFFFCLL);
        if (v32) {
          int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 88);
        goto LABEL_53;
      case 8u:
        if (v9 != 66) {
          goto LABEL_57;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v33 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFCLL);
        if (v33) {
          int v13 = (uint64_t *)*v13;
        }
        unint64_t v14 = (void *)(a1 + 96);
LABEL_53:
        uint64_t v34 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v28 = (uint64_t)sub_188C244(v34, *(char **)v41, (uint64_t)a3);
        goto LABEL_54;
      default:
LABEL_57:
        if (v9) {
          BOOL v35 = (v9 & 7) == 4;
        }
        else {
          BOOL v35 = 1;
        }
        if (!v35)
        {
          if ((v9 - 8000) >> 6 > 0x7C)
          {
            if (*v7)
            {
              int v36 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              int v36 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              char v8 = *(unsigned __int8 **)v41;
            }
            uint64_t v28 = (uint64_t)sub_1885AC0(v9, v36, (char *)v8, a3);
          }
          else
          {
            uint64_t v28 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v9, (char *)v8, (uint64_t)&off_25468E8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_54:
          *(void *)long long v41 = v28;
          if (!v28) {
            goto LABEL_77;
          }
LABEL_55:
          if (sub_11947B8((uint64_t)a3, (char **)v41, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_77:
        }
          *(void *)long long v41 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return *(void *)v41;
    }
  }
}

char *sub_170EDAC(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 0x20) == 0) {
        goto LABEL_13;
      }
      goto LABEL_7;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_13;
  }
LABEL_7:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 112);
  *unint64_t v4 = 24;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_13:
  int v10 = *(_DWORD *)(a1 + 56);
  if (v10)
  {
    for (int i = 0; i != v10; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *unint64_t v4 = 34;
      unsigned int v13 = *(_DWORD *)(v12 + 44);
      v4[1] = v13;
      if (v13 > 0x7F) {
        unint64_t v14 = sub_188A9CC(v13, v4 + 1);
      }
      else {
        unint64_t v14 = v4 + 2;
      }
      unint64_t v4 = sub_16E9DDC(v12, v14, a3);
    }
  }
  if ((v6 & 0x10) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v17 = *(void *)(a1 + 104);
    *unint64_t v4 = 42;
    unsigned int v18 = *(_DWORD *)(v17 + 20);
    v4[1] = v18;
    if (v18 > 0x7F) {
      int v19 = sub_188A9CC(v18, v4 + 1);
    }
    else {
      int v19 = v4 + 2;
    }
    unint64_t v4 = sub_15BC3D8(v17, v19, a3);
    if ((v6 & 0x40) == 0)
    {
LABEL_23:
      if ((v6 & 4) == 0) {
        goto LABEL_24;
      }
      goto LABEL_39;
    }
  }
  else if ((v6 & 0x40) == 0)
  {
    goto LABEL_23;
  }
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  char v20 = *(unsigned char *)(a1 + 116);
  *unint64_t v4 = 48;
  v4[1] = v20;
  v4 += 2;
  if ((v6 & 4) == 0)
  {
LABEL_24:
    if ((v6 & 8) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_39:
  unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) != 0) {
LABEL_25:
  }
    unint64_t v4 = sub_117A0AC(a3, 8, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_26:
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if ((v15 & 1) == 0) {
    return v4;
  }
  unint64_t v21 = v15 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v21 + 31) < 0)
  {
    int v22 = *(void **)(v21 + 8);
    uint64_t v23 = *(void *)(v21 + 16);
  }
  else
  {
    int v22 = (void *)(v21 + 8);
    LODWORD(v23) = *(unsigned __int8 *)(v21 + 31);
  }
  if (*a3 - (void)v4 >= (int)v23)
  {
    uint64_t v24 = (int)v23;
    memcpy(v4, v22, (int)v23);
    v4 += v24;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v22, v23, v4);
}

uint64_t sub_170F0CC(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_16EA048(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  int v10 = *(_DWORD *)(a1 + 40);
  if ((v10 & 0x7F) != 0)
  {
    if (v10)
    {
      unint64_t v11 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v13 = *(void *)(v11 + 8);
      if ((v12 & 0x80u) == 0) {
        uint64_t v13 = v12;
      }
      v4 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v10 & 2) == 0)
      {
LABEL_10:
        if ((v10 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_21;
      }
    }
    else if ((v10 & 2) == 0)
    {
      goto LABEL_10;
    }
    unint64_t v14 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v16 = *(void *)(v14 + 8);
    if ((v15 & 0x80u) == 0) {
      uint64_t v16 = v15;
    }
    v4 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 4) == 0)
    {
LABEL_11:
      if ((v10 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_24;
    }
LABEL_21:
    unint64_t v17 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    v4 += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 8) == 0)
    {
LABEL_12:
      if ((v10 & 0x10) == 0) {
        goto LABEL_13;
      }
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v20 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
    uint64_t v22 = *(void *)(v20 + 8);
    if ((v21 & 0x80u) == 0) {
      uint64_t v22 = v21;
    }
    v4 += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x10) == 0)
    {
LABEL_13:
      if ((v10 & 0x20) == 0) {
        goto LABEL_32;
      }
      goto LABEL_28;
    }
LABEL_27:
    uint64_t v23 = sub_15BC4A4(*(void *)(a1 + 104));
    v4 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v10 & 0x20) == 0) {
      goto LABEL_32;
    }
LABEL_28:
    int v24 = *(_DWORD *)(a1 + 112);
    if (v24 < 0) {
      uint64_t v25 = 11;
    }
    else {
      uint64_t v25 = ((9 * (__clz(v24 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v4 += v25;
LABEL_32:
    if ((v10 & 0x40) != 0) {
      v4 += 2;
    }
  }
  uint64_t v26 = *(void *)(a1 + 8);
  if (v26)
  {
    unint64_t v28 = v26 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v28 + 31) < 0) {
      uint64_t v29 = *(void *)(v28 + 16);
    }
    else {
      uint64_t v29 = *(unsigned __int8 *)(v28 + 31);
    }
    v4 += v29;
  }
  *(_DWORD *)(a1 + 44) = v4;
  return v4;
}

void sub_170F324(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_1301BB0((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 40);
  if ((v9 & 0x7F) != 0)
  {
    if (v9)
    {
      unint64_t v11 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v12 = *(void *)(a1 + 8);
      uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
      if (v12) {
        uint64_t v13 = (uint64_t *)*v13;
      }
      sub_1881DF4((std::string **)(a1 + 72), v11, v13);
      if ((v9 & 2) == 0)
      {
LABEL_7:
        if ((v9 & 4) == 0) {
          goto LABEL_8;
        }
        goto LABEL_24;
      }
    }
    else if ((v9 & 2) == 0)
    {
      goto LABEL_7;
    }
    unint64_t v14 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v15 = *(void *)(a1 + 8);
    uint64_t v16 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
    if (v15) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 80), v14, v16);
    if ((v9 & 4) == 0)
    {
LABEL_8:
      if ((v9 & 8) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v17 = (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v18 = *(void *)(a1 + 8);
    uint64_t v19 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
    if (v18) {
      uint64_t v19 = (uint64_t *)*v19;
    }
    sub_1881DF4((std::string **)(a1 + 88), v17, v19);
    if ((v9 & 8) == 0)
    {
LABEL_9:
      if ((v9 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_30;
    }
LABEL_27:
    unint64_t v20 = (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v21 = *(void *)(a1 + 8);
    uint64_t v22 = (uint64_t *)(v21 & 0xFFFFFFFFFFFFFFFCLL);
    if (v21) {
      uint64_t v22 = (uint64_t *)*v22;
    }
    sub_1881DF4((std::string **)(a1 + 96), v20, v22);
    if ((v9 & 0x10) == 0)
    {
LABEL_10:
      if ((v9 & 0x20) == 0) {
        goto LABEL_11;
      }
      goto LABEL_38;
    }
LABEL_30:
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v23 = *(std::string **)(a1 + 104);
    if (!v23)
    {
      uint64_t v24 = *(void *)(a1 + 8);
      uint64_t v25 = (void *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
      if (v24) {
        uint64_t v25 = (void *)*v25;
      }
      uint64_t v23 = (std::string *)sub_15C221C((uint64_t)v25);
      *(void *)(a1 + 104) = v23;
    }
    if (*(void *)(a2 + 104)) {
      uint64_t v26 = *(uint64_t (****)())(a2 + 104);
    }
    else {
      uint64_t v26 = &off_253F5C0;
    }
    sub_12329D0(v23, (uint64_t)v26);
    if ((v9 & 0x20) == 0)
    {
LABEL_11:
      if ((v9 & 0x40) == 0)
      {
LABEL_13:
        *(_DWORD *)(a1 + 40) |= v9;
        goto LABEL_14;
      }
LABEL_12:
      *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
      goto LABEL_13;
    }
LABEL_38:
    *(_DWORD *)(a1 + 112) = *(_DWORD *)(a2 + 112);
    if ((v9 & 0x40) == 0) {
      goto LABEL_13;
    }
    goto LABEL_12;
  }
LABEL_14:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_170F568(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 56);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16EA300(*(void *)(*(void *)(a1 + 64) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    if ((*(unsigned char *)(a1 + 40) & 0x10) == 0) {
      return 1;
    }
    uint64_t result = sub_15BC528(*(void *)(a1 + 104));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_170F5D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MessageLink");
}

void *sub_170F5E8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170F65C(void *a1)
{
  sub_170F5E8(a1);

  operator delete();
}

uint64_t *sub_170F694(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_170F6A4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    char v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        char v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        char v5 = v12 + 2;
      }
    }
    uint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      char v5 = v12;
    }
    uint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_170F7A4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_170F83C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_170F870(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_170F88C()
{
  return 1;
}

void *sub_170F894@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.MessageLinkFilter");
}

void *sub_170F8A4(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D5618;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = &qword_2550250;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  a1[11] = 0x100000001;
  return a1;
}

void sub_170F924(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_170F954(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D5618;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 64) = &qword_2550250;
  if ((v7 & 4) != 0)
  {
    uint64_t v10 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v10 = (uint64_t *)*v10;
    }
    sub_1881DF4((std::string **)(a1 + 64), (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL), v10);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 72) = &qword_2550250;
  if ((v7 & 8) != 0)
  {
    unint64_t v11 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unint64_t v11 = (uint64_t *)*v11;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v11);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v7 & 0x10) != 0)
  {
    uint64_t v12 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v12);
  }
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

void sub_170FAEC(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_170FB28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_15;
    }
  }
  else if (v4)
  {
    goto LABEL_15;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if (*(uint64_t **)(a1 + 64) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 64));
  }
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 72));
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_15:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_170FC24(uint64_t a1)
{
  sub_170FB28(a1);

  operator delete();
}

unsigned char *sub_170FC5C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x7F) != 0)
  {
    if ((v3 & 1) == 0)
    {
      if ((v3 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      unint64_t v5 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v5 + 23) < 0)
      {
        **(unsigned char **)unint64_t v5 = 0;
        *(void *)(v5 + 8) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_16;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v5 = 0;
        *(unsigned char *)(v5 + 23) = 0;
        if ((v3 & 4) != 0) {
          goto LABEL_16;
        }
      }
LABEL_5:
      if ((v3 & 8) == 0) {
        goto LABEL_6;
      }
LABEL_20:
      unint64_t v7 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v7 + 23) < 0)
      {
        **(unsigned char **)unint64_t v7 = 0;
        *(void *)(v7 + 8) = 0;
        if ((v3 & 0x10) == 0)
        {
LABEL_27:
          *(void *)(a1 + 88) = 0x100000001;
          goto LABEL_28;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v7 = 0;
        *(unsigned char *)(v7 + 23) = 0;
        if ((v3 & 0x10) == 0) {
          goto LABEL_27;
        }
      }
LABEL_24:
      unint64_t v8 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v8 + 23) < 0)
      {
        **(unsigned char **)unint64_t v8 = 0;
        *(void *)(v8 + 8) = 0;
      }
      else
      {
        *(unsigned char *)unint64_t v8 = 0;
        *(unsigned char *)(v8 + 23) = 0;
      }
      goto LABEL_27;
    }
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_12;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    unint64_t v6 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_20;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 8) != 0) {
        goto LABEL_20;
      }
    }
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_27;
    }
    goto LABEL_24;
  }
LABEL_28:
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = a1 + 8;
  *(_DWORD *)(v9 + 32) = 0;
  if (v10)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v9);
  }
  return result;
}

uint64_t sub_170FDC4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v33 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
    return *(void *)v33;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (char *)(*(void *)v33 + 1);
    unsigned int v8 = **(unsigned char **)v33;
    if ((char)**(unsigned char **)v33 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180(*(uint64_t *)v33, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (char *)(*(void *)v33 + 2);
      }
    }
    *(void *)uint64_t v33 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 48);
        goto LABEL_43;
      case 2u:
        if (v8 != 18) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 56);
        goto LABEL_43;
      case 3u:
        if (v8 != 26) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 64);
        goto LABEL_43;
      case 4u:
        if (v8 != 34) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v16 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 72);
        goto LABEL_43;
      case 5u:
        if (v8 != 40) {
          goto LABEL_47;
        }
        unint64_t v17 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_29;
        }
        int v19 = *v17;
        int v20 = v18 + (v19 << 7);
        unint64_t v18 = (v20 - 128);
        if (v19 < 0)
        {
          *(void *)uint64_t v33 = sub_188C138((uint64_t)v7, (v20 - 128));
          if (!*(void *)v33) {
            return 0;
          }
          unint64_t v18 = v29;
        }
        else
        {
          unint64_t v17 = v7 + 2;
LABEL_29:
          *(void *)uint64_t v33 = v17;
        }
        if (v18 <= 2)
        {
          *(_DWORD *)(a1 + 40) |= 0x20u;
          *(_DWORD *)(a1 + 88) = v18;
          goto LABEL_45;
        }
        if (*v6) {
          int v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        int v32 = 5;
        goto LABEL_66;
      case 6u:
        if (v8 != 48) {
          goto LABEL_47;
        }
        uint64_t v21 = v7 + 1;
        unint64_t v18 = *v7;
        if ((*v7 & 0x80000000) == 0) {
          goto LABEL_36;
        }
        int v22 = *v21;
        int v23 = v18 + (v22 << 7);
        unint64_t v18 = (v23 - 128);
        if (v22 < 0)
        {
          *(void *)uint64_t v33 = sub_188C138((uint64_t)v7, (v23 - 128));
          if (!*(void *)v33) {
            return 0;
          }
          unint64_t v18 = v30;
        }
        else
        {
          uint64_t v21 = v7 + 2;
LABEL_36:
          *(void *)uint64_t v33 = v21;
        }
        if ((v18 - 1) > 2)
        {
          if (*v6) {
            int v31 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else {
            int v31 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          }
          int v32 = 6;
LABEL_66:
          sub_188C020(v32, v18, v31);
        }
        else
        {
          *(_DWORD *)(a1 + 40) |= 0x40u;
          *(_DWORD *)(a1 + 92) = v18;
        }
        goto LABEL_45;
      case 7u:
        if (v8 != 58) {
          goto LABEL_47;
        }
        *(_DWORD *)(a1 + 40) |= 0x10u;
        uint64_t v24 = *(void *)(a1 + 8);
        uint64_t v12 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          uint64_t v12 = (uint64_t *)*v12;
        }
        uint64_t v13 = (void *)(a1 + 80);
LABEL_43:
        uint64_t v25 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v26 = (void *)sub_188C244(v25, *(char **)v33, (uint64_t)a3);
        goto LABEL_44;
      default:
LABEL_47:
        if (v8) {
          BOOL v27 = (v8 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if ((v8 - 8000) >> 6 > 0x7C)
          {
            if (*v6)
            {
              unint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              unint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v7 = *(char **)v33;
            }
            uint64_t v26 = sub_1885AC0(v8, v28, v7, a3);
          }
          else
          {
            uint64_t v26 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2546978, (uint64_t *)(a1 + 8), a3);
          }
LABEL_44:
          *(void *)uint64_t v33 = v26;
          if (!v26) {
            return 0;
          }
LABEL_45:
          if (sub_11947B8((uint64_t)a3, (char **)v33, a3[11].i32[1])) {
            return *(void *)v33;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v33;
    }
  }
}

char *sub_17101D4(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_11;
  }
LABEL_10:
  unint64_t v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  unint64_t v7 = *(int *)(a1 + 88);
  *unint64_t v4 = 40;
  v4[1] = v7;
  if (v7 > 0x7F)
  {
    v4[1] = v7 | 0x80;
    unint64_t v8 = v7 >> 7;
    v4[2] = v7 >> 7;
    v4 += 3;
    if (v7 >= 0x4000)
    {
      do
      {
        *(v4 - 1) |= 0x80u;
        unint64_t v9 = v8 >> 14;
        v8 >>= 7;
        *v4++ = v8;
      }
      while (v9);
    }
  }
  else
  {
    v4 += 2;
  }
LABEL_17:
  if ((v6 & 0x40) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v10 = *(int *)(a1 + 92);
    *unint64_t v4 = 48;
    v4[1] = v10;
    if (v10 > 0x7F)
    {
      v4[1] = v10 | 0x80;
      unint64_t v11 = v10 >> 7;
      v4[2] = v10 >> 7;
      v4 += 3;
      if (v10 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v12 = v11 >> 14;
          v11 >>= 7;
          *v4++ = v11;
        }
        while (v12);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 0x10) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 7, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1710450(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0x7F) == 0) {
    goto LABEL_33;
  }
  if (v3)
  {
    unint64_t v4 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    result += v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v3 & 2) == 0)
    {
LABEL_4:
      if ((v3 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_16;
    }
  }
  else if ((v3 & 2) == 0)
  {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
  uint64_t v9 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    uint64_t v9 = v8;
  }
  result += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 4) == 0)
  {
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_16:
  unint64_t v10 = *(void *)(a1 + 64) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
  uint64_t v12 = *(void *)(v10 + 8);
  if ((v11 & 0x80u) == 0) {
    uint64_t v12 = v11;
  }
  result += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 8) == 0)
  {
LABEL_6:
    if ((v3 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_19:
  unint64_t v13 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  result += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x10) == 0)
  {
LABEL_7:
    if ((v3 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_22:
  unint64_t v16 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v17 = *(unsigned __int8 *)(v16 + 23);
  uint64_t v18 = *(void *)(v16 + 8);
  if ((v17 & 0x80u) == 0) {
    uint64_t v18 = v17;
  }
  result += v18 + ((9 * (__clz(v18 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v3 & 0x20) == 0)
  {
LABEL_8:
    if ((v3 & 0x40) == 0) {
      goto LABEL_33;
    }
    goto LABEL_29;
  }
LABEL_25:
  int v19 = *(_DWORD *)(a1 + 88);
  if (v19 < 0) {
    uint64_t v20 = 11;
  }
  else {
    uint64_t v20 = ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  result += v20;
  if ((v3 & 0x40) != 0)
  {
LABEL_29:
    int v21 = *(_DWORD *)(a1 + 92);
    if (v21 < 0) {
      uint64_t v22 = 11;
    }
    else {
      uint64_t v22 = ((9 * (__clz(v21 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    result += v22;
  }
LABEL_33:
  uint64_t v23 = *(void *)(a1 + 8);
  if (v23)
  {
    unint64_t v24 = v23 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v24 + 31) < 0) {
      uint64_t v25 = *(void *)(v24 + 16);
    }
    else {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 31);
    }
    result += v25;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_171068C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0x7F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
      *(_DWORD *)(a1 + 40) |= 1u;
      unint64_t v7 = (std::string **)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 8);
      uint64_t v9 = (uint64_t *)(v8 & 0xFFFFFFFFFFFFFFFCLL);
      if (v8) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v11 = *(void *)(a1 + 8);
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    sub_1881DF4((std::string **)(a1 + 56), v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_24;
    }
LABEL_21:
    unint64_t v13 = (long long *)(*(void *)(a2 + 64) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v14 = *(void *)(a1 + 8);
    uint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      uint64_t v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 64), v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
LABEL_24:
    unint64_t v16 = (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v17 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
    if (v17) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    sub_1881DF4((std::string **)(a1 + 72), v16, v18);
    if ((v4 & 0x10) == 0)
    {
LABEL_7:
      if ((v4 & 0x20) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_27:
    int v19 = (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 0x10u;
    uint64_t v20 = *(void *)(a1 + 8);
    int v21 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      int v21 = (uint64_t *)*v21;
    }
    sub_1881DF4((std::string **)(a1 + 80), v19, v21);
    if ((v4 & 0x20) == 0)
    {
LABEL_8:
      if ((v4 & 0x40) == 0)
      {
LABEL_10:
        *(_DWORD *)(a1 + 40) |= v4;
        goto LABEL_11;
      }
LABEL_9:
      *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
      goto LABEL_10;
    }
LABEL_30:
    *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
    if ((v4 & 0x40) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
LABEL_11:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1710848(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_1710850@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QuickLink.QuickLinkItem");
}

uint64_t sub_1710860(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D5698;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = a2;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(_DWORD *)(a1 + 88) = 0;
  return a1;
}

void sub_17108D4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1710904(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D5698;
  *(_DWORD *)(a1 + 24) = 0;
  uint64_t v6 = (uint64_t *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  int v7 = *(_DWORD *)(a2 + 48);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 56);
    uint64_t v9 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871F1C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v10 = *(_DWORD *)(a1 + 48) + v7;
    *(_DWORD *)(a1 + 48) = v10;
    uint64_t v11 = *(int **)(a1 + 56);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  int v12 = *(_DWORD *)(a2 + 72);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 80);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1871F1C((uint64_t *)(a1 + 64), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v15 = *(_DWORD *)(a1 + 72) + v12;
    *(_DWORD *)(a1 + 72) = v15;
    unint64_t v16 = *(int **)(a1 + 80);
    if (*v16 < v15) {
      *unint64_t v16 = v15;
    }
  }
  *(_DWORD *)(a1 + 88) = 0;
  uint64_t v17 = *(void *)(a2 + 8);
  if (v17) {
    sub_188B4F8(v4, (v17 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  return a1;
}

void sub_1710A6C(_Unwind_Exception *a1)
{
  sub_187013C(v4);
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1710AD0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_187013C(a1 + 8);
  sub_187013C(a1 + 5);
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1710B64(void *a1)
{
  sub_1710AD0(a1);

  operator delete();
}

unsigned char *sub_1710B9C(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 48);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 56) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_170FC5C(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 48) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 72);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 80) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = sub_170FC5C(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 72) = 0;
  }
  char v10 = *(unsigned char *)(a1 + 8);
  uint64_t v9 = (uint64_t *)(a1 + 8);
  if (v10)
  {
    return (unsigned char *)sub_188B4AC(v9);
  }
  return result;
}

char *sub_1710C48(uint64_t a1, char *a2, int32x2_t *a3)
{
  BOOL v27 = a2;
  if ((sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v6 = (void *)(a1 + 8);
    while (1)
    {
      int v7 = v27 + 1;
      unsigned int v8 = *v27;
      if (*v27 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          int v7 = (char *)sub_188C180((uint64_t)v27, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          int v7 = v27 + 2;
        }
      }
      BOOL v27 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          uint64_t v14 = v7 - 1;
          while (1)
          {
            int v15 = (unsigned __int8 *)(v14 + 1);
            BOOL v27 = v14 + 1;
            unint64_t v16 = *(_DWORD **)(a1 + 80);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 72), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 72) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              int v19 = sub_178A5CC(*(void *)(a1 + 64));
              uint64_t v18 = sub_188CDC8(a1 + 64, (uint64_t)v19);
              int v15 = (unsigned __int8 *)v27;
            }
            uint64_t v14 = (char *)sub_1543654(a3, v18, v15);
            BOOL v27 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_42;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        uint64_t v20 = v7 - 1;
        while (1)
        {
          int v21 = (unsigned __int8 *)(v20 + 1);
          BOOL v27 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 56);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 48), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 48) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            uint64_t v25 = sub_178A5CC(*(void *)(a1 + 40));
            uint64_t v24 = sub_188CDC8(a1 + 40, (uint64_t)v25);
            int v21 = (unsigned __int8 *)v27;
          }
          uint64_t v20 = (char *)sub_1543654(a3, v24, v21);
          BOOL v27 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_42;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if ((v8 - 8000) >> 6 > 0x7C)
      {
        if (*v6)
        {
          uint64_t v26 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else
        {
          uint64_t v26 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
          int v7 = v27;
        }
        uint64_t v13 = sub_1885AC0(v8, v26, v7, a3);
      }
      else
      {
        uint64_t v13 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_25469D8, (uint64_t *)(a1 + 8), a3);
      }
      BOOL v27 = (char *)v13;
      if (!v13) {
        return 0;
      }
LABEL_42:
      if (sub_11947B8((uint64_t)a3, &v27, a3[11].i32[1])) {
        return v27;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v27;
    }
    return 0;
  }
  return v27;
}

char *sub_1710EDC(uint64_t a1, char *a2, void *a3)
{
  int v6 = *(_DWORD *)(a1 + 48);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 56) + 8 * i + 8);
      *a2 = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 44);
      a2[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, a2 + 1);
      }
      else {
        unsigned int v10 = a2 + 2;
      }
      a2 = sub_17101D4(v8, v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 72);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*a3 <= (unint64_t)a2) {
        a2 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 80) + 8 * j + 8);
      *a2 = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 44);
      a2[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, a2 + 1);
      }
      else {
        int v15 = a2 + 2;
      }
      a2 = sub_17101D4(v13, v15, a3);
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    a2 = sub_1886844(a1 + 16, 1000, 2000, a2, a3);
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return a2;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    int v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    int v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*a3 - (void)a2 >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(a2, v19, (int)v20);
    a2 += v21;
    return a2;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, a2);
}

uint64_t sub_17110C8(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 48);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 56);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_1710450(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 72);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 80);
  if (v12) {
    uint64_t v13 = (uint64_t *)(v12 + 8);
  }
  else {
    uint64_t v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_1710450(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(void *)(a1 + 8);
  if (v17)
  {
    unint64_t v19 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v19 + 31) < 0) {
      uint64_t v20 = *(void *)(v19 + 16);
    }
    else {
      uint64_t v20 = *(unsigned __int8 *)(v19 + 31);
    }
    v11 += v20;
  }
  *(_DWORD *)(a1 + 88) = v11;
  return v11;
}

void sub_17111CC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 48);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v6 = (uint64_t *)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871F1C((uint64_t *)(a1 + 40), v6, v5, v4, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v7 = *(_DWORD *)(a1 + 48) + v4;
    *(_DWORD *)(a1 + 48) = v7;
    uint64_t v8 = *(int **)(a1 + 56);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 72);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 80) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 64, *(_DWORD *)(a2 + 72));
    sub_1871F1C((uint64_t *)(a1 + 64), v11, v10, v9, **(_DWORD **)(a1 + 80) - *(_DWORD *)(a1 + 72));
    int v12 = *(_DWORD *)(a1 + 72) + v9;
    *(_DWORD *)(a1 + 72) = v12;
    uint64_t v13 = *(int **)(a1 + 80);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_171130C(uint64_t a1)
{
  if (!sub_18856CC(a1 + 16)) {
    return 0;
  }
  uint64_t v2 = *(unsigned int *)(a1 + 48);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    char v4 = sub_18856CC(*(void *)(*(void *)(a1 + 56) + 8 * v2) + 16);
    uint64_t v2 = v3;
    if ((v4 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v7 = *(unsigned int *)(a1 + 72);
  do
  {
    BOOL v5 = (int)v7 < 1;
    if ((int)v7 < 1) {
      break;
    }
    uint64_t v8 = v7 - 1;
    char v9 = sub_18856CC(*(void *)(*(void *)(a1 + 80) + 8 * v7) + 16);
    uint64_t v7 = v8;
  }
  while ((v9 & 1) != 0);
  return v5;
}

void *sub_17113A0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QuickLink");
}

void *sub_17113B0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1711424(void *a1)
{
  sub_17113B0(a1);

  operator delete();
}

uint64_t sub_171145C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1711474(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        uint64_t v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        uint64_t v7 = v19 + 2;
      }
    }
    unint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    uint64_t v14 = v7 + 1;
    LODWORD(v13) = *v7;
    if ((v13 & 0x80) == 0) {
      goto LABEL_19;
    }
    int v15 = *v14;
    uint64_t v13 = v13 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      uint64_t v14 = v7 + 2;
LABEL_19:
      unint64_t v19 = v14;
      *(_DWORD *)(a1 + 24) = v13;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C138((uint64_t)v7, v13);
    unint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v7 = v19;
    }
    unint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  unint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_17115F0(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 24);
    *char v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1711718(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16))
  {
    int v2 = *(_DWORD *)(a1 + 24);
    if (v2 < 0) {
      uint64_t v1 = 11;
    }
    else {
      uint64_t v1 = ((9 * (__clz(v2 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  else
  {
    uint64_t v1 = 0;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v5 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v5 + 31) < 0) {
      uint64_t v6 = *(void *)(v5 + 16);
    }
    else {
      uint64_t v6 = *(unsigned __int8 *)(v5 + 31);
    }
    v1 += v6;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_171178C()
{
  return 1;
}

void *sub_1711794@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.QuickLinkFilter");
}

uint64_t sub_17117A4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  char v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D5798;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  unint64_t v5 = (uint64_t *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    unint64_t v8 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3F54(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unsigned int v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  int v12 = *(_DWORD *)(a2 + 16);
  if (v12) {
    operator new();
  }
  *(void *)(a1 + 48) = 0;
  if ((v12 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 56) = 0;
  return a1;
}

void sub_1711900()
{
}

uint64_t sub_1711968(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  char v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  if ((uint64_t (***)())a1 != &off_2546A58)
  {
    uint64_t v5 = *(void *)(a1 + 48);
    if (v5)
    {
      sub_15B1678(v5);
      operator delete();
    }
    uint64_t v6 = *(void *)(a1 + 56);
    if (v6)
    {
      sub_15B1678(v6);
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  sub_12C3ED4((void *)(a1 + 24));
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1711A44(uint64_t a1)
{
  sub_1711968(a1);

  operator delete();
}

unsigned char *sub_1711A7C(unsigned char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = *((unsigned int *)result + 8);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (unsigned char **)(*((void *)result + 5) + 8);
    do
    {
      char v4 = *v3++;
      uint64_t result = sub_15B16B4(v4);
      --v2;
    }
    while (v2);
    *((_DWORD *)v1 + 8) = 0;
  }
  int v5 = *((_DWORD *)v1 + 4);
  if ((v5 & 3) != 0)
  {
    if (v5) {
      uint64_t result = sub_15B16B4(*((unsigned char **)v1 + 6));
    }
    if ((v5 & 2) != 0) {
      uint64_t result = sub_15B16B4(*((unsigned char **)v1 + 7));
    }
  }
  char v7 = v1[8];
  uint64_t v6 = v1 + 8;
  *((_DWORD *)v6 + 2) = 0;
  if (v7)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v6);
  }
  return result;
}

char *sub_1711B20(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v25 = a2;
  if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
    return v25;
  }
  uint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    char v7 = v25 + 1;
    unsigned int v8 = *v25;
    if (*v25 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        char v7 = (char *)sub_188C180((uint64_t)v25, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        char v7 = v25 + 2;
      }
    }
    uint64_t v25 = v7;
    unsigned int v11 = v8 >> 3;
    if (v8 >> 3 == 3)
    {
      if (v8 == 26)
      {
        uint64_t v16 = v7 - 1;
        while (1)
        {
          int v17 = (unsigned __int8 *)(v16 + 1);
          uint64_t v25 = v16 + 1;
          unint64_t v18 = *(_DWORD **)(a1 + 40);
          if (v18 && (uint64_t v19 = *(int *)(a1 + 32), (int)v19 < *v18))
          {
            *(_DWORD *)(a1 + 32) = v19 + 1;
            uint64_t v20 = *(void *)&v18[2 * v19 + 2];
          }
          else
          {
            uint64_t v21 = sub_15C19EC(*(void *)(a1 + 24));
            uint64_t v20 = sub_188CDC8(a1 + 24, v21);
            int v17 = (unsigned __int8 *)v25;
          }
          uint64_t v16 = sub_11E1C60(a3, v20, v17);
          uint64_t v25 = v16;
          if (!v16) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v16 || *v16 != 26) {
            goto LABEL_43;
          }
        }
      }
    }
    else if (v11 == 2)
    {
      if (v8 == 18)
      {
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v22 = *(void *)(a1 + 56);
        if (!v22)
        {
          uint64_t v23 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v23 = (void *)*v23;
          }
          uint64_t v22 = sub_15C19EC((uint64_t)v23);
          *(void *)(a1 + 56) = v22;
LABEL_40:
          char v7 = v25;
        }
LABEL_41:
        int v15 = sub_11E1C60(a3, v22, (unsigned __int8 *)v7);
        goto LABEL_42;
      }
    }
    else if (v11 == 1 && v8 == 10)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v22 = *(void *)(a1 + 48);
      if (!v22)
      {
        uint64_t v24 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v6) {
          uint64_t v24 = (void *)*v24;
        }
        uint64_t v22 = sub_15C19EC((uint64_t)v24);
        *(void *)(a1 + 48) = v22;
        goto LABEL_40;
      }
      goto LABEL_41;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      uint64_t v14 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      char v7 = v25;
    }
    int v15 = (char *)sub_1885AC0(v8, v14, v7, a3);
LABEL_42:
    uint64_t v25 = v15;
    if (!v15) {
      return 0;
    }
LABEL_43:
    if (sub_11947B8((uint64_t)a3, &v25, a3[11].i32[1])) {
      return v25;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v25;
  }
  return 0;
}

unsigned char *sub_1711D74(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  char v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      char v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v7 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 20);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    char v4 = sub_15B1A68(v7, (unint64_t)v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 56);
    *char v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      int v12 = v4 + 2;
    }
    char v4 = sub_15B1A68(v10, (unint64_t)v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 32);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*(void *)a3 <= (unint64_t)v4) {
        char v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *char v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        int v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        int v17 = v4 + 2;
      }
      char v4 = sub_15B1A68(v15, (unint64_t)v17, a3);
    }
  }
  uint64_t v18 = *(void *)(a1 + 8);
  if ((v18 & 1) == 0) {
    return v4;
  }
  unint64_t v20 = v18 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v20 + 31) < 0)
  {
    uint64_t v21 = *(void **)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
  }
  else
  {
    uint64_t v21 = (void *)(v20 + 8);
    LODWORD(v22) = *(unsigned __int8 *)(v20 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v22)
  {
    uint64_t v23 = (int)v22;
    memcpy(v4, v21, (int)v22);
    v4 += v23;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v21, v22, v4);
}

uint64_t sub_1711F84(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    char v4 = (uint64_t *)(v3 + 8);
  }
  else {
    char v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_15B1D1C(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  int v8 = *(_DWORD *)(a1 + 16);
  if ((v8 & 3) != 0)
  {
    if (v8)
    {
      uint64_t v9 = sub_15B1D1C(*(void *)(a1 + 48));
      v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    if ((v8 & 2) != 0)
    {
      uint64_t v10 = sub_15B1D1C(*(void *)(a1 + 56));
      v2 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

void sub_17120A0(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (uint64_t *)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_12C3F54((uint64_t *)(a1 + 24), v6, v5, v4, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v7 = *(_DWORD *)(a1 + 32) + v4;
    *(_DWORD *)(a1 + 32) = v7;
    int v8 = *(int **)(a1 + 40);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 16);
  if ((v9 & 3) != 0)
  {
    if (v9)
    {
      *(_DWORD *)(a1 + 16) |= 1u;
      uint64_t v10 = *(void *)(a1 + 48);
      if (!v10)
      {
        uint64_t v11 = *(void *)(a1 + 8);
        int v12 = (void *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          int v12 = (void *)*v12;
        }
        uint64_t v10 = sub_15C19EC((uint64_t)v12);
        *(void *)(a1 + 48) = v10;
      }
      if (*(void *)(a2 + 48)) {
        unint64_t v13 = *(uint64_t (****)())(a2 + 48);
      }
      else {
        unint64_t v13 = &off_253F208;
      }
      sub_15B1E3C(v10, (uint64_t)v13);
    }
    if ((v9 & 2) != 0)
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v14 = *(void *)(a1 + 56);
      if (!v14)
      {
        uint64_t v15 = *(void *)(a1 + 8);
        unsigned int v16 = (void *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          unsigned int v16 = (void *)*v16;
        }
        uint64_t v14 = sub_15C19EC((uint64_t)v16);
        *(void *)(a1 + 56) = v14;
      }
      if (*(void *)(a2 + 56)) {
        int v17 = *(uint64_t (****)())(a2 + 56);
      }
      else {
        int v17 = &off_253F208;
      }
      sub_15B1E3C(v14, (uint64_t)v17);
    }
  }
  uint64_t v18 = *(void *)(a2 + 8);
  if (v18)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v18 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

BOOL sub_171220C(uint64_t a1)
{
  uint64_t v2 = *(unsigned int *)(a1 + 32);
  while ((int)v2 >= 1)
  {
    uint64_t v3 = v2 - 1;
    BOOL v4 = sub_15B1FC0(*(void *)(*(void *)(a1 + 40) + 8 * v2));
    uint64_t v2 = v3;
    if (!v4) {
      return 0;
    }
  }
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    BOOL result = sub_15B1FC0(*(void *)(a1 + 48));
    if (!result) {
      return result;
    }
    int v6 = *(_DWORD *)(a1 + 16);
  }
  if ((v6 & 2) == 0) {
    return 1;
  }
  BOOL result = sub_15B1FC0(*(void *)(a1 + 56));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1712284@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineArea");
}

void *sub_1712294(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1712308(void *a1)
{
  sub_1712294(a1);

  operator delete();
}

uint64_t *sub_1712340(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  BOOL result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1712350(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  BOOL v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1712450(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17124E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_171251C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1712538()
{
  return 1;
}

void *sub_1712540@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineAreaFilter");
}

uint64_t sub_1712550(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24D5898;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1871FA8(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    uint64_t v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *uint64_t v10 = v9;
    }
  }
  *(_DWORD *)(a1 + 40) = 0;
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1712630(_Unwind_Exception *a1)
{
  sub_18701BC(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1712674(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18701BC(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17126F4(void *a1)
{
  sub_1712674(a1);

  operator delete();
}

uint64_t sub_171272C(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      BOOL result = sub_1626368(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = (uint64_t *)(v1 + 8);
  if (v6)
  {
    return sub_188B4AC(v5);
  }
  return result;
}

char *sub_17127A8(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  if ((sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1]) & 1) == 0)
  {
    uint64_t v5 = (void *)(a1 + 8);
    while (1)
    {
      char v6 = v19 + 1;
      unsigned int v7 = *v19;
      if (*v19 < 0)
      {
        unsigned int v8 = v7 + (*v6 << 7);
        unsigned int v7 = v8 - 128;
        if (*v6 < 0)
        {
          char v6 = (char *)sub_188C180((uint64_t)v19, v8 - 128);
          unsigned int v7 = v9;
        }
        else
        {
          char v6 = v19 + 2;
        }
      }
      uint64_t v19 = v6;
      if (v7 == 10)
      {
        int v12 = v6 - 1;
        while (1)
        {
          unint64_t v13 = (unsigned __int8 *)(v12 + 1);
          uint64_t v19 = v12 + 1;
          uint64_t v14 = *(_DWORD **)(a1 + 32);
          if (v14 && (uint64_t v15 = *(int *)(a1 + 24), (int)v15 < *v14))
          {
            *(_DWORD *)(a1 + 24) = v15 + 1;
            uint64_t v16 = *(void *)&v14[2 * v15 + 2];
          }
          else
          {
            sub_1626D70(*(void *)(a1 + 16));
            uint64_t v16 = sub_188CDC8(a1 + 16, v17);
            unint64_t v13 = (unsigned __int8 *)v19;
          }
          int v12 = sub_1712948(a3, v16, v13);
          uint64_t v19 = v12;
          if (!v12) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v12 || *v12 != 10) {
            goto LABEL_24;
          }
        }
      }
      if (!v7 || (v7 & 7) == 4) {
        break;
      }
      if (*v5)
      {
        uint64_t v11 = (std::string *)((*v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v11 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        char v6 = v19;
      }
      uint64_t v19 = (char *)sub_1885AC0(v7, v11, v6, a3);
      if (!v19) {
        return 0;
      }
LABEL_24:
      if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
        return v19;
      }
    }
    if (v6)
    {
      a3[10].i32[0] = v7 - 1;
      return v19;
    }
    return 0;
  }
  return v19;
}

char *sub_1712948(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  BOOL result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    BOOL result = sub_16263F4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17129D8(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        uint64_t v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        uint64_t v10 = __dst + 2;
      }
      __dst = sub_162660C(v8, (unint64_t)v10, a3);
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return __dst;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(__dst, v14, (int)v15);
    __dst += v16;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v14, v15, __dst);
}

uint64_t sub_1712B1C(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16267FC(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 40) = v2;
  return v2;
}

void sub_1712BCC(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1871FA8((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  uint64_t v9 = *(void *)(a2 + 8);
  if (v9)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v9 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1712C9C()
{
  return 1;
}

void *sub_1712CA4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineQuadNodes");
}

void *sub_1712CB4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1712D28(void *a1)
{
  sub_1712CB4(a1);

  operator delete();
}

uint64_t *sub_1712D60(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  BOOL result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1712D70(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1712E70(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1712F08(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1712F3C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1712F58()
{
  return 1;
}

void *sub_1712F60@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineQuadNodesFilter");
}

uint64_t sub_1712F70(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D5998;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

void sub_1712FEC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_171301C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1713090(void *a1)
{
  sub_171301C(a1);

  operator delete();
}

uint64_t sub_17130C8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 16) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_17130E0(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v19 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
    goto LABEL_27;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (1)
  {
    unsigned int v7 = v19 + 1;
    unsigned int v8 = *v19;
    if (*v19 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unsigned int v7 = (char *)sub_188C180((uint64_t)v19, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unsigned int v7 = v19 + 2;
      }
    }
    uint64_t v19 = v7;
    if (v8 != 8) {
      break;
    }
    unint64_t v13 = v7 + 1;
    int v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_19;
    }
    int v15 = *v13;
    int v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      unint64_t v13 = v7 + 2;
LABEL_19:
      uint64_t v19 = v13;
      *(_DWORD *)(a1 + 24) = v14;
      int v5 = 1;
      goto LABEL_20;
    }
    uint64_t v16 = (char *)sub_188C0D0((uint64_t)v7, v14);
    uint64_t v19 = v16;
    *(_DWORD *)(a1 + 24) = v17;
    int v5 = 1;
    if (!v16) {
      goto LABEL_28;
    }
LABEL_20:
    if (sub_11947B8((uint64_t)a3, &v19, a3[11].i32[1])) {
      goto LABEL_27;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if (*v6)
    {
      int v12 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      int v12 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unsigned int v7 = v19;
    }
    uint64_t v19 = (char *)sub_1885AC0(v8, v12, v7, a3);
    if (!v19) {
      goto LABEL_28;
    }
    goto LABEL_20;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_27;
  }
LABEL_28:
  uint64_t v19 = 0;
LABEL_27:
  *(_DWORD *)(a1 + 16) |= v5;
  return v19;
}

unsigned char *sub_1713260(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unsigned int v6 = *(_DWORD *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unsigned int v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unsigned int v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    int v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    int v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1713388(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 16)) {
    uint64_t v1 = ((9 * (__clz(*(_DWORD *)(a1 + 24) | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  else {
    uint64_t v1 = 0;
  }
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    unint64_t v4 = v2 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    v1 += v5;
  }
  *(_DWORD *)(a1 + 20) = v1;
  return v1;
}

uint64_t sub_17133F0()
{
  return 1;
}

void *sub_17133F8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineSize");
}

void *sub_1713408(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_171347C(void *a1)
{
  sub_1713408(a1);

  operator delete();
}

uint64_t *sub_17134B4(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17134C4(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unsigned int v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unsigned int v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17135C4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_171365C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1713690(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17136AC()
{
  return 1;
}

void *sub_17136B4@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineSizeFilter");
}

uint64_t sub_17136C4(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = (uint64_t *)(a1 + 16);
  *(void *)a1 = off_24D5A98;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  int v6 = *(_DWORD *)(a2 + 24);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1872034(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v9 = *(_DWORD *)(a1 + 24) + v6;
    *(_DWORD *)(a1 + 24) = v9;
    unsigned int v10 = *(int **)(a1 + 32);
    if (*v10 < v9) {
      *unsigned int v10 = v9;
    }
  }
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  int v11 = *(_DWORD *)(a2 + 48);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 56);
    uint64_t v13 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871FA8((uint64_t *)(a1 + 40), v13, (uint64_t *)(v12 + 8), v11, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v14 = *(_DWORD *)(a1 + 48) + v11;
    *(_DWORD *)(a1 + 48) = v14;
    int v15 = *(int **)(a1 + 56);
    if (*v15 < v14) {
      *int v15 = v14;
    }
  }
  *(_DWORD *)(a1 + 64) = 0;
  uint64_t v16 = *(void *)(a2 + 8);
  if (v16) {
    sub_188B4F8(v4, (v16 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return a1;
}

void sub_1713814(_Unwind_Exception *a1)
{
  sub_18701BC(v4);
  sub_187023C(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_171386C(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18701BC(a1 + 5);
  sub_187023C(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17138F8(void *a1)
{
  sub_171386C(a1);

  operator delete();
}

uint64_t sub_1713930(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 24);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 32) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1625B68(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 24) = 0;
  }
  uint64_t v5 = *(unsigned int *)(v1 + 48);
  if ((int)v5 >= 1)
  {
    int v6 = (uint64_t *)(*(void *)(v1 + 56) + 8);
    do
    {
      uint64_t v7 = *v6++;
      uint64_t result = sub_1626368(v7);
      --v5;
    }
    while (v5);
    *(_DWORD *)(v1 + 48) = 0;
  }
  char v9 = *(unsigned char *)(v1 + 8);
  uint64_t v8 = (uint64_t *)(v1 + 8);
  if (v9)
  {
    return sub_188B4AC(v8);
  }
  return result;
}

char *sub_17139D4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if ((sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1]) & 1) == 0)
  {
    int v6 = (void *)(a1 + 8);
    while (1)
    {
      uint64_t v7 = v26 + 1;
      unsigned int v8 = *v26;
      if (*v26 < 0)
      {
        unsigned int v9 = v8 + (*v7 << 7);
        unsigned int v8 = v9 - 128;
        if (*v7 < 0)
        {
          uint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
          unsigned int v8 = v10;
        }
        else
        {
          uint64_t v7 = v26 + 2;
        }
      }
      uint64_t v26 = v7;
      if (v8 >> 3 == 2)
      {
        if (v8 == 18)
        {
          int v14 = v7 - 1;
          while (1)
          {
            int v15 = (unsigned __int8 *)(v14 + 1);
            uint64_t v26 = v14 + 1;
            uint64_t v16 = *(_DWORD **)(a1 + 56);
            if (v16 && (uint64_t v17 = *(int *)(a1 + 48), (int)v17 < *v16))
            {
              *(_DWORD *)(a1 + 48) = v17 + 1;
              uint64_t v18 = *(void *)&v16[2 * v17 + 2];
            }
            else
            {
              sub_1626D70(*(void *)(a1 + 40));
              uint64_t v18 = sub_188CDC8(a1 + 40, v19);
              int v15 = (unsigned __int8 *)v26;
            }
            int v14 = sub_1712948(a3, v18, v15);
            uint64_t v26 = v14;
            if (!v14) {
              return 0;
            }
            if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
              goto LABEL_39;
            }
          }
        }
      }
      else if (v8 >> 3 == 1 && v8 == 10)
      {
        unint64_t v20 = v7 - 1;
        while (1)
        {
          uint64_t v21 = (unsigned __int8 *)(v20 + 1);
          uint64_t v26 = v20 + 1;
          uint64_t v22 = *(_DWORD **)(a1 + 32);
          if (v22 && (uint64_t v23 = *(int *)(a1 + 24), (int)v23 < *v22))
          {
            *(_DWORD *)(a1 + 24) = v23 + 1;
            uint64_t v24 = *(void *)&v22[2 * v23 + 2];
          }
          else
          {
            sub_1626CF0(*(void *)(a1 + 16));
            uint64_t v24 = sub_188CDC8(a1 + 16, v25);
            uint64_t v21 = (unsigned __int8 *)v26;
          }
          unint64_t v20 = sub_1713C1C(a3, v24, v21);
          uint64_t v26 = v20;
          if (!v20) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v20 || *v20 != 10) {
            goto LABEL_39;
          }
        }
      }
      if (!v8 || (v8 & 7) == 4) {
        break;
      }
      if (*v6)
      {
        uint64_t v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        uint64_t v7 = v26;
      }
      uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
      if (!v26) {
        return 0;
      }
LABEL_39:
      if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
        return v26;
      }
    }
    if (v7)
    {
      a3[10].i32[0] = v8 - 1;
      return v26;
    }
    return 0;
  }
  return v26;
}

char *sub_1713C1C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1625C0C(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1713CAC(uint64_t a1, char *__dst, _DWORD *a3)
{
  int v6 = *(_DWORD *)(a1 + 24);
  if (v6)
  {
    for (int i = 0; i != v6; ++i)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v8 = *(void *)(*(void *)(a1 + 32) + 8 * i + 8);
      *__dst = 10;
      unsigned int v9 = *(_DWORD *)(v8 + 20);
      __dst[1] = v9;
      if (v9 > 0x7F) {
        unsigned int v10 = sub_188A9CC(v9, __dst + 1);
      }
      else {
        unsigned int v10 = __dst + 2;
      }
      __dst = sub_1625E90(v8, (unint64_t)v10, a3);
    }
  }
  int v11 = *(_DWORD *)(a1 + 48);
  if (v11)
  {
    for (int j = 0; j != v11; ++j)
    {
      if (*(void *)a3 <= (unint64_t)__dst) {
        __dst = (char *)sub_188A3FC((uint64_t)a3, (int)__dst);
      }
      uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * j + 8);
      *__dst = 18;
      unsigned int v14 = *(_DWORD *)(v13 + 20);
      __dst[1] = v14;
      if (v14 > 0x7F) {
        int v15 = sub_188A9CC(v14, __dst + 1);
      }
      else {
        int v15 = __dst + 2;
      }
      __dst = sub_162660C(v13, (unint64_t)v15, a3);
    }
  }
  uint64_t v16 = *(void *)(a1 + 8);
  if ((v16 & 1) == 0) {
    return __dst;
  }
  unint64_t v18 = v16 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v18 + 31) < 0)
  {
    uint64_t v19 = *(void **)(v18 + 8);
    uint64_t v20 = *(void *)(v18 + 16);
  }
  else
  {
    uint64_t v19 = (void *)(v18 + 8);
    LODWORD(v20) = *(unsigned __int8 *)(v18 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v20)
  {
    uint64_t v21 = (int)v20;
    memcpy(__dst, v19, (int)v20);
    __dst += v21;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v19, v20, __dst);
}

uint64_t sub_1713E74(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16260E8(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v8 = *(int *)(a1 + 48);
  uint64_t v9 = v2 + v8;
  uint64_t v10 = *(void *)(a1 + 56);
  if (v10) {
    int v11 = (uint64_t *)(v10 + 8);
  }
  else {
    int v11 = 0;
  }
  if (v8)
  {
    uint64_t v12 = 8 * v8;
    do
    {
      uint64_t v13 = *v11++;
      uint64_t v14 = sub_16267FC(v13);
      v9 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6);
      v12 -= 8;
    }
    while (v12);
  }
  uint64_t v15 = *(void *)(a1 + 8);
  if (v15)
  {
    unint64_t v17 = v15 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v17 + 31) < 0) {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    else {
      uint64_t v18 = *(unsigned __int8 *)(v17 + 31);
    }
    v9 += v18;
  }
  *(_DWORD *)(a1 + 64) = v9;
  return v9;
}

void sub_1713F74(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 24);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 32) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4(a1 + 16, *(_DWORD *)(a2 + 24));
    sub_1872034((uint64_t *)(a1 + 16), v6, v5, v4, **(_DWORD **)(a1 + 32) - *(_DWORD *)(a1 + 24));
    int v7 = *(_DWORD *)(a1 + 24) + v4;
    *(_DWORD *)(a1 + 24) = v7;
    uint64_t v8 = *(int **)(a1 + 32);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 56) + 8);
    int v11 = (std::string **)sub_188CCE4(a1 + 40, *(_DWORD *)(a2 + 48));
    sub_1871FA8((uint64_t *)(a1 + 40), v11, v10, v9, **(_DWORD **)(a1 + 56) - *(_DWORD *)(a1 + 48));
    int v12 = *(_DWORD *)(a1 + 48) + v9;
    *(_DWORD *)(a1 + 48) = v12;
    uint64_t v13 = *(int **)(a1 + 56);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  uint64_t v14 = *(void *)(a2 + 8);
  if (v14)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v14 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_17140A8()
{
  return 1;
}

void *sub_17140B0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineUpdateManifest");
}

void *sub_17140C0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1714134(void *a1)
{
  sub_17140C0(a1);

  operator delete();
}

uint64_t *sub_171416C(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_171417C(uint64_t a1, char *a2, int32x2_t *a3)
{
  int v12 = a2;
  int v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_171427C(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1714314(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1714348(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1714364()
{
  return 1;
}

void *sub_171436C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineUpdateManifestFilter");
}

uint64_t sub_171437C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D5B98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unsigned int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  return a1;
}

void sub_1714460(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1714490(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1714548(uint64_t a1)
{
  sub_1714490(a1);

  operator delete();
}

uint64_t sub_1714580(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    if (v1)
    {
      unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v2 + 23) < 0)
      {
        **(unsigned char **)unint64_t v2 = 0;
        *(void *)(v2 + 8) = 0;
        if ((v1 & 2) == 0) {
          goto LABEL_11;
        }
        goto LABEL_6;
      }
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
    }
    if ((v1 & 2) == 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  if ((v1 & 0xC) != 0)
  {
    *(void *)(a1 + 40) = 0;
    *(void *)(a1 + 48) = 0;
  }
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1714608(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v23 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v23 + 1);
    unsigned int v9 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v23, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v23 + 2);
      }
    }
    *(void *)uint64_t v23 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 24);
        goto LABEL_17;
      case 2u:
        if (v9 != 18) {
          goto LABEL_23;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 32);
LABEL_17:
        uint64_t v16 = (std::string *)sub_1880F84(v14, v13);
        unint64_t v17 = (void *)sub_188C244(v16, *(char **)v23, (uint64_t)a3);
        goto LABEL_30;
      case 3u:
        if (v9 != 25) {
          goto LABEL_23;
        }
        uint64_t v19 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 4u;
        *(void *)(a1 + 40) = v19;
        goto LABEL_22;
      case 4u:
        if (v9 != 33) {
          goto LABEL_23;
        }
        uint64_t v20 = *(void *)v8;
        uint64_t v18 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v20;
LABEL_22:
        *(void *)uint64_t v23 = v18;
        goto LABEL_31;
      default:
LABEL_23:
        if (v9) {
          BOOL v21 = (v9 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (*v7)
          {
            uint64_t v22 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v23;
          }
          unint64_t v17 = sub_1885AC0(v9, v22, v8, a3);
LABEL_30:
          *(void *)uint64_t v23 = v17;
          if (!v17) {
            goto LABEL_36;
          }
LABEL_31:
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_36:
        }
          *(void *)uint64_t v23 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v23;
    }
  }
}

char *sub_1714834(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_8:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 40);
  *unint64_t v4 = 25;
  *(void *)(v4 + 1) = v7;
  v4 += 9;
  if ((v6 & 8) != 0)
  {
LABEL_11:
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v8 = *(void *)(a1 + 48);
    *unint64_t v4 = 33;
    *(void *)(v4 + 1) = v8;
    v4 += 9;
  }
LABEL_14:
  uint64_t v9 = *(void *)(a1 + 8);
  if ((v9 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v9 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_17149A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0) {
    v2 += 9;
  }
  if ((v1 & 8) != 0) {
    uint64_t v3 = v2 + 9;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_17:
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v3 += v13;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1714A94()
{
  return 1;
}

void *sub_1714A9C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LocationEvent");
}

void *sub_1714AAC(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1714B20(void *a1)
{
  sub_1714AAC(a1);

  operator delete();
}

uint64_t *sub_1714B58(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1714B68(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      uint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1714C68(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1714D00(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1714D34(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1714D50()
{
  return 1;
}

void *sub_1714D58@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.LocationEventFilter");
}

uint64_t sub_1714D68(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  *(void *)a1 = off_24D5C98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v4 = *(void *)(a2 + 8);
  if (v4) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

void sub_1714DE4(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1714E14(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1714E88(void *a1)
{
  sub_1714E14(a1);

  operator delete();
}

uint64_t sub_1714EC0(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 3) != 0) {
    *(void *)(a1 + 24) = 0;
  }
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v2) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

char *sub_1714EE4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    uint64_t v19 = v8 + 1;
    uint64_t v20 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = v8 + 2;
LABEL_31:
      uint64_t v26 = v19;
      *(unsigned char *)(a1 + 24) = v20 != 0;
      int v5 = 1;
      goto LABEL_32;
    }
    uint64_t v23 = (char *)sub_188C138((uint64_t)v8, v20);
    uint64_t v26 = v23;
    *(unsigned char *)(a1 + 24) = v24 != 0;
    int v5 = 1;
    if (!v23) {
      goto LABEL_45;
    }
LABEL_32:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 16)
  {
    uint64_t v15 = v8 + 1;
    unint64_t v16 = *v8;
    if (*v8 < 0)
    {
      int v17 = *v15;
      int v18 = v16 + (v17 << 7);
      unint64_t v16 = (v18 - 128);
      if (v17 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v8, (v18 - 128));
        if (!v26) {
          goto LABEL_45;
        }
        unint64_t v16 = v22;
        goto LABEL_26;
      }
      uint64_t v15 = v8 + 2;
    }
    uint64_t v26 = v15;
LABEL_26:
    if (v16 > 2)
    {
      if (*v7) {
        uint64_t v25 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else {
        uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      }
      sub_188C020(2, v16, v25);
    }
    else
    {
      *(_DWORD *)(a1 + 16) |= 2u;
      *(_DWORD *)(a1 + 28) = v16;
    }
    goto LABEL_32;
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      uint64_t v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_45:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

unsigned char *sub_171512C(uint64_t a1, unint64_t __dst, _DWORD *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    if (*(void *)a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    char v7 = *(unsigned char *)(a1 + 24);
    *uint64_t v4 = 8;
    v4[1] = v7;
    v4 += 2;
  }
  if ((v6 & 2) != 0)
  {
    if (*(void *)a3 <= (unint64_t)v4) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v8 = *(int *)(a1 + 28);
    *uint64_t v4 = 16;
    v4[1] = v8;
    if (v8 > 0x7F)
    {
      v4[1] = v8 | 0x80;
      unint64_t v9 = v8 >> 7;
      v4[2] = v8 >> 7;
      v4 += 3;
      if (v8 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v10 = v9 >> 14;
          v9 >>= 7;
          *v4++ = v9;
        }
        while (v10);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if ((v11 & 1) == 0) {
    return v4;
  }
  unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v13 + 31) < 0)
  {
    uint64_t v14 = *(void **)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
  }
  else
  {
    uint64_t v14 = (void *)(v13 + 8);
    LODWORD(v15) = *(unsigned __int8 *)(v13 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v15)
  {
    uint64_t v16 = (int)v15;
    memcpy(v4, v14, (int)v15);
    v4 += v16;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v14, v15, v4);
}

uint64_t sub_171528C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) != 0)
  {
    uint64_t v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0)
    {
      int v3 = *(_DWORD *)(a1 + 28);
      if (v3 < 0) {
        uint64_t v4 = 11;
      }
      else {
        uint64_t v4 = ((9 * (__clz(v3 | 1) ^ 0x1F) + 73) >> 6) + 1;
      }
      v2 += v4;
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  if (v5)
  {
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v7 + 31) < 0) {
      uint64_t v8 = *(void *)(v7 + 16);
    }
    else {
      uint64_t v8 = *(unsigned __int8 *)(v7 + 31);
    }
    v2 += v8;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_1715314()
{
  return 1;
}

void *sub_171531C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SupportsOfflineMaps");
}

void *sub_171532C(void *a1)
{
  int v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17153A0(void *a1)
{
  sub_171532C(a1);

  operator delete();
}

uint64_t *sub_17153D8(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_17153E8(uint64_t a1, char *a2, int32x2_t *a3)
{
  unint64_t v12 = a2;
  uint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unint64_t v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unint64_t v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_17154E8(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_1715580(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_17155B4(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17155D0()
{
  return 1;
}

void *sub_17155D8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.SupportsOfflineMapsFilter");
}

uint64_t sub_17155E8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D5D98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    unsigned int v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      unsigned int v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  if ((v6 & 2) != 0) {
    operator new();
  }
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = v8;
  return a1;
}

void sub_17156D0()
{
}

uint64_t sub_1715720(uint64_t a1)
{
  int v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_10;
    }
  }
  else if (v4)
  {
    goto LABEL_10;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if ((uint64_t (***)())a1 != &off_2546C18 && *(void *)(a1 + 32))
  {
    sub_15B0994();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_10:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_17157EC(uint64_t a1)
{
  sub_1715720(a1);

  operator delete();
}

unsigned char *sub_1715824(unsigned char *result)
{
  uint64_t v1 = result;
  int v2 = *((_DWORD *)result + 4);
  if ((v2 & 3) != 0)
  {
    if ((v2 & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v3 = *((void *)result + 3) & 0xFFFFFFFFFFFFFFFELL;
    if ((*(char *)(v3 + 23) & 0x80000000) == 0)
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
LABEL_5:
      if ((v2 & 2) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    **(unsigned char **)unint64_t v3 = 0;
    *(void *)(v3 + 8) = 0;
    if ((v2 & 2) != 0) {
LABEL_6:
    }
      uint64_t result = sub_15B09D0(*((void *)result + 4));
  }
LABEL_7:
  char v5 = v1[8];
  unint64_t v4 = v1 + 8;
  *((void *)v4 + 4) = 0;
  *((_DWORD *)v4 + 2) = 0;
  if (v5)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_17158BC(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if ((char)*v8 < 0)
      {
        uint64_t v8 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (unsigned __int8 *)(*(void *)v27 + 2);
      }
    }
    *(void *)BOOL v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v17 = *(void *)(a1 + 32);
      if (!v17)
      {
        int v18 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
        if (*v7) {
          int v18 = (void *)*v18;
        }
        uint64_t v17 = sub_15C1918((uint64_t)v18);
        *(void *)(a1 + 32) = v17;
        uint64_t v8 = *(unsigned __int8 **)v27;
      }
      uint64_t v16 = sub_1198F14(a3, v17, v8);
LABEL_35:
      *(void *)BOOL v27 = v16;
      if (!v16) {
        goto LABEL_43;
      }
      goto LABEL_36;
    }
    if (v12 != 2) {
      break;
    }
    if (v9 != 16) {
      goto LABEL_14;
    }
    v5 |= 4u;
    uint64_t v19 = (char *)(v8 + 1);
    uint64_t v20 = *v8;
    if (((char)*v8 & 0x80000000) == 0) {
      goto LABEL_31;
    }
    int v21 = *v19;
    uint64_t v20 = v20 + (v21 << 7) - 128;
    if ((v21 & 0x80000000) == 0)
    {
      uint64_t v19 = (char *)(v8 + 2);
LABEL_31:
      *(void *)BOOL v27 = v19;
      *(void *)(a1 + 40) = v20;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C138((uint64_t)v8, v20);
    *(void *)BOOL v27 = v25;
    *(void *)(a1 + 40) = v26;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v12 == 1 && v9 == 10)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v22 = *(void *)(a1 + 8);
    uint64_t v23 = (uint64_t *)(v22 & 0xFFFFFFFFFFFFFFFCLL);
    if (v22) {
      uint64_t v23 = (uint64_t *)*v23;
    }
    uint64_t v24 = (std::string *)sub_1880F84((void *)(a1 + 24), v23);
    uint64_t v16 = (void *)sub_188C244(v24, *(char **)v27, (uint64_t)a3);
    goto LABEL_35;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(unsigned __int8 **)v27;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, (char *)v8, a3);
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)BOOL v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

char *sub_1715AF0(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v7 = *(void *)(a1 + 40);
    *unint64_t v4 = 16;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 32);
    *unint64_t v4 = 26;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unsigned int v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unsigned int v12 = v4 + 2;
    }
    unint64_t v4 = sub_15B0C0C(v10, v12, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_1715C9C(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 7) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_12;
  }
  if (v2)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  uint64_t v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = sub_15B0D90(*(void *)(a1 + 32));
    v3 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_10:
  if ((v2 & 4) != 0) {
    v3 += ((9 * (__clz(*(void *)(a1 + 40) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
LABEL_12:
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v3 += v11;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

uint64_t sub_1715DAC(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 16) & 2) == 0) {
    return 1;
  }
  uint64_t result = sub_15B0F18(*(void *)(a1 + 32));
  if (result) {
    return 1;
  }
  return result;
}

void *sub_1715DD8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineIdentifier");
}

void *sub_1715DE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1715E5C(void *a1)
{
  sub_1715DE8(a1);

  operator delete();
}

uint64_t *sub_1715E94(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1715EA4(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1715FA4(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_171603C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_1716070(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_171608C()
{
  return 1;
}

void *sub_1716094@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.OfflineIdentifierFilter");
}

void *sub_17160A4(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1716118(void *a1)
{
  sub_17160A4(a1);

  operator delete();
}

uint64_t *sub_1716150(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t result = (uint64_t *)(a1 + 8);
  if (v2) {
    return (uint64_t *)sub_188B4AC(result);
  }
  return result;
}

char *sub_1716160(uint64_t a1, char *a2, int32x2_t *a3)
{
  unsigned int v12 = a2;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  while (1)
  {
    if (sub_11947B8((uint64_t)a3, &v12, a3[11].i32[1])) {
      return v12;
    }
    uint64_t v5 = v12 + 1;
    unsigned int v6 = *v12;
    if (*v12 < 0)
    {
      unsigned int v7 = v6 + (*v5 << 7);
      unsigned int v6 = v7 - 128;
      if (*v5 < 0)
      {
        uint64_t v5 = (char *)sub_188C180((uint64_t)v12, v7 - 128);
        unsigned int v6 = v8;
      }
      else
      {
        uint64_t v5 = v12 + 2;
      }
    }
    unsigned int v12 = v5;
    if (!v6 || (v6 & 7) == 4) {
      break;
    }
    if (*v4)
    {
      unint64_t v10 = (std::string *)((*v4 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      unint64_t v10 = (std::string *)sub_188DBD8(v4);
      uint64_t v5 = v12;
    }
    unsigned int v12 = (char *)sub_1885AC0(v6, v10, v5, a3);
    if (!v12) {
      return 0;
    }
  }
  if (v5) {
    a3[10].i32[0] = v6 - 1;
  }
  return v5;
}

char *sub_1716260(uint64_t a1, char *__dst, _DWORD *a3)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if ((v4 & 1) == 0) {
    return __dst;
  }
  unint64_t v6 = v4 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v6 + 31) < 0)
  {
    unsigned int v7 = *(void **)(v6 + 8);
    unint64_t v6 = *(void *)(v6 + 16);
  }
  else
  {
    unsigned int v7 = (void *)(v6 + 8);
    LODWORD(v6) = *(unsigned __int8 *)(v6 + 31);
  }
  if (*(void *)a3 - (void)__dst >= (int)v6)
  {
    uint64_t v8 = (int)v6;
    memcpy(__dst, v7, (int)v6);
    __dst += v8;
    return __dst;
  }

  return (char *)sub_188A528(a3, (char *)v7, v6, __dst);
}

uint64_t sub_17162F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8);
  if (v1)
  {
    unint64_t v4 = v1 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v2 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v2 = *(unsigned __int8 *)(v4 + 31);
    }
  }
  else
  {
    uint64_t v2 = 0;
  }
  *(_DWORD *)(a1 + 16) = v2;
  return v2;
}

std::string *sub_171632C(std::string *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  if (v2) {
    return sub_188B4F8((uint64_t *)&result->__r_.__value_.__l.__size_, (v2 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1716348()
{
  return 1;
}

void *sub_1716350@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundViewLabelFilter");
}

uint64_t sub_1716360(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_11;
    }
  }
  else if (v4)
  {
    goto LABEL_11;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_11:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_171642C(uint64_t a1)
{
  sub_1716360(a1);

  operator delete();
}

uint64_t sub_1716464(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) != 0)
  {
    if ((v1 & 1) == 0)
    {
      if ((v1 & 2) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
      if (*(char *)(v3 + 23) < 0)
      {
        **(unsigned char **)unint64_t v3 = 0;
        *(void *)(v3 + 8) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        *(unsigned char *)unint64_t v3 = 0;
        *(unsigned char *)(v3 + 23) = 0;
        if ((v1 & 4) == 0) {
          goto LABEL_17;
        }
      }
      goto LABEL_14;
    }
    unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v2 + 23) < 0)
    {
      **(unsigned char **)unint64_t v2 = 0;
      *(void *)(v2 + 8) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v2 = 0;
      *(unsigned char *)(v2 + 23) = 0;
      if ((v1 & 2) != 0) {
        goto LABEL_10;
      }
    }
LABEL_4:
    if ((v1 & 4) == 0) {
      goto LABEL_17;
    }
LABEL_14:
    unint64_t v4 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v4 + 23) < 0)
    {
      **(unsigned char **)unint64_t v4 = 0;
      *(void *)(v4 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v4 = 0;
      *(unsigned char *)(v4 + 23) = 0;
    }
  }
LABEL_17:
  if ((v1 & 0x18) != 0)
  {
    *(void *)(a1 + 48) = 0;
    *(void *)(a1 + 56) = 0;
  }
  char v6 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 8) = 0;
  if (v6) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_1716528(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v24 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
    goto LABEL_2;
  }
  unsigned int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v24 + 1);
    unsigned int v9 = **(unsigned char **)v24;
    if ((char)**(unsigned char **)v24 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v24, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v24 + 2);
      }
    }
    *(void *)uint64_t v24 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        BOOL v14 = (void *)(a1 + 24);
        goto LABEL_26;
      case 2u:
        if (v9 != 18) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        BOOL v14 = (void *)(a1 + 32);
        goto LABEL_26;
      case 3u:
        if (v9 != 25) {
          goto LABEL_27;
        }
        uint64_t v17 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 8u;
        *(void *)(a1 + 48) = v17;
        goto LABEL_21;
      case 4u:
        if (v9 != 33) {
          goto LABEL_27;
        }
        uint64_t v18 = *(void *)v8;
        uint64_t v16 = v8 + 8;
        v5 |= 0x10u;
        *(void *)(a1 + 56) = v18;
LABEL_21:
        *(void *)uint64_t v24 = v16;
        goto LABEL_35;
      case 5u:
        if (v9 != 42) {
          goto LABEL_27;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v19 = *(void *)(a1 + 8);
        uint64_t v13 = (uint64_t *)(v19 & 0xFFFFFFFFFFFFFFFCLL);
        if (v19) {
          uint64_t v13 = (uint64_t *)*v13;
        }
        BOOL v14 = (void *)(a1 + 40);
LABEL_26:
        uint64_t v20 = (std::string *)sub_1880F84(v14, v13);
        int v21 = (void *)sub_188C244(v20, *(char **)v24, (uint64_t)a3);
        goto LABEL_34;
      default:
LABEL_27:
        if (v9) {
          BOOL v22 = (v9 & 7) == 4;
        }
        else {
          BOOL v22 = 1;
        }
        if (!v22)
        {
          if (*v7)
          {
            uint64_t v23 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            uint64_t v23 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            uint64_t v8 = *(char **)v24;
          }
          int v21 = sub_1885AC0(v9, v23, v8, a3);
LABEL_34:
          *(void *)uint64_t v24 = v21;
          if (!v21) {
            goto LABEL_40;
          }
LABEL_35:
          if (sub_11947B8((uint64_t)a3, (char **)v24, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_40:
        }
          *(void *)uint64_t v24 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 16) |= v5;
        return *(void *)v24;
    }
  }
}

char *sub_1716790(uint64_t a1, char *__dst, void *a3)
{
  unint64_t v4 = __dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), __dst);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 8) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 8) == 0)
  {
LABEL_4:
    if ((v6 & 0x10) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_11:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v9 = *(void *)(a1 + 48);
  *unint64_t v4 = 25;
  *(void *)(v4 + 1) = v9;
  v4 += 9;
  if ((v6 & 0x10) == 0)
  {
LABEL_5:
    if ((v6 & 4) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_14:
  if (*a3 <= (unint64_t)v4) {
    unint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v10 = *(void *)(a1 + 56);
  *unint64_t v4 = 33;
  *(void *)(v4 + 1) = v10;
  v4 += 9;
  if ((v6 & 4) != 0) {
LABEL_6:
  }
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_7:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v11 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v11 + 31) < 0)
  {
    uint64_t v12 = *(void **)(v11 + 8);
    uint64_t v13 = *(void *)(v11 + 16);
  }
  else
  {
    uint64_t v12 = (void *)(v11 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v11 + 31);
  }
  if (*a3 - (void)v4 >= (int)v13)
  {
    uint64_t v14 = (int)v13;
    memcpy(v4, v12, (int)v13);
    v4 += v14;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v12, v13, v4);
}

uint64_t sub_1716920(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 0x1F) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_21;
  }
  if (v1)
  {
    unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v6 = *(void *)(v4 + 8);
    if ((v5 & 0x80u) == 0) {
      uint64_t v6 = v5;
    }
    uint64_t v2 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v2 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    unint64_t v10 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    v2 += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
  if ((v1 & 8) != 0) {
    v2 += 9;
  }
  if ((v1 & 0x10) != 0) {
    uint64_t v3 = v2 + 9;
  }
  else {
    uint64_t v3 = v2;
  }
LABEL_21:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1716A58(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0x1F) != 0)
  {
    if (v4)
    {
      uint64_t v6 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
      LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
      unint64_t v7 = (std::string **)&result[1];
      std::string::size_type size = v3->__r_.__value_.__l.__size_;
      uint64_t v9 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
      if (size) {
        uint64_t v9 = (uint64_t *)*v9;
      }
      uint64_t result = sub_1881DF4(v7, v6, v9);
      if ((v4 & 2) == 0)
      {
LABEL_4:
        if ((v4 & 4) == 0) {
          goto LABEL_5;
        }
        goto LABEL_19;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_4;
    }
    unint64_t v10 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
    std::string::size_type v11 = v3->__r_.__value_.__l.__size_;
    uint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
    if (v11) {
      uint64_t v12 = (uint64_t *)*v12;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v10, v12);
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
LABEL_19:
    uint64_t v13 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
    std::string::size_type v14 = v3->__r_.__value_.__l.__size_;
    unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
    if (v14) {
      unint64_t v15 = (uint64_t *)*v15;
    }
    uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v13, v15);
    if ((v4 & 8) == 0)
    {
LABEL_6:
      if ((v4 & 0x10) == 0)
      {
LABEL_8:
        LODWORD(v3->__r_.__value_.__r.__words[2]) |= v4;
        goto LABEL_9;
      }
LABEL_7:
      v3[2].__r_.__value_.__l.__size_ = *(void *)(a2 + 56);
      goto LABEL_8;
    }
LABEL_22:
    v3[2].__r_.__value_.__r.__words[0] = *(void *)(a2 + 48);
    if ((v4 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1716B98()
{
  return 1;
}

void *sub_1716BA0@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundViewLabel.GroundViewLabelInfo");
}

uint64_t sub_1716BB0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)a1 = off_24D5F98;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v5 = (std::string *)(a1 + 24);
  *(_DWORD *)(a1 + 44) = 0;
  *(void *)(a1 + 28) = 0;
  *(void *)(a1 + 36) = 0;
  *(void *)(a1 + 20) = 0;
  int v6 = *(_DWORD *)(a2 + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    uint64_t v8 = (std::string **)sub_188CCE4(a1 + 24, *(_DWORD *)(a2 + 32));
    sub_18720C0(v5, v8, (uint64_t *)(v7 + 8), v6, **(_DWORD **)(a1 + 40) - *(_DWORD *)(a1 + 32));
    int v9 = *(_DWORD *)(a1 + 32) + v6;
    *(_DWORD *)(a1 + 32) = v9;
    unint64_t v10 = *(int **)(a1 + 40);
    if (*v10 < v9) {
      *unint64_t v10 = v9;
    }
  }
  uint64_t v11 = *(void *)(a2 + 8);
  if (v11) {
    sub_188B4F8(v4, (v11 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

void sub_1716CA4(_Unwind_Exception *a1)
{
  sub_18702BC(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1716CE8(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_18702BC(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1716D68(void *a1)
{
  sub_1716CE8(a1);

  operator delete();
}

uint64_t sub_1716DA0(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_1716464(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(void *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1716E24(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = v26 + 1;
    unsigned int v9 = *v26;
    if (*v26 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v26, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v26 + 2;
      }
    }
    uint64_t v26 = v8;
    if (v9 >> 3 == 2) {
      break;
    }
    if (v9 >> 3 != 1 || v9 != 8) {
      goto LABEL_13;
    }
    int v21 = v8 + 1;
    uint64_t v22 = *v8;
    if ((*v8 & 0x80000000) == 0) {
      goto LABEL_34;
    }
    int v23 = *v21;
    uint64_t v22 = v22 + (v23 << 7) - 128;
    if ((v23 & 0x80000000) == 0)
    {
      int v21 = v8 + 2;
LABEL_34:
      uint64_t v26 = v21;
      *(void *)(a1 + 48) = v22;
      int v5 = 1;
      goto LABEL_35;
    }
    uint64_t v24 = (char *)sub_188C138((uint64_t)v8, v22);
    uint64_t v26 = v24;
    *(void *)(a1 + 48) = v25;
    int v5 = 1;
    if (!v24) {
      goto LABEL_42;
    }
LABEL_35:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    unint64_t v15 = v8 - 1;
    while (1)
    {
      uint64_t v16 = (unsigned __int8 *)(v15 + 1);
      uint64_t v26 = v15 + 1;
      uint64_t v17 = *(_DWORD **)(a1 + 40);
      if (v17 && (uint64_t v18 = *(int *)(a1 + 32), (int)v18 < *v17))
      {
        *(_DWORD *)(a1 + 32) = v18 + 1;
        uint64_t v19 = *(void *)&v17[2 * v18 + 2];
      }
      else
      {
        uint64_t v20 = sub_178AEA4(*(void *)(a1 + 24));
        uint64_t v19 = sub_188CDC8(a1 + 24, (uint64_t)v20);
        uint64_t v16 = (unsigned __int8 *)v26;
      }
      unint64_t v15 = (char *)sub_171704C(a3, v19, v16);
      uint64_t v26 = v15;
      if (!v15) {
        goto LABEL_42;
      }
      if (*(void *)a3 <= (unint64_t)v15 || *v15 != 18) {
        goto LABEL_35;
      }
    }
  }
LABEL_13:
  if (v9) {
    BOOL v13 = (v9 & 7) == 4;
  }
  else {
    BOOL v13 = 1;
  }
  if (!v13)
  {
    if (*v7)
    {
      std::string::size_type v14 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v14 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v9, v14, v8, a3);
    if (!v26) {
      goto LABEL_42;
    }
    goto LABEL_35;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_42:
  uint64_t v26 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return v26;
}

uint64_t sub_171704C(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1716528(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_17170DC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(void *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        BOOL v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        BOOL v13 = v4 + 2;
      }
      uint64_t v4 = sub_1716790(v11, v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17172A0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_1716920(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16)) {
    v2 += ((9 * (__clz(*(void *)(a1 + 48) | 1) ^ 0x3F) + 73) >> 6) + 1;
  }
  uint64_t v8 = *(void *)(a1 + 8);
  if (v8)
  {
    unint64_t v10 = v8 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v10 + 31) < 0) {
      uint64_t v11 = *(void *)(v10 + 16);
    }
    else {
      uint64_t v11 = *(unsigned __int8 *)(v10 + 31);
    }
    v2 += v11;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_1717378(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = sub_18720C0(v3 + 1, v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2] - LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    uint64_t v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    std::string::size_type v9 = *(void *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    v3[2].__r_.__value_.__r.__words[0] = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1717464()
{
  return 1;
}

void *sub_171746C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.GroundViewLabel");
}

uint64_t sub_171747C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(uint64_t **)(a1 + 40) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 40));
  }
  if ((uint64_t (***)())a1 != &off_2546CB0 && *(void *)(a1 + 48))
  {
    sub_15B2C44();
    operator delete();
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1717578(uint64_t a1)
{
  sub_171747C(a1);

  operator delete();
}

uint64_t sub_17175B0(uint64_t result)
{
  uint64_t v1 = result;
  int v2 = *(_DWORD *)(result + 16);
  if ((v2 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v2)
  {
    unint64_t v5 = *(void *)(result + 24) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v5 + 23) < 0)
    {
      **(unsigned char **)unint64_t v5 = 0;
      *(void *)(v5 + 8) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v5 = 0;
      *(unsigned char *)(v5 + 23) = 0;
      if ((v2 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v2 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v2 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v6 = *(void *)(result + 32) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v6 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v6 = 0;
    *(unsigned char *)(v6 + 23) = 0;
    if ((v2 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  **(unsigned char **)unint64_t v6 = 0;
  *(void *)(v6 + 8) = 0;
  if ((v2 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  unint64_t v7 = *(void *)(result + 40) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v7 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v7 = 0;
    *(unsigned char *)(v7 + 23) = 0;
    if ((v2 & 8) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    uint64_t result = sub_15B2C80(*(void *)(result + 48));
    goto LABEL_7;
  }
  **(unsigned char **)unint64_t v7 = 0;
  *(void *)(v7 + 8) = 0;
  if ((v2 & 8) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = v1 + 8;
  *(_DWORD *)(v3 + 8) = 0;
  if (v4)
  {
    return sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

uint64_t sub_17176B4(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v22 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
    return *(void *)v22;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v22 + 1);
    unsigned int v8 = **(unsigned char **)v22;
    if ((char)**(unsigned char **)v22 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v22, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v22 + 2);
      }
    }
    *(void *)uint64_t v22 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 8u;
        uint64_t v11 = *(void **)(a1 + 48);
        if (!v11)
        {
          unsigned int v12 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            unsigned int v12 = (void *)*v12;
          }
          uint64_t v11 = sub_15C1B30((uint64_t)v12);
          *(void *)(a1 + 48) = v11;
          unint64_t v7 = *(unsigned __int8 **)v22;
        }
        uint64_t v13 = sub_125CF74(a3, (uint64_t)v11, v7);
        goto LABEL_35;
      case 2u:
        if (v8 != 18) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 1u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v15 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v15 = (uint64_t *)*v15;
        }
        unint64_t v16 = (void *)(a1 + 24);
        goto LABEL_27;
      case 3u:
        if (v8 != 26) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 2u;
        uint64_t v17 = *(void *)(a1 + 8);
        unint64_t v15 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
        if (v17) {
          unint64_t v15 = (uint64_t *)*v15;
        }
        unint64_t v16 = (void *)(a1 + 32);
        goto LABEL_27;
      case 4u:
        if (v8 != 34) {
          goto LABEL_28;
        }
        *(_DWORD *)(a1 + 16) |= 4u;
        uint64_t v18 = *(void *)(a1 + 8);
        unint64_t v15 = (uint64_t *)(v18 & 0xFFFFFFFFFFFFFFFCLL);
        if (v18) {
          unint64_t v15 = (uint64_t *)*v15;
        }
        unint64_t v16 = (void *)(a1 + 40);
LABEL_27:
        uint64_t v19 = (std::string *)sub_1880F84(v16, v15);
        uint64_t v13 = (uint64_t)sub_188C244(v19, *(char **)v22, (uint64_t)a3);
        goto LABEL_35;
      default:
LABEL_28:
        if (v8) {
          BOOL v20 = (v8 & 7) == 4;
        }
        else {
          BOOL v20 = 1;
        }
        if (!v20)
        {
          if (*v6)
          {
            int v21 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
          }
          else
          {
            int v21 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
            unint64_t v7 = *(unsigned __int8 **)v22;
          }
          uint64_t v13 = (uint64_t)sub_1885AC0(v8, v21, (char *)v7, a3);
LABEL_35:
          *(void *)uint64_t v22 = v13;
          if (!v13) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v22, a3[11].i32[1])) {
            return *(void *)v22;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v22;
    }
  }
}

char *sub_171791C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  char v4 = (char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 8) != 0)
  {
    if (*a3 <= __dst) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, __dst);
    }
    uint64_t v9 = *(void *)(a1 + 48);
    *char v4 = 10;
    unsigned int v10 = *(_DWORD *)(v9 + 20);
    v4[1] = v10;
    if (v10 > 0x7F) {
      uint64_t v11 = sub_188A9CC(v10, v4 + 1);
    }
    else {
      uint64_t v11 = v4 + 2;
    }
    char v4 = sub_15B2EA4(v9, v11, a3);
    if ((v6 & 1) == 0)
    {
LABEL_3:
      if ((v6 & 2) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 1) == 0)
  {
    goto LABEL_3;
  }
  char v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 2) == 0)
  {
LABEL_4:
    if ((v6 & 4) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_15:
  char v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_5:
  }
    char v4 = sub_117A0AC(a3, 4, (const void **)(*(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_6:
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_1717AA8(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 16);
  if ((v2 & 0xF) == 0)
  {
    uint64_t v3 = 0;
    goto LABEL_15;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  unint64_t v4 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v5 = *(unsigned __int8 *)(v4 + 23);
  uint64_t v6 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    uint64_t v6 = v5;
  }
  uint64_t v3 = v6 + ((9 * (__clz(v6 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unint64_t v7 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v9 = *(void *)(v7 + 8);
    if ((v8 & 0x80u) == 0) {
      uint64_t v9 = v8;
    }
    v3 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  unint64_t v13 = *(void *)(a1 + 40) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v14 = *(unsigned __int8 *)(v13 + 23);
  uint64_t v15 = *(void *)(v13 + 8);
  if ((v14 & 0x80u) == 0) {
    uint64_t v15 = v14;
  }
  v3 += v15 + ((9 * (__clz(v15 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v2 & 8) != 0)
  {
LABEL_14:
    uint64_t v10 = sub_15B2F90(*(void *)(a1 + 48));
    v3 += v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_15:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v16 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v16 + 31) < 0) {
      uint64_t v17 = *(void *)(v16 + 16);
    }
    else {
      uint64_t v17 = *(unsigned __int8 *)(v16 + 31);
    }
    v3 += v17;
  }
  *(_DWORD *)(a1 + 20) = v3;
  return v3;
}

std::string *sub_1717C1C(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 16);
  if ((v4 & 0xF) == 0) {
    goto LABEL_24;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL);
    LODWORD(result->__r_.__value_.__r.__words[2]) |= 1u;
    uint64_t v6 = (std::string **)&result[1];
    std::string::size_type size = v3->__r_.__value_.__l.__size_;
    uint64_t v8 = (uint64_t *)(size & 0xFFFFFFFFFFFFFFFCLL);
    if (size) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    uint64_t result = sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 2u;
  std::string::size_type v10 = v3->__r_.__value_.__l.__size_;
  uint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    uint64_t v11 = (uint64_t *)*v11;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__l.__size_, v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_16;
  }
LABEL_13:
  unint64_t v12 = (long long *)(*(void *)(a2 + 40) & 0xFFFFFFFFFFFFFFFELL);
  LODWORD(v3->__r_.__value_.__r.__words[2]) |= 4u;
  std::string::size_type v13 = v3->__r_.__value_.__l.__size_;
  uint64_t v14 = (uint64_t *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
  if (v13) {
    uint64_t v14 = (uint64_t *)*v14;
  }
  uint64_t result = sub_1881DF4((std::string **)&v3[1].__r_.__value_.__r.__words[2], v12, v14);
  if ((v4 & 8) != 0)
  {
LABEL_16:
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 8u;
    data = (std::string *)v3[2].__r_.__value_.__l.__data_;
    if (!data)
    {
      std::string::size_type v16 = v3->__r_.__value_.__l.__size_;
      uint64_t v17 = (void *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
      if (v16) {
        uint64_t v17 = (void *)*v17;
      }
      data = (std::string *)sub_15C1B30((uint64_t)v17);
      v3[2].__r_.__value_.__r.__words[0] = (std::string::size_type)data;
    }
    if (*(void *)(a2 + 48)) {
      uint64_t v18 = *(uint64_t (****)())(a2 + 48);
    }
    else {
      uint64_t v18 = &off_253F2A0;
    }
    uint64_t result = sub_11EC100(data, (uint64_t)v18);
  }
LABEL_24:
  uint64_t v19 = *(void *)(a2 + 8);
  if (v19)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v19 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_1717D80()
{
  return 1;
}

void *sub_1717D88@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PoiEvent.Performer");
}

void *sub_1717D98(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_186F33C(a1 + 3);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1717E18(void *a1)
{
  sub_1717D98(a1);

  operator delete();
}

uint64_t sub_1717E50(uint64_t result)
{
  uint64_t v1 = result;
  uint64_t v2 = *(unsigned int *)(result + 32);
  if ((int)v2 >= 1)
  {
    uint64_t v3 = (uint64_t *)(*(void *)(result + 40) + 8);
    do
    {
      uint64_t v4 = *v3++;
      uint64_t result = sub_16B7124(v4);
      --v2;
    }
    while (v2);
    *(_DWORD *)(v1 + 32) = 0;
  }
  char v6 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = v1 + 8;
  *(_DWORD *)(v5 + 40) = 0;
  *(_DWORD *)(v5 + 8) = 0;
  if (v6)
  {
    return sub_188B4AC((uint64_t *)v5);
  }
  return result;
}

char *sub_1717ED4(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v26 = a2;
  if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
    return v26;
  }
  char v6 = (void *)(a1 + 8);
  while (1)
  {
    unint64_t v7 = v26 + 1;
    unsigned int v8 = *v26;
    if (*v26 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        unint64_t v7 = (char *)sub_188C180((uint64_t)v26, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = v26 + 2;
      }
    }
    uint64_t v26 = v7;
    if (v8 >> 3 == 2)
    {
      if (v8 == 18)
      {
        uint64_t v14 = v7 - 1;
        while (1)
        {
          uint64_t v15 = (unsigned __int8 *)(v14 + 1);
          uint64_t v26 = v14 + 1;
          std::string::size_type v16 = *(_DWORD **)(a1 + 40);
          if (v16 && (uint64_t v17 = *(int *)(a1 + 32), (int)v17 < *v16))
          {
            *(_DWORD *)(a1 + 32) = v17 + 1;
            uint64_t v18 = *(void *)&v16[2 * v17 + 2];
          }
          else
          {
            uint64_t v19 = sub_17861A0(*(void *)(a1 + 24));
            uint64_t v18 = sub_188CDC8(a1 + 24, v19);
            uint64_t v15 = (unsigned __int8 *)v26;
          }
          uint64_t v14 = (char *)sub_16BAF48(a3, v18, v15);
          uint64_t v26 = v14;
          if (!v14) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v14 || *v14 != 18) {
            goto LABEL_37;
          }
        }
      }
    }
    else if (v8 >> 3 == 1 && v8 == 8)
    {
      BOOL v20 = v7 + 1;
      unint64_t v21 = *v7;
      if ((*v7 & 0x80000000) == 0) {
        goto LABEL_34;
      }
      int v22 = *v20;
      int v23 = v21 + (v22 << 7);
      unint64_t v21 = (v23 - 128);
      if (v22 < 0)
      {
        uint64_t v26 = (char *)sub_188C138((uint64_t)v7, (v23 - 128));
        if (!v26) {
          return 0;
        }
        unint64_t v21 = v24;
      }
      else
      {
        BOOL v20 = v7 + 2;
LABEL_34:
        uint64_t v26 = v20;
      }
      if (v21 > 0xD)
      {
        if (*v6) {
          uint64_t v25 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
        }
        else {
          uint64_t v25 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        }
        sub_188C020(1, v21, v25);
      }
      else
      {
        *(_DWORD *)(a1 + 16) |= 1u;
        *(_DWORD *)(a1 + 48) = v21;
      }
      goto LABEL_37;
    }
    if (!v8 || (v8 & 7) == 4) {
      break;
    }
    if (*v6)
    {
      std::string::size_type v13 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      std::string::size_type v13 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      unint64_t v7 = v26;
    }
    uint64_t v26 = (char *)sub_1885AC0(v8, v13, v7, a3);
    if (!v26) {
      return 0;
    }
LABEL_37:
    if (sub_11947B8((uint64_t)a3, &v26, a3[11].i32[1])) {
      return v26;
    }
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    return v26;
  }
  return 0;
}

unsigned char *sub_171812C(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  uint64_t v4 = (unsigned char *)__dst;
  if (*(unsigned char *)(a1 + 16))
  {
    if (*a3 <= __dst) {
      uint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v6 = *(int *)(a1 + 48);
    *uint64_t v4 = 8;
    v4[1] = v6;
    if (v6 > 0x7F)
    {
      v4[1] = v6 | 0x80;
      unint64_t v7 = v6 >> 7;
      v4[2] = v6 >> 7;
      v4 += 3;
      if (v6 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v8 = v7 >> 14;
          v7 >>= 7;
          *v4++ = v7;
        }
        while (v8);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  int v9 = *(_DWORD *)(a1 + 32);
  if (v9)
  {
    for (int i = 0; i != v9; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        uint64_t v4 = sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v11 = *(void *)(*(void *)(a1 + 40) + 8 * i + 8);
      *uint64_t v4 = 18;
      unsigned int v12 = *(_DWORD *)(v11 + 20);
      v4[1] = v12;
      if (v12 > 0x7F) {
        std::string::size_type v13 = sub_188A9CC(v12, v4 + 1);
      }
      else {
        std::string::size_type v13 = v4 + 2;
      }
      uint64_t v4 = sub_16B74EC(v11, (unint64_t)v13, a3);
    }
  }
  uint64_t v14 = *(void *)(a1 + 8);
  if ((v14 & 1) == 0) {
    return v4;
  }
  unint64_t v16 = v14 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v16 + 31) < 0)
  {
    uint64_t v17 = *(void **)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
  }
  else
  {
    uint64_t v17 = (void *)(v16 + 8);
    LODWORD(v18) = *(unsigned __int8 *)(v16 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v18)
  {
    uint64_t v19 = (int)v18;
    memcpy(v4, v17, (int)v18);
    v4 += v19;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v17, v18, v4);
}

uint64_t sub_17182F0(uint64_t a1)
{
  uint64_t v2 = *(int *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v3) {
    uint64_t v4 = (uint64_t *)(v3 + 8);
  }
  else {
    uint64_t v4 = 0;
  }
  if (v2)
  {
    uint64_t v5 = 8 * v2;
    do
    {
      uint64_t v6 = *v4++;
      uint64_t v7 = sub_16B76F0(v6);
      v2 += v7 + ((9 * (__clz(v7 | 1) ^ 0x1F) + 73) >> 6);
      v5 -= 8;
    }
    while (v5);
  }
  else
  {
    uint64_t v2 = 0;
  }
  if (*(unsigned char *)(a1 + 16))
  {
    int v8 = *(_DWORD *)(a1 + 48);
    if (v8 < 0) {
      uint64_t v9 = 11;
    }
    else {
      uint64_t v9 = ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v9;
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v12 + 31) < 0) {
      uint64_t v13 = *(void *)(v12 + 16);
    }
    else {
      uint64_t v13 = *(unsigned __int8 *)(v12 + 31);
    }
    v2 += v13;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

std::string *sub_17183D8(std::string *result, uint64_t a2)
{
  uint64_t v3 = result;
  int v4 = *(_DWORD *)(a2 + 32);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 40) + 8);
    uint64_t v6 = (std::string **)sub_188CCE4((uint64_t)&result[1], *(_DWORD *)(a2 + 32));
    uint64_t result = (std::string *)sub_187103C((uint64_t *)&v3[1], v6, v5, v4, *(_DWORD *)v3[1].__r_.__value_.__r.__words[2]- LODWORD(v3[1].__r_.__value_.__r.__words[1]));
    int v7 = LODWORD(v3[1].__r_.__value_.__r.__words[1]) + v4;
    LODWORD(v3[1].__r_.__value_.__r.__words[1]) = v7;
    int v8 = (int *)v3[1].__r_.__value_.__r.__words[2];
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  if (*(unsigned char *)(a2 + 16))
  {
    int v9 = *(_DWORD *)(a2 + 48);
    LODWORD(v3->__r_.__value_.__r.__words[2]) |= 1u;
    LODWORD(v3[2].__r_.__value_.__l.__data_) = v9;
  }
  uint64_t v10 = *(void *)(a2 + 8);
  if (v10)
  {
    return sub_188B4F8((uint64_t *)&v3->__r_.__value_.__l.__size_, (v10 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  return result;
}

uint64_t sub_17184C4()
{
  return 1;
}

void *sub_17184CC@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PoiEvent.EventCategory");
}

uint64_t sub_17184DC(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  *(void *)(a1 + 8) = v5;
  *(void *)a1 = off_24D6118;
  sub_1882BC4(a1 + 16, a2);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = a2;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = a2;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  *(void *)(a1 + 96) = a2;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  *(void *)(a1 + 120) = a2;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 156) = 0u;
  return a1;
}

void sub_1718564(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_1718594(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  int v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6118;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = (uint64_t *)(a1 + 48);
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    int v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187214C(v6, v9, (uint64_t *)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  *(void *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  int v12 = *(_DWORD *)(a2 + 80);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 88);
    uint64_t v14 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v14, (uint64_t *)(v13 + 8), v12, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v15 = *(_DWORD *)(a1 + 80) + v12;
    *(_DWORD *)(a1 + 80) = v15;
    unint64_t v16 = *(int **)(a1 + 88);
    if (*v16 < v15) {
      *unint64_t v16 = v15;
    }
  }
  *(void *)(a1 + 96) = 0;
  *(void *)(a1 + 104) = 0;
  *(void *)(a1 + 112) = 0;
  int v17 = *(_DWORD *)(a2 + 104);
  if (v17)
  {
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_18713F0((uint64_t *)(a1 + 96), v19, (uint64_t *)(v18 + 8), v17, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v20 = *(_DWORD *)(a1 + 104) + v17;
    *(_DWORD *)(a1 + 104) = v20;
    unint64_t v21 = *(int **)(a1 + 112);
    if (*v21 < v20) {
      *unint64_t v21 = v20;
    }
  }
  *(void *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 0;
  *(void *)(a1 + 136) = 0;
  int v22 = *(_DWORD *)(a2 + 128);
  if (v22)
  {
    uint64_t v23 = *(void *)(a2 + 136);
    unint64_t v24 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_18721D8((std::string *)(a1 + 120), v24, (uint64_t *)(v23 + 8), v22, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v25 = *(_DWORD *)(a1 + 128) + v22;
    *(_DWORD *)(a1 + 128) = v25;
    uint64_t v26 = *(int **)(a1 + 136);
    if (*v26 < v25) {
      *uint64_t v26 = v25;
    }
  }
  uint64_t v27 = *(void *)(a2 + 8);
  if (v27) {
    sub_188B4F8(v4, (v27 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  int v28 = *(_DWORD *)(a2 + 40);
  if (v28) {
    operator new();
  }
  *(void *)(a1 + 144) = 0;
  if ((v28 & 2) != 0) {
    operator new();
  }
  *(void *)(a1 + 152) = 0;
  if ((v28 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 160) = 0;
  *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
  return a1;
}

void sub_1718894()
{
}

uint64_t sub_1718970(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_12;
    }
  }
  else if (v4)
  {
    goto LABEL_12;
  }
  if ((uint64_t (***)())a1 != &off_2546CE8)
  {
    uint64_t v5 = *(void *)(a1 + 144);
    if (v5)
    {
      sub_184AFBC(v5);
      operator delete();
    }
    if (*(void *)(a1 + 152))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 160))
    {
      sub_15BC200();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_12:
  sub_18703BC((void *)(a1 + 120));
  sub_186F6BC((void *)(a1 + 96));
  sub_12C45E8((void *)(a1 + 72));
  sub_187033C((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1718A98(uint64_t a1)
{
  sub_1718970(a1);

  operator delete();
}

uint64_t sub_1718AD0(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  if ((int)v3 >= 1)
  {
    int v4 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v5 = *v4++;
      uint64_t result = sub_1717E50(v5);
      --v3;
    }
    while (v3);
    *(_DWORD *)(a1 + 56) = 0;
  }
  uint64_t v6 = *(unsigned int *)(a1 + 80);
  if ((int)v6 >= 1)
  {
    int v7 = (uint64_t *)(*(void *)(a1 + 88) + 8);
    do
    {
      uint64_t v8 = *v7++;
      uint64_t result = (uint64_t)sub_16CD894(v8);
      --v6;
    }
    while (v6);
    *(_DWORD *)(a1 + 80) = 0;
  }
  uint64_t v9 = *(unsigned int *)(a1 + 104);
  if ((int)v9 >= 1)
  {
    int v10 = (uint64_t *)(*(void *)(a1 + 112) + 8);
    do
    {
      uint64_t v11 = *v10++;
      uint64_t result = sub_16E8D08(v11);
      --v9;
    }
    while (v9);
    *(_DWORD *)(a1 + 104) = 0;
  }
  uint64_t v12 = *(unsigned int *)(a1 + 128);
  if ((int)v12 >= 1)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 136) + 8);
    do
    {
      uint64_t v14 = *v13++;
      uint64_t result = sub_17175B0(v14);
      --v12;
    }
    while (v12);
    *(_DWORD *)(a1 + 128) = 0;
  }
  int v15 = *(_DWORD *)(a1 + 40);
  if ((v15 & 7) != 0)
  {
    if (v15)
    {
      uint64_t result = (uint64_t)sub_16CD894(*(void *)(a1 + 144));
      if ((v15 & 2) == 0)
      {
LABEL_20:
        if ((v15 & 4) == 0) {
          goto LABEL_22;
        }
        goto LABEL_21;
      }
    }
    else if ((v15 & 2) == 0)
    {
      goto LABEL_20;
    }
    uint64_t result = sub_15B2C80(*(void *)(a1 + 152));
    if ((v15 & 4) != 0) {
LABEL_21:
    }
      uint64_t result = sub_15BC23C(*(void *)(a1 + 160));
  }
LABEL_22:
  char v17 = *(unsigned char *)(a1 + 8);
  uint64_t v16 = a1 + 8;
  *(_DWORD *)(v16 + 160) = 0;
  *(_DWORD *)(v16 + 32) = 0;
  if (v17)
  {
    return sub_188B4AC((uint64_t *)v16);
  }
  return result;
}

char *sub_1718C10(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v50 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1])) {
    goto LABEL_2;
  }
  int v7 = (void *)(a1 + 8);
  while (2)
  {
    uint64_t v8 = v50 + 1;
    unsigned int v9 = *v50;
    if (*v50 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180((uint64_t)v50, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = v50 + 2;
      }
    }
    uint64_t v50 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 144);
        if (!v12)
        {
          uint64_t v13 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v13 = (void *)*v13;
          }
          uint64_t v12 = sub_185089C((uint64_t)v13);
          *(void *)(a1 + 144) = v12;
          uint64_t v8 = v50;
        }
        uint64_t v14 = sub_12688D0(a3, v12, (unsigned __int8 *)v8);
        goto LABEL_81;
      case 2u:
        if (v9 != 18) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        int v15 = *(void **)(a1 + 152);
        if (!v15)
        {
          uint64_t v16 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            uint64_t v16 = (void *)*v16;
          }
          int v15 = sub_15C1B30((uint64_t)v16);
          *(void *)(a1 + 152) = v15;
          uint64_t v8 = v50;
        }
        uint64_t v14 = (char *)sub_125CF74(a3, (uint64_t)v15, (unsigned __int8 *)v8);
        goto LABEL_81;
      case 3u:
        if (v9 != 26) {
          goto LABEL_72;
        }
        char v17 = v8 - 1;
        while (1)
        {
          uint64_t v18 = (unsigned __int8 *)(v17 + 1);
          uint64_t v50 = v17 + 1;
          uint64_t v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(void *)&v19[2 * v20 + 2];
          }
          else
          {
            uint64_t v22 = sub_178B054(*(void *)(a1 + 48));
            uint64_t v21 = sub_188CDC8(a1 + 48, v22);
            uint64_t v18 = (unsigned __int8 *)v50;
          }
          char v17 = sub_1719150(a3, v21, v18);
          uint64_t v50 = v17;
          if (!v17) {
            goto LABEL_89;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 26) {
            goto LABEL_82;
          }
        }
      case 4u:
        if (v9 != 34) {
          goto LABEL_72;
        }
        uint64_t v23 = v8 - 1;
        while (1)
        {
          unint64_t v24 = (unsigned __int8 *)(v23 + 1);
          uint64_t v50 = v23 + 1;
          int v25 = *(_DWORD **)(a1 + 88);
          if (v25 && (uint64_t v26 = *(int *)(a1 + 80), (int)v26 < *v25))
          {
            *(_DWORD *)(a1 + 80) = v26 + 1;
            uint64_t v27 = *(void *)&v25[2 * v26 + 2];
          }
          else
          {
            uint64_t v28 = sub_185089C(*(void *)(a1 + 72));
            uint64_t v27 = sub_188CDC8(a1 + 72, v28);
            unint64_t v24 = (unsigned __int8 *)v50;
          }
          uint64_t v23 = sub_12688D0(a3, v27, v24);
          uint64_t v50 = v23;
          if (!v23) {
            goto LABEL_89;
          }
          if (*(void *)a3 <= (unint64_t)v23 || *v23 != 34) {
            goto LABEL_82;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_72;
        }
        unint64_t v29 = v8 - 1;
        while (1)
        {
          unint64_t v30 = (unsigned __int8 *)(v29 + 1);
          uint64_t v50 = v29 + 1;
          int v31 = *(_DWORD **)(a1 + 112);
          if (v31 && (uint64_t v32 = *(int *)(a1 + 104), (int)v32 < *v31))
          {
            *(_DWORD *)(a1 + 104) = v32 + 1;
            uint64_t v33 = *(void *)&v31[2 * v32 + 2];
          }
          else
          {
            uint64_t v34 = sub_17884D8(*(void *)(a1 + 96));
            uint64_t v33 = sub_188CDC8(a1 + 96, v34);
            unint64_t v30 = (unsigned __int8 *)v50;
          }
          unint64_t v29 = sub_16CEC40(a3, v33, v30);
          uint64_t v50 = v29;
          if (!v29) {
            goto LABEL_89;
          }
          if (*(void *)a3 <= (unint64_t)v29 || *v29 != 42) {
            goto LABEL_82;
          }
        }
      case 6u:
        if (v9 != 50) {
          goto LABEL_72;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        BOOL v35 = *(void **)(a1 + 160);
        if (!v35)
        {
          int v36 = (void *)(*v7 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v7) {
            int v36 = (void *)*v36;
          }
          BOOL v35 = sub_15C221C((uint64_t)v36);
          *(void *)(a1 + 160) = v35;
          uint64_t v8 = v50;
        }
        uint64_t v14 = (char *)sub_123B1B4(a3, (uint64_t)v35, (unsigned __int8 *)v8);
        goto LABEL_81;
      case 7u:
        if (v9 != 58) {
          goto LABEL_72;
        }
        unint64_t v37 = v8 - 1;
        while (1)
        {
          uint64_t v38 = (unsigned __int8 *)(v37 + 1);
          uint64_t v50 = v37 + 1;
          uint64_t v39 = *(_DWORD **)(a1 + 136);
          if (v39 && (uint64_t v40 = *(int *)(a1 + 128), (int)v40 < *v39))
          {
            *(_DWORD *)(a1 + 128) = v40 + 1;
            uint64_t v41 = *(void *)&v39[2 * v40 + 2];
          }
          else
          {
            uint64_t v42 = sub_178AFCC(*(void *)(a1 + 120));
            uint64_t v41 = sub_188CDC8(a1 + 120, (uint64_t)v42);
            uint64_t v38 = (unsigned __int8 *)v50;
          }
          unint64_t v37 = (char *)sub_17191E0(a3, v41, v38);
          uint64_t v50 = v37;
          if (!v37) {
            goto LABEL_89;
          }
          if (*(void *)a3 <= (unint64_t)v37 || *v37 != 58) {
            goto LABEL_82;
          }
        }
      case 8u:
        if (v9 != 64) {
          goto LABEL_72;
        }
        v5 |= 8u;
        BOOL v44 = v8 + 1;
        LODWORD(v43) = *v8;
        if ((v43 & 0x80) == 0) {
          goto LABEL_71;
        }
        int v45 = *v44;
        uint64_t v43 = v43 + (v45 << 7) - 128;
        if (v45 < 0)
        {
          uint64_t v48 = (char *)sub_188C138((uint64_t)v8, v43);
          uint64_t v50 = v48;
          *(_DWORD *)(a1 + 168) = v49;
          if (!v48) {
            goto LABEL_89;
          }
        }
        else
        {
          BOOL v44 = v8 + 2;
LABEL_71:
          uint64_t v50 = v44;
          *(_DWORD *)(a1 + 168) = v43;
        }
        goto LABEL_82;
      default:
LABEL_72:
        if (v9) {
          BOOL v46 = (v9 & 7) == 4;
        }
        else {
          BOOL v46 = 1;
        }
        if (!v46)
        {
          if (v9 - 1600 > 0xF9F)
          {
            if (*v7)
            {
              uint64_t v47 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v47 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = v50;
            }
            uint64_t v14 = (char *)sub_1885AC0(v9, v47, v8, a3);
          }
          else
          {
            uint64_t v14 = (char *)sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2546CE8, (uint64_t *)(a1 + 8), a3);
          }
LABEL_81:
          uint64_t v50 = v14;
          if (!v14) {
            goto LABEL_89;
          }
LABEL_82:
          if (sub_11947B8((uint64_t)a3, &v50, a3[11].i32[1])) {
            goto LABEL_2;
          }
          continue;
        }
        if (v8) {
          a3[10].i32[0] = v9 - 1;
        }
        else {
LABEL_89:
        }
          uint64_t v50 = 0;
LABEL_2:
        *(_DWORD *)(a1 + 40) |= v5;
        return v50;
    }
  }
}

char *sub_1719150(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = (char *)sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_1717ED4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

uint64_t sub_17191E0(int32x2_t *a1, uint64_t a2, unsigned __int8 *a3)
{
  int v7 = 0;
  uint64_t result = sub_188BEE0((uint64_t)a1, a3, &v7);
  if (result) {
    uint64_t result = sub_17176B4(a2, result, a1);
  }
  ++a1[11].i32[0];
  if (a1[10].i32[0]) {
    return 0;
  }
  int v6 = a1[3].i32[1] + v7;
  a1[3].i32[1] = v6;
  *a1 = (int32x2_t)(*(void *)&a1[1] + (v6 & (v6 >> 31)));
  return result;
}

char *sub_1719270(uint64_t a1, char *a2, unint64_t *a3)
{
  int v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    if (*a3 <= (unint64_t)a2) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    uint64_t v7 = *(void *)(a1 + 144);
    *int v4 = 10;
    unsigned int v8 = *(_DWORD *)(v7 + 44);
    v4[1] = v8;
    if (v8 > 0x7F) {
      unsigned int v9 = sub_188A9CC(v8, v4 + 1);
    }
    else {
      unsigned int v9 = v4 + 2;
    }
    int v4 = sub_184B3AC(v7, v9, a3);
  }
  if ((v6 & 2) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 152);
    *int v4 = 18;
    unsigned int v11 = *(_DWORD *)(v10 + 20);
    v4[1] = v11;
    if (v11 > 0x7F) {
      uint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      uint64_t v12 = v4 + 2;
    }
    int v4 = sub_15B2EA4(v10, v12, a3);
  }
  int v13 = *(_DWORD *)(a1 + 56);
  if (v13)
  {
    for (int i = 0; i != v13; ++i)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8 * i + 8);
      *int v4 = 26;
      unsigned int v16 = *(_DWORD *)(v15 + 20);
      v4[1] = v16;
      if (v16 > 0x7F) {
        char v17 = sub_188A9CC(v16, v4 + 1);
      }
      else {
        char v17 = v4 + 2;
      }
      int v4 = sub_171812C(v15, (unint64_t)v17, a3);
    }
  }
  int v18 = *(_DWORD *)(a1 + 80);
  if (v18)
  {
    for (int j = 0; j != v18; ++j)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v20 = *(void *)(*(void *)(a1 + 88) + 8 * j + 8);
      *int v4 = 34;
      unsigned int v21 = *(_DWORD *)(v20 + 44);
      v4[1] = v21;
      if (v21 > 0x7F) {
        uint64_t v22 = sub_188A9CC(v21, v4 + 1);
      }
      else {
        uint64_t v22 = v4 + 2;
      }
      int v4 = sub_184B3AC(v20, v22, a3);
    }
  }
  int v23 = *(_DWORD *)(a1 + 104);
  if (v23)
  {
    for (int k = 0; k != v23; ++k)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v25 = *(void *)(*(void *)(a1 + 112) + 8 * k + 8);
      *int v4 = 42;
      unsigned int v26 = *(_DWORD *)(v25 + 20);
      v4[1] = v26;
      if (v26 > 0x7F) {
        uint64_t v27 = sub_188A9CC(v26, v4 + 1);
      }
      else {
        uint64_t v27 = v4 + 2;
      }
      int v4 = sub_16E90B0(v25, (unint64_t)v27, a3);
    }
  }
  if ((v6 & 4) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v28 = *(void *)(a1 + 160);
    *int v4 = 50;
    unsigned int v29 = *(_DWORD *)(v28 + 20);
    v4[1] = v29;
    if (v29 > 0x7F) {
      unint64_t v30 = sub_188A9CC(v29, v4 + 1);
    }
    else {
      unint64_t v30 = v4 + 2;
    }
    int v4 = sub_15BC3D8(v28, v30, a3);
  }
  int v31 = *(_DWORD *)(a1 + 128);
  if (v31)
  {
    for (int m = 0; m != v31; ++m)
    {
      if (*a3 <= (unint64_t)v4) {
        int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
      }
      uint64_t v33 = *(void *)(*(void *)(a1 + 136) + 8 * m + 8);
      *int v4 = 58;
      unsigned int v34 = *(_DWORD *)(v33 + 20);
      v4[1] = v34;
      if (v34 > 0x7F) {
        BOOL v35 = sub_188A9CC(v34, v4 + 1);
      }
      else {
        BOOL v35 = v4 + 2;
      }
      int v4 = sub_171791C(v33, (unint64_t)v35, a3);
    }
  }
  if ((v6 & 8) != 0)
  {
    if (*a3 <= (unint64_t)v4) {
      int v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    unint64_t v36 = *(int *)(a1 + 168);
    *int v4 = 64;
    v4[1] = v36;
    if (v36 > 0x7F)
    {
      v4[1] = v36 | 0x80;
      unint64_t v37 = v36 >> 7;
      v4[2] = v36 >> 7;
      v4 += 3;
      if (v36 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v38 = v37 >> 14;
          v37 >>= 7;
          *v4++ = v37;
        }
        while (v38);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (*(_WORD *)(a1 + 26)) {
    int v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v39 = *(void *)(a1 + 8);
  if ((v39 & 1) == 0) {
    return v4;
  }
  unint64_t v41 = v39 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v41 + 31) < 0)
  {
    uint64_t v42 = *(void **)(v41 + 8);
    uint64_t v43 = *(void *)(v41 + 16);
  }
  else
  {
    uint64_t v42 = (void *)(v41 + 8);
    LODWORD(v43) = *(unsigned __int8 *)(v41 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v43)
  {
    uint64_t v44 = (int)v43;
    memcpy(v4, v42, (int)v43);
    v4 += v44;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v42, v43, v4);
}

uint64_t sub_1719710(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(int *)(a1 + 56);
  uint64_t v4 = v2 + v3;
  uint64_t v5 = *(void *)(a1 + 64);
  if (v5) {
    int v6 = (uint64_t *)(v5 + 8);
  }
  else {
    int v6 = 0;
  }
  if (v3)
  {
    uint64_t v7 = 8 * v3;
    do
    {
      uint64_t v8 = *v6++;
      uint64_t v9 = sub_17182F0(v8);
      v4 += v9 + ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6);
      v7 -= 8;
    }
    while (v7);
  }
  uint64_t v10 = *(int *)(a1 + 80);
  uint64_t v11 = v4 + v10;
  uint64_t v12 = *(void *)(a1 + 88);
  if (v12) {
    int v13 = (uint64_t *)(v12 + 8);
  }
  else {
    int v13 = 0;
  }
  if (v10)
  {
    uint64_t v14 = 8 * v10;
    do
    {
      uint64_t v15 = *v13++;
      uint64_t v16 = sub_184B568(v15);
      v11 += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6);
      v14 -= 8;
    }
    while (v14);
  }
  uint64_t v17 = *(int *)(a1 + 104);
  uint64_t v18 = v11 + v17;
  uint64_t v19 = *(void *)(a1 + 112);
  if (v19) {
    uint64_t v20 = (uint64_t *)(v19 + 8);
  }
  else {
    uint64_t v20 = 0;
  }
  if (v17)
  {
    uint64_t v21 = 8 * v17;
    do
    {
      uint64_t v22 = *v20++;
      uint64_t v23 = sub_16E92F0(v22);
      v18 += v23 + ((9 * (__clz(v23 | 1) ^ 0x1F) + 73) >> 6);
      v21 -= 8;
    }
    while (v21);
  }
  uint64_t v24 = *(int *)(a1 + 128);
  uint64_t v25 = v18 + v24;
  uint64_t v26 = *(void *)(a1 + 136);
  if (v26) {
    uint64_t v27 = (uint64_t *)(v26 + 8);
  }
  else {
    uint64_t v27 = 0;
  }
  if (v24)
  {
    uint64_t v28 = 8 * v24;
    do
    {
      uint64_t v29 = *v27++;
      uint64_t v30 = sub_1717AA8(v29);
      v25 += v30 + ((9 * (__clz(v30 | 1) ^ 0x1F) + 73) >> 6);
      v28 -= 8;
    }
    while (v28);
  }
  int v31 = *(_DWORD *)(a1 + 40);
  if ((v31 & 0xF) != 0)
  {
    if (v31)
    {
      uint64_t v37 = sub_184B568(*(void *)(a1 + 144));
      v25 += v37 + ((9 * (__clz(v37 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if ((v31 & 2) == 0)
      {
LABEL_28:
        if ((v31 & 4) == 0) {
          goto LABEL_29;
        }
        goto LABEL_38;
      }
    }
    else if ((v31 & 2) == 0)
    {
      goto LABEL_28;
    }
    uint64_t v38 = sub_15B2F90(*(void *)(a1 + 152));
    v25 += v38 + ((9 * (__clz(v38 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v31 & 4) == 0)
    {
LABEL_29:
      if ((v31 & 8) == 0) {
        goto LABEL_34;
      }
LABEL_30:
      int v32 = *(_DWORD *)(a1 + 168);
      uint64_t v33 = ((9 * (__clz(v32 | 1) ^ 0x1F) + 73) >> 6) + 1;
      if (v32 >= 0) {
        uint64_t v34 = v33;
      }
      else {
        uint64_t v34 = 11;
      }
      v25 += v34;
      goto LABEL_34;
    }
LABEL_38:
    uint64_t v39 = sub_15BC4A4(*(void *)(a1 + 160));
    v25 += v39 + ((9 * (__clz(v39 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v31 & 8) == 0) {
      goto LABEL_34;
    }
    goto LABEL_30;
  }
LABEL_34:
  uint64_t v35 = *(void *)(a1 + 8);
  if (v35)
  {
    unint64_t v40 = v35 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v40 + 31) < 0) {
      uint64_t v41 = *(void *)(v40 + 16);
    }
    else {
      uint64_t v41 = *(unsigned __int8 *)(v40 + 31);
    }
    v25 += v41;
  }
  *(_DWORD *)(a1 + 44) = v25;
  return v25;
}

void sub_1719994(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 56);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a2 + 64) + 8);
    int v6 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_187214C((uint64_t *)(a1 + 48), v6, v5, v4, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v7 = *(_DWORD *)(a1 + 56) + v4;
    *(_DWORD *)(a1 + 56) = v7;
    uint64_t v8 = *(int **)(a1 + 64);
    if (*v8 < v7) {
      int *v8 = v7;
    }
  }
  int v9 = *(_DWORD *)(a2 + 80);
  if (v9)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a2 + 88) + 8);
    uint64_t v11 = (uint64_t *)sub_188CCE4(a1 + 72, *(_DWORD *)(a2 + 80));
    sub_12C4B74((uint64_t *)(a1 + 72), v11, v10, v9, **(_DWORD **)(a1 + 88) - *(_DWORD *)(a1 + 80));
    int v12 = *(_DWORD *)(a1 + 80) + v9;
    *(_DWORD *)(a1 + 80) = v12;
    int v13 = *(int **)(a1 + 88);
    if (*v13 < v12) {
      int *v13 = v12;
    }
  }
  int v14 = *(_DWORD *)(a2 + 104);
  if (v14)
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a2 + 112) + 8);
    uint64_t v16 = (std::string **)sub_188CCE4(a1 + 96, *(_DWORD *)(a2 + 104));
    sub_18713F0((uint64_t *)(a1 + 96), v16, v15, v14, **(_DWORD **)(a1 + 112) - *(_DWORD *)(a1 + 104));
    int v17 = *(_DWORD *)(a1 + 104) + v14;
    *(_DWORD *)(a1 + 104) = v17;
    uint64_t v18 = *(int **)(a1 + 112);
    if (*v18 < v17) {
      int *v18 = v17;
    }
  }
  int v19 = *(_DWORD *)(a2 + 128);
  if (v19)
  {
    uint64_t v20 = (uint64_t *)(*(void *)(a2 + 136) + 8);
    uint64_t v21 = (std::string **)sub_188CCE4(a1 + 120, *(_DWORD *)(a2 + 128));
    sub_18721D8((std::string *)(a1 + 120), v21, v20, v19, **(_DWORD **)(a1 + 136) - *(_DWORD *)(a1 + 128));
    int v22 = *(_DWORD *)(a1 + 128) + v19;
    *(_DWORD *)(a1 + 128) = v22;
    uint64_t v23 = *(int **)(a1 + 136);
    if (*v23 < v22) {
      int *v23 = v22;
    }
  }
  int v24 = *(_DWORD *)(a2 + 40);
  if ((v24 & 0xF) != 0)
  {
    if (v24)
    {
      *(_DWORD *)(a1 + 40) |= 1u;
      uint64_t v26 = *(void *)(a1 + 144);
      if (!v26)
      {
        uint64_t v27 = *(void *)(a1 + 8);
        uint64_t v28 = (void *)(v27 & 0xFFFFFFFFFFFFFFFCLL);
        if (v27) {
          uint64_t v28 = (void *)*v28;
        }
        uint64_t v26 = sub_185089C((uint64_t)v28);
        *(void *)(a1 + 144) = v26;
      }
      if (*(void *)(a2 + 144)) {
        uint64_t v29 = *(uint64_t (****)())(a2 + 144);
      }
      else {
        uint64_t v29 = &off_254D2B0;
      }
      sub_16CE3CC(v26, (uint64_t)v29);
      if ((v24 & 2) == 0)
      {
LABEL_16:
        if ((v24 & 4) == 0) {
          goto LABEL_17;
        }
        goto LABEL_40;
      }
    }
    else if ((v24 & 2) == 0)
    {
      goto LABEL_16;
    }
    *(_DWORD *)(a1 + 40) |= 2u;
    uint64_t v30 = *(std::string **)(a1 + 152);
    if (!v30)
    {
      uint64_t v31 = *(void *)(a1 + 8);
      int v32 = (void *)(v31 & 0xFFFFFFFFFFFFFFFCLL);
      if (v31) {
        int v32 = (void *)*v32;
      }
      uint64_t v30 = (std::string *)sub_15C1B30((uint64_t)v32);
      *(void *)(a1 + 152) = v30;
    }
    if (*(void *)(a2 + 152)) {
      uint64_t v33 = *(uint64_t (****)())(a2 + 152);
    }
    else {
      uint64_t v33 = &off_253F2A0;
    }
    sub_11EC100(v30, (uint64_t)v33);
    if ((v24 & 4) == 0)
    {
LABEL_17:
      if ((v24 & 8) == 0)
      {
LABEL_19:
        *(_DWORD *)(a1 + 40) |= v24;
        goto LABEL_20;
      }
LABEL_18:
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      goto LABEL_19;
    }
LABEL_40:
    *(_DWORD *)(a1 + 40) |= 4u;
    uint64_t v34 = *(std::string **)(a1 + 160);
    if (!v34)
    {
      uint64_t v35 = *(void *)(a1 + 8);
      unint64_t v36 = (void *)(v35 & 0xFFFFFFFFFFFFFFFCLL);
      if (v35) {
        unint64_t v36 = (void *)*v36;
      }
      uint64_t v34 = (std::string *)sub_15C221C((uint64_t)v36);
      *(void *)(a1 + 160) = v34;
    }
    if (*(void *)(a2 + 160)) {
      uint64_t v37 = *(uint64_t (****)())(a2 + 160);
    }
    else {
      uint64_t v37 = &off_253F5C0;
    }
    sub_12329D0(v34, (uint64_t)v37);
    if ((v24 & 8) == 0) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
LABEL_20:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v25 = *(void *)(a2 + 8);
  if (v25)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v25 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}

uint64_t sub_1719CB4(uint64_t a1)
{
  uint64_t result = sub_18856CC(a1 + 16);
  if (result)
  {
    uint64_t v3 = *(unsigned int *)(a1 + 80);
    while ((int)v3 >= 1)
    {
      uint64_t v4 = v3 - 1;
      char v5 = sub_16CE508(*(void *)(*(void *)(a1 + 88) + 8 * v3));
      uint64_t v3 = v4;
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    int v6 = *(_DWORD *)(a1 + 40);
    if (v6)
    {
      uint64_t result = sub_16CE508(*(void *)(a1 + 144));
      if (!result) {
        return result;
      }
      int v6 = *(_DWORD *)(a1 + 40);
    }
    if ((v6 & 4) == 0) {
      return 1;
    }
    uint64_t result = sub_15BC528(*(void *)(a1 + 160));
    if (result) {
      return 1;
    }
  }
  return result;
}

void *sub_1719D38@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PoiEvent");
}

uint64_t sub_1719D48(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)a1 = off_24D6198;
  sub_1882BC4(a1 + 16, a2);
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 40) = 0;
  return a1;
}

void sub_1719DB0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

void *sub_1719DE0(void *a1)
{
  uint64_t v3 = a1 + 1;
  uint64_t v2 = a1[1];
  if ((v2 & 1) != 0 && !*(void *)(v2 & 0xFFFFFFFFFFFFFFFCLL)) {
    sub_10E4F74(a1 + 1);
  }
  sub_1882CC0(a1 + 2);
  *a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_1719E5C(void *a1)
{
  sub_1719DE0(a1);

  operator delete();
}

unsigned char *sub_1719E94(uint64_t a1)
{
  uint64_t result = sub_18843A4((unsigned char *)(a1 + 16));
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  *(unsigned char *)(v3 + 40) = 0;
  *(_DWORD *)(v3 + 32) = 0;
  if (v4)
  {
    return (unsigned char *)sub_188B4AC((uint64_t *)v3);
  }
  return result;
}

char *sub_1719EEC(uint64_t a1, char *a2, int32x2_t *a3)
{
  uint64_t v20 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
    goto LABEL_29;
  }
  int v6 = (void *)(a1 + 8);
  while (1)
  {
    int v7 = v20 + 1;
    unsigned int v8 = *v20;
    if (*v20 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if (*v7 < 0)
      {
        int v7 = (char *)sub_188C180((uint64_t)v20, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        int v7 = v20 + 2;
      }
    }
    uint64_t v20 = v7;
    if (v8 != 8) {
      break;
    }
    int v13 = v7 + 1;
    uint64_t v14 = *v7;
    if ((*v7 & 0x80000000) == 0) {
      goto LABEL_17;
    }
    int v15 = *v13;
    uint64_t v14 = v14 + (v15 << 7) - 128;
    if ((v15 & 0x80000000) == 0)
    {
      int v13 = v7 + 2;
LABEL_17:
      uint64_t v20 = v13;
      *(unsigned char *)(a1 + 48) = v14 != 0;
      int v5 = 1;
      goto LABEL_22;
    }
    int v17 = (char *)sub_188C138((uint64_t)v7, v14);
    uint64_t v20 = v17;
    *(unsigned char *)(a1 + 48) = v18 != 0;
    int v5 = 1;
    if (!v17) {
      goto LABEL_30;
    }
LABEL_22:
    if (sub_11947B8((uint64_t)a3, &v20, a3[11].i32[1])) {
      goto LABEL_29;
    }
  }
  if (v8) {
    BOOL v11 = (v8 & 7) == 4;
  }
  else {
    BOOL v11 = 1;
  }
  if (!v11)
  {
    if ((v8 - 8000) >> 6 > 0x7C)
    {
      if (*v6)
      {
        uint64_t v16 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
      }
      else
      {
        uint64_t v16 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
        int v7 = v20;
      }
      int v12 = sub_1885AC0(v8, v16, v7, a3);
    }
    else
    {
      int v12 = sub_18859DC((uint64_t **)(a1 + 16), v8, v7, (uint64_t)&off_2546D98, (uint64_t *)(a1 + 8), a3);
    }
    uint64_t v20 = (char *)v12;
    if (!v12) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  if (v7)
  {
    a3[10].i32[0] = v8 - 1;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v20 = 0;
LABEL_29:
  *(_DWORD *)(a1 + 40) |= v5;
  return v20;
}

char *sub_171A0C0(uint64_t a1, char *a2, _DWORD *a3)
{
  char v4 = a2;
  if (*(unsigned char *)(a1 + 40))
  {
    if (*(void *)a3 <= (unint64_t)a2) {
      char v4 = (char *)sub_188A3FC((uint64_t)a3, (int)a2);
    }
    char v6 = *(unsigned char *)(a1 + 48);
    *char v4 = 8;
    v4[1] = v6;
    v4 += 2;
  }
  if (*(_WORD *)(a1 + 26)) {
    char v4 = sub_1886844(a1 + 16, 1000, 2000, v4, a3);
  }
  uint64_t v7 = *(void *)(a1 + 8);
  if ((v7 & 1) == 0) {
    return v4;
  }
  unint64_t v9 = v7 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v9 + 31) < 0)
  {
    unsigned int v10 = *(void **)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
  }
  else
  {
    unsigned int v10 = (void *)(v9 + 8);
    LODWORD(v11) = *(unsigned __int8 *)(v9 + 31);
  }
  if (*(void *)a3 - (void)v4 >= (int)v11)
  {
    uint64_t v12 = (int)v11;
    memcpy(v4, v10, (int)v11);
    v4 += v12;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v10, v11, v4);
}

uint64_t sub_171A1C8(uint64_t a1)
{
  uint64_t result = sub_1889280(a1 + 16);
  if (*(unsigned char *)(a1 + 40)) {
    result += 2;
  }
  uint64_t v3 = *(void *)(a1 + 8);
  if (v3)
  {
    unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v4 + 31) < 0) {
      uint64_t v5 = *(void *)(v4 + 16);
    }
    else {
      uint64_t v5 = *(unsigned __int8 *)(v4 + 31);
    }
    result += v5;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

uint64_t sub_171A230(uint64_t a1)
{
  return sub_18856CC(a1 + 16);
}

void *sub_171A238@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.PoiEventFilter");
}

void *sub_171A248(void *a1, uint64_t a2, int a3)
{
  uint64_t v5 = a2 | 2;
  if (!a3) {
    uint64_t v5 = a2;
  }
  a1[1] = v5;
  *a1 = off_24D6218;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = a2;
  a1[7] = 0;
  a1[8] = 0;
  a1[9] = &qword_2550250;
  a1[10] = &qword_2550250;
  a1[11] = &qword_2550250;
  a1[12] = &qword_2550250;
  return a1;
}

void sub_171A2C8(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_171A2F8(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (uint64_t *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6218;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  uint64_t v6 = a1 + 48;
  *(_DWORD *)(a1 + 68) = 0;
  *(void *)(a1 + 52) = 0;
  *(void *)(a1 + 60) = 0;
  *(void *)(a1 + 44) = 0;
  int v7 = *(_DWORD *)(a2 + 56);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    unint64_t v9 = (std::string **)sub_188CCE4(a1 + 48, *(_DWORD *)(a2 + 56));
    sub_188FB98(v6, v9, (const std::string **)(v8 + 8), v7, **(_DWORD **)(a1 + 64) - *(_DWORD *)(a1 + 56));
    int v10 = *(_DWORD *)(a1 + 56) + v7;
    *(_DWORD *)(a1 + 56) = v10;
    uint64_t v11 = *(int **)(a1 + 64);
    if (*v11 < v10) {
      *uint64_t v11 = v10;
    }
  }
  uint64_t v12 = *(void *)(a2 + 8);
  if (v12) {
    sub_188B4F8(v4, (v12 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 72) = &qword_2550250;
  int v13 = *(_DWORD *)(a2 + 40);
  if (v13)
  {
    uint64_t v14 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v14 = (uint64_t *)*v14;
    }
    sub_1881DF4((std::string **)(a1 + 72), (long long *)(*(void *)(a2 + 72) & 0xFFFFFFFFFFFFFFFELL), v14);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 80) = &qword_2550250;
  if ((v13 & 2) != 0)
  {
    int v15 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v15 = (uint64_t *)*v15;
    }
    sub_1881DF4((std::string **)(a1 + 80), (long long *)(*(void *)(a2 + 80) & 0xFFFFFFFFFFFFFFFELL), v15);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 88) = &qword_2550250;
  if ((v13 & 4) != 0)
  {
    uint64_t v16 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v16 = (uint64_t *)*v16;
    }
    sub_1881DF4((std::string **)(a1 + 88), (long long *)(*(void *)(a2 + 88) & 0xFFFFFFFFFFFFFFFELL), v16);
    int v13 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 96) = &qword_2550250;
  if ((v13 & 8) != 0)
  {
    int v17 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v17 = (uint64_t *)*v17;
    }
    sub_1881DF4((std::string **)(a1 + 96), (long long *)(*(void *)(a2 + 96) & 0xFFFFFFFFFFFFFFFELL), v17);
  }
  return a1;
}

void sub_171A4D0(_Unwind_Exception *a1)
{
  sub_1882CC0(v3);
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_171A51C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_13;
    }
  }
  else if (v4)
  {
    goto LABEL_13;
  }
  uint64_t v5 = (void ***)(a1 + 72);
  if (*(uint64_t **)(a1 + 72) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 80) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 80));
  }
  if (*(uint64_t **)(a1 + 88) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 88));
  }
  if (*(uint64_t **)(a1 + 96) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 96));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_13:
  sub_1889DE8((void *)(a1 + 48));
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_171A60C(uint64_t a1)
{
  sub_171A51C(a1);

  operator delete();
}

uint64_t sub_171A644(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)uint64_t v29 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
    return *(void *)v29;
  }
  uint64_t v6 = (void *)(a1 + 8);
  int v7 = (uint64_t **)(a1 + 48);
  while (2)
  {
    uint64_t v8 = (char *)(*(void *)v29 + 1);
    unsigned int v9 = **(unsigned char **)v29;
    if ((char)**(unsigned char **)v29 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v29, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v29 + 2);
      }
    }
    *(void *)uint64_t v29 = v8;
    switch(v9 >> 3)
    {
      case 1u:
        if (v9 != 10) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v12 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v12 & 0xFFFFFFFFFFFFFFFCLL);
        if (v12) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 72);
        goto LABEL_37;
      case 2u:
        if (v9 != 18) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v15 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v15 & 0xFFFFFFFFFFFFFFFCLL);
        if (v15) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 80);
        goto LABEL_37;
      case 3u:
        if (v9 != 26) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v16 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v16 & 0xFFFFFFFFFFFFFFFCLL);
        if (v16) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 88);
        goto LABEL_37;
      case 4u:
        if (v9 != 34) {
          goto LABEL_41;
        }
        int v17 = v8 - 1;
        while (1)
        {
          uint64_t v18 = (char *)(v17 + 1);
          *(void *)uint64_t v29 = v17 + 1;
          int v19 = *(_DWORD **)(a1 + 64);
          if (v19 && (uint64_t v20 = *(int *)(a1 + 56), (int)v20 < *v19))
          {
            *(_DWORD *)(a1 + 56) = v20 + 1;
            uint64_t v21 = *(std::string **)&v19[2 * v20 + 2];
          }
          else
          {
            if (!*v7) {
              operator new();
            }
            void *v23 = v22;
            v23[1] = sub_3A6EDC;
            *int v22 = 0;
            v22[1] = 0;
            int v22[2] = 0;
            uint64_t v21 = (std::string *)sub_188CDC8(a1 + 48, (uint64_t)v22);
            uint64_t v18 = *(char **)v29;
          }
          int v17 = sub_188C244(v21, v18, (uint64_t)a3);
          *(void *)uint64_t v29 = v17;
          if (!v17) {
            return 0;
          }
          if (*(void *)a3 <= (unint64_t)v17 || *v17 != 34) {
            goto LABEL_39;
          }
        }
      case 5u:
        if (v9 != 42) {
          goto LABEL_41;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v24 = *(void *)(a1 + 8);
        int v13 = (uint64_t *)(v24 & 0xFFFFFFFFFFFFFFFCLL);
        if (v24) {
          int v13 = (uint64_t *)*v13;
        }
        uint64_t v14 = (void *)(a1 + 96);
LABEL_37:
        uint64_t v25 = (std::string *)sub_1880F84(v14, v13);
        uint64_t v26 = (void *)sub_188C244(v25, *(char **)v29, (uint64_t)a3);
        goto LABEL_38;
      default:
LABEL_41:
        if (v9) {
          BOOL v27 = (v9 & 7) == 4;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          if ((v9 - 1600) >> 6 > 0x4A)
          {
            if (*v6)
            {
              uint64_t v28 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v28 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              uint64_t v8 = *(char **)v29;
            }
            uint64_t v26 = sub_1885AC0(v9, v28, v8, a3);
          }
          else
          {
            uint64_t v26 = sub_18859DC((uint64_t **)(a1 + 16), v9, v8, (uint64_t)&off_2546DD0, (uint64_t *)(a1 + 8), a3);
          }
LABEL_38:
          *(void *)uint64_t v29 = v26;
          if (!v26) {
            return 0;
          }
LABEL_39:
          if (sub_11947B8((uint64_t)a3, (char **)v29, a3[11].i32[1])) {
            return *(void *)v29;
          }
          continue;
        }
        if (!v8) {
          return 0;
        }
        a3[10].i32[0] = v9 - 1;
        return *(void *)v29;
    }
  }
}

char *sub_171A9B4(uint64_t a1, char *a2, void *a3)
{
  unint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    unint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_4;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) != 0) {
LABEL_4:
  }
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL), v4);
LABEL_5:
  uint64_t v7 = *(unsigned int *)(a1 + 56);
  if ((int)v7 >= 1)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 8 * v7;
    do
    {
      unsigned int v10 = *(void **)(*(void *)(a1 + 64) + v8 + 8);
      if (*((char *)v10 + 23) < 0)
      {
        int64_t v11 = v10[1];
        if (v11 > 127) {
          goto LABEL_16;
        }
      }
      else
      {
        int64_t v11 = *((unsigned __int8 *)v10 + 23);
      }
      if (*a3 - (void)v4 + 14 >= v11)
      {
        *unint64_t v4 = 34;
        v4[1] = v11;
        if (*((char *)v10 + 23) < 0) {
          unsigned int v10 = (void *)*v10;
        }
        uint64_t v12 = v4 + 2;
        memcpy(v12, v10, v11);
        unint64_t v4 = &v12[v11];
        goto LABEL_14;
      }
LABEL_16:
      unint64_t v4 = (char *)sub_188A868(a3, 4, (uint64_t)v10, v4);
LABEL_14:
      v8 += 8;
    }
    while (v9 != v8);
  }
  if ((v6 & 8) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 5, (const void **)(*(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if (*(_WORD *)(a1 + 26)) {
    unint64_t v4 = sub_1886844(a1 + 16, 200, 800, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_171ABD0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = *(unsigned int *)(a1 + 56);
  uint64_t result = v2 + v3;
  if ((int)v3 >= 1)
  {
    uint64_t v5 = (uint64_t *)(*(void *)(a1 + 64) + 8);
    do
    {
      uint64_t v6 = *v5++;
      uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
      uint64_t v8 = *(void *)(v6 + 8);
      if ((v7 & 0x80u) == 0) {
        uint64_t v8 = v7;
      }
      result += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6);
      --v3;
    }
    while (v3);
  }
  int v9 = *(_DWORD *)(a1 + 40);
  if ((v9 & 0xF) == 0) {
    goto LABEL_14;
  }
  if ((v9 & 1) == 0)
  {
    if ((v9 & 2) == 0) {
      goto LABEL_9;
    }
LABEL_19:
    unint64_t v17 = *(void *)(a1 + 80) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v18 = *(unsigned __int8 *)(v17 + 23);
    uint64_t v19 = *(void *)(v17 + 8);
    if ((v18 & 0x80u) == 0) {
      uint64_t v19 = v18;
    }
    result += v19 + ((9 * (__clz(v19 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v9 & 4) == 0)
    {
LABEL_10:
      if ((v9 & 8) == 0) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    goto LABEL_22;
  }
  unint64_t v14 = *(void *)(a1 + 72) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 23);
  uint64_t v16 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    uint64_t v16 = v15;
  }
  result += v16 + ((9 * (__clz(v16 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 2) != 0) {
    goto LABEL_19;
  }
LABEL_9:
  if ((v9 & 4) == 0) {
    goto LABEL_10;
  }
LABEL_22:
  unint64_t v20 = *(void *)(a1 + 88) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v21 = *(unsigned __int8 *)(v20 + 23);
  uint64_t v22 = *(void *)(v20 + 8);
  if ((v21 & 0x80u) == 0) {
    uint64_t v22 = v21;
  }
  result += v22 + ((9 * (__clz(v22 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v9 & 8) != 0)
  {
LABEL_11:
    unint64_t v10 = *(void *)(a1 + 96) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v11 = *(unsigned __int8 *)(v10 + 23);
    uint64_t v12 = *(void *)(v10 + 8);
    if ((v11 & 0x80u) == 0) {
      uint64_t v12 = v11;
    }
    result += v12 + ((9 * (__clz(v12 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_14:
  uint64_t v13 = *(void *)(a1 + 8);
  if (v13)
  {
    unint64_t v23 = v13 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v23 + 31) < 0) {
      uint64_t v24 = *(void *)(v23 + 16);
    }
    else {
      uint64_t v24 = *(unsigned __int8 *)(v23 + 31);
    }
    result += v24;
  }
  *(_DWORD *)(a1 + 44) = result;
  return result;
}

void sub_171ADAC(uint64_t a1, uint64_t a2)
{
  if (a2 != a1)
  {
    sub_16FBD64(a1);
    sub_16FCFC4(a1, a2);
  }
}

void *sub_171ADF8@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Attribution");
}

uint64_t sub_171AE08(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  unint64_t v4 = (void *)(a1 + 8);
  *(void *)a1 = off_24D6298;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = 0;
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v5 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  *(void *)(a1 + 24) = &qword_2550250;
  int v6 = *(_DWORD *)(a2 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v7 = (uint64_t *)*v7;
    }
    sub_1881DF4((std::string **)(a1 + 24), (long long *)(*(void *)(a2 + 24) & 0xFFFFFFFFFFFFFFFELL), v7);
    int v6 = *(_DWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = &qword_2550250;
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 32), (long long *)(*(void *)(a2 + 32) & 0xFFFFFFFFFFFFFFFELL), v8);
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  return a1;
}

void sub_171AEEC(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_171AF1C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_9;
    }
  }
  else if (v4)
  {
    goto LABEL_9;
  }
  uint64_t v5 = (void ***)(a1 + 24);
  if (*(uint64_t **)(a1 + 24) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 32) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 32));
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_9:
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_171AFD4(uint64_t a1)
{
  sub_171AF1C(a1);

  operator delete();
}

uint64_t sub_171B00C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 3) == 0) {
    goto LABEL_11;
  }
  if ((v1 & 1) == 0)
  {
LABEL_5:
    if ((v1 & 2) != 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  unint64_t v2 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
  if ((*(char *)(v2 + 23) & 0x80000000) == 0)
  {
    *(unsigned char *)unint64_t v2 = 0;
    *(unsigned char *)(v2 + 23) = 0;
    goto LABEL_5;
  }
  **(unsigned char **)unint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  if ((v1 & 2) != 0)
  {
LABEL_6:
    unint64_t v3 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v3 + 23) < 0)
    {
      **(unsigned char **)unint64_t v3 = 0;
      *(void *)(v3 + 8) = 0;
    }
    else
    {
      *(unsigned char *)unint64_t v3 = 0;
      *(unsigned char *)(v3 + 23) = 0;
    }
  }
LABEL_11:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t result = a1 + 8;
  *(_DWORD *)(result + 32) = 0;
  *(_DWORD *)(result + 8) = 0;
  if (v5) {
    return sub_188B4AC((uint64_t *)result);
  }
  return result;
}

uint64_t sub_171B08C(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)BOOL v27 = a2;
  int v5 = 0;
  if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
    goto LABEL_2;
  }
  uint64_t v7 = (void *)(a1 + 8);
  while (1)
  {
    uint64_t v8 = (char *)(*(void *)v27 + 1);
    unsigned int v9 = **(unsigned char **)v27;
    if ((char)**(unsigned char **)v27 < 0)
    {
      unsigned int v10 = v9 + (*v8 << 7);
      unsigned int v9 = v10 - 128;
      if (*v8 < 0)
      {
        uint64_t v8 = (char *)sub_188C180(*(uint64_t *)v27, v10 - 128);
        unsigned int v9 = v11;
      }
      else
      {
        uint64_t v8 = (char *)(*(void *)v27 + 2);
      }
    }
    *(void *)BOOL v27 = v8;
    unsigned int v12 = v9 >> 3;
    if (v9 >> 3 == 3)
    {
      if (v9 != 26) {
        goto LABEL_14;
      }
      *(_DWORD *)(a1 + 16) |= 2u;
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (uint64_t *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (uint64_t *)*v18;
      }
      uint64_t v19 = (void *)(a1 + 32);
LABEL_29:
      uint64_t v21 = (std::string *)sub_1880F84(v19, v18);
      uint64_t v16 = (void *)sub_188C244(v21, *(char **)v27, (uint64_t)a3);
LABEL_30:
      *(void *)BOOL v27 = v16;
      if (!v16) {
        goto LABEL_43;
      }
      goto LABEL_36;
    }
    if (v12 == 2) {
      break;
    }
    if (v12 != 1 || v9 != 8) {
      goto LABEL_14;
    }
    v5 |= 4u;
    unint64_t v23 = v8 + 1;
    LODWORD(v22) = *v8;
    if ((v22 & 0x80) == 0) {
      goto LABEL_35;
    }
    int v24 = *v23;
    uint64_t v22 = v22 + (v24 << 7) - 128;
    if ((v24 & 0x80000000) == 0)
    {
      unint64_t v23 = v8 + 2;
LABEL_35:
      *(void *)BOOL v27 = v23;
      *(_DWORD *)(a1 + 40) = v22;
      goto LABEL_36;
    }
    uint64_t v25 = sub_188C138((uint64_t)v8, v22);
    *(void *)BOOL v27 = v25;
    *(_DWORD *)(a1 + 40) = v26;
    if (!v25) {
      goto LABEL_43;
    }
LABEL_36:
    if (sub_11947B8((uint64_t)a3, (char **)v27, a3[11].i32[1])) {
      goto LABEL_2;
    }
  }
  if (v9 == 18)
  {
    *(_DWORD *)(a1 + 16) |= 1u;
    uint64_t v20 = *(void *)(a1 + 8);
    uint64_t v18 = (uint64_t *)(v20 & 0xFFFFFFFFFFFFFFFCLL);
    if (v20) {
      uint64_t v18 = (uint64_t *)*v18;
    }
    uint64_t v19 = (void *)(a1 + 24);
    goto LABEL_29;
  }
LABEL_14:
  if (v9) {
    BOOL v14 = (v9 & 7) == 4;
  }
  else {
    BOOL v14 = 1;
  }
  if (!v14)
  {
    if (*v7)
    {
      uint64_t v15 = (std::string *)((*v7 & 0xFFFFFFFFFFFFFFFCLL) + 8);
    }
    else
    {
      uint64_t v15 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
      uint64_t v8 = *(char **)v27;
    }
    uint64_t v16 = sub_1885AC0(v9, v15, v8, a3);
    goto LABEL_30;
  }
  if (v8)
  {
    a3[10].i32[0] = v9 - 1;
    goto LABEL_2;
  }
LABEL_43:
  *(void *)BOOL v27 = 0;
LABEL_2:
  *(_DWORD *)(a1 + 16) |= v5;
  return *(void *)v27;
}

unsigned char *sub_171B2AC(uint64_t a1, unint64_t __dst, unint64_t *a3)
{
  unint64_t v4 = (unsigned char *)__dst;
  int v6 = *(_DWORD *)(a1 + 16);
  if ((v6 & 4) != 0)
  {
    if (*a3 <= __dst) {
      unint64_t v4 = sub_188A3FC((uint64_t)a3, __dst);
    }
    unint64_t v7 = *(int *)(a1 + 40);
    *unint64_t v4 = 8;
    v4[1] = v7;
    if (v7 > 0x7F)
    {
      v4[1] = v7 | 0x80;
      unint64_t v8 = v7 >> 7;
      v4[2] = v7 >> 7;
      v4 += 3;
      if (v7 >= 0x4000)
      {
        do
        {
          *(v4 - 1) |= 0x80u;
          unint64_t v9 = v8 >> 14;
          v8 >>= 7;
          *v4++ = v8;
        }
        while (v9);
      }
    }
    else
    {
      v4 += 2;
    }
  }
  if (v6) {
    unint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  if ((v6 & 2) != 0) {
    unint64_t v4 = sub_117A0AC(a3, 3, (const void **)(*(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL), v4);
  }
  uint64_t v10 = *(void *)(a1 + 8);
  if ((v10 & 1) == 0) {
    return v4;
  }
  unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v12 + 31) < 0)
  {
    uint64_t v13 = *(void **)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
  }
  else
  {
    uint64_t v13 = (void *)(v12 + 8);
    LODWORD(v14) = *(unsigned __int8 *)(v12 + 31);
  }
  if ((uint64_t)(*a3 - (void)v4) >= (int)v14)
  {
    uint64_t v15 = (int)v14;
    memcpy(v4, v13, (int)v14);
    v4 += v15;
    return v4;
  }

  return (unsigned char *)sub_188A528(a3, (char *)v13, v14, v4);
}

uint64_t sub_171B414(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16);
  if ((v1 & 7) == 0)
  {
    uint64_t v2 = 0;
    goto LABEL_17;
  }
  if (v1)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v4 = *(unsigned __int8 *)(v3 + 23);
    uint64_t v5 = *(void *)(v3 + 8);
    if ((v4 & 0x80u) == 0) {
      uint64_t v5 = v4;
    }
    uint64_t v2 = v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  uint64_t v2 = 0;
  if ((v1 & 2) != 0)
  {
LABEL_9:
    unint64_t v6 = *(void *)(a1 + 32) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v7 = *(unsigned __int8 *)(v6 + 23);
    uint64_t v8 = *(void *)(v6 + 8);
    if ((v7 & 0x80u) == 0) {
      uint64_t v8 = v7;
    }
    v2 += v8 + ((9 * (__clz(v8 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_12:
  if ((v1 & 4) != 0)
  {
    int v9 = *(_DWORD *)(a1 + 40);
    if (v9 < 0) {
      uint64_t v10 = 11;
    }
    else {
      uint64_t v10 = ((9 * (__clz(v9 | 1) ^ 0x1F) + 73) >> 6) + 1;
    }
    v2 += v10;
  }
LABEL_17:
  uint64_t v11 = *(void *)(a1 + 8);
  if (v11)
  {
    unint64_t v13 = v11 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v13 + 31) < 0) {
      uint64_t v14 = *(void *)(v13 + 16);
    }
    else {
      uint64_t v14 = *(unsigned __int8 *)(v13 + 31);
    }
    v2 += v14;
  }
  *(_DWORD *)(a1 + 20) = v2;
  return v2;
}

uint64_t sub_171B524()
{
  return 1;
}

void *sub_171B52C@<X0>(void *a1@<X8>)
{
  return sub_5E5C(a1, "geo3.placedata.Source");
}

void *sub_171B53C(void *a1, uint64_t a2, int a3)
{
  uint64_t v4 = a2 | 2;
  if (!a3) {
    uint64_t v4 = a2;
  }
  a1[1] = v4;
  *a1 = off_24D6318;
  sub_1882BC4((uint64_t)(a1 + 2), a2);
  a1[5] = 0;
  a1[6] = &qword_2550250;
  a1[7] = &qword_2550250;
  a1[8] = 0;
  a1[9] = 0;
  return a1;
}

void sub_171B5B0(_Unwind_Exception *a1)
{
  void *v1 = off_24E6998;
  sub_119475C(v2);
  _Unwind_Resume(a1);
}

uint64_t sub_171B5E0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 8) = 0;
  uint64_t v4 = (void *)(a1 + 8);
  *(void *)(a1 + 16) = 0;
  uint64_t v5 = a1 + 16;
  *(void *)a1 = off_24D6318;
  *(_DWORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = 0;
  uint64_t v6 = *(void *)(a2 + 8);
  if (v6) {
    sub_188B4F8((uint64_t *)(a1 + 8), (v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
  sub_1884444(v5, a2 + 16);
  *(void *)(a1 + 48) = &qword_2550250;
  int v7 = *(_DWORD *)(a2 + 40);
  if (v7)
  {
    uint64_t v8 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      uint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4((std::string **)(a1 + 48), (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL), v8);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  *(void *)(a1 + 56) = &qword_2550250;
  if ((v7 & 2) != 0)
  {
    int v9 = (uint64_t *)(*v4 & 0xFFFFFFFFFFFFFFFCLL);
    if (*v4) {
      int v9 = (uint64_t *)*v9;
    }
    sub_1881DF4((std::string **)(a1 + 56), (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL), v9);
    int v7 = *(_DWORD *)(a2 + 40);
  }
  if ((v7 & 4) != 0) {
    operator new();
  }
  *(void *)(a1 + 64) = 0;
  if ((v7 & 8) != 0) {
    operator new();
  }
  *(void *)(a1 + 72) = 0;
  return a1;
}

void sub_171B750()
{
}

uint64_t sub_171B7C8(uint64_t a1)
{
  unint64_t v3 = (uint64_t *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = (void *)(v2 & 0xFFFFFFFFFFFFFFFCLL);
  if (v2)
  {
    if (*v4) {
      goto LABEL_14;
    }
  }
  else if (v4)
  {
    goto LABEL_14;
  }
  uint64_t v5 = (void ***)(a1 + 48);
  if (*(uint64_t **)(a1 + 48) != &qword_2550250) {
    sub_1881C6C(v5);
  }
  if (*(uint64_t **)(a1 + 56) != &qword_2550250) {
    sub_1881C6C((void ***)(a1 + 56));
  }
  if ((uint64_t (***)())a1 != &off_2546E68)
  {
    if (*(void *)(a1 + 64))
    {
      sub_15B2C44();
      operator delete();
    }
    if (*(void *)(a1 + 72))
    {
      sub_145FE08();
      operator delete();
    }
  }
  if (*(unsigned char *)v3) {
    sub_10E4F74(v3);
  }
LABEL_14:
  sub_1882CC0(a1 + 16);
  *(void *)a1 = off_24E6998;
  sub_119475C(v3);
  return a1;
}

void sub_171B8D8(uint64_t a1)
{
  sub_171B7C8(a1);

  operator delete();
}

uint64_t sub_171B910(uint64_t a1)
{
  uint64_t result = (uint64_t)sub_18843A4((unsigned char *)(a1 + 16));
  int v3 = *(_DWORD *)(a1 + 40);
  if ((v3 & 0xF) == 0) {
    goto LABEL_7;
  }
  if (v3)
  {
    unint64_t v6 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
    if (*(char *)(v6 + 23) < 0)
    {
      **(unsigned char **)unint64_t v6 = 0;
      *(void *)(v6 + 8) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
    else
    {
      *(unsigned char *)unint64_t v6 = 0;
      *(unsigned char *)(v6 + 23) = 0;
      if ((v3 & 2) != 0) {
        goto LABEL_15;
      }
    }
LABEL_4:
    if ((v3 & 4) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
  if ((v3 & 2) == 0) {
    goto LABEL_4;
  }
LABEL_15:
  unint64_t v7 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
  if (*(char *)(v7 + 23) < 0)
  {
    **(unsigned char **)unint64_t v7 = 0;
    *(void *)(v7 + 8) = 0;
    if ((v3 & 4) != 0) {
      goto LABEL_19;
    }
LABEL_5:
    if ((v3 & 8) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  *(unsigned char *)unint64_t v7 = 0;
  *(unsigned char *)(v7 + 23) = 0;
  if ((v3 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_19:
  uint64_t result = sub_15B2C80(*(void *)(a1 + 64));
  if ((v3 & 8) != 0) {
LABEL_6:
  }
    uint64_t result = sub_1369BB4(*(void *)(a1 + 72));
LABEL_7:
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = a1 + 8;
  *(_DWORD *)(v4 + 32) = 0;
  if (v5)
  {
    return sub_188B4AC((uint64_t *)v4);
  }
  return result;
}

uint64_t sub_171B9F8(uint64_t a1, uint64_t a2, int32x2_t *a3)
{
  *(void *)unint64_t v23 = a2;
  if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
    return *(void *)v23;
  }
  unint64_t v6 = (void *)(a1 + 8);
  while (2)
  {
    unint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 1);
    unsigned int v8 = **(unsigned char **)v23;
    if ((char)**(unsigned char **)v23 < 0)
    {
      unsigned int v9 = v8 + (*v7 << 7);
      unsigned int v8 = v9 - 128;
      if ((char)*v7 < 0)
      {
        unint64_t v7 = (unsigned __int8 *)sub_188C180(*(uint64_t *)v23, v9 - 128);
        unsigned int v8 = v10;
      }
      else
      {
        unint64_t v7 = (unsigned __int8 *)(*(void *)v23 + 2);
      }
    }
    *(void *)unint64_t v23 = v7;
    switch(v8 >> 3)
    {
      case 1u:
        if (v8 != 10) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 1u;
        uint64_t v11 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFFFCLL);
        if (v11) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 48);
        goto LABEL_17;
      case 2u:
        if (v8 != 18) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 2u;
        uint64_t v14 = *(void *)(a1 + 8);
        unint64_t v12 = (uint64_t *)(v14 & 0xFFFFFFFFFFFFFFFCLL);
        if (v14) {
          unint64_t v12 = (uint64_t *)*v12;
        }
        unint64_t v13 = (void *)(a1 + 56);
LABEL_17:
        uint64_t v15 = (std::string *)sub_1880F84(v13, v12);
        uint64_t v16 = (uint64_t)sub_188C244(v15, *(char **)v23, (uint64_t)a3);
        goto LABEL_39;
      case 3u:
        if (v8 != 26) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 4u;
        uint64_t v17 = *(void **)(a1 + 64);
        if (!v17)
        {
          uint64_t v18 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v18 = (void *)*v18;
          }
          uint64_t v17 = sub_15C1B30((uint64_t)v18);
          *(void *)(a1 + 64) = v17;
          unint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v16 = sub_125CF74(a3, (uint64_t)v17, v7);
        goto LABEL_39;
      case 4u:
        if (v8 != 34) {
          goto LABEL_30;
        }
        *(_DWORD *)(a1 + 40) |= 8u;
        uint64_t v19 = *(void **)(a1 + 72);
        if (!v19)
        {
          uint64_t v20 = (void *)(*v6 & 0xFFFFFFFFFFFFFFFCLL);
          if (*v6) {
            uint64_t v20 = (void *)*v20;
          }
          uint64_t v19 = sub_1478C60((uint64_t)v20);
          *(void *)(a1 + 72) = v19;
          unint64_t v7 = *(unsigned __int8 **)v23;
        }
        uint64_t v16 = (uint64_t)sub_129760C(a3, (uint64_t)v19, v7);
        goto LABEL_39;
      default:
LABEL_30:
        if (v8) {
          BOOL v21 = (v8 & 7) == 4;
        }
        else {
          BOOL v21 = 1;
        }
        if (!v21)
        {
          if (v8 - 1600 > 0xF9F)
          {
            if (*v6)
            {
              uint64_t v22 = (std::string *)((*v6 & 0xFFFFFFFFFFFFFFFCLL) + 8);
            }
            else
            {
              uint64_t v22 = (std::string *)sub_188DBD8((uint64_t *)(a1 + 8));
              unint64_t v7 = *(unsigned __int8 **)v23;
            }
            uint64_t v16 = (uint64_t)sub_1885AC0(v8, v22, (char *)v7, a3);
          }
          else
          {
            uint64_t v16 = (uint64_t)sub_18859DC((uint64_t **)(a1 + 16), v8, (char *)v7, (uint64_t)&off_2546E68, (uint64_t *)(a1 + 8), a3);
          }
LABEL_39:
          *(void *)unint64_t v23 = v16;
          if (!v16) {
            return 0;
          }
          if (sub_11947B8((uint64_t)a3, (char **)v23, a3[11].i32[1])) {
            return *(void *)v23;
          }
          continue;
        }
        if (!v7) {
          return 0;
        }
        a3[10].i32[0] = v8 - 1;
        return *(void *)v23;
    }
  }
}

char *sub_171BCAC(uint64_t a1, char *a2, void *a3)
{
  uint64_t v4 = a2;
  int v6 = *(_DWORD *)(a1 + 40);
  if (v6)
  {
    uint64_t v4 = sub_117A0AC(a3, 1, (const void **)(*(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL), a2);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v4 = sub_117A0AC(a3, 2, (const void **)(*(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL), v4);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_20;
    }
    goto LABEL_14;
  }
LABEL_8:
  if (*a3 <= (unint64_t)v4) {
    uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
  }
  uint64_t v7 = *(void *)(a1 + 64);
  *uint64_t v4 = 26;
  unsigned int v8 = *(_DWORD *)(v7 + 20);
  v4[1] = v8;
  if (v8 > 0x7F) {
    unsigned int v9 = sub_188A9CC(v8, v4 + 1);
  }
  else {
    unsigned int v9 = v4 + 2;
  }
  uint64_t v4 = sub_15B2EA4(v7, v9, a3);
  if ((v6 & 8) != 0)
  {
LABEL_14:
    if (*a3 <= (unint64_t)v4) {
      uint64_t v4 = (char *)sub_188A3FC((uint64_t)a3, (int)v4);
    }
    uint64_t v10 = *(void *)(a1 + 72);
    *uint64_t v4 = 34;
    unsigned int v11 = *(_DWORD *)(v10 + 44);
    v4[1] = v11;
    if (v11 > 0x7F) {
      unint64_t v12 = sub_188A9CC(v11, v4 + 1);
    }
    else {
      unint64_t v12 = v4 + 2;
    }
    uint64_t v4 = sub_1460138(v10, v12, a3);
  }
LABEL_20:
  if (*(_WORD *)(a1 + 26)) {
    uint64_t v4 = sub_1886844(a1 + 16, 200, 700, v4, a3);
  }
  uint64_t v13 = *(void *)(a1 + 8);
  if ((v13 & 1) == 0) {
    return v4;
  }
  unint64_t v15 = v13 & 0xFFFFFFFFFFFFFFFCLL;
  if (*(char *)(v15 + 31) < 0)
  {
    uint64_t v16 = *(void **)(v15 + 8);
    uint64_t v17 = *(void *)(v15 + 16);
  }
  else
  {
    uint64_t v16 = (void *)(v15 + 8);
    LODWORD(v17) = *(unsigned __int8 *)(v15 + 31);
  }
  if (*a3 - (void)v4 >= (int)v17)
  {
    uint64_t v18 = (int)v17;
    memcpy(v4, v16, (int)v17);
    v4 += v18;
    return v4;
  }

  return (char *)sub_188A528(a3, (char *)v16, v17, v4);
}

uint64_t sub_171BEA0(uint64_t a1)
{
  uint64_t v2 = sub_1889280(a1 + 16);
  uint64_t v3 = v2;
  int v4 = *(_DWORD *)(a1 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_7;
  }
  if ((v4 & 1) == 0)
  {
    if ((v4 & 2) == 0) {
      goto LABEL_4;
    }
LABEL_12:
    unint64_t v11 = *(void *)(a1 + 56) & 0xFFFFFFFFFFFFFFFELL;
    uint64_t v12 = *(unsigned __int8 *)(v11 + 23);
    uint64_t v13 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      uint64_t v13 = v12;
    }
    v3 += v13 + ((9 * (__clz(v13 | 1) ^ 0x1F) + 73) >> 6) + 1;
    if ((v4 & 4) == 0)
    {
LABEL_5:
      if ((v4 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_6;
    }
    goto LABEL_15;
  }
  unint64_t v8 = *(void *)(a1 + 48) & 0xFFFFFFFFFFFFFFFELL;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 23);
  uint64_t v10 = *(void *)(v8 + 8);
  if ((v9 & 0x80u) == 0) {
    uint64_t v10 = v9;
  }
  uint64_t v3 = v2 + v10 + ((9 * (__clz(v10 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v4 & 4) == 0) {
    goto LABEL_5;
  }
LABEL_15:
  uint64_t v14 = sub_15B2F90(*(void *)(a1 + 64));
  v3 += v14 + ((9 * (__clz(v14 | 1) ^ 0x1F) + 73) >> 6) + 1;
  if ((v4 & 8) != 0)
  {
LABEL_6:
    uint64_t v5 = sub_1460320(*(void *)(a1 + 72));
    v3 += v5 + ((9 * (__clz(v5 | 1) ^ 0x1F) + 73) >> 6) + 1;
  }
LABEL_7:
  uint64_t v6 = *(void *)(a1 + 8);
  if (v6)
  {
    unint64_t v15 = v6 & 0xFFFFFFFFFFFFFFFCLL;
    if (*(char *)(v15 + 31) < 0) {
      uint64_t v16 = *(void *)(v15 + 16);
    }
    else {
      uint64_t v16 = *(unsigned __int8 *)(v15 + 31);
    }
    v3 += v16;
  }
  *(_DWORD *)(a1 + 44) = v3;
  return v3;
}

void sub_171C00C(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a2 + 40);
  if ((v4 & 0xF) == 0) {
    goto LABEL_29;
  }
  if (v4)
  {
    uint64_t v5 = (long long *)(*(void *)(a2 + 48) & 0xFFFFFFFFFFFFFFFELL);
    *(_DWORD *)(a1 + 40) |= 1u;
    uint64_t v6 = (std::string **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 8);
    unint64_t v8 = (uint64_t *)(v7 & 0xFFFFFFFFFFFFFFFCLL);
    if (v7) {
      unint64_t v8 = (uint64_t *)*v8;
    }
    sub_1881DF4(v6, v5, v8);
    if ((v4 & 2) == 0)
    {
LABEL_4:
      if ((v4 & 4) == 0) {
        goto LABEL_5;
      }
      goto LABEL_13;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_4;
  }
  uint64_t v9 = (long long *)(*(void *)(a2 + 56) & 0xFFFFFFFFFFFFFFFELL);
  *(_DWORD *)(a1 + 40) |= 2u;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = (uint64_t *)(v10 & 0xFFFFFFFFFFFFFFFCLL);
  if (v10) {
    unint64_t v11 = (uint64_t *)*v11;
  }
  sub_1881DF4((std::string **)(a1 + 56), v9, v11);
  if ((v4 & 4) == 0)
  {
LABEL_5:
    if ((v4 & 8) == 0) {
      goto LABEL_29;
    }
    goto LABEL_21;
  }
LABEL_13:
  *(_DWORD *)(a1 + 40) |= 4u;
  uint64_t v12 = *(std::string **)(a1 + 64);
  if (!v12)
  {
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = (void *)(v13 & 0xFFFFFFFFFFFFFFFCLL);
    if (v13) {
      uint64_t v14 = (void *)*v14;
    }
    uint64_t v12 = (std::string *)sub_15C1B30((uint64_t)v14);
    *(void *)(a1 + 64) = v12;
  }
  if (*(void *)(a2 + 64)) {
    unint64_t v15 = *(uint64_t (****)())(a2 + 64);
  }
  else {
    unint64_t v15 = &off_253F2A0;
  }
  sub_11EC100(v12, (uint64_t)v15);
  if ((v4 & 8) != 0)
  {
LABEL_21:
    *(_DWORD *)(a1 + 40) |= 8u;
    uint64_t v16 = *(void **)(a1 + 72);
    if (!v16)
    {
      uint64_t v17 = *(void *)(a1 + 8);
      uint64_t v18 = (void *)(v17 & 0xFFFFFFFFFFFFFFFCLL);
      if (v17) {
        uint64_t v18 = (void *)*v18;
      }
      uint64_t v16 = sub_1478C60((uint64_t)v18);
      *(void *)(a1 + 72) = v16;
    }
    if (*(void *)(a2 + 72)) {
      uint64_t v19 = *(uint64_t (****)())(a2 + 72);
    }
    else {
      uint64_t v19 = &off_2539400;
    }
    sub_136AC4C((uint64_t)v16, (uint64_t)v19);
  }
LABEL_29:
  sub_1884444(a1 + 16, a2 + 16);
  uint64_t v20 = *(void *)(a2 + 8);
  if (v20)
  {
    sub_188B4F8((uint64_t *)(a1 + 8), (v20 & 0xFFFFFFFFFFFFFFFCLL) + 8);
  }
}